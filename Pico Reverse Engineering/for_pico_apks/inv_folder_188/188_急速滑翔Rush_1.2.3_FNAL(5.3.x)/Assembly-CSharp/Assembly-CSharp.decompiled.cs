using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using Adventure;
using Adventure.Menu;
using Assets.TBM.Utilities.Shared;
using CodeStage.AdvancedFPSCounter;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using LerpUtil;
using Localization.Addons;
using MiniLocale.Components;
using Multiplayer.Player;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Options;
using Options.Music;
using PS4Bridge;
using Photon;
using Pico.Platform;
using Pico.Platform.Models;
using RainDropEffect;
using RootMotion.FinalIK;
using Sony.NP;
using Sony.PS4.SaveData;
using SquadPanel;
using TBM.Audio;
using TBM.Audio.Core;
using TBM.DataStore.Core.Local;
using TBM.DataStore.Core.Remote;
using TBM.Utilities.Platform.Core;
using TBM.Utilities.Quality.Core;
using TBM.Utilities.Quality.Public;
using TBM.Utilities.Shared;
using TMPro;
using UI.TimeOfDay;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.PostProcessing;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.SpatialTracking;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VRStandardAssets.Utils;
using Valve.VR;
using Viveport;
using Viveport.Internal;
using Weather;
using WeatherSystem.RainEffects;
using WeatherSystem.SnowEffects;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AircraftControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200068B")]
	public enum aircraftType
	{
		[Token(Token = "0x40029D8")]
		hangGlider,
		[Token(Token = "0x40029D9")]
		racePlane,
		[Token(Token = "0x40029DA")]
		wingSuit
	}

	[Token(Token = "0x200068C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340A0", Offset = "0xB340A0")]
	private sealed class <BoostGainPitch>d__165 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AircraftControl <>4__this;

		[Token(Token = "0x170003D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xE69200", Offset = "0xE69200", VA = "0xE69200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xE69268", Offset = "0xE69268", VA = "0xE69268", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xE67118", Offset = "0xE67118", VA = "0xE67118")]
		[DebuggerHidden]
		public <BoostGainPitch>d__165(int <>1__state)
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xE69030", Offset = "0xE69030", VA = "0xE69030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0xE69034", Offset = "0xE69034", VA = "0xE69034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xE69208", Offset = "0xE69208", VA = "0xE69208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340B0", Offset = "0xB340B0")]
	private sealed class <>c__DisplayClass174_0
	{
		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AircraftControl <>4__this;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showUI;

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xE675E4", Offset = "0xE675E4", VA = "0xE675E4")]
		public <>c__DisplayClass174_0()
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xE69010", Offset = "0xE69010", VA = "0xE69010")]
		internal void <OpenPause>b__0()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public aircraftType _aircraftType;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _rootTF;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _pitchTF;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _rollTF;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _cameraTF;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _gazeTF;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _pitchActuatorTF;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform launchPivotTF;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _gePoint;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _startPos;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _startLEA;

	[Token(Token = "0x400000C")]
	private const float _DEADZONE = 0f;

	[Token(Token = "0x400000D")]
	private const float _ROTSPEED_MAX = 70f;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] _lookTurnSensitivity;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] _lookPitchSensitivity;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _backButtonTime;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _pauseMenuActive;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject pauseMenuGO;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _controllerEnabled;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _joystickSensitivity;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _pitch;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _glideSpeed;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _drop;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] _STALLSPEED;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] _STALLDROP;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] _MINSINKSPEED;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float[] _MINSINKDROP;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] _MAXSPEED;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] _MAXDROP;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] _MAXDOWNWARDACCELERATION;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] _MAXUPWARDDECELERATION;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] _PITCHRESISTANCE;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float[] _GROUNDEFFECTDISTANCE;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float[] _GROUNDEFFECTMULTIPLIER;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool[] _POWEREDFLIGHT;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float[] _MAXTHROTTLESPEED;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] _MINTHROTTLESPEED;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float[] _ACCELERATIONRATE;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float[] _DECELERATIONRATE;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float _engineAccel;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float _engineSpeed;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _preLaunch;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _preLaunchPivotAngle;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform _lookToStartDirection;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float _launchCountDown;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool _launching;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float _launchCount;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float[] _THERMALLIFTMULTIPLIER;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _inThermal;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _thermalLift;

	[Token(Token = "0x4000033")]
	private const float _MAXTHERMALLIFT = 5.2f;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _proximityBoost;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float _accumulatedProx;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int _boostStageLastAnnounced;

	[Token(Token = "0x4000037")]
	private const float _BOOSTSPEED = 30f;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool _boostActive;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float _boostAmount;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool _showBoostHelp;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float[] _WINDSTREAKSPEEDMULTIPLIER;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ParticleSystem windStreaksPS;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private ParticleSystem.MainModule _windStreaksPSMain;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private ParticleSystem.EmissionModule _windStreaksPSEM;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private ParticleSystem _boostStreaksPS;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private ParticleSystem.MainModule _boostStreaksPSMain;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private ParticleSystem.EmissionModule _boostStreaksPSEM;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Transform _proximityStreaksTF;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ParticleSystem.EmissionModule[] _proximityStreaksPE;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private SonicBoomEffect _sonicBoom;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private GameObject _HUDgroup;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private TMP_Text hudSpeed;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private TMP_Text hudAltitude;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Transform hudHorizonAngleTF;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject hudStallWarning;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject hudThermalWarning;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject lookToStartGO;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject launchCountGO;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private TMP_Text launchCountUgui;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Material _hudMat;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float _hudFadeCount;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float _hudFadeStart;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float _hudAlpha;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Transform _boostGaugeTF;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private BoostGaugeUi _boostUi;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject _lookCircleSpawnGO;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private SpawnGameStartCircle _lookCircleSpawn;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private GameObject _goalText;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private GameObject _crosshair;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameObject _fadeToBlack;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private GameObject _splashdownText;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool _splashdown;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private GameObject _crashedText;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _crashed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool _finished;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x282")]
	private bool _goalReached;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int _boostNotchTriggered;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool _trackingGrind;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float _lastGrindStart;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private GameSplatFactory _splatFactory;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private ProximityGroundParticles _groundEmitters;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[SerializeField]
	private LaunchReticle _launchReticle;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Transform _viewRestrictorTF;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private GhostPlayer[] _ghosts;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public bool enablePathMarkers;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject pathMarker;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private float _pathMarkerCountdown;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float _startTime;

	[Token(Token = "0x400006B")]
	public const float BOOST_COEFFICIENT = 0.125f;

	[Token(Token = "0x400006C")]
	public const float BOOST_FOR_CHECKPOINT = 0.2f;

	[Token(Token = "0x400006D")]
	public const float BOOST_FOR_MARKER = 0.05f;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float normalizedTotalSpeed;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float unclampedTotalSpeed;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public Vector3 currentDir;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Vector2 currentInput;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private Quaternion _launchRotYaw;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Quaternion _launchRotPitch;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private Quaternion _launchRotRoll;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private float _lastLeftBoostSample;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private float _lastRightBoostSample;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private bool _viewLocked;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public float[] boostSamples;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37120", Offset = "0xB37120")]
	private static AircraftControl <Instance>k__BackingField;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Vector3 _lastLocalTouchLeft;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private Vector3 _lastLocalTouchRight;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private float _inputFWDSmoothVel;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private float _inputFWDLastTilt;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private float _lastControllerUpdate;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	private Vector2 _lastControllerAxis;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private Vector2 _axisVel;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private Coroutine _boostGainCoroutine;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private AudioSourceHelper _boostSrc;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private bool _pitchGain;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	private float _delay;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private float _volume;

	[Token(Token = "0x17000001")]
	public bool BoostActive
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xE5FF48", Offset = "0xE5FF48", VA = "0xE5FF48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000002")]
	public float BoostAmount
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xE5FF50", Offset = "0xE5FF50", VA = "0xE5FF50")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000003")]
	public static AircraftControl Instance
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0xE5FF58", Offset = "0xE5FF58", VA = "0xE5FF58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44414", Offset = "0xB44414")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000004")]
		[Address(RVA = "0xE5FFA8", Offset = "0xE5FFA8", VA = "0xE5FFA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44424", Offset = "0xB44424")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action<Action, bool> OnStopCountdown
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xE67304", Offset = "0xE67304", VA = "0xE67304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44498", Offset = "0xB44498")]
		add
		{
		}
		[Token(Token = "0x6000020")]
		[Address(RVA = "0xE673BC", Offset = "0xE673BC", VA = "0xE673BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444A8", Offset = "0xB444A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action<Action> OnStartCountdown
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0xE67474", Offset = "0xE67474", VA = "0xE67474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444B8", Offset = "0xB444B8")]
		add
		{
		}
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xE6752C", Offset = "0xE6752C", VA = "0xE6752C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444C8", Offset = "0xB444C8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xE5FFFC", Offset = "0xE5FFFC", VA = "0xE5FFFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xE60C38", Offset = "0xE60C38", VA = "0xE60C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xE617BC", Offset = "0xE617BC", VA = "0xE617BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xE618B0", Offset = "0xE618B0", VA = "0xE618B0")]
	private bool GetIsTouchEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xE61910", Offset = "0xE61910", VA = "0xE61910")]
	private Vector3 GetTouchLeftPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xE61A7C", Offset = "0xE61A7C", VA = "0xE61A7C")]
	private Vector3 GetTouchRightPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xE61BE8", Offset = "0xE61BE8", VA = "0xE61BE8")]
	private bool GetTouchTriggersDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xE61EB0", Offset = "0xE61EB0", VA = "0xE61EB0")]
	private void AwardBonusBoost(int playerId, int type, bool inside, int pointsToAdd, bool finalRing, int ringType)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xE62034", Offset = "0xE62034", VA = "0xE62034")]
	public void AddBoost(float amount)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xE620B4", Offset = "0xE620B4", VA = "0xE620B4")]
	public void SetBoost(float amount)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE5D284", Offset = "0xE5D284", VA = "0xE5D284")]
	public void HitCollectible(AdventureItemType type)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE62130", Offset = "0xE62130", VA = "0xE62130")]
	public void OverwriteStallSpeed(float speed)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xE62170", Offset = "0xE62170", VA = "0xE62170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xE6133C", Offset = "0xE6133C", VA = "0xE6133C")]
	private void GetPlayerInput(out float angleVDiff, out float angleHDiff)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xE66778", Offset = "0xE66778", VA = "0xE66778")]
	private void GetInputHand(bool usePoint, bool useController, out float angleVDiff, out float angleHDiff)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE664B4", Offset = "0xE664B4", VA = "0xE664B4")]
	private void GetInputAxisSmooth(out float angleVDiff, out float angleHDiff)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xE65E94", Offset = "0xE65E94", VA = "0xE65E94")]
	private void GetPlayerInputTouch(out float angleVDiff, out float angleHDiff)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xE6612C", Offset = "0xE6612C", VA = "0xE6612C")]
	private void GetInputHead(bool useLook, out float angleVDiff, out float angleHDiff)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xE66EA0", Offset = "0xE66EA0", VA = "0xE66EA0")]
	private float ClampHDiff(float input)
	{
		return default(float);
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xE66EDC", Offset = "0xE66EDC", VA = "0xE66EDC")]
	private float ClampVDiff(float input)
	{
		return default(float);
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xE66F18", Offset = "0xE66F18", VA = "0xE66F18")]
	private void SetHaptics()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xE61470", Offset = "0xE61470", VA = "0xE61470")]
	private void SetHapticsBoost(float boostLeft, float boostRight)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE6705C", Offset = "0xE6705C", VA = "0xE6705C")]
	private void StartBoostGain(AudioSourceHelper src)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE670A8", Offset = "0xE670A8", VA = "0xE670A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44434", Offset = "0xB44434")]
	private IEnumerator BoostGainPitch()
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE67144", Offset = "0xE67144", VA = "0xE67144")]
	private void StopBoostGain(float proximity = 0f)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE65A58", Offset = "0xE65A58", VA = "0xE65A58")]
	private void CheckForBoostAudio(float proximity)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE65D14", Offset = "0xE65D14", VA = "0xE65D14")]
	public void OpenPause(bool showUI = true)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE675EC", Offset = "0xE675EC", VA = "0xE675EC")]
	private void PostOpenPause(bool showUI)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE65C48", Offset = "0xE65C48", VA = "0xE65C48")]
	public void ClosePause()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE67740", Offset = "0xE67740", VA = "0xE67740")]
	public void PostClosePause()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xE6789C", Offset = "0xE6789C", VA = "0xE6789C")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xE67950", Offset = "0xE67950", VA = "0xE67950")]
	public void SkipLaunch()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xE67A2C", Offset = "0xE67A2C", VA = "0xE67A2C")]
	public void SetInThermal(bool inThermal)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE67AB8", Offset = "0xE67AB8", VA = "0xE67AB8")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE67AD4", Offset = "0xE67AD4", VA = "0xE67AD4")]
	public float GetAltitude()
	{
		return default(float);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE67B04", Offset = "0xE67B04", VA = "0xE67B04")]
	public bool HasLaunched()
	{
		return default(bool);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE67B24", Offset = "0xE67B24", VA = "0xE67B24")]
	public bool IsLaunching()
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE67B2C", Offset = "0xE67B2C", VA = "0xE67B2C")]
	public void Restart()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE683EC", Offset = "0xE683EC", VA = "0xE683EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE683F4", Offset = "0xE683F4", VA = "0xE683F4")]
	public void GoalReached()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE6856C", Offset = "0xE6856C", VA = "0xE6856C")]
	private void Splashdown()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE68570", Offset = "0xE68570", VA = "0xE68570")]
	public void Crashed(Collider collider)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE689D8", Offset = "0xE689D8", VA = "0xE689D8")]
	public void StopMotion()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xE68A08", Offset = "0xE68A08", VA = "0xE68A08")]
	public void DQed()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xE68A3C", Offset = "0xE68A3C", VA = "0xE68A3C")]
	public float GetFlightProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xE68B24", Offset = "0xE68B24", VA = "0xE68B24")]
	private void FocusChanged(bool isFocused)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xE61294", Offset = "0xE61294", VA = "0xE61294")]
	private void SetReticleFade(float fade)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE68B70", Offset = "0xE68B70", VA = "0xE68B70")]
	public AircraftControl()
	{
	}
}
[Token(Token = "0x2000003")]
public class AlphaCountdown : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _countdown;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMesh _countdownTM;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _fadeToBlack;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _fading;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE69270", Offset = "0xE69270", VA = "0xE69270")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE692F8", Offset = "0xE692F8", VA = "0xE692F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE693D4", Offset = "0xE693D4", VA = "0xE693D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE695B8", Offset = "0xE695B8", VA = "0xE695B8")]
	public AlphaCountdown()
	{
	}
}
[Token(Token = "0x2000004")]
public class SimpleGPUInstancingExample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCA63DC", Offset = "0xCA63DC", VA = "0xCA63DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCA6630", Offset = "0xCA6630", VA = "0xCA6630")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000005")]
public class SimpleMoveExample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCA6638", Offset = "0xCA6638", VA = "0xCA6638")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCA66B4", Offset = "0xCA66B4", VA = "0xCA66B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCA6970", Offset = "0xCA6970", VA = "0xCA6970")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class Smear : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000004")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000042")]
		[Address(RVA = "0xDAAA90", Offset = "0xDAAA90", VA = "0xDAAA90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xDAAA98", Offset = "0xDAAA98", VA = "0xDAAA98")]
		set
		{
		}
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xDAAAA0", Offset = "0xDAAAA0", VA = "0xDAAAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xDAAAD4", Offset = "0xDAAAD4", VA = "0xDAAAD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xDAAC58", Offset = "0xDAAC58", VA = "0xDAAC58")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
public class PostProcessExample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC53560", Offset = "0xC53560", VA = "0xC53560")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xC53614", Offset = "0xC53614", VA = "0xC53614")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xC53698", Offset = "0xC53698", VA = "0xC53698")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class SpriteMaskController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD59434", Offset = "0xD59434", VA = "0xD59434")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD594D8", Offset = "0xD594D8", VA = "0xD594D8")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x2000009")]
public class AttachOnAwake : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _objectNameToAttachTo;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE6BD04", Offset = "0xE6BD04", VA = "0xE6BD04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE6BE4C", Offset = "0xE6BE4C", VA = "0xE6BE4C")]
	public AttachOnAwake()
	{
	}
}
[Token(Token = "0x200000A")]
public class OutOfBoundsMarkerHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _marker;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] _leftBoundary;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] _rightBoundary;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] _leftEdgeStartX;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] _rightEdgeStartX;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] _leftEdgeSlope;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] _rightEdgeSlope;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD1C24C", Offset = "0xD1C24C", VA = "0xD1C24C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD1CB48", Offset = "0xD1CB48", VA = "0xD1CB48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD1CEE4", Offset = "0xD1CEE4", VA = "0xD1CEE4")]
	public OutOfBoundsMarkerHandler()
	{
	}
}
[Token(Token = "0x200000B")]
[ExecuteInEditMode]
public class CameraAspectControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 aspect;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD770FC", Offset = "0xD770FC", VA = "0xD770FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD77194", Offset = "0xD77194", VA = "0xD77194")]
	public CameraAspectControl()
	{
	}
}
[Token(Token = "0x200000C")]
public class GraphVisualizerClient
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GraphVisualizerClient s_Instance;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<PlayableGraph, string> m_Graphs;

	[Token(Token = "0x17000005")]
	public static GraphVisualizerClient instance
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xCDA98C", Offset = "0xCDA98C", VA = "0xCDA98C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xCDAA78", Offset = "0xCDAA78", VA = "0xCDAA78", Slot = "1")]
	~GraphVisualizerClient()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xCDAB1C", Offset = "0xCDAB1C", VA = "0xCDAB1C")]
	public static void Show(PlayableGraph graph, string name)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xCDABD4", Offset = "0xCDABD4", VA = "0xCDABD4")]
	public static void Hide(PlayableGraph graph)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xCDAC84", Offset = "0xCDAC84", VA = "0xCDAC84")]
	public static IEnumerable<KeyValuePair<PlayableGraph, string>> GetGraphs()
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xCDAA08", Offset = "0xCDAA08", VA = "0xCDAA08")]
	public GraphVisualizerClient()
	{
	}
}
[Token(Token = "0x200000D")]
public class CourseCompletedManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340C0", Offset = "0xB340C0")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0xD440C4", Offset = "0xD440C4", VA = "0xD440C4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xD44410", Offset = "0xD44410", VA = "0xD44410")]
		internal void <FadeToBlack>b__0()
		{
		}
	}

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _course;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] _courseEndGroup;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _countdown;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _courseCompleted;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _camSwitched;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SpawnPanelTriggered _panelSpawner;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private VRCameraFade _cameraFade;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _courseFailures;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _courseFailed;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD43B80", Offset = "0xD43B80", VA = "0xD43B80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD43CB0", Offset = "0xD43CB0", VA = "0xD43CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD43CB4", Offset = "0xD43CB4", VA = "0xD43CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xD43E9C", Offset = "0xD43E9C", VA = "0xD43E9C")]
	public void Restart()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xD44008", Offset = "0xD44008", VA = "0xD44008")]
	public void FadeToBlack(Action callback)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xD43EEC", Offset = "0xD43EEC", VA = "0xD43EEC")]
	public void SetCourse(int course)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xD440CC", Offset = "0xD440CC", VA = "0xD440CC")]
	public void CourseCompleted()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xD4419C", Offset = "0xD4419C", VA = "0xD4419C")]
	public void CourseFailed(float timeout = 2.05f)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xD43D70", Offset = "0xD43D70", VA = "0xD43D70")]
	private void SwitchCam()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xD442A8", Offset = "0xD442A8", VA = "0xD442A8")]
	private void SwitchCamPostFade()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xD443F4", Offset = "0xD443F4", VA = "0xD443F4")]
	public void SkipToResults()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xD44404", Offset = "0xD44404", VA = "0xD44404")]
	public CourseCompletedManager()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xD4440C", Offset = "0xD4440C", VA = "0xD4440C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444D8", Offset = "0xB444D8")]
	private void <SwitchCam>b__17_0()
	{
	}
}
[Token(Token = "0x200000E")]
public class DanGrassDataBlock : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D colorMap;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D splatMap;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D groundHeightMap;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D groundNormalMap;

	[Token(Token = "0x40000B3")]
	private const int CHUNK_SIZE = 512;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD4AB94", Offset = "0xD4AB94", VA = "0xD4AB94")]
	public float GetHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD4ABC0", Offset = "0xD4ABC0", VA = "0xD4ABC0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD4AEA4", Offset = "0xD4AEA4", VA = "0xD4AEA4")]
	public DanGrassDataBlock()
	{
	}
}
[Token(Token = "0x200000F")]
public class DanGrassManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTF;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D blackTex;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material grassTestMat;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D grassColorMap;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D grassNoiseMap;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int blockArraySizeX;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int blockArraySizeZ;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int blockMinX;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int blockMinZ;

	[Token(Token = "0x40000BD")]
	private const int PATCH_SIZE = 64;

	[Token(Token = "0x40000BE")]
	private const float ONE_OVER_PATCH_SIZE = 1f / 64f;

	[Token(Token = "0x40000BF")]
	private const int BLOCK_SIZE = 512;

	[Token(Token = "0x40000C0")]
	private const float ONE_OVER_BLOCK_SIZE = 0.001953125f;

	[Token(Token = "0x40000C1")]
	private const int STEP_SIZE = 8;

	[Token(Token = "0x40000C2")]
	private const float ONE_OVER_STEP_SIZE = 0.125f;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _targetPrevGridX;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _targetPrevGridZ;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform[] _grassMeshTF;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer[] _grassMeshMR;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Mesh _baseMesh;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _tick;

	[Token(Token = "0x40000C9")]
	private const int UPDATE_RATE = 60;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private DanGrassDataBlock[] _blocks;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock _props;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool checkForCamera;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _densityLimit;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _castShadows;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _FLOATING_OFFSET_ID;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int _PLAYER_WIND;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int TilesX;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int TilesZFwd;

	[Token(Token = "0x40000D3")]
	private const int TilesZBack = 2;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD4AEAC", Offset = "0xD4AEAC", VA = "0xD4AEAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD4AF68", Offset = "0xD4AF68", VA = "0xD4AF68")]
	private void OnOriginMoved(Vector3 delta)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD4B130", Offset = "0xD4B130", VA = "0xD4B130")]
	private void Attach(Transform cameraTransform, Transform parentTransform)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xD4B1C8", Offset = "0xD4B1C8", VA = "0xD4B1C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD4B28C", Offset = "0xD4B28C", VA = "0xD4B28C")]
	private void Setup()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD4BD78", Offset = "0xD4BD78", VA = "0xD4BD78")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD4C660", Offset = "0xD4C660", VA = "0xD4C660")]
	private void GenerateBaseMesh()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xD4B764", Offset = "0xD4B764", VA = "0xD4B764")]
	private void GenerateMeshInstances()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xD4C0F0", Offset = "0xD4C0F0", VA = "0xD4C0F0")]
	private void UpdateMeshData(int index, int gx, int gz)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xD4CCA8", Offset = "0xD4CCA8", VA = "0xD4CCA8")]
	private void InitBlockArray()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xD4B49C", Offset = "0xD4B49C", VA = "0xD4B49C")]
	private void GetDataBlocks()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xD4CD04", Offset = "0xD4CD04", VA = "0xD4CD04")]
	public DanGrassDataBlock GetDataBlockAtGridCoord(int bx, int by)
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xD4CD88", Offset = "0xD4CD88", VA = "0xD4CD88")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xD4CF1C", Offset = "0xD4CF1C", VA = "0xD4CF1C")]
	public DanGrassManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xDF6520", Offset = "0xDF6520", VA = "0xDF6520")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0xDF6564", Offset = "0xDF6564", VA = "0xDF6564", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xDF656C", Offset = "0xDF656C", VA = "0xDF656C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xDF660C", Offset = "0xDF660C", VA = "0xDF660C")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000012")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xDF6670", Offset = "0xDF6670", VA = "0xDF6670", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xDF6A3C", Offset = "0xDF6A3C", VA = "0xDF6A3C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xDF6AB4", Offset = "0xDF6AB4", VA = "0xDF6AB4")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB31A8C", Offset = "0xB31A8C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB31A8C", Offset = "0xB31A8C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB31A8C", Offset = "0xB31A8C")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x600007F")]
	[Address(RVA = "0xDF6ABC", Offset = "0xDF6ABC", VA = "0xDF6ABC", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xDF6B54", Offset = "0xDF6B54", VA = "0xDF6B54", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xDF6B5C", Offset = "0xDF6B5C", VA = "0xDF6B5C")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000014")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xBBE71C", Offset = "0xBBE71C", VA = "0xBBE71C", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xBBE724", Offset = "0xBBE724", VA = "0xBBE724")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000015")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000007")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000084")]
		[Address(RVA = "0xBBE72C", Offset = "0xBBE72C", VA = "0xBBE72C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xBBE734", Offset = "0xBBE734", VA = "0xBBE734", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xBBE840", Offset = "0xBBE840", VA = "0xBBE840")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000016")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000087")]
	[Address(RVA = "0xBBE8A8", Offset = "0xBBE8A8", VA = "0xBBE8A8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xBBEAD8", Offset = "0xBBEAD8", VA = "0xBBEAD8")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB31B40", Offset = "0xB31B40")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB31B40", Offset = "0xB31B40")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB31B40", Offset = "0xB31B40")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6000089")]
	[Address(RVA = "0xBBEAE0", Offset = "0xBBEAE0", VA = "0xBBEAE0", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xBBEB78", Offset = "0xBBEB78", VA = "0xBBEB78")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xC9DF88", Offset = "0xC9DF88", VA = "0xC9DF88")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000008")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0xC9DFBC", Offset = "0xC9DFBC", VA = "0xC9DFBC", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC9DFC4", Offset = "0xC9DFC4", VA = "0xC9DFC4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC9E064", Offset = "0xC9E064", VA = "0xC9E064")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200001A")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC9E0C8", Offset = "0xC9E0C8", VA = "0xC9E0C8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC9E3DC", Offset = "0xC9E3DC", VA = "0xC9E3DC", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC9E420", Offset = "0xC9E420", VA = "0xC9E420")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB31BF4", Offset = "0xB31BF4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB31BF4", Offset = "0xB31BF4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB31BF4", Offset = "0xB31BF4")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC9E428", Offset = "0xC9E428", VA = "0xC9E428", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC9E4C0", Offset = "0xC9E4C0", VA = "0xC9E4C0", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC9E4C8", Offset = "0xC9E4C8", VA = "0xC9E4C8")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xCB1B90", Offset = "0xCB1B90", VA = "0xCB1B90")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200001D")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000009")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0xCB1BCC", Offset = "0xCB1BCC", VA = "0xCB1BCC", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCB1BD4", Offset = "0xCB1BD4", VA = "0xCB1BD4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCB1C74", Offset = "0xCB1C74", VA = "0xCB1C74")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x200001E")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCB1CD8", Offset = "0xCB1CD8", VA = "0xCB1CD8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCB210C", Offset = "0xCB210C", VA = "0xCB210C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xCB2180", Offset = "0xCB2180", VA = "0xCB2180")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB31CA4", Offset = "0xB31CA4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB31CA4", Offset = "0xB31CA4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB31CA4", Offset = "0xB31CA4")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x600009C")]
	[Address(RVA = "0xCB2188", Offset = "0xCB2188", VA = "0xCB2188", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xCB2220", Offset = "0xCB2220", VA = "0xCB2220", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xCB2228", Offset = "0xCB2228", VA = "0xCB2228")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xCB2AA4", Offset = "0xCB2AA4", VA = "0xCB2AA4")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000021")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x1700000A")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xCB2AB4", Offset = "0xCB2AB4", VA = "0xCB2AB4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xCB2ABC", Offset = "0xCB2ABC", VA = "0xCB2ABC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCB2B5C", Offset = "0xCB2B5C", VA = "0xCB2B5C")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000022")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_OldTimeScale;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCB2BCC", Offset = "0xCB2BCC", VA = "0xCB2BCC", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCB2BF4", Offset = "0xCB2BF4", VA = "0xCB2BF4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCB2D90", Offset = "0xCB2D90", VA = "0xCB2D90", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xCB2D9C", Offset = "0xCB2D9C", VA = "0xCB2D9C")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB31D58", Offset = "0xB31D58")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB31D58", Offset = "0xB31D58")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCB2DAC", Offset = "0xCB2DAC", VA = "0xCB2DAC", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCB2E44", Offset = "0xCB2E44", VA = "0xCB2E44")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x200068F")]
	public enum TweenType
	{
		[Token(Token = "0x40029E2")]
		Linear,
		[Token(Token = "0x40029E3")]
		Deceleration,
		[Token(Token = "0x40029E4")]
		Harmonic,
		[Token(Token = "0x40029E5")]
		Custom
	}

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float customStartingSpeed;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float customEndingSpeed;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float inverseDuration;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 startingPosition;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion startingRotation;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve currentCurve;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationCurve m_CustomCurve;

	[Token(Token = "0x4000103")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xCB524C", Offset = "0xCB524C", VA = "0xCB524C", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xCB54F8", Offset = "0xCB54F8", VA = "0xCB54F8")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x1700000B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xCB5690", Offset = "0xCB5690", VA = "0xCB5690", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xCB5698", Offset = "0xCB5698", VA = "0xCB5698", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xCB57C8", Offset = "0xCB57C8", VA = "0xCB57C8")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000026")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xCB582C", Offset = "0xCB582C", VA = "0xCB582C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xCB5F30", Offset = "0xCB5F30", VA = "0xCB5F30")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCB5F1C", Offset = "0xCB5F1C", VA = "0xCB5F1C")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCB5F44", Offset = "0xCB5F44", VA = "0xCB5F44")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCB5E2C", Offset = "0xCB5E2C", VA = "0xCB5E2C")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCB6030", Offset = "0xCB6030", VA = "0xCB6030")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB31DE4", Offset = "0xB31DE4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB31DE4", Offset = "0xB31DE4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB31DE4", Offset = "0xB31DE4")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xCB6038", Offset = "0xCB6038", VA = "0xCB6038", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCB60D0", Offset = "0xCB60D0", VA = "0xCB60D0", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xCB60D8", Offset = "0xCB60D8", VA = "0xCB60D8")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x2000028")]
public class AnimManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340D0", Offset = "0xB340D0")]
	private sealed class <AnimSpecial>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimManager <>4__this;

		[Token(Token = "0x170003D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xE69924", Offset = "0xE69924", VA = "0xE69924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xE6998C", Offset = "0xE6998C", VA = "0xE6998C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0xE69690", Offset = "0xE69690", VA = "0xE69690")]
		[DebuggerHidden]
		public <AnimSpecial>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xE697A0", Offset = "0xE697A0", VA = "0xE697A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0xE697A4", Offset = "0xE697A4", VA = "0xE697A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0xE6992C", Offset = "0xE6992C", VA = "0xE6992C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _animCountdown;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimatorControllerParameter _currentClip;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _failSafe;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xE695C8", Offset = "0xE695C8", VA = "0xE695C8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xE69620", Offset = "0xE69620", VA = "0xE69620")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB444E8", Offset = "0xB444E8")]
	private IEnumerator AnimSpecial()
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xE696BC", Offset = "0xE696BC", VA = "0xE696BC")]
	private AnimatorControllerParameter GetAnimation()
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xE6978C", Offset = "0xE6978C", VA = "0xE6978C")]
	public AnimManager()
	{
	}
}
[Token(Token = "0x2000029")]
public class AttachToPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xE6BE54", Offset = "0xE6BE54", VA = "0xE6BE54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xE6BEF0", Offset = "0xE6BEF0", VA = "0xE6BEF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xE6BF8C", Offset = "0xE6BF8C", VA = "0xE6BF8C")]
	private void Attach(Multiplayer.Player.User user, Transform tf)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xE6C054", Offset = "0xE6C054", VA = "0xE6C054")]
	public AttachToPlayer()
	{
	}
}
[Token(Token = "0x200002A")]
public class BoostTutorial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340E0", Offset = "0xB340E0")]
	private sealed class <PlayRoutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoostTutorial <>4__this;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float initDelay;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <lastBoostLevel>5__3;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <boostIndex>5__4;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <triggeredBoostEnd>5__5;

		[Token(Token = "0x170003D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xD73240", Offset = "0xD73240", VA = "0xD73240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xD732A8", Offset = "0xD732A8", VA = "0xD732A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0xD72A5C", Offset = "0xD72A5C", VA = "0xD72A5C")]
		[DebuggerHidden]
		public <PlayRoutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xD72C88", Offset = "0xD72C88", VA = "0xD72C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0xD72C8C", Offset = "0xD72C8C", VA = "0xD72C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0xD73248", Offset = "0xD73248", VA = "0xD73248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LerpCanvasGroup boostBar;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoostGaugeUi boostFill;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LerpCanvasGroup boostHelper;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LerpCanvasGroup sprayGroup;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator anim;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteSequence groundSeq;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteSequence spraySeq;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteSequence boostHelperSeq;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LerpCanvasGroup panel;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve sequenceCurve;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject subtitles;

	[Token(Token = "0x4000117")]
	private const float seqRateLow = 0.05f;

	[Token(Token = "0x4000118")]
	private const float seqRateHigh = 0.02f;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xD72904", Offset = "0xD72904", VA = "0xD72904")]
	public void Play(float initDelay, bool inLobby, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xD729CC", Offset = "0xD729CC", VA = "0xD729CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4454C", Offset = "0xB4454C")]
	public IEnumerator PlayRoutine(float initDelay, Action callback)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xD72A88", Offset = "0xD72A88", VA = "0xD72A88")]
	private void PlayBoostSound(int boostIndex)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xD72C3C", Offset = "0xD72C3C", VA = "0xD72C3C")]
	private float GetBoostAmount(float level)
	{
		return default(float);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xD72C80", Offset = "0xD72C80", VA = "0xD72C80")]
	public BoostTutorial()
	{
	}
}
[Token(Token = "0x200002B")]
public class SpawnBoostTutorial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000692")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340F0", Offset = "0xB340F0")]
	private sealed class <SpawnGame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnBoostTutorial <>4__this;

		[Token(Token = "0x170003D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xDAF02C", Offset = "0xDAF02C", VA = "0xDAF02C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xDAF094", Offset = "0xDAF094", VA = "0xDAF094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0xDAEC48", Offset = "0xDAEC48", VA = "0xDAEC48")]
		[DebuggerHidden]
		public <SpawnGame>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0xDAEE2C", Offset = "0xDAEE2C", VA = "0xDAEE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0xDAEE30", Offset = "0xDAEE30", VA = "0xDAEE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0xDAF034", Offset = "0xDAF034", VA = "0xDAF034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject panel;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpawnBoostTutorial Instance;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLobby;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] spritesPreload;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xDAEA6C", Offset = "0xDAEA6C", VA = "0xDAEA6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xDAEBD8", Offset = "0xDAEBD8", VA = "0xDAEBD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB445B0", Offset = "0xB445B0")]
	private IEnumerator SpawnGame()
	{
		return null;
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xDAEC74", Offset = "0xDAEC74", VA = "0xDAEC74")]
	public void SpawnLobby(Action callback)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xDAEE24", Offset = "0xDAEE24", VA = "0xDAEE24")]
	public SpawnBoostTutorial()
	{
	}
}
[Token(Token = "0x200002C")]
public static class ControlScheme
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int _scheme;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float _sensitivityLook;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static float _sensitivityTilt;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static float _comfort;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static int _helmet;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static int _gripMode;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int _touch;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int _useLeftHand;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int _invertFlight;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private static int _guidelineEnabled;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static int _seenBoost;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private static int _haptics;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static int _reticle;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private static int _gazeSelect;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static float _sensitivityHoriz;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private static float _sensitivityVert;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int _invertHoriz;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private static int _autoBoost;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static int _tutorialSubtitles;

	[Token(Token = "0x400013C")]
	private const int _DEFAULT_SCHEME = 0;

	[Token(Token = "0x400013D")]
	private const float _DEFAULT_SENSITIVITY_LOOK = 1.06f;

	[Token(Token = "0x400013E")]
	private const float _DEFAULT_SENSITIVITY_TILT = 0.96f;

	[Token(Token = "0x400013F")]
	public const float _DEFAULT_COMFORT = 0.92f;

	[Token(Token = "0x4000140")]
	private const int _DEFAULT_HELMET = 1;

	[Token(Token = "0x4000141")]
	private const int _DEFAULT_TOUCH = 1;

	[Token(Token = "0x4000142")]
	private const int _DEFAULT_LEFT_HAND = 0;

	[Token(Token = "0x4000143")]
	private const int _DEFAULT_GRIP_MODE = 0;

	[Token(Token = "0x4000144")]
	private const int _DEFAULT_INVERT_FLIGHT = 1;

	[Token(Token = "0x4000145")]
	private const int _DEFAULT_GUIDELINE = 1;

	[Token(Token = "0x4000146")]
	private const int _DEFAULT_SEEN_BOOST = 0;

	[Token(Token = "0x4000147")]
	private const int _DEFAULT_HAPTIC = 1;

	[Token(Token = "0x4000148")]
	private const int _DEFAULT_RETICLE = 0;

	[Token(Token = "0x4000149")]
	private const int _DEFAULT_GAZE_SELECT = 0;

	[Token(Token = "0x400014A")]
	private const float _DEFAULT_SENSITIVITY_HORIZ = 3.4f;

	[Token(Token = "0x400014B")]
	private const float _DEFAULT_SENSITIVITY_VERT = 1.5f;

	[Token(Token = "0x400014C")]
	private const int _DEFAULT_INVERT_HORIZ = 0;

	[Token(Token = "0x400014D")]
	private const int _DEFAULT_TUTORIAL_SUBTITLES = 0;

	[Token(Token = "0x400014E")]
	private const string _SCHEME_PREF = "PP_ControlScheme";

	[Token(Token = "0x400014F")]
	private const string _SENSITIVITY_LOOK_PREF = "PP_LookControlSensitivity";

	[Token(Token = "0x4000150")]
	private const string _SENSITIVITY_TILT_PREF = "PP_TiltControlSensitivity";

	[Token(Token = "0x4000151")]
	private const string _COMFORT_PREF = "PP_ControlComfort";

	[Token(Token = "0x4000152")]
	private const string _HELMET_PREF = "PP_HelmetEnabled";

	[Token(Token = "0x4000153")]
	private const string _GRIP_MODE_PREF = "PP_GripMode";

	[Token(Token = "0x4000154")]
	private const string _TOUCH_PREF = "PP_TouchEnabled";

	[Token(Token = "0x4000155")]
	private const string _HAND_PREF = "PP_UseLeftHand";

	[Token(Token = "0x4000156")]
	private const string _INVERT_PREF = "PP_InvertFlight";

	[Token(Token = "0x4000157")]
	private const string _GUIDELINE_PREF = "PP_GuidelineEnabled";

	[Token(Token = "0x4000158")]
	private const string _GUIDELINE_PREF_TOUCHED = "PP_GuidelineTouched";

	[Token(Token = "0x4000159")]
	private const string _SEEN_BOOST_PREF = "PP_SeenBoostHelp";

	[Token(Token = "0x400015A")]
	private const string _HAPTIC_PREF = "PP_HapticsLevel";

	[Token(Token = "0x400015B")]
	private const string _RETICLE_PREF = "PP_ReticleIndex";

	[Token(Token = "0x400015C")]
	private const string _GAZE_SELECT_PREF = "PP_GazeSelect";

	[Token(Token = "0x400015D")]
	private const string _SENSITIVITY_HORIZ_PREF = "PP_SensitivityHoriz";

	[Token(Token = "0x400015E")]
	private const string _SENSITIVITY_VERT_PREF = "PP_SensitivityVert";

	[Token(Token = "0x400015F")]
	private const string _INVERT_HORIZ_PREF = "PP_InvertHoriz";

	[Token(Token = "0x4000160")]
	private const string _AUTOBOOST_PREF = "PP_AutoBoost";

	[Token(Token = "0x4000161")]
	private const string _TUTORIAL_SUBTITLES_PREF = "PP_TutorialSubtitles";

	[Token(Token = "0x4000162")]
	public const int SCHEME_LOOK = 0;

	[Token(Token = "0x4000163")]
	public const int SCHEME_TILT = 1;

	[Token(Token = "0x4000164")]
	public const int SCHEME_AXIS = 2;

	[Token(Token = "0x4000165")]
	public const int SCHEME_HAND_POINT = 3;

	[Token(Token = "0x4000166")]
	public const int SCHEME_HAND_TILT = 4;

	[Token(Token = "0x4000167")]
	public const int SCHEME_CONTROLLER_POINT = 5;

	[Token(Token = "0x4000168")]
	public const int SCHEME_CONTROLLER_TILT = 6;

	[Token(Token = "0x1700000C")]
	public static int Scheme
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xD85644", Offset = "0xD85644", VA = "0xD85644")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xD85774", Offset = "0xD85774", VA = "0xD85774")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static bool UsingTouchInput
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xD85860", Offset = "0xD85860", VA = "0xD85860")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public static bool TouchInputAvailable
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xD858EC", Offset = "0xD858EC", VA = "0xD858EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000F")]
	public static float LookSensitivity
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xD85A4C", Offset = "0xD85A4C", VA = "0xD85A4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xD85B54", Offset = "0xD85B54", VA = "0xD85B54")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public static float TiltSensitivity
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xD85C4C", Offset = "0xD85C4C", VA = "0xD85C4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xD85D54", Offset = "0xD85D54", VA = "0xD85D54")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public static float Comfort
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xD85EF0", Offset = "0xD85EF0", VA = "0xD85EF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xD85FF8", Offset = "0xD85FF8", VA = "0xD85FF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public static float ComfortNormalised
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xD860F0", Offset = "0xD860F0", VA = "0xD860F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000013")]
	public static bool Helmet
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xD86194", Offset = "0xD86194", VA = "0xD86194")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xD86290", Offset = "0xD86290", VA = "0xD86290")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static int GripMode
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xD8638C", Offset = "0xD8638C", VA = "0xD8638C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xD86480", Offset = "0xD86480", VA = "0xD86480")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public static int Reticle
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xD8656C", Offset = "0xD8656C", VA = "0xD8656C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xD86660", Offset = "0xD86660", VA = "0xD86660")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public static bool InvertFlight
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xD8674C", Offset = "0xD8674C", VA = "0xD8674C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xD86848", Offset = "0xD86848", VA = "0xD86848")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public static bool GuidelineEnabled
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xD86944", Offset = "0xD86944", VA = "0xD86944")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xD86A40", Offset = "0xD86A40", VA = "0xD86A40")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public static bool GuidelineTouched
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xD86B44", Offset = "0xD86B44", VA = "0xD86B44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000019")]
	public static bool TouchWanted
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xD85950", Offset = "0xD85950", VA = "0xD85950")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xD86BB8", Offset = "0xD86BB8", VA = "0xD86BB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public static bool UseLeftHand
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xD86CB4", Offset = "0xD86CB4", VA = "0xD86CB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xD86DE4", Offset = "0xD86DE4", VA = "0xD86DE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public static bool BoostHelpSeen
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xD86EE0", Offset = "0xD86EE0", VA = "0xD86EE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xD86FDC", Offset = "0xD86FDC", VA = "0xD86FDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static int HapticsLevel
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xD8707C", Offset = "0xD8707C", VA = "0xD8707C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xD871A0", Offset = "0xD871A0", VA = "0xD871A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public static bool GazeSelect
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xD8755C", Offset = "0xD8755C", VA = "0xD8755C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xD87694", Offset = "0xD87694", VA = "0xD87694")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public static float SensitivityHoriz
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xD87788", Offset = "0xD87788", VA = "0xD87788")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xD87890", Offset = "0xD87890", VA = "0xD87890")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public static float SensitivityVert
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xD87938", Offset = "0xD87938", VA = "0xD87938")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600010C")]
		[Address(RVA = "0xD87A3C", Offset = "0xD87A3C", VA = "0xD87A3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public static bool InvertHoriz
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0xD87AE4", Offset = "0xD87AE4", VA = "0xD87AE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010E")]
		[Address(RVA = "0xD87BE0", Offset = "0xD87BE0", VA = "0xD87BE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public static bool AutoBoost
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0xD87C84", Offset = "0xD87C84", VA = "0xD87C84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xD87D80", Offset = "0xD87D80", VA = "0xD87D80")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public static bool TutorialSubtitles
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xD87E24", Offset = "0xD87E24", VA = "0xD87E24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xD87F20", Offset = "0xD87F20", VA = "0xD87F20")]
		set
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action<int> OnSchemeChanged
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xD83FCC", Offset = "0xD83FCC", VA = "0xD83FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44614", Offset = "0xB44614")]
		add
		{
		}
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xD840B8", Offset = "0xD840B8", VA = "0xD840B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44624", Offset = "0xB44624")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action<float> OnLookSensitivityChanged
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xD841A4", Offset = "0xD841A4", VA = "0xD841A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44634", Offset = "0xB44634")]
		add
		{
		}
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xD84294", Offset = "0xD84294", VA = "0xD84294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44644", Offset = "0xB44644")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event Action<float> OnTiltSensitivityChanged
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xD84384", Offset = "0xD84384", VA = "0xD84384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44654", Offset = "0xB44654")]
		add
		{
		}
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xD84474", Offset = "0xD84474", VA = "0xD84474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44664", Offset = "0xB44664")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event Action<float> OnComfortChanged
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xD84564", Offset = "0xD84564", VA = "0xD84564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44674", Offset = "0xB44674")]
		add
		{
		}
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xD84654", Offset = "0xD84654", VA = "0xD84654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44684", Offset = "0xB44684")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event Action<bool> OnHelmetChanged
	{
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xD84744", Offset = "0xD84744", VA = "0xD84744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44694", Offset = "0xB44694")]
		add
		{
		}
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xD84834", Offset = "0xD84834", VA = "0xD84834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446A4", Offset = "0xB446A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event Action<bool> OnTouchChanged
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xD84924", Offset = "0xD84924", VA = "0xD84924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446B4", Offset = "0xB446B4")]
		add
		{
		}
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xD84A14", Offset = "0xD84A14", VA = "0xD84A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446C4", Offset = "0xB446C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event Action<bool> OnHandChanged
	{
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xD84B04", Offset = "0xD84B04", VA = "0xD84B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446D4", Offset = "0xB446D4")]
		add
		{
		}
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xD84BF4", Offset = "0xD84BF4", VA = "0xD84BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446E4", Offset = "0xB446E4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event Action<bool> OnInvertFlightChanged
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xD84CE4", Offset = "0xD84CE4", VA = "0xD84CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446F4", Offset = "0xB446F4")]
		add
		{
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xD84DD4", Offset = "0xD84DD4", VA = "0xD84DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44704", Offset = "0xB44704")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action<bool> OnGuidelineChanged
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xD84EC4", Offset = "0xD84EC4", VA = "0xD84EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44714", Offset = "0xB44714")]
		add
		{
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xD84FB4", Offset = "0xD84FB4", VA = "0xD84FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44724", Offset = "0xB44724")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event Action<int> OnGripModeChanged
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xD850A4", Offset = "0xD850A4", VA = "0xD850A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44734", Offset = "0xB44734")]
		add
		{
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xD85194", Offset = "0xD85194", VA = "0xD85194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44744", Offset = "0xB44744")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event Action<int> OnReticleChanged
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xD85284", Offset = "0xD85284", VA = "0xD85284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44754", Offset = "0xB44754")]
		add
		{
		}
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xD85374", Offset = "0xD85374", VA = "0xD85374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44764", Offset = "0xB44764")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event Action<int> OnGazeSelectChanged
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xD85464", Offset = "0xD85464", VA = "0xD85464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44774", Offset = "0xB44774")]
		add
		{
		}
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xD85554", Offset = "0xD85554", VA = "0xD85554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44784", Offset = "0xB44784")]
		remove
		{
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD85E4C", Offset = "0xD85E4C", VA = "0xD85E4C")]
	public static float GetSchemeSensitivity()
	{
		return default(float);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD8723C", Offset = "0xD8723C", VA = "0xD8723C")]
	public static bool IsFire(InputStatus status)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD872E8", Offset = "0xD872E8", VA = "0xD872E8")]
	public static bool IsFireDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD87334", Offset = "0xD87334", VA = "0xD87334")]
	public static bool IsFireUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xD87380", Offset = "0xD87380", VA = "0xD87380")]
	public static bool IsFireHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD873CC", Offset = "0xD873CC", VA = "0xD873CC")]
	public static bool IsCancel(InputStatus status)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD87478", Offset = "0xD87478", VA = "0xD87478")]
	public static bool IsCancelDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xD874C4", Offset = "0xD874C4", VA = "0xD874C4")]
	public static bool IsCancelUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD87510", Offset = "0xD87510", VA = "0xD87510")]
	public static bool IsCancelHeld()
	{
		return default(bool);
	}
}
[Token(Token = "0x200002D")]
public class DemoEndTimer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000693")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34100", Offset = "0xB34100")]
	private sealed class <EndAfterTimeRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DemoEndTimer <>4__this;

		[Token(Token = "0x170003D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xD52A30", Offset = "0xD52A30", VA = "0xD52A30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xD52A98", Offset = "0xD52A98", VA = "0xD52A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xD52890", Offset = "0xD52890", VA = "0xD52890")]
		[DebuggerHidden]
		public <EndAfterTimeRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0xD528FC", Offset = "0xD528FC", VA = "0xD528FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0xD52900", Offset = "0xD52900", VA = "0xD52900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0xD52A38", Offset = "0xD52A38", VA = "0xD52A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _endTime;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xD526B0", Offset = "0xD526B0", VA = "0xD526B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xD52778", Offset = "0xD52778", VA = "0xD52778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xD527E4", Offset = "0xD527E4", VA = "0xD527E4")]
	private void EndAfterTime(float time)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xD52810", Offset = "0xD52810", VA = "0xD52810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44794", Offset = "0xB44794")]
	private IEnumerator EndAfterTimeRoutine(float time)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD527DC", Offset = "0xD527DC", VA = "0xD527DC")]
	private void FinalQuit()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD528BC", Offset = "0xD528BC", VA = "0xD528BC")]
	public DemoEndTimer()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD528CC", Offset = "0xD528CC", VA = "0xD528CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447F8", Offset = "0xB447F8")]
	private void <Start>b__1_0()
	{
	}
}
[Token(Token = "0x200002E")]
public static class DemoHandler
{
	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD52AA0", Offset = "0xD52AA0", VA = "0xD52AA0")]
	public static void Quit()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD52AA8", Offset = "0xD52AA8", VA = "0xD52AA8")]
	public static void Quit(bool force)
	{
	}
}
[Token(Token = "0x200002F")]
public class DisableForDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600011D")]
	[Address(RVA = "0xD53DE4", Offset = "0xD53DE4", VA = "0xD53DE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xD53DE8", Offset = "0xD53DE8", VA = "0xD53DE8")]
	public DisableForDemo()
	{
	}
}
[Token(Token = "0x2000030")]
public class EnableForDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600011F")]
	[Address(RVA = "0xD584F0", Offset = "0xD584F0", VA = "0xD584F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xD584F4", Offset = "0xD584F4", VA = "0xD584F4")]
	public EnableForDemo()
	{
	}
}
[Token(Token = "0x2000031")]
public class ToggleForDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] enableForDemo;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] disableForDemo;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xCB40B8", Offset = "0xCB40B8", VA = "0xCB40B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xCB40BC", Offset = "0xCB40BC", VA = "0xCB40BC")]
	public ToggleForDemo()
	{
	}
}
[Token(Token = "0x2000032")]
public class DisableByHand : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLeft;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xD53D04", Offset = "0xD53D04", VA = "0xD53D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xD53DDC", Offset = "0xD53DDC", VA = "0xD53DDC")]
	public DisableByHand()
	{
	}
}
[Token(Token = "0x2000033")]
public class DistanceLod : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer lod0;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer lod1;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cullOnly;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _initialised;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float switchDist;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cullDist;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform _cam;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _mapIndex;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool _isRaining;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int switchOffset;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int cullOffset;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshCollider _collider;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int counter;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _extendShadows;

	[Token(Token = "0x1400000F")]
	private static event Action OnReset
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xD53DF0", Offset = "0xD53DF0", VA = "0xD53DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44808", Offset = "0xB44808")]
		add
		{
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xD53EA8", Offset = "0xD53EA8", VA = "0xD53EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44818", Offset = "0xB44818")]
		remove
		{
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xD53F60", Offset = "0xD53F60", VA = "0xD53F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xD540E8", Offset = "0xD540E8", VA = "0xD540E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD5441C", Offset = "0xD5441C", VA = "0xD5441C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD54554", Offset = "0xD54554", VA = "0xD54554")]
	public static void EnableColliders()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD545B8", Offset = "0xD545B8", VA = "0xD545B8")]
	private void EnableCollider()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD5464C", Offset = "0xD5464C", VA = "0xD5464C")]
	private void CameraSwitched(Transform cam, Transform parent)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD546A0", Offset = "0xD546A0", VA = "0xD546A0")]
	private void UpdateLod()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD548C0", Offset = "0xD548C0", VA = "0xD548C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB44828", Offset = "0xB44828")]
	private void SetLod0()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD54934", Offset = "0xD54934", VA = "0xD54934")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB44860", Offset = "0xB44860")]
	private void SetMeAsLod0()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD5499C", Offset = "0xD5499C", VA = "0xD5499C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB44898", Offset = "0xB44898")]
	private void SetChild2AsLod1()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD54A20", Offset = "0xD54A20", VA = "0xD54A20")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB448D0", Offset = "0xB448D0")]
	private void PositionLod()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD54B7C", Offset = "0xD54B7C", VA = "0xD54B7C")]
	public DistanceLod()
	{
	}
}
[Token(Token = "0x2000034")]
public class DontDestroyOnLoad : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000133")]
	[Address(RVA = "0xD54B90", Offset = "0xD54B90", VA = "0xD54B90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xD54C0C", Offset = "0xD54C0C", VA = "0xD54C0C")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x2000035")]
public class FXCollisions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000180")]
	private const int FX_HARD_LAYER = 30;

	[Token(Token = "0x4000181")]
	private const int FX_SOFT_LAYER = 31;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider _triggeredSoft;

	[Token(Token = "0x14000010")]
	public event Action<string> OnFXHardCollision
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xE8DBAC", Offset = "0xE8DBAC", VA = "0xE8DBAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44908", Offset = "0xB44908")]
		add
		{
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xE8DC50", Offset = "0xE8DC50", VA = "0xE8DC50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44918", Offset = "0xB44918")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<string> OnFXSoftCollision
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xE8DCF4", Offset = "0xE8DCF4", VA = "0xE8DCF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44928", Offset = "0xB44928")]
		add
		{
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xE8DD98", Offset = "0xE8DD98", VA = "0xE8DD98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44938", Offset = "0xB44938")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action<Collider> OnFXSoftCollisionStay
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xE8DE3C", Offset = "0xE8DE3C", VA = "0xE8DE3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44948", Offset = "0xB44948")]
		add
		{
		}
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xE8DEE0", Offset = "0xE8DEE0", VA = "0xE8DEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44958", Offset = "0xB44958")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<Collider> OnFXSoftCollisionExit
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xE8DF84", Offset = "0xE8DF84", VA = "0xE8DF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44968", Offset = "0xB44968")]
		add
		{
		}
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xE8E028", Offset = "0xE8E028", VA = "0xE8E028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44978", Offset = "0xB44978")]
		remove
		{
		}
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE8E0CC", Offset = "0xE8E0CC", VA = "0xE8E0CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE8E1A8", Offset = "0xE8E1A8", VA = "0xE8E1A8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE8E244", Offset = "0xE8E244", VA = "0xE8E244")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE8E2D8", Offset = "0xE8E2D8", VA = "0xE8E2D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE8E370", Offset = "0xE8E370", VA = "0xE8E370")]
	public FXCollisions()
	{
	}
}
[Token(Token = "0x2000036")]
public class TreeCollisionParticles : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particles;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _lifeTime;

	[Token(Token = "0x4000185")]
	private const float LifeTimeMax = 1.5f;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FXCollisions collisions;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xCB6140", Offset = "0xCB6140", VA = "0xCB6140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xCB61D4", Offset = "0xCB61D4", VA = "0xCB61D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xCB6268", Offset = "0xCB6268", VA = "0xCB6268")]
	private void OnCollision(string tag)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xCB631C", Offset = "0xCB631C", VA = "0xCB631C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xCB6394", Offset = "0xCB6394", VA = "0xCB6394")]
	public TreeCollisionParticles()
	{
	}
}
[Token(Token = "0x2000037")]
public class HeadBulletRepel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _initChildren;

	[Token(Token = "0x17000023")]
	public int Hits
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0xCE4400", Offset = "0xCE4400", VA = "0xCE4400")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xCE4350", Offset = "0xCE4350", VA = "0xCE4350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xCE443C", Offset = "0xCE443C", VA = "0xCE443C")]
	public bool IsObscuring(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xCE4510", Offset = "0xCE4510", VA = "0xCE4510")]
	public HeadBulletRepel()
	{
	}
}
[Token(Token = "0x2000038")]
public class ProjectileImpactRotate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000694")]
	public enum NormalAlign
	{
		[Token(Token = "0x40029FA")]
		Up,
		[Token(Token = "0x40029FB")]
		Down,
		[Token(Token = "0x40029FC")]
		Forward,
		[Token(Token = "0x40029FD")]
		Back,
		[Token(Token = "0x40029FE")]
		Right,
		[Token(Token = "0x40029FF")]
		Left
	}

	[Token(Token = "0x2000695")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34110", Offset = "0xB34110")]
	private sealed class <RotateRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProjectileImpactRotate <>4__this;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion from;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion to;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float time;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Easings.Functions easing;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <tick>5__2;

		[Token(Token = "0x170003DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xC55218", Offset = "0xC55218", VA = "0xC55218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xC55280", Offset = "0xC55280", VA = "0xC55280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xC54FC8", Offset = "0xC54FC8", VA = "0xC54FC8")]
		[DebuggerHidden]
		public <RotateRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xC55010", Offset = "0xC55010", VA = "0xC55010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0xC55014", Offset = "0xC55014", VA = "0xC55014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0xC55220", Offset = "0xC55220", VA = "0xC55220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _rotateTime;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Easings.Functions _rotateStyle;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NormalAlign _alignmentAxis;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _form;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _routine;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC54AE4", Offset = "0xC54AE4", VA = "0xC54AE4")]
	public void RotateToNormal(Vector3 normal)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xC54E24", Offset = "0xC54E24", VA = "0xC54E24")]
	public void StartRotation(Quaternion from, Quaternion to, float time, Easings.Functions easing)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xC54EF0", Offset = "0xC54EF0", VA = "0xC54EF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44988", Offset = "0xB44988")]
	private IEnumerator RotateRoutine(Quaternion from, Quaternion to, float time, Easings.Functions easing)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xC54FF4", Offset = "0xC54FF4", VA = "0xC54FF4")]
	public ProjectileImpactRotate()
	{
	}
}
[Token(Token = "0x2000039")]
public class ShootProjectile : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StickyProjectile _bolt;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _forceMin;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _forceMax;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _canShoot;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xCA4EDC", Offset = "0xCA4EDC", VA = "0xCA4EDC")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xCA4FEC", Offset = "0xCA4FEC", VA = "0xCA4FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xCA50C4", Offset = "0xCA50C4", VA = "0xCA50C4")]
	public void EnableFire()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xCA50D0", Offset = "0xCA50D0", VA = "0xCA50D0")]
	public ShootProjectile()
	{
	}
}
[Token(Token = "0x200003A")]
public class StickyProjectile : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _transform;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody _rigidbody;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider _collider;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 _centerOfMass;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ProjectileImpactRotate _impactRotate;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material[] _colourMats;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private MeshRenderer _renderer;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _ownerId;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Queue<StickyProjectile> _boltQueue;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private DartAudio _dartAudio;

	[Token(Token = "0x17000024")]
	private static int MaxBolts
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xDEDA9C", Offset = "0xDEDA9C", VA = "0xDEDA9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000025")]
	private static int MaxBoltsChatRestricted
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0xDEDAA4", Offset = "0xDEDAA4", VA = "0xDEDAA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000026")]
	public Rigidbody Rigidbody
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xDEDAAC", Offset = "0xDEDAAC", VA = "0xDEDAAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000027")]
	public Transform Transform
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0xDEDAB4", Offset = "0xDEDAB4", VA = "0xDEDAB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xDEDABC", Offset = "0xDEDABC", VA = "0xDEDABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xDEDB50", Offset = "0xDEDB50", VA = "0xDEDB50")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xDEDB84", Offset = "0xDEDB84", VA = "0xDEDB84")]
	public static StickyProjectile Create(StickyProjectile prefab, Vector3 pos, Quaternion rot, float force)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xDEDF50", Offset = "0xDEDF50", VA = "0xDEDF50")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xDEDFCC", Offset = "0xDEDFCC", VA = "0xDEDFCC")]
	public void SetOwner(int id, int color)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xDEE028", Offset = "0xDEE028", VA = "0xDEE028")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xDEE4A4", Offset = "0xDEE4A4", VA = "0xDEE4A4")]
	public StickyProjectile()
	{
	}
}
[Token(Token = "0x200003B")]
public class FloatingNetworkPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetworkPlayer netPlayer;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xDC4FB8", Offset = "0xDC4FB8", VA = "0xDC4FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xDC5140", Offset = "0xDC5140", VA = "0xDC5140")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xDC5270", Offset = "0xDC5270", VA = "0xDC5270")]
	private void UpdatePlayerOffset(Vector3 offset)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xDC5290", Offset = "0xDC5290", VA = "0xDC5290")]
	public FloatingNetworkPlayer()
	{
	}
}
[Token(Token = "0x200003C")]
public class FloatingObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _initPos;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xDC5298", Offset = "0xDC5298", VA = "0xDC5298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xDC5334", Offset = "0xDC5334", VA = "0xDC5334")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xDC53AC", Offset = "0xDC53AC", VA = "0xDC53AC")]
	private void AddToStaticChildren()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xDC54A4", Offset = "0xDC54A4", VA = "0xDC54A4")]
	private void MoveWithOrigin(Vector3 offset)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xDC55FC", Offset = "0xDC55FC", VA = "0xDC55FC")]
	private void SetObjAndChildrenStatic(Transform parent, bool isStatic)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xDC569C", Offset = "0xDC569C", VA = "0xDC569C")]
	public FloatingObject()
	{
	}
}
[Token(Token = "0x200003D")]
public static class FloatingOrigin
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37360", Offset = "0xB37360")]
	private static Vector3 <Offset>k__BackingField;

	[Token(Token = "0x17000028")]
	public static Vector3 Offset
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xDC56A4", Offset = "0xDC56A4", VA = "0xDC56A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB449EC", Offset = "0xB449EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xDC56F8", Offset = "0xDC56F8", VA = "0xDC56F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB449FC", Offset = "0xB449FC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action<Vector3> OnOriginMoved
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xDC5088", Offset = "0xDC5088", VA = "0xDC5088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A0C", Offset = "0xB44A0C")]
		add
		{
		}
		[Token(Token = "0x600016B")]
		[Address(RVA = "0xDC51B8", Offset = "0xDC51B8", VA = "0xDC51B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A1C", Offset = "0xB44A1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action<Vector3> OnOriginMovedDelta
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0xDC5768", Offset = "0xDC5768", VA = "0xDC5768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A2C", Offset = "0xB44A2C")]
		add
		{
		}
		[Token(Token = "0x600016D")]
		[Address(RVA = "0xDC5820", Offset = "0xDC5820", VA = "0xDC5820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A3C", Offset = "0xB44A3C")]
		remove
		{
		}
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xDC58D8", Offset = "0xDC58D8", VA = "0xDC58D8")]
	public static void MoveToBasecamp()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xDC5AA8", Offset = "0xDC5AA8", VA = "0xDC5AA8")]
	public static void MoveToPlatform()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xDC5920", Offset = "0xDC5920", VA = "0xDC5920")]
	public static void MoveOrigin(Vector3 offset)
	{
	}
}
[Token(Token = "0x200003E")]
public class FloatingParticleSystem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform _origin;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _unSub;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xDC5AEC", Offset = "0xDC5AEC", VA = "0xDC5AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xDC5C9C", Offset = "0xDC5C9C", VA = "0xDC5C9C")]
	private void MoveWithOrigin(Vector3 delta)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xDC5DCC", Offset = "0xDC5DCC", VA = "0xDC5DCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xDC5E58", Offset = "0xDC5E58", VA = "0xDC5E58")]
	public FloatingParticleSystem()
	{
	}
}
[Token(Token = "0x200003F")]
public class FloatingTrail : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TrailRenderer _trail;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _posBuffer;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xDC5E60", Offset = "0xDC5E60", VA = "0xDC5E60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xDC5EF0", Offset = "0xDC5EF0", VA = "0xDC5EF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xDC5F68", Offset = "0xDC5F68", VA = "0xDC5F68")]
	private void MoveWithOrigin(Vector3 delta)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xDC609C", Offset = "0xDC609C", VA = "0xDC609C")]
	public FloatingTrail()
	{
	}
}
[Token(Token = "0x2000040")]
public class IkCrawlFixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BodyIK ik;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _lastPos;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xCE4F84", Offset = "0xCE4F84", VA = "0xCE4F84")]
	private void Start()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xCE4FC0", Offset = "0xCE4FC0", VA = "0xCE4FC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xCE5130", Offset = "0xCE5130", VA = "0xCE5130")]
	public IkCrawlFixer()
	{
	}
}
[Token(Token = "0x2000041")]
public class OriginMover : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000696")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34120", Offset = "0xB34120")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__4_0;

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0xD1C1F8", Offset = "0xD1C1F8", VA = "0xD1C1F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xD1C200", Offset = "0xD1C200", VA = "0xD1C200")]
		internal void <Reset>b__4_0()
		{
		}
	}

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _initPos;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int moves;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _currentOffset;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD1BAFC", Offset = "0xD1BAFC", VA = "0xD1BAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD1BCA4", Offset = "0xD1BCA4", VA = "0xD1BCA4")]
	private void Reset()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD1BE1C", Offset = "0xD1BE1C", VA = "0xD1BE1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD1BEF0", Offset = "0xD1BEF0", VA = "0xD1BEF0")]
	private void OnMove(Vector3 offset)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD1BFEC", Offset = "0xD1BFEC", VA = "0xD1BFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD1C17C", Offset = "0xD1C17C", VA = "0xD1C17C")]
	public OriginMover()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD1C184", Offset = "0xD1C184", VA = "0xD1C184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A4C", Offset = "0xB44A4C")]
	private void <Start>b__3_0()
	{
	}
}
[Token(Token = "0x2000042")]
public static class GhostMediator
{
	[Token(Token = "0x40001AA")]
	private const int RECORDINGS_TO_SAVE = 1;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RecordingScorePair> _loadedFiles;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<FlightRecording> _recordings;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _lowerIsBetter;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _map;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _mode;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int _course;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly List<Multiplayer.Player.User> Ghosts;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x117789C", Offset = "0x117789C", VA = "0x117789C")]
	public static void Init(int mode, int map, int track)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1178934", Offset = "0x1178934", VA = "0x1178934")]
	public static List<FlightRecording> GetGhostRecordings(out List<Multiplayer.Player.User> ghosts)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1177A6C", Offset = "0x1177A6C", VA = "0x1177A6C")]
	private static string GetFileName(int place)
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1178B70", Offset = "0x1178B70", VA = "0x1178B70")]
	public static bool UseGhosts(int mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1178B88", Offset = "0x1178B88", VA = "0x1178B88")]
	public static void ReportScore(RecordingScorePair recording)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1178E8C", Offset = "0x1178E8C", VA = "0x1178E8C")]
	private static int SortRecordings(RecordingScorePair s1, RecordingScorePair s2)
	{
		return default(int);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1177C50", Offset = "0x1177C50", VA = "0x1177C50")]
	private static FlightRecording LoadRecordingFromFile(byte[] bytes)
	{
		return default(FlightRecording);
	}
}
[Token(Token = "0x2000043")]
public struct RecordingScorePair
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte[] recording;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float score;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xBE526C", Offset = "0xBE526C", VA = "0xBE526C")]
	public RecordingScorePair(byte[] recording, float score)
	{
	}
}
[Token(Token = "0x2000044")]
public class GlobalTextureScroll : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB37390", Offset = "0xB37390")]
	public Material arrowMat;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 arrowScrolloffset;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB373C8", Offset = "0xB373C8")]
	public Material waterMat;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 waterScrolloffset;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material waterMat2;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 waterScrolloffset2;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1183EB4", Offset = "0x1183EB4", VA = "0x1183EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x11840E8", Offset = "0x11840E8", VA = "0x11840E8")]
	public GlobalTextureScroll()
	{
	}
}
[Token(Token = "0x2000045")]
public class GoggleDustEffect : GoggleEffect
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AircraftControl _player;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve alphaTimeCurve;

	[Token(Token = "0x40001BD")]
	private const float PlayerZCeil = 7300f;

	[Token(Token = "0x40001BE")]
	private const float PlayerZFloor = 0f;

	[Token(Token = "0x40001BF")]
	private const float ShaderCeil = 2.2f;

	[Token(Token = "0x40001C0")]
	private const float ShaderFloor = 1.2f;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xCD89E0", Offset = "0xCD89E0", VA = "0xCD89E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xCD8AF0", Offset = "0xCD8AF0", VA = "0xCD8AF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xCD8BB4", Offset = "0xCD8BB4", VA = "0xCD8BB4", Slot = "4")]
	public override void Init(AircraftControl player, Transform camera)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xCD89EC", Offset = "0xCD89EC", VA = "0xCD89EC")]
	private void SetEffect(float fadeIn)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xCD8BBC", Offset = "0xCD8BBC", VA = "0xCD8BBC")]
	public GoggleDustEffect()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class GoggleEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000193")]
	public abstract void Init(AircraftControl player, Transform camera);

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xCD8BC4", Offset = "0xCD8BC4", VA = "0xCD8BC4")]
	protected GoggleEffect()
	{
	}
}
[Token(Token = "0x2000047")]
public class GoggleSpeedEffect : GoggleEffect
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AircraftControl _player;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x40001C3")]
	private const float PlayerSpeedCeil = 1.1f;

	[Token(Token = "0x40001C4")]
	private const float PlayerSpeedFloor = 0.7f;

	[Token(Token = "0x40001C5")]
	private const float ShaderCeil = 2.2f;

	[Token(Token = "0x40001C6")]
	private const float ShaderFloor = 1.2f;

	[Token(Token = "0x40001C7")]
	private const float PlayerZCeil = 7300f;

	[Token(Token = "0x40001C8")]
	private const float PlayerZFloor = 0f;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothing;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _lastEffectAmount;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCD8F78", Offset = "0xCD8F78", VA = "0xCD8F78", Slot = "4")]
	public override void Init(AircraftControl player, Transform camera)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCD8F80", Offset = "0xCD8F80", VA = "0xCD8F80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xCD9020", Offset = "0xCD9020", VA = "0xCD9020")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xCD8FB4", Offset = "0xCD8FB4", VA = "0xCD8FB4")]
	private void SetEffect(float amount)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xCD9150", Offset = "0xCD9150", VA = "0xCD9150")]
	public GoggleSpeedEffect()
	{
	}
}
[Token(Token = "0x2000048")]
public class SkyTimeAccessor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkyManager sky;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SkyTimeAccessor Instance;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xDAA794", Offset = "0xDAA794", VA = "0xDAA794")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xDAA7E8", Offset = "0xDAA7E8", VA = "0xDAA7E8")]
	public static float NormalisedTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xDAA898", Offset = "0xDAA898", VA = "0xDAA898")]
	public SkyTimeAccessor()
	{
	}
}
[Token(Token = "0x2000049")]
public class GoggleFX : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mainCamera;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AircraftControl player;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FXCollisions fxCollisions;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject condensationPrefab;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject frostPrefab;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dustPrefab;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rainPrefab;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xCD8BCC", Offset = "0xCD8BCC", VA = "0xCD8BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xCD8D50", Offset = "0xCD8D50", VA = "0xCD8D50")]
	private GameObject SpawnEffect(GameObject toSpawn)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xCD8F70", Offset = "0xCD8F70", VA = "0xCD8F70")]
	public GoggleFX()
	{
	}
}
[Token(Token = "0x200004A")]
public class MirrorRotation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD3E984", Offset = "0xD3E984", VA = "0xD3E984")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xD3EA48", Offset = "0xD3EA48", VA = "0xD3EA48")]
	public MirrorRotation()
	{
	}
}
[Token(Token = "0x200004B")]
public class GoggleToggle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera nearCamera;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject goggles;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xCD9160", Offset = "0xCD9160", VA = "0xCD9160")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xCD91FC", Offset = "0xCD91FC", VA = "0xCD91FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xCD9298", Offset = "0xCD9298", VA = "0xCD9298")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xCD9334", Offset = "0xCD9334", VA = "0xCD9334")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xCD93A4", Offset = "0xCD93A4", VA = "0xCD93A4")]
	private void Toggle(bool isActive)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xCD94D0", Offset = "0xCD94D0", VA = "0xCD94D0")]
	public GoggleToggle()
	{
	}
}
[Token(Token = "0x200004C")]
public class InitStateMachine : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OculusPartyMediator _partyMediator;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xCE7108", Offset = "0xCE7108", VA = "0xCE7108")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xCE717C", Offset = "0xCE717C", VA = "0xCE717C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xCE71F0", Offset = "0xCE71F0", VA = "0xCE71F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xCE7214", Offset = "0xCE7214", VA = "0xCE7214")]
	private void OnInitialized()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xCE7218", Offset = "0xCE7218", VA = "0xCE7218")]
	public InitStateMachine()
	{
	}
}
[Token(Token = "0x200004D")]
public class LaunchReticle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material[] _materials;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float[] _maxAlphas;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _reticles;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xCEB074", Offset = "0xCEB074", VA = "0xCEB074")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xCEB164", Offset = "0xCEB164", VA = "0xCEB164")]
	public void SetFade(float amount)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xCEB0E4", Offset = "0xCEB0E4", VA = "0xCEB0E4")]
	public void SetReticle(int index)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xCEB264", Offset = "0xCEB264", VA = "0xCEB264")]
	public LaunchReticle()
	{
	}
}
[Token(Token = "0x200004E")]
public static class LayerConstants
{
	[Token(Token = "0x40001DB")]
	public const int DEFAULT = 0;

	[Token(Token = "0x40001DC")]
	public const int TRANSPARENT_FX = 1;

	[Token(Token = "0x40001DD")]
	public const int IGNORE_RAYCAST = 2;

	[Token(Token = "0x40001DE")]
	public const int WATER = 4;

	[Token(Token = "0x40001DF")]
	public const int UI = 5;

	[Token(Token = "0x40001E0")]
	public const int COLLISION_GROUND = 8;

	[Token(Token = "0x40001E1")]
	public const int COLLISION_RINGS = 9;

	[Token(Token = "0x40001E2")]
	public const int COLLISION_THERMALS = 10;

	[Token(Token = "0x40001E3")]
	public const int COLLISION_PLAYER_RIGIDBODY = 11;

	[Token(Token = "0x40001E4")]
	public const int COLLISION_BOUNDARY = 12;

	[Token(Token = "0x40001E5")]
	public const int UNATURE_TERRAIN = 13;

	[Token(Token = "0x40001E6")]
	public const int LOD_FAR = 14;

	[Token(Token = "0x40001E7")]
	public const int LOD_MID = 15;

	[Token(Token = "0x40001E8")]
	public const int LOD_NEAR = 16;

	[Token(Token = "0x40001E9")]
	public const int RAIN = 17;

	[Token(Token = "0x40001EA")]
	public const int SKYBOX = 18;

	[Token(Token = "0x40001EB")]
	public const int LOADING_VIEW = 19;

	[Token(Token = "0x40001EC")]
	public const int FX_SENSOR = 20;

	[Token(Token = "0x40001ED")]
	public const int CHARACTER = 21;

	[Token(Token = "0x40001EE")]
	public const int PROP_AUDIO = 22;

	[Token(Token = "0x40001EF")]
	public const int RESULTS_PROPS = 23;

	[Token(Token = "0x40001F0")]
	public const int GRABBER = 24;

	[Token(Token = "0x40001F1")]
	public const int GRABBABLE = 25;

	[Token(Token = "0x40001F2")]
	public const int KNOCKER = 26;

	[Token(Token = "0x40001F3")]
	public const int KNOCKABLE = 27;

	[Token(Token = "0x40001F4")]
	public const int GRIPPABLE = 28;

	[Token(Token = "0x40001F5")]
	public const int CALIBRATION = 29;

	[Token(Token = "0x40001F6")]
	public const int FX_HARD = 30;

	[Token(Token = "0x40001F7")]
	public const int FX_SOFT = 31;
}
[Token(Token = "0x200004F")]
public interface ILeaderboard
{
	[Token(Token = "0x60001B1")]
	string Suffix();

	[Token(Token = "0x60001B2")]
	void FetchLeaderboard(int mode, int map, int courseIndex, bool isFriends, [Optional] Action<Result<LeaderboardData>> callback, int entriesLimit = 10);

	[Token(Token = "0x60001B3")]
	void UpdateLeaderboard(int mode, int map, int courseIndex, long score, Action<Result<int>> callback);
}
[Token(Token = "0x2000050")]
public struct LeaderboardData
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<KeyValuePair<string, long>> entries;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int playerIndex;
}
[Token(Token = "0x2000051")]
public static class LeaderboardMediator
{
	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34130", Offset = "0xB34130")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int courseIndex;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int mode;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int map;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isFriends;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result<LeaderboardData>> callback;

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xCEC068", Offset = "0xCEC068", VA = "0xCEC068")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0xCEC4EC", Offset = "0xCEC4EC", VA = "0xCEC4EC")]
		internal void <FetchLeaderboardData>b__0(Result<LeaderboardData> fetchResult)
		{
		}
	}

	[Token(Token = "0x2000698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34140", Offset = "0xB34140")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0xCEC264", Offset = "0xCEC264", VA = "0xCEC264")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xCECB00", Offset = "0xCECB00", VA = "0xCECB00")]
		internal void <UpdateLeaderboardData>b__0(Result<int> updateResult)
		{
		}
	}

	[Token(Token = "0x2000699")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34150", Offset = "0xB34150")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool sortByLowest;

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0xCEC468", Offset = "0xCEC468", VA = "0xCEC468")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0xCECC08", Offset = "0xCECC08", VA = "0xCECC08")]
		internal int <SortLeaderboard>b__0(KeyValuePair<string, long> s1, KeyValuePair<string, long> s2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ILeaderboard _interface;

	[Token(Token = "0x17000029")]
	public static ILeaderboard Interface
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xCEBFE0", Offset = "0xCEBFE0", VA = "0xCEBFE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCEB6F0", Offset = "0xCEB6F0", VA = "0xCEB6F0")]
	public static void FetchLeaderboardData(int mode, int map, int courseIndex, bool isFriends, Action<Result<LeaderboardData>> callback, int entriesLimit = 10)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xCEC070", Offset = "0xCEC070", VA = "0xCEC070")]
	public static void UpdateLeaderboardData(int mode, int map, int courseIndex, long score, [Optional] Action<bool> callback)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCEC26C", Offset = "0xCEC26C", VA = "0xCEC26C")]
	public static LeaderboardData SortLeaderboard(LeaderboardData input, bool sortByLowest, bool FillWithBlanks)
	{
		return default(LeaderboardData);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xCEC470", Offset = "0xCEC470", VA = "0xCEC470")]
	private static int CompareScore(KeyValuePair<string, long> s1, KeyValuePair<string, long> s2, bool sortByLowest)
	{
		return default(int);
	}
}
[Token(Token = "0x2000052")]
public class MockLeaderboards : ILeaderboard
{
	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xBB7B68", Offset = "0xBB7B68", VA = "0xBB7B68", Slot = "4")]
	public string Suffix()
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xBB7BB0", Offset = "0xBB7BB0", VA = "0xBB7BB0", Slot = "5")]
	public void FetchLeaderboard(int mode, int map, int courseIndex, bool isFriends, Action<Result<LeaderboardData>> callback, int entriesLimit = 10)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xBB7EA8", Offset = "0xBB7EA8", VA = "0xBB7EA8", Slot = "6")]
	public void UpdateLeaderboard(int mode, int map, int courseIndex, long score, Action<Result<int>> callback)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xBB80D8", Offset = "0xBB80D8", VA = "0xBB80D8")]
	public MockLeaderboards()
	{
	}
}
[Token(Token = "0x2000053")]
public class OculusLeaderboards : ILeaderboard
{
	[Token(Token = "0x200069A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34160", Offset = "0xB34160")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardData leaderboardData;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Result<LeaderboardData> result;

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x105E9AC", Offset = "0x105E9AC", VA = "0x105E9AC")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x105EC40", Offset = "0x105EC40", VA = "0x105EC40")]
		internal void <OnLeaderboardEntriesFetched>b__0(Oculus.Platform.Message<LeaderboardEntryList> msg)
		{
		}
	}

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Action<Result<LeaderboardData>> _onFetchComplete;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string _leaderboardId;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x105E044", Offset = "0x105E044", VA = "0x105E044", Slot = "4")]
	public string Suffix()
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x105E08C", Offset = "0x105E08C", VA = "0x105E08C", Slot = "5")]
	public void FetchLeaderboard(int mode, int map, int courseIndex, bool isFriends, Action<Result<LeaderboardData>> callback, int entriesLimit = 10)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x105E38C", Offset = "0x105E38C", VA = "0x105E38C")]
	private static void OnLeaderboardEntriesFetched(Oculus.Platform.Message<LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x105E9B4", Offset = "0x105E9B4", VA = "0x105E9B4", Slot = "6")]
	public void UpdateLeaderboard(int mode, int map, int courseIndex, long score, Action<Result<int>> callback)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x105EBC8", Offset = "0x105EBC8", VA = "0x105EBC8")]
	public OculusLeaderboards()
	{
	}
}
[Token(Token = "0x2000054")]
public class PlaystationLeaderboards : ILeaderboard
{
	[Token(Token = "0x200069B")]
	private struct RankPair
	{
		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long score;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint place;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;
	}

	[Token(Token = "0x200069C")]
	private struct ModeMap
	{
		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int mode;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int map;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int levels;

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0xC51358", Offset = "0xC51358", VA = "0xC51358")]
		public ModeMap(int mode, int map, int levels = 20)
		{
		}
	}

	[Token(Token = "0x200069D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34170", Offset = "0xB34170")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaystationLeaderboards <>4__this;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mode;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int map;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int courseIndex;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isFriends;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Result<LeaderboardData>> callback;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int entriesLimit;

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0xC4F7C8", Offset = "0xC4F7C8", VA = "0xC4F7C8")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xC51364", Offset = "0xC51364", VA = "0xC51364")]
		internal void <FetchLeaderboard>b__0(Result<bool> checkResult)
		{
		}
	}

	[Token(Token = "0x200069E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34180", Offset = "0xB34180")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Result<LeaderboardData> result;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Result<LeaderboardData>> callback;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaystationLeaderboards <>4__this;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint id;

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0xC4F980", Offset = "0xC4F980", VA = "0xC4F980")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xC51530", Offset = "0xC51530", VA = "0xC51530")]
		internal void <Fetch>b__0(Result<LeaderboardData> r)
		{
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0xC515F0", Offset = "0xC515F0", VA = "0xC515F0")]
		internal void <Fetch>b__1(Result<LeaderboardData> r)
		{
		}
	}

	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34190", Offset = "0xB34190")]
	private sealed class <>c__DisplayClass2_1
	{
		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Result<LeaderboardData> r;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass2_0 CS$<>8__locals1;

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0xC51748", Offset = "0xC51748", VA = "0xC51748")]
		public <>c__DisplayClass2_1()
		{
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0xC51750", Offset = "0xC51750", VA = "0xC51750")]
		internal void <Fetch>b__2(Result<RankPair> r2)
		{
		}
	}

	[Token(Token = "0x20006A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341A0", Offset = "0xB341A0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<LeaderboardData>> callback;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaystationLeaderboards <>4__this;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint range;

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xC50350", Offset = "0xC50350", VA = "0xC50350")]
		public <>c__DisplayClass3_0()
		{
		}
	}

	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341B0", Offset = "0xB341B0")]
	private sealed class <>c__DisplayClass3_1
	{
		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserProfiles.LocalLoginUserId user;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public <>c__DisplayClass3_0 CS$<>8__locals1;

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0xC50358", Offset = "0xC50358", VA = "0xC50358")]
		public <>c__DisplayClass3_1()
		{
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0xC5185C", Offset = "0xC5185C", VA = "0xC5185C")]
		internal void <GetTopWorldRanks>b__0(NpCallbackEvent npCB)
		{
		}
	}

	[Token(Token = "0x20006A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341C0", Offset = "0xB341C0")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<LeaderboardData>> callback;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaystationLeaderboards <>4__this;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint range;

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0xC50360", Offset = "0xC50360", VA = "0xC50360")]
		public <>c__DisplayClass4_0()
		{
		}
	}

	[Token(Token = "0x20006A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341D0", Offset = "0xB341D0")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserProfiles.LocalLoginUserId user;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public <>c__DisplayClass4_0 CS$<>8__locals1;

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0xC50368", Offset = "0xC50368", VA = "0xC50368")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0xC51BB8", Offset = "0xC51BB8", VA = "0xC51BB8")]
		internal void <GetTopFriendsScores>b__0(NpCallbackEvent npCB)
		{
		}
	}

	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341E0", Offset = "0xB341E0")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RankPair>> callback;

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0xC509D8", Offset = "0xC509D8", VA = "0xC509D8")]
		public <>c__DisplayClass6_0()
		{
		}
	}

	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341F0", Offset = "0xB341F0")]
	private sealed class <>c__DisplayClass6_1
	{
		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Ranking.UsersRanksResponse response;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UserProfiles.LocalLoginUserId localUser;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public <>c__DisplayClass6_0 CS$<>8__locals1;

		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0xC509E0", Offset = "0xC509E0", VA = "0xC509E0")]
		public <>c__DisplayClass6_1()
		{
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0xC51F14", Offset = "0xC51F14", VA = "0xC51F14")]
		internal void <GetUserWorldPosition>b__0(NpCallbackEvent npCB)
		{
		}
	}

	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34200", Offset = "0xB34200")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Result<int> updateResult;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Result<int>> callback;

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0xC50E58", Offset = "0xC50E58", VA = "0xC50E58")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0xC521FC", Offset = "0xC521FC", VA = "0xC521FC")]
		internal void <UpdateLeaderboard>b__0(NpCallbackEvent npEvent)
		{
		}
	}

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ModeMap> idOrders;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xC4F694", Offset = "0xC4F694", VA = "0xC4F694", Slot = "4")]
	public string Suffix()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xC4F6DC", Offset = "0xC4F6DC", VA = "0xC4F6DC", Slot = "5")]
	public void FetchLeaderboard(int mode, int map, int courseIndex, bool isFriends, Action<Result<LeaderboardData>> callback, int entriesLimit = 10)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xC4F7D0", Offset = "0xC4F7D0", VA = "0xC4F7D0")]
	private void Fetch(int mode, int map, int courseIndex, bool isFriends, Action<Result<LeaderboardData>> callback, int entriesLimit = 10)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xC4FF7C", Offset = "0xC4FF7C", VA = "0xC4FF7C")]
	private void GetTopWorldRanks(uint id, uint range, Action<Result<LeaderboardData>> callback)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC4FBCC", Offset = "0xC4FBCC", VA = "0xC4FBCC")]
	private void GetTopFriendsScores(uint id, uint range, Action<Result<LeaderboardData>> callback)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC50370", Offset = "0xC50370", VA = "0xC50370")]
	private LeaderboardData GetLeaderboardData(Ranking.ScoreRankData[] rankings, UserProfiles.LocalLoginUserId user, int length, uint range)
	{
		return default(LeaderboardData);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC505B4", Offset = "0xC505B4", VA = "0xC505B4")]
	private void GetUserWorldPosition(uint id, Action<Result<RankPair>> callback)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC509E8", Offset = "0xC509E8", VA = "0xC509E8", Slot = "6")]
	public void UpdateLeaderboard(int mode, int map, int courseIndex, long score, Action<Result<int>> callback)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC4F988", Offset = "0xC4F988", VA = "0xC4F988")]
	private bool GetBoardId(int mode, int map, int course, out uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC50E60", Offset = "0xC50E60", VA = "0xC50E60")]
	private string GetBoardName(int mode, int map, int course)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC51020", Offset = "0xC51020", VA = "0xC51020")]
	public void PrintBoardId(int mode, int map, int course)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xC511F8", Offset = "0xC511F8", VA = "0xC511F8")]
	public PlaystationLeaderboards()
	{
	}
}
[Token(Token = "0x2000055")]
public class LevelData : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37440", Offset = "0xB37440")]
	private static bool <Initialised>k__BackingField;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<Map> Maps;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyLevelInfo info;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37450", Offset = "0xB37450")]
	private static LobbyLevelInfo <Info>k__BackingField;

	[Token(Token = "0x1700002A")]
	public static bool Initialised
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xCEE03C", Offset = "0xCEE03C", VA = "0xCEE03C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A5C", Offset = "0xB44A5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xCEE0A4", Offset = "0xCEE0A4", VA = "0xCEE0A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A6C", Offset = "0xB44A6C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public static LobbyLevelInfo Info
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xCEE114", Offset = "0xCEE114", VA = "0xCEE114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A7C", Offset = "0xB44A7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xCEE17C", Offset = "0xCEE17C", VA = "0xCEE17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A8C", Offset = "0xB44A8C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xCEE1E8", Offset = "0xCEE1E8", VA = "0xCEE1E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xCEE2D8", Offset = "0xCEE2D8", VA = "0xCEE2D8")]
	public void ExtractLevelInfo(LobbyLevelInfo levelInfo)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xCEE500", Offset = "0xCEE500", VA = "0xCEE500")]
	public LevelData()
	{
	}
}
[Token(Token = "0x2000056")]
public struct Map
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string scene;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int trackAmount;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CourseWeatherTime[] dynamicWeather;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] staticWeather;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] courseMobileVariants;
}
[Token(Token = "0x2000057")]
public class LineBetweenPoints : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer line;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xDF6FDC", Offset = "0xDF6FDC", VA = "0xDF6FDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xDF7050", Offset = "0xDF7050", VA = "0xDF7050")]
	public LineBetweenPoints()
	{
	}
}
[Token(Token = "0x2000058")]
public static class LoadingTips
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<string> tips;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _index;

	[Token(Token = "0x1700002C")]
	private static int _Index
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xE0DF74", Offset = "0xE0DF74", VA = "0xE0DF74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xE0E084", Offset = "0xE0E084", VA = "0xE0E084")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	private static bool _UseOrder
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xE0E124", Offset = "0xE0E124", VA = "0xE0E124")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xE0E1A4", Offset = "0xE0E1A4", VA = "0xE0E1A4")]
	public static string GetTip()
	{
		return null;
	}
}
[Token(Token = "0x2000059")]
public class SetLoadingTip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeTextMeshPro tipText;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xCA46E8", Offset = "0xCA46E8", VA = "0xCA46E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xCA47B0", Offset = "0xCA47B0", VA = "0xCA47B0")]
	public SetLoadingTip()
	{
	}
}
[Token(Token = "0x200005A")]
public class LobbyStrapDamping : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint hingeJoint;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _lastVel;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _wasRising;

	[Token(Token = "0x4000210")]
	private const float RESTING_OCS_PEAK = 25f;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD36A80", Offset = "0xD36A80", VA = "0xD36A80")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD36BB4", Offset = "0xD36BB4", VA = "0xD36BB4")]
	public LobbyStrapDamping()
	{
	}
}
[Token(Token = "0x200005B")]
public class ManualReflectionProbe : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Cubemap outputMap;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int size;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe probe;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD3B9C8", Offset = "0xD3B9C8", VA = "0xD3B9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD3BA40", Offset = "0xD3BA40", VA = "0xD3BA40")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD3BB64", Offset = "0xD3BB64", VA = "0xD3BB64")]
	public ManualReflectionProbe()
	{
	}
}
[Token(Token = "0x200005C")]
public class MaterialPreload : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MaterialPreload instance;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD3CB5C", Offset = "0xD3CB5C", VA = "0xD3CB5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD36A20", Offset = "0xD36A20", VA = "0xD36A20")]
	public void Clear()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD3CBB0", Offset = "0xD3CBB0", VA = "0xD3CBB0")]
	public MaterialPreload()
	{
	}
}
[Token(Token = "0x200005D")]
public class BasecampGrass : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject grassLow;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject grassHigh;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _grass;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xE6D59C", Offset = "0xE6D59C", VA = "0xE6D59C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xE6D7A8", Offset = "0xE6D7A8", VA = "0xE6D7A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xE6D8BC", Offset = "0xE6D8BC", VA = "0xE6D8BC")]
	private void EnableGrass()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xE6D8DC", Offset = "0xE6D8DC", VA = "0xE6D8DC")]
	private void DisableGrass()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xE6D8FC", Offset = "0xE6D8FC", VA = "0xE6D8FC")]
	public BasecampGrass()
	{
	}
}
[Token(Token = "0x200005E")]
public class BasecampWater : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oceanSmall;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oceanBig;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xE6D904", Offset = "0xE6D904", VA = "0xE6D904")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xE6D9FC", Offset = "0xE6D9FC", VA = "0xE6D9FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xE6DAC8", Offset = "0xE6DAC8", VA = "0xE6DAC8")]
	private void EnableGrass()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xE6DB0C", Offset = "0xE6DB0C", VA = "0xE6DB0C")]
	private void DisableGrass()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xE6DB50", Offset = "0xE6DB50", VA = "0xE6DB50")]
	public BasecampWater()
	{
	}
}
[Token(Token = "0x200005F")]
public class GamePathOnOff : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x11714D8", Offset = "0x11714D8", VA = "0x11714D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x11715E8", Offset = "0x11715E8", VA = "0x11715E8")]
	public GamePathOnOff()
	{
	}
}
[Token(Token = "0x2000060")]
public class AxisRotator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Axis;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float smooth;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xE6C5F0", Offset = "0xE6C5F0", VA = "0xE6C5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xE6C5F4", Offset = "0xE6C5F4", VA = "0xE6C5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xE6C6BC", Offset = "0xE6C6BC", VA = "0xE6C6BC")]
	public AxisRotator()
	{
	}
}
[Token(Token = "0x2000061")]
public class DemoScene1 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006A7")]
	private enum PlayMode
	{
		[Token(Token = "0x4002A37")]
		Home,
		[Token(Token = "0x4002A38")]
		Rain,
		[Token(Token = "0x4002A39")]
		Blood,
		[Token(Token = "0x4002A3A")]
		SplashIn,
		[Token(Token = "0x4002A3B")]
		SplashOut,
		[Token(Token = "0x4002A3C")]
		Frozen
	}

	[Token(Token = "0x20006A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34210", Offset = "0xB34210")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoScene1 <>4__this;

		[Token(Token = "0x170003DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xD530B8", Offset = "0xD530B8", VA = "0xD530B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xD53120", Offset = "0xD53120", VA = "0xD53120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0xD52DB4", Offset = "0xD52DB4", VA = "0xD52DB4")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0xD53060", Offset = "0xD53060", VA = "0xD53060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0xD53064", Offset = "0xD53064", VA = "0xD53064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0xD530C0", Offset = "0xD530C0", VA = "0xD530C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<RainCameraController> rainControllers;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayMode playMode;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float frozenValue;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rainAlpha;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD52B2C", Offset = "0xD52B2C", VA = "0xD52B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD52B58", Offset = "0xD52B58", VA = "0xD52B58")]
	private void SetResolution(int resolution)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD52C4C", Offset = "0xD52C4C", VA = "0xD52C4C")]
	private void StopAll()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD52D44", Offset = "0xD52D44", VA = "0xD52D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44A9C", Offset = "0xB44A9C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xD52DE0", Offset = "0xD52DE0", VA = "0xD52DE0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xD52F50", Offset = "0xD52F50", VA = "0xD52F50")]
	private bool GuiButton(string buttonName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xD53050", Offset = "0xD53050", VA = "0xD53050")]
	public DemoScene1()
	{
	}
}
[Token(Token = "0x2000062")]
public class DemoScene2 : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006A9")]
	private enum PlayMode
	{
		[Token(Token = "0x4002A41")]
		None,
		[Token(Token = "0x4002A42")]
		Blood,
		[Token(Token = "0x4002A43")]
		SplashIn,
		[Token(Token = "0x4002A44")]
		SplashOut,
		[Token(Token = "0x4002A45")]
		Frozen
	}

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BloodRainCameraController bloodRainController;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RainCameraController splashInRain;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RainCameraController splashOutRain;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RainCameraController frozenRain;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource splashInAudio;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource splashOutAudio;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource damageAudio;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource windAudio;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayMode playMode;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float frozenValue;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float rainAlpha;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD53128", Offset = "0xD53128", VA = "0xD53128")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD53154", Offset = "0xD53154", VA = "0xD53154")]
	private void SetResolution(int resolution)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xD53248", Offset = "0xD53248", VA = "0xD53248")]
	private void StopAll()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD532E4", Offset = "0xD532E4", VA = "0xD532E4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD53774", Offset = "0xD53774", VA = "0xD53774")]
	private bool GuiButton(string buttonName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xD53874", Offset = "0xD53874", VA = "0xD53874")]
	public DemoScene2()
	{
	}
}
[Token(Token = "0x2000063")]
[ExecuteInEditMode]
public class RainCameraController : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34220", Offset = "0xB34220")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<RainBehaviourBase, int> <>9__11_0;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<RainBehaviourBase, int> <>9__13_0;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<RainBehaviourBase> <>9__15_0;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<RainBehaviourBase> <>9__21_0;

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0xBDFFAC", Offset = "0xBDFFAC", VA = "0xBDFFAC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0xBDFFB4", Offset = "0xBDFFB4", VA = "0xBDFFB4")]
		internal int <get_CurrentDrawCall>b__11_0(RainBehaviourBase x)
		{
			return default(int);
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0xBDFFD4", Offset = "0xBDFFD4", VA = "0xBDFFD4")]
		internal int <get_MaxDrawCall>b__13_0(RainBehaviourBase x)
		{
			return default(int);
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0xBDFFF4", Offset = "0xBDFFF4", VA = "0xBDFFF4")]
		internal bool <get_IsPlaying>b__15_0(RainBehaviourBase x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0xBE0014", Offset = "0xBE0014", VA = "0xBE0014")]
		internal int <Update>b__21_0(RainBehaviourBase a, RainBehaviourBase b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _cam;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<RainBehaviourBase> _rainBehaviours;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int RenderQueue;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB374F0", Offset = "0xB374F0")]
	public float Alpha;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 GlobalWind;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 GForceVector;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public RainDropTools.RainDropShaderType ShaderType;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37508", Offset = "0xB37508")]
	public float distance;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool VRMode;

	[Token(Token = "0x1700002E")]
	private Camera cam
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xBDEB48", Offset = "0xBDEB48", VA = "0xBDEB48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public List<RainBehaviourBase> rainBehaviours
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xBDEBE0", Offset = "0xBDEBE0", VA = "0xBDEBE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public int CurrentDrawCall
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xBDEC54", Offset = "0xBDEC54", VA = "0xBDEC54")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000031")]
	public int MaxDrawCall
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xBDED5C", Offset = "0xBDED5C", VA = "0xBDED5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000032")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xBDEE64", Offset = "0xBDEE64", VA = "0xBDEE64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBDEF80", Offset = "0xBDEF80", VA = "0xBDEF80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBDF080", Offset = "0xBDF080", VA = "0xBDF080")]
	private void Start()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xBDF140", Offset = "0xBDF140", VA = "0xBDF140")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xBDF6FC", Offset = "0xBDF6FC", VA = "0xBDF6FC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xBDF8E8", Offset = "0xBDF8E8", VA = "0xBDF8E8")]
	public void Play()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBDF9E8", Offset = "0xBDF9E8", VA = "0xBDF9E8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBDFAE8", Offset = "0xBDFAE8", VA = "0xBDFAE8")]
	public void StopImmidiate()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBDFBE8", Offset = "0xBDFBE8", VA = "0xBDFBE8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBDFE5C", Offset = "0xBDFE5C", VA = "0xBDFE5C")]
	public RainCameraController()
	{
	}
}
[Token(Token = "0x2000064")]
public class DropTrail : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006AB")]
	private class Path
	{
		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeCreated;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fadeAlpha;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPosition;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion localRotation;

		[Token(Token = "0x170003DE")]
		public float timeElapsed
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xD56A60", Offset = "0xD56A60", VA = "0xD56A60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0xD56678", Offset = "0xD56678", VA = "0xD56678")]
		public Path(Vector3 localPosition, Quaternion localRotation)
		{
		}
	}

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new bool enabled;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lifeTime;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve widthCurve;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float widthMultiplier;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int angleDivisions;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float vertexDistance;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LineTextureMode textureMode;

	[Token(Token = "0x400023E")]
	private const string _name = "[Hidden]DropTrailMesh";

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	private GameObject _trail;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	private Vector3 _relativePos;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<Path> paths;

	[Token(Token = "0x17000033")]
	private Mesh _mesh
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xD55308", Offset = "0xD55308", VA = "0xD55308")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xD55324", Offset = "0xD55324", VA = "0xD55324")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	private int pathCnt
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xD55340", Offset = "0xD55340", VA = "0xD55340")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xD55390", Offset = "0xD55390", VA = "0xD55390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xD555EC", Offset = "0xD555EC", VA = "0xD555EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD56620", Offset = "0xD56620", VA = "0xD56620")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xD55394", Offset = "0xD55394", VA = "0xD55394")]
	private bool CheckExistence()
	{
		return default(bool);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xD55634", Offset = "0xD55634", VA = "0xD55634")]
	private bool CheckActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xD5566C", Offset = "0xD5566C", VA = "0xD5566C")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xD56008", Offset = "0xD56008", VA = "0xD56008")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD5677C", Offset = "0xD5677C", VA = "0xD5677C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD56988", Offset = "0xD56988", VA = "0xD56988")]
	public DropTrail()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD56A1C", Offset = "0xD56A1C", VA = "0xD56A1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B00", Offset = "0xB44B00")]
	private bool <UpdateTrail>b__25_0(Path t)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000065")]
public abstract class RainBehaviourBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Depth;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float Alpha;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public RainDropTools.RainDropShaderType ShaderType;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool VRMode;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float Distance;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public Vector3 GForceVector;

	[Token(Token = "0x17000035")]
	public virtual bool IsPlaying
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xBDEB00", Offset = "0xBDEB00", VA = "0xBDEB00", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public virtual bool IsEnabled
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xBDEB08", Offset = "0xBDEB08", VA = "0xBDEB08", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public virtual int CurrentDrawCall
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xBDEB10", Offset = "0xBDEB10", VA = "0xBDEB10", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000038")]
	public virtual int MaxDrawCall
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xBDEB18", Offset = "0xBDEB18", VA = "0xBDEB18", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xBDEB20", Offset = "0xBDEB20", VA = "0xBDEB20", Slot = "8")]
	public virtual void Refresh()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xBDEB24", Offset = "0xBDEB24", VA = "0xBDEB24", Slot = "9")]
	public virtual void StartRain()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xBDEB28", Offset = "0xBDEB28", VA = "0xBDEB28", Slot = "10")]
	public virtual void StopRain()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xBDEB2C", Offset = "0xBDEB2C", VA = "0xBDEB2C", Slot = "11")]
	public virtual void StopRainImmidiate()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xBDEB30", Offset = "0xBDEB30", VA = "0xBDEB30", Slot = "12")]
	public virtual void ApplyFinalDepth(int depth)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xBDEB34", Offset = "0xBDEB34", VA = "0xBDEB34", Slot = "13")]
	public virtual void ApplyGlobalWind(Vector2 globalWind)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBDEB38", Offset = "0xBDEB38", VA = "0xBDEB38", Slot = "14")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBDEB3C", Offset = "0xBDEB3C", VA = "0xBDEB3C", Slot = "15")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBDEB40", Offset = "0xBDEB40", VA = "0xBDEB40")]
	protected RainBehaviourBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000066")]
public class RainDrawerContainer<T> where T : Component
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T Drawer;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform transform;

	[Token(Token = "0x600022D")]
	public RainDrawerContainer(string name, Transform parent)
	{
	}
}
[Token(Token = "0x2000067")]
public class RainDropTools : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006AC")]
	public enum RainDropShaderType
	{
		[Token(Token = "0x4002A50")]
		Expensive,
		[Token(Token = "0x4002A51")]
		Cheap,
		[Token(Token = "0x4002A52")]
		NoDistortion
	}

	[Serializable]
	[Token(Token = "0x20006AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34230", Offset = "0xB34230")]
	private sealed class <>c__16<T1, T2> where T2 : IComparable
	{
		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__16<T1, T2> <>9;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<KeyValuePair<T1, T2>, double> <>9__16_0;

		[Token(Token = "0x6002C2F")]
		public <>c__16()
		{
		}

		[Token(Token = "0x6002C30")]
		internal double <GetWeightedElement>b__16_0(KeyValuePair<T1, T2> t)
		{
			return default(double);
		}
	}

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string SHADER_FORWARD;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string SHADER_CHEAP;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string SHADER_NO_DISTORTION;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xBE0A4C", Offset = "0xBE0A4C", VA = "0xBE0A4C")]
	public static string GetShaderName(RainDropShaderType shaderType)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xBE06A0", Offset = "0xBE06A0", VA = "0xBE06A0")]
	public static Material CreateRainMaterial(RainDropShaderType shaderType, int renderQueue)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xBE0B38", Offset = "0xBE0B38", VA = "0xBE0B38")]
	public static void ApplyRainMaterialValue(Material material, RainDropShaderType shaderType, Texture normalMap, [Optional] Texture overlayTexture, float distortionValue = 0f, [Optional] Color? overlayColor, float reliefValue = 0f, float blur = 0f, float darkness = 0f)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xBE0760", Offset = "0xBE0760", VA = "0xBE0760")]
	public static Mesh CreateQuadMesh()
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xBE0E00", Offset = "0xBE0E00", VA = "0xBE0E00")]
	public static Transform CreateHiddenObject(string name, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xBE0FBC", Offset = "0xBE0FBC", VA = "0xBE0FBC")]
	public static float Random(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xBE0FC4", Offset = "0xBE0FC4", VA = "0xBE0FC4")]
	public static int Random(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xBE0FCC", Offset = "0xBE0FCC", VA = "0xBE0FCC")]
	public static void DestroyChildren(Transform t)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xBE1244", Offset = "0xBE1244", VA = "0xBE1244")]
	public static void DestroyChildrenImmediate(Transform t)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xBE14BC", Offset = "0xBE14BC", VA = "0xBE14BC")]
	public static Vector2 GetCameraOrthographicSize(Camera cam)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xBE1524", Offset = "0xBE1524", VA = "0xBE1524")]
	public static Vector3 GetSpawnLocalPos(Transform parent, Camera cam, float offsetX, float offsetY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xBE1734", Offset = "0xBE1734", VA = "0xBE1734")]
	public static Vector3 GetGForcedScreenMovement(Transform screenTransform, Vector3 GForce)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023A")]
	public static KeyValuePair<T1, T2> GetWeightedElement<T1, T2>(List<KeyValuePair<T1, T2>> list) where T2 : IComparable
	{
		return default(KeyValuePair<T1, T2>);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xBE1934", Offset = "0xBE1934", VA = "0xBE1934")]
	public RainDropTools()
	{
	}
}
[Token(Token = "0x2000068")]
public class BloodRainCameraController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RainCameraController FrameBloodCamera;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RainCameraController SplatterBloodCamera;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HP;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FrameEffectInterval;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Smooth;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeElapsed;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float currentAlpha;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float oldAlpha;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lerpStart;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lerpTime;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve hpHigh;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AnimationCurve hpMid;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve hpLow;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE71FEC", Offset = "0xE71FEC", VA = "0xE71FEC")]
	public void Attack(int damage)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xE72094", Offset = "0xE72094", VA = "0xE72094")]
	public void Reset()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xE720E4", Offset = "0xE720E4", VA = "0xE720E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xE7222C", Offset = "0xE7222C", VA = "0xE7222C")]
	private float LerpTime(float lerpTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xE720DC", Offset = "0xE720DC", VA = "0xE720DC")]
	private void ResetLerpTime()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xE722B8", Offset = "0xE722B8", VA = "0xE722B8")]
	public BloodRainCameraController()
	{
	}
}
[Token(Token = "0x2000069")]
public class FpsDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float interval;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float dt;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int flameCnt;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int fps;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xDCAF14", Offset = "0xDCAF14", VA = "0xDCAF14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xDCAF8C", Offset = "0xDCAF8C", VA = "0xDCAF8C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xDCB118", Offset = "0xDCB118", VA = "0xDCB118")]
	public FpsDisplay()
	{
	}
}
[Token(Token = "0x200006A")]
[ExecuteInEditMode]
public class FlowRainBehaviour : RainBehaviourBase
{
	[Serializable]
	[Token(Token = "0x20006AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34240", Offset = "0xB34240")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<FlowRainController.FlowRainDrawerContainer> <>9__6_0;

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xDC6F34", Offset = "0xDC6F34", VA = "0xDC6F34")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xDC6F3C", Offset = "0xDC6F3C", VA = "0xDC6F3C")]
		internal bool <get_CurrentDrawCall>b__6_0(FlowRainController.FlowRainDrawerContainer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB375F4", Offset = "0xB375F4")]
	private FlowRainController <rainController>k__BackingField;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public FlowRainVariables Variables;

	[Token(Token = "0x17000039")]
	private FlowRainController rainController
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xDC60FC", Offset = "0xDC60FC", VA = "0xDC60FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B10", Offset = "0xB44B10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xDC6104", Offset = "0xDC6104", VA = "0xDC6104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B20", Offset = "0xB44B20")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public override int CurrentDrawCall
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xDC610C", Offset = "0xDC610C", VA = "0xDC610C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public override int MaxDrawCall
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xDC6268", Offset = "0xDC6268", VA = "0xDC6268", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public override bool IsPlaying
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xDC6284", Offset = "0xDC6284", VA = "0xDC6284", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public override bool IsEnabled
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xDC6438", Offset = "0xDC6438", VA = "0xDC6438", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xDC6470", Offset = "0xDC6470", VA = "0xDC6470", Slot = "8")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xDC6874", Offset = "0xDC6874", VA = "0xDC6874", Slot = "9")]
	public override void StartRain()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xDC6954", Offset = "0xDC6954", VA = "0xDC6954", Slot = "10")]
	public override void StopRain()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xDC69E0", Offset = "0xDC69E0", VA = "0xDC69E0", Slot = "11")]
	public override void StopRainImmidiate()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xDC6AA4", Offset = "0xDC6AA4", VA = "0xDC6AA4", Slot = "12")]
	public override void ApplyFinalDepth(int depth)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xDC6B38", Offset = "0xDC6B38", VA = "0xDC6B38", Slot = "13")]
	public override void ApplyGlobalWind(Vector2 globalWind)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xDC6BD0", Offset = "0xDC6BD0", VA = "0xDC6BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xDC6C24", Offset = "0xDC6C24", VA = "0xDC6C24", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xDC6558", Offset = "0xDC6558", VA = "0xDC6558")]
	private FlowRainController CreateController()
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xDC6D04", Offset = "0xDC6D04", VA = "0xDC6D04")]
	public void InitParams()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xDC6EA0", Offset = "0xDC6EA0", VA = "0xDC6EA0")]
	private void swap(ref float a, ref float b)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xDC6EB4", Offset = "0xDC6EB4", VA = "0xDC6EB4")]
	private void swap(ref int a, ref int b)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xDC6EC8", Offset = "0xDC6EC8", VA = "0xDC6EC8")]
	public FlowRainBehaviour()
	{
	}
}
[Token(Token = "0x200006B")]
public class FlowRainController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006AF")]
	public enum DrawState
	{
		[Token(Token = "0x4002A58")]
		Playing,
		[Token(Token = "0x4002A59")]
		Disabled
	}

	[Serializable]
	[Token(Token = "0x20006B0")]
	public class FlowRainDrawerContainer : RainDrawerContainer<DropTrail>
	{
		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrawState currentState;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float initRnd;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float posXDt;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rnd1;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fluctuationRate;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float acceleration;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 startPos;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float TimeElapsed;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lifetime;

		[Token(Token = "0x170003DF")]
		public bool IsEnable
		{
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xDC8CA8", Offset = "0xDC8CA8", VA = "0xDC8CA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xDC6FFC", Offset = "0xDC6FFC", VA = "0xDC6FFC")]
		public FlowRainDrawerContainer(string name, Transform parent)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34250", Offset = "0xB34250")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<FlowRainDrawerContainer> <>9__43_0;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<FlowRainDrawerContainer> <>9__49_0;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<FlowRainDrawerContainer> <>9__51_0;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<FlowRainDrawerContainer> <>9__51_1;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<FlowRainDrawerContainer> <>9__51_2;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<FlowRainDrawerContainer> <>9__52_0;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<FlowRainDrawerContainer> <>9__53_0;

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xDC8648", Offset = "0xDC8648", VA = "0xDC8648")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xDC8650", Offset = "0xDC8650", VA = "0xDC8650")]
		internal bool <get_IsPlaying>b__43_0(FlowRainDrawerContainer t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xDC8670", Offset = "0xDC8670", VA = "0xDC8670")]
		internal bool <PlayDelay>b__49_0(FlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xDC8690", Offset = "0xDC8690", VA = "0xDC8690")]
		internal bool <CheckSpawnNum>b__51_0(FlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xDC86B0", Offset = "0xDC86B0", VA = "0xDC86B0")]
		internal bool <CheckSpawnNum>b__51_1(FlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0xDC86D0", Offset = "0xDC86D0", VA = "0xDC86D0")]
		internal bool <CheckSpawnNum>b__51_2(FlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xDC8748", Offset = "0xDC8748", VA = "0xDC8748")]
		internal bool <CheckSpawnTime>b__52_0(FlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xDC8768", Offset = "0xDC8768", VA = "0xDC8768")]
		internal bool <Spawn>b__53_0(FlowRainDrawerContainer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20006B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34260", Offset = "0xB34260")]
	private sealed class <PlayDelay>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlowRainController <>4__this;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x170003E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C42")]
			[Address(RVA = "0xDC8A84", Offset = "0xDC8A84", VA = "0xDC8A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C44")]
			[Address(RVA = "0xDC8AEC", Offset = "0xDC8AEC", VA = "0xDC8AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0xDC70F8", Offset = "0xDC70F8", VA = "0xDC70F8")]
		[DebuggerHidden]
		public <PlayDelay>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xDC885C", Offset = "0xDC885C", VA = "0xDC885C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xDC8860", Offset = "0xDC8860", VA = "0xDC8860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xDC8A8C", Offset = "0xDC8A8C", VA = "0xDC8A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34270", Offset = "0xB34270")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FlowRainDrawerContainer dc;

		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlowRainController <>4__this;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action initRnd;

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0xDC8160", Offset = "0xDC8160", VA = "0xDC8160")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0xDC8788", Offset = "0xDC8788", VA = "0xDC8788")]
		internal void <UpdateTransform>b__0()
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0xDC8840", Offset = "0xDC8840", VA = "0xDC8840")]
		internal void <UpdateTransform>b__1()
		{
		}
	}

	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34280", Offset = "0xB34280")]
	private sealed class <Wait>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float atLeast;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float step;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rndMax;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callBack;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsed>5__2;

		[Token(Token = "0x170003E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xDC8C38", Offset = "0xDC8C38", VA = "0xDC8C38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xDC8CA0", Offset = "0xDC8CA0", VA = "0xDC8CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0xDC8548", Offset = "0xDC8548", VA = "0xDC8548")]
		[DebuggerHidden]
		public <Wait>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xDC8AF4", Offset = "0xDC8AF4", VA = "0xDC8AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xDC8AF8", Offset = "0xDC8AF8", VA = "0xDC8AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xDC8C40", Offset = "0xDC8C40", VA = "0xDC8C40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37614", Offset = "0xB37614")]
	private FlowRainVariables <Variables>k__BackingField;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37624", Offset = "0xB37624")]
	private int <RenderQueue>k__BackingField;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37634", Offset = "0xB37634")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37644", Offset = "0xB37644")]
	private float <Alpha>k__BackingField;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37654", Offset = "0xB37654")]
	private Vector2 <GlobalWind>k__BackingField;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37664", Offset = "0xB37664")]
	private Vector3 <GForceVector>k__BackingField;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37674", Offset = "0xB37674")]
	private bool <NoMoreRain>k__BackingField;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37684", Offset = "0xB37684")]
	private RainDropTools.RainDropShaderType <ShaderType>k__BackingField;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37694", Offset = "0xB37694")]
	private float <Distance>k__BackingField;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int oldSpawnLimit;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOneShot;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isWaitingDelay;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float oneShotTimeleft;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeElapsed;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float interval;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<FlowRainDrawerContainer> drawers;

	[Token(Token = "0x1700003E")]
	public FlowRainVariables Variables
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xDC6F60", Offset = "0xDC6F60", VA = "0xDC6F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B30", Offset = "0xB44B30")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xDC6F68", Offset = "0xDC6F68", VA = "0xDC6F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B40", Offset = "0xB44B40")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public int RenderQueue
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xDC6F70", Offset = "0xDC6F70", VA = "0xDC6F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B50", Offset = "0xB44B50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xDC6F78", Offset = "0xDC6F78", VA = "0xDC6F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B60", Offset = "0xB44B60")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public Camera camera
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xDC6F80", Offset = "0xDC6F80", VA = "0xDC6F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B70", Offset = "0xB44B70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xDC6F88", Offset = "0xDC6F88", VA = "0xDC6F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B80", Offset = "0xB44B80")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public float Alpha
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xDC6F90", Offset = "0xDC6F90", VA = "0xDC6F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B90", Offset = "0xB44B90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xDC6F98", Offset = "0xDC6F98", VA = "0xDC6F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BA0", Offset = "0xB44BA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public Vector2 GlobalWind
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xDC6FA0", Offset = "0xDC6FA0", VA = "0xDC6FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BB0", Offset = "0xB44BB0")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xDC6FA8", Offset = "0xDC6FA8", VA = "0xDC6FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BC0", Offset = "0xB44BC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public Vector3 GForceVector
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xDC6FB0", Offset = "0xDC6FB0", VA = "0xDC6FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BD0", Offset = "0xB44BD0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xDC6FBC", Offset = "0xDC6FBC", VA = "0xDC6FBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BE0", Offset = "0xB44BE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public bool NoMoreRain
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xDC6FC8", Offset = "0xDC6FC8", VA = "0xDC6FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BF0", Offset = "0xB44BF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xDC6FD0", Offset = "0xDC6FD0", VA = "0xDC6FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C00", Offset = "0xB44C00")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public RainDropTools.RainDropShaderType ShaderType
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xDC6FDC", Offset = "0xDC6FDC", VA = "0xDC6FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C10", Offset = "0xB44C10")]
		get
		{
			return default(RainDropTools.RainDropShaderType);
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xDC6FE4", Offset = "0xDC6FE4", VA = "0xDC6FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C20", Offset = "0xB44C20")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public float Distance
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xDC6FEC", Offset = "0xDC6FEC", VA = "0xDC6FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C30", Offset = "0xB44C30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xDC6FF4", Offset = "0xDC6FF4", VA = "0xDC6FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C40", Offset = "0xB44C40")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public bool IsPlaying
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xDC6318", Offset = "0xDC6318", VA = "0xDC6318")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xDC663C", Offset = "0xDC663C", VA = "0xDC663C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xDC6918", Offset = "0xDC6918", VA = "0xDC6918")]
	public void Play()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xDC7078", Offset = "0xDC7078", VA = "0xDC7078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44C50", Offset = "0xB44C50")]
	private IEnumerator PlayDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDC6DA4", Offset = "0xDC6DA4", VA = "0xDC6DA4")]
	public void UpdateController()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDC7124", Offset = "0xDC7124", VA = "0xDC7124")]
	private void CheckSpawnNum()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xDC761C", Offset = "0xDC761C", VA = "0xDC761C")]
	private void CheckSpawnTime()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xDC792C", Offset = "0xDC792C", VA = "0xDC792C")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xDC7CFC", Offset = "0xDC7CFC", VA = "0xDC7CFC")]
	private float GetProgress(FlowRainDrawerContainer dc)
	{
		return default(float);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xDC7A48", Offset = "0xDC7A48", VA = "0xDC7A48")]
	private void InitializeDrawer(FlowRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xDC7D18", Offset = "0xDC7D18", VA = "0xDC7D18")]
	private void UpdateTransform(FlowRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xDC81FC", Offset = "0xDC81FC", VA = "0xDC81FC")]
	private void UpdateShader(FlowRainDrawerContainer dc, int index)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xDC7880", Offset = "0xDC7880", VA = "0xDC7880")]
	private void UpdateInstance(FlowRainDrawerContainer dc, int index)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xDC8168", Offset = "0xDC8168", VA = "0xDC8168")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44CB4", Offset = "0xB44CB4")]
	private IEnumerator Wait(float atLeast = 0.5f, float step = 0.1f, int rndMax = 20, [Optional] Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xDC8574", Offset = "0xDC8574", VA = "0xDC8574")]
	public FlowRainController()
	{
	}
}
[Serializable]
[Token(Token = "0x200006C")]
public class FlowRainVariables
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AutoStart;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool PlayOnce;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color OverlayColor;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture NormalMap;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture OverlayTexture;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Duration;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Delay;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int MaxRainSpawnCount;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB376A4", Offset = "0xB376A4")]
	public float SpawnOffsetY;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB376BC", Offset = "0xB376BC")]
	public float LifetimeMin;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB376D4", Offset = "0xB376D4")]
	public float LifetimeMax;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB376EC", Offset = "0xB376EC")]
	public int EmissionRateMax;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37708", Offset = "0xB37708")]
	public int EmissionRateMin;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37724", Offset = "0xB37724")]
	public float Resolution;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve AlphaOverLifetime;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37740", Offset = "0xB37740")]
	public float SizeMinX;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37758", Offset = "0xB37758")]
	public float SizeMaxX;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve TrailWidth;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37770", Offset = "0xB37770")]
	public float DistortionValue;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve DistortionOverLifetime;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3778C", Offset = "0xB3778C")]
	public float ReliefValue;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve ReliefOverLifetime;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB377A4", Offset = "0xB377A4")]
	public float Blur;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve BlurOverLifetime;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB377BC", Offset = "0xB377BC")]
	public float Darkness;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB377D4", Offset = "0xB377D4")]
	public float Amplitude;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB377EC", Offset = "0xB377EC")]
	public float Smooth;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37804", Offset = "0xB37804")]
	public float fluctuationRateMin;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37820", Offset = "0xB37820")]
	public float fluctuationRateMax;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3783C", Offset = "0xB3783C")]
	public float InitialVelocity;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37854", Offset = "0xB37854")]
	public float AccelerationMin;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3786C", Offset = "0xB3786C")]
	public float AccelerationMax;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xDC8D48", Offset = "0xDC8D48", VA = "0xDC8D48")]
	public FlowRainVariables()
	{
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
public class FrictionFlowRainBehaviour : RainBehaviourBase
{
	[Serializable]
	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34290", Offset = "0xB34290")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<FrictionFlowRainController.FrictionFlowRainDrawerContainer> <>9__6_0;

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0xDCBF38", Offset = "0xDCBF38", VA = "0xDCBF38")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0xDCBF40", Offset = "0xDCBF40", VA = "0xDCBF40")]
		internal bool <get_CurrentDrawCall>b__6_0(FrictionFlowRainController.FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37884", Offset = "0xB37884")]
	private FrictionFlowRainController <rainController>k__BackingField;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public FrictionFlowRainVariables Variables;

	[Token(Token = "0x17000048")]
	private FrictionFlowRainController rainController
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xDCB12C", Offset = "0xDCB12C", VA = "0xDCB12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D18", Offset = "0xB44D18")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xDCB134", Offset = "0xDCB134", VA = "0xDCB134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D28", Offset = "0xB44D28")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public override int CurrentDrawCall
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xDCB13C", Offset = "0xDCB13C", VA = "0xDCB13C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004A")]
	public override int MaxDrawCall
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xDCB298", Offset = "0xDCB298", VA = "0xDCB298", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004B")]
	public override bool IsPlaying
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xDCB2B4", Offset = "0xDCB2B4", VA = "0xDCB2B4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004C")]
	public override bool IsEnabled
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xDCB468", Offset = "0xDCB468", VA = "0xDCB468", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xDCB4A0", Offset = "0xDCB4A0", VA = "0xDCB4A0", Slot = "8")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xDCB8A4", Offset = "0xDCB8A4", VA = "0xDCB8A4", Slot = "9")]
	public override void StartRain()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xDCB984", Offset = "0xDCB984", VA = "0xDCB984", Slot = "10")]
	public override void StopRain()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xDCBA10", Offset = "0xDCBA10", VA = "0xDCBA10", Slot = "11")]
	public override void StopRainImmidiate()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xDCBAD4", Offset = "0xDCBAD4", VA = "0xDCBAD4", Slot = "12")]
	public override void ApplyFinalDepth(int depth)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xDCBB68", Offset = "0xDCBB68", VA = "0xDCBB68", Slot = "13")]
	public override void ApplyGlobalWind(Vector2 globalWind)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xDCBC00", Offset = "0xDCBC00", VA = "0xDCBC00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xDCBC54", Offset = "0xDCBC54", VA = "0xDCBC54", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xDCB588", Offset = "0xDCB588", VA = "0xDCB588")]
	private FrictionFlowRainController CreateController()
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xDCBD34", Offset = "0xDCBD34", VA = "0xDCBD34")]
	public void InitParams()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xDCBEA4", Offset = "0xDCBEA4", VA = "0xDCBEA4")]
	private void swap(ref float a, ref float b)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xDCBEB8", Offset = "0xDCBEB8", VA = "0xDCBEB8")]
	private void swap(ref int a, ref int b)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xDCBECC", Offset = "0xDCBECC", VA = "0xDCBECC")]
	public FrictionFlowRainBehaviour()
	{
	}
}
[Token(Token = "0x200006E")]
public class FrictionFlowRainController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006B6")]
	public enum DrawState
	{
		[Token(Token = "0x4002A7D")]
		Playing,
		[Token(Token = "0x4002A7E")]
		Disabled
	}

	[Serializable]
	[Token(Token = "0x20006B7")]
	public class FrictionFlowRainDrawerContainer : RainDrawerContainer<DropTrail>
	{
		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrawState currentState;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float initRnd;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float posXDt;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rnd1;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fluctuationRate;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float acceleration;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 startPos;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float TimeElapsed;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lifetime;

		[Token(Token = "0x170003E4")]
		public bool IsEnable
		{
			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xDCE314", Offset = "0xDCE314", VA = "0xDCE314")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0xDCC0CC", Offset = "0xDCC0CC", VA = "0xDCC0CC")]
		public FrictionFlowRainDrawerContainer(string name, Transform parent)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342A0", Offset = "0xB342A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__43_0;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__52_0;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__54_0;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__54_1;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__54_2;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__55_0;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<FrictionFlowRainDrawerContainer> <>9__56_0;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Comparison<KeyValuePair<Vector3, float>> <>9__60_1;

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0xDCDE0C", Offset = "0xDCDE0C", VA = "0xDCDE0C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0xDCDE14", Offset = "0xDCDE14", VA = "0xDCDE14")]
		internal bool <get_IsPlaying>b__43_0(FrictionFlowRainDrawerContainer t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0xDCDE34", Offset = "0xDCDE34", VA = "0xDCDE34")]
		internal bool <PlayDelay>b__52_0(FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0xDCDE54", Offset = "0xDCDE54", VA = "0xDCDE54")]
		internal bool <CheckSpawnNum>b__54_0(FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0xDCDE74", Offset = "0xDCDE74", VA = "0xDCDE74")]
		internal bool <CheckSpawnNum>b__54_1(FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0xDCDE94", Offset = "0xDCDE94", VA = "0xDCDE94")]
		internal bool <CheckSpawnNum>b__54_2(FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0xDCDF0C", Offset = "0xDCDF0C", VA = "0xDCDF0C")]
		internal bool <CheckSpawnTime>b__55_0(FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xDCDF2C", Offset = "0xDCDF2C", VA = "0xDCDF2C")]
		internal bool <Spawn>b__56_0(FrictionFlowRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xDCDF4C", Offset = "0xDCDF4C", VA = "0xDCDF4C")]
		internal int <PickRandomWeightedElement>b__60_1(KeyValuePair<Vector3, float> x, KeyValuePair<Vector3, float> y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20006B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342B0", Offset = "0xB342B0")]
	private sealed class <PlayDelay>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrictionFlowRainController <>4__this;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x170003E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xDCE2A4", Offset = "0xDCE2A4", VA = "0xDCE2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C62")]
			[Address(RVA = "0xDCE30C", Offset = "0xDCE30C", VA = "0xDCE30C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xDCC1C8", Offset = "0xDCC1C8", VA = "0xDCC1C8")]
		[DebuggerHidden]
		public <PlayDelay>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0xDCE07C", Offset = "0xDCE07C", VA = "0xDCE07C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xDCE080", Offset = "0xDCE080", VA = "0xDCE080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0xDCE2AC", Offset = "0xDCE2AC", VA = "0xDCE2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342C0", Offset = "0xB342C0")]
	private sealed class <>c__DisplayClass60_0
	{
		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float firstVal;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Vector3, float> dictionary;

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xDCD074", Offset = "0xDCD074", VA = "0xDCD074")]
		public <>c__DisplayClass60_0()
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xDCDFAC", Offset = "0xDCDFAC", VA = "0xDCDFAC")]
		internal bool <PickRandomWeightedElement>b__0(KeyValuePair<Vector3, float> t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xDCE004", Offset = "0xDCE004", VA = "0xDCE004")]
		internal bool <PickRandomWeightedElement>b__2(KeyValuePair<Vector3, float> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB378A4", Offset = "0xB378A4")]
	private FrictionFlowRainVariables <Variables>k__BackingField;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB378B4", Offset = "0xB378B4")]
	private int <RenderQueue>k__BackingField;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB378C4", Offset = "0xB378C4")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB378D4", Offset = "0xB378D4")]
	private float <Alpha>k__BackingField;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB378E4", Offset = "0xB378E4")]
	private Vector2 <GlobalWind>k__BackingField;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB378F4", Offset = "0xB378F4")]
	private Vector3 <GForceVector>k__BackingField;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37904", Offset = "0xB37904")]
	private bool <NoMoreRain>k__BackingField;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37914", Offset = "0xB37914")]
	private RainDropTools.RainDropShaderType <ShaderType>k__BackingField;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37924", Offset = "0xB37924")]
	private float <Distance>k__BackingField;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int oldSpawnLimit;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOneShot;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isWaitingDelay;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float oneShotTimeleft;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeElapsed;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float interval;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<FrictionFlowRainDrawerContainer> drawers;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _dummy;

	[Token(Token = "0x1700004D")]
	public FrictionFlowRainVariables Variables
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xDCBF64", Offset = "0xDCBF64", VA = "0xDCBF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D38", Offset = "0xB44D38")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xDCBF6C", Offset = "0xDCBF6C", VA = "0xDCBF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D48", Offset = "0xB44D48")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public int RenderQueue
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xDCBF74", Offset = "0xDCBF74", VA = "0xDCBF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D58", Offset = "0xB44D58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xDCBF7C", Offset = "0xDCBF7C", VA = "0xDCBF7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D68", Offset = "0xB44D68")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public Camera camera
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xDCBF84", Offset = "0xDCBF84", VA = "0xDCBF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D78", Offset = "0xB44D78")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xDCBF8C", Offset = "0xDCBF8C", VA = "0xDCBF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D88", Offset = "0xB44D88")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float Alpha
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xDCBF94", Offset = "0xDCBF94", VA = "0xDCBF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D98", Offset = "0xB44D98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xDCBF9C", Offset = "0xDCBF9C", VA = "0xDCBF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DA8", Offset = "0xB44DA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Vector2 GlobalWind
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xDCBFA4", Offset = "0xDCBFA4", VA = "0xDCBFA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DB8", Offset = "0xB44DB8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xDCBFAC", Offset = "0xDCBFAC", VA = "0xDCBFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DC8", Offset = "0xB44DC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public Vector3 GForceVector
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xDCBFB4", Offset = "0xDCBFB4", VA = "0xDCBFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DD8", Offset = "0xB44DD8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xDCBFC0", Offset = "0xDCBFC0", VA = "0xDCBFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DE8", Offset = "0xB44DE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool NoMoreRain
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xDCBFCC", Offset = "0xDCBFCC", VA = "0xDCBFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DF8", Offset = "0xB44DF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xDCBFD4", Offset = "0xDCBFD4", VA = "0xDCBFD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44E08", Offset = "0xB44E08")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public RainDropTools.RainDropShaderType ShaderType
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xDCBFE0", Offset = "0xDCBFE0", VA = "0xDCBFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44E18", Offset = "0xB44E18")]
		get
		{
			return default(RainDropTools.RainDropShaderType);
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xDCBFE8", Offset = "0xDCBFE8", VA = "0xDCBFE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44E28", Offset = "0xB44E28")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float Distance
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xDCBFF0", Offset = "0xDCBFF0", VA = "0xDCBFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44E38", Offset = "0xB44E38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xDCBFF8", Offset = "0xDCBFF8", VA = "0xDCBFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44E48", Offset = "0xB44E48")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xDCB348", Offset = "0xDCB348", VA = "0xDCB348")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	private Transform dummy
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xDCC000", Offset = "0xDCC000", VA = "0xDCC000")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xDCB66C", Offset = "0xDCB66C", VA = "0xDCB66C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xDCB948", Offset = "0xDCB948", VA = "0xDCB948")]
	public void Play()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xDCC148", Offset = "0xDCC148", VA = "0xDCC148")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44E58", Offset = "0xB44E58")]
	private IEnumerator PlayDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xDCBDA8", Offset = "0xDCBDA8", VA = "0xDCBDA8")]
	public void UpdateController()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xDCC1F4", Offset = "0xDCC1F4", VA = "0xDCC1F4")]
	private void CheckSpawnNum()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xDCC6EC", Offset = "0xDCC6EC", VA = "0xDCC6EC")]
	private void CheckSpawnTime()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xDCC9FC", Offset = "0xDCC9FC", VA = "0xDCC9FC")]
	private void Spawn()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xDCCE04", Offset = "0xDCCE04", VA = "0xDCCE04")]
	private float GetProgress(FrictionFlowRainDrawerContainer dc)
	{
		return default(float);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xDCCB18", Offset = "0xDCCB18", VA = "0xDCCB18")]
	private void InitializeDrawer(FrictionFlowRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x60002AB")]
	private void Shuffle<T>(List<T> list)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xDCCE20", Offset = "0xDCCE20", VA = "0xDCCE20")]
	private KeyValuePair<Vector3, float> PickRandomWeightedElement(Dictionary<Vector3, float> dictionary)
	{
		return default(KeyValuePair<Vector3, float>);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xDCD07C", Offset = "0xDCD07C", VA = "0xDCD07C")]
	private Vector3 GetNextPositionWithFriction(FrictionFlowRainDrawerContainer dc, float downValue, int resolution, int widthResolution, float dt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xDCD690", Offset = "0xDCD690", VA = "0xDCD690")]
	private void UpdateTransform(FrictionFlowRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xDCD9EC", Offset = "0xDCD9EC", VA = "0xDCD9EC")]
	private void UpdateShader(FrictionFlowRainDrawerContainer dc, int index)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xDCC950", Offset = "0xDCC950", VA = "0xDCC950")]
	private void UpdateInstance(FrictionFlowRainDrawerContainer dc, int index)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xDCDD38", Offset = "0xDCDD38", VA = "0xDCDD38")]
	public FrictionFlowRainController()
	{
	}
}
[Serializable]
[Token(Token = "0x200006F")]
public class FrictionFlowRainVariables
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AutoStart;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool PlayOnce;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color OverlayColor;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture NormalMap;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture OverlayTexture;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D FrictionMap;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Duration;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Delay;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int MaxRainSpawnCount;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37934", Offset = "0xB37934")]
	public float SpawnOffsetY;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3794C", Offset = "0xB3794C")]
	public float LifetimeMin;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37964", Offset = "0xB37964")]
	public float LifetimeMax;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3797C", Offset = "0xB3797C")]
	public int EmissionRateMax;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37998", Offset = "0xB37998")]
	public int EmissionRateMin;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB379B4", Offset = "0xB379B4")]
	public int Resolution;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve AlphaOverLifetime;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB379D0", Offset = "0xB379D0")]
	public float SizeMinX;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB379E8", Offset = "0xB379E8")]
	public float SizeMaxX;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve TrailWidth;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A00", Offset = "0xB37A00")]
	public float DistortionValue;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve DistortionOverLifetime;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A1C", Offset = "0xB37A1C")]
	public float ReliefValue;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve ReliefOverLifetime;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A34", Offset = "0xB37A34")]
	public float Blur;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve BlurOverLifetime;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A4C", Offset = "0xB37A4C")]
	public float Darkness;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A64", Offset = "0xB37A64")]
	public float InitialVelocity;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A84", Offset = "0xB37A84")]
	public float AccelerationMin;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37A9C", Offset = "0xB37A9C")]
	public float AccelerationMax;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xDCE3B4", Offset = "0xDCE3B4", VA = "0xDCE3B4")]
	public FrictionFlowRainVariables()
	{
	}
}
[Token(Token = "0x2000070")]
[ExecuteInEditMode]
public class SimpleRainBehaviour : RainBehaviourBase
{
	[Serializable]
	[Token(Token = "0x20006BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342D0", Offset = "0xB342D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SimpleRainController.SimpleRainDrawerContainer> <>9__6_0;

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xCA7B30", Offset = "0xCA7B30", VA = "0xCA7B30")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xCA7B38", Offset = "0xCA7B38", VA = "0xCA7B38")]
		internal bool <get_CurrentDrawCall>b__6_0(SimpleRainController.SimpleRainDrawerContainer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37AB4", Offset = "0xB37AB4")]
	private SimpleRainController <rainController>k__BackingField;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public SimpleRainVariables Variables;

	[Token(Token = "0x17000058")]
	private SimpleRainController rainController
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xCA6CE8", Offset = "0xCA6CE8", VA = "0xCA6CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44EBC", Offset = "0xB44EBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xCA6CF0", Offset = "0xCA6CF0", VA = "0xCA6CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44ECC", Offset = "0xB44ECC")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public override int CurrentDrawCall
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xCA6CF8", Offset = "0xCA6CF8", VA = "0xCA6CF8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005A")]
	public override int MaxDrawCall
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xCA6E54", Offset = "0xCA6E54", VA = "0xCA6E54", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005B")]
	public override bool IsPlaying
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xCA6E70", Offset = "0xCA6E70", VA = "0xCA6E70", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public override bool IsEnabled
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xCA7024", Offset = "0xCA7024", VA = "0xCA7024", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xCA705C", Offset = "0xCA705C", VA = "0xCA705C", Slot = "8")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xCA747C", Offset = "0xCA747C", VA = "0xCA747C", Slot = "9")]
	public override void StartRain()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xCA755C", Offset = "0xCA755C", VA = "0xCA755C", Slot = "10")]
	public override void StopRain()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xCA75E8", Offset = "0xCA75E8", VA = "0xCA75E8", Slot = "11")]
	public override void StopRainImmidiate()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xCA76AC", Offset = "0xCA76AC", VA = "0xCA76AC", Slot = "12")]
	public override void ApplyFinalDepth(int depth)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xCA7740", Offset = "0xCA7740", VA = "0xCA7740", Slot = "13")]
	public override void ApplyGlobalWind(Vector2 globalWind)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xCA77D8", Offset = "0xCA77D8", VA = "0xCA77D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xCA782C", Offset = "0xCA782C", VA = "0xCA782C", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xCA7144", Offset = "0xCA7144", VA = "0xCA7144")]
	private SimpleRainController CreateController()
	{
		return null;
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xCA78FC", Offset = "0xCA78FC", VA = "0xCA78FC")]
	public void InitParams()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xCA7A9C", Offset = "0xCA7A9C", VA = "0xCA7A9C")]
	private void swap(ref float a, ref float b)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xCA7AB0", Offset = "0xCA7AB0", VA = "0xCA7AB0")]
	private void swap(ref int a, ref int b)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xCA7AC4", Offset = "0xCA7AC4", VA = "0xCA7AC4")]
	public SimpleRainBehaviour()
	{
	}
}
[Token(Token = "0x2000071")]
public class SimpleRainController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006BC")]
	public enum DrawState
	{
		[Token(Token = "0x4002A9B")]
		Playing,
		[Token(Token = "0x4002A9C")]
		Disabled
	}

	[Serializable]
	[Token(Token = "0x20006BD")]
	public class SimpleRainDrawerContainer : RainDrawerContainer<RainDrawer>
	{
		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrawState currentState;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 startSize;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 startPos;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float TimeElapsed;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lifetime;

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xCA7BE8", Offset = "0xCA7BE8", VA = "0xCA7BE8")]
		public SimpleRainDrawerContainer(string name, Transform parent)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342E0", Offset = "0xB342E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SimpleRainDrawerContainer> <>9__39_0;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<SimpleRainDrawerContainer> <>9__45_0;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<SimpleRainDrawerContainer> <>9__47_0;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<SimpleRainDrawerContainer> <>9__47_1;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<SimpleRainDrawerContainer> <>9__47_2;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<SimpleRainDrawerContainer> <>9__48_0;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<SimpleRainDrawerContainer> <>9__49_0;

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xCA8E50", Offset = "0xCA8E50", VA = "0xCA8E50")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0xCA8E58", Offset = "0xCA8E58", VA = "0xCA8E58")]
		internal bool <get_IsPlaying>b__39_0(SimpleRainDrawerContainer t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xCA8E78", Offset = "0xCA8E78", VA = "0xCA8E78")]
		internal bool <PlayDelay>b__45_0(SimpleRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0xCA8E98", Offset = "0xCA8E98", VA = "0xCA8E98")]
		internal bool <CheckSpawnNum>b__47_0(SimpleRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0xCA8EB8", Offset = "0xCA8EB8", VA = "0xCA8EB8")]
		internal bool <CheckSpawnNum>b__47_1(SimpleRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0xCA8ED8", Offset = "0xCA8ED8", VA = "0xCA8ED8")]
		internal bool <CheckSpawnNum>b__47_2(SimpleRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0xCA8F50", Offset = "0xCA8F50", VA = "0xCA8F50")]
		internal bool <CheckSpawnTime>b__48_0(SimpleRainDrawerContainer x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0xCA8F70", Offset = "0xCA8F70", VA = "0xCA8F70")]
		internal bool <Spawn>b__49_0(SimpleRainDrawerContainer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20006BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342F0", Offset = "0xB342F0")]
	private sealed class <PlayDelay>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleRainController <>4__this;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x170003E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0xCA91B8", Offset = "0xCA91B8", VA = "0xCA91B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xCA9220", Offset = "0xCA9220", VA = "0xCA9220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xCA7CD8", Offset = "0xCA7CD8", VA = "0xCA7CD8")]
		[DebuggerHidden]
		public <PlayDelay>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xCA8F90", Offset = "0xCA8F90", VA = "0xCA8F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xCA8F94", Offset = "0xCA8F94", VA = "0xCA8F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xCA91C0", Offset = "0xCA91C0", VA = "0xCA91C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37AD4", Offset = "0xB37AD4")]
	private SimpleRainVariables <Variables>k__BackingField;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37AE4", Offset = "0xB37AE4")]
	private int <RenderQueue>k__BackingField;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37AF4", Offset = "0xB37AF4")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37B04", Offset = "0xB37B04")]
	private float <Alpha>k__BackingField;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37B14", Offset = "0xB37B14")]
	private Vector2 <GlobalWind>k__BackingField;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37B24", Offset = "0xB37B24")]
	private Vector3 <GForceVector>k__BackingField;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37B34", Offset = "0xB37B34")]
	private bool <NoMoreRain>k__BackingField;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37B44", Offset = "0xB37B44")]
	private RainDropTools.RainDropShaderType <ShaderType>k__BackingField;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int oldSpawnLimit;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isOneShot;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float oneShotTimeleft;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeElapsed;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float interval;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isWaitingDelay;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<SimpleRainDrawerContainer> drawers;

	[Token(Token = "0x1700005D")]
	public SimpleRainVariables Variables
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xCA7B5C", Offset = "0xCA7B5C", VA = "0xCA7B5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44EDC", Offset = "0xB44EDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xCA7B64", Offset = "0xCA7B64", VA = "0xCA7B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44EEC", Offset = "0xB44EEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public int RenderQueue
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xCA7B6C", Offset = "0xCA7B6C", VA = "0xCA7B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44EFC", Offset = "0xB44EFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xCA7B74", Offset = "0xCA7B74", VA = "0xCA7B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F0C", Offset = "0xB44F0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Camera camera
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xCA7B7C", Offset = "0xCA7B7C", VA = "0xCA7B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F1C", Offset = "0xB44F1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xCA7B84", Offset = "0xCA7B84", VA = "0xCA7B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F2C", Offset = "0xB44F2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public float Alpha
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xCA7B8C", Offset = "0xCA7B8C", VA = "0xCA7B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F3C", Offset = "0xB44F3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xCA7B94", Offset = "0xCA7B94", VA = "0xCA7B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F4C", Offset = "0xB44F4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public Vector2 GlobalWind
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xCA7B9C", Offset = "0xCA7B9C", VA = "0xCA7B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F5C", Offset = "0xB44F5C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xCA7BA4", Offset = "0xCA7BA4", VA = "0xCA7BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F6C", Offset = "0xB44F6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public Vector3 GForceVector
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xCA7BAC", Offset = "0xCA7BAC", VA = "0xCA7BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F7C", Offset = "0xB44F7C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xCA7BB8", Offset = "0xCA7BB8", VA = "0xCA7BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F8C", Offset = "0xB44F8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public bool NoMoreRain
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xCA7BC4", Offset = "0xCA7BC4", VA = "0xCA7BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44F9C", Offset = "0xB44F9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xCA7BCC", Offset = "0xCA7BCC", VA = "0xCA7BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44FAC", Offset = "0xB44FAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public RainDropTools.RainDropShaderType ShaderType
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xCA7BD8", Offset = "0xCA7BD8", VA = "0xCA7BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44FBC", Offset = "0xB44FBC")]
		get
		{
			return default(RainDropTools.RainDropShaderType);
		}
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xCA7BE0", Offset = "0xCA7BE0", VA = "0xCA7BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44FCC", Offset = "0xB44FCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xCA6F04", Offset = "0xCA6F04", VA = "0xCA6F04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xCA7228", Offset = "0xCA7228", VA = "0xCA7228")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xCA7520", Offset = "0xCA7520", VA = "0xCA7520")]
	public void Play()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xCA7C58", Offset = "0xCA7C58", VA = "0xCA7C58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44FDC", Offset = "0xB44FDC")]
	private IEnumerator PlayDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xCA7984", Offset = "0xCA7984", VA = "0xCA7984")]
	public void UpdateController()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xCA7D04", Offset = "0xCA7D04", VA = "0xCA7D04")]
	private void CheckSpawnNum()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xCA81FC", Offset = "0xCA81FC", VA = "0xCA81FC")]
	private void CheckSpawnTime()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xCA8500", Offset = "0xCA8500", VA = "0xCA8500")]
	private void Spawn()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xCA88C4", Offset = "0xCA88C4", VA = "0xCA88C4")]
	private float GetProgress(SimpleRainDrawerContainer dc)
	{
		return default(float);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xCA861C", Offset = "0xCA861C", VA = "0xCA861C")]
	private void InitializeDrawer(SimpleRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xCA88E0", Offset = "0xCA88E0", VA = "0xCA88E0")]
	private void UpdateShader(SimpleRainDrawerContainer dc, int index)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xCA8460", Offset = "0xCA8460", VA = "0xCA8460")]
	private void UpdateInstance(SimpleRainDrawerContainer dc, int index)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xCA8D7C", Offset = "0xCA8D7C", VA = "0xCA8D7C")]
	public SimpleRainController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000072")]
public class SimpleRainVariables
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AutoStart;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool PlayOnce;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color OverlayColor;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture NormalMap;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture OverlayTexture;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool AutoRotate;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Duration;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Delay;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int MaxRainSpawnCount;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37B54", Offset = "0xB37B54")]
	public float SpawnOffsetY;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37B6C", Offset = "0xB37B6C")]
	public float LifetimeMin;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37B84", Offset = "0xB37B84")]
	public float LifetimeMax;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37B9C", Offset = "0xB37B9C")]
	public int EmissionRateMax;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37BB8", Offset = "0xB37BB8")]
	public int EmissionRateMin;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve AlphaOverLifetime;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37BD4", Offset = "0xB37BD4")]
	public float SizeMinX;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37BEC", Offset = "0xB37BEC")]
	public float SizeMaxX;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37C04", Offset = "0xB37C04")]
	public float SizeMinY;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37C1C", Offset = "0xB37C1C")]
	public float SizeMaxY;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve SizeOverLifetime;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37C34", Offset = "0xB37C34")]
	public float DistortionValue;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve DistortionOverLifetime;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37C50", Offset = "0xB37C50")]
	public float ReliefValue;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve ReliefOverLifetime;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37C68", Offset = "0xB37C68")]
	public float Blur;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve BlurOverLifetime;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnimationCurve PosYOverLifetime;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37C80", Offset = "0xB37C80")]
	public float Darkness;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xCA9228", Offset = "0xCA9228", VA = "0xCA9228")]
	public SimpleRainVariables()
	{
	}
}
[Token(Token = "0x2000073")]
[ExecuteInEditMode]
public class StaticRainBehaviour : RainBehaviourBase
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37C98", Offset = "0xB37C98")]
	private StaticRainController <rainController>k__BackingField;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public StaticRainVariables Variables;

	[Token(Token = "0x17000066")]
	private StaticRainController rainController
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xD5DF00", Offset = "0xD5DF00", VA = "0xD5DF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46040", Offset = "0xB46040")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xD5DF08", Offset = "0xD5DF08", VA = "0xD5DF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46050", Offset = "0xB46050")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public override int CurrentDrawCall
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xD5DF10", Offset = "0xD5DF10", VA = "0xD5DF10", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000068")]
	public override int MaxDrawCall
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xD5DF8C", Offset = "0xD5DF8C", VA = "0xD5DF8C", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000069")]
	public override bool IsPlaying
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xD5DF94", Offset = "0xD5DF94", VA = "0xD5DF94", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public override bool IsEnabled
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xD5E058", Offset = "0xD5E058", VA = "0xD5E058", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xD5E090", Offset = "0xD5E090", VA = "0xD5E090", Slot = "8")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xD5E348", Offset = "0xD5E348", VA = "0xD5E348", Slot = "9")]
	public override void StartRain()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xD5E410", Offset = "0xD5E410", VA = "0xD5E410", Slot = "10")]
	public override void StopRain()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xD5E49C", Offset = "0xD5E49C", VA = "0xD5E49C", Slot = "11")]
	public override void StopRainImmidiate()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD5E57C", Offset = "0xD5E57C", VA = "0xD5E57C", Slot = "12")]
	public override void ApplyFinalDepth(int depth)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xD5E610", Offset = "0xD5E610", VA = "0xD5E610", Slot = "13")]
	public override void ApplyGlobalWind(Vector2 globalWind)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xD5E680", Offset = "0xD5E680", VA = "0xD5E680", Slot = "14")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD5E6C0", Offset = "0xD5E6C0", VA = "0xD5E6C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD5E714", Offset = "0xD5E714", VA = "0xD5E714", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xD5E178", Offset = "0xD5E178", VA = "0xD5E178")]
	private StaticRainController CreateController()
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xD5E7E0", Offset = "0xD5E7E0", VA = "0xD5E7E0")]
	public void InitParams()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD5E7F8", Offset = "0xD5E7F8", VA = "0xD5E7F8")]
	public StaticRainBehaviour()
	{
	}
}
[Token(Token = "0x2000074")]
public class StaticRainController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006C0")]
	public enum DrawState
	{
		[Token(Token = "0x4002AB0")]
		Playing,
		[Token(Token = "0x4002AB1")]
		Disabled
	}

	[Serializable]
	[Token(Token = "0x20006C1")]
	public class StaticRainDrawerContainer : RainDrawerContainer<RainDrawer>
	{
		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrawState currentState;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeElapsed;

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xD5E878", Offset = "0xD5E878", VA = "0xD5E878")]
		public StaticRainDrawerContainer(string name, Transform parent)
		{
		}
	}

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37CB8", Offset = "0xB37CB8")]
	private StaticRainVariables <Variables>k__BackingField;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37CC8", Offset = "0xB37CC8")]
	private int <RenderQueue>k__BackingField;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37CD8", Offset = "0xB37CD8")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37CE8", Offset = "0xB37CE8")]
	private float <Alpha>k__BackingField;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37CF8", Offset = "0xB37CF8")]
	private bool <NoMoreRain>k__BackingField;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37D08", Offset = "0xB37D08")]
	private RainDropTools.RainDropShaderType <ShaderType>k__BackingField;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37D18", Offset = "0xB37D18")]
	private bool <VRMode>k__BackingField;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StaticRainDrawerContainer staticDrawer;

	[Token(Token = "0x1700006B")]
	public StaticRainVariables Variables
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xD5E800", Offset = "0xD5E800", VA = "0xD5E800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46060", Offset = "0xB46060")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xD5E808", Offset = "0xD5E808", VA = "0xD5E808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46070", Offset = "0xB46070")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public int RenderQueue
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xD5E810", Offset = "0xD5E810", VA = "0xD5E810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46080", Offset = "0xB46080")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xD5E818", Offset = "0xD5E818", VA = "0xD5E818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46090", Offset = "0xB46090")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public Camera camera
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xD5E820", Offset = "0xD5E820", VA = "0xD5E820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB460A0", Offset = "0xB460A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xD5E828", Offset = "0xD5E828", VA = "0xD5E828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB460B0", Offset = "0xB460B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public float Alpha
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xD5E830", Offset = "0xD5E830", VA = "0xD5E830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB460C0", Offset = "0xB460C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xD5E838", Offset = "0xD5E838", VA = "0xD5E838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB460D0", Offset = "0xB460D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public bool NoMoreRain
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xD5E840", Offset = "0xD5E840", VA = "0xD5E840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB460E0", Offset = "0xB460E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xD5E848", Offset = "0xD5E848", VA = "0xD5E848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB460F0", Offset = "0xB460F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public RainDropTools.RainDropShaderType ShaderType
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xD5E854", Offset = "0xD5E854", VA = "0xD5E854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46100", Offset = "0xB46100")]
		get
		{
			return default(RainDropTools.RainDropShaderType);
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xD5E85C", Offset = "0xD5E85C", VA = "0xD5E85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46110", Offset = "0xB46110")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public bool VRMode
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xD5E864", Offset = "0xD5E864", VA = "0xD5E864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46120", Offset = "0xB46120")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xD5E86C", Offset = "0xD5E86C", VA = "0xD5E86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46130", Offset = "0xB46130")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xD5E034", Offset = "0xD5E034", VA = "0xD5E034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xD5E25C", Offset = "0xD5E25C", VA = "0xD5E25C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xD5E3EC", Offset = "0xD5E3EC", VA = "0xD5E3EC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xD5E7E4", Offset = "0xD5E7E4", VA = "0xD5E7E4")]
	public void UpdateController()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xD5EF08", Offset = "0xD5EF08", VA = "0xD5EF08")]
	private float GetProgress(StaticRainDrawerContainer dc)
	{
		return default(float);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD5E8E8", Offset = "0xD5E8E8", VA = "0xD5E8E8")]
	private void InitializeInstance(StaticRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xD5E940", Offset = "0xD5E940", VA = "0xD5E940")]
	private void UpdateInstance(StaticRainDrawerContainer dc)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xD5EF34", Offset = "0xD5EF34", VA = "0xD5EF34")]
	public StaticRainController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000075")]
public class StaticRainVariables
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AutoStart;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool FullScreen;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color OverlayColor;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture OverlayTexture;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture NormalMap;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37D28", Offset = "0xB37D28")]
	public float fadeTime;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve FadeinCurve;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37D40", Offset = "0xB37D40")]
	public float SizeX;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37D5C", Offset = "0xB37D5C")]
	public float SizeY;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37D78", Offset = "0xB37D78")]
	public float SpawnOffsetX;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37D90", Offset = "0xB37D90")]
	public float SpawnOffsetY;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37DA8", Offset = "0xB37DA8")]
	public float DistortionValue;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37DC8", Offset = "0xB37DC8")]
	public float ReliefValue;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37DE0", Offset = "0xB37DE0")]
	public float Blur;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37DF8", Offset = "0xB37DF8")]
	public float Darkness;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xD5EF3C", Offset = "0xD5EF3C", VA = "0xD5EF3C")]
	public StaticRainVariables()
	{
	}
}
[Token(Token = "0x2000076")]
public class SimpleMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cam;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeed;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xCA69D4", Offset = "0xCA69D4", VA = "0xCA69D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xCA6CD4", Offset = "0xCA6CD4", VA = "0xCA6CD4")]
	public SimpleMovement()
	{
	}
}
[Token(Token = "0x2000077")]
public class Gui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] mats;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] models;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool toggle;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentSky;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xCDAE0C", Offset = "0xCDAE0C", VA = "0xCDAE0C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xCDB2F4", Offset = "0xCDB2F4", VA = "0xCDB2F4")]
	private void ApplyMaterial()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xCDB3C0", Offset = "0xCDB3C0", VA = "0xCDB3C0")]
	public Gui()
	{
	}
}
[Token(Token = "0x2000078")]
public class NormalisedSpline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierSpline baseSpline;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalDistance;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve normalisedSpeedCurve;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int samples;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x17C17AC", Offset = "0x17C17AC", VA = "0x17C17AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46140", Offset = "0xB46140")]
	private void CreateNormaliseCurve()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x17C1ADC", Offset = "0x17C1ADC", VA = "0x17C1ADC")]
	public Vector3 GetPosAtPoint(float normPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x17C1AC0", Offset = "0x17C1AC0", VA = "0x17C1AC0")]
	public Vector3 GetRawPosAtPoint(float point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x17C1B1C", Offset = "0x17C1B1C", VA = "0x17C1B1C")]
	public NormalisedSpline()
	{
	}
}
[Token(Token = "0x2000079")]
public class ParachuteController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ParachuteController _instance;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NormalisedSpline path;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Parachuter> _parachuters;

	[Token(Token = "0x4000317")]
	private const float PATH_OFFSET_RANGE = 40f;

	[Token(Token = "0x4000318")]
	private const float PARACHUTE_SPEED = 30f;

	[Token(Token = "0x4000319")]
	private const float Fall_SPEED = 6f;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float splineLeftInterceptMin;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float splineLeftInterceptMax;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float splineRightInterceptMin;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float splineRightInterceptMax;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool drawGizmos;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool alternateSides;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve ease;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xF27220", Offset = "0xF27220", VA = "0xF27220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xF27308", Offset = "0xF27308", VA = "0xF27308")]
	private void MoveParachuters(Vector3 offset)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xF27470", Offset = "0xF27470", VA = "0xF27470")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xF274D8", Offset = "0xF274D8", VA = "0xF274D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xF275AC", Offset = "0xF275AC", VA = "0xF275AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xF28024", Offset = "0xF28024", VA = "0xF28024")]
	private Vector3 GetRelCircuitPos(Parachuter parachuter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xF28118", Offset = "0xF28118", VA = "0xF28118")]
	private void AddParachuter(Transform player, float currentSpeed)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xF28394", Offset = "0xF28394", VA = "0xF28394")]
	public static void TakeTheWheel(Transform player, float currentSpeed)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xF28404", Offset = "0xF28404", VA = "0xF28404")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xF2856C", Offset = "0xF2856C", VA = "0xF2856C")]
	public ParachuteController()
	{
	}
}
[Token(Token = "0x200007A")]
public class Parachuter
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool attached;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float startTime;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float initSpeed;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tform;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float normPos;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 lastPos;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 initFWD;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int direction;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float attachTime;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 attachOffset;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 lastAttachOffset;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 finalOffset;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xF282F0", Offset = "0xF282F0", VA = "0xF282F0")]
	public Parachuter(float normPos, float speed, Transform tform, int direction, Vector3 finalOffset)
	{
	}
}
[Token(Token = "0x200007B")]
public static class Performance
{
	[Token(Token = "0x6000321")]
	[Address(RVA = "0xCFC6E8", Offset = "0xCFC6E8", VA = "0xCFC6E8")]
	public static void SetHighPerformance(bool cpu = true, bool gpu = true)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xCFC6EC", Offset = "0xCFC6EC", VA = "0xCFC6EC")]
	public static void SetStandardPerformance(bool cpu = true, bool gpu = true)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xCFC6F0", Offset = "0xCFC6F0", VA = "0xCFC6F0")]
	public static void SetHighPerformanceTimed(float duration, bool cpu = true, bool gpu = true)
	{
	}
}
[Token(Token = "0x200007C")]
public class BasketBallTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34300", Offset = "0xB34300")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketBallTrigger <>4__this;

		[Token(Token = "0x170003E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0xE6EF9C", Offset = "0xE6EF9C", VA = "0xE6EF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xE6F004", Offset = "0xE6F004", VA = "0xE6F004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xE6E9A4", Offset = "0xE6E9A4", VA = "0xE6E9A4")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xE6EE48", Offset = "0xE6EE48", VA = "0xE6EE48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0xE6EE4C", Offset = "0xE6EE4C", VA = "0xE6EE4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0xE6EFA4", Offset = "0xE6EFA4", VA = "0xE6EFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34310", Offset = "0xB34310")]
	private sealed class <PlayAudio>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketBallTrigger <>4__this;

		[Token(Token = "0x170003EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xE6EDD8", Offset = "0xE6EDD8", VA = "0xE6EDD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xE6EE40", Offset = "0xE6EE40", VA = "0xE6EE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0xE6EB60", Offset = "0xE6EB60", VA = "0xE6EB60")]
		[DebuggerHidden]
		public <PlayAudio>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0xE6EC64", Offset = "0xE6EC64", VA = "0xE6EC64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0xE6EC68", Offset = "0xE6EC68", VA = "0xE6EC68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0xE6EDE0", Offset = "0xE6EDE0", VA = "0xE6EDE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particles;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _playing;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xE6E934", Offset = "0xE6E934", VA = "0xE6E934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46178", Offset = "0xB46178")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xE6E9D0", Offset = "0xE6E9D0", VA = "0xE6E9D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xE6EAF0", Offset = "0xE6EAF0", VA = "0xE6EAF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB461DC", Offset = "0xB461DC")]
	private IEnumerator PlayAudio()
	{
		return null;
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xE6EB8C", Offset = "0xE6EB8C", VA = "0xE6EB8C")]
	private void PlaySwish()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xE6EC54", Offset = "0xE6EC54", VA = "0xE6EC54")]
	public BasketBallTrigger()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xE6EC5C", Offset = "0xE6EC5C", VA = "0xE6EC5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46240", Offset = "0xB46240")]
	private void <PlayAudio>b__6_0()
	{
	}
}
[Token(Token = "0x200007D")]
public class CanOpener : Photon.MonoBehaviour
{
	[Token(Token = "0x20006C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34320", Offset = "0xB34320")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xD79B10", Offset = "0xD79B10", VA = "0xD79B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xD79B78", Offset = "0xD79B78", VA = "0xD79B78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0xD7898C", Offset = "0xD7898C", VA = "0xD7898C")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0xD79A9C", Offset = "0xD79A9C", VA = "0xD79A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0xD79AA0", Offset = "0xD79AA0", VA = "0xD79AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0xD79B18", Offset = "0xD79B18", VA = "0xD79B18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34330", Offset = "0xB34330")]
	private sealed class <Spray>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanOpener <>4__this;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <left>5__2;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.EmissionModule <fiz1Emit>5__3;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.EmissionModule <fiz2Emit>5__4;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.MainModule <fiz1Main>5__5;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.MainModule <fiz2Main>5__6;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <timer>5__7;

		[Token(Token = "0x170003EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xD79A2C", Offset = "0xD79A2C", VA = "0xD79A2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xD79A94", Offset = "0xD79A94", VA = "0xD79A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0xD79444", Offset = "0xD79444", VA = "0xD79444")]
		[DebuggerHidden]
		public <Spray>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0xD795F8", Offset = "0xD795F8", VA = "0xD795F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0xD795FC", Offset = "0xD795FC", VA = "0xD795FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0xD79A34", Offset = "0xD79A34", VA = "0xD79A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer holeCover;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tab;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform topZone;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem fiz1;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem fiz2;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRGrabbable can;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rig _rig;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRHand _nonGrabbedHand;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRHand _grabbedHand;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _canPinched;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _opened;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Rigidbody canRB;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _spraying;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _grabbedHandID;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _lastOpened;

	[Token(Token = "0x4000340")]
	private const float _TWO_CAN_BUFFER = 3f;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xD78854", Offset = "0xD78854", VA = "0xD78854")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xD7892C", Offset = "0xD7892C", VA = "0xD7892C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46250", Offset = "0xB46250")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xD789B8", Offset = "0xD789B8", VA = "0xD789B8")]
	private void OnGrabEnd(VRGrabber obj)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xD78A6C", Offset = "0xD78A6C", VA = "0xD78A6C")]
	private void OnGrabbed(VRGrabber vrGrabber)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xD78BB8", Offset = "0xD78BB8", VA = "0xD78BB8")]
	private void Destory()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xD78C4C", Offset = "0xD78C4C", VA = "0xD78C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xD78F60", Offset = "0xD78F60", VA = "0xD78F60")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB462B4", Offset = "0xB462B4")]
	private void Open()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xD791C4", Offset = "0xD791C4", VA = "0xD791C4")]
	[PunRPC]
	private void OpenEvent()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xD790E4", Offset = "0xD790E4", VA = "0xD790E4")]
	private bool CheckForRig()
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xD793D4", Offset = "0xD793D4", VA = "0xD793D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB462FC", Offset = "0xB462FC")]
	private IEnumerator Spray()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xD79470", Offset = "0xD79470", VA = "0xD79470")]
	private ParticleSystem.MinMaxCurve SetMinMax(float min, float max, float lerp, ParticleSystem.MinMaxCurve minMax)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xD79540", Offset = "0xD79540", VA = "0xD79540")]
	private ParticleSystem.MinMaxCurve SetConstant(float value, float lerp, ParticleSystem.MinMaxCurve minMax)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xD795E4", Offset = "0xD795E4", VA = "0xD795E4")]
	public CanOpener()
	{
	}
}
[Token(Token = "0x200007E")]
public class CanSprayReciever : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer rainPlane;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material rainMat;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _currentColor;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _lastRecievedColor;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _recieving;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color gray;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xD7A080", Offset = "0xD7A080", VA = "0xD7A080")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xD7A1B4", Offset = "0xD7A1B4", VA = "0xD7A1B4")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xD7A128", Offset = "0xD7A128", VA = "0xD7A128")]
	private void TurnOffRainPlane()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xD7A304", Offset = "0xD7A304", VA = "0xD7A304")]
	private void SetRainPlaneVis(bool visible)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xD7A398", Offset = "0xD7A398", VA = "0xD7A398")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xD7A468", Offset = "0xD7A468", VA = "0xD7A468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xD7A490", Offset = "0xD7A490", VA = "0xD7A490")]
	public CanSprayReciever()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xD7A50C", Offset = "0xD7A50C", VA = "0xD7A50C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46360", Offset = "0xB46360")]
	private void <TurnOffRainPlane>b__8_0()
	{
	}
}
[Token(Token = "0x200007F")]
public class CanSprayRecieverQuest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> rainMats;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color _currentColor;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color _lastRecievedColor;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _default;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _recieving;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xD7A538", Offset = "0xD7A538", VA = "0xD7A538")]
	private void Start()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xD7A5BC", Offset = "0xD7A5BC", VA = "0xD7A5BC")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xD7A53C", Offset = "0xD7A53C", VA = "0xD7A53C")]
	private void TurnOffRainPlane()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xD7A708", Offset = "0xD7A708", VA = "0xD7A708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xD7A884", Offset = "0xD7A884", VA = "0xD7A884")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xD7A7B0", Offset = "0xD7A7B0", VA = "0xD7A7B0")]
	private void SetMats(Color clr)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xD7A890", Offset = "0xD7A890", VA = "0xD7A890")]
	public CanSprayRecieverQuest()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xD7A90C", Offset = "0xD7A90C", VA = "0xD7A90C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46370", Offset = "0xB46370")]
	private void <TurnOffRainPlane>b__7_0()
	{
	}
}
[Token(Token = "0x2000080")]
public class CanTowerMaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _canPrefabs;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _horizontalSpacing;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _verticalSpacing;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _angleSnap;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int _towerHeight;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xD7A91C", Offset = "0xD7A91C", VA = "0xD7A91C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46380", Offset = "0xB46380")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xD7A920", Offset = "0xD7A920", VA = "0xD7A920")]
	public CanTowerMaker()
	{
	}
}
[Token(Token = "0x2000081")]
public class FizColour : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color fizColour;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xE9AAF0", Offset = "0xE9AAF0", VA = "0xE9AAF0")]
	public FizColour()
	{
	}
}
[Token(Token = "0x2000082")]
public class MassPhysicsSleep : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _onAwake;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody[] _rigidbodies;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xD3C208", Offset = "0xD3C208", VA = "0xD3C208")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD3C21C", Offset = "0xD3C21C", VA = "0xD3C21C")]
	public void Sleep(bool killVelocity = true)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xD3C290", Offset = "0xD3C290", VA = "0xD3C290")]
	private void SleepTarget(Rigidbody target, bool killVelocity = true)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xD3C340", Offset = "0xD3C340", VA = "0xD3C340")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB463B8", Offset = "0xB463B8")]
	public void FindChildRigidbodies()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xD3C398", Offset = "0xD3C398", VA = "0xD3C398")]
	public MassPhysicsSleep()
	{
	}
}
[Token(Token = "0x2000083")]
public class PointLightFlicker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float noise;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float flickerMin;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float movement;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _pointLight;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _baseIntensity;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _lPos;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC523DC", Offset = "0xC523DC", VA = "0xC523DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC524DC", Offset = "0xC524DC", VA = "0xC524DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC52838", Offset = "0xC52838", VA = "0xC52838")]
	public PointLightFlicker()
	{
	}
}
[Token(Token = "0x2000084")]
public class PostProcessAdd : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PlatformPostProcess> overrides;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC53440", Offset = "0xC53440", VA = "0xC53440")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC53558", Offset = "0xC53558", VA = "0xC53558")]
	public PostProcessAdd()
	{
	}
}
[Token(Token = "0x2000085")]
public class PostProcessSet : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PostProcessingBehaviour behaviour;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlatformPostProcess> overrides;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC537C0", Offset = "0xC537C0", VA = "0xC537C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC538B8", Offset = "0xC538B8", VA = "0xC538B8")]
	public PostProcessSet()
	{
	}
}
[Serializable]
[Token(Token = "0x2000086")]
public class PlatformPostProcess
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PostProcessingProfile profile;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformTarget platform;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC4C480", Offset = "0xC4C480", VA = "0xC4C480")]
	public PlatformPostProcess()
	{
	}
}
[Token(Token = "0x2000087")]
public class PropCollision : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string groupName;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PropManager propManager;

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC553C4", Offset = "0xC553C4", VA = "0xC553C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC55464", Offset = "0xC55464", VA = "0xC55464")]
	private void OnTriggerEnter(Collider trigger)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC555D4", Offset = "0xC555D4", VA = "0xC555D4")]
	public PropCollision()
	{
	}
}
[Token(Token = "0x2000088")]
public class PropManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PropGroup[] groups;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC555E4", Offset = "0xC555E4", VA = "0xC555E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC55758", Offset = "0xC55758", VA = "0xC55758")]
	private void Randomize()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC55880", Offset = "0xC55880", VA = "0xC55880")]
	private void EnableDemoProps()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC55874", Offset = "0xC55874", VA = "0xC55874")]
	private int GetIndex(int max)
	{
		return default(int);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC554F8", Offset = "0xC554F8", VA = "0xC554F8")]
	public void Collision(string groupName)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC5599C", Offset = "0xC5599C", VA = "0xC5599C")]
	public PropManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000089")]
public class PropGroup
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string groupName;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isTrigger;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objects;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC555DC", Offset = "0xC555DC", VA = "0xC555DC")]
	public PropGroup()
	{
	}
}
[Token(Token = "0x200008A")]
public class RingBuilder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer[] _meshes;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useNonEnglishSettings;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] disableNonEnglish;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string nonEnglishResource;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform nonEnglishParent;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _HAZE_COL;

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xBEBD08", Offset = "0xBEBD08", VA = "0xBEBD08")]
	public void SetMaterials(Material mat)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xBEBED8", Offset = "0xBEBED8", VA = "0xBEBED8")]
	private void SetupAlternateLanguage(Material mat)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xBEC0B8", Offset = "0xBEC0B8", VA = "0xBEC0B8")]
	public RingBuilder()
	{
	}
}
[Token(Token = "0x200008B")]
public class SetRendererLayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> renderers;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string layer;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xCA4884", Offset = "0xCA4884", VA = "0xCA4884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xCA4888", Offset = "0xCA4888", VA = "0xCA4888")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB463F0", Offset = "0xB463F0")]
	private void SetLayers()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xCA4924", Offset = "0xCA4924", VA = "0xCA4924")]
	public SetRendererLayer()
	{
	}
}
[Token(Token = "0x200008C")]
public class Rubberbanding : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400036E")]
	private const float _SMOOTHING = 0.2f;

	[Token(Token = "0x400036F")]
	private const float _SPEED_MAX = 0.2f;

	[Token(Token = "0x4000370")]
	private const float _DISTANCE_UNIT = 500f;

	[Token(Token = "0x4000371")]
	private const float _IGNORE_ZONE = 75f;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<UserPair<Transform>> _players;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, float> _amounts;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37ED0", Offset = "0xB37ED0")]
	private static bool <Enabled>k__BackingField;

	[Token(Token = "0x4000375")]
	public const int MAP_LENGTH = 7300;

	[Token(Token = "0x4000376")]
	public const float MAP_RB_TAPER_START = 0.5f;

	[Token(Token = "0x4000377")]
	public const float MAP_RB_TAPER_END = 0.65f;

	[Token(Token = "0x17000073")]
	public static bool Enabled
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xC9BB50", Offset = "0xC9BB50", VA = "0xC9BB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46428", Offset = "0xB46428")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xC9BBB8", Offset = "0xC9BBB8", VA = "0xC9BBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46438", Offset = "0xB46438")]
		private set
		{
		}
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC9BC28", Offset = "0xC9BC28", VA = "0xC9BC28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC9BE9C", Offset = "0xC9BE9C", VA = "0xC9BE9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC9BFBC", Offset = "0xC9BFBC", VA = "0xC9BFBC")]
	private void PlayerInstantiated(Multiplayer.Player.User player, Transform transform)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC9C0A8", Offset = "0xC9C0A8", VA = "0xC9C0A8")]
	public static float GetRubberbanding(int id)
	{
		return default(float);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xC9C1E8", Offset = "0xC9C1E8", VA = "0xC9C1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xC9C2B0", Offset = "0xC9C2B0", VA = "0xC9C2B0")]
	private static void GetPositionalBoost()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC9C75C", Offset = "0xC9C75C", VA = "0xC9C75C")]
	public Rubberbanding()
	{
	}
}
[Token(Token = "0x200008D")]
public class SceneRunFixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int mode;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int map;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int course;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC9CE98", Offset = "0xC9CE98", VA = "0xC9CE98")]
	public SceneRunFixer()
	{
	}
}
[Token(Token = "0x200008E")]
public class BeachBall : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody _rbody;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float force;

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xE6F00C", Offset = "0xE6F00C", VA = "0xE6F00C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xE6F064", Offset = "0xE6F064", VA = "0xE6F064")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xE6F238", Offset = "0xE6F238", VA = "0xE6F238")]
	public BeachBall()
	{
	}
}
[Token(Token = "0x200008F")]
public class LobbyHandle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform jointRef;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion _initLocalRot;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xD30BEC", Offset = "0xD30BEC", VA = "0xD30BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xD30C28", Offset = "0xD30C28", VA = "0xD30C28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xD30D1C", Offset = "0xD30D1C", VA = "0xD30D1C")]
	public LobbyHandle()
	{
	}
}
[Token(Token = "0x2000090")]
public class CanScreenFX : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rainCam;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RainLerper sprayFx;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RainLerper fadeFx;

	[Token(Token = "0x4000382")]
	private const float _ACTIVATION_SPEED = 5f;

	[Token(Token = "0x4000383")]
	private const float _DRAIN_SPEED = 1f;

	[Token(Token = "0x4000384")]
	private const float _ACTIVATION_AMOUNT = 1f;

	[Token(Token = "0x4000385")]
	private const float _DEATH_TIME = 2.5f;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _lerp;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _deathTime;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _active;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CanScreenFX Instance;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanWaterfall waterfall;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action _callback;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float renderScale;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xD79B80", Offset = "0xD79B80", VA = "0xD79B80")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xD79CA0", Offset = "0xD79CA0", VA = "0xD79CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xD79F44", Offset = "0xD79F44", VA = "0xD79F44")]
	private void SetCamOn(bool on)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xD7A05C", Offset = "0xD7A05C", VA = "0xD7A05C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xD7A060", Offset = "0xD7A060", VA = "0xD7A060")]
	public void ReportHit(Action callback)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xD7A070", Offset = "0xD7A070", VA = "0xD7A070")]
	public CanScreenFX()
	{
	}
}
[Token(Token = "0x2000091")]
public class CanWaterfall : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34340", Offset = "0xB34340")]
	private sealed class <WaterfallEnter>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanWaterfall <>4__this;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x170003F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xD7AD04", Offset = "0xD7AD04", VA = "0xD7AD04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xD7AD6C", Offset = "0xD7AD6C", VA = "0xD7AD6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0xD7A998", Offset = "0xD7A998", VA = "0xD7A998")]
		[DebuggerHidden]
		public <WaterfallEnter>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0xD7AA50", Offset = "0xD7AA50", VA = "0xD7AA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0xD7AA54", Offset = "0xD7AA54", VA = "0xD7AA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0xD7AD0C", Offset = "0xD7AD0C", VA = "0xD7AD0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform waterfallPlane;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _splashingAnim;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve wfMovement;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve wfAlpha;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _DISTORTION;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int _COLORINTENSITY;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xD7A024", Offset = "0xD7A024", VA = "0xD7A024")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xD7A928", Offset = "0xD7A928", VA = "0xD7A928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46448", Offset = "0xB46448")]
	private IEnumerator WaterfallEnter()
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xD7A9C4", Offset = "0xD7A9C4", VA = "0xD7A9C4")]
	public CanWaterfall()
	{
	}
}
[Token(Token = "0x2000092")]
public class RainLerper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem simple;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem dynamic;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule _sEmission;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.EmissionModule _dEmission;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _simpleMaxEmisison;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _dynamicMaxEmisison;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37EE0", Offset = "0xB37EE0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x17000074")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0xBE19C4", Offset = "0xBE19C4", VA = "0xBE19C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB464AC", Offset = "0xB464AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xBE19CC", Offset = "0xBE19CC", VA = "0xBE19CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB464BC", Offset = "0xB464BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xBE19D8", Offset = "0xBE19D8", VA = "0xBE19D8")]
	public void Setup(int simpleMax, int dynamicMax, bool stop)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xBE1A40", Offset = "0xBE1A40", VA = "0xBE1A40")]
	public void Play()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xBE1AC8", Offset = "0xBE1AC8", VA = "0xBE1AC8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xBE1B1C", Offset = "0xBE1B1C", VA = "0xBE1B1C")]
	public void SetAmount(float lerp)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xBE1BD4", Offset = "0xBE1BD4", VA = "0xBE1BD4")]
	private ParticleSystem.MinMaxCurve SetConstant(float value, float lerp, ParticleSystem.MinMaxCurve minMax)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xBE1C78", Offset = "0xBE1C78", VA = "0xBE1C78")]
	public RainLerper()
	{
	}
}
[Token(Token = "0x2000093")]
public class ScreenRain : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34350", Offset = "0xB34350")]
	private sealed class <Start>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenRain <>4__this;

		[Token(Token = "0x170003F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0xC9FC70", Offset = "0xC9FC70", VA = "0xC9FC70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0xC9FCD8", Offset = "0xC9FCD8", VA = "0xC9FCD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0xC9E648", Offset = "0xC9E648", VA = "0xC9E648")]
		[DebuggerHidden]
		public <Start>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0xC9F8B4", Offset = "0xC9F8B4", VA = "0xC9F8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0xC9F8B8", Offset = "0xC9F8B8", VA = "0xC9F8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0xC9FC78", Offset = "0xC9FC78", VA = "0xC9FC78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34360", Offset = "0xB34360")]
	private sealed class <WaterfallEnter>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenRain <>4__this;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x170003F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0xC9FEDC", Offset = "0xC9FEDC", VA = "0xC9FEDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0xC9FF44", Offset = "0xC9FF44", VA = "0xC9FF44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xC9E980", Offset = "0xC9E980", VA = "0xC9E980")]
		[DebuggerHidden]
		public <WaterfallEnter>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xC9FCE0", Offset = "0xC9FCE0", VA = "0xC9FCE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xC9FCE4", Offset = "0xC9FCE4", VA = "0xC9FCE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0xC9FEE4", Offset = "0xC9FEE4", VA = "0xC9FEE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AircraftControl player;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform camera;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform waterfallPlane;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _waterfallMat;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FXCollisions collisions;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WindZone windZone;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool editorOverride;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37EF0", Offset = "0xB37EF0")]
	public float speedOverride;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _splashing;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _splashLerpRaw;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _splashLerp;

	[Token(Token = "0x40003A6")]
	private const float WaterfallColliderRad = 75f;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _splashingAnim;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem simple;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem dynamic;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem.MainModule _sMain;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.MainModule _dMain;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.EmissionModule _sEmission;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ParticleSystem.EmissionModule _dEmission;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ParticleSystem.VelocityOverLifetimeModule _dVelocity;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ParticleSystem.ShapeModule _dShape;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve wfMovement;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve wfAlpha;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rainCam;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject screenFrame;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _init;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37F08", Offset = "0xB37F08")]
	private static bool <UsingScreenRain>k__BackingField;

	[Token(Token = "0x17000075")]
	public static bool UsingScreenRain
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xC9E530", Offset = "0xC9E530", VA = "0xC9E530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB464CC", Offset = "0xB464CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xC9E580", Offset = "0xC9E580", VA = "0xC9E580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB464DC", Offset = "0xB464DC")]
		private set
		{
		}
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC9E5D8", Offset = "0xC9E5D8", VA = "0xC9E5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB464EC", Offset = "0xB464EC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC9E674", Offset = "0xC9E674", VA = "0xC9E674")]
	private bool WeatherHasRain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC9E6BC", Offset = "0xC9E6BC", VA = "0xC9E6BC")]
	private void OnWaterStay(Collider obj)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC9E910", Offset = "0xC9E910", VA = "0xC9E910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46550", Offset = "0xB46550")]
	private IEnumerator WaterfallEnter()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xC9E9AC", Offset = "0xC9E9AC", VA = "0xC9E9AC")]
	private void OnWaterExit(Collider obj)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC9E9B4", Offset = "0xC9E9B4", VA = "0xC9E9B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC9F248", Offset = "0xC9F248", VA = "0xC9F248")]
	private void SetWindSpeed(out float fwdWindAmount)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC9F54C", Offset = "0xC9F54C", VA = "0xC9F54C")]
	private ParticleSystem.MinMaxCurve SetMinMax(float min, float max, float lerp, float plusMinus, ParticleSystem.MinMaxCurve minMax)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xC9F4E0", Offset = "0xC9F4E0", VA = "0xC9F4E0")]
	private ParticleSystem.MinMaxCurve SetMinMax(float mid, float plusMinus, ParticleSystem.MinMaxCurve minMax)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xC9F624", Offset = "0xC9F624", VA = "0xC9F624")]
	private void SetLerpValueWithRange(float min, float max, float lerp, float plusMinus, ref float setMin, ref float setMax)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC9F700", Offset = "0xC9F700", VA = "0xC9F700")]
	private void SetLerpValueWithRange(float min, float max, float lerp, float plusMinus, ref int setMin, ref int setMax)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC9F6E0", Offset = "0xC9F6E0", VA = "0xC9F6E0")]
	private void SetLerpValue(float value, float plusMinus, ref float setMin, ref float setMax)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC9F7AC", Offset = "0xC9F7AC", VA = "0xC9F7AC")]
	private void SetLerpValue(float value, float plusMinus, ref int setMin, ref int setMax)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC9F168", Offset = "0xC9F168", VA = "0xC9F168")]
	private float GetPlayerSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC9F85C", Offset = "0xC9F85C", VA = "0xC9F85C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC9F8AC", Offset = "0xC9F8AC", VA = "0xC9F8AC")]
	public ScreenRain()
	{
	}
}
[Token(Token = "0x2000094")]
public class ScreenRainController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34370", Offset = "0xB34370")]
	private sealed class <Splash>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenRainController <>4__this;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxDynamicSize>5__3;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxSimpleSize>5__4;

		[Token(Token = "0x170003F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0xCA1254", Offset = "0xCA1254", VA = "0xCA1254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0xCA12BC", Offset = "0xCA12BC", VA = "0xCA12BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xCA0ED0", Offset = "0xCA0ED0", VA = "0xCA0ED0")]
		[DebuggerHidden]
		public <Splash>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xCA0FA4", Offset = "0xCA0FA4", VA = "0xCA0FA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0xCA0FA8", Offset = "0xCA0FA8", VA = "0xCA0FA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0xCA125C", Offset = "0xCA125C", VA = "0xCA125C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AircraftControl player;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FrictionFlowRainBehaviour dynamicRain;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FrictionFlowRainBehaviour waterfallRain;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SimpleRainBehaviour simpleRain;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SimpleRainBehaviour waterfallEnter;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform camera;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FXCollisions collisions;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource splashAudio;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve splashCurve;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject splashParticles;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool editorOverride;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37F18", Offset = "0xB37F18")]
	public float speedOverride;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float PlayerSpeed;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 DynamicWind;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _pausedDynamic;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _pausedSimple;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool _splashing;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _splashLerpRaw;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _splashLerp;

	[Token(Token = "0x40003C9")]
	private const float WaterfallColliderRad = 75f;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _waterfallEnterTimer;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB37F30", Offset = "0xB37F30")]
	public float rainAmount;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float RainAmount;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC9FF4C", Offset = "0xC9FF4C", VA = "0xC9FF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xCA0024", Offset = "0xCA0024", VA = "0xCA0024")]
	private void OnWaterStay(Collider obj)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xCA0218", Offset = "0xCA0218", VA = "0xCA0218")]
	private void OnWaterExit(Collider obj)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xCA0220", Offset = "0xCA0220", VA = "0xCA0220")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xCA0B64", Offset = "0xCA0B64", VA = "0xCA0B64")]
	private void PauseDynamic(bool pause)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xCA0C94", Offset = "0xCA0C94", VA = "0xCA0C94")]
	private void PauseSimple(bool pause)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xCA09A8", Offset = "0xCA09A8", VA = "0xCA09A8")]
	private float GetPlayerSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xCA0A88", Offset = "0xCA0A88", VA = "0xCA0A88")]
	private void SetLerpValueWithRange(float min, float max, float lerp, float plusMinus, ref float setMin, ref float setMax)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xCA0D14", Offset = "0xCA0D14", VA = "0xCA0D14")]
	private void SetLerpValueWithRange(float min, float max, float lerp, float plusMinus, ref int setMin, ref int setMax)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xCA0B44", Offset = "0xCA0B44", VA = "0xCA0B44")]
	private void SetLerpValue(float value, float plusMinus, ref float setMin, ref float setMax)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xCA0BE4", Offset = "0xCA0BE4", VA = "0xCA0BE4")]
	private void SetLerpValue(float value, float plusMinus, ref int setMin, ref int setMax)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xCA0DC0", Offset = "0xCA0DC0", VA = "0xCA0DC0")]
	private void OnCollision(string tag)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xCA0E60", Offset = "0xCA0E60", VA = "0xCA0E60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB465B4", Offset = "0xB465B4")]
	private IEnumerator Splash()
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xCA0EFC", Offset = "0xCA0EFC", VA = "0xCA0EFC")]
	public ScreenRainController()
	{
	}
}
[Token(Token = "0x2000095")]
public class ScreenWaterfall : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34380", Offset = "0xB34380")]
	private sealed class <WaterfallEnter>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenWaterfall <>4__this;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x170003F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xCA2950", Offset = "0xCA2950", VA = "0xCA2950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xCA29B8", Offset = "0xCA29B8", VA = "0xCA29B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0xCA25A4", Offset = "0xCA25A4", VA = "0xCA25A4")]
		[DebuggerHidden]
		public <WaterfallEnter>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0xCA2724", Offset = "0xCA2724", VA = "0xCA2724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0xCA2728", Offset = "0xCA2728", VA = "0xCA2728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0xCA2958", Offset = "0xCA2958", VA = "0xCA2958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AircraftControl _player;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScreenRainMobile screenRain;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform waterfallPlane;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material mat;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _splashing;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _splashLerpRaw;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _splashLerp;

	[Token(Token = "0x40003D4")]
	private const float WaterfallColliderRad = 75f;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _splashingAnim;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve wfMovement;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve wfAlpha;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _DISTORTION;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xCA2188", Offset = "0xCA2188", VA = "0xCA2188")]
	public void Init(FXCollisions collisions, AircraftControl player)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xCA2264", Offset = "0xCA2264", VA = "0xCA2264")]
	private void OnWaterStay(Collider obj)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xCA2534", Offset = "0xCA2534", VA = "0xCA2534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46618", Offset = "0xB46618")]
	private IEnumerator WaterfallEnter()
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xCA25D0", Offset = "0xCA25D0", VA = "0xCA25D0")]
	private void OnWaterExit(Collider obj)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xCA25D8", Offset = "0xCA25D8", VA = "0xCA25D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xCA26B0", Offset = "0xCA26B0", VA = "0xCA26B0")]
	public ScreenWaterfall()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xCA271C", Offset = "0xCA271C", VA = "0xCA271C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4667C", Offset = "0xB4667C")]
	private void <OnWaterStay>b__13_0()
	{
	}
}
[Token(Token = "0x2000096")]
public class ScreenshotCapture : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KeyCode _triggerKey;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _superSample;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _fileName;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _nextIndex;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xCA29C0", Offset = "0xCA29C0", VA = "0xCA29C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xCA2A3C", Offset = "0xCA2A3C", VA = "0xCA2A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xCA2A78", Offset = "0xCA2A78", VA = "0xCA2A78")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4668C", Offset = "0xB4668C")]
	private void Capture()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xCA2B08", Offset = "0xCA2B08", VA = "0xCA2B08")]
	public ScreenshotCapture()
	{
	}
}
[Token(Token = "0x2000097")]
public class SetLayerFarPlane : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34390", Offset = "0xB34390")]
	private sealed class <ReduceFarPlaneRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetLayerFarPlane <>4__this;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <reduceFP>5__2;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <duration>5__4;

		[Token(Token = "0x170003FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xCA4678", Offset = "0xCA4678", VA = "0xCA4678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xCA46E0", Offset = "0xCA46E0", VA = "0xCA46E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0xCA44E4", Offset = "0xCA44E4", VA = "0xCA44E4")]
		[DebuggerHidden]
		public <ReduceFarPlaneRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0xCA4518", Offset = "0xCA4518", VA = "0xCA4518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0xCA451C", Offset = "0xCA451C", VA = "0xCA451C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0xCA4680", Offset = "0xCA4680", VA = "0xCA4680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _initViewDistance;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _camera;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xCA4388", Offset = "0xCA4388", VA = "0xCA4388")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xCA4444", Offset = "0xCA4444", VA = "0xCA4444")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xCA4448", Offset = "0xCA4448", VA = "0xCA4448")]
	private void ReduceFarPlane()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xCA4474", Offset = "0xCA4474", VA = "0xCA4474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB466C4", Offset = "0xB466C4")]
	private IEnumerator ReduceFarPlaneRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xCA4510", Offset = "0xCA4510", VA = "0xCA4510")]
	public SetLayerFarPlane()
	{
	}
}
[Token(Token = "0x2000098")]
public class HUDFPS : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343A0", Offset = "0xB343A0")]
	private sealed class <UpdateCounter>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HUDFPS <>4__this;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <previousUpdateTime>5__2;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <previousUpdateFrames>5__3;

		[Token(Token = "0x170003FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xCDBB6C", Offset = "0xCDBB6C", VA = "0xCDBB6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xCDBBD4", Offset = "0xCDBBD4", VA = "0xCDBBD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0xCDB8F0", Offset = "0xCDB8F0", VA = "0xCDB8F0")]
		[DebuggerHidden]
		public <UpdateCounter>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xCDBA84", Offset = "0xCDBA84", VA = "0xCDBA84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0xCDBA88", Offset = "0xCDBA88", VA = "0xCDBA88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0xCDBB74", Offset = "0xCDBB74", VA = "0xCDBB74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float accum;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frames;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeleft;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh guiText;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSecondsUnscaled cachedWaitForSecondsUnscaled;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xCDB7A4", Offset = "0xCDB7A4", VA = "0xCDB7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xCDB880", Offset = "0xCDB880", VA = "0xCDB880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46728", Offset = "0xB46728")]
	protected IEnumerator UpdateCounter()
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xCDB91C", Offset = "0xCDB91C", VA = "0xCDB91C")]
	private void UpdateText(float fps)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xCDBA10", Offset = "0xCDBA10", VA = "0xCDBA10")]
	public HUDFPS()
	{
	}
}
[Token(Token = "0x2000099")]
public class SpawnNetworkPrefabOnStart : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _prefab;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _spawnWorldSpace;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int _viewId;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonView _pv;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDAF928", Offset = "0xDAF928", VA = "0xDAF928")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDAFA44", Offset = "0xDAFA44", VA = "0xDAFA44")]
	public SpawnNetworkPrefabOnStart()
	{
	}
}
[Token(Token = "0x200009A")]
public class SpawnPrefabOnStart : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _prefab;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _spawnWorldSpace;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDB2BE0", Offset = "0xDB2BE0", VA = "0xDB2BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xDB2CC0", Offset = "0xDB2CC0", VA = "0xDB2CC0")]
	public SpawnPrefabOnStart()
	{
	}
}
[Token(Token = "0x200009B")]
public class AnimateAlongSpline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _offsetCounter;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierSpline path;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform mover;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offset;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _renderer;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _lastPos;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float variableTime;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve AdditiveMotionY;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float addMotionSpeed;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float addMotionHeight;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool lockXRotation;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool loop;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _scaleMag;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform _cam;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _me;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _wasOnScreen;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _lastVisCheck;

	[Token(Token = "0x40003FD")]
	public const int ANIMATE_DISTANCE = 1200;

	[Token(Token = "0x40003FE")]
	public const int ANIMATE_DISTANCE_SQR = 1440000;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool alwaysOnScreen;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject _child;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _checkOffset;

	[Token(Token = "0x4000402")]
	private const int _FRAME_FLIP = 3;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _frameCount;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _velocity;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xE69994", Offset = "0xE69994", VA = "0xE69994")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xE69A10", Offset = "0xE69A10", VA = "0xE69A10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xE69A8C", Offset = "0xE69A8C", VA = "0xE69A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xE69E64", Offset = "0xE69E64", VA = "0xE69E64")]
	private void UpdateCamera(Transform cameraTransform, Transform parentTransform)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xE69ED0", Offset = "0xE69ED0", VA = "0xE69ED0")]
	private bool OnScreen()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xE6A0E4", Offset = "0xE6A0E4", VA = "0xE6A0E4")]
	public static void SetCamera(Transform camera)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xE6A150", Offset = "0xE6A150", VA = "0xE6A150")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xE6A38C", Offset = "0xE6A38C", VA = "0xE6A38C")]
	private Vector3 GetPosAtTime(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xE6A3A4", Offset = "0xE6A3A4", VA = "0xE6A3A4")]
	private void RotateTowardDirection()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xE6A768", Offset = "0xE6A768", VA = "0xE6A768")]
	public AnimateAlongSpline()
	{
	}
}
[Token(Token = "0x200009C")]
public static class Bezier
{
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xE6F248", Offset = "0xE6F248", VA = "0xE6F248")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xE6F3D4", Offset = "0xE6F3D4", VA = "0xE6F3D4")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xE6F530", Offset = "0xE6F530", VA = "0xE6F530")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xE6F728", Offset = "0xE6F728", VA = "0xE6F728")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200009D")]
public enum BezierControlPointMode
{
	[Token(Token = "0x4000406")]
	Free,
	[Token(Token = "0x4000407")]
	Aligned,
	[Token(Token = "0x4000408")]
	Mirrored
}
[Token(Token = "0x200009E")]
public class BezierCurve : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xE6F964", Offset = "0xE6F964", VA = "0xE6F964")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xE6FA18", Offset = "0xE6FA18", VA = "0xE6FA18")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xE6FB74", Offset = "0xE6FB74", VA = "0xE6FB74")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xE6FBA4", Offset = "0xE6FBA4", VA = "0xE6FBA4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xE6FD08", Offset = "0xE6FD08", VA = "0xE6FD08")]
	public BezierCurve()
	{
	}
}
[Token(Token = "0x200009F")]
public class BezierDebug : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierSpline spline;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _ticker;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xE6FD10", Offset = "0xE6FD10", VA = "0xE6FD10")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xE6FD94", Offset = "0xE6FD94", VA = "0xE6FD94")]
	public BezierDebug()
	{
	}
}
[Token(Token = "0x20000A0")]
public struct BezierSerializable
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3Serializable[] points;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int[] modeIndexs;
}
[Token(Token = "0x20000A1")]
public class BezierSpline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Vector3[] points;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BezierControlPointMode[] modes;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool loop;

	[Token(Token = "0x17000076")]
	public bool Loop
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xE6FFA4", Offset = "0xE6FFA4", VA = "0xE6FFA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xE6FFAC", Offset = "0xE6FFAC", VA = "0xE6FFAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int ControlPointCount
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xE70878", Offset = "0xE70878", VA = "0xE70878")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000078")]
	public int CurveCount
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xE70CEC", Offset = "0xE70CEC", VA = "0xE70CEC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xE705BC", Offset = "0xE705BC", VA = "0xE705BC")]
	public void UpdateValues(BezierSerializable data)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xE70710", Offset = "0xE70710", VA = "0xE70710")]
	public BezierSerializable Convert()
	{
		return default(BezierSerializable);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xE70894", Offset = "0xE70894", VA = "0xE70894")]
	public Vector3 GetControlPoint(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xE70100", Offset = "0xE70100", VA = "0xE70100")]
	public void SetControlPoint(int index, Vector3 point)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xE70BEC", Offset = "0xE70BEC", VA = "0xE70BEC")]
	public BezierControlPointMode GetControlPointMode(int index)
	{
		return default(BezierControlPointMode);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xE70C44", Offset = "0xE70C44", VA = "0xE70C44")]
	public void SetControlPointMode(int index, BezierControlPointMode mode)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xE708F8", Offset = "0xE708F8", VA = "0xE708F8")]
	private void EnforceMode(int index)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xE6A5A4", Offset = "0xE6A5A4", VA = "0xE6A5A4")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xE69C18", Offset = "0xE69C18", VA = "0xE69C18")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xE70D24", Offset = "0xE70D24", VA = "0xE70D24")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xE70D54", Offset = "0xE70D54", VA = "0xE70D54")]
	public void AddCurve(int index, CurveSpawn curveSpawn = CurveSpawn.End)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xE71128", Offset = "0xE71128", VA = "0xE71128")]
	public void RemoveCurve(int selectedIndex)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xE7133C", Offset = "0xE7133C", VA = "0xE7133C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xE714D8", Offset = "0xE714D8", VA = "0xE714D8")]
	public BezierSpline()
	{
	}
}
[Token(Token = "0x20000A2")]
public enum CurveSpawn
{
	[Token(Token = "0x4000412")]
	End,
	[Token(Token = "0x4000413")]
	Left,
	[Token(Token = "0x4000414")]
	Right
}
[Token(Token = "0x20000A3")]
public class RunSpline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _pos;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BezierSpline _spline;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _started;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _ticker;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _tickerTarget;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action _callback;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _reverse;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC9C808", Offset = "0xC9C808", VA = "0xC9C808")]
	public void Begin(BezierSpline spline, float time, [Optional] Action callback, bool reverse = false)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC9C8DC", Offset = "0xC9C8DC", VA = "0xC9C8DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC9CA5C", Offset = "0xC9CA5C", VA = "0xC9CA5C")]
	public RunSpline()
	{
	}
}
[Token(Token = "0x20000A4")]
public struct Vector2Serializable
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xF5C2C4", Offset = "0xF5C2C4", VA = "0xF5C2C4")]
	public Vector2Serializable(Vector2 input)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xF5C2CC", Offset = "0xF5C2CC", VA = "0xF5C2CC")]
	public static Vector2 Convert(Vector2Serializable input)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20000A5")]
public struct Vector3Serializable
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xF5C2F8", Offset = "0xF5C2F8", VA = "0xF5C2F8")]
	public Vector3Serializable(Vector3 input)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xF5C304", Offset = "0xF5C304", VA = "0xF5C304")]
	public static Vector3 Convert(Vector3Serializable input)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000A6")]
public class SetAsPropCam : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xCA42BC", Offset = "0xCA42BC", VA = "0xCA42BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xCA4380", Offset = "0xCA4380", VA = "0xCA4380")]
	public SetAsPropCam()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TimeManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeManager _instance;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Action> _updateHalf;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Action> _lateUpdateFull;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xCB2EAC", Offset = "0xCB2EAC", VA = "0xCB2EAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xCB2F14", Offset = "0xCB2F14", VA = "0xCB2F14")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xCB3008", Offset = "0xCB3008", VA = "0xCB3008")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xCB30E8", Offset = "0xCB30E8", VA = "0xCB30E8")]
	private static void CreateIfNeeded()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xCB329C", Offset = "0xCB329C", VA = "0xCB329C")]
	public static void AddUpdate(Action action, UpdateRate rate)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xCB338C", Offset = "0xCB338C", VA = "0xCB338C")]
	public static void RemoveUpdate(Action action, UpdateRate rate)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xCB347C", Offset = "0xCB347C", VA = "0xCB347C")]
	public TimeManager()
	{
	}
}
[Token(Token = "0x20000A8")]
public enum UpdateRate
{
	[Token(Token = "0x4000425")]
	Half,
	[Token(Token = "0x4000426")]
	LateFull
}
[Token(Token = "0x20000A9")]
[ExecuteInEditMode]
public class TimeOfDayTint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient gradient;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient positon;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool drawPos;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xCB3520", Offset = "0xCB3520", VA = "0xCB3520")]
	public void Update()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xCB35F0", Offset = "0xCB35F0", VA = "0xCB35F0")]
	public TimeOfDayTint()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TrainTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation trainAnimation;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xCB5190", Offset = "0xCB5190", VA = "0xCB5190")]
	private void OnTriggerEnter(Collider trigger)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xCB5244", Offset = "0xCB5244", VA = "0xCB5244")]
	public TrainTrigger()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TreeWindSetter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material treeMat;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xCB63FC", Offset = "0xCB63FC", VA = "0xCB63FC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xCB6494", Offset = "0xCB6494", VA = "0xCB6494")]
	private void SetMatToWeather(WeatherType weather)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xCB65F4", Offset = "0xCB65F4", VA = "0xCB65F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4678C", Offset = "0xB4678C")]
	private void SetTreesLevel0()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xCB65FC", Offset = "0xCB65FC", VA = "0xCB65FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB467C4", Offset = "0xB467C4")]
	private void SetTreesLevel1()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xCB6604", Offset = "0xCB6604", VA = "0xCB6604")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB467FC", Offset = "0xB467FC")]
	private void SetTreesLevel2()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xCB660C", Offset = "0xCB660C", VA = "0xCB660C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46834", Offset = "0xB46834")]
	private void SetTreesLevel3()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xCB6614", Offset = "0xCB6614", VA = "0xCB6614")]
	public TreeWindSetter()
	{
	}
}
[Token(Token = "0x20000AC")]
public class BuildRing : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RingBuilder builder;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xD74708", Offset = "0xD74708", VA = "0xD74708")]
	private void Start()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xD7472C", Offset = "0xD7472C", VA = "0xD7472C")]
	public BuildRing()
	{
	}
}
[Token(Token = "0x20000AD")]
public class CloudShuffler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343B0", Offset = "0xB343B0")]
	private sealed class <FadeCloudIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material cloudMat;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x170003FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xD82B04", Offset = "0xD82B04", VA = "0xD82B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xD82B6C", Offset = "0xD82B6C", VA = "0xD82B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0xD82890", Offset = "0xD82890", VA = "0xD82890")]
		[DebuggerHidden]
		public <FadeCloudIn>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0xD829DC", Offset = "0xD829DC", VA = "0xD829DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CBE")]
		[Address(RVA = "0xD829E0", Offset = "0xD829E0", VA = "0xD829E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC0")]
		[Address(RVA = "0xD82B0C", Offset = "0xD82B0C", VA = "0xD82B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _player;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cloud;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] _clouds;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material[] _cloudMats;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38008", Offset = "0xB38008")]
	private bool <TrackPlayer>k__BackingField;

	[Token(Token = "0x4000434")]
	public const int TotalClouds = 40;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spinner;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _setup;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> _allClouds;

	[Token(Token = "0x17000079")]
	public bool TrackPlayer
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xD819B4", Offset = "0xD819B4", VA = "0xD819B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4686C", Offset = "0xB4686C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xD819BC", Offset = "0xD819BC", VA = "0xD819BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4687C", Offset = "0xB4687C")]
		set
		{
		}
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD819C8", Offset = "0xD819C8", VA = "0xD819C8")]
	public void Init(Transform player)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xD81E54", Offset = "0xD81E54", VA = "0xD81E54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xD82410", Offset = "0xD82410", VA = "0xD82410")]
	private void SetupFwdClouds()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xD82820", Offset = "0xD82820", VA = "0xD82820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4688C", Offset = "0xB4688C")]
	private IEnumerator FadeCloudIn(Material cloudMat)
	{
		return null;
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xD828BC", Offset = "0xD828BC", VA = "0xD828BC")]
	public void ResetPosition(Vector3 offset)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xD829D4", Offset = "0xD829D4", VA = "0xD829D4")]
	public CloudShuffler()
	{
	}
}
[Token(Token = "0x20000AE")]
public class FadeObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _player;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] meshes;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string shaderTag;

	[Token(Token = "0x400043C")]
	public const float FOG_FAR = 2000f;

	[Token(Token = "0x400043D")]
	public const float FOG_NEAR = 1000f;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38018", Offset = "0xB38018")]
	private bool <AutomaticFade>k__BackingField;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38028", Offset = "0xB38028")]
	private float <Fade>k__BackingField;

	[Token(Token = "0x1700007A")]
	public bool AutomaticFade
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xE8E378", Offset = "0xE8E378", VA = "0xE8E378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB468F0", Offset = "0xB468F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000415")]
		[Address(RVA = "0xE8E380", Offset = "0xE8E380", VA = "0xE8E380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46900", Offset = "0xB46900")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public float Fade
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xE8E38C", Offset = "0xE8E38C", VA = "0xE8E38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46910", Offset = "0xB46910")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xE8E394", Offset = "0xE8E394", VA = "0xE8E394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46920", Offset = "0xB46920")]
		set
		{
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xE8E39C", Offset = "0xE8E39C", VA = "0xE8E39C")]
	public void Init(Transform player)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xE8E50C", Offset = "0xE8E50C", VA = "0xE8E50C")]
	public void SetFade(float fadeAmount)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xE8E574", Offset = "0xE8E574", VA = "0xE8E574")]
	public float GetFade()
	{
		return default(float);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xE8E5A4", Offset = "0xE8E5A4", VA = "0xE8E5A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xE8E744", Offset = "0xE8E744", VA = "0xE8E744")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46930", Offset = "0xB46930")]
	public void FindAllChildMeshes()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xE8E79C", Offset = "0xE8E79C", VA = "0xE8E79C")]
	public FadeObject()
	{
	}
}
[Token(Token = "0x20000AF")]
public class FixedOffset : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _offset;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _player;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xE9A924", Offset = "0xE9A924", VA = "0xE9A924")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xE9AA08", Offset = "0xE9AA08", VA = "0xE9AA08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xE9AAE8", Offset = "0xE9AAE8", VA = "0xE9AAE8")]
	public FixedOffset()
	{
	}
}
[Token(Token = "0x20000B0")]
public class FlightTutorial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006CE")]
	private enum RingState
	{
		[Token(Token = "0x4002AED")]
		Inactive,
		[Token(Token = "0x4002AEE")]
		NeedsSpawn,
		[Token(Token = "0x4002AEF")]
		Active,
		[Token(Token = "0x4002AF0")]
		Complete
	}

	[Token(Token = "0x20006CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343C0", Offset = "0xB343C0")]
	private sealed class <Start>d__92 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x17000401")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xDC40BC", Offset = "0xDC40BC", VA = "0xDC40BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xDC4124", Offset = "0xDC4124", VA = "0xDC4124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0xDC32F0", Offset = "0xDC32F0", VA = "0xDC32F0")]
		[DebuggerHidden]
		public <Start>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0xDC331C", Offset = "0xDC331C", VA = "0xDC331C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0xDC3320", Offset = "0xDC3320", VA = "0xDC3320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0xDC40C4", Offset = "0xDC40C4", VA = "0xDC40C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343D0", Offset = "0xB343D0")]
	private sealed class <ReconnectTouch>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x17000403")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xDC3280", Offset = "0xDC3280", VA = "0xDC3280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0xDC32E8", Offset = "0xDC32E8", VA = "0xDC32E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0xDC3018", Offset = "0xDC3018", VA = "0xDC3018")]
		[DebuggerHidden]
		public <ReconnectTouch>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xDC3044", Offset = "0xDC3044", VA = "0xDC3044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0xDC3048", Offset = "0xDC3048", VA = "0xDC3048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xDC3288", Offset = "0xDC3288", VA = "0xDC3288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343E0", Offset = "0xB343E0")]
	private sealed class <>c__DisplayClass98_0
	{
		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool touchBtnsActive;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool controlsVis;

		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool touchCanvasVis;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x6002CCE")]
		[Address(RVA = "0xDC2818", Offset = "0xDC2818", VA = "0xDC2818")]
		public <>c__DisplayClass98_0()
		{
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xDC2820", Offset = "0xDC2820", VA = "0xDC2820")]
		internal void <Update>b__7()
		{
		}
	}

	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343F0", Offset = "0xB343F0")]
	private sealed class <TouchIntro>d__103 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool replay;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x17000405")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xDC4CA0", Offset = "0xDC4CA0", VA = "0xDC4CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0xDC4D08", Offset = "0xDC4D08", VA = "0xDC4D08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD0")]
		[Address(RVA = "0xDC432C", Offset = "0xDC432C", VA = "0xDC432C")]
		[DebuggerHidden]
		public <TouchIntro>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0xDC4358", Offset = "0xDC4358", VA = "0xDC4358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0xDC435C", Offset = "0xDC435C", VA = "0xDC435C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xDC4CA8", Offset = "0xDC4CA8", VA = "0xDC4CA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34400", Offset = "0xB34400")]
	private sealed class <Instruct>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string trigger;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string text;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float waitTime;

		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool playSuccess;

		[Token(Token = "0x17000407")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xDC2E64", Offset = "0xDC2E64", VA = "0xDC2E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xDC2ECC", Offset = "0xDC2ECC", VA = "0xDC2ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0xDC2BFC", Offset = "0xDC2BFC", VA = "0xDC2BFC")]
		[DebuggerHidden]
		public <Instruct>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xDC2C28", Offset = "0xDC2C28", VA = "0xDC2C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0xDC2C2C", Offset = "0xDC2C2C", VA = "0xDC2C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0xDC2E6C", Offset = "0xDC2E6C", VA = "0xDC2E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34410", Offset = "0xB34410")]
	private sealed class <>c__DisplayClass105_0
	{
		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string vo;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0xDC25F8", Offset = "0xDC25F8", VA = "0xDC25F8")]
		public <>c__DisplayClass105_0()
		{
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0xDC2600", Offset = "0xDC2600", VA = "0xDC2600")]
		internal void <PlayVoiceAfterSucc>b__0()
		{
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0xDC26AC", Offset = "0xDC26AC", VA = "0xDC26AC")]
		internal void <PlayVoiceAfterSucc>b__1()
		{
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0xDC2734", Offset = "0xDC2734", VA = "0xDC2734")]
		internal void <PlayVoiceAfterSucc>b__2()
		{
		}
	}

	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34420", Offset = "0xB34420")]
	private sealed class <>c__DisplayClass106_0
	{
		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ready;

		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0xDC2758", Offset = "0xDC2758", VA = "0xDC2758")]
		public <>c__DisplayClass106_0()
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0xDC2760", Offset = "0xDC2760", VA = "0xDC2760")]
		internal void <SuccessVoice>b__0()
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0xDC280C", Offset = "0xDC280C", VA = "0xDC280C")]
		internal void <SuccessVoice>b__1()
		{
		}
	}

	[Token(Token = "0x20006D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34430", Offset = "0xB34430")]
	private sealed class <SuccessVoice>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass106_0 <>8__1;

		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float postWait;

		[Token(Token = "0x17000409")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xDC42BC", Offset = "0xDC42BC", VA = "0xDC42BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xDC4324", Offset = "0xDC4324", VA = "0xDC4324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0xDC412C", Offset = "0xDC412C", VA = "0xDC412C")]
		[DebuggerHidden]
		public <SuccessVoice>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0xDC4158", Offset = "0xDC4158", VA = "0xDC4158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xDC415C", Offset = "0xDC415C", VA = "0xDC415C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xDC42C4", Offset = "0xDC42C4", VA = "0xDC42C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34440", Offset = "0xB34440")]
	private sealed class <FadeBalloonsRoutine>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toShow;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startFade>5__2;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <endFade>5__3;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <ticker>5__4;

		[Token(Token = "0x1700040B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xDC2B8C", Offset = "0xDC2B8C", VA = "0xDC2B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xDC2BF4", Offset = "0xDC2BF4", VA = "0xDC2BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xDC29E8", Offset = "0xDC29E8", VA = "0xDC29E8")]
		[DebuggerHidden]
		public <FadeBalloonsRoutine>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0xDC2A14", Offset = "0xDC2A14", VA = "0xDC2A14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0xDC2A18", Offset = "0xDC2A18", VA = "0xDC2A18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0xDC2B94", Offset = "0xDC2B94", VA = "0xDC2B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34450", Offset = "0xB34450")]
	private sealed class <LerpBoostUp>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlightTutorial <>4__this;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lerp>5__3;

		[Token(Token = "0x1700040D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xDC2FA8", Offset = "0xDC2FA8", VA = "0xDC2FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0xDC3010", Offset = "0xDC3010", VA = "0xDC3010", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0xDC2ED4", Offset = "0xDC2ED4", VA = "0xDC2ED4")]
		[DebuggerHidden]
		public <LerpBoostUp>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0xDC2F00", Offset = "0xDC2F00", VA = "0xDC2F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0xDC2F04", Offset = "0xDC2F04", VA = "0xDC2F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0xDC2FB0", Offset = "0xDC2FB0", VA = "0xDC2FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inTouchScene;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AircraftControl _player;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _playerTF;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _lookTF;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _spawnTF;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _originPoint;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject flyingParticleParent;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform flyingParticleOrigin;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RingSet[] ringSets;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] _ringAudio;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] _ringdelays;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] _ringSpawnDist;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _ringIndex;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RingState[] _ringStates;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RingSet[] ringSetsTouch;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string[] _ringTouchAnims;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string[] _ringAudioTouch;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] _ringdelaysTouch;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] _ringSpawnDistTouch;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _ringSpawnDelay;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject canvas;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject tuteUI;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject titleUI;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject lookCircleUI;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject loadingUI;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LerpCanvasGroup boostBar;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TutorialMarkers markers;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CloudShuffler clouds;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ParticleSystem[] titleParticles;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LerpCanvasGroup boostTutorial;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject goggles;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TouchTutorialDisplay touchTutorial;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TouchTutorialDisplay controllerBoostTutorial;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LerpCanvasGroup touchCanvas;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform[] touchHandIndicators;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform[] touchHandTrackers;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TutorialHandPing[] touchHandPings;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public BoxCollider[] touchBoxColliders;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Image[] touchHandPingRings;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject dimHands;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Animator touchIntroAnimator;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LocalizeTextMeshPro touchIntroText;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject balloons;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public FadeObject balloonFade;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject laserLeft;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject laserRight;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject boostObject;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public LerpCanvasGroup boostCanvas;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LerpCanvasGroup boostCanvasGamepad;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject gearBoostPane;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject goBoostPane;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject gearConBoostPane;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LerpCanvasGroup tutArrows;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LerpCanvasGroup controlSelect;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject lookStartBtns;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject touchStartBtns;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject touchConnectedBtns;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject lookReccommendBtns;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public bool showUpDownInTouch;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	public bool showUpDownInNonTouch;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
	private bool _returned;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int _consecFails;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Coroutine _touchIntro;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject vrChar;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject[] ghostHands;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject reticleObject;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool _useTouchVo;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	private bool _paused;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21A")]
	private bool _useLookCircle;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private int _succVo;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private readonly string[] _succVoStrings;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int _demoFailures;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool replayTutorial;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool startedFlying;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool _handsActive;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool _initialised;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private IEnumerator _reconnectTouch;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool _isPauseSub;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool[] _introNear;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private float _INTRO_PROX_THRESHOLD;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float _INTRO_PAUSE_TIME;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private bool _pollBoost;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float _introTicker;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Coroutine _balloonFade;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private AudioOptions _voOption;

	[Token(Token = "0x1700007C")]
	public RingSet[] RingSets
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xE9AB0C", Offset = "0xE9AB0C", VA = "0xE9AB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007D")]
	public bool UseTouchTutorial
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xE9AB40", Offset = "0xE9AB40", VA = "0xE9AB40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	public bool UseNub
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xE9ABBC", Offset = "0xE9ABBC", VA = "0xE9ABBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xE9AC20", Offset = "0xE9AC20", VA = "0xE9AC20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xE9AF08", Offset = "0xE9AF08", VA = "0xE9AF08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xE9B094", Offset = "0xE9B094", VA = "0xE9B094")]
	private void SubscribePause()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xE9AFE8", Offset = "0xE9AFE8", VA = "0xE9AFE8")]
	private void RemovePause()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xE9B13C", Offset = "0xE9B13C", VA = "0xE9B13C")]
	private void HandlePause(bool paused)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xE9B2A8", Offset = "0xE9B2A8", VA = "0xE9B2A8")]
	private void UpdateHandStates()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xE9B4B4", Offset = "0xE9B4B4", VA = "0xE9B4B4")]
	public void ShowLasers(bool on)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xE9B438", Offset = "0xE9B438", VA = "0xE9B438")]
	private void ShowHands(bool on)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xE9B614", Offset = "0xE9B614", VA = "0xE9B614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46968", Offset = "0xB46968")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xE9B684", Offset = "0xE9B684", VA = "0xE9B684")]
	private bool TouchWantedButNotConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xE9B758", Offset = "0xE9B758", VA = "0xE9B758")]
	public void DontWantHands()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xE9B7CC", Offset = "0xE9B7CC", VA = "0xE9B7CC")]
	private void ShowControlSelectButtons(bool handsOn)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xE9B8F8", Offset = "0xE9B8F8", VA = "0xE9B8F8")]
	private bool GetTouchTriggersDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xE9BA08", Offset = "0xE9BA08", VA = "0xE9BA08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB469CC", Offset = "0xB469CC")]
	private IEnumerator ReconnectTouch(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xE9BA84", Offset = "0xE9BA84", VA = "0xE9BA84")]
	public void Update()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xE9CC24", Offset = "0xE9CC24", VA = "0xE9CC24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46A30", Offset = "0xB46A30")]
	private IEnumerator TouchIntro(bool replay = false)
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xE9CCA8", Offset = "0xE9CCA8", VA = "0xE9CCA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46A94", Offset = "0xB46A94")]
	private IEnumerator Instruct(float time, string trigger, string text, float waitTime = 1f, bool playSuccess = false)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xE9CD58", Offset = "0xE9CD58", VA = "0xE9CD58")]
	private void PlayVoiceAfterSucc(string vo)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xE9CE08", Offset = "0xE9CE08", VA = "0xE9CE08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46AF8", Offset = "0xB46AF8")]
	private IEnumerator SuccessVoice(float postWait = 0.36f)
	{
		return null;
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xE9CE88", Offset = "0xE9CE88", VA = "0xE9CE88")]
	private string GetSuccVo()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xE9CEFC", Offset = "0xE9CEFC", VA = "0xE9CEFC")]
	private void ResetIntroProximity()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xE9CFF8", Offset = "0xE9CFF8", VA = "0xE9CFF8")]
	private void ShowIntroPing(TutorialHandPing.Status status)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xE9D074", Offset = "0xE9D074", VA = "0xE9D074")]
	private bool IsWithinOffAxisBoundingBox(Vector3 point, BoxCollider box)
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xE9D1CC", Offset = "0xE9D1CC", VA = "0xE9D1CC")]
	private bool CheckIntroProximity(float waitTime = 0.85f)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xE9C384", Offset = "0xE9C384", VA = "0xE9C384")]
	private void FadeBalloons(bool toShow)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xE9D554", Offset = "0xE9D554", VA = "0xE9D554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46B5C", Offset = "0xB46B5C")]
	private IEnumerator FadeBalloonsRoutine(bool toShow, float duration = 1f)
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xE9D5E8", Offset = "0xE9D5E8", VA = "0xE9D5E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46BC0", Offset = "0xB46BC0")]
	private IEnumerator LerpBoostUp()
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xE9D658", Offset = "0xE9D658", VA = "0xE9D658")]
	public void SetControlScheme(int controlScheme)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xE9C844", Offset = "0xE9C844", VA = "0xE9C844")]
	private void ResetSet()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xE9DA7C", Offset = "0xE9DA7C", VA = "0xE9DA7C")]
	private void Complete()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xE9CAB4", Offset = "0xE9CAB4", VA = "0xE9CAB4")]
	private void ResetPlayer()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xE9D6D4", Offset = "0xE9D6D4", VA = "0xE9D6D4")]
	public void StartFlying()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xE9C458", Offset = "0xE9C458", VA = "0xE9C458")]
	private void SpawnRingSet(int set, bool initialise)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xE9DBC4", Offset = "0xE9DBC4", VA = "0xE9DBC4")]
	public void SetDesktopControls(int scheme)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xE9DCFC", Offset = "0xE9DCFC", VA = "0xE9DCFC")]
	private void StartTouchIntro()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xE9C9F0", Offset = "0xE9C9F0", VA = "0xE9C9F0")]
	private void PlayVoice(string vo)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xE9DDAC", Offset = "0xE9DDAC", VA = "0xE9DDAC")]
	private void PlayVoiceCallback(string vo, Action callback)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xE9DE74", Offset = "0xE9DE74", VA = "0xE9DE74")]
	private void PlayTouchRing(int index)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xE9DB68", Offset = "0xE9DB68", VA = "0xE9DB68")]
	private float GetSpawnDistance(int index)
	{
		return default(float);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xE9DF48", Offset = "0xE9DF48", VA = "0xE9DF48")]
	public FlightTutorial()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xE9E4C0", Offset = "0xE9E4C0", VA = "0xE9E4C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C24", Offset = "0xB46C24")]
	private void <Start>b__92_0()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xE9E4E0", Offset = "0xE9E4E0", VA = "0xE9E4E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C34", Offset = "0xB46C34")]
	private void <Start>b__92_1()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xE9E4E8", Offset = "0xE9E4E8", VA = "0xE9E4E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C44", Offset = "0xB46C44")]
	private void <Start>b__92_2()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xE9E4F0", Offset = "0xE9E4F0", VA = "0xE9E4F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C54", Offset = "0xB46C54")]
	private void <Update>b__98_0()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xE9E510", Offset = "0xE9E510", VA = "0xE9E510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C64", Offset = "0xB46C64")]
	private void <Update>b__98_1()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xE9E560", Offset = "0xE9E560", VA = "0xE9E560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C74", Offset = "0xB46C74")]
	private void <Update>b__98_2()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xE9E5A0", Offset = "0xE9E5A0", VA = "0xE9E5A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C84", Offset = "0xB46C84")]
	private void <Update>b__98_3()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xE9E5A8", Offset = "0xE9E5A8", VA = "0xE9E5A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46C94", Offset = "0xB46C94")]
	private void <Update>b__98_4()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xE9E5C4", Offset = "0xE9E5C4", VA = "0xE9E5C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46CA4", Offset = "0xB46CA4")]
	private void <Update>b__98_5()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xE9E614", Offset = "0xE9E614", VA = "0xE9E614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46CB4", Offset = "0xB46CB4")]
	private void <Update>b__98_6()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xE9E948", Offset = "0xE9E948", VA = "0xE9E948")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46CC4", Offset = "0xB46CC4")]
	private void <ResetSet>b__118_0()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xE9E9BC", Offset = "0xE9E9BC", VA = "0xE9E9BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46CD4", Offset = "0xB46CD4")]
	private void <ResetSet>b__118_1()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xE9EA0C", Offset = "0xE9EA0C", VA = "0xE9EA0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46CE4", Offset = "0xB46CE4")]
	private void <ResetSet>b__118_2()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xE9EAEC", Offset = "0xE9EAEC", VA = "0xE9EAEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46CF4", Offset = "0xB46CF4")]
	private void <Complete>b__119_0()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xE9EB3C", Offset = "0xE9EB3C", VA = "0xE9EB3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D04", Offset = "0xB46D04")]
	private void <Complete>b__119_1()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xE9EBFC", Offset = "0xE9EBFC", VA = "0xE9EBFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D14", Offset = "0xB46D14")]
	private void <Complete>b__119_2()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xE9EC2C", Offset = "0xE9EC2C", VA = "0xE9EC2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D24", Offset = "0xB46D24")]
	private void <StartFlying>b__121_0()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xE9EC60", Offset = "0xE9EC60", VA = "0xE9EC60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D34", Offset = "0xB46D34")]
	private void <StartFlying>b__121_1()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xE9EC7C", Offset = "0xE9EC7C", VA = "0xE9EC7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D44", Offset = "0xB46D44")]
	private void <StartFlying>b__121_2()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xE9EC9C", Offset = "0xE9EC9C", VA = "0xE9EC9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D54", Offset = "0xB46D54")]
	private void <SpawnRingSet>b__122_0()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xE9ED1C", Offset = "0xE9ED1C", VA = "0xE9ED1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D64", Offset = "0xB46D64")]
	private void <PlayTouchRing>b__128_0()
	{
	}
}
[Token(Token = "0x20000B1")]
public class HandDetectionTutorial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlightTutorial tutorial;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup connectedCG;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spinner;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text notConnectedText;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text connectedText;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image connectedBG;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider connectedColl;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color offColour;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color onColour;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _handsDetected;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38038", Offset = "0xB38038")]
	private static bool <Confirmed>k__BackingField;

	[Token(Token = "0x1700007F")]
	public static bool Confirmed
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xCDCC34", Offset = "0xCDCC34", VA = "0xCDCC34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D74", Offset = "0xB46D74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xCDCC84", Offset = "0xCDCC84", VA = "0xCDCC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46D84", Offset = "0xB46D84")]
		private set
		{
		}
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xCDCCDC", Offset = "0xCDCCDC", VA = "0xCDCCDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xCDCD2C", Offset = "0xCDCD2C", VA = "0xCDCD2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xCDCDDC", Offset = "0xCDCDDC", VA = "0xCDCDDC")]
	public void SetConnectedState(bool handsDetected)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xCDCF04", Offset = "0xCDCF04", VA = "0xCDCF04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xCDCF98", Offset = "0xCDCF98", VA = "0xCDCF98")]
	public void UseHands()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xCDD038", Offset = "0xCDD038", VA = "0xCDD038")]
	public void UseLook()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xCDD0DC", Offset = "0xCDD0DC", VA = "0xCDD0DC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46D94", Offset = "0xB46D94")]
	public void SetConnected()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xCDD0E4", Offset = "0xCDD0E4", VA = "0xCDD0E4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46DCC", Offset = "0xB46DCC")]
	public void SetNotConnected()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xCDD0EC", Offset = "0xCDD0EC", VA = "0xCDD0EC")]
	public HandDetectionTutorial()
	{
	}
}
[Token(Token = "0x20000B2")]
public class LookRecommend : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Chosen;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xD3A514", Offset = "0xD3A514", VA = "0xD3A514")]
	public void SelectLook()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xD3A5AC", Offset = "0xD3A5AC", VA = "0xD3A5AC")]
	public void SelectHands()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xD3A644", Offset = "0xD3A644", VA = "0xD3A644")]
	public LookRecommend()
	{
	}
}
[Token(Token = "0x20000B3")]
public class PathMesh : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006D9")]
	public struct Point
	{
		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quaternion rot;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color color;
	}

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Point[] _points;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _pointIndex;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject obj;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh _trailMesh;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer _trailRend;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _pointCount;

	[Token(Token = "0x40004AA")]
	private const int EDGES = 2;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int innerTriPointsPerSeg;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] newVertices;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] newUV;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] innerTriangles;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color[] newColors;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _width;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xCF9FEC", Offset = "0xCF9FEC", VA = "0xCF9FEC")]
	public void Setup(int amount)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xCFA344", Offset = "0xCFA344", VA = "0xCFA344")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xCFA770", Offset = "0xCFA770", VA = "0xCFA770")]
	public void SetPosition(int index, Vector3 pos, Quaternion rot, Color color)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xCFA810", Offset = "0xCFA810", VA = "0xCFA810")]
	public void SetVisibility(bool show)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xCFA8B4", Offset = "0xCFA8B4", VA = "0xCFA8B4")]
	public PathMesh()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ProjectedPath : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	private const int _SEGMENTS = 30;

	[Token(Token = "0x40004B2")]
	private const float _DISTANCE = 60f;

	[Token(Token = "0x40004B3")]
	private const float _STRAIGHT_AMOUNT = 1f;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AircraftControl player;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PathMesh path;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material pathMat;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform camera;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _pathOffset;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _camOffset;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _distSegment;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gradient pathColour;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool inGame;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _startTime;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC54290", Offset = "0xC54290", VA = "0xC54290")]
	private void Start()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC54410", Offset = "0xC54410", VA = "0xC54410")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC544B8", Offset = "0xC544B8", VA = "0xC544B8")]
	private void OnStart()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC544E0", Offset = "0xC544E0", VA = "0xC544E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC54A04", Offset = "0xC54A04", VA = "0xC54A04")]
	private Color GetColor(float pos)
	{
		return default(Color);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC54ACC", Offset = "0xC54ACC", VA = "0xC54ACC")]
	public ProjectedPath()
	{
	}
}
[Token(Token = "0x20000B5")]
public class RingSet : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34460", Offset = "0xB34460")]
	private sealed class <FadeOutRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RingSet <>4__this;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <duration>5__2;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<float> <fades>5__4;

		[Token(Token = "0x1700040F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0xBEDC0C", Offset = "0xBEDC0C", VA = "0xBEDC0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xBEDC74", Offset = "0xBEDC74", VA = "0xBEDC74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0xBED8E0", Offset = "0xBED8E0", VA = "0xBED8E0")]
		[DebuggerHidden]
		public <FadeOutRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0xBED93C", Offset = "0xBED93C", VA = "0xBED93C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0xBED940", Offset = "0xBED940", VA = "0xBED940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0xBEDC14", Offset = "0xBEDC14", VA = "0xBEDC14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] rings;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ringDiameters;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FadeObject[] elements;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _ringIndex;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _player;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _lastRel;

	[Token(Token = "0x17000080")]
	public bool PassedAllRings
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xBED2BC", Offset = "0xBED2BC", VA = "0xBED2BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000081")]
	public int RingAmount
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xBED2E4", Offset = "0xBED2E4", VA = "0xBED2E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xBED300", Offset = "0xBED300", VA = "0xBED300")]
	public void Init(Transform player)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xBED380", Offset = "0xBED380", VA = "0xBED380")]
	public void SetPosition(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xBED4E8", Offset = "0xBED4E8", VA = "0xBED4E8")]
	public void FadeOut(Action callback)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xBED590", Offset = "0xBED590", VA = "0xBED590")]
	public void FadeIn(Action callback)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xBED5BC", Offset = "0xBED5BC", VA = "0xBED5BC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xBED640", Offset = "0xBED640", VA = "0xBED640")]
	public void FadeOutInstant()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xBED6B0", Offset = "0xBED6B0", VA = "0xBED6B0")]
	public bool PassedRing(out bool inside)
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xBED87C", Offset = "0xBED87C", VA = "0xBED87C")]
	public Transform GetCurrentTransform()
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xBED514", Offset = "0xBED514", VA = "0xBED514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46E04", Offset = "0xB46E04")]
	private IEnumerator FadeOutRoutine(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xBED90C", Offset = "0xBED90C", VA = "0xBED90C")]
	public RingSet()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xBED914", Offset = "0xBED914", VA = "0xBED914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46E68", Offset = "0xB46E68")]
	private void <FadeOut>b__14_0()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TouchTutorialData : ScriptableObject
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float verticalVariance;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float horizontalShift;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float verticalPitch;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pitchAngleAdjust;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yawScale;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pitchScale;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xCB4190", Offset = "0xCB4190", VA = "0xCB4190")]
	public TouchTutorialData()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TouchTutorialDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _object;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LerpCanvasGroup _lerpGroup;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _useLerpGroup;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xCB41B0", Offset = "0xCB41B0", VA = "0xCB41B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xCB41DC", Offset = "0xCB41DC", VA = "0xCB41DC")]
	public void ShowAnimation(string newAnim)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xCB4244", Offset = "0xCB4244", VA = "0xCB4244")]
	public void Show(bool isShown = true)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xCB4288", Offset = "0xCB4288", VA = "0xCB4288")]
	public void Hide()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xCB42CC", Offset = "0xCB42CC", VA = "0xCB42CC")]
	public TouchTutorialDisplay()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TouchTutorialInstructor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LerpCanvasGroup _lerpGroup;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform _leftHand;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform _rightHand;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve _curveFalloff;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TouchTutorialData _data;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _player;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _playerPitch;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 _leftOffset;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 _rightOffset;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xCB42D4", Offset = "0xCB42D4", VA = "0xCB42D4")]
	public void SetTarget(Transform targetTransform)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xCB42DC", Offset = "0xCB42DC", VA = "0xCB42DC")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xCB42FC", Offset = "0xCB42FC", VA = "0xCB42FC")]
	public void SetVisibleInstant(bool isVisible)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xCB431C", Offset = "0xCB431C", VA = "0xCB431C")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xCB4350", Offset = "0xCB4350", VA = "0xCB4350")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xCB43AC", Offset = "0xCB43AC", VA = "0xCB43AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xCB477C", Offset = "0xCB477C", VA = "0xCB477C")]
	private void DisplayInstructions(float turnDisplay, float heightDisplay, bool invertX = false, bool invertY = true)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xCB495C", Offset = "0xCB495C", VA = "0xCB495C")]
	public TouchTutorialInstructor()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TutorialHandFocus : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _hands;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xCB6CF4", Offset = "0xCB6CF4", VA = "0xCB6CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xCB6D90", Offset = "0xCB6D90", VA = "0xCB6D90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xCB6E2C", Offset = "0xCB6E2C", VA = "0xCB6E2C")]
	private void InputFocusChanged(bool isFocused)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xCB6EA8", Offset = "0xCB6EA8", VA = "0xCB6EA8")]
	public TutorialHandFocus()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TutorialHandPing : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006DB")]
	public enum Status
	{
		[Token(Token = "0x4002B2C")]
		Off,
		[Token(Token = "0x4002B2D")]
		Failed,
		[Token(Token = "0x4002B2E")]
		Success,
		[Token(Token = "0x4002B2F")]
		OffFinal
	}

	[Token(Token = "0x20006DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34470", Offset = "0xB34470")]
	private sealed class <LerpColor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialHandPing <>4__this;

		[Token(Token = "0x4002B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color from;

		[Token(Token = "0x4002B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color to;

		[Token(Token = "0x4002B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float time;

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <ticker>5__2;

		[Token(Token = "0x17000411")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0xCB71BC", Offset = "0xCB71BC", VA = "0xCB71BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0xCB7224", Offset = "0xCB7224", VA = "0xCB7224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0xCB703C", Offset = "0xCB703C", VA = "0xCB703C")]
		[DebuggerHidden]
		public <LerpColor>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0xCB707C", Offset = "0xCB707C", VA = "0xCB707C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0xCB7080", Offset = "0xCB7080", VA = "0xCB7080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0xCB71C4", Offset = "0xCB71C4", VA = "0xCB71C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colors;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lerpTime;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _lerp;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xCB6EB0", Offset = "0xCB6EB0", VA = "0xCB6EB0")]
	public void SetStatus(Status newStatus)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xCB6F74", Offset = "0xCB6F74", VA = "0xCB6F74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB46E78", Offset = "0xB46E78")]
	private IEnumerator LerpColor(Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xCB7068", Offset = "0xCB7068", VA = "0xCB7068")]
	public TutorialHandPing()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TutorialHandTrackingEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer left;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer right;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xCB722C", Offset = "0xCB722C", VA = "0xCB722C")]
	private void Update()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xCB7378", Offset = "0xCB7378", VA = "0xCB7378")]
	public TutorialHandTrackingEnable()
	{
	}
}
[Token(Token = "0x20000BC")]
public class TutorialHandUiTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _isLeft;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _lerpPosition;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool _lerpRotation;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool _useRotation;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _unitMult;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _lastHeadPos;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _lastLocalTouchLeft;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _lastLocalTouchRight;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion _lastLocalRotLeft;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion _lastLocalRotRight;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xCB7380", Offset = "0xCB7380", VA = "0xCB7380")]
	private Vector3 GetTouchLeftPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xCB7528", Offset = "0xCB7528", VA = "0xCB7528")]
	private Vector3 GetTouchRightPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xCB76D0", Offset = "0xCB76D0", VA = "0xCB76D0")]
	private Quaternion GetTouchLeftRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xCB78F4", Offset = "0xCB78F4", VA = "0xCB78F4")]
	private Quaternion GetTouchRightRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xCB7B18", Offset = "0xCB7B18", VA = "0xCB7B18")]
	private Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xCB7CC8", Offset = "0xCB7CC8", VA = "0xCB7CC8")]
	private Vector3 GetTouchPosition(bool left)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xCB7CD4", Offset = "0xCB7CD4", VA = "0xCB7CD4")]
	private Quaternion GetTouchRotation(bool left)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xCB7CE0", Offset = "0xCB7CE0", VA = "0xCB7CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xCB7E7C", Offset = "0xCB7E7C", VA = "0xCB7E7C")]
	public TutorialHandUiTracker()
	{
	}
}
[Token(Token = "0x20000BD")]
public class TutorialInvertRot : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _fromForm;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xCB7FE8", Offset = "0xCB7FE8", VA = "0xCB7FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xCB80E4", Offset = "0xCB80E4", VA = "0xCB80E4")]
	public TutorialInvertRot()
	{
	}
}
[Token(Token = "0x20000BE")]
public class TutorialLookCircle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRCameraFade m_CameraFade;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SelectionHoverRadial m_SelectionRadial;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRInteractiveItem m_InteractiveItem;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text m_InfoText;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator _pullCircle;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_GazeOver;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FlightTutorial _tutorial;

	[Token(Token = "0x14000016")]
	public event Action<TitleLookCircle> OnButtonSelected
	{
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xCB80EC", Offset = "0xCB80EC", VA = "0xCB80EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46EDC", Offset = "0xB46EDC")]
		add
		{
		}
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xCB8190", Offset = "0xCB8190", VA = "0xCB8190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46EEC", Offset = "0xB46EEC")]
		remove
		{
		}
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xCB8234", Offset = "0xCB8234", VA = "0xCB8234")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xCB82FC", Offset = "0xCB82FC", VA = "0xCB82FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xCB8400", Offset = "0xCB8400", VA = "0xCB8400")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xCB8504", Offset = "0xCB8504", VA = "0xCB8504")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xCB8580", Offset = "0xCB8580", VA = "0xCB8580")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xCB85F8", Offset = "0xCB85F8", VA = "0xCB85F8")]
	private void HandleSelectionComplete()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xCB86F0", Offset = "0xCB86F0", VA = "0xCB86F0")]
	public TutorialLookCircle()
	{
	}
}
[Token(Token = "0x20000BF")]
public class TutorialMarkers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] markers;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] marks;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite tick;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite cross;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LerpCanvasGroup canvasGroup;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _ticks;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _crosses;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color tickColor;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color crossColor;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xCB86F8", Offset = "0xCB86F8", VA = "0xCB86F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xCB8718", Offset = "0xCB8718", VA = "0xCB8718")]
	public void FadeIn(int amount)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xCB896C", Offset = "0xCB896C", VA = "0xCB896C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xCB898C", Offset = "0xCB898C", VA = "0xCB898C")]
	public void SetMark(bool tick)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xCB88EC", Offset = "0xCB88EC", VA = "0xCB88EC")]
	private void SetMarkers(int amount)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xCB8768", Offset = "0xCB8768", VA = "0xCB8768")]
	private void SetMarks(int ticks, int crosses)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xCB89B0", Offset = "0xCB89B0", VA = "0xCB89B0")]
	public void Reset(int amount)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xCB89EC", Offset = "0xCB89EC", VA = "0xCB89EC")]
	public TutorialMarkers()
	{
	}
}
[Token(Token = "0x20000C0")]
public class TutorialPCLookCircle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRCameraFade m_CameraFade;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SelectionHoverRadial m_SelectionRadial;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRInteractiveItem m_InteractiveItem;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text m_InfoText;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator _pullCircle;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_GazeOver;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FlightTutorial _tutorial;

	[Token(Token = "0x14000017")]
	public event Action<TitleLookCircle> OnButtonSelected
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xCBA1F8", Offset = "0xCBA1F8", VA = "0xCBA1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46EFC", Offset = "0xB46EFC")]
		add
		{
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xCBA29C", Offset = "0xCBA29C", VA = "0xCBA29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46F0C", Offset = "0xB46F0C")]
		remove
		{
		}
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xCBA340", Offset = "0xCBA340", VA = "0xCBA340")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xCBA418", Offset = "0xCBA418", VA = "0xCBA418")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xCBA51C", Offset = "0xCBA51C", VA = "0xCBA51C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xCBA620", Offset = "0xCBA620", VA = "0xCBA620")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xCBA68C", Offset = "0xCBA68C", VA = "0xCBA68C")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xCBA6F4", Offset = "0xCBA6F4", VA = "0xCBA6F4")]
	private void HandleSelectionComplete()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xCBA798", Offset = "0xCBA798", VA = "0xCBA798")]
	public TutorialPCLookCircle()
	{
	}
}
[Token(Token = "0x20000C1")]
public class TutorialRandomator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int amount;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bounds;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 minRot;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 maxRot;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xCBAC84", Offset = "0xCBAC84", VA = "0xCBAC84")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46F1C", Offset = "0xB46F1C")]
	public void Randomate()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xCBAEE8", Offset = "0xCBAEE8", VA = "0xCBAEE8")]
	public TutorialRandomator()
	{
	}
}
[Token(Token = "0x20000C2")]
public class TutorialRotateBetweenArea : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006DD")]
	public struct RotationInfo
	{
		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startX;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float startRot;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float endX;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float endRot;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool checkPlatform;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformTarget[] platforms;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool checkDevice;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ActiveDevice[] devices;
	}

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform _form;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RotationInfo _baseRotation;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RotationInfo[] _overrides;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _init;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RotationInfo _useInfo;

	[Token(Token = "0x17000082")]
	private RotationInfo UseInfo
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xCBAEF0", Offset = "0xCBAEF0", VA = "0xCBAEF0")]
		get
		{
			return default(RotationInfo);
		}
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xCBB130", Offset = "0xCBB130", VA = "0xCBB130")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xCBB244", Offset = "0xCBB244", VA = "0xCBB244")]
	private static float Remap(float value, float fromStart, float fromEnd, float toStart, float toEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xCBB260", Offset = "0xCBB260", VA = "0xCBB260")]
	public TutorialRotateBetweenArea()
	{
	}
}
[Token(Token = "0x20000C3")]
public static class TutorialMediator
{
	[Token(Token = "0x20006DE")]
	public class AudioTutorial
	{
		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string prefName;

		[Token(Token = "0x4002B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tuteClip;

		[Token(Token = "0x4002B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string titleClip;

		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _shown;

		[Token(Token = "0x17000413")]
		public bool Shown
		{
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xCB8CC4", Offset = "0xCB8CC4", VA = "0xCB8CC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D02")]
			[Address(RVA = "0xCB9558", Offset = "0xCB9558", VA = "0xCB9558")]
			set
			{
			}
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0xCB9B70", Offset = "0xCB9B70", VA = "0xCB9B70")]
		public AudioTutorial(string prefName, string tuteClip, string titleClip = "")
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34480", Offset = "0xB34480")]
	private sealed class <>c
	{
		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__10_0;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__15_0;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__15_3;

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xCB9C1C", Offset = "0xCB9C1C", VA = "0xCB9C1C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xCB9C24", Offset = "0xCB9C24", VA = "0xCB9C24")]
		internal void <ShowBoost>b__10_0()
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0xCB9C90", Offset = "0xCB9C90", VA = "0xCB9C90")]
		internal void <PlayTutorial>b__15_0()
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xCB9DE4", Offset = "0xCB9DE4", VA = "0xCB9DE4")]
		internal void <PlayTutorial>b__15_3()
		{
		}
	}

	[Token(Token = "0x20006E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34490", Offset = "0xB34490")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioTutorial tute;

		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float tailDelay;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0xCB9550", Offset = "0xCB9550", VA = "0xCB9550")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0xCB9F38", Offset = "0xCB9F38", VA = "0xCB9F38")]
		internal void <PlayTutorial>b__1()
		{
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0xCB9FF0", Offset = "0xCB9FF0", VA = "0xCB9FF0")]
		internal void <PlayTutorial>b__2()
		{
		}
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly AudioTutorial[] _modeTutorials;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AudioTutorial[] _mapTutorials;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AudioTutorial _boostTutorial;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AudioTutorial _onlineTutorial;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38298", Offset = "0xB38298")]
	private static bool <TutorialInProgress>k__BackingField;

	[Token(Token = "0x17000083")]
	public static bool TutorialInProgress
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xCB89F4", Offset = "0xCB89F4", VA = "0xCB89F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46F54", Offset = "0xB46F54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xCB8A5C", Offset = "0xCB8A5C", VA = "0xCB8A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB46F64", Offset = "0xB46F64")]
		set
		{
		}
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xCB8ACC", Offset = "0xCB8ACC", VA = "0xCB8ACC")]
	public static bool CheckModeTute(int mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xCB8FE4", Offset = "0xCB8FE4", VA = "0xCB8FE4")]
	public static bool CheckMapTute(int map)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xCB9130", Offset = "0xCB9130", VA = "0xCB9130")]
	public static void ShowBoost(float startDelay)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xCB9328", Offset = "0xCB9328", VA = "0xCB9328")]
	public static bool CanShowBoost()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xCB9410", Offset = "0xCB9410", VA = "0xCB9410")]
	public static bool ShownBoost()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xCB9480", Offset = "0xCB9480", VA = "0xCB9480")]
	public static bool CheckOnlineTute()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xCB8C18", Offset = "0xCB8C18", VA = "0xCB8C18")]
	private static bool UsingTutorials()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xCB8D1C", Offset = "0xCB8D1C", VA = "0xCB8D1C")]
	private static void PlayTutorial(AudioTutorial tute, float tailDelay = -1f)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xCB95A4", Offset = "0xCB95A4", VA = "0xCB95A4")]
	private static void PlayAudioClip(string clip, Action callback)
	{
	}
}
[Token(Token = "0x20000C4")]
public class UnityLightingFromSky : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float SkyBrightness;

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xF9A520", Offset = "0xF9A520", VA = "0xF9A520")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xF9A62C", Offset = "0xF9A62C", VA = "0xF9A62C")]
	public UnityLightingFromSky()
	{
	}
}
[Token(Token = "0x20000C5")]
public class VOInGame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AudioLimiter> _flourishes;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<VOClip, VOClip> _scoreAlternatives;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float _lastVOTime;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xF9F228", Offset = "0xF9F228", VA = "0xF9F228")]
	public static void Init()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xF9F22C", Offset = "0xF9F22C", VA = "0xF9F22C")]
	public static void PlayClip(VOClip voClip)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xF9F428", Offset = "0xF9F428", VA = "0xF9F428")]
	private static VOClip CheckForScoreAlt(VOClip voClip)
	{
		return default(VOClip);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xF9F51C", Offset = "0xF9F51C", VA = "0xF9F51C")]
	private static void PlayClip(AudioLimiter audio)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xF9F5FC", Offset = "0xF9F5FC", VA = "0xF9F5FC")]
	public VOInGame()
	{
	}
}
[Token(Token = "0x20000C6")]
public struct AudioLimiter
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public VOClip voClip;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string audioClip;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float playFreq;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xE6C1E4", Offset = "0xE6C1E4", VA = "0xE6C1E4")]
	public AudioLimiter(VOClip voClip, string audioClip, float playFreq)
	{
	}
}
[Token(Token = "0x20000C7")]
public enum VOClip
{
	[Token(Token = "0x400051A")]
	Average,
	[Token(Token = "0x400051B")]
	Good,
	[Token(Token = "0x400051C")]
	Great,
	[Token(Token = "0x400051D")]
	Amazing,
	[Token(Token = "0x400051E")]
	Score200,
	[Token(Token = "0x400051F")]
	Score500,
	[Token(Token = "0x4000520")]
	Score1000,
	[Token(Token = "0x4000521")]
	ScoreBullseye,
	[Token(Token = "0x4000522")]
	BoostReady,
	[Token(Token = "0x4000523")]
	CheckPointClose,
	[Token(Token = "0x4000524")]
	CheckpointLast
}
[Token(Token = "0x20000C8")]
public class MobileRainEnabler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD3EA50", Offset = "0xD3EA50", VA = "0xD3EA50")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xD3EA54", Offset = "0xD3EA54", VA = "0xD3EA54")]
	private void Set()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xD3EAC0", Offset = "0xD3EAC0", VA = "0xD3EAC0")]
	public MobileRainEnabler()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MobileWeather : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material skybox;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> mapMats;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cloudSphere;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform skySphere;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light dirLight;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MobileWeatherData data;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _player;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _setupOffset;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _skyMover;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Raining;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool debugExtendedView;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD3EAC8", Offset = "0xD3EAC8", VA = "0xD3EAC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xD3EC14", Offset = "0xD3EC14", VA = "0xD3EC14")]
	private void OnCameraSwitch(Transform cam, Transform parent)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xD3ED4C", Offset = "0xD3ED4C", VA = "0xD3ED4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xD3EDE0", Offset = "0xD3EDE0", VA = "0xD3EDE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xD3EC04", Offset = "0xD3EC04", VA = "0xD3EC04")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46F74", Offset = "0xB46F74")]
	private void ApplyRainy()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xD3EC0C", Offset = "0xD3EC0C", VA = "0xD3EC0C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46FAC", Offset = "0xB46FAC")]
	private void ApplyStnd()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xD3EE84", Offset = "0xD3EE84", VA = "0xD3EE84")]
	private void Apply(bool raining)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xD3F46C", Offset = "0xD3F46C", VA = "0xD3F46C")]
	private bool ExtendedViewDist()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xD3F508", Offset = "0xD3F508", VA = "0xD3F508")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB46FE4", Offset = "0xB46FE4")]
	private void Setup()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xD3F9A4", Offset = "0xD3F9A4", VA = "0xD3F9A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4701C", Offset = "0xB4701C")]
	private void CacheRainChanges()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xD3F79C", Offset = "0xD3F79C", VA = "0xD3F79C")]
	private List<Material> GetEnviroMats()
	{
		return null;
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xD3FC34", Offset = "0xD3FC34", VA = "0xD3FC34")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47054", Offset = "0xB47054")]
	private void SwitchShaders()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xD3FDEC", Offset = "0xD3FDEC", VA = "0xD3FDEC")]
	public MobileWeather()
	{
	}
}
[Token(Token = "0x20000CA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB31EF8", Offset = "0xB31EF8")]
public class MobileWeatherData : ScriptableObject
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB382A8", Offset = "0xB382A8")]
	public Color stndSkyTint;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color stndFogColor;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<float> stndLightBoost;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion stndLightRot;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Flare stndFlare;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB382E0", Offset = "0xB382E0")]
	public float rainyLightBoost;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color rainySkyTint;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color rainyFogColor;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float rainySaturation;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float rainyLMSoften;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Quaternion cloudRotation;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color cloudColor;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Quaternion rainyLightRot;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Flare rainyFlare;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Material> matsToBlur;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<float> blurMatAmounts;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material cloudMat;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xD3FDF4", Offset = "0xD3FDF4", VA = "0xD3FDF4")]
	public MobileWeatherData()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ScreenRainMobile : GoggleEffect
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AircraftControl _player;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem dynamic;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem simple;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MainModule _dMain;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.EmissionModule _dEmission;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.VelocityOverLifetimeModule _dVelocity;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.ShapeModule _dShape;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.NoiseModule _dNoise;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.EmissionModule _sEmission;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.MainModule _sMain;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem.VelocityOverLifetimeModule _sVelocity;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB38318", Offset = "0xB38318")]
	public float debugSpeed;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB38330", Offset = "0xB38330")]
	public float waterfall;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB38348", Offset = "0xB38348")]
	public float debugIntensity;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _lastFwd;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 _headTurnVel;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 _headMoveVel;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 _gravityVel;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 _windVel;

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xCA12C4", Offset = "0xCA12C4", VA = "0xCA12C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xCA13E0", Offset = "0xCA13E0", VA = "0xCA13E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xCA15A0", Offset = "0xCA15A0", VA = "0xCA15A0")]
	private void CalcVelocities(float speed)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xCA18A0", Offset = "0xCA18A0", VA = "0xCA18A0")]
	private void SetLevels(float speed, float waterfall, float intensity)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xCA2120", Offset = "0xCA2120", VA = "0xCA2120")]
	private ParticleSystem.MinMaxCurve ScaleSize(ParticleSystem.MinMaxCurve size, float min, float max, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xCA2178", Offset = "0xCA2178", VA = "0xCA2178", Slot = "4")]
	public override void Init(AircraftControl player, Transform camera)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xCA2180", Offset = "0xCA2180", VA = "0xCA2180")]
	public ScreenRainMobile()
	{
	}
}
[Token(Token = "0x20000CC")]
public class PbrRainResponse : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> mapMats;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> rainDrynessLevels;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _rainLerp;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _DRYNESS;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xCFC00C", Offset = "0xCFC00C", VA = "0xCFC00C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4708C", Offset = "0xB4708C")]
	private void ApplyRainy()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xCFC170", Offset = "0xCFC170", VA = "0xCFC170")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB470C4", Offset = "0xB470C4")]
	private void ApplyStnd()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xCFC014", Offset = "0xCFC014", VA = "0xCFC014")]
	private void Apply(bool raining)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xCFC178", Offset = "0xCFC178", VA = "0xCFC178")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xCFC1C8", Offset = "0xCFC1C8", VA = "0xCFC1C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xCFC358", Offset = "0xCFC358", VA = "0xCFC358")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB470FC", Offset = "0xB470FC")]
	private void CacheMats()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xCFC67C", Offset = "0xCFC67C", VA = "0xCFC67C")]
	public PbrRainResponse()
	{
	}
}
[Token(Token = "0x20000CD")]
public class BoostEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer fx;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AircraftControl control;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xD71D94", Offset = "0xD71D94", VA = "0xD71D94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD71DC0", Offset = "0xD71DC0", VA = "0xD71DC0")]
	public BoostEnable()
	{
	}
}
[Token(Token = "0x20000CE")]
public class FlyingFX : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006E1")]
	private struct WindConeSample
	{
		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float zPos;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float scale;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float tileY;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float scroll;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0xDC9928", Offset = "0xDC9928", VA = "0xDC9928")]
		public static WindConeSample Lerp(WindConeSample a, WindConeSample b, float lerp)
		{
			return default(WindConeSample);
		}
	}

	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344A0", Offset = "0xB344A0")]
	private sealed class <BoostWave>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlyingFX <>4__this;

		[Token(Token = "0x4002B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <duration>5__2;

		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x17000414")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xDC9C64", Offset = "0xDC9C64", VA = "0xDC9C64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D12")]
			[Address(RVA = "0xDC9CCC", Offset = "0xDC9CCC", VA = "0xDC9CCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0xDC98FC", Offset = "0xDC98FC", VA = "0xDC98FC")]
		[DebuggerHidden]
		public <BoostWave>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0xDC9AB8", Offset = "0xDC9AB8", VA = "0xDC9AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0xDC9ABC", Offset = "0xDC9ABC", VA = "0xDC9ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xDC9C6C", Offset = "0xDC9C6C", VA = "0xDC9C6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AircraftControl control;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB38360", Offset = "0xB38360")]
	public GameObject cone;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer coneRend;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScrollMat coneMat;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB38398", Offset = "0xB38398")]
	public ParticleSystem linesPS;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.EmissionModule linesEm;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.MainModule linesMain;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material linesMat;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color linesMatColor;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB383D0", Offset = "0xB383D0")]
	public ParticleSystem cloudsPS;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem.EmissionModule cloudsEm;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.MainModule cloudsMain;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material cloudsMat;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color cloudsMatColor;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform boostWave;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _wasBoosting;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _lastBoostTime;

	[Token(Token = "0x400056C")]
	private const float BoostOpenDuration = 0.8f;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float boostWaveTime;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private WindConeSample coneBoostStart;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WindConeSample coneBoostEnd;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private WindConeSample baseState;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xDC8DD0", Offset = "0xDC8DD0", VA = "0xDC8DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xDC8EB4", Offset = "0xDC8EB4", VA = "0xDC8EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xDC8FB8", Offset = "0xDC8FB8", VA = "0xDC8FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47134", Offset = "0xB47134")]
	private IEnumerator BoostWave()
	{
		return null;
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xDC9028", Offset = "0xDC9028", VA = "0xDC9028")]
	private void SetCone(float boostInit, float boostLerp, float speed)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xDC9344", Offset = "0xDC9344", VA = "0xDC9344")]
	private void SetLines(float boostInit, float boostLerp, float speed)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xDC96D4", Offset = "0xDC96D4", VA = "0xDC96D4")]
	private void SetClouds(float boostInit, float boostLerp, float speed)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xDC9A4C", Offset = "0xDC9A4C", VA = "0xDC9A4C")]
	private ParticleSystem.MinMaxCurve SetMinMax(float value, ParticleSystem.MinMaxCurve minMax)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xDC9A80", Offset = "0xDC9A80", VA = "0xDC9A80")]
	public FlyingFX()
	{
	}
}
[Token(Token = "0x20000CF")]
public class RainAttachPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RainAttachPoint _point;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localPos;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion localRot;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xBDE8E4", Offset = "0xBDE8E4", VA = "0xBDE8E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xBDE938", Offset = "0xBDE938", VA = "0xBDE938")]
	public static void Attach(Transform child)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xBDEA7C", Offset = "0xBDEA7C", VA = "0xBDEA7C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47198", Offset = "0xB47198")]
	private void SetChildValues()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xBDEAF8", Offset = "0xBDEAF8", VA = "0xBDEAF8")]
	public RainAttachPoint()
	{
	}
}
[Token(Token = "0x20000D0")]
[ExecuteInEditMode]
public class ScrollMat : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 add;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _offset;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material mat;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool dynamicTile;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 tile;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xCA2B6C", Offset = "0xCA2B6C", VA = "0xCA2B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xCA2CC8", Offset = "0xCA2CC8", VA = "0xCA2CC8")]
	private float Loop(float f)
	{
		return default(float);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xCA2D00", Offset = "0xCA2D00", VA = "0xCA2D00")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB471D0", Offset = "0xB471D0")]
	private void ResetOffset()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xCA2D08", Offset = "0xCA2D08", VA = "0xCA2D08")]
	public ScrollMat()
	{
	}
}
[Token(Token = "0x20000D1")]
public class WindController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollMat windMat;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem windPS;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.MainModule windMain;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AircraftControl player;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speedX;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x13A5948", Offset = "0x13A5948", VA = "0x13A5948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x13A597C", Offset = "0x13A597C", VA = "0x13A597C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x13A5A9C", Offset = "0x13A5A9C", VA = "0x13A5A9C")]
	public WindController()
	{
	}
}
[Token(Token = "0x20000D2")]
public class GhostPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ID;

	[Token(Token = "0x4000580")]
	private const int _FPS = 10;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _pos;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> _rot;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> _time;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _playing;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _startTime;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _interval;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _currentKey;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _timeOffset;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> _event;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> _eventTime;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _currentEventKey;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject _boostShockwave;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _score;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x117915C", Offset = "0x117915C", VA = "0x117915C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x11791D4", Offset = "0x11791D4", VA = "0x11791D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1179E50", Offset = "0x1179E50", VA = "0x1179E50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x117A2E8", Offset = "0x117A2E8", VA = "0x117A2E8")]
	public void Restart()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x117A338", Offset = "0x117A338", VA = "0x117A338")]
	private void StartPlayback()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x117A36C", Offset = "0x117A36C", VA = "0x117A36C")]
	private void ResumePlayback()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x117A378", Offset = "0x117A378", VA = "0x117A378")]
	private void PausePlayback()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x117A380", Offset = "0x117A380", VA = "0x117A380")]
	private void StopPlayback()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1179364", Offset = "0x1179364", VA = "0x1179364")]
	private void LoadRecordingFromFile(string filename)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x117A388", Offset = "0x117A388", VA = "0x117A388")]
	public GhostPlayer()
	{
	}
}
[Token(Token = "0x20000D3")]
public class GhostRecorder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GhostRecorder instance;

	[Token(Token = "0x400058F")]
	private const int _FPS = 10;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> _pos;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _rot;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<float> _time;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _recording;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _startTime;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _interval;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _lastFrameTime;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _endTime;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _boostActive;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _score;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _scoreType;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> _event;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> _eventTime;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _boostShockwave;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _lastTimeSample;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _runningTime;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _shouldRecord;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _wasRecording;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x117A39C", Offset = "0x117A39C", VA = "0x117A39C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x117A5C8", Offset = "0x117A5C8", VA = "0x117A5C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x117A840", Offset = "0x117A840", VA = "0x117A840")]
	private void CheckpointPast(int playerid, int checkpoint, bool inside, int pointsToAdd, bool finalRing, int ringType)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x117A8CC", Offset = "0x117A8CC", VA = "0x117A8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x117A9C0", Offset = "0x117A9C0", VA = "0x117A9C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x117AC7C", Offset = "0x117AC7C", VA = "0x117AC7C")]
	private void Begin()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x117AE40", Offset = "0x117AE40", VA = "0x117AE40")]
	private void Finish(ScoreData score)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x117B7BC", Offset = "0x117B7BC", VA = "0x117B7BC")]
	private void Pause(bool paused)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x117A8D0", Offset = "0x117A8D0", VA = "0x117A8D0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x117AC80", Offset = "0x117AC80", VA = "0x117AC80")]
	private void StartRecording()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x117AF84", Offset = "0x117AF84", VA = "0x117AF84")]
	private byte[] SaveRecording()
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x117B800", Offset = "0x117B800", VA = "0x117B800")]
	private bool GetIsGhost()
	{
		return default(bool);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x117B8DC", Offset = "0x117B8DC", VA = "0x117B8DC")]
	public GhostRecorder()
	{
	}
}
[Token(Token = "0x20000D4")]
public class GlobalNormalBaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] inputModel;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D outputTexture_Normal;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D outputTexture_Albedo;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D outputTexture_PBR;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int _textureSize;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool inputMaterialIsUnityStandard;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int startModel;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool GO;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float percentTexelsCompleted;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float percentTrianglesCompleted;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float percentSubmeshesCompleted;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float percentModelsCompleted;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color[] _outputBuffer_Normal;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[] _outputBuffer_Albedo;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color[] _outputBuffer_PBR;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mesh _mesh;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3[] _verts;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] _uvs;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2[] _outputUVs;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] _normals;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector4[] _tangents;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] _tris;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _numTris;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material[] _materials;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Texture2D _inputMap_Normal;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Texture2D _inputMap_Albedo;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D _inputMap_PBR;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Texture2D _inputMap_MetalGloss;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Texture2D _inputMap_Occlusion;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Texture2D _inputMap_DetailNormal;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _prevGO;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int _thisMesh;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int _thisSubMesh;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int _thisTri;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _thisTexel;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int _subMeshIndexStart;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _subMeshIndexCount;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int[] _thisTriIndeces;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3[] _thisTriVerts;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector2[] _thisTriUVs;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _thisTriMinX;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _thisTriMinY;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _thisTriMaxX;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int _thisTriMaxY;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _thisTriTexelWidth;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int _thisTriTexelHeight;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _numTexels;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _texelSize;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _numSubmeshes;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector4 _bounds;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool _texelInBounds;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float _startTime;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float _duration;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float durationInHours;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float estimatedTotalDurationInHours;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int _numTexelsPerFrame;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 _barycentric;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Color _blankNormal;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x117B8F0", Offset = "0x117B8F0", VA = "0x117B8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x117B8F4", Offset = "0x117B8F4", VA = "0x117B8F4")]
	private void InitMesh()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x117BC58", Offset = "0x117BC58", VA = "0x117BC58")]
	private void InitSubMesh()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x117C258", Offset = "0x117C258", VA = "0x117C258")]
	private void InitTriangle()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x117CB40", Offset = "0x117CB40", VA = "0x117CB40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x117C7CC", Offset = "0x117C7CC", VA = "0x117C7CC")]
	private bool IsPointInTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3)
	{
		return default(bool);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x117E9E8", Offset = "0x117E9E8", VA = "0x117E9E8")]
	private void FixEdges()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x117F1CC", Offset = "0x117F1CC", VA = "0x117F1CC")]
	private void FixNoise()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x117F67C", Offset = "0x117F67C", VA = "0x117F67C")]
	public GlobalNormalBaker()
	{
	}
}
[Token(Token = "0x20000D5")]
public class GlobalOcclusionBaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] inputModel;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D outputTexture;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _textureSize;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _sceneName;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material renderMat;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material renderInversionMat;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool forceReverseWinding;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool forceAllOnOneMap;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int startMesh;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool GO;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float raysCompleted;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float texelsCompleted;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float trianglesCompleted;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[] _textureBuffer;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] verts;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] uvs;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] tris;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int numTris;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _prevGO;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _thisTri;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int[] _thisTriIndeces;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] _thisTriVerts;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector2[] _thisTriUVs;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _thisTriMinX;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _thisTriMinY;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _thisTriMaxX;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _thisTriMaxY;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _thisTriTexelWidth;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _thisTriTexelHeight;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _thisTexel;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _numTexels;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _texelSize;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector4 _bounds;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector4 _worldBounds;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _uToWorld;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _vToWorld;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 _worldU;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _worldV;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 _worldW;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector2 _uvCenter;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 _vertCenter;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 _texelWorldPos;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _thisRay;

	[Token(Token = "0x4000607")]
	private const float _rayLength = 1000f;

	[Token(Token = "0x4000608")]
	private const float _rayOffset = 0.1f;

	[Token(Token = "0x4000609")]
	private const int _numRays = 196;

	[Token(Token = "0x400060A")]
	private const int _rayMask = 256;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3[] _rayLUT;

	[Token(Token = "0x400060C")]
	private const int _numRaysPerFrame = 1500;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 _rayAccumulator;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float _occlusionAccumulator;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _texelInBounds;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool[] _texelsInBounds;

	[Token(Token = "0x4000611")]
	private const int _raycastMode = 0;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _startTime;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float _endTime;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float duration;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float durationInHours;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float estimatedTotalDurationInHours;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int _thisMesh;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Color32[] _textureClear;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int currentSubMesh;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x117F864", Offset = "0x117F864", VA = "0x117F864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x117F868", Offset = "0x117F868", VA = "0x117F868")]
	private void InitMesh()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x117F968", Offset = "0x117F968", VA = "0x117F968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1182A04", Offset = "0x1182A04", VA = "0x1182A04")]
	private bool IsPointInTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3)
	{
		return default(bool);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x11808C8", Offset = "0x11808C8", VA = "0x11808C8")]
	private void InitTriangle()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1182A80", Offset = "0x1182A80", VA = "0x1182A80")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1181EB0", Offset = "0x1181EB0", VA = "0x1181EB0")]
	private void DilateEdges()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x11821F4", Offset = "0x11821F4", VA = "0x11821F4")]
	private void FixNoise()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1183CF4", Offset = "0x1183CF4", VA = "0x1183CF4")]
	public GlobalOcclusionBaker()
	{
	}
}
[Token(Token = "0x20000D6")]
[ExecuteInEditMode]
public class LightBlockingMeshGenerator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool GO;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Rect area;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material blockMat;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 density;

	[Token(Token = "0x400061E")]
	private const int _rayMask = 256;

	[Token(Token = "0x400061F")]
	private const float _rayDist = 8000f;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xCEE57C", Offset = "0xCEE57C", VA = "0xCEE57C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xCEE580", Offset = "0xCEE580", VA = "0xCEE580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xCEF094", Offset = "0xCEF094", VA = "0xCEF094")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xCEF470", Offset = "0xCEF470", VA = "0xCEF470")]
	public LightBlockingMeshGenerator()
	{
	}
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
public class OcclusionSeamFixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material outputTestMat;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool GO;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D _outputTexture;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x105356C", Offset = "0x105356C", VA = "0x105356C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1053570", Offset = "0x1053570", VA = "0x1053570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1054570", Offset = "0x1054570", VA = "0x1054570")]
	public OcclusionSeamFixer()
	{
	}
}
[Token(Token = "0x20000D8")]
public class HUDThermalArrowAnimator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] textmeshes;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _timer;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _step;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] _frames;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xCDBBDC", Offset = "0xCDBBDC", VA = "0xCDBBDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xCDBBE0", Offset = "0xCDBBE0", VA = "0xCDBBE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xCDBD14", Offset = "0xCDBD14", VA = "0xCDBD14")]
	public HUDThermalArrowAnimator()
	{
	}
}
[Token(Token = "0x20000D9")]
public class HangGliderCollider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000549")]
	[Address(RVA = "0xCE2E74", Offset = "0xCE2E74", VA = "0xCE2E74")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xCE2E78", Offset = "0xCE2E78", VA = "0xCE2E78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xCE2F30", Offset = "0xCE2F30", VA = "0xCE2F30")]
	public HangGliderCollider()
	{
	}
}
[Token(Token = "0x20000DA")]
public class LightFlicker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float initialValue;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 initialPosition;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialScale;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float initialTime;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light lightRef;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float amount;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float speed;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool adjustLocation;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float locationAdjustAmount;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool adjustScale;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float scaleAdjustAmount;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform scaleObject;

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xDF6BC4", Offset = "0xDF6BC4", VA = "0xDF6BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xDF6D08", Offset = "0xDF6D08", VA = "0xDF6D08")]
	private void Update()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xDF6FBC", Offset = "0xDF6FBC", VA = "0xDF6FBC")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x20000DB")]
public class TileAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int xFrames;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int yFrames;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool billboard;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera mainCamera;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frame;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer rendererReference;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int randomStart;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xCB2634", Offset = "0xCB2634", VA = "0xCB2634")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xCB278C", Offset = "0xCB278C", VA = "0xCB278C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xCB2A8C", Offset = "0xCB2A8C", VA = "0xCB2A8C")]
	public TileAnimation()
	{
	}
}
[Token(Token = "0x20000DC")]
public class InternetReachabilityVerifier : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006E3")]
	public enum CaptivePortalDetectionMethod
	{
		[Token(Token = "0x4002B55")]
		DefaultByPlatform,
		[Token(Token = "0x4002B56")]
		Google204,
		[Token(Token = "0x4002B57")]
		GoogleBlank,
		[Token(Token = "0x4002B58")]
		MicrosoftNCSI,
		[Token(Token = "0x4002B59")]
		Apple,
		[Token(Token = "0x4002B5A")]
		Ubuntu,
		[Token(Token = "0x4002B5B")]
		Custom,
		[Token(Token = "0x4002B5C")]
		Apple2,
		[Token(Token = "0x4002B5D")]
		AppleHTTPS
	}

	[Token(Token = "0x20006E4")]
	public enum Status
	{
		[Token(Token = "0x4002B5F")]
		Offline,
		[Token(Token = "0x4002B60")]
		PendingVerification,
		[Token(Token = "0x4002B61")]
		Error,
		[Token(Token = "0x4002B62")]
		Mismatch,
		[Token(Token = "0x4002B63")]
		NetVerified
	}

	[Token(Token = "0x20006E5")]
	public delegate void StatusChangedDelegate(Status newStatus);

	[Token(Token = "0x20006E6")]
	public delegate bool CustomMethodVerifierDelegate(WWW www, string customMethodExpectedData);

	[Token(Token = "0x20006E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344B0", Offset = "0xB344B0")]
	private sealed class <waitForNetVerifiedStatus>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InternetReachabilityVerifier <>4__this;

		[Token(Token = "0x17000416")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xCE97B8", Offset = "0xCE97B8", VA = "0xCE97B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xCE9820", Offset = "0xCE9820", VA = "0xCE9820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0xCE8510", Offset = "0xCE8510", VA = "0xCE8510")]
		[DebuggerHidden]
		public <waitForNetVerifiedStatus>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0xCE972C", Offset = "0xCE972C", VA = "0xCE972C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0xCE9730", Offset = "0xCE9730", VA = "0xCE9730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0xCE97C0", Offset = "0xCE97C0", VA = "0xCE97C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344C0", Offset = "0xB344C0")]
	private sealed class <netActivity>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InternetReachabilityVerifier <>4__this;

		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkReachability <prevUnityReachability>5__2;

		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CaptivePortalDetectionMethod <cpdm>5__3;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__4;

		[Token(Token = "0x17000418")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xCE96BC", Offset = "0xCE96BC", VA = "0xCE96BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xCE9724", Offset = "0xCE9724", VA = "0xCE9724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0xCE8F20", Offset = "0xCE8F20", VA = "0xCE8F20")]
		[DebuggerHidden]
		public <netActivity>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0xCE93BC", Offset = "0xCE93BC", VA = "0xCE93BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0xCE93C0", Offset = "0xCE93C0", VA = "0xCE93C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0xCE96C4", Offset = "0xCE96C4", VA = "0xCE96C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CaptivePortalDetectionMethod captivePortalDetectionMethod;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB38408", Offset = "0xB38408")]
	public string customMethodURL;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB38440", Offset = "0xB38440")]
	public string customMethodExpectedData;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB38478", Offset = "0xB38478")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB384B0", Offset = "0xB384B0")]
	public bool customMethodWithCacheBuster;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB384E8", Offset = "0xB384E8")]
	public float defaultCheckPeriod;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB38520", Offset = "0xB38520")]
	public float errorRetryDelay;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB38558", Offset = "0xB38558")]
	public float mismatchRetryDelay;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CustomMethodVerifierDelegate customMethodVerifierDelegate;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float noInternetStartTime;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Status _status;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _lastError;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InternetReachabilityVerifier _instance;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RuntimePlatform[] methodGoogle204Supported;

	[Token(Token = "0x400064C")]
	private const CaptivePortalDetectionMethod fallbackMethodIfNoDefaultByPlatform = CaptivePortalDetectionMethod.MicrosoftNCSI;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool netActivityRunning;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string apple2MethodURL;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _yieldWaitStart;

	[Token(Token = "0x17000084")]
	public Status status
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xCE8118", Offset = "0xCE8118", VA = "0xCE8118")]
		get
		{
			return default(Status);
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xCE8120", Offset = "0xCE8120", VA = "0xCE8120")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public string lastError
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xCE83EC", Offset = "0xCE83EC", VA = "0xCE83EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xCE83F4", Offset = "0xCE83F4", VA = "0xCE83F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public static InternetReachabilityVerifier Instance
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xCE83FC", Offset = "0xCE83FC", VA = "0xCE83FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000018")]
	public event StatusChangedDelegate statusChangedDelegate
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xCE7C60", Offset = "0xCE7C60", VA = "0xCE7C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47208", Offset = "0xB47208")]
		add
		{
		}
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xCE8074", Offset = "0xCE8074", VA = "0xCE8074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47218", Offset = "0xB47218")]
		remove
		{
		}
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xCE8464", Offset = "0xCE8464", VA = "0xCE8464")]
	public float getTimeWithoutInternetConnection()
	{
		return default(float);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xCE84A0", Offset = "0xCE84A0", VA = "0xCE84A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47228", Offset = "0xB47228")]
	public IEnumerator waitForNetVerifiedStatus()
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xCE853C", Offset = "0xCE853C", VA = "0xCE853C")]
	public void setNetActivityTimes(float defaultCheckPeriodSeconds, float errorRetryDelaySeconds, float mismatchRetryDelaySeconds)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xCE8548", Offset = "0xCE8548", VA = "0xCE8548")]
	public void forceReverification()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xCE8550", Offset = "0xCE8550", VA = "0xCE8550")]
	private string getCaptivePortalDetectionURL(CaptivePortalDetectionMethod cpdm)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xCE874C", Offset = "0xCE874C", VA = "0xCE874C")]
	private bool checkCaptivePortalDetectionResult(CaptivePortalDetectionMethod cpdm, WWW www)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xCE8E4C", Offset = "0xCE8E4C", VA = "0xCE8E4C")]
	private bool internal_yieldWait(float seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xCE8EB0", Offset = "0xCE8EB0", VA = "0xCE8EB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4728C", Offset = "0xB4728C")]
	private IEnumerator netActivity()
	{
		return null;
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xCE8F4C", Offset = "0xCE8F4C", VA = "0xCE8F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xCE90A8", Offset = "0xCE90A8", VA = "0xCE90A8")]
	private void verifyCaptivePortalDetectionMethod()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xCE9234", Offset = "0xCE9234", VA = "0xCE9234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xCE92A4", Offset = "0xCE92A4", VA = "0xCE92A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xCE92A8", Offset = "0xCE92A8", VA = "0xCE92A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xCE91D8", Offset = "0xCE91D8", VA = "0xCE91D8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xCE92AC", Offset = "0xCE92AC", VA = "0xCE92AC")]
	public InternetReachabilityVerifier()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ReachabilityManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000569")]
	[Address(RVA = "0xBE442C", Offset = "0xBE442C", VA = "0xBE442C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xBE4430", Offset = "0xBE4430", VA = "0xBE4430")]
	public ReachabilityManager()
	{
	}
}
[Token(Token = "0x20000DE")]
public class LanguageEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObject;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB385B0", Offset = "0xB385B0")]
	[SerializeField]
	private Language.Type[] languages;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB385FC", Offset = "0xB385FC")]
	[SerializeField]
	private bool inverse;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xCE9E30", Offset = "0xCE9E30", VA = "0xCE9E30")]
	private void Reset()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xCE9EB8", Offset = "0xCE9EB8", VA = "0xCE9EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xCEA078", Offset = "0xCEA078", VA = "0xCEA078")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xCE9F54", Offset = "0xCE9F54", VA = "0xCE9F54")]
	private void RefreshCheck()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xCEA10C", Offset = "0xCEA10C", VA = "0xCEA10C")]
	public LanguageEnable()
	{
	}
}
[Token(Token = "0x20000DF")]
public class LanguageFont : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006E9")]
	public struct LanguageFontPair
	{
		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TMP_FontAsset font;

		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material fontMaterial;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxSize;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FontStyles styles;

		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lineSpacing;
	}

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text text;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LanguageFontPair overridePair;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Language.Type[] languages;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool inverseCheck;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool legacyCheck;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool init;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool isDefault;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LanguageFontPair defaultPair;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xCEA114", Offset = "0xCEA114", VA = "0xCEA114")]
	private void Apply(LanguageFontPair from)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xCEA198", Offset = "0xCEA198", VA = "0xCEA198")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xCEA19C", Offset = "0xCEA19C", VA = "0xCEA19C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xCEA434", Offset = "0xCEA434", VA = "0xCEA434")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xCEA288", Offset = "0xCEA288", VA = "0xCEA288")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xCEA4C8", Offset = "0xCEA4C8", VA = "0xCEA4C8")]
	public LanguageFont()
	{
	}
}
[Token(Token = "0x20000E0")]
public class LanguageMover : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006EA")]
	public struct LanguagePosition
	{
		[Token(Token = "0x4002B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Language.Type language;

		[Token(Token = "0x4002B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;
	}

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 defaultPosition;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LanguagePosition[] positions;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xCEA4DC", Offset = "0xCEA4DC", VA = "0xCEA4DC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xCEA558", Offset = "0xCEA558", VA = "0xCEA558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xCEA744", Offset = "0xCEA744", VA = "0xCEA744")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xCEA5F4", Offset = "0xCEA5F4", VA = "0xCEA5F4")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xCEA7D8", Offset = "0xCEA7D8", VA = "0xCEA7D8")]
	public LanguageMover()
	{
	}
}
[Token(Token = "0x20000E1")]
public class MainMenuButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int buttonID;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MainMenuHandler _manager;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _highlight;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _gauge;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _gaugeTF;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _mouseOn;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _gazeCount;

	[Token(Token = "0x4000664")]
	private const float SELECTTIME = 2.5f;

	[Token(Token = "0x4000665")]
	private const float SELECTTIMEINVERSE = 0.4f;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xD3A650", Offset = "0xD3A650", VA = "0xD3A650")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xD3A7B0", Offset = "0xD3A7B0", VA = "0xD3A7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xD3A7B4", Offset = "0xD3A7B4", VA = "0xD3A7B4")]
	public void MouseOn()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xD3A730", Offset = "0xD3A730", VA = "0xD3A730")]
	public void MouseOff()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xD3A838", Offset = "0xD3A838", VA = "0xD3A838")]
	public MainMenuButton()
	{
	}
}
[Token(Token = "0x20000E2")]
public class MainMenuHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTF;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] panels;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] buttons;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hangglider;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject raceplane;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject wingsuit;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] ringPathContainers;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _currentPanel;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _gazeTF;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _lastGazedAt;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MainMenuButton[] _buttonScripts;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _tutorialPanel;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CourseCompletedManager _courseCompletedManager;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _backButtonTime;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _userIsOutsideApplication;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _selectedAircraft;

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xD3A840", Offset = "0xD3A840", VA = "0xD3A840")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xD3A9AC", Offset = "0xD3A9AC", VA = "0xD3A9AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xD3AADC", Offset = "0xD3AADC", VA = "0xD3AADC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xD3B350", Offset = "0xD3B350", VA = "0xD3B350")]
	private void ChangeToPanel(int newPanel)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xD3AF2C", Offset = "0xD3AF2C", VA = "0xD3AF2C")]
	public void ButtonClicked(int buttonID)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xD3B3F4", Offset = "0xD3B3F4", VA = "0xD3B3F4")]
	public MainMenuHandler()
	{
	}
}
[Token(Token = "0x20000E3")]
public class MainMenuPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] buttons;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _currentButton;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xD3B3FC", Offset = "0xD3B3FC", VA = "0xD3B3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xD3B400", Offset = "0xD3B400", VA = "0xD3B400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xD3B404", Offset = "0xD3B404", VA = "0xD3B404")]
	public MainMenuPanel()
	{
	}
}
[Token(Token = "0x20000E4")]
public class PausePanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PauseMenuHandler _handler;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _retryButton;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _leaveButton;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _exitButton;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _skipButton;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _selected;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform[] _selectedParents;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _selectedInvert;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] _selectedInvertParents;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xCFB838", Offset = "0xCFB838", VA = "0xCFB838")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xCFBC70", Offset = "0xCFBC70", VA = "0xCFBC70")]
	public void ClickContinue()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xCFBC88", Offset = "0xCFBC88", VA = "0xCFBC88")]
	public void ClickRestart()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xCFBCA0", Offset = "0xCFBCA0", VA = "0xCFBCA0")]
	public void ClickExit()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xCFBCB8", Offset = "0xCFBCB8", VA = "0xCFBCB8")]
	public void ClickLeave()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xCFBCD0", Offset = "0xCFBCD0", VA = "0xCFBCD0")]
	public void ClickLookToggle()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xCFBD40", Offset = "0xCFBD40", VA = "0xCFBD40")]
	public void ClickTiltToggle()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xCFBDB0", Offset = "0xCFBDB0", VA = "0xCFBDB0")]
	public void ClickInvertToggle()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xCFBE20", Offset = "0xCFBE20", VA = "0xCFBE20")]
	public void ClickRegularToggle()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xCFBA80", Offset = "0xCFBA80", VA = "0xCFBA80")]
	private void UpdateOutline()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xCFBB74", Offset = "0xCFBB74", VA = "0xCFBB74")]
	private void UpdateInvertOutline()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xCFBE90", Offset = "0xCFBE90", VA = "0xCFBE90")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xCFBF50", Offset = "0xCFBF50", VA = "0xCFBF50")]
	public void RestartTutorial()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xCFC004", Offset = "0xCFC004", VA = "0xCFC004")]
	public PausePanel()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ResultsPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344D0", Offset = "0xB344D0")]
	private sealed class <Start>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResultsPanel <>4__this;

		[Token(Token = "0x1700041A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xBE9774", Offset = "0xBE9774", VA = "0xBE9774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xBE97DC", Offset = "0xBE97DC", VA = "0xBE97DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0xBE7714", Offset = "0xBE7714", VA = "0xBE7714")]
		[DebuggerHidden]
		public <Start>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0xBE921C", Offset = "0xBE921C", VA = "0xBE921C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0xBE9220", Offset = "0xBE9220", VA = "0xBE9220", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0xBE977C", Offset = "0xBE977C", VA = "0xBE977C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResultsSlide _slidePrefab;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _slideParent;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizeTextMeshPro _scoreHeader;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _mainHeader;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _checkpointHeader;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ResultsReadyDisplay _resultsReadyDisplay;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ResultsReadyDisplay _resultsReadyGroupDisplay;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _countdownPane;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TMP_Text _countdownText;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _countdownTextObject;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _countdownSpinner;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _waitingForPlayersObject;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] _medalObjects;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _crashedObject;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _leaveButton;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private VerticalLayoutGroup _resultSlideGroup;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private RectTransform _paneTransform;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private RectTransform _emblemTransform;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private bool _debugDisplay;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<ResultsSlide> _slides;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _finished;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject _findingGame;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject _leaveConfirm;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int _position;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool _positionSent;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool _crashed;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool _isSlim;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	private bool _isMid;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _playersFinished;

	[Token(Token = "0x400069E")]
	private const int _SLIDE_PAD_STAN = 23;

	[Token(Token = "0x400069F")]
	private const int _SLIDE_PAD_SLIM = 0;

	[Token(Token = "0x40006A0")]
	private const int _SLIDE_SPACE_STAN = 10;

	[Token(Token = "0x40006A1")]
	private const int _SLIDE_SPACE_SLIM = 4;

	[Token(Token = "0x40006A2")]
	private const float _PANE_ANCH_STAN = -95f;

	[Token(Token = "0x40006A3")]
	private const float _PANE_ANCH_SLIM = -5f;

	[Token(Token = "0x40006A4")]
	private const float _PANE_SIZE_STAN = -190f;

	[Token(Token = "0x40006A5")]
	private const float _PANE_SIZE_SLIM = -10f;

	[Token(Token = "0x40006A6")]
	private const float _PANE_POS_STAN = -95f;

	[Token(Token = "0x40006A7")]
	private const float _PANE_POS_SLIM = -5f;

	[Token(Token = "0x40006A8")]
	private const float _EMBLEM_ANCH_STAN = -84f;

	[Token(Token = "0x40006A9")]
	private const float _EMBLEM_ANCH_SLIM = 210f;

	[Token(Token = "0x40006AA")]
	private const float _EMBLEM_POS_STAN = 20f;

	[Token(Token = "0x40006AB")]
	private const float _EMBLEM_POS_SLIM = -80f;

	[Token(Token = "0x17000087")]
	private int PlayersFinished
	{
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xBE6664", Offset = "0xBE6664", VA = "0xBE6664")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000598")]
		[Address(RVA = "0xBE666C", Offset = "0xBE666C", VA = "0xBE666C")]
		set
		{
		}
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xBE6700", Offset = "0xBE6700", VA = "0xBE6700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xBE71B4", Offset = "0xBE71B4", VA = "0xBE71B4")]
	private void UpdateReady(List<UserPair<PostGameSelection>> userPairs)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xBE76A4", Offset = "0xBE76A4", VA = "0xBE76A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB472F0", Offset = "0xB472F0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xBE7740", Offset = "0xBE7740", VA = "0xBE7740")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xBE781C", Offset = "0xBE781C", VA = "0xBE781C")]
	private void OnFinished(ScoreData score)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xBE6914", Offset = "0xBE6914", VA = "0xBE6914")]
	private void ClearSlides()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xBE6A2C", Offset = "0xBE6A2C", VA = "0xBE6A2C")]
	private void UpdateSlides()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xBE7910", Offset = "0xBE7910", VA = "0xBE7910")]
	private void UpdateSlides(ScoreData newScore)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xBE8A88", Offset = "0xBE8A88", VA = "0xBE8A88")]
	private void UpdateModel(int position, bool crashed, bool dqed)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xBE7114", Offset = "0xBE7114", VA = "0xBE7114")]
	private bool IsTimed()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xBE86E4", Offset = "0xBE86E4", VA = "0xBE86E4")]
	private void OrderSlides()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xBE8CB4", Offset = "0xBE8CB4", VA = "0xBE8CB4")]
	private int ScoreCompare(ResultsSlide s1, ResultsSlide s2, bool isTimed)
	{
		return default(int);
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xBE7A50", Offset = "0xBE7A50", VA = "0xBE7A50")]
	private ResultsSlideData FormateSlideData(ScoreData data)
	{
		return default(ResultsSlideData);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xBE7F08", Offset = "0xBE7F08", VA = "0xBE7F08")]
	private ResultsSlide SpawnNewSlide()
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xBE8D98", Offset = "0xBE8D98", VA = "0xBE8D98")]
	public void ClickRestart()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xBE8DF8", Offset = "0xBE8DF8", VA = "0xBE8DF8")]
	public void ClickContinue()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xBE8E58", Offset = "0xBE8E58", VA = "0xBE8E58")]
	public void ClickLeave()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xBE8E78", Offset = "0xBE8E78", VA = "0xBE8E78")]
	public void ClickLeaveYes()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xBE8EDC", Offset = "0xBE8EDC", VA = "0xBE8EDC")]
	public void ClickLeaveNo()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xBE8EFC", Offset = "0xBE8EFC", VA = "0xBE8EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xBE6ECC", Offset = "0xBE6ECC", VA = "0xBE6ECC")]
	private void UpdateHeader()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xBE7CD4", Offset = "0xBE7CD4", VA = "0xBE7CD4")]
	public void SetSlim(bool isSlim, bool isMid = false)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xBE91B0", Offset = "0xBE91B0", VA = "0xBE91B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47354", Offset = "0xB47354")]
	private void MakeStandard()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xBE91BC", Offset = "0xBE91BC", VA = "0xBE91BC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4738C", Offset = "0xB4738C")]
	private void MakeSlim()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xBE91C8", Offset = "0xBE91C8", VA = "0xBE91C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB473C4", Offset = "0xB473C4")]
	private void MakeMid()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xBE91D4", Offset = "0xBE91D4", VA = "0xBE91D4")]
	public ResultsPanel()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xBE91EC", Offset = "0xBE91EC", VA = "0xBE91EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB473FC", Offset = "0xB473FC")]
	private int <OrderSlides>b__42_0(ResultsSlide s1, ResultsSlide s2)
	{
		return default(int);
	}
}
[Token(Token = "0x20000E6")]
public class ResultsReadyDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _undecidedConatiner;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _retryContainer;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _continueContainer;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _undecidedPane;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ReadyIcon[] _readyIcons;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xBE97E4", Offset = "0xBE97E4", VA = "0xBE97E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xBE97E8", Offset = "0xBE97E8", VA = "0xBE97E8")]
	private void CheckPlayerCount()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xBE73B0", Offset = "0xBE73B0", VA = "0xBE73B0")]
	public void UpdateReady(List<UserPair<PostGameSelection>> userPairs, bool debugDisplay)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xBE7308", Offset = "0xBE7308", VA = "0xBE7308")]
	public void Show(bool show)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xBE98C4", Offset = "0xBE98C4", VA = "0xBE98C4")]
	public ResultsReadyDisplay()
	{
	}
}
[Token(Token = "0x20000E7")]
public struct ResultsSlideData
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int position;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool crashed;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool dqed;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isTime;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int score;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimeSpan time;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int id;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int totalChecks;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int gotChecks;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float penalty;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool showChecks;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isMe;
}
[Token(Token = "0x20000E8")]
public class ResultsSlide : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _nameText;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _scoreText;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _checkpointText;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite[] _medalSprites;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite _crashedSprite;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _flairImage;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _flairObject;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _timeObject;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LocalizeTextMeshPro _genericTxt;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private LayoutElement _layoutElement;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RectTransform _flairTransform;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string _colorCode;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float _standardHeight;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float _slimHeight;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _midHeight;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _standardFlair;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _slimFlair;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float _midFlair;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A08", Offset = "0xB38A08")]
	private ResultsSlideData <Data>k__BackingField;

	[Token(Token = "0x17000088")]
	public ResultsSlideData Data
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xBE98CC", Offset = "0xBE98CC", VA = "0xBE98CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4740C", Offset = "0xB4740C")]
		get
		{
			return default(ResultsSlideData);
		}
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xBE98DC", Offset = "0xBE98DC", VA = "0xBE98DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4741C", Offset = "0xB4741C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xBE7FC8", Offset = "0xBE7FC8", VA = "0xBE7FC8")]
	public void SetInfo(ResultsSlideData data)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xBE8BEC", Offset = "0xBE8BEC", VA = "0xBE8BEC")]
	public void SetPlace(int posIndex)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xBE85FC", Offset = "0xBE85FC", VA = "0xBE85FC")]
	public void SetSlim(bool isSlim, bool isMid = false)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xBE98F8", Offset = "0xBE98F8", VA = "0xBE98F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4742C", Offset = "0xB4742C")]
	private void MakeStandard()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xBE9904", Offset = "0xBE9904", VA = "0xBE9904")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47464", Offset = "0xB47464")]
	private void MakeSlim()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xBE9910", Offset = "0xBE9910", VA = "0xBE9910")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4749C", Offset = "0xB4749C")]
	private void MakeMid()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xBE991C", Offset = "0xBE991C", VA = "0xBE991C")]
	public ResultsSlide()
	{
	}
}
[Token(Token = "0x20000E9")]
public class MouseInputFollow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _transform;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xBB97D8", Offset = "0xBB97D8", VA = "0xBB97D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xBB98A4", Offset = "0xBB98A4", VA = "0xBB98A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xBB99E4", Offset = "0xBB99E4", VA = "0xBB99E4")]
	public MouseInputFollow()
	{
	}
}
[Token(Token = "0x20000EA")]
public class UiCasterOverride : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool overrideOnEnable;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UiCasterPackage _package;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _applied;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UiCasterOverride current;

	[Token(Token = "0x17000089")]
	public UiCasterPackage Package
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xCBBAC0", Offset = "0xCBBAC0", VA = "0xCBBAC0")]
		get
		{
			return default(UiCasterPackage);
		}
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xCBBAD4", Offset = "0xCBBAD4", VA = "0xCBBAD4")]
	private void Reset()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xCBBB5C", Offset = "0xCBBB5C", VA = "0xCBBB5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xCBBBD4", Offset = "0xCBBBD4", VA = "0xCBBBD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xCBBB9C", Offset = "0xCBBB9C", VA = "0xCBBB9C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB474D4", Offset = "0xB474D4")]
	public void Activate()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xCBBC08", Offset = "0xCBBC08", VA = "0xCBBC08")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4750C", Offset = "0xB4750C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xCBBC3C", Offset = "0xCBBC3C", VA = "0xCBBC3C")]
	public void SetUsing(bool isUsing)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xCBBCE4", Offset = "0xCBBCE4", VA = "0xCBBCE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xCBBE38", Offset = "0xCBBE38", VA = "0xCBBE38")]
	public UiCasterOverride()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public struct UiCasterPackage
{
	[Token(Token = "0x20006EC")]
	public enum PackageType
	{
		[Token(Token = "0x4002B78")]
		Other,
		[Token(Token = "0x4002B79")]
		RightHand,
		[Token(Token = "0x4002B7A")]
		LeftHand
	}

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform castFrom;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public LineRenderer line;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PackageType type;
}
[Token(Token = "0x20000EC")]
public class LobbyClientPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344E0", Offset = "0xB344E0")]
	private sealed class <LoadMapASAP>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyClientPanel <>4__this;

		[Token(Token = "0x1700041C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xD293D0", Offset = "0xD293D0", VA = "0xD293D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xD29438", Offset = "0xD29438", VA = "0xD29438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0xD29338", Offset = "0xD29338", VA = "0xD29338")]
		[DebuggerHidden]
		public <LoadMapASAP>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0xD29364", Offset = "0xD29364", VA = "0xD29364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0xD29368", Offset = "0xD29368", VA = "0xD29368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0xD293D8", Offset = "0xD293D8", VA = "0xD293D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344F0", Offset = "0xB344F0")]
	private sealed class <StartMatchFade>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyClientPanel <>4__this;

		[Token(Token = "0x1700041E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D36")]
			[Address(RVA = "0xD295C4", Offset = "0xD295C4", VA = "0xD295C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D38")]
			[Address(RVA = "0xD2962C", Offset = "0xD2962C", VA = "0xD2962C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0xD29440", Offset = "0xD29440", VA = "0xD29440")]
		[DebuggerHidden]
		public <StartMatchFade>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0xD2946C", Offset = "0xD2946C", VA = "0xD2946C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0xD29470", Offset = "0xD29470", VA = "0xD29470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0xD295CC", Offset = "0xD295CC", VA = "0xD295CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LobbyClientSelection[] _selections;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _infoText;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LobbyLevelInfo _levelInfo;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _proModePanel;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _proModeTick;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentMode;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _currentMap;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _currentCourse;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator _countdownRoutine;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _multiCheck;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _stopCountdownUpdate;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xE0FE28", Offset = "0xE0FE28", VA = "0xE0FE28")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xE102C8", Offset = "0xE102C8", VA = "0xE102C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47544", Offset = "0xB47544")]
	private IEnumerator LoadMapASAP()
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE10338", Offset = "0xE10338", VA = "0xE10338")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xE10474", Offset = "0xE10474", VA = "0xE10474")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xE100FC", Offset = "0xE100FC", VA = "0xE100FC")]
	private void ModeSelected(int mode)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xE101E0", Offset = "0xE101E0", VA = "0xE101E0")]
	private void MapSelected(int map)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE10950", Offset = "0xE10950", VA = "0xE10950")]
	private void CourseSelected(int course)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE10958", Offset = "0xE10958", VA = "0xE10958")]
	private void StartMatch()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE10A80", Offset = "0xE10A80", VA = "0xE10A80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB475A8", Offset = "0xB475A8")]
	private IEnumerator StartMatchFade()
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE106A0", Offset = "0xE106A0", VA = "0xE106A0")]
	private void UpdateCountdown()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE107A4", Offset = "0xE107A4", VA = "0xE107A4")]
	private void UpdateProMode()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE10AF0", Offset = "0xE10AF0", VA = "0xE10AF0")]
	public LobbyClientPanel()
	{
	}
}
[Token(Token = "0x20000ED")]
public class LobbyClientSelection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image _selectionIcon;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _selectionText;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _paneImage;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _waitObject;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _iconObject;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xD29634", Offset = "0xD29634", VA = "0xD29634")]
	public void ShowWait(bool defaultText = true, string textOverride = "")
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD29770", Offset = "0xD29770", VA = "0xD29770")]
	public void ShowIcon(Sprite icon, bool nativeSize = true)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD2985C", Offset = "0xD2985C", VA = "0xD2985C")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD29880", Offset = "0xD29880", VA = "0xD29880")]
	public void SetInfo(Sprite icon, Sprite pane, string text)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD29988", Offset = "0xD29988", VA = "0xD29988")]
	public LobbyClientSelection()
	{
	}
}
[Token(Token = "0x20000EE")]
public class ControlSchemePopup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD880AC", Offset = "0xD880AC", VA = "0xD880AC")]
	public void Yes()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD88194", Offset = "0xD88194", VA = "0xD88194")]
	public void No()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD881BC", Offset = "0xD881BC", VA = "0xD881BC")]
	public ControlSchemePopup()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ControlsPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _selected;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] _selectedParents;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DragSlider _sensitivitySlider;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DragSlider _comfortSlider;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _helmetSelected;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] _helmetSelectedParents;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _musicSelected;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] _musicSelectedParents;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MusicSlider _musicSlider;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _soundSelected;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform[] _soundSelectedParents;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SoundEffectsSlider _soundSlider;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _voiceSelected;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform[] _voiceSelectedParents;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform _namesSelected;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform[] _namesSelectedParents;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform _trailsSelected;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform[] _trailsSelectedParents;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform _touchSelected;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform[] _touchSelectedParents;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject _touchOptions;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform _handSelected;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Transform[] _handSelectedParents;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject _handOptions;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private DragSlider _qualityLevel;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TMP_Text _qualityDisplay;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Transform _refreshSelected;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Transform[] _refreshSelectedParents;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Transform _foveatedSelected;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Transform[] _foveatedSelectedParents;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject[] _optionPanes;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private TMP_Text _versionDisplay;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform _tabHighlight;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform[] _tabForms;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject[] _goDisable;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _tutorialTapped;

	[Token(Token = "0x400070F")]
	private const float _QUALITY_MULT = 20f;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int _prevValue;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD881C4", Offset = "0xD881C4", VA = "0xD881C4")]
	public void SelectControl(int scheme)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD886A4", Offset = "0xD886A4", VA = "0xD886A4")]
	public void SelectHelmet(bool isOn)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD88808", Offset = "0xD88808", VA = "0xD88808")]
	public void SelectNames(bool isOn)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xD88988", Offset = "0xD88988", VA = "0xD88988")]
	public void SelectTrails(bool isOn)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xD88B08", Offset = "0xD88B08", VA = "0xD88B08")]
	public void SelectTouch(bool isOn)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xD88C80", Offset = "0xD88C80", VA = "0xD88C80")]
	public void SelectLeftHanded(bool isOn)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD88DF8", Offset = "0xD88DF8", VA = "0xD88DF8")]
	public void SelectSensitivity(float amount)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xD88EB4", Offset = "0xD88EB4", VA = "0xD88EB4")]
	public void SelectComfort(float amount)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD88F20", Offset = "0xD88F20", VA = "0xD88F20")]
	public void SelectRefreshRate(bool isOn)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD88F24", Offset = "0xD88F24", VA = "0xD88F24")]
	public void SelectFoveatedRendering(int level)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD89060", Offset = "0xD89060", VA = "0xD89060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD8944C", Offset = "0xD8944C", VA = "0xD8944C")]
	public void RefreshOptions()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD88250", Offset = "0xD88250", VA = "0xD88250")]
	private void UpdateOutline()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD8871C", Offset = "0xD8871C", VA = "0xD8871C")]
	private void UpdateHelmetOutline()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xD89544", Offset = "0xD89544", VA = "0xD89544")]
	private void UpdateMusicOutline()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD89620", Offset = "0xD89620", VA = "0xD89620")]
	private void UpdateSoundOutline()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xD891F8", Offset = "0xD891F8", VA = "0xD891F8")]
	private void UpdateVoiceOutline()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xD88894", Offset = "0xD88894", VA = "0xD88894")]
	private void UpdateNamesOutline()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xD88A14", Offset = "0xD88A14", VA = "0xD88A14")]
	private void UpdateTrailsOutline()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xD892D4", Offset = "0xD892D4", VA = "0xD892D4")]
	private void UpdateTouchDisplay()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xD88B80", Offset = "0xD88B80", VA = "0xD88B80")]
	private void UpdateTouchOutline()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xD88CF8", Offset = "0xD88CF8", VA = "0xD88CF8")]
	private void UpdateHandedOutline()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xD89394", Offset = "0xD89394", VA = "0xD89394")]
	private void UpdateRefreshRateOutline()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xD88F88", Offset = "0xD88F88", VA = "0xD88F88")]
	private void UpdateFoveatedOutline()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xD88398", Offset = "0xD88398", VA = "0xD88398")]
	private void UpdateSliders()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xD896FC", Offset = "0xD896FC", VA = "0xD896FC")]
	public void ReplayTutorial()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xD897DC", Offset = "0xD897DC", VA = "0xD897DC")]
	public void Recalibrate()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xD89868", Offset = "0xD89868", VA = "0xD89868")]
	public void MuteMusic()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xD898CC", Offset = "0xD898CC", VA = "0xD898CC")]
	public void AllowMusic()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xD89930", Offset = "0xD89930", VA = "0xD89930")]
	public void MuteSound()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xD89994", Offset = "0xD89994", VA = "0xD89994")]
	public void AllowSound()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xD899F8", Offset = "0xD899F8", VA = "0xD899F8")]
	public void MuteVoice()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xD89A5C", Offset = "0xD89A5C", VA = "0xD89A5C")]
	public void AllowVoice()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xD89AC0", Offset = "0xD89AC0", VA = "0xD89AC0")]
	public void AllowNames()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xD89B24", Offset = "0xD89B24", VA = "0xD89B24")]
	public void AllowTrails()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xD89B88", Offset = "0xD89B88", VA = "0xD89B88")]
	public void SelectQuality(float quality)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xD89C2C", Offset = "0xD89C2C", VA = "0xD89C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xD89C30", Offset = "0xD89C30", VA = "0xD89C30")]
	private void UpdateQualityText()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xD88580", Offset = "0xD88580", VA = "0xD88580")]
	public void SelectPane(int pane)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xD89D6C", Offset = "0xD89D6C", VA = "0xD89D6C")]
	public ControlsPanel()
	{
	}
}
[Token(Token = "0x20000F0")]
public class CourseSelectButton : VrBaseButton
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite _standardBg;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite _selectedBg;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _buttonImage;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text _courseNumber;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color _numberNormal;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color _numberHighlighted;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image _randomImage;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image _lockedImage;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private CanvasGroup _lockedAlpha;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private BoxCollider _collider;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _medalContainer;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject[] _medals;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _unlockedObject;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private RectTransform _textRect;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float _bottomWithMedals;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float _bottomWithoutMedals;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _index;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool _locked;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameMapInfo _info;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _randIndex;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CourseSelectPreview _preview;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _highlight;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xD44424", Offset = "0xD44424", VA = "0xD44424", Slot = "4")]
	protected override void HandleOver()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xD4447C", Offset = "0xD4447C", VA = "0xD4447C", Slot = "5")]
	protected override void HandleOut()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xD4451C", Offset = "0xD4451C", VA = "0xD4451C")]
	public void SetHighlight(bool isHighlight)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xD445D8", Offset = "0xD445D8", VA = "0xD445D8")]
	private void SetLevel(GameMapInfo info)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xD445F4", Offset = "0xD445F4", VA = "0xD445F4")]
	private void SetIndex(int i)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xD446E4", Offset = "0xD446E4", VA = "0xD446E4")]
	private void SetPreview(CourseSelectPreview preview)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xD446EC", Offset = "0xD446EC", VA = "0xD446EC")]
	private void SetMedals(int points)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xD4476C", Offset = "0xD4476C", VA = "0xD4476C")]
	public void SetData(int index, GameMapInfo level, CourseSelectPreview preview, GameModeInfo mode)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xD44B98", Offset = "0xD44B98", VA = "0xD44B98")]
	public void SetData(GameMapInfo level, CourseSelectPreview preview, int randIndex)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xD449D8", Offset = "0xD449D8", VA = "0xD449D8")]
	private void SetLocked(bool isLocked)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xD44B78", Offset = "0xD44B78", VA = "0xD44B78")]
	private void ShowUnlock()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xD44AA0", Offset = "0xD44AA0", VA = "0xD44AA0")]
	private void ShowMedals(bool show)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xD44BF0", Offset = "0xD44BF0", VA = "0xD44BF0")]
	public bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xD44BF8", Offset = "0xD44BF8", VA = "0xD44BF8")]
	public CourseSelectButton()
	{
	}
}
[Token(Token = "0x20000F1")]
public class CourseSelectImage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalizeTextMeshPro _name;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _pane;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xD44C08", Offset = "0xD44C08", VA = "0xD44C08")]
	public void SetData(GameMapInfo map)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xD44D58", Offset = "0xD44D58", VA = "0xD44D58")]
	public CourseSelectImage()
	{
	}
}
[Token(Token = "0x20000F2")]
public class CourseSelectPane : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34500", Offset = "0xB34500")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<int> callback;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int randomIndex;

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xD452E4", Offset = "0xD452E4", VA = "0xD452E4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xD456EC", Offset = "0xD456EC", VA = "0xD456EC")]
		internal void <SpawnButtons>b__0()
		{
		}
	}

	[Token(Token = "0x20006F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34510", Offset = "0xB34510")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int localIndex;

		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0xD452EC", Offset = "0xD452EC", VA = "0xD452EC")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0xD45754", Offset = "0xD45754", VA = "0xD45754")]
		internal void <SpawnButtons>b__1()
		{
		}
	}

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CourseSelectButton _buttonPrefab;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _buttonParent;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameModeInfo _modeInfo;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameMapInfo _levelInfo;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CourseSelectPreview _previewPane;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private CourseSelectButton[] _buttons;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38E78", Offset = "0xB38E78")]
	private static int <MaxRandom>k__BackingField;

	[Token(Token = "0x1700008A")]
	public static int MaxRandom
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0xD44D60", Offset = "0xD44D60", VA = "0xD44D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4760C", Offset = "0xB4760C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600061B")]
		[Address(RVA = "0xD44DB0", Offset = "0xD44DB0", VA = "0xD44DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4761C", Offset = "0xB4761C")]
		set
		{
		}
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xD44E04", Offset = "0xD44E04", VA = "0xD44E04")]
	private CourseSelectButton SpawnButton(int i, int randIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xD44F70", Offset = "0xD44F70", VA = "0xD44F70")]
	private void SpawnButtons(Action<int> callback)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xD452F4", Offset = "0xD452F4", VA = "0xD452F4")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xD4556C", Offset = "0xD4556C", VA = "0xD4556C")]
	public void SetData(GameModeInfo mode, GameMapInfo map, CourseSelectPreview preview, Action<int> callback)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xD455DC", Offset = "0xD455DC", VA = "0xD455DC")]
	public void HighlightButton(int index)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xD456E4", Offset = "0xD456E4", VA = "0xD456E4")]
	public CourseSelectPane()
	{
	}
}
[Token(Token = "0x20000F3")]
public class CourseSelectPreview : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image _mapImage;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _personalBestTime;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _personalBestObject;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _courseIndexText;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LineRenderer _mapLineRenderer;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _courseIndexBgImage;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TMP_Text _difficultyText;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private WeatherIconDisplay _weatherIcon;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _startButton;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _leaderboardButton;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _randomText;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool _displayOnly;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameMapInfo _levelInfo;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private LobbyLevelInfo _mainData;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameModeInfo _modeInfo;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Action<int> _callback;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _index;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _preSetup;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xD457C4", Offset = "0xD457C4", VA = "0xD457C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xD45A84", Offset = "0xD45A84", VA = "0xD45A84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xD45ACC", Offset = "0xD45ACC", VA = "0xD45ACC")]
	private void ShowMapLine(int i)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xD45BC8", Offset = "0xD45BC8", VA = "0xD45BC8")]
	private void SetupLineRenderer(int i)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xD45CD8", Offset = "0xD45CD8", VA = "0xD45CD8")]
	private void ShowDifficulty(int i)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xD45E74", Offset = "0xD45E74", VA = "0xD45E74")]
	private void ShowDifficulty(CourseDifficultyInfo info)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xD45F50", Offset = "0xD45F50", VA = "0xD45F50")]
	public void SetData(GameMapInfo level, LobbyLevelInfo levelInfo, GameModeInfo mode, Action<int> callback)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xD45850", Offset = "0xD45850", VA = "0xD45850")]
	public void ShowCourse(int i, int randIndex = -1, bool init = false)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xD45FAC", Offset = "0xD45FAC", VA = "0xD45FAC")]
	private void InitMapDisplay()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xD46380", Offset = "0xD46380", VA = "0xD46380")]
	private void SetCourseName(int i)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xD4643C", Offset = "0xD4643C", VA = "0xD4643C")]
	private void SetWeather(int i)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xD460A0", Offset = "0xD460A0", VA = "0xD460A0")]
	private void SetTimes(int i)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xD46654", Offset = "0xD46654", VA = "0xD46654")]
	private void ShowNoTime()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xD466B8", Offset = "0xD466B8", VA = "0xD466B8")]
	public void OpenLeaderboard()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xD46768", Offset = "0xD46768", VA = "0xD46768")]
	public void StartCourse()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xD467D0", Offset = "0xD467D0", VA = "0xD467D0")]
	public CourseSelectPreview()
	{
	}
}
[Token(Token = "0x20000F4")]
public class CustomizationPanel : NewNotifier
{
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34520", Offset = "0xB34520")]
	private sealed class <PostLayoutDisable>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizationPanel <>4__this;

		[Token(Token = "0x17000420")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xD4A774", Offset = "0xD4A774", VA = "0xD4A774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D42")]
			[Address(RVA = "0xD4A7DC", Offset = "0xD4A7DC", VA = "0xD4A7DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0xD49B30", Offset = "0xD49B30", VA = "0xD49B30")]
		[DebuggerHidden]
		public <PostLayoutDisable>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0xD4A6FC", Offset = "0xD4A6FC", VA = "0xD4A6FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0xD4A700", Offset = "0xD4A700", VA = "0xD4A700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0xD4A77C", Offset = "0xD4A77C", VA = "0xD4A77C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34530", Offset = "0xB34530")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iCache;

		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizationPanel <>4__this;

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0xD49E50", Offset = "0xD49E50", VA = "0xD49E50")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0xD4A6B0", Offset = "0xD4A6B0", VA = "0xD4A6B0")]
		internal void <SpawnSkinButtons>b__0()
		{
		}
	}

	[Token(Token = "0x20006F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34540", Offset = "0xB34540")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iCache;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizationPanel <>4__this;

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0xD4A27C", Offset = "0xD4A27C", VA = "0xD4A27C")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0xD4A6D8", Offset = "0xD4A6D8", VA = "0xD4A6D8")]
		internal void <SpawnSwatchButtons>b__0()
		{
		}
	}

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SwatchInfo _swatchInfo;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinButton _skinButtonPrefab;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _skinButtonParent;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SkinSwatchButton _swatchButtonPrefab;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _swatchButonParent;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SkinModel _skinModel;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _skinModelParent;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CanvasGroup _skinModelCopy;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Behaviour[] _disableAfterLayout;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SkinButton[] _skinButtons;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SkinSwatchButton[] _swatchButtons;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _currentSkin;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _currentSwatch;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SkinModel _model;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _hasBeenInit;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CustomizationPanel _instance;

	[Token(Token = "0x1700008B")]
	public static CustomizationPanel Instance
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0xD48F7C", Offset = "0xD48F7C", VA = "0xD48F7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	private int SkinAmount
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0xD49050", Offset = "0xD49050", VA = "0xD49050")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000019")]
	public static event Action<SkinPair> OnSkinUpdated
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0xD48E14", Offset = "0xD48E14", VA = "0xD48E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4762C", Offset = "0xB4762C")]
		add
		{
		}
		[Token(Token = "0x6000633")]
		[Address(RVA = "0xD48EC8", Offset = "0xD48EC8", VA = "0xD48EC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4763C", Offset = "0xB4763C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xD49078", Offset = "0xD49078", VA = "0xD49078")]
	private int GetSwatchAmount(int skin)
	{
		return default(int);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xD491C8", Offset = "0xD491C8", VA = "0xD491C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xD4921C", Offset = "0xD4921C", VA = "0xD4921C")]
	public static bool IsInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xD492B4", Offset = "0xD492B4", VA = "0xD492B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xD49AC0", Offset = "0xD49AC0", VA = "0xD49AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4764C", Offset = "0xB4764C")]
	private IEnumerator PostLayoutDisable()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xD49B5C", Offset = "0xD49B5C", VA = "0xD49B5C")]
	private void SetLayoutsEnabled(bool toEnabled)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xD49440", Offset = "0xD49440", VA = "0xD49440")]
	private void SpawnSkinButtons()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xD49BD8", Offset = "0xD49BD8", VA = "0xD49BD8")]
	private void ClearSkinButtons()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xD49E58", Offset = "0xD49E58", VA = "0xD49E58", Slot = "4")]
	public override bool IsAnyNew()
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xD496EC", Offset = "0xD496EC", VA = "0xD496EC")]
	private void SpawnSwatchButtons(int skin)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xD4A004", Offset = "0xD4A004", VA = "0xD4A004")]
	private void ClearSwatchButtons()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xD49984", Offset = "0xD49984", VA = "0xD49984")]
	public void SelectSkin(int i, int changeSwatch = -1, bool suppressEvent = false)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xD4A284", Offset = "0xD4A284", VA = "0xD4A284")]
	private int GetDefaultSelection(int skin)
	{
		return default(int);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xD4A3EC", Offset = "0xD4A3EC", VA = "0xD4A3EC")]
	private void SelectSwatch(int i, bool suppressEvent = false)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xD49320", Offset = "0xD49320", VA = "0xD49320")]
	private void SpawnSkinModel()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xD4A520", Offset = "0xD4A520", VA = "0xD4A520")]
	private void UpdateSkinModel()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xD4A5D4", Offset = "0xD4A5D4", VA = "0xD4A5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xD4A6A8", Offset = "0xD4A6A8", VA = "0xD4A6A8")]
	public CustomizationPanel()
	{
	}
}
[Token(Token = "0x20000F5")]
public class EnableOnLaunch : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000648")]
	[Address(RVA = "0xD584FC", Offset = "0xD584FC", VA = "0xD584FC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xD585E8", Offset = "0xD585E8", VA = "0xD585E8")]
	private void Enable()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xD58610", Offset = "0xD58610", VA = "0xD58610")]
	private void Disable()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xD58638", Offset = "0xD58638", VA = "0xD58638")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xD58704", Offset = "0xD58704", VA = "0xD58704")]
	public EnableOnLaunch()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ExitPanel : UiPanel
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _exitHeader;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _exitButton;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _cancelButton;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39018", Offset = "0xB39018")]
	private static ExitPanel <Instance>k__BackingField;

	[Token(Token = "0x1700008D")]
	public static ExitPanel Instance
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xE8C2C4", Offset = "0xE8C2C4", VA = "0xE8C2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB476B0", Offset = "0xB476B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xE8C314", Offset = "0xE8C314", VA = "0xE8C314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB476C0", Offset = "0xB476C0")]
		private set
		{
		}
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xE8C368", Offset = "0xE8C368", VA = "0xE8C368")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xE8C3BC", Offset = "0xE8C3BC", VA = "0xE8C3BC")]
	public void ClickExit()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xE8C3C4", Offset = "0xE8C3C4", VA = "0xE8C3C4")]
	public void ClickCancel()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xE8C3E8", Offset = "0xE8C3E8", VA = "0xE8C3E8")]
	public ExitPanel()
	{
	}
}
[Token(Token = "0x20000F7")]
public class HandleSway : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _fromRot;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _toRot;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _swayTime;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Easings.Functions _easing;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _ticker;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _reverse;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xCE25B0", Offset = "0xCE25B0", VA = "0xCE25B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xCE263C", Offset = "0xCE263C", VA = "0xCE263C")]
	private void UpdateRotation(float progress, bool reverse)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xCE2938", Offset = "0xCE2938", VA = "0xCE2938")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB476D0", Offset = "0xB476D0")]
	private void CopyFrom()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xCE2970", Offset = "0xCE2970", VA = "0xCE2970")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47708", Offset = "0xB47708")]
	private void CopyTo()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xCE29A8", Offset = "0xCE29A8", VA = "0xCE29A8")]
	public HandleSway()
	{
	}
}
[Token(Token = "0x20000F8")]
public class LeaderboardContainer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardSlide _baseSlide;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _slideParent;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _headerText;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _courseText;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LobbyLevelInfo _levelInfo;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _selectionOutline;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _localParent;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _globalParent;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<LeaderboardSlide> _slides;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _local;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _mode;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _map;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _course;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xCEB26C", Offset = "0xCEB26C", VA = "0xCEB26C")]
	public void ViewLocal(bool ignoreCheck = false)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xCEB37C", Offset = "0xCEB37C", VA = "0xCEB37C")]
	public void ViewGlobal(bool ignoreCheck = false)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xCEB3D4", Offset = "0xCEB3D4", VA = "0xCEB3D4")]
	public void DisplayInfo(int mode, int map, int course)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xCEB564", Offset = "0xCEB564", VA = "0xCEB564")]
	private void SpawnSlides(int amount)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xCEB2C8", Offset = "0xCEB2C8", VA = "0xCEB2C8")]
	private void RequestBoard()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xCEB870", Offset = "0xCEB870", VA = "0xCEB870")]
	private void SpawnBoard(Result<LeaderboardData> data)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xCEBE4C", Offset = "0xCEBE4C", VA = "0xCEBE4C")]
	public LeaderboardContainer()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xCEBE54", Offset = "0xCEBE54", VA = "0xCEBE54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47740", Offset = "0xB47740")]
	private void <RequestBoard>b__17_0(Result<LeaderboardData> result)
	{
	}
}
[Token(Token = "0x20000F9")]
public class LeaderboardSlide : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _positionText;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _nameText;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _scoreText;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _highlight;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xCEBC24", Offset = "0xCEBC24", VA = "0xCEBC24")]
	public void SetInfo(int position, string username, long data, bool isTime, bool isHighlight = false)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xCECC24", Offset = "0xCECC24", VA = "0xCECC24")]
	private void SetInfo(string position, string username, string data)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xCECCA0", Offset = "0xCECCA0", VA = "0xCECCA0")]
	public void SetHighlight(bool isHighlight)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xCECCC0", Offset = "0xCECCC0", VA = "0xCECCC0")]
	public LeaderboardSlide()
	{
	}
}
[Token(Token = "0x20000FA")]
public class LobbyButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34550", Offset = "0xB34550")]
	private sealed class <LerpVisibleAfter>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbyButton <>4__this;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isVisible;

		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool endDestroy;

		[Token(Token = "0x17000422")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xE0FDB8", Offset = "0xE0FDB8", VA = "0xE0FDB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0xE0FE20", Offset = "0xE0FE20", VA = "0xE0FE20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0xE0F020", Offset = "0xE0F020", VA = "0xE0F020")]
		[DebuggerHidden]
		public <LerpVisibleAfter>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0xE0FCFC", Offset = "0xE0FCFC", VA = "0xE0FCFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0xE0FD00", Offset = "0xE0FD00", VA = "0xE0FD00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0xE0FDC0", Offset = "0xE0FDC0", VA = "0xE0FDC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34560", Offset = "0xB34560")]
	private sealed class <AnimateUnlockEnumerator>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyButton <>4__this;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D50")]
			[Address(RVA = "0xE0FC8C", Offset = "0xE0FC8C", VA = "0xE0FC8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D52")]
			[Address(RVA = "0xE0FCF4", Offset = "0xE0FCF4", VA = "0xE0FCF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0xE0F9C8", Offset = "0xE0F9C8", VA = "0xE0F9C8")]
		[DebuggerHidden]
		public <AnimateUnlockEnumerator>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0xE0F9FC", Offset = "0xE0F9FC", VA = "0xE0F9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0xE0FA00", Offset = "0xE0FA00", VA = "0xE0FA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0xE0FC94", Offset = "0xE0FC94", VA = "0xE0FC94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39138", Offset = "0xB39138")]
	[SerializeField]
	private Sprite _inactiveBg;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite _activeBg;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39194", Offset = "0xB39194")]
	[SerializeField]
	private LocalizeTextMeshPro _header;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizeTextMeshPro _subheader;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite _icon;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color _activeIconColor;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color _inactiveIconColor;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TMP_Text _adventureScore;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39230", Offset = "0xB39230")]
	[SerializeField]
	private Image _imageBg;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image _imageIcon;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Image _imagePane;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform _background;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB392AC", Offset = "0xB392AC")]
	[SerializeField]
	private bool _useLockingSystem;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _lockedOverlay;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Color _paneTintUnlocked;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Color _paneTintLocked;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TMP_Text _lockedText;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TMP_Text _lockedAmountText;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject _unlockedOverlay;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject _newOverlay;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject _dlcOverlay;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TMP_Text _dlcLockedText;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TMP_Text _dlcText;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39398", Offset = "0xB39398")]
	[SerializeField]
	private LerpCanvasGroup _lerpCanvas;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private LayoutElement _layoutElement;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _isGazed;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Action _callback;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _locked;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _lockNeeded;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine _lerpRoutine;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool isDLC;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Coroutine _unlockAnimation;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xE0E540", Offset = "0xE0E540", VA = "0xE0E540")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xE0E7F0", Offset = "0xE0E7F0", VA = "0xE0E7F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xE0E93C", Offset = "0xE0E93C", VA = "0xE0E93C")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xE0EB88", Offset = "0xE0EB88", VA = "0xE0EB88")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xE0EC28", Offset = "0xE0EC28", VA = "0xE0EC28")]
	public Transform GetBackgroundTransform()
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xE0ECC0", Offset = "0xE0ECC0", VA = "0xE0ECC0")]
	public void IgnoreLayout(bool ignoreLayout)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xE0ECE8", Offset = "0xE0ECE8", VA = "0xE0ECE8")]
	public void LerpVisible(bool isVisible, bool endDestroy = false)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xE0EE74", Offset = "0xE0EE74", VA = "0xE0EE74")]
	public void LerpVisible(bool isVisible, float delay, bool endDestroy = false)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xE0EF80", Offset = "0xE0EF80", VA = "0xE0EF80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47750", Offset = "0xB47750")]
	private IEnumerator LerpVisibleAfter(bool isVisible, float delay, bool endDestroy = false)
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE0E9E0", Offset = "0xE0E9E0", VA = "0xE0E9E0")]
	private void UpdateIcon(bool active)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE0F04C", Offset = "0xE0F04C", VA = "0xE0F04C")]
	public void SetPane(Sprite pane)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE0E6E4", Offset = "0xE0E6E4", VA = "0xE0E6E4")]
	public void ForceUpdate()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xE0F0F4", Offset = "0xE0F0F4", VA = "0xE0F0F4")]
	public void SetHeader(string header, string subheader = "")
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE0F200", Offset = "0xE0F200", VA = "0xE0F200")]
	public void SetAdventureScore(int got, int max)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE0F300", Offset = "0xE0F300", VA = "0xE0F300")]
	public void SetIcon(Sprite icon)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE0F308", Offset = "0xE0F308", VA = "0xE0F308")]
	public void SetCallback(Action callback)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xE0F310", Offset = "0xE0F310", VA = "0xE0F310")]
	public void SetLocked(bool isLocked, int amount = -1)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xE0F800", Offset = "0xE0F800", VA = "0xE0F800")]
	private void HandleSelectionComplete()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xE0F37C", Offset = "0xE0F37C", VA = "0xE0F37C")]
	private void UpdateLocked()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xE0F59C", Offset = "0xE0F59C", VA = "0xE0F59C")]
	private void UpdateLockedAmount(int amount)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xE0F670", Offset = "0xE0F670", VA = "0xE0F670")]
	private void UpdateLockedComingSoon()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE0F708", Offset = "0xE0F708", VA = "0xE0F708")]
	private void UpdateLockedDLC()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE0F900", Offset = "0xE0F900", VA = "0xE0F900")]
	public void AnimateUnlock(int amount = -1)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE0F958", Offset = "0xE0F958", VA = "0xE0F958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB477B4", Offset = "0xB477B4")]
	private IEnumerator AnimateUnlockEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE0F858", Offset = "0xE0F858", VA = "0xE0F858")]
	public void DisplayNew(bool isNew)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE0F9F4", Offset = "0xE0F9F4", VA = "0xE0F9F4")]
	public LobbyButton()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FB")]
public struct GameModeInfo
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string subname;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite icon;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite panel;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool selectCourse;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int index;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pointRequirement;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool comingSoon;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool demoLocked;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool dlcLocked;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlatformTarget[] platformExludes;
}
[Serializable]
[Token(Token = "0x20000FC")]
public struct CourseWeatherTime
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public WeatherType weather;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public WeatherValue intensity;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WeatherValue time;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeatherValue cloudCover;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeatherValue lightning;
}
[Serializable]
[Token(Token = "0x20000FD")]
public struct GameMapInfo
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite icon;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite panel;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string scene;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int courseAmount;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MapSplineContainer mapSplines;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 mapStartOffset;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite mapImage;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int index;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int pointRequirement;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool comingSoon;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool demoLocked;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool dlcLocked;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB393F4", Offset = "0xB393F4")]
	public CourseWeatherTime[] courseDynamicWeather;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool[] courseStaticWeather;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] courseMobileVariants;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] variantWeatherIcons;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite[] variantWeatherIconsRaining;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PlatformTarget[] platformExludes;

	[Token(Token = "0x40007B3")]
	public const float DEFAULT_TIME = 9f;

	[Token(Token = "0x40007B4")]
	public const float DEFAULT_TIMESCALE = 0f;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x11713A4", Offset = "0x11713A4", VA = "0x11713A4")]
	public string GetScene()
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x11713AC", Offset = "0x11713AC", VA = "0x11713AC")]
	public CourseWeatherTime GetDynamicWeather(int courseIndex)
	{
		return default(CourseWeatherTime);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x1171410", Offset = "0x1171410", VA = "0x1171410")]
	public bool GetStaticWeather(int courseIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1171464", Offset = "0x1171464", VA = "0x1171464")]
	public int GetMobileVariant(int courseIndex)
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x20000FE")]
public struct CourseDifficultyInfo
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Color color;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int levelThreshold;
}
[Token(Token = "0x20000FF")]
public class LobbyLevelInfo : ScriptableObject
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameModeInfo[] gameModes;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMapInfo[] courses;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CourseDifficultyInfo[] difficulty;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xD30D24", Offset = "0xD30D24", VA = "0xD30D24")]
	public GameMapInfo GetMap(int index)
	{
		return default(GameMapInfo);
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xD30DEC", Offset = "0xD30DEC", VA = "0xD30DEC")]
	public LobbyLevelInfo()
	{
	}
}
[Token(Token = "0x2000100")]
public class LobbyPanel : UnityEngine.MonoBehaviour, IShowMessage
{
	[Token(Token = "0x20006F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34570", Offset = "0xB34570")]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sendIndex;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0xD342C4", Offset = "0xD342C4", VA = "0xD342C4")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0xD35C58", Offset = "0xD35C58", VA = "0xD35C58")]
		internal void <CreateModeSlides>b__0()
		{
		}
	}

	[Token(Token = "0x20006F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34580", Offset = "0xB34580")]
	private sealed class <>c__DisplayClass75_0
	{
		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int modeIndex;

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0xD342CC", Offset = "0xD342CC", VA = "0xD342CC")]
		public <>c__DisplayClass75_0()
		{
		}
	}

	[Token(Token = "0x20006F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34590", Offset = "0xB34590")]
	private sealed class <>c__DisplayClass75_1
	{
		[Token(Token = "0x4002B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sendIndex;

		[Token(Token = "0x4002B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass75_0 CS$<>8__locals1;

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0xD342D4", Offset = "0xD342D4", VA = "0xD342D4")]
		public <>c__DisplayClass75_1()
		{
		}

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0xD35C7C", Offset = "0xD35C7C", VA = "0xD35C7C")]
		internal void <CreateMapSlides>b__0()
		{
		}
	}

	[Token(Token = "0x20006F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB345A0", Offset = "0xB345A0")]
	private sealed class <HideLongRoutine>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x17000426")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0xD363FC", Offset = "0xD363FC", VA = "0xD363FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xD36464", Offset = "0xD36464", VA = "0xD36464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0xD3454C", Offset = "0xD3454C", VA = "0xD3454C")]
		[DebuggerHidden]
		public <HideLongRoutine>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0xD36300", Offset = "0xD36300", VA = "0xD36300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0xD36304", Offset = "0xD36304", VA = "0xD36304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0xD36404", Offset = "0xD36404", VA = "0xD36404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB345B0", Offset = "0xB345B0")]
	private sealed class <HideThinRoutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x17000428")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xD36568", Offset = "0xD36568", VA = "0xD36568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D63")]
			[Address(RVA = "0xD365D0", Offset = "0xD365D0", VA = "0xD365D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0xD345E8", Offset = "0xD345E8", VA = "0xD345E8")]
		[DebuggerHidden]
		public <HideThinRoutine>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0xD3646C", Offset = "0xD3646C", VA = "0xD3646C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0xD36470", Offset = "0xD36470", VA = "0xD36470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0xD36570", Offset = "0xD36570", VA = "0xD36570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB345C0", Offset = "0xB345C0")]
	private sealed class <>c__DisplayClass84_0
	{
		[Token(Token = "0x4002BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x4002BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int modeIndex;

		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int mapIndex;

		[Token(Token = "0x4002BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CourseSelectPreview preview;

		[Token(Token = "0x4002BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CourseSelectPane pane;

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdventureInfoPane adventurePane;

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0xD34614", Offset = "0xD34614", VA = "0xD34614")]
		public <>c__DisplayClass84_0()
		{
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0xD35DD0", Offset = "0xD35DD0", VA = "0xD35DD0")]
		internal void <CreateCourseSlides>b__0(int i)
		{
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0xD35DF4", Offset = "0xD35DF4", VA = "0xD35DF4")]
		internal void <CreateCourseSlides>b__1(int i)
		{
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0xD35E50", Offset = "0xD35E50", VA = "0xD35E50")]
		internal void <CreateCourseSlides>b__2(int selectionIndex, int courseIndex)
		{
		}
	}

	[Token(Token = "0x20006FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB345D0", Offset = "0xB345D0")]
	private sealed class <CountdownRoutine>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xD36290", Offset = "0xD36290", VA = "0xD36290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xD362F8", Offset = "0xD362F8", VA = "0xD362F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xD34E38", Offset = "0xD34E38", VA = "0xD34E38")]
		[DebuggerHidden]
		public <CountdownRoutine>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0xD35EB0", Offset = "0xD35EB0", VA = "0xD35EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0xD35EB4", Offset = "0xD35EB4", VA = "0xD35EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0xD36298", Offset = "0xD36298", VA = "0xD36298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB345E0", Offset = "0xB345E0")]
	private sealed class <StartMatchFade>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyPanel <>4__this;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xD36730", Offset = "0xD36730", VA = "0xD36730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D73")]
			[Address(RVA = "0xD36798", Offset = "0xD36798", VA = "0xD36798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0xD34FFC", Offset = "0xD34FFC", VA = "0xD34FFC")]
		[DebuggerHidden]
		public <StartMatchFade>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0xD365D8", Offset = "0xD365D8", VA = "0xD365D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xD365DC", Offset = "0xD365DC", VA = "0xD365DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xD36738", Offset = "0xD36738", VA = "0xD36738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LobbyButton _mapButtonPrefab;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LobbyButton _modeButtonPrefab;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _buttonParent;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _longButtonParent;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _thinButtonParent;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _backButton;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LobbyClientSelection[] _selections;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CourseSelectPreview _selectionPreview;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LocalizeTextMeshPro _infoText;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _mainPane;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _countdownPane;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _randomWaitPane;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _leaderboardPane;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public GameObject _leaderboardNoConnection;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject _leaderboardNotAvailable;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TMP_Text _randomWaitCountdown;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private LobbyLevelInfo _levelInfo;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private CourseSelectPane _courseSelectPrefab;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private CourseSelectPreview _coursePreviewPrefab;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private CourseSelectImage _courseImagePrefab;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject _pointsPane;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TMP_Text _pointsText;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject _inputCover;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject _msgBox;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TMP_Text _msgText;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TMP_Text _msgTitleText;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject _proModeToggle;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject _proModeTick;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private LerpCanvasGroup _lerpCanvas;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private SwatchInfo _swatchInfo;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private LeaderboardContainer _leaderboardContainer;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject _nextButton;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject _friendBox;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float _initDelay;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private float _sequenceDelay;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private LerpCanvasGroup _longCanvas;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private LerpCanvasGroup _thinCanvas;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private PatchNotesInfo _defaultPatchNotes;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private LobbyButton _thinMapButtonPrefab;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private AdventureInfoPane _adventureInfoPrefab;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private ProgressWidget _progressPrefab;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int _currentModeIndex;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int _currentMapIndex;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _currentCourseIndex;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int _currentSlideIndex;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int _previewedCourse;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool _countdownHit;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	private bool _selectedAll;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	private bool _multiplayer;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	private bool _friendlyRoom;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool _isInit;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool _randomWaiting;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB396BC", Offset = "0xB396BC")]
	private bool <ReadyToUnlock>k__BackingField;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LobbyPanel _instance;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Coroutine _longRoutine;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Coroutine _thinRoutine;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private IEnumerator _countdownCoroutine;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool _countdownRunning;

	[Token(Token = "0x1700008E")]
	public bool ReadyToUnlock
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xD30DF4", Offset = "0xD30DF4", VA = "0xD30DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47818", Offset = "0xB47818")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xD30DFC", Offset = "0xD30DFC", VA = "0xD30DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47828", Offset = "0xB47828")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static LobbyPanel Instance
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xD30E08", Offset = "0xD30E08", VA = "0xD30E08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public bool AmIHidden
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xD35BF8", Offset = "0xD35BF8", VA = "0xD35BF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xD30ED4", Offset = "0xD30ED4", VA = "0xD30ED4")]
	public Transform GetButtonParent(int buttonAmount)
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xD30F04", Offset = "0xD30F04", VA = "0xD30F04")]
	public LerpCanvasGroup GetButtonCanvas(int buttonAmount)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD30F34", Offset = "0xD30F34", VA = "0xD30F34")]
	public LobbyButton GetMapButtonPrefab(int buttonAmount)
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xD30F4C", Offset = "0xD30F4C", VA = "0xD30F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xD30FA4", Offset = "0xD30FA4", VA = "0xD30FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xD30FAC", Offset = "0xD30FAC", VA = "0xD30FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xD32B2C", Offset = "0xD32B2C", VA = "0xD32B2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xD32CDC", Offset = "0xD32CDC", VA = "0xD32CDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD32E84", Offset = "0xD32E84", VA = "0xD32E84")]
	private void LobbyStatusChanged(LobbyStatus status)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD3170C", Offset = "0xD3170C", VA = "0xD3170C", Slot = "4")]
	public void ShowMessage(string title, string msg)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xD32E88", Offset = "0xD32E88", VA = "0xD32E88")]
	public void CloseError()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xD32ECC", Offset = "0xD32ECC", VA = "0xD32ECC")]
	public bool HasFriendBox()
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xD32EE8", Offset = "0xD32EE8", VA = "0xD32EE8")]
	public void ShowFriendBox(bool show)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xD32F30", Offset = "0xD32F30", VA = "0xD32F30")]
	private LobbyButton SpawnMapButton(GameMapInfo info, int points, Action callback, int buttonAmount, float fadeDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD333AC", Offset = "0xD333AC", VA = "0xD333AC")]
	private LobbyButton SpawnModeButton(GameModeInfo info, int points, Action callback, int buttonAmount, float fadeDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD31798", Offset = "0xD31798", VA = "0xD31798")]
	private void CreateModeSlides(bool fromBack = false)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD320DC", Offset = "0xD320DC", VA = "0xD320DC")]
	private void CreateMapSlides(int modeIndex, bool fromBack = false)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD342DC", Offset = "0xD342DC", VA = "0xD342DC")]
	private void HideRandom()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD342A0", Offset = "0xD342A0", VA = "0xD342A0")]
	private void HideSpecials()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD343FC", Offset = "0xD343FC", VA = "0xD343FC")]
	private void HideLong()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD344DC", Offset = "0xD344DC", VA = "0xD344DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47838", Offset = "0xB47838")]
	private IEnumerator HideLongRoutine()
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD3446C", Offset = "0xD3446C", VA = "0xD3446C")]
	private void HideThin()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xD34578", Offset = "0xD34578", VA = "0xD34578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4789C", Offset = "0xB4789C")]
	private IEnumerator HideThinRoutine()
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xD31BE8", Offset = "0xD31BE8", VA = "0xD31BE8")]
	private void CreateCourseSlides(int modeIndex, int mapIndex, bool fromBack = false)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xD3461C", Offset = "0xD3461C", VA = "0xD3461C")]
	private void SelectMap(int modeIndex, int mapIndex, int courseIndex = -1)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xD347C0", Offset = "0xD347C0", VA = "0xD347C0")]
	private void ShowCountdown()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xD31364", Offset = "0xD31364", VA = "0xD31364")]
	private void GoBack()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xD34BB4", Offset = "0xD34BB4", VA = "0xD34BB4")]
	public void ExitDialogue()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xD34C28", Offset = "0xD34C28", VA = "0xD34C28")]
	private void RiftWarningDialogue()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xD336DC", Offset = "0xD336DC", VA = "0xD336DC")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xD34028", Offset = "0xD34028", VA = "0xD34028")]
	private void ForceClearLong(Transform buttonParent)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xD329D0", Offset = "0xD329D0", VA = "0xD329D0")]
	private void ShowBack(bool show)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xD336BC", Offset = "0xD336BC", VA = "0xD336BC")]
	public void ShowNext(bool show)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xD34B78", Offset = "0xD34B78", VA = "0xD34B78")]
	private void StartCountdown()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xD34DC8", Offset = "0xD34DC8", VA = "0xD34DC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47900", Offset = "0xB47900")]
	private IEnumerator CountdownRoutine()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xD34E64", Offset = "0xD34E64", VA = "0xD34E64")]
	private void StartMatch()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xD34F8C", Offset = "0xD34F8C", VA = "0xD34F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47964", Offset = "0xB47964")]
	private IEnumerator StartMatchFade()
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xD35028", Offset = "0xD35028", VA = "0xD35028")]
	private void HandleCountdownReached()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xD32AA0", Offset = "0xD32AA0", VA = "0xD32AA0")]
	private void ShowRandomWait()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xD3153C", Offset = "0xD3153C", VA = "0xD3153C")]
	private void RandomWaitUpdate()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xD32714", Offset = "0xD32714", VA = "0xD32714")]
	private void UpdatePoints()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xD351C4", Offset = "0xD351C4", VA = "0xD351C4")]
	public void TapProMode()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xD351A4", Offset = "0xD351A4", VA = "0xD351A4")]
	private void SetProTick(bool isTicked)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xD35220", Offset = "0xD35220", VA = "0xD35220")]
	public void HideCanvas()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xD352D8", Offset = "0xD352D8", VA = "0xD352D8")]
	public void ShowCanvas()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xD32518", Offset = "0xD32518", VA = "0xD32518")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB479C8", Offset = "0xB479C8")]
	public bool CheckForSkinUnlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xD3575C", Offset = "0xD3575C", VA = "0xD3575C")]
	private bool ShowControlSchemeReminder()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xD35900", Offset = "0xD35900", VA = "0xD35900")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47A00", Offset = "0xB47A00")]
	private void TestUnlock()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xD35674", Offset = "0xD35674", VA = "0xD35674")]
	private bool UnlockSkin(int suit, int swatch)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xD3590C", Offset = "0xD3590C", VA = "0xD3590C")]
	public void ReturnFromSkinUnlock()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xD35940", Offset = "0xD35940", VA = "0xD35940")]
	public void OpenLeaderboard(int course)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xD359F8", Offset = "0xD359F8", VA = "0xD359F8")]
	public void TapNext()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xD35A08", Offset = "0xD35A08", VA = "0xD35A08")]
	public void TapFriendTutCancel()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xD35A10", Offset = "0xD35A10", VA = "0xD35A10")]
	public void TapFriendTutLeave()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xD354BC", Offset = "0xD354BC", VA = "0xD354BC")]
	private bool CheckPatchNotes()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xD35390", Offset = "0xD35390", VA = "0xD35390")]
	private bool CheckForCalibration()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xD35AA4", Offset = "0xD35AA4", VA = "0xD35AA4")]
	public bool OpenCalibration(bool allowExit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xD32884", Offset = "0xD32884", VA = "0xD32884")]
	public bool CheckInviteMatchmaking()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xD35BD0", Offset = "0xD35BD0", VA = "0xD35BD0")]
	public void ReturnToMainPanel()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xD34C4C", Offset = "0xD34C4C", VA = "0xD34C4C")]
	public void CheckSpaceLobbyButtons(bool space)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xD35C30", Offset = "0xD35C30", VA = "0xD35C30")]
	public LobbyPanel()
	{
	}
}
[Token(Token = "0x2000101")]
public class MultiDisable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xBBD054", Offset = "0xBBD054", VA = "0xBBD054")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xBBD138", Offset = "0xBBD138", VA = "0xBBD138")]
	public MultiDisable()
	{
	}
}
[Token(Token = "0x2000102")]
public abstract class NewNotifier : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006C7")]
	public abstract bool IsAnyNew();

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x17C17A4", Offset = "0x17C17A4", VA = "0x17C17A4")]
	protected NewNotifier()
	{
	}
}
[Token(Token = "0x2000103")]
public class OnlineInvitePanel : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20006FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB345F0", Offset = "0xB345F0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Result<RoomData>> <>9__13_0;

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0xD155C8", Offset = "0xD155C8", VA = "0xD155C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0xD155D0", Offset = "0xD155D0", VA = "0xD155D0")]
		internal void <Accept>b__13_0(Result<RoomData> r)
		{
		}
	}

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject panel;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image avatarImage;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject avatarObject;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spinnerObject;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text userName;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite _defAvatar;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomInvite _invite;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xD14E5C", Offset = "0xD14E5C", VA = "0xD14E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xD15080", Offset = "0xD15080", VA = "0xD15080")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xD14FB0", Offset = "0xD14FB0", VA = "0xD14FB0")]
	private bool CheckForInvites()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xD1511C", Offset = "0xD1511C", VA = "0xD1511C")]
	private void ShowInvite(RoomInvite invite)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xD15194", Offset = "0xD15194", VA = "0xD15194")]
	private void SetAvatar(PlatformUser user)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xD152C0", Offset = "0xD152C0", VA = "0xD152C0")]
	private void ShowAvatar(Sprite avatar)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xD1531C", Offset = "0xD1531C", VA = "0xD1531C")]
	public void Accept()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xD15484", Offset = "0xD15484", VA = "0xD15484")]
	public void Decline()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xD154C8", Offset = "0xD154C8", VA = "0xD154C8")]
	public OnlineInvitePanel()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xD154D0", Offset = "0xD154D0", VA = "0xD154D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47A38", Offset = "0xB47A38")]
	private void <SetAvatar>b__11_0(Sprite t)
	{
	}
}
[Token(Token = "0x2000104")]
public class GripModeToggleGroup : ToggleGroupOption
{
	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xCDACA4", Offset = "0xCDACA4", VA = "0xCDACA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xCDAD3C", Offset = "0xCDAD3C", VA = "0xCDAD3C", Slot = "6")]
	protected override void SetState(int index)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xCDADA4", Offset = "0xCDADA4", VA = "0xCDADA4", Slot = "7")]
	protected override int GetState()
	{
		return default(int);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xCDAE04", Offset = "0xCDAE04", VA = "0xCDAE04")]
	public GripModeToggleGroup()
	{
	}
}
[Token(Token = "0x2000105")]
public abstract class ToggleGroupOption : Option
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] _optionForms;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _selectHighlight;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xCB40C4", Offset = "0xCB40C4", VA = "0xCB40C4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xCB40D0", Offset = "0xCB40D0", VA = "0xCB40D0", Slot = "4")]
	public override void RefreshOption()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xCB4158", Offset = "0xCB4158", VA = "0xCB4158")]
	public void SelectOption(int index)
	{
	}

	[Token(Token = "0x60006DA")]
	protected abstract void SetState(int index);

	[Token(Token = "0x60006DB")]
	protected abstract int GetState();

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xCB410C", Offset = "0xCB410C", VA = "0xCB410C")]
	private void HighlightOption(int index)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xCB4188", Offset = "0xCB4188", VA = "0xCB4188")]
	protected ToggleGroupOption()
	{
	}
}
[Token(Token = "0x2000106")]
public class OptionsPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20006FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34600", Offset = "0xB34600")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int indexCache;

		[Token(Token = "0x4002BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OptionsPanel <>4__this;

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0xD1B3E0", Offset = "0xD1B3E0", VA = "0xD1B3E0")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0xD1B970", Offset = "0xD1B970", VA = "0xD1B970")]
		internal void <CreateSectionSlide>b__0()
		{
		}
	}

	[Token(Token = "0x2000700")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34610", Offset = "0xB34610")]
	private sealed class <DisablePane>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OptionsPanel <>4__this;

		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x1700042E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0xD1BA8C", Offset = "0xD1BA8C", VA = "0xD1BA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0xD1BAF4", Offset = "0xD1BAF4", VA = "0xD1BAF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0xD1B6D0", Offset = "0xD1B6D0", VA = "0xD1B6D0")]
		[DebuggerHidden]
		public <DisablePane>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0xD1B990", Offset = "0xD1B990", VA = "0xD1B990", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0xD1B994", Offset = "0xD1B994", VA = "0xD1B994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0xD1BA94", Offset = "0xD1BA94", VA = "0xD1BA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LobbyButton _buttonPrefab;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _buttonParent;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _mainPanel;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string[] _sectionNames;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite[] _sectionIcons;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NewNotifier[] _sectionNews;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator[] _optionPanes;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PartyState[] _visibility;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _diasableWait;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int _creditsIndex;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _currentPane;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine[] _paneRoutines;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _showingBoost;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xD1AAF0", Offset = "0xD1AAF0", VA = "0xD1AAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xD1AEAC", Offset = "0xD1AEAC", VA = "0xD1AEAC")]
	private void SetPanelCollider()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xD1B010", Offset = "0xD1B010", VA = "0xD1B010")]
	private LobbyButton SpawnButton(string title, Sprite icon, bool hasNew, Action callback)
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xD1AB90", Offset = "0xD1AB90", VA = "0xD1AB90")]
	private void CreateSectionSlide()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xD1B168", Offset = "0xD1B168", VA = "0xD1B168")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xD1B3E8", Offset = "0xD1B3E8", VA = "0xD1B3E8")]
	private void HandleButton(int index)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xD1B4B8", Offset = "0xD1B4B8", VA = "0xD1B4B8")]
	private void ShowPane(int i, bool show)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xD1B650", Offset = "0xD1B650", VA = "0xD1B650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47A48", Offset = "0xB47A48")]
	private IEnumerator DisablePane(int i)
	{
		return null;
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xD1B6FC", Offset = "0xD1B6FC", VA = "0xD1B6FC")]
	public void ShowCreditsPane()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xD1B704", Offset = "0xD1B704", VA = "0xD1B704")]
	public void HideCreditsPane()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xD1B718", Offset = "0xD1B718", VA = "0xD1B718")]
	public void Calibrate()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xD1B7D0", Offset = "0xD1B7D0", VA = "0xD1B7D0")]
	public void ShowBoostTutorial()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xD1B92C", Offset = "0xD1B92C", VA = "0xD1B92C")]
	public OptionsPanel()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xD1B948", Offset = "0xD1B948", VA = "0xD1B948")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47AAC", Offset = "0xB47AAC")]
	private void <ShowBoostTutorial>b__24_0()
	{
	}
}
[Token(Token = "0x2000107")]
public class PlatformEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformTarget[] platformsToEnable;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ActiveDevice[] deviceToEnable;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inverse;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xC4C280", Offset = "0xC4C280", VA = "0xC4C280")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xC4C478", Offset = "0xC4C478", VA = "0xC4C478")]
	public PlatformEnable()
	{
	}
}
[Token(Token = "0x2000108")]
public class PyramidDisabler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int oneInX;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xBDCD9C", Offset = "0xBDCD9C", VA = "0xBDCD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xBDCE44", Offset = "0xBDCE44", VA = "0xBDCE44")]
	public PyramidDisabler()
	{
	}
}
[Token(Token = "0x2000109")]
public class RandomPanel : UiPanel
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _basePane;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _findingPane;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _foundPane;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _connectingPane;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LerpCanvasGroup _canvasGroup;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RandomPanel _instance;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _hitFriends;

	[Token(Token = "0x17000091")]
	public static RandomPanel Instance
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xBE39D0", Offset = "0xBE39D0", VA = "0xBE39D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xBE3A9C", Offset = "0xBE3A9C", VA = "0xBE3A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xBE3AF0", Offset = "0xBE3AF0", VA = "0xBE3AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xBE3C74", Offset = "0xBE3C74", VA = "0xBE3C74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xBE3BE4", Offset = "0xBE3BE4", VA = "0xBE3BE4")]
	private void StatusChangeHandler(LobbyStatus lobbyStatus)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xBE3D10", Offset = "0xBE3D10", VA = "0xBE3D10")]
	public void TapFindGame()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xBE3DD4", Offset = "0xBE3DD4", VA = "0xBE3DD4")]
	public void FindGame()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xBE3E68", Offset = "0xBE3E68", VA = "0xBE3E68")]
	public void TapFriendGame()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xBE3F28", Offset = "0xBE3F28", VA = "0xBE3F28")]
	public void InviteFriends()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xBE3DCC", Offset = "0xBE3DCC", VA = "0xBE3DCC")]
	private bool IsLocked(Action onUnlock)
	{
		return default(bool);
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xBE3FE8", Offset = "0xBE3FE8", VA = "0xBE3FE8")]
	private void ShowConnectingPane()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xBE4054", Offset = "0xBE4054", VA = "0xBE4054")]
	public void TapCancelFind()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xBE40B4", Offset = "0xBE40B4", VA = "0xBE40B4")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xBE40D4", Offset = "0xBE40D4", VA = "0xBE40D4")]
	public RandomPanel()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xBE40DC", Offset = "0xBE40DC", VA = "0xBE40DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47ABC", Offset = "0xB47ABC")]
	private void <InviteFriends>b__16_0(Result<RoomData> r)
	{
	}
}
[Token(Token = "0x200010A")]
public class RandomPanelCollider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoxCollider _collider;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform _transform;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _previousHeight;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xBE4204", Offset = "0xBE4204", VA = "0xBE4204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xBE4344", Offset = "0xBE4344", VA = "0xBE4344")]
	public RandomPanelCollider()
	{
	}
}
[Token(Token = "0x200010B")]
public class ReadyIcon : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _readyContainer;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _unreadyContainer;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _loadingContainer;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _unreadyImage;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _readyImage;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xBE4438", Offset = "0xBE4438", VA = "0xBE4438")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47ACC", Offset = "0xB47ACC")]
	private void EditorFindReferences()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xBE4608", Offset = "0xBE4608", VA = "0xBE4608")]
	public void ShowReady(ReadyState ready, Color color)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xBE46E0", Offset = "0xBE46E0", VA = "0xBE46E0")]
	public ReadyIcon()
	{
	}
}
[Token(Token = "0x200010C")]
public enum ReadyState
{
	[Token(Token = "0x400081F")]
	Ready,
	[Token(Token = "0x4000820")]
	Unready,
	[Token(Token = "0x4000821")]
	Loading
}
[Token(Token = "0x200010D")]
public class ReadyPanel : UiPanel
{
	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ReadyIcon[] _readyIcons;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ReadyIcon[] _readyIconsGroup;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _readyIconsParent;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _readyIconsGroupParent;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _readyHeader;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _readyButton;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _waitingText;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TMP_Text[] _countdownTexts;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _tappedReady;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _stopCountdownUpdate;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _lastCd;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _lastPlayers;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB398CC", Offset = "0xB398CC")]
	private static ReadyPanel <Instance>k__BackingField;

	[Token(Token = "0x17000092")]
	public static ReadyPanel Instance
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xBE46E8", Offset = "0xBE46E8", VA = "0xBE46E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47B04", Offset = "0xB47B04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000705")]
		[Address(RVA = "0xBE4738", Offset = "0xBE4738", VA = "0xBE4738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47B14", Offset = "0xB47B14")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public bool AllReady
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0xBE478C", Offset = "0xBE478C", VA = "0xBE478C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xBE4794", Offset = "0xBE4794", VA = "0xBE4794")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xBE47E8", Offset = "0xBE47E8", VA = "0xBE47E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xBE4C68", Offset = "0xBE4C68", VA = "0xBE4C68")]
	private void CheckPlayerCount()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xBE4D48", Offset = "0xBE4D48", VA = "0xBE4D48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xBE4924", Offset = "0xBE4924", VA = "0xBE4924")]
	private void SetupHostPanel()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xBE497C", Offset = "0xBE497C", VA = "0xBE497C")]
	private void SetupClientPanel()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xBE4DE4", Offset = "0xBE4DE4", VA = "0xBE4DE4")]
	public void TapReady()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xBE4EA8", Offset = "0xBE4EA8", VA = "0xBE4EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xBE4FD4", Offset = "0xBE4FD4", VA = "0xBE4FD4")]
	private void UpdateCountdown()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xBE50F8", Offset = "0xBE50F8", VA = "0xBE50F8")]
	private void SetCountTexts(string str)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xBE49D4", Offset = "0xBE49D4", VA = "0xBE49D4")]
	private void UpdateReadyIcons(List<UserReadyPair> readyList)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xBE517C", Offset = "0xBE517C", VA = "0xBE517C")]
	private void UpdateReadyAmount(int amount, ReadyIcon[] icons)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xBE520C", Offset = "0xBE520C", VA = "0xBE520C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xBE5234", Offset = "0xBE5234", VA = "0xBE5234")]
	public void Show()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xBE525C", Offset = "0xBE525C", VA = "0xBE525C")]
	public ReadyPanel()
	{
	}
}
[Token(Token = "0x200010E")]
public class RiftWarningPanel : UiPanel
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB398DC", Offset = "0xB398DC")]
	private static RiftWarningPanel <Instance>k__BackingField;

	[Token(Token = "0x17000094")]
	public static RiftWarningPanel Instance
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0xBEB988", Offset = "0xBEB988", VA = "0xBEB988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47B24", Offset = "0xB47B24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000717")]
		[Address(RVA = "0xBEB9D8", Offset = "0xBEB9D8", VA = "0xBEB9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47B34", Offset = "0xB47B34")]
		private set
		{
		}
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xBEBA2C", Offset = "0xBEBA2C", VA = "0xBEBA2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xBEBA80", Offset = "0xBEBA80", VA = "0xBEBA80")]
	public void ClickContinue()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xBEBAA8", Offset = "0xBEBAA8", VA = "0xBEBAA8")]
	public void ClickExit()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xBEBAB0", Offset = "0xBEBAB0", VA = "0xBEBAB0")]
	public RiftWarningPanel()
	{
	}
}
[Token(Token = "0x200010F")]
public class SkinButton : VrBaseButton
{
	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB398EC", Offset = "0xB398EC")]
	[SerializeField]
	private Sprite _inactiveBg;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite _activeBg;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39948", Offset = "0xB39948")]
	[SerializeField]
	private Image _imageBg;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _imageIcon;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB399A4", Offset = "0xB399A4")]
	[SerializeField]
	private GameObject _lockObject;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LerpCanvasGroup _lockLerp;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TMP_Text _lockText;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _unlocked;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RectTransform _lockNotePos;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private RectTransform _lockNoteArrowPos;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float[] _lockNoteOffsets;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float[] _lockNotePivotOffsets;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39A60", Offset = "0xB39A60")]
	[SerializeField]
	private Color _selectedIconColor;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Color _unselectedIconColor;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Color _lockedIconColor;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _isSelected;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool _isGazed;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool _locked;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	private bool _useLockedText;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _suit;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _isNew;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xCAA0F4", Offset = "0xCAA0F4", VA = "0xCAA0F4")]
	public void SetIcon(Sprite icon)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xCAA110", Offset = "0xCAA110", VA = "0xCAA110", Slot = "4")]
	protected override void HandleOver()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xCAA240", Offset = "0xCAA240", VA = "0xCAA240", Slot = "5")]
	protected override void HandleOut()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xCAA298", Offset = "0xCAA298", VA = "0xCAA298")]
	public void SetSelected(bool isSelected)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xCAA174", Offset = "0xCAA174", VA = "0xCAA174")]
	private void UpdateImages()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xCAA388", Offset = "0xCAA388", VA = "0xCAA388")]
	private void SetLocked(bool isLocked)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xCAA3CC", Offset = "0xCAA3CC", VA = "0xCAA3CC")]
	public void SetInfo(int suit, SuitDesign info)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xCAA2E0", Offset = "0xCAA2E0", VA = "0xCAA2E0")]
	public void SetNew(bool isNew)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xCAA53C", Offset = "0xCAA53C", VA = "0xCAA53C")]
	private void UpdateLockNoteOffset(int index)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xCAA720", Offset = "0xCAA720", VA = "0xCAA720")]
	public SkinButton()
	{
	}
}
[Token(Token = "0x2000110")]
public class SkinModel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000701")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34620", Offset = "0xB34620")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinModel <>4__this;

		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceRequest mat;

		[Token(Token = "0x4002BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animate;

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0xDA718C", Offset = "0xDA718C", VA = "0xDA718C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0xDA7318", Offset = "0xDA7318", VA = "0xDA7318")]
		internal void <SetSkinSelection>b__0(AsyncOperation op)
		{
		}
	}

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharAnimLobby charAnim;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer charRenderer;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xDA7020", Offset = "0xDA7020", VA = "0xDA7020")]
	public void SetSkinSelection(SkinPair setting, bool animate = true)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xDA7194", Offset = "0xDA7194", VA = "0xDA7194")]
	private void OnMaterialLoaded(Material mat, bool animate)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xDA7310", Offset = "0xDA7310", VA = "0xDA7310")]
	public SkinModel()
	{
	}
}
[Token(Token = "0x2000111")]
public class SkinSwatchButton : VrBaseButton
{
	[Serializable]
	[Token(Token = "0x2000702")]
	public struct SwatchNoteOffset
	{
		[Token(Token = "0x4002BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] offsets;

		[Token(Token = "0x4002BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] pivotOffsets;
	}

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _selectedBorder;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _swatchTop;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _swatchBottom;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _lockedObject;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LerpCanvasGroup _lockLerp;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TMP_Text _lockText;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _unlocked;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private RectTransform _lockNotePos;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RectTransform _lockNoteArrowPos;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SwatchNoteOffset[] _lockNoteOffsets;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _isSelected;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _isGazed;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool _locked;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool _useLockedText;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _suit;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _swatch;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isNew;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xDA74D8", Offset = "0xDA74D8", VA = "0xDA74D8", Slot = "4")]
	protected override void HandleOver()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xDA7570", Offset = "0xDA7570", VA = "0xDA7570", Slot = "5")]
	protected override void HandleOut()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xDA75C8", Offset = "0xDA75C8", VA = "0xDA75C8")]
	public void SetSelected(bool isSelected)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xDA7534", Offset = "0xDA7534", VA = "0xDA7534")]
	private void UpdateImages()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xDA76E0", Offset = "0xDA76E0", VA = "0xDA76E0")]
	private void SetLocked(bool isLocked)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xDA7724", Offset = "0xDA7724", VA = "0xDA7724")]
	public void SetInfo(int suit, int swatch, SuitSwatch info, int swatchAmount)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xDA7630", Offset = "0xDA7630", VA = "0xDA7630")]
	public void SetNew(bool isNew)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xDA78D8", Offset = "0xDA78D8", VA = "0xDA78D8")]
	private void UpdateLockNoteOffset(int index, int amount)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xDA7B54", Offset = "0xDA7B54", VA = "0xDA7B54")]
	public SkinSwatchButton()
	{
	}
}
[Token(Token = "0x2000112")]
public class SkinUnlockModel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34630", Offset = "0xB34630")]
	private sealed class <AnimateBurn>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinUnlockModel <>4__this;

		[Token(Token = "0x4002BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <ticker>5__2;

		[Token(Token = "0x17000430")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D84")]
			[Address(RVA = "0xDA8030", Offset = "0xDA8030", VA = "0xDA8030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D86")]
			[Address(RVA = "0xDA8098", Offset = "0xDA8098", VA = "0xDA8098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0xDA7E44", Offset = "0xDA7E44", VA = "0xDA7E44")]
		[DebuggerHidden]
		public <AnimateBurn>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0xDA7E88", Offset = "0xDA7E88", VA = "0xDA7E88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D83")]
		[Address(RVA = "0xDA7E8C", Offset = "0xDA7E8C", VA = "0xDA7E8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0xDA8038", Offset = "0xDA8038", VA = "0xDA8038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer _renderer;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _effects;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _burnTime;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _disableTime;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _flipBurn;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _mat;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xDA7B5C", Offset = "0xDA7B5C", VA = "0xDA7B5C")]
	public void SetSkinSelection(SkinPair setting)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xDA7D28", Offset = "0xDA7D28", VA = "0xDA7D28")]
	public void PlayAnimation()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xDA7DD4", Offset = "0xDA7DD4", VA = "0xDA7DD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47B44", Offset = "0xB47B44")]
	private IEnumerator AnimateBurn()
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xDA7E70", Offset = "0xDA7E70", VA = "0xDA7E70")]
	public SkinUnlockModel()
	{
	}
}
[Token(Token = "0x2000113")]
public enum SwatchSpecialLock
{
	[Token(Token = "0x400085F")]
	None,
	[Token(Token = "0x4000860")]
	AllBronze,
	[Token(Token = "0x4000861")]
	AllSilver,
	[Token(Token = "0x4000862")]
	AllGold,
	[Token(Token = "0x4000863")]
	ValleySilver,
	[Token(Token = "0x4000864")]
	ValleyGold,
	[Token(Token = "0x4000865")]
	AlpineSilver,
	[Token(Token = "0x4000866")]
	AlpineGold,
	[Token(Token = "0x4000867")]
	CanyonSilver,
	[Token(Token = "0x4000868")]
	CanyonGold,
	[Token(Token = "0x4000869")]
	ValleyRa,
	[Token(Token = "0x400086A")]
	AlpineRa,
	[Token(Token = "0x400086B")]
	CanyonRa,
	[Token(Token = "0x400086C")]
	ClockRa,
	[Token(Token = "0x400086D")]
	ValleyTA,
	[Token(Token = "0x400086E")]
	AlpineTA,
	[Token(Token = "0x400086F")]
	CanyonTA,
	[Token(Token = "0x4000870")]
	ClockTA,
	[Token(Token = "0x4000871")]
	ValleySA,
	[Token(Token = "0x4000872")]
	AlpineSA,
	[Token(Token = "0x4000873")]
	CanyonSA,
	[Token(Token = "0x4000874")]
	ClockSA,
	[Token(Token = "0x4000875")]
	ClockRush,
	[Token(Token = "0x4000876")]
	ModeProgress,
	[Token(Token = "0x4000877")]
	ChinaSilver,
	[Token(Token = "0x4000878")]
	ChinaGold,
	[Token(Token = "0x4000879")]
	ChinaRa,
	[Token(Token = "0x400087A")]
	ChinaTA,
	[Token(Token = "0x400087B")]
	ChinaSA,
	[Token(Token = "0x400087C")]
	HawaiiSilver,
	[Token(Token = "0x400087D")]
	HawaiiGold,
	[Token(Token = "0x400087E")]
	HawaiiRa,
	[Token(Token = "0x400087F")]
	HawaiiSA,
	[Token(Token = "0x4000880")]
	HawaiiTA,
	[Token(Token = "0x4000881")]
	ClockAdv
}
[Serializable]
[Token(Token = "0x2000114")]
public struct SuitDesign
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite icon;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SuitSwatch[] swatches;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	public string customUnlockText;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlatformTarget[] platformExludes;

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xDEECF0", Offset = "0xDEECF0", VA = "0xDEECF0")]
	public bool HasLock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xDEEE38", Offset = "0xDEEE38", VA = "0xDEEE38")]
	public bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xDEEEE0", Offset = "0xDEEEE0", VA = "0xDEEEE0")]
	public string GetLockedMessage()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public struct SuitSwatch
{
	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Color upperColor;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color lowerColor;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pointsRequired;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 progressLock;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwatchSpecialLock specialLock;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Multiline]
	public string customUnlockText;

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xDEED70", Offset = "0xDEED70", VA = "0xDEED70")]
	public bool HasLock()
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xDEEEC8", Offset = "0xDEEEC8", VA = "0xDEEEC8")]
	public bool IsUnlocked()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000116")]
public class SwatchInfo : ScriptableObject
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SuitDesign[] designs;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xDEF1C4", Offset = "0xDEF1C4", VA = "0xDEF1C4")]
	public static bool CheckLock(int pointsRequired, SwatchSpecialLock specialLock, Vector3 progressLock)
	{
		return default(bool);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xDEFECC", Offset = "0xDEFECC", VA = "0xDEFECC")]
	public static bool CheckPointLock(int pointsRequired)
	{
		return default(bool);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xDEFF04", Offset = "0xDEFF04", VA = "0xDEFF04")]
	public static bool CheckSpecialLock(SwatchSpecialLock specialLock)
	{
		return default(bool);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xDF0090", Offset = "0xDF0090", VA = "0xDF0090")]
	private static bool CheckProgressLock(Vector3 progressLock)
	{
		return default(bool);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xDEEFE8", Offset = "0xDEEFE8", VA = "0xDEEFE8")]
	public static string GetLockMessage(int pointsRequired, SwatchSpecialLock specialLock)
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xDF0190", Offset = "0xDF0190", VA = "0xDF0190")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47BA8", Offset = "0xB47BA8")]
	private void LocalizeUnlocks()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xDF055C", Offset = "0xDF055C", VA = "0xDF055C")]
	public SwatchInfo()
	{
	}
}
[Token(Token = "0x2000117")]
public class WeatherIconDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image _icon;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WeatherIconData _data;

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x13A28FC", Offset = "0x13A28FC", VA = "0x13A28FC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x13A298C", Offset = "0x13A298C", VA = "0x13A298C")]
	public void SetInfo(float time, WeatherType weather)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x13A2AC8", Offset = "0x13A2AC8", VA = "0x13A2AC8")]
	public void SetMobileInfo(Sprite useSprite)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x13A2BD0", Offset = "0x13A2BD0", VA = "0x13A2BD0")]
	public void ShowImage(bool isEnabled)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x13A2CB8", Offset = "0x13A2CB8", VA = "0x13A2CB8")]
	public WeatherIconDisplay()
	{
	}
}
[Serializable]
[Token(Token = "0x2000118")]
public class WeatherValue
{
	[Token(Token = "0x2000704")]
	public enum WeatherValueType
	{
		[Token(Token = "0x4002BBF")]
		None,
		[Token(Token = "0x4002BC0")]
		Constant,
		[Token(Token = "0x4002BC1")]
		Easing,
		[Token(Token = "0x4002BC2")]
		Curve
	}

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WeatherValueType type;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float constantValue;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float easingFrom;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float easingTo;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Easings.Functions easingType;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve;

	[Token(Token = "0x17000095")]
	public bool IsEnabled
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x13A55C4", Offset = "0x13A55C4", VA = "0x13A55C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x13A5470", Offset = "0x13A5470", VA = "0x13A5470")]
	public float GetValue(float progress, bool clamped = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x13A55B8", Offset = "0x13A55B8", VA = "0x13A55B8")]
	public float GetDefault()
	{
		return default(float);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x13A55D4", Offset = "0x13A55D4", VA = "0x13A55D4")]
	public WeatherValue()
	{
	}
}
[Token(Token = "0x2000119")]
public class PartyPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PeepPane _partyPane;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _muteOnIcon;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _muteOffIcon;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _bottomPanel;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _displayOnly;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xCF90AC", Offset = "0xCF90AC", VA = "0xCF90AC")]
	public void Start()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xCF9258", Offset = "0xCF9258", VA = "0xCF9258")]
	private void UpdateParty(List<PlatformUser> party)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xCF9280", Offset = "0xCF9280", VA = "0xCF9280")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xCF93D8", Offset = "0xCF93D8", VA = "0xCF93D8")]
	public void TappedUseVoice()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xCF9550", Offset = "0xCF9550", VA = "0xCF9550")]
	public PartyPanel()
	{
	}
}
[Token(Token = "0x200011A")]
public class Ps4HmdBoot : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000705")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34640", Offset = "0xB34640")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ps4HmdBoot <>4__this;

		[Token(Token = "0x17000432")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0xC55FC8", Offset = "0xC55FC8", VA = "0xC55FC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0xC56030", Offset = "0xC56030", VA = "0xC56030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0xC55DB8", Offset = "0xC55DB8", VA = "0xC55DB8")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0xC55F18", Offset = "0xC55F18", VA = "0xC55F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0xC55F1C", Offset = "0xC55F1C", VA = "0xC55F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0xC55FD0", Offset = "0xC55FD0", VA = "0xC55FD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000706")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34650", Offset = "0xB34650")]
	private sealed class <StartPsvr>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000434")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D90")]
			[Address(RVA = "0xC561CC", Offset = "0xC561CC", VA = "0xC561CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D92")]
			[Address(RVA = "0xC56234", Offset = "0xC56234", VA = "0xC56234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0xC55EE4", Offset = "0xC55EE4", VA = "0xC55EE4")]
		[DebuggerHidden]
		public <StartPsvr>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0xC56038", Offset = "0xC56038", VA = "0xC56038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0xC5603C", Offset = "0xC5603C", VA = "0xC5603C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0xC561D4", Offset = "0xC561D4", VA = "0xC561D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xC55D48", Offset = "0xC55D48", VA = "0xC55D48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47BE0", Offset = "0xB47BE0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xC55DE4", Offset = "0xC55DE4", VA = "0xC55DE4")]
	private void SetupCompleted(PsvrHmdSetup.Status status, PsvrHmdSetup.Result result)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xC55E84", Offset = "0xC55E84", VA = "0xC55E84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47C44", Offset = "0xB47C44")]
	private IEnumerator StartPsvr()
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xC55F10", Offset = "0xC55F10", VA = "0xC55F10")]
	public Ps4HmdBoot()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB31F38", Offset = "0xB31F38")]
public class DeviceSpriteSet : ScriptableObject
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> rPaths;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xD53934", Offset = "0xD53934", VA = "0xD53934", Slot = "4")]
	public virtual List<Sprite> GetSprites()
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD53ADC", Offset = "0xD53ADC", VA = "0xD53ADC")]
	public DeviceSpriteSet()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB31F84", Offset = "0xB31F84")]
public class DeviceSpriteSetExplicit : DeviceSpriteSet
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<DeviceSprite> platformSprites;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD53AE4", Offset = "0xD53AE4", VA = "0xD53AE4", Slot = "4")]
	public override List<Sprite> GetSprites()
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD53C14", Offset = "0xD53C14", VA = "0xD53C14")]
	private List<Sprite> LoadSprites(List<string> paths)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xD53CFC", Offset = "0xD53CFC", VA = "0xD53CFC")]
	public DeviceSpriteSetExplicit()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public struct DeviceSprite
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ActiveDevice device;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public List<string> spriteRPaths;
}
[Token(Token = "0x200011E")]
public class SetSpritesImage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Image> images;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DeviceSpriteSet toSet;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xCA497C", Offset = "0xCA497C", VA = "0xCA497C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xCA4AA0", Offset = "0xCA4AA0", VA = "0xCA4AA0")]
	public SetSpritesImage()
	{
	}
}
[Token(Token = "0x200011F")]
public class SetSpritesSequence : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteSequence sequence;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DeviceSpriteSet toSet;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xCA4AA8", Offset = "0xCA4AA8", VA = "0xCA4AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xCA4B20", Offset = "0xCA4B20", VA = "0xCA4B20")]
	public SetSpritesSequence()
	{
	}
}
[Token(Token = "0x2000120")]
public class DragSlider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider _slider;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 _dragRange;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _applyDuringDrag;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DragSliderEvent _applyValueEvent;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _handleHits;

	[Token(Token = "0x17000096")]
	public float Value
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xD54C14", Offset = "0xD54C14", VA = "0xD54C14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600075E")]
		[Address(RVA = "0xD54C38", Offset = "0xD54C38", VA = "0xD54C38")]
		set
		{
		}
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xD54CAC", Offset = "0xD54CAC", VA = "0xD54CAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xD54DFC", Offset = "0xD54DFC", VA = "0xD54DFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xD54F4C", Offset = "0xD54F4C", VA = "0xD54F4C")]
	private void OnDown()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xD54F58", Offset = "0xD54F58", VA = "0xD54F58")]
	private void OnUp()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xD54FEC", Offset = "0xD54FEC", VA = "0xD54FEC")]
	private void OnOut()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xD55000", Offset = "0xD55000", VA = "0xD55000")]
	private void OnHit(RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xD5513C", Offset = "0xD5513C", VA = "0xD5513C")]
	private float RescaleRange(float oldValue, float oldMin, float oldMax, float newMin, float newMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xD54F6C", Offset = "0xD54F6C", VA = "0xD54F6C")]
	private void ApplyValue()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xD54C5C", Offset = "0xD54C5C", VA = "0xD54C5C")]
	public void SetValue(float amount, bool applyValue = false)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xD55158", Offset = "0xD55158", VA = "0xD55158")]
	public void SetMinMax(float min, float max)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xD551A4", Offset = "0xD551A4", VA = "0xD551A4")]
	public DragSlider()
	{
	}
}
[Serializable]
[Token(Token = "0x2000121")]
public class DragSliderEvent : UnityEvent<float>
{
	[Token(Token = "0x600076A")]
	[Address(RVA = "0xD551F4", Offset = "0xD551F4", VA = "0xD551F4")]
	public DragSliderEvent()
	{
	}
}
[Token(Token = "0x2000122")]
public class GenericButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _selectionCall;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _useRadial;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _gazeOver;

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x11757B8", Offset = "0x11757B8", VA = "0x11757B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x11759D8", Offset = "0x11759D8", VA = "0x11759D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1175BA8", Offset = "0x1175BA8", VA = "0x1175BA8")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1175C1C", Offset = "0x1175C1C", VA = "0x1175C1C")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1175C8C", Offset = "0x1175C8C", VA = "0x1175C8C")]
	private void HandleSelectionComplete()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1175CA8", Offset = "0x1175CA8", VA = "0x1175CA8")]
	public GenericButton()
	{
	}
}
[Token(Token = "0x2000123")]
public class SelectionAnimator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _overBool;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _downBool;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xCA3064", Offset = "0xCA3064", VA = "0xCA3064")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xCA323C", Offset = "0xCA323C", VA = "0xCA323C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xCA33C4", Offset = "0xCA33C4", VA = "0xCA33C4")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xCA34BC", Offset = "0xCA34BC", VA = "0xCA34BC")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xCA36B4", Offset = "0xCA36B4", VA = "0xCA36B4")]
	private void HandleDown()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xCA35BC", Offset = "0xCA35BC", VA = "0xCA35BC")]
	private void HandleUp()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xCA37AC", Offset = "0xCA37AC", VA = "0xCA37AC")]
	public SelectionAnimator()
	{
	}
}
[Token(Token = "0x2000124")]
public class SelectionSpriteSwap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39D3C", Offset = "0xB39D3C")]
	[SerializeField]
	private Sprite _inactiveBg;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite _activeBg;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB39D98", Offset = "0xB39D98")]
	[SerializeField]
	private Image _imageBg;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xCA3814", Offset = "0xCA3814", VA = "0xCA3814")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xCA3A88", Offset = "0xCA3A88", VA = "0xCA3A88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xCA397C", Offset = "0xCA397C", VA = "0xCA397C")]
	private void ForceUpdate()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xCA3B98", Offset = "0xCA3B98", VA = "0xCA3B98")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xCA3BBC", Offset = "0xCA3BBC", VA = "0xCA3BBC")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xCA3BE0", Offset = "0xCA3BE0", VA = "0xCA3BE0")]
	public SelectionSpriteSwap()
	{
	}
}
[Token(Token = "0x2000125")]
public class SpawnPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDAFA4C", Offset = "0xDAFA4C", VA = "0xDAFA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDAFB68", Offset = "0xDAFB68", VA = "0xDAFB68")]
	public SpawnPanel()
	{
	}
}
[Token(Token = "0x2000126")]
public class SpawnPanelTriggered : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UiPanel _spawnedPanel;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UiPanel _variantPanel;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xDB2140", Offset = "0xDB2140", VA = "0xDB2140")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xDB230C", Offset = "0xDB230C", VA = "0xDB230C")]
	public void SpawnVariant()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xDB2240", Offset = "0xDB2240", VA = "0xDB2240")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xDB2420", Offset = "0xDB2420", VA = "0xDB2420")]
	public bool IsSpawned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xDB2490", Offset = "0xDB2490", VA = "0xDB2490")]
	public UiPanel GetSpawnedPanel()
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xDB2498", Offset = "0xDB2498", VA = "0xDB2498")]
	public SpawnPanelTriggered()
	{
	}
}
[Token(Token = "0x2000127")]
public class SpriteSequence : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] _images;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] _sprites;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _index;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _ticker;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E44", Offset = "0xB39E44")]
	private bool <Pause>k__BackingField;

	[Token(Token = "0x17000097")]
	public bool Pause
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0xD594E0", Offset = "0xD594E0", VA = "0xD594E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47CA8", Offset = "0xB47CA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000787")]
		[Address(RVA = "0xD594E8", Offset = "0xD594E8", VA = "0xD594E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47CB8", Offset = "0xB47CB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xD594F4", Offset = "0xD594F4", VA = "0xD594F4")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xD595FC", Offset = "0xD595FC", VA = "0xD595FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xD596E0", Offset = "0xD596E0", VA = "0xD596E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xD59678", Offset = "0xD59678", VA = "0xD59678")]
	private void NextSprite()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xD5984C", Offset = "0xD5984C", VA = "0xD5984C")]
	private void SetSprite(Sprite newSprite)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xD598D8", Offset = "0xD598D8", VA = "0xD598D8")]
	public void SetSprites(Sprite[] sprites)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xD598E0", Offset = "0xD598E0", VA = "0xD598E0")]
	public void SetDelay(float delay)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xD598E8", Offset = "0xD598E8", VA = "0xD598E8")]
	public void ResetIndex()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xD59930", Offset = "0xD59930", VA = "0xD59930")]
	public SpriteSequence()
	{
	}
}
[Token(Token = "0x2000128")]
public class UiPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x1400001A")]
	public event Action OnInit
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0xCBBE48", Offset = "0xCBBE48", VA = "0xCBBE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47CC8", Offset = "0xB47CC8")]
		add
		{
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0xCBBEEC", Offset = "0xCBBEEC", VA = "0xCBBEEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47CD8", Offset = "0xB47CD8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xCBBF90", Offset = "0xCBBF90", VA = "0xCBBF90")]
	public void Init()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xCBBFA4", Offset = "0xCBBFA4", VA = "0xCBBFA4")]
	public UiPanel()
	{
	}
}
[Token(Token = "0x2000129")]
public class VrBaseButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action _callback;

	[Token(Token = "0x17000098")]
	protected VRInteractiveItem InteractiveItem
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x13A2308", Offset = "0x13A2308", VA = "0x13A2308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x13A2310", Offset = "0x13A2310", VA = "0x13A2310")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x13A25C0", Offset = "0x13A25C0", VA = "0x13A25C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x13A24B8", Offset = "0x13A24B8", VA = "0x13A24B8")]
	private void ForceUpdate()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x13A2710", Offset = "0x13A2710", VA = "0x13A2710", Slot = "4")]
	protected virtual void HandleOver()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x13A2714", Offset = "0x13A2714", VA = "0x13A2714", Slot = "5")]
	protected virtual void HandleOut()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x13A2718", Offset = "0x13A2718", VA = "0x13A2718", Slot = "6")]
	protected virtual void HandleClick()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x13A272C", Offset = "0x13A272C", VA = "0x13A272C", Slot = "7")]
	protected virtual void HandleEnable()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x13A2730", Offset = "0x13A2730", VA = "0x13A2730", Slot = "8")]
	protected virtual void HandleDisable()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x13A2734", Offset = "0x13A2734", VA = "0x13A2734")]
	public void SetCallback(Action callback)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x13A273C", Offset = "0x13A273C", VA = "0x13A273C")]
	public VrBaseButton()
	{
	}
}
[Token(Token = "0x200012A")]
public class NubReminderPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LerpCanvasGroup _canvasGroup;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x17C1B2C", Offset = "0x17C1B2C", VA = "0x17C1B2C")]
	public void Exit()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x17C1C28", Offset = "0x17C1C28", VA = "0x17C1C28")]
	public NubReminderPanel()
	{
	}
}
[Token(Token = "0x200012B")]
public class PatchNotesPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _header;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _blurb;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _point;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LerpCanvasGroup _canvasGroup;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_Text[] _points;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _closeTap;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LobbyPanel _mainPanel;

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xCF9B6C", Offset = "0xCF9B6C", VA = "0xCF9B6C")]
	public void DisplayNotes(PatchNotesInfo data, LobbyPanel mainPanel)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xCF9EEC", Offset = "0xCF9EEC", VA = "0xCF9EEC")]
	public void ClosePopup()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xCF9CB8", Offset = "0xCF9CB8", VA = "0xCF9CB8")]
	private void InitPoints(int amount)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xCF9FC4", Offset = "0xCF9FC4", VA = "0xCF9FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xCF9FE4", Offset = "0xCF9FE4", VA = "0xCF9FE4")]
	public PatchNotesPanel()
	{
	}
}
[Token(Token = "0x200012C")]
public class SkinUnlockPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000707")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34660", Offset = "0xB34660")]
	private sealed class <AnimateUnlock>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinUnlockPanel <>4__this;

		[Token(Token = "0x17000436")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D96")]
			[Address(RVA = "0xDA8BEC", Offset = "0xDA8BEC", VA = "0xDA8BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D98")]
			[Address(RVA = "0xDA8C54", Offset = "0xDA8C54", VA = "0xDA8C54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0xDA8668", Offset = "0xDA8668", VA = "0xDA8668")]
		[DebuggerHidden]
		public <AnimateUnlock>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0xDA8B24", Offset = "0xDA8B24", VA = "0xDA8B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0xDA8B28", Offset = "0xDA8B28", VA = "0xDA8B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0xDA8BF4", Offset = "0xDA8BF4", VA = "0xDA8BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34670", Offset = "0xB34670")]
	private sealed class <AnimateIn>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinUnlockPanel <>4__this;

		[Token(Token = "0x17000438")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0xDA886C", Offset = "0xDA886C", VA = "0xDA886C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xDA88D4", Offset = "0xDA88D4", VA = "0xDA88D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0xDA8694", Offset = "0xDA8694", VA = "0xDA8694")]
		[DebuggerHidden]
		public <AnimateIn>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0xDA86FC", Offset = "0xDA86FC", VA = "0xDA86FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0xDA8700", Offset = "0xDA8700", VA = "0xDA8700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0xDA8874", Offset = "0xDA8874", VA = "0xDA8874", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000709")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34680", Offset = "0xB34680")]
	private sealed class <AnimateOut>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinUnlockPanel <>4__this;

		[Token(Token = "0x1700043A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA2")]
			[Address(RVA = "0xDA8AB4", Offset = "0xDA8AB4", VA = "0xDA8AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DA4")]
			[Address(RVA = "0xDA8B1C", Offset = "0xDA8B1C", VA = "0xDA8B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0xDA86C0", Offset = "0xDA86C0", VA = "0xDA86C0")]
		[DebuggerHidden]
		public <AnimateOut>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0xDA88DC", Offset = "0xDA88DC", VA = "0xDA88DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0xDA88E0", Offset = "0xDA88E0", VA = "0xDA88E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0xDA8ABC", Offset = "0xDA8ABC", VA = "0xDA8ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LerpCanvasGroup _canvasGroup;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _modelParent;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinUnlockModel _modelPrefab;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SkinUnlockModel _modelPrefabPc;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LerpCanvasGroup _buttonOpen;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LerpCanvasGroup _buttonClose;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _unlockWait;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TMP_Text _suitName;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SwatchInfo _swatchInfo;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LobbyPanel _mainPanel;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SkinUnlockModel _model;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _origScale;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _modelTransform;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _openTap;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _closeTap;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _suit;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _swatch;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SkinUnlockPanel _instance;

	[Token(Token = "0x17000099")]
	public static SkinUnlockPanel Instance
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xDA80A0", Offset = "0xDA80A0", VA = "0xDA80A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xDA80F0", Offset = "0xDA80F0", VA = "0xDA80F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xDA8148", Offset = "0xDA8148", VA = "0xDA8148")]
	public void ShowSkin(int suit, int swatch, LobbyPanel mainPanel)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xDA8390", Offset = "0xDA8390", VA = "0xDA8390")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB47CE8", Offset = "0xB47CE8")]
	public void ClosePopup()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xDA8474", Offset = "0xDA8474", VA = "0xDA8474")]
	public void EquipAndClose()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xDA853C", Offset = "0xDA853C", VA = "0xDA853C")]
	public void PlayUnlock()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xDA85F8", Offset = "0xDA85F8", VA = "0xDA85F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47D20", Offset = "0xB47D20")]
	private IEnumerator AnimateUnlock()
	{
		return null;
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xDA8320", Offset = "0xDA8320", VA = "0xDA8320")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47D84", Offset = "0xB47D84")]
	private IEnumerator AnimateIn()
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xDA8404", Offset = "0xDA8404", VA = "0xDA8404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47DE8", Offset = "0xB47DE8")]
	private IEnumerator AnimateOut()
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xDA82BC", Offset = "0xDA82BC", VA = "0xDA82BC")]
	private void UpdateName(int suit, int swatch)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xDA86EC", Offset = "0xDA86EC", VA = "0xDA86EC")]
	public SkinUnlockPanel()
	{
	}
}
[Token(Token = "0x200012D")]
public class SpawnPanelCalibration : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F54", Offset = "0xB39F54")]
	private static SpawnPanelCalibration <Instance>k__BackingField;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _calibrationPanel;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CalibrationPanel _spawnedPanel;

	[Token(Token = "0x1700009A")]
	public static SpawnPanelCalibration Instance
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xDAFB70", Offset = "0xDAFB70", VA = "0xDAFB70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47E4C", Offset = "0xB47E4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xDAFBC0", Offset = "0xDAFBC0", VA = "0xDAFBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47E5C", Offset = "0xB47E5C")]
		private set
		{
		}
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xDAFC14", Offset = "0xDAFC14", VA = "0xDAFC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xDAFC68", Offset = "0xDAFC68", VA = "0xDAFC68")]
	public CalibrationPanel SpawnCalibration()
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xDAFDD0", Offset = "0xDAFDD0", VA = "0xDAFDD0")]
	public SpawnPanelCalibration()
	{
	}
}
[Token(Token = "0x200012E")]
public class SpawnPanelExit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpawnPanelExit _instance;

	[Token(Token = "0x1700009B")]
	public static SpawnPanelExit Instance
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xDAFDD8", Offset = "0xDAFDD8", VA = "0xDAFDD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xDAFEA4", Offset = "0xDAFEA4", VA = "0xDAFEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xDAFEF8", Offset = "0xDAFEF8", VA = "0xDAFEF8")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xDAFF90", Offset = "0xDAFF90", VA = "0xDAFF90")]
	public ExitPanel SpawnPanel()
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xDB0130", Offset = "0xDB0130", VA = "0xDB0130")]
	public void HidePanel()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xDB01C8", Offset = "0xDB01C8", VA = "0xDB01C8")]
	public void RemovePanel()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xDB027C", Offset = "0xDB027C", VA = "0xDB027C")]
	public SpawnPanelExit()
	{
	}
}
[Token(Token = "0x200012F")]
public class SpawnPanelHostCondition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070A")]
	private enum HostCondition
	{
		[Token(Token = "0x4002BD2")]
		SpawnWhenHost,
		[Token(Token = "0x4002BD3")]
		SpawnWhenClient
	}

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HostCondition _condition;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _waitForLobby;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xDB0284", Offset = "0xDB0284", VA = "0xDB0284")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xDB04D0", Offset = "0xDB04D0", VA = "0xDB04D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xDB0330", Offset = "0xDB0330", VA = "0xDB0330")]
	private void SpawnPanel()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xDB0564", Offset = "0xDB0564", VA = "0xDB0564")]
	private bool IsHost()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xDB05C4", Offset = "0xDB05C4", VA = "0xDB05C4")]
	public SpawnPanelHostCondition()
	{
	}
}
[Token(Token = "0x2000130")]
public class SpawnPanelHostOnlineCondition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070B")]
	private enum HostCondition
	{
		[Token(Token = "0x4002BD5")]
		SpawnWhenHost,
		[Token(Token = "0x4002BD6")]
		SpawnWhenClient
	}

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HostCondition _condition;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _usePartyCondition;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PartyState _partyCondition;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _waitForLobby;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool _requireFriendlyIfRoom;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	private bool _ps4Override;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiPanel _ps4Panel;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xDB05CC", Offset = "0xDB05CC", VA = "0xDB05CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xDB09DC", Offset = "0xDB09DC", VA = "0xDB09DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xDB06CC", Offset = "0xDB06CC", VA = "0xDB06CC")]
	private void SpawnPanel()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xDB0AD0", Offset = "0xDB0AD0", VA = "0xDB0AD0")]
	private bool IsHost()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xDB0B30", Offset = "0xDB0B30", VA = "0xDB0B30")]
	public SpawnPanelHostOnlineCondition()
	{
	}
}
[Token(Token = "0x2000131")]
public class SpawnPanelInGameOnline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PartyState _partyCondition;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _requireFriendlyIfRoom;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xDB0B38", Offset = "0xDB0B38", VA = "0xDB0B38")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xDB0E54", Offset = "0xDB0E54", VA = "0xDB0E54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xDB0BD4", Offset = "0xDB0BD4", VA = "0xDB0BD4")]
	private void SpawnPanel()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xDB0EE8", Offset = "0xDB0EE8", VA = "0xDB0EE8")]
	public SpawnPanelInGameOnline()
	{
	}
}
[Token(Token = "0x2000132")]
public class SpawnPanelInviteMatchMaking : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A064", Offset = "0xB3A064")]
	private static SpawnPanelInviteMatchMaking <Instance>k__BackingField;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x1700009C")]
	public static SpawnPanelInviteMatchMaking Instance
	{
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xDB0EF0", Offset = "0xDB0EF0", VA = "0xDB0EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47E6C", Offset = "0xB47E6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xDB0F40", Offset = "0xDB0F40", VA = "0xDB0F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47E7C", Offset = "0xB47E7C")]
		private set
		{
		}
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xDB0F94", Offset = "0xDB0F94", VA = "0xDB0F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xDB0FE8", Offset = "0xDB0FE8", VA = "0xDB0FE8")]
	public void SpawnPanel()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xDB1100", Offset = "0xDB1100", VA = "0xDB1100")]
	public SpawnPanelInviteMatchMaking()
	{
	}
}
[Token(Token = "0x2000133")]
public class SpawnPanelNubReminder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A084", Offset = "0xB3A084")]
	private static SpawnPanelNubReminder <Instance>k__BackingField;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NubReminderPanel _spawnedPanel;

	[Token(Token = "0x1700009D")]
	public static SpawnPanelNubReminder Instance
	{
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xDB1108", Offset = "0xDB1108", VA = "0xDB1108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47E8C", Offset = "0xB47E8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xDB1158", Offset = "0xDB1158", VA = "0xDB1158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47E9C", Offset = "0xB47E9C")]
		private set
		{
		}
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xDB11AC", Offset = "0xDB11AC", VA = "0xDB11AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xDB1200", Offset = "0xDB1200", VA = "0xDB1200")]
	public NubReminderPanel Spawn()
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xDB1368", Offset = "0xDB1368", VA = "0xDB1368")]
	public SpawnPanelNubReminder()
	{
	}
}
[Token(Token = "0x2000134")]
public class SpawnPanelOnlineCondition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PartyState _partyCondition;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _waitForLobby;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool _requireFriendlyIfRoom;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xDB1370", Offset = "0xDB1370", VA = "0xDB1370")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xDB1754", Offset = "0xDB1754", VA = "0xDB1754")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xDB1470", Offset = "0xDB1470", VA = "0xDB1470")]
	private void SpawnPanel()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xDB1848", Offset = "0xDB1848", VA = "0xDB1848")]
	public SpawnPanelOnlineCondition()
	{
	}
}
[Token(Token = "0x2000135")]
public class SpawnPanelOptions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _order;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _waitForLobby;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _isFlyzer;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xDB1850", Offset = "0xDB1850", VA = "0xDB1850")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xDB1BE0", Offset = "0xDB1BE0", VA = "0xDB1BE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xDB1950", Offset = "0xDB1950", VA = "0xDB1950")]
	private void SpawnPanel()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xDB1CD4", Offset = "0xDB1CD4", VA = "0xDB1CD4")]
	public SpawnPanelOptions()
	{
	}
}
[Token(Token = "0x2000136")]
public class SpawnPanelSkinUnlock : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UiPanel _patchNotesPanel;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpawnPanelSkinUnlock _instance;

	[Token(Token = "0x1700009E")]
	public static SpawnPanelSkinUnlock Instance
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xDB1D38", Offset = "0xDB1D38", VA = "0xDB1D38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xDB1CE4", Offset = "0xDB1CE4", VA = "0xDB1CE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xDB1E04", Offset = "0xDB1E04", VA = "0xDB1E04")]
	public SkinUnlockPanel SpawnPanel()
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xDB1F44", Offset = "0xDB1F44", VA = "0xDB1F44")]
	public PatchNotesPanel SpawnPatchNotes()
	{
		return null;
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xDB2084", Offset = "0xDB2084", VA = "0xDB2084")]
	public void RemovePanel()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xDB2138", Offset = "0xDB2138", VA = "0xDB2138")]
	public SpawnPanelSkinUnlock()
	{
	}
}
[Token(Token = "0x2000137")]
public class SpawnPanelWarning : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _panel;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _spawnedPanelObj;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpawnPanelWarning _instance;

	[Token(Token = "0x1700009F")]
	public static SpawnPanelWarning Instance
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xDB24A0", Offset = "0xDB24A0", VA = "0xDB24A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xDB256C", Offset = "0xDB256C", VA = "0xDB256C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xDB25C0", Offset = "0xDB25C0", VA = "0xDB25C0")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xDB2658", Offset = "0xDB2658", VA = "0xDB2658")]
	public RiftWarningPanel SpawnPanel()
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xDB27F8", Offset = "0xDB27F8", VA = "0xDB27F8")]
	public void HidePanel()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xDB2890", Offset = "0xDB2890", VA = "0xDB2890")]
	public void RemovePanel()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xDB2944", Offset = "0xDB2944", VA = "0xDB2944")]
	public SpawnPanelWarning()
	{
	}
}
[Token(Token = "0x2000138")]
public class SpawnPartyPanelLoading : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _panel;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject toSpawn;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform loadingGroup;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject tips;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool modifyTips;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xDB294C", Offset = "0xDB294C", VA = "0xDB294C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xDB2AF4", Offset = "0xDB2AF4", VA = "0xDB2AF4")]
	private void SetLoadingGroup(bool centered)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xDB2BD8", Offset = "0xDB2BD8", VA = "0xDB2BD8")]
	public SpawnPartyPanelLoading()
	{
	}
}
[Token(Token = "0x2000139")]
public class SubtitleDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34690", Offset = "0xB34690")]
	private sealed class <WaitRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SubtitleDisplay <>4__this;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0xDEEB8C", Offset = "0xDEEB8C", VA = "0xDEEB8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xDEEBF4", Offset = "0xDEEBF4", VA = "0xDEEBF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0xDEE890", Offset = "0xDEE890", VA = "0xDEE890")]
		[DebuggerHidden]
		public <WaitRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0xDEEAAC", Offset = "0xDEEAAC", VA = "0xDEEAAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xDEEAB0", Offset = "0xDEEAB0", VA = "0xDEEAB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0xDEEB94", Offset = "0xDEEB94", VA = "0xDEEB94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A144", Offset = "0xB3A144")]
	private static List<SubtitleDisplay> <Displays>k__BackingField;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text display;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine routine;

	[Token(Token = "0x170000A0")]
	public static List<SubtitleDisplay> Displays
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xDEE4AC", Offset = "0xDEE4AC", VA = "0xDEE4AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47EAC", Offset = "0xB47EAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xDEE514", Offset = "0xDEE514", VA = "0xDEE514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47EBC", Offset = "0xB47EBC")]
		private set
		{
		}
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xDEE580", Offset = "0xDEE580", VA = "0xDEE580")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xDEE648", Offset = "0xDEE648", VA = "0xDEE648")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xDEE710", Offset = "0xDEE710", VA = "0xDEE710")]
	public void Show(string text, float time)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xDEE814", Offset = "0xDEE814", VA = "0xDEE814")]
	public void Stop()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xDEE794", Offset = "0xDEE794", VA = "0xDEE794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47ECC", Offset = "0xB47ECC")]
	private IEnumerator WaitRoutine(float time)
	{
		return null;
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xDEE8BC", Offset = "0xDEE8BC", VA = "0xDEE8BC")]
	public static void ShowAll(string text, float time)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xDEEA2C", Offset = "0xDEEA2C", VA = "0xDEEA2C")]
	public SubtitleDisplay()
	{
	}
}
[Token(Token = "0x200013A")]
public static class SubtitleManager
{
	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xDEEBFC", Offset = "0xDEEBFC", VA = "0xDEEBFC")]
	public static void PlaySubtitle(string tag, float time)
	{
	}
}
[Token(Token = "0x200013B")]
public class LangSelectButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _displayText;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LangSelectPanel _panel;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A174", Offset = "0xB3A174")]
	private Language.Type <Lang>k__BackingField;

	[Token(Token = "0x170000A1")]
	public Language.Type Lang
	{
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xCE992C", Offset = "0xCE992C", VA = "0xCE992C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47F30", Offset = "0xB47F30")]
		get
		{
			return default(Language.Type);
		}
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xCE9934", Offset = "0xCE9934", VA = "0xCE9934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47F40", Offset = "0xB47F40")]
		private set
		{
		}
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xCE993C", Offset = "0xCE993C", VA = "0xCE993C")]
	public void SetInfo(LangSelectPanel panel, string displayName, Language.Type lang)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xCE9988", Offset = "0xCE9988", VA = "0xCE9988")]
	public void Tap()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xCE9A30", Offset = "0xCE9A30", VA = "0xCE9A30")]
	public LangSelectButton()
	{
	}
}
[Token(Token = "0x200013C")]
public class LangSelectPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070D")]
	public struct SupportedLang
	{
		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string display;

		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Language.Type lang;

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0xCE9E24", Offset = "0xCE9E24", VA = "0xCE9E24")]
		public SupportedLang(string pDisplay, Language.Type pLang)
		{
		}
	}

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly SupportedLang[] _langs;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LangSelectButton _button;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _others;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xCE9A38", Offset = "0xCE9A38", VA = "0xCE9A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xCE99A4", Offset = "0xCE99A4", VA = "0xCE99A4")]
	public void ButtonTapped(LangSelectButton button)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xCE9BD8", Offset = "0xCE9BD8", VA = "0xCE9BD8")]
	public void Show(bool value)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xCE9C80", Offset = "0xCE9C80", VA = "0xCE9C80")]
	public LangSelectPanel()
	{
	}
}
[Token(Token = "0x200013D")]
public class ScrollUv : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer ren;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int materialIndex;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xCA2D88", Offset = "0xCA2D88", VA = "0xCA2D88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xCA2EC4", Offset = "0xCA2EC4", VA = "0xCA2EC4")]
	public ScrollUv()
	{
	}
}
[Token(Token = "0x200013E")]
public class TitleLookCircle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200070E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB346A0", Offset = "0xB346A0")]
	private sealed class <ActivateButton>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleLookCircle <>4__this;

		[Token(Token = "0x1700043E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xCB3DF4", Offset = "0xCB3DF4", VA = "0xCB3DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0xCB3E5C", Offset = "0xCB3E5C", VA = "0xCB3E5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0xCB3CA4", Offset = "0xCB3CA4", VA = "0xCB3CA4")]
		[DebuggerHidden]
		public <ActivateButton>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0xCB3CD8", Offset = "0xCB3CD8", VA = "0xCB3CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0xCB3CDC", Offset = "0xCB3CDC", VA = "0xCB3CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0xCB3DFC", Offset = "0xCB3DFC", VA = "0xCB3DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_SceneToLoad;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRCameraFade m_CameraFade;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SelectionHoverRadial m_SelectionRadial;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private VRInteractiveItem m_InteractiveItem;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text m_InfoText;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator _pullCircle;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FlightTutorial _flightTute;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_GazeOver;

	[Token(Token = "0x1400001B")]
	public event Action<TitleLookCircle> OnButtonSelected
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xCB35F8", Offset = "0xCB35F8", VA = "0xCB35F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47F50", Offset = "0xB47F50")]
		add
		{
		}
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xCB369C", Offset = "0xCB369C", VA = "0xCB369C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47F60", Offset = "0xB47F60")]
		remove
		{
		}
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xCB3740", Offset = "0xCB3740", VA = "0xCB3740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xCB38A8", Offset = "0xCB38A8", VA = "0xCB38A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xCB39AC", Offset = "0xCB39AC", VA = "0xCB39AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xCB3AB0", Offset = "0xCB3AB0", VA = "0xCB3AB0")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xCB3B2C", Offset = "0xCB3B2C", VA = "0xCB3B2C")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xCB3BA4", Offset = "0xCB3BA4", VA = "0xCB3BA4")]
	private void HandleSelectionComplete()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xCB3C34", Offset = "0xCB3C34", VA = "0xCB3C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB47F70", Offset = "0xB47F70")]
	private IEnumerator ActivateButton()
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xCB3CD0", Offset = "0xCB3CD0", VA = "0xCB3CD0")]
	public TitleLookCircle()
	{
	}
}
[Token(Token = "0x200013F")]
public class TitleTouchStart : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _tapped;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xCB3F40", Offset = "0xCB3F40", VA = "0xCB3F40")]
	public void LoadToLobby()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xCB3FD8", Offset = "0xCB3FD8", VA = "0xCB3FD8")]
	public TitleTouchStart()
	{
	}
}
[Token(Token = "0x2000140")]
public class TitleUiControlSwap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _lookUi;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _pointUi;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xCB3FE0", Offset = "0xCB3FE0", VA = "0xCB3FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xCB40B0", Offset = "0xCB40B0", VA = "0xCB40B0")]
	public TitleUiControlSwap()
	{
	}
}
[Token(Token = "0x2000141")]
public class EditorCursor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EditorCursor _instance;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xD57134", Offset = "0xD57134", VA = "0xD57134")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xD57284", Offset = "0xD57284", VA = "0xD57284")]
	private void Update()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xD57288", Offset = "0xD57288", VA = "0xD57288")]
	public EditorCursor()
	{
	}
}
[Token(Token = "0x2000142")]
public class EditorMouseLook : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _camera;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _rotationX;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _rotationY;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion _originalRotation;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _active;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EditorMouseLook _instance;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 _lastMousePos;

	[Token(Token = "0x170000A2")]
	private bool TouchEnabled
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0xD57710", Offset = "0xD57710", VA = "0xD57710")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	public static bool IsActive
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xD57770", Offset = "0xD57770", VA = "0xD57770")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xD5781C", Offset = "0xD5781C", VA = "0xD5781C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xD57824", Offset = "0xD57824", VA = "0xD57824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xD578D8", Offset = "0xD578D8", VA = "0xD578D8")]
	private static float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xD57918", Offset = "0xD57918", VA = "0xD57918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xD5796C", Offset = "0xD5796C", VA = "0xD5796C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xD57A08", Offset = "0xD57A08", VA = "0xD57A08")]
	public EditorMouseLook()
	{
	}
}
[Token(Token = "0x2000143")]
public class GameState : IState
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _sceneToLoad;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A264", Offset = "0xB3A264")]
	private bool <IsPlayerLoaded>k__BackingField;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A274", Offset = "0xB3A274")]
	private string <Map>k__BackingField;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A284", Offset = "0xB3A284")]
	private int <MapIndex>k__BackingField;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A294", Offset = "0xB3A294")]
	private int <Mode>k__BackingField;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2A4", Offset = "0xB3A2A4")]
	private int <Course>k__BackingField;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2B4", Offset = "0xB3A2B4")]
	private bool <SetOfflineModeOnExit>k__BackingField;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2C4", Offset = "0xB3A2C4")]
	private bool <LaunchedFromScene>k__BackingField;

	[Token(Token = "0x170000A4")]
	public string SceneToLoad
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1173BF8", Offset = "0x1173BF8", VA = "0x1173BF8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A5")]
	public bool IsPlayerLoaded
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1173C00", Offset = "0x1173C00", VA = "0x1173C00", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47FD4", Offset = "0xB47FD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1173C08", Offset = "0x1173C08", VA = "0x1173C08", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47FE4", Offset = "0xB47FE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public string Map
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1173C14", Offset = "0x1173C14", VA = "0x1173C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB47FF4", Offset = "0xB47FF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1173C1C", Offset = "0x1173C1C", VA = "0x1173C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48004", Offset = "0xB48004")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public int MapIndex
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1173C24", Offset = "0x1173C24", VA = "0x1173C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48014", Offset = "0xB48014")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1173C2C", Offset = "0x1173C2C", VA = "0x1173C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48024", Offset = "0xB48024")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public int Mode
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1173C34", Offset = "0x1173C34", VA = "0x1173C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48034", Offset = "0xB48034")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1173C3C", Offset = "0x1173C3C", VA = "0x1173C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48044", Offset = "0xB48044")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public int Course
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1173C44", Offset = "0x1173C44", VA = "0x1173C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48054", Offset = "0xB48054")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1173C4C", Offset = "0x1173C4C", VA = "0x1173C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48064", Offset = "0xB48064")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public bool IsRaceMode
	{
		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1173C54", Offset = "0x1173C54", VA = "0x1173C54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AB")]
	public bool IsTimeMode
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1173C64", Offset = "0x1173C64", VA = "0x1173C64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AC")]
	public bool IsScoreMode
	{
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x11716FC", Offset = "0x11716FC", VA = "0x11716FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AD")]
	public bool IsAdventureMode
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1173C74", Offset = "0x1173C74", VA = "0x1173C74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AE")]
	public bool SetOfflineModeOnExit
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1173C84", Offset = "0x1173C84", VA = "0x1173C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48074", Offset = "0xB48074")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1173C8C", Offset = "0x1173C8C", VA = "0x1173C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48084", Offset = "0xB48084")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public bool LaunchedFromScene
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1173C98", Offset = "0x1173C98", VA = "0x1173C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48094", Offset = "0xB48094")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1173CA0", Offset = "0x1173CA0", VA = "0x1173CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB480A4", Offset = "0xB480A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1173CAC", Offset = "0x1173CAC", VA = "0x1173CAC")]
	public GameState(GameMapInfo map, int mapIndex, int mode, int course = -1, bool fromScene = false)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x116F780", Offset = "0x116F780", VA = "0x116F780")]
	public GameState(string map, int mapIndex, int mode, int course = -1, int version = -1, bool fromScene = false)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1173D5C", Offset = "0x1173D5C", VA = "0x1173D5C", Slot = "7")]
	public void PreEnterState()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1173D68", Offset = "0x1173D68", VA = "0x1173D68", Slot = "8")]
	public void EnterState()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1173DD0", Offset = "0x1173DD0", VA = "0x1173DD0", Slot = "9")]
	public void ExitState()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1173E88", Offset = "0x1173E88", VA = "0x1173E88", Slot = "10")]
	public void OnExitPostFade()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1173E8C", Offset = "0x1173E8C", VA = "0x1173E8C", Slot = "11")]
	public void OnEnterPostFade()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1173EF8", Offset = "0x1173EF8", VA = "0x1173EF8")]
	public bool IsRaining()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1174170", Offset = "0x1174170", VA = "0x1174170")]
	public bool IsSnowing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1173F40", Offset = "0x1173F40", VA = "0x1173F40")]
	public WeatherType GetWeather()
	{
		return default(WeatherType);
	}
}
[Token(Token = "0x2000144")]
public class LobbyState : IState
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2D4", Offset = "0xB3A2D4")]
	private bool <IsPlayerLoaded>k__BackingField;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2E4", Offset = "0xB3A2E4")]
	private int <SkipToMode>k__BackingField;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2F4", Offset = "0xB3A2F4")]
	private int <SkipToMap>k__BackingField;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A304", Offset = "0xB3A304")]
	private string <ErrorMessage>k__BackingField;

	[Token(Token = "0x170000B0")]
	public string SceneToLoad
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0xD367A0", Offset = "0xD367A0", VA = "0xD367A0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public bool IsPlayerLoaded
	{
		[Token(Token = "0x600083B")]
		[Address(RVA = "0xD3680C", Offset = "0xD3680C", VA = "0xD3680C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB480B4", Offset = "0xB480B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600083C")]
		[Address(RVA = "0xD36814", Offset = "0xD36814", VA = "0xD36814", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB480C4", Offset = "0xB480C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public int SkipToMode
	{
		[Token(Token = "0x600083D")]
		[Address(RVA = "0xD36820", Offset = "0xD36820", VA = "0xD36820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB480D4", Offset = "0xB480D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600083E")]
		[Address(RVA = "0xD36828", Offset = "0xD36828", VA = "0xD36828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB480E4", Offset = "0xB480E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public int SkipToMap
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0xD36830", Offset = "0xD36830", VA = "0xD36830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB480F4", Offset = "0xB480F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000840")]
		[Address(RVA = "0xD36838", Offset = "0xD36838", VA = "0xD36838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48104", Offset = "0xB48104")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public string ErrorMessage
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xD36840", Offset = "0xD36840", VA = "0xD36840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48114", Offset = "0xB48114")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000842")]
		[Address(RVA = "0xD36848", Offset = "0xD36848", VA = "0xD36848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48124", Offset = "0xB48124")]
		private set
		{
		}
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xD36850", Offset = "0xD36850", VA = "0xD36850")]
	public LobbyState(int mode, int map = -1)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xD2B3A0", Offset = "0xD2B3A0", VA = "0xD2B3A0")]
	public LobbyState(string error = "")
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xD36888", Offset = "0xD36888", VA = "0xD36888", Slot = "7")]
	public void PreEnterState()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xD368D4", Offset = "0xD368D4", VA = "0xD368D4", Slot = "8")]
	public void EnterState()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xD3693C", Offset = "0xD3693C", VA = "0xD3693C", Slot = "9")]
	public void ExitState()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xD36A78", Offset = "0xD36A78", VA = "0xD36A78", Slot = "10")]
	public void OnExitPostFade()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xD36A7C", Offset = "0xD36A7C", VA = "0xD36A7C", Slot = "11")]
	public void OnEnterPostFade()
	{
	}
}
[Token(Token = "0x2000145")]
public class StateMachine : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200070F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB346B0", Offset = "0xB346B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__17_0;

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xD5D200", Offset = "0xD5D200", VA = "0xD5D200")]
		public <>c()
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0xD5D208", Offset = "0xD5D208", VA = "0xD5D208")]
		internal void <ChangeStateImmediate>b__17_0()
		{
		}
	}

	[Token(Token = "0x2000710")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB346C0", Offset = "0xB346C0")]
	private sealed class <QueueStateLoad>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateMachine <>4__this;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator queued;

		[Token(Token = "0x17000440")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0xD5DE90", Offset = "0xD5DE90", VA = "0xD5DE90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xD5DEF8", Offset = "0xD5DEF8", VA = "0xD5DEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xD5D000", Offset = "0xD5D000", VA = "0xD5D000")]
		[DebuggerHidden]
		public <QueueStateLoad>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0xD5DE14", Offset = "0xD5DE14", VA = "0xD5DE14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0xD5DE18", Offset = "0xD5DE18", VA = "0xD5DE18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0xD5DE98", Offset = "0xD5DE98", VA = "0xD5DE98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000711")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB346D0", Offset = "0xB346D0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool cont;

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0xD5D2C0", Offset = "0xD5D2C0", VA = "0xD5D2C0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0xD5D2C8", Offset = "0xD5D2C8", VA = "0xD5D2C8")]
		internal void <LoadStateRoutine>b__0()
		{
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0xD5D2D4", Offset = "0xD5D2D4", VA = "0xD5D2D4")]
		internal void <LoadStateRoutine>b__1()
		{
		}
	}

	[Token(Token = "0x2000712")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB346E0", Offset = "0xB346E0")]
	private sealed class <LoadStateRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool skipFadeOut;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass20_0 <>8__1;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IState state;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action callback;

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <unload>5__2;

		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperation <blankLoad>5__3;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AsyncOperation <operation>5__4;

		[Token(Token = "0x17000442")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DC1")]
			[Address(RVA = "0xD5DDA4", Offset = "0xD5DDA4", VA = "0xD5DDA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0xD5DE0C", Offset = "0xD5DE0C", VA = "0xD5DE0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0xD5D02C", Offset = "0xD5D02C", VA = "0xD5D02C")]
		[DebuggerHidden]
		public <LoadStateRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0xD5D2E0", Offset = "0xD5D2E0", VA = "0xD5D2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0xD5D2E4", Offset = "0xD5D2E4", VA = "0xD5D2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0xD5DDAC", Offset = "0xD5DDAC", VA = "0xD5DDAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StateMachine _instance;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IState _currentState;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isFading;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _lockStateChange;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool IsFadingOut;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _fadeRoutine;

	[Token(Token = "0x170000B5")]
	public static StateMachine Instance
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xD5C8B4", Offset = "0xD5C8B4", VA = "0xD5C8B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B6")]
	public static IState CurrentState
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xD5C9C0", Offset = "0xD5C9C0", VA = "0xD5C9C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xD5C9E0", Offset = "0xD5C9E0", VA = "0xD5C9E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public static bool IsFading
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xD5CA0C", Offset = "0xD5CA0C", VA = "0xD5CA0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600084E")]
		[Address(RVA = "0xD5CA2C", Offset = "0xD5CA2C", VA = "0xD5CA2C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Action OnStateChange
	{
		[Token(Token = "0x600084F")]
		[Address(RVA = "0xD5CA5C", Offset = "0xD5CA5C", VA = "0xD5CA5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48134", Offset = "0xB48134")]
		add
		{
		}
		[Token(Token = "0x6000850")]
		[Address(RVA = "0xD5CB14", Offset = "0xD5CB14", VA = "0xD5CB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48144", Offset = "0xB48144")]
		remove
		{
		}
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xD5CBCC", Offset = "0xD5CBCC", VA = "0xD5CBCC")]
	public static void ChangeStateImmediate(IState state)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xD59D44", Offset = "0xD59D44", VA = "0xD59D44")]
	public static void FadeLoadState(IState state, [Optional] Action callback, bool skipFadeOut = false, bool lockStateChange = false)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xD5CF84", Offset = "0xD5CF84", VA = "0xD5CF84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB48154", Offset = "0xB48154")]
	private IEnumerator QueueStateLoad(IEnumerator queued)
	{
		return null;
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xD5CEFC", Offset = "0xD5CEFC", VA = "0xD5CEFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB481B8", Offset = "0xB481B8")]
	private IEnumerator LoadStateRoutine(IState state, Action callback, bool skipFadeOut)
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xD5D058", Offset = "0xD5D058", VA = "0xD5D058")]
	public static void Init(IState state)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xD5D194", Offset = "0xD5D194", VA = "0xD5D194")]
	public StateMachine()
	{
	}
}
[Token(Token = "0x2000146")]
public interface IState
{
	[Token(Token = "0x170000B8")]
	string SceneToLoad
	{
		[Token(Token = "0x6000857")]
		get;
	}

	[Token(Token = "0x170000B9")]
	bool IsPlayerLoaded
	{
		[Token(Token = "0x6000858")]
		get;
		[Token(Token = "0x6000859")]
		set;
	}

	[Token(Token = "0x600085A")]
	void PreEnterState();

	[Token(Token = "0x600085B")]
	void EnterState();

	[Token(Token = "0x600085C")]
	void ExitState();

	[Token(Token = "0x600085D")]
	void OnExitPostFade();

	[Token(Token = "0x600085E")]
	void OnEnterPostFade();
}
[Token(Token = "0x2000147")]
public class TitleState : IState
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A324", Offset = "0xB3A324")]
	private bool <IsPlayerLoaded>k__BackingField;

	[Token(Token = "0x170000BA")]
	public string SceneToLoad
	{
		[Token(Token = "0x600085F")]
		[Address(RVA = "0xCB3E64", Offset = "0xCB3E64", VA = "0xCB3E64", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public bool IsPlayerLoaded
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0xCB3EAC", Offset = "0xCB3EAC", VA = "0xCB3EAC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4821C", Offset = "0xB4821C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xCB3EB4", Offset = "0xCB3EB4", VA = "0xCB3EB4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4822C", Offset = "0xB4822C")]
		set
		{
		}
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xCB3EC0", Offset = "0xCB3EC0", VA = "0xCB3EC0", Slot = "7")]
	public void PreEnterState()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xCB3EC4", Offset = "0xCB3EC4", VA = "0xCB3EC4", Slot = "8")]
	public void EnterState()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xCB3ED0", Offset = "0xCB3ED0", VA = "0xCB3ED0", Slot = "9")]
	public void ExitState()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xCB3F30", Offset = "0xCB3F30", VA = "0xCB3F30", Slot = "10")]
	public void OnExitPostFade()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xCB3F34", Offset = "0xCB3F34", VA = "0xCB3F34", Slot = "11")]
	public void OnEnterPostFade()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xCB3F38", Offset = "0xCB3F38", VA = "0xCB3F38")]
	public TitleState()
	{
	}
}
[Token(Token = "0x2000148")]
public class TutorialState : IState
{
	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A334", Offset = "0xB3A334")]
	private bool <IsPlayerLoaded>k__BackingField;

	[Token(Token = "0x170000BC")]
	public string SceneToLoad
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xCBB268", Offset = "0xCBB268", VA = "0xCBB268", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public bool IsPlayerLoaded
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xCBB2D4", Offset = "0xCBB2D4", VA = "0xCBB2D4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4823C", Offset = "0xB4823C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600086A")]
		[Address(RVA = "0xCBB2DC", Offset = "0xCBB2DC", VA = "0xCBB2DC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4824C", Offset = "0xB4824C")]
		set
		{
		}
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xCBB2E8", Offset = "0xCBB2E8", VA = "0xCBB2E8", Slot = "7")]
	public void PreEnterState()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xCBB34C", Offset = "0xCBB34C", VA = "0xCBB34C", Slot = "8")]
	public void EnterState()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xCBB3C0", Offset = "0xCBB3C0", VA = "0xCBB3C0", Slot = "9")]
	public void ExitState()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xCBB4B4", Offset = "0xCBB4B4", VA = "0xCBB4B4", Slot = "10")]
	public void OnExitPostFade()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xCBB4B8", Offset = "0xCBB4B8", VA = "0xCBB4B8")]
	public static void SetPosTrackiong()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xCBB51C", Offset = "0xCBB51C", VA = "0xCBB51C", Slot = "11")]
	public void OnEnterPostFade()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xCBB520", Offset = "0xCBB520", VA = "0xCBB520")]
	public TutorialState()
	{
	}
}
[Token(Token = "0x2000149")]
public class BaseCampMediator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000713")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB346F0", Offset = "0xB346F0")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseCampMediator <>4__this;

		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x6002DC4")]
		[Address(RVA = "0xE6D0B8", Offset = "0xE6D0B8", VA = "0xE6D0B8")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0xE6D364", Offset = "0xE6D364", VA = "0xE6D364")]
		internal void <FadePlayerOut>b__0()
		{
		}
	}

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] slots;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject basecampAi;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, GameObject> _playerDict;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BaseCampMediator Instance;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRCameraFade _camFade;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xE6C6CC", Offset = "0xE6C6CC", VA = "0xE6C6CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE6C7B8", Offset = "0xE6C7B8", VA = "0xE6C7B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xE6C854", Offset = "0xE6C854", VA = "0xE6C854")]
	private void OnBaseCampSpawn(Multiplayer.Player.User user, Transform obj)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xE6CA44", Offset = "0xE6CA44", VA = "0xE6CA44")]
	public static void SpawnMe()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xE6CD30", Offset = "0xE6CD30", VA = "0xE6CD30")]
	public static void SpawnBot(Multiplayer.Player.User bot)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xE6CF94", Offset = "0xE6CF94", VA = "0xE6CF94")]
	public void FadePlayerOut(Action callback)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xE6D0C0", Offset = "0xE6D0C0", VA = "0xE6D0C0")]
	private void HidePlayers()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xE6D218", Offset = "0xE6D218", VA = "0xE6D218")]
	public static void ControlRelinquished(int player)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xE6D35C", Offset = "0xE6D35C", VA = "0xE6D35C")]
	public BaseCampMediator()
	{
	}
}
[Token(Token = "0x200014A")]
public static class ErrorReporter
{
	[Token(Token = "0x2000714")]
	private struct Error
	{
		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string title;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string error;

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int priority;
	}

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Error _errorSlot;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool _hasError;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static IShowMessage _display;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xD5872C", Offset = "0xD5872C", VA = "0xD5872C")]
	public static void Link(IShowMessage display)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xD58798", Offset = "0xD58798", VA = "0xD58798")]
	private static void CheckSpawnError()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xD589C0", Offset = "0xD589C0", VA = "0xD589C0")]
	public static void Report(string error, int code = 0, int priority = 0)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xD58A48", Offset = "0xD58A48", VA = "0xD58A48")]
	public static void Report(string title, string error, int code = 0, int priority = 0)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xD58858", Offset = "0xD58858", VA = "0xD58858")]
	private static void DisplayError(string title, string message)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xD58C2C", Offset = "0xD58C2C", VA = "0xD58C2C")]
	private static bool IsPS4Error(string error, int code)
	{
		return default(bool);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xD58CCC", Offset = "0xD58CCC", VA = "0xD58CCC")]
	public static void Delink(IShowMessage display)
	{
	}
}
[Token(Token = "0x200014B")]
public interface IShowMessage
{
	[Token(Token = "0x6000883")]
	void ShowMessage(string title, string message);
}
[Token(Token = "0x200014C")]
public static class BotInfo
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Dictionary<int, List<string>> PathFiles;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly List<Multiplayer.Player.User> BotPool;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xD732B8", Offset = "0xD732B8", VA = "0xD732B8")]
	public static Multiplayer.Player.User GetBotClone(int index)
	{
		return null;
	}
}
[Token(Token = "0x200014D")]
public static class BotMediator
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A344", Offset = "0xB3A344")]
	private static int <OriginalSeed>k__BackingField;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A354", Offset = "0xB3A354")]
	private static int <CurrentSeed>k__BackingField;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Multiplayer.Player.User> _bots;

	[Token(Token = "0x170000BE")]
	public static int OriginalSeed
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0xD73CC4", Offset = "0xD73CC4", VA = "0xD73CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4825C", Offset = "0xB4825C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000887")]
		[Address(RVA = "0xD73D2C", Offset = "0xD73D2C", VA = "0xD73D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4826C", Offset = "0xB4826C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public static int CurrentSeed
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0xD73D98", Offset = "0xD73D98", VA = "0xD73D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4827C", Offset = "0xB4827C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000889")]
		[Address(RVA = "0xD73E00", Offset = "0xD73E00", VA = "0xD73E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4828C", Offset = "0xB4828C")]
		set
		{
		}
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xD73E6C", Offset = "0xD73E6C", VA = "0xD73E6C")]
	public static void Init()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xD73EE4", Offset = "0xD73EE4", VA = "0xD73EE4")]
	public static void Init(int seed)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xD73FDC", Offset = "0xD73FDC", VA = "0xD73FDC")]
	private static void SelectBots()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xD7416C", Offset = "0xD7416C", VA = "0xD7416C")]
	public static int CalulatedRandom(int min, int maxExc)
	{
		return default(int);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xD74290", Offset = "0xD74290", VA = "0xD74290")]
	public static void IncrementRandomSeed()
	{
	}

	[Token(Token = "0x600088F")]
	public static void Shuffle<T>(this IList<T> list)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xD74388", Offset = "0xD74388", VA = "0xD74388")]
	public static Multiplayer.Player.User GetBot(int index)
	{
		return null;
	}
}
[Token(Token = "0x200014E")]
public class GameEventMediator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000715")]
	public delegate void ReportCountdown(float progress);

	[Serializable]
	[Token(Token = "0x2000716")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34700", Offset = "0xB34700")]
	private sealed class <>c
	{
		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__148_0;

		[Token(Token = "0x4002BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__151_0;

		[Token(Token = "0x4002BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__151_1;

		[Token(Token = "0x4002BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__176_0;

		[Token(Token = "0x4002BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__176_1;

		[Token(Token = "0x4002BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action <>9__184_0;

		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action <>9__198_0;

		[Token(Token = "0x4002BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Comparison<UserPair<float>> <>9__200_0;

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0x116F280", Offset = "0x116F280", VA = "0x116F280")]
		public <>c()
		{
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0x116F288", Offset = "0x116F288", VA = "0x116F288")]
		internal void <Awake>b__148_0()
		{
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0x116F334", Offset = "0x116F334", VA = "0x116F334")]
		internal void <ExitFromDisconnect>b__151_0()
		{
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0x116F3AC", Offset = "0x116F3AC", VA = "0x116F3AC")]
		internal void <ExitFromDisconnect>b__151_1()
		{
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0x116F424", Offset = "0x116F424", VA = "0x116F424")]
		internal void <ExecuteEndScreenChoice>b__176_0()
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0x116F828", Offset = "0x116F828", VA = "0x116F828")]
		internal void <ExecuteEndScreenChoice>b__176_1()
		{
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0x116F964", Offset = "0x116F964", VA = "0x116F964")]
		internal void <FinishedRace>b__184_0()
		{
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0x116F9FC", Offset = "0x116F9FC", VA = "0x116F9FC")]
		internal void <SelectLeave>b__198_0()
		{
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0x116FA74", Offset = "0x116FA74", VA = "0x116FA74")]
		internal int <AddCheckpointTime>b__200_0(UserPair<float> s1, UserPair<float> s2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000717")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34710", Offset = "0xB34710")]
	private sealed class <SceneLoadWaitForAllTimeoutRoutine>d__155 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventMediator <>4__this;

		[Token(Token = "0x17000444")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0x117038C", Offset = "0x117038C", VA = "0x117038C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DD9")]
			[Address(RVA = "0x11703F4", Offset = "0x11703F4", VA = "0x11703F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0x1170248", Offset = "0x1170248", VA = "0x1170248")]
		[DebuggerHidden]
		public <SceneLoadWaitForAllTimeoutRoutine>d__155(int <>1__state)
		{
		}

		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0x1170274", Offset = "0x1170274", VA = "0x1170274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0x1170278", Offset = "0x1170278", VA = "0x1170278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0x1170394", Offset = "0x1170394", VA = "0x1170394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34720", Offset = "0xB34720")]
	private sealed class <EndGameCountdownRoutine>d__169 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventMediator <>4__this;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x17000446")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DDD")]
			[Address(RVA = "0x116FCC8", Offset = "0x116FCC8", VA = "0x116FCC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0x116FD30", Offset = "0x116FD30", VA = "0x116FD30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0x116FAA4", Offset = "0x116FAA4", VA = "0x116FAA4")]
		[DebuggerHidden]
		public <EndGameCountdownRoutine>d__169(int <>1__state)
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0x116FAD0", Offset = "0x116FAD0", VA = "0x116FAD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x116FAD4", Offset = "0x116FAD4", VA = "0x116FAD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0x116FCD0", Offset = "0x116FCD0", VA = "0x116FCD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000719")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34730", Offset = "0xB34730")]
	private sealed class <ForceLaunchCountDown>d__181 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000448")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DE3")]
			[Address(RVA = "0x116FF24", Offset = "0x116FF24", VA = "0x116FF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0x116FF8C", Offset = "0x116FF8C", VA = "0x116FF8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0x116FD38", Offset = "0x116FD38", VA = "0x116FD38")]
		[DebuggerHidden]
		public <ForceLaunchCountDown>d__181(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0x116FD64", Offset = "0x116FD64", VA = "0x116FD64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0x116FD68", Offset = "0x116FD68", VA = "0x116FD68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0x116FF2C", Offset = "0x116FF2C", VA = "0x116FF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34740", Offset = "0xB34740")]
	private sealed class <PostLaunchDQCountdown>d__182 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEventMediator <>4__this;

		[Token(Token = "0x4002C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700044A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DE9")]
			[Address(RVA = "0x11701D8", Offset = "0x11701D8", VA = "0x11701D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0x1170240", Offset = "0x1170240", VA = "0x1170240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0x116FF94", Offset = "0x116FF94", VA = "0x116FF94")]
		[DebuggerHidden]
		public <PostLaunchDQCountdown>d__182(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0x116FFC0", Offset = "0x116FFC0", VA = "0x116FFC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x116FFC4", Offset = "0x116FFC4", VA = "0x116FFC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0x11701E0", Offset = "0x11701E0", VA = "0x11701E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A374", Offset = "0xB3A374")]
	private static List<ScoreData> <Scores>k__BackingField;

	[Token(Token = "0x4000959")]
	private const string USER_READY = "UserReady";

	[Token(Token = "0x400095A")]
	private const string PLAYER_LOADED = "PlayerLoaded";

	[Token(Token = "0x400095B")]
	private const string USER_FINISHED = "UserFinished";

	[Token(Token = "0x400095C")]
	private const string USER_CRASHED = "UserCrashed";

	[Token(Token = "0x400095D")]
	private const string USER_DQ = "UserDQ";

	[Token(Token = "0x400095E")]
	private const string USER_BOOSTED = "UserBoosted";

	[Token(Token = "0x400095F")]
	private const string START_COUNTDOWN = "StartCountdown";

	[Token(Token = "0x4000960")]
	private const string POST_GAME_SELECTION = "PostGameSelection";

	[Token(Token = "0x4000961")]
	private const string EVERYONE_LOADED = "EveryoneLoaded";

	[Token(Token = "0x4000962")]
	private const string CHECKPOINT_PASSED = "CheckpointPassed";

	[Token(Token = "0x4000963")]
	private const string BOT_FINISHED = "BotFinished";

	[Token(Token = "0x4000964")]
	private const string CONTROL_RELINQUISHED = "ControlRelinquished";

	[Token(Token = "0x4000965")]
	private const string USER_PAUSED = "UserPaused";

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] playerSlots;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] groupPlayerSlots;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject aiRecordingPrefab;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject aiSplinePrefab;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A3D4", Offset = "0xB3A3D4")]
	private static int <ChosenMap>k__BackingField;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<IGameAI> _bots;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Dictionary<int, Player> _players;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Dictionary<int, GameFriend> _friends;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _playersLoaded;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _playersToLoad;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static bool _isReady;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static AircraftControl _player;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static VRCameraFade _playerFade;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static List<UserReadyPair> PlayersReady;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static List<UserPair<bool>> PlayersPaused;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static List<UserPair<PostGameSelection>> PostGameSelections;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private static bool _startedCountdown;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A4A4", Offset = "0xB3A4A4")]
	private static bool <ForcedCountdown>k__BackingField;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private static bool _preLaunched;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	private static bool _launchedPlayer;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private static bool _mainLaunched;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	private static bool _crashed;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A4B4", Offset = "0xB3A4B4")]
	private static bool <Finished>k__BackingField;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A4C4", Offset = "0xB3A4C4")]
	private static bool <Paused>k__BackingField;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _returning;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static int EndGameCountdown;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _endGameCountdown;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static CourseCompletedManager _completeManager;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static GameEventMediator _instance;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static Dictionary<int, List<UserPair<float>>> _playerCheckPointTimes;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, int> _friendCheckpoints;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _rallyMode;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _rallyBotsLaunched;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _groupMode;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _ignoreMissedRings;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _isAdventureMode;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool _useGhosts;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _leavingScene;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool _everyoneLoaded;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _ringsMissed;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _playerReadyAmount;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _playerFinishedAmount;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A504", Offset = "0xB3A504")]
	private static int <PlayersInRace>k__BackingField;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public static int DQCountdown;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private static bool _disconnected;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public static bool FloatingLaunch;

	[Token(Token = "0x40009A4")]
	public const float LaunchOffset = -5501.25f;

	[Token(Token = "0x40009A5")]
	private const string ERROR_MSG = "Disconnected\nLost Connection with the server";

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int testSeed;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private static float _lastReportTime;

	[Token(Token = "0x170000C0")]
	public static List<ScoreData> Scores
	{
		[Token(Token = "0x6000894")]
		[Address(RVA = "0xDD314C", Offset = "0xDD314C", VA = "0xDD314C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB482CC", Offset = "0xB482CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000895")]
		[Address(RVA = "0xDD31B4", Offset = "0xDD31B4", VA = "0xDD31B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB482DC", Offset = "0xB482DC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public static int ChosenMap
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xDD3B80", Offset = "0xDD3B80", VA = "0xDD3B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4838C", Offset = "0xB4838C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xDD3BE8", Offset = "0xDD3BE8", VA = "0xDD3BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4839C", Offset = "0xB4839C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public static bool PlayerLauched
	{
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xDD3C54", Offset = "0xDD3C54", VA = "0xDD3C54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	public static bool ForcedCountdown
	{
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xDD533C", Offset = "0xDD533C", VA = "0xDD533C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4852C", Offset = "0xB4852C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xDD53A4", Offset = "0xDD53A4", VA = "0xDD53A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4853C", Offset = "0xB4853C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public static bool Finished
	{
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xDD5414", Offset = "0xDD5414", VA = "0xDD5414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4854C", Offset = "0xB4854C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xDD547C", Offset = "0xDD547C", VA = "0xDD547C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4855C", Offset = "0xB4855C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public static bool Paused
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xDD54EC", Offset = "0xDD54EC", VA = "0xDD54EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4856C", Offset = "0xB4856C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xDD5554", Offset = "0xDD5554", VA = "0xDD5554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4857C", Offset = "0xB4857C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public static int CheckpointAmount
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xDD5B64", Offset = "0xDD5B64", VA = "0xDD5B64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C7")]
	public static int PlayersInRace
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xDD5BCC", Offset = "0xDD5BCC", VA = "0xDD5BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB485EC", Offset = "0xB485EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xDD5C34", Offset = "0xDD5C34", VA = "0xDD5C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB485FC", Offset = "0xB485FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event Action<ScoreData> OnPlayerFinished
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0xDD2F74", Offset = "0xDD2F74", VA = "0xDD2F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB482AC", Offset = "0xB482AC")]
		add
		{
		}
		[Token(Token = "0x6000893")]
		[Address(RVA = "0xDD3060", Offset = "0xDD3060", VA = "0xDD3060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB482BC", Offset = "0xB482BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event Action OnGameStart
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0xDD3220", Offset = "0xDD3220", VA = "0xDD3220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB482EC", Offset = "0xB482EC")]
		add
		{
		}
		[Token(Token = "0x6000897")]
		[Address(RVA = "0xDD3310", Offset = "0xDD3310", VA = "0xDD3310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB482FC", Offset = "0xB482FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event Action OnLocalUserStart
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0xDD3400", Offset = "0xDD3400", VA = "0xDD3400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4830C", Offset = "0xB4830C")]
		add
		{
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0xDD34F0", Offset = "0xDD34F0", VA = "0xDD34F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4831C", Offset = "0xB4831C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event Action OnBotsStart
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0xDD35E0", Offset = "0xDD35E0", VA = "0xDD35E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4832C", Offset = "0xB4832C")]
		add
		{
		}
		[Token(Token = "0x600089B")]
		[Address(RVA = "0xDD36D0", Offset = "0xDD36D0", VA = "0xDD36D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4833C", Offset = "0xB4833C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event Action<ScoreData> OnLocalUserFinished
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0xDD37C0", Offset = "0xDD37C0", VA = "0xDD37C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4834C", Offset = "0xB4834C")]
		add
		{
		}
		[Token(Token = "0x600089D")]
		[Address(RVA = "0xDD38B0", Offset = "0xDD38B0", VA = "0xDD38B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4835C", Offset = "0xB4835C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event Action<bool> OnLocalUserPaused
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0xDD39A0", Offset = "0xDD39A0", VA = "0xDD39A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4836C", Offset = "0xB4836C")]
		add
		{
		}
		[Token(Token = "0x600089F")]
		[Address(RVA = "0xDD3A90", Offset = "0xDD3A90", VA = "0xDD3A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4837C", Offset = "0xB4837C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event Action<Multiplayer.Player.User, Transform> OnPlayerInstantiated
	{
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xDD3CBC", Offset = "0xDD3CBC", VA = "0xDD3CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB483AC", Offset = "0xB483AC")]
		add
		{
		}
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xDD3DAC", Offset = "0xDD3DAC", VA = "0xDD3DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB483BC", Offset = "0xB483BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event Action<Multiplayer.Player.User, Transform> OnBaseCampSpawn
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xDD3E9C", Offset = "0xDD3E9C", VA = "0xDD3E9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB483CC", Offset = "0xB483CC")]
		add
		{
		}
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xDD3F8C", Offset = "0xDD3F8C", VA = "0xDD3F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB483DC", Offset = "0xB483DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event Action<AircraftControl> OnPlayerSpawned
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xDD407C", Offset = "0xDD407C", VA = "0xDD407C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB483EC", Offset = "0xB483EC")]
		add
		{
		}
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xDD416C", Offset = "0xDD416C", VA = "0xDD416C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB483FC", Offset = "0xB483FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event Action<ReportCountdown> OnStartCountdown
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xDD425C", Offset = "0xDD425C", VA = "0xDD425C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4840C", Offset = "0xB4840C")]
		add
		{
		}
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xDD434C", Offset = "0xDD434C", VA = "0xDD434C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4841C", Offset = "0xB4841C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event Action OnStopCountdown
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xDD443C", Offset = "0xDD443C", VA = "0xDD443C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4842C", Offset = "0xB4842C")]
		add
		{
		}
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xDD452C", Offset = "0xDD452C", VA = "0xDD452C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4843C", Offset = "0xB4843C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event Action OnGameReset
	{
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xDD461C", Offset = "0xDD461C", VA = "0xDD461C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4844C", Offset = "0xB4844C")]
		add
		{
		}
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xDD470C", Offset = "0xDD470C", VA = "0xDD470C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4845C", Offset = "0xB4845C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public static event Action OnLateLaunch
	{
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xDD47FC", Offset = "0xDD47FC", VA = "0xDD47FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4846C", Offset = "0xB4846C")]
		add
		{
		}
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xDD48EC", Offset = "0xDD48EC", VA = "0xDD48EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4847C", Offset = "0xB4847C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public static event Action OnBasecampSwitch
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xDD49DC", Offset = "0xDD49DC", VA = "0xDD49DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4848C", Offset = "0xB4848C")]
		add
		{
		}
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xDD4ACC", Offset = "0xDD4ACC", VA = "0xDD4ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4849C", Offset = "0xB4849C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public static event Action<List<UserReadyPair>> OnPlayerReadyChanged
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xDD4BBC", Offset = "0xDD4BBC", VA = "0xDD4BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB484AC", Offset = "0xB484AC")]
		add
		{
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xDD4CAC", Offset = "0xDD4CAC", VA = "0xDD4CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB484BC", Offset = "0xB484BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public static event Action<List<UserPair<PostGameSelection>>> OnPostGameSelectionsChanged
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xDD4D9C", Offset = "0xDD4D9C", VA = "0xDD4D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB484CC", Offset = "0xB484CC")]
		add
		{
		}
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xDD4E8C", Offset = "0xDD4E8C", VA = "0xDD4E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB484DC", Offset = "0xB484DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public static event Action OnResultsEnding
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xDD4F7C", Offset = "0xDD4F7C", VA = "0xDD4F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB484EC", Offset = "0xB484EC")]
		add
		{
		}
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xDD506C", Offset = "0xDD506C", VA = "0xDD506C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB484FC", Offset = "0xB484FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public static event Action<List<bool>> OnAdventureFinished
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xDD515C", Offset = "0xDD515C", VA = "0xDD515C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4850C", Offset = "0xB4850C")]
		add
		{
		}
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xDD524C", Offset = "0xDD524C", VA = "0xDD524C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4851C", Offset = "0xB4851C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public static event Action OnEndGameCountdownReached
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xDD55C4", Offset = "0xDD55C4", VA = "0xDD55C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4858C", Offset = "0xB4858C")]
		add
		{
		}
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xDD56B4", Offset = "0xDD56B4", VA = "0xDD56B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4859C", Offset = "0xB4859C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public static event Action<int, List<UserPair<float>>> OnCheckpointTimesUpdated
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xDD57A4", Offset = "0xDD57A4", VA = "0xDD57A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB485AC", Offset = "0xB485AC")]
		add
		{
		}
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xDD5894", Offset = "0xDD5894", VA = "0xDD5894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB485BC", Offset = "0xB485BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public static event Action<int, List<UserPair<float>>> OnPlayerPastCheckpoint
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xDD5984", Offset = "0xDD5984", VA = "0xDD5984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB485CC", Offset = "0xB485CC")]
		add
		{
		}
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xDD5A74", Offset = "0xDD5A74", VA = "0xDD5A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB485DC", Offset = "0xB485DC")]
		remove
		{
		}
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xDD5CA0", Offset = "0xDD5CA0", VA = "0xDD5CA0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xDD6D74", Offset = "0xDD6D74", VA = "0xDD6D74")]
	private void OnPlayerDisconnect(Multiplayer.Player.User player)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xDD73B4", Offset = "0xDD73B4", VA = "0xDD73B4")]
	private static void ExitFromDisconnect()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xDD7B18", Offset = "0xDD7B18", VA = "0xDD7B18")]
	public static bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xDD67A4", Offset = "0xDD67A4", VA = "0xDD67A4")]
	private void Setup()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xDD7B80", Offset = "0xDD7B80", VA = "0xDD7B80")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xDD7C50", Offset = "0xDD7C50", VA = "0xDD7C50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4860C", Offset = "0xB4860C")]
	private IEnumerator SceneLoadWaitForAllTimeoutRoutine()
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xDD7CC0", Offset = "0xDD7CC0", VA = "0xDD7CC0")]
	private void SpawnPlayers()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xDD8808", Offset = "0xDD8808", VA = "0xDD8808")]
	private void SpawnPlayersGroup()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xDD831C", Offset = "0xDD831C", VA = "0xDD831C")]
	private Player SpawnBot(Multiplayer.Player.User bot, Transform slot, int index, float difficulty, out IGameAI ai)
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xDD8D94", Offset = "0xDD8D94", VA = "0xDD8D94")]
	private static int GetSeed()
	{
		return default(int);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xDD8280", Offset = "0xDD8280", VA = "0xDD8280")]
	private float GetDifficulty()
	{
		return default(float);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xDD8F18", Offset = "0xDD8F18", VA = "0xDD8F18")]
	private void SpawnGhosts(bool spawnPlayer)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xDD9488", Offset = "0xDD9488", VA = "0xDD9488")]
	private void ClearGhosts()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xDD969C", Offset = "0xDD969C", VA = "0xDD969C")]
	private void PlayerInstantiated(GameObject playerObj, int rId, InstantiationData data)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xDD9B88", Offset = "0xDD9B88", VA = "0xDD9B88")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xDD9DFC", Offset = "0xDD9DFC", VA = "0xDD9DFC")]
	private void FloatMessageReceived(string eventName, int sender, float payload)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xDDA4A0", Offset = "0xDDA4A0", VA = "0xDDA4A0")]
	public void ByteMessageRecieved(string eventName, int sender, byte[] payload)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xDDAD28", Offset = "0xDDAD28", VA = "0xDDAD28")]
	private void CheckForEndCountdown()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xDDAE04", Offset = "0xDDAE04", VA = "0xDDAE04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB48670", Offset = "0xB48670")]
	private IEnumerator EndGameCountdownRoutine()
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xDDAE74", Offset = "0xDDAE74", VA = "0xDDAE74")]
	private void IntMessageRecieved(string eventName, int sender, int payload)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xDDBAAC", Offset = "0xDDBAAC", VA = "0xDDBAAC")]
	private void SpawnAdventureMode()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xDDBBB8", Offset = "0xDDBBB8", VA = "0xDDBBB8")]
	public static List<bool> GetCurrentAdventure()
	{
		return null;
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xDD78A8", Offset = "0xDD78A8", VA = "0xDD78A8")]
	private void UpdatePostGameOptions(PostGameSelection selection, int sender)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xDDB6CC", Offset = "0xDDB6CC", VA = "0xDDB6CC")]
	private void CheckForStartCountdown(int playersReady)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xDDC238", Offset = "0xDDC238", VA = "0xDDC238")]
	public void ReportCountdownProgress(float progress)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xDDBD04", Offset = "0xDDBD04", VA = "0xDDBD04")]
	private void ExecuteEndScreenChoice(PostGameSelection selection = PostGameSelection.Unset)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xDDCA74", Offset = "0xDDCA74", VA = "0xDDCA74")]
	public static void LoadMenu()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xDDCAEC", Offset = "0xDDCAEC", VA = "0xDDCAEC")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xDDCFB8", Offset = "0xDDCFB8", VA = "0xDDCFB8")]
	private void MessageReceived(string eventName, int sender)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xDD771C", Offset = "0xDD771C", VA = "0xDD771C")]
	private void CheckPlayerLoadedCount()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xDD87A8", Offset = "0xDD87A8", VA = "0xDD87A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB486D4", Offset = "0xB486D4")]
	private IEnumerator ForceLaunchCountDown()
	{
		return null;
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xDDD204", Offset = "0xDDD204", VA = "0xDDD204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB48738", Offset = "0xB48738")]
	private IEnumerator PostLaunchDQCountdown()
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xDDD274", Offset = "0xDDD274", VA = "0xDDD274")]
	private void PrejumpDQ()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xDDD534", Offset = "0xDDD534", VA = "0xDDD534")]
	public static void FinishedRace()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xDDD7D0", Offset = "0xDDD7D0", VA = "0xDDD7D0")]
	public static void FinishedAdventureMode(List<bool> obtained)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xDDD85C", Offset = "0xDDD85C", VA = "0xDDD85C")]
	public static void ReadyToStart(bool ready)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xDDDD24", Offset = "0xDDDD24", VA = "0xDDDD24")]
	public static void SendCrashedEvent()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xDDDE74", Offset = "0xDDDE74", VA = "0xDDDE74")]
	public static void SendControlRelinquishedEvent()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xDDDEE4", Offset = "0xDDDEE4", VA = "0xDDDEE4")]
	public static void SkipToResults()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xDDDF58", Offset = "0xDDDF58", VA = "0xDDDF58")]
	public static void SendBoostedEvent(float amount)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xDDC59C", Offset = "0xDDC59C", VA = "0xDDC59C")]
	public static void PreLaunch()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xDDDA74", Offset = "0xDDDA74", VA = "0xDDDA74")]
	public static void Launch()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xDDDFD8", Offset = "0xDDDFD8", VA = "0xDDDFD8")]
	public static void Pause(bool paused)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xDD2140", Offset = "0xDD2140", VA = "0xDD2140")]
	public static void BotFinished(Multiplayer.Player.User user, ScoreBreakdown score, bool crashed, int checkpoints)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xDCFAC4", Offset = "0xDCFAC4", VA = "0xDCFAC4")]
	public static void GhostFinished(Multiplayer.Player.User user, ScoreBreakdown score)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xDDE350", Offset = "0xDDE350", VA = "0xDDE350")]
	public static void SelectedRetry()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xDDE540", Offset = "0xDDE540", VA = "0xDDE540")]
	public static void SelectedContinue()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xDDC8E4", Offset = "0xDDC8E4", VA = "0xDDC8E4")]
	public static void SelectLeave(bool fromResults)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xDDE3B0", Offset = "0xDDE3B0", VA = "0xDDE3B0")]
	public static void ReportPostGameVote(PostGameSelection selection)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xDDA050", Offset = "0xDDA050", VA = "0xDDA050")]
	public static void AddCheckpointTime(int checkpoint, UserPair<float> score, bool inside = false)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xDDE5A0", Offset = "0xDDE5A0", VA = "0xDDE5A0")]
	private void MissedRing()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xDDD3A8", Offset = "0xDDD3A8", VA = "0xDDD3A8")]
	public void DQ(bool fromPrejump = false)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xDCF2B4", Offset = "0xDCF2B4", VA = "0xDCF2B4")]
	public static void AddCheckpointList(List<UserPair<float>> checkPoints)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xDDE5C8", Offset = "0xDDE5C8", VA = "0xDDE5C8")]
	public static void ReportProximity(float proximity)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xDDE6C0", Offset = "0xDDE6C0", VA = "0xDDE6C0")]
	public static void StopPlayer()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xDD1C58", Offset = "0xDD1C58", VA = "0xDD1C58")]
	public static int GetPeopleThroughCheckPoint(int checkpoint)
	{
		return default(int);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xDDE810", Offset = "0xDDE810", VA = "0xDDE810")]
	public static float GetScore()
	{
		return default(float);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xDDE958", Offset = "0xDDE958", VA = "0xDDE958")]
	private void Update()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xDDE960", Offset = "0xDDE960", VA = "0xDDE960")]
	private void EditorTimeScale()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xDDE95C", Offset = "0xDDE95C", VA = "0xDDE95C")]
	private void ReportMultiplayer()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xDDE964", Offset = "0xDDE964", VA = "0xDDE964")]
	private bool InRealtimeOverlap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xDDEBDC", Offset = "0xDDEBDC", VA = "0xDDEBDC")]
	private bool PlayerFinished(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xDDED50", Offset = "0xDDED50", VA = "0xDDED50")]
	public GameEventMediator()
	{
	}
}
[Token(Token = "0x200014F")]
public enum GameEvent
{
	[Token(Token = "0x40009A9")]
	Finished,
	[Token(Token = "0x40009AA")]
	Crashed,
	[Token(Token = "0x40009AB")]
	Boosted
}
[Token(Token = "0x2000150")]
public enum PostGameSelection
{
	[Token(Token = "0x40009AD")]
	Unset,
	[Token(Token = "0x40009AE")]
	Retry,
	[Token(Token = "0x40009AF")]
	Continue
}
[Token(Token = "0x2000151")]
public struct ScoreData
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Multiplayer.Player.User user;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ScoreBreakdown breakdown;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool crashed;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool disqualified;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xC9CEB0", Offset = "0xC9CEB0", VA = "0xC9CEB0")]
	public ScoreData(Multiplayer.Player.User user, ScoreBreakdown breakdown, bool crashed, bool disqualified)
	{
	}
}
[Token(Token = "0x2000152")]
public struct UserReadyPair
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Multiplayer.Player.User user;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ReadyState data;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xF9C5D4", Offset = "0xF9C5D4", VA = "0xF9C5D4")]
	public UserReadyPair(Multiplayer.Player.User user, ReadyState data)
	{
	}
}
[Token(Token = "0x2000153")]
public struct UserPair<T>
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Multiplayer.Player.User user;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T data;

	[Token(Token = "0x600090D")]
	public UserPair(Multiplayer.Player.User user, T data)
	{
	}
}
[Token(Token = "0x2000154")]
public static class UserExtensions
{
	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF9C4DC", Offset = "0xF9C4DC", VA = "0xF9C4DC")]
	public static UserPair<bool> WithData(this UserPair<bool> input, bool data)
	{
		return default(UserPair<bool>);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF9C554", Offset = "0xF9C554", VA = "0xF9C554")]
	public static UserPair<PostGameSelection> WithData(this UserPair<PostGameSelection> input, PostGameSelection data)
	{
		return default(UserPair<PostGameSelection>);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF9C5CC", Offset = "0xF9C5CC", VA = "0xF9C5CC")]
	public static UserReadyPair WithData(this UserReadyPair input, ReadyState data)
	{
		return default(UserReadyPair);
	}
}
[Token(Token = "0x2000155")]
public struct BotTimePair
{
	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int botId;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float time;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool crashed;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int checkpoints;
}
[Token(Token = "0x2000156")]
public class LobbyEventMediator : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200071B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34750", Offset = "0xB34750")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__83_0;

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0xD30650", Offset = "0xD30650", VA = "0xD30650")]
		public <>c()
		{
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0xD30658", Offset = "0xD30658", VA = "0xD30658")]
		internal void <ExitFromDisconnect>b__83_0()
		{
		}
	}

	[Token(Token = "0x200071C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34760", Offset = "0xB34760")]
	private sealed class <>c__DisplayClass90_0
	{
		[Token(Token = "0x4002C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LobbyEventMediator <>4__this;

		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int toSlot;

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0xD2E2E0", Offset = "0xD2E2E0", VA = "0xD2E2E0")]
		public <>c__DisplayClass90_0()
		{
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0xD306B8", Offset = "0xD306B8", VA = "0xD306B8")]
		internal void <MoveSpawnedPlayer>b__0()
		{
		}
	}

	[Token(Token = "0x200071D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34770", Offset = "0xB34770")]
	private sealed class <CountDownGameStart>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeOut;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF4")]
			[Address(RVA = "0xD30B7C", Offset = "0xD30B7C", VA = "0xD30B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DF6")]
			[Address(RVA = "0xD30BE4", Offset = "0xD30BE4", VA = "0xD30BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0xD2EE5C", Offset = "0xD2EE5C", VA = "0xD2EE5C")]
		[DebuggerHidden]
		public <CountDownGameStart>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0xD308D8", Offset = "0xD308D8", VA = "0xD308D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0xD308DC", Offset = "0xD308DC", VA = "0xD308DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0xD30B84", Offset = "0xD30B84", VA = "0xD30B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int Map;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int Mode;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Course;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool NeedsMatchStart;

	[Token(Token = "0x40009C4")]
	private const string MODE_SELECTION = "ModeSelection";

	[Token(Token = "0x40009C5")]
	private const string MAP_SELECTION = "MapSelection";

	[Token(Token = "0x40009C6")]
	private const string COURSE_SELECTION = "CourseSelection";

	[Token(Token = "0x40009C7")]
	private const string PLAYER_READY = "PlayerReady";

	[Token(Token = "0x40009C8")]
	private const string CLOSED_ROOM = "ClosedRoom";

	[Token(Token = "0x40009C9")]
	private const string SKIN_SELECTION = "SkinSelection";

	[Token(Token = "0x40009CA")]
	private const string START_MATCH = "StartMatch";

	[Token(Token = "0x40009CB")]
	private const string PLAYER_LOADED = "PlayerLoaded";

	[Token(Token = "0x40009CC")]
	private const string COUNTDOWN = "Countdown";

	[Token(Token = "0x40009CD")]
	private const string PRO_MODE = "ProMode";

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] slots;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] groupSlots;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Player> _playerReg;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Player[] _playerSlots;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] _ghosts;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ghostPrefab;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Player me;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject aiPrefab;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _playersLoaded;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LobbyEventMediator _instance;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _resetting;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _hostSpawned;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool _beganSpawningSelf;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float _countdownStartTime;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A554", Offset = "0xB3A554")]
	private static int <ContinueCountDown>k__BackingField;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A564", Offset = "0xB3A564")]
	private static List<UserReadyPair> <PlayersReady>k__BackingField;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A5D4", Offset = "0xB3A5D4")]
	private static LobbyStatus <Status>k__BackingField;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int MatchCountDown;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static bool CatchUp;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	private bool GroupMode;

	[Token(Token = "0x40009E9")]
	private const int MAX_NON_PERSON_SPAWN = 4;

	[Token(Token = "0x40009EA")]
	private const int COUNT_DOWN_LENGTH = 60;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _countDown;

	[Token(Token = "0x170000C8")]
	public static int ContinueCountDown
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xD2A108", Offset = "0xD2A108", VA = "0xD2A108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4884C", Offset = "0xB4884C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xD2A170", Offset = "0xD2A170", VA = "0xD2A170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4885C", Offset = "0xB4885C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public static List<UserReadyPair> PlayersReady
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xD2A1DC", Offset = "0xD2A1DC", VA = "0xD2A1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4886C", Offset = "0xB4886C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xD2A244", Offset = "0xD2A244", VA = "0xD2A244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4887C", Offset = "0xB4887C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public static LobbyStatus Status
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xD2ADF0", Offset = "0xD2ADF0", VA = "0xD2ADF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4894C", Offset = "0xB4894C")]
		get
		{
			return default(LobbyStatus);
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xD2AE58", Offset = "0xD2AE58", VA = "0xD2AE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4895C", Offset = "0xB4895C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000032")]
	public static event Action<int> OnModeChanged
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xD29990", Offset = "0xD29990", VA = "0xD29990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB487CC", Offset = "0xB487CC")]
		add
		{
		}
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xD29A7C", Offset = "0xD29A7C", VA = "0xD29A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB487DC", Offset = "0xB487DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public static event Action<int> OnMapChanged
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xD29B68", Offset = "0xD29B68", VA = "0xD29B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB487EC", Offset = "0xB487EC")]
		add
		{
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xD29C58", Offset = "0xD29C58", VA = "0xD29C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB487FC", Offset = "0xB487FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public static event Action<int> OnCourseChanged
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xD29D48", Offset = "0xD29D48", VA = "0xD29D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4880C", Offset = "0xB4880C")]
		add
		{
		}
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xD29E38", Offset = "0xD29E38", VA = "0xD29E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4881C", Offset = "0xB4881C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event Action OnMatchSelected
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xD29F28", Offset = "0xD29F28", VA = "0xD29F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4882C", Offset = "0xB4882C")]
		add
		{
		}
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xD2A018", Offset = "0xD2A018", VA = "0xD2A018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4883C", Offset = "0xB4883C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public static event Action<List<UserReadyPair>> OnPlayerReady
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xD2A2B0", Offset = "0xD2A2B0", VA = "0xD2A2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4888C", Offset = "0xB4888C")]
		add
		{
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xD2A3A0", Offset = "0xD2A3A0", VA = "0xD2A3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4889C", Offset = "0xB4889C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public static event Action OnCountdownReached
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xD2A490", Offset = "0xD2A490", VA = "0xD2A490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB488AC", Offset = "0xB488AC")]
		add
		{
		}
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xD2A580", Offset = "0xD2A580", VA = "0xD2A580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB488BC", Offset = "0xB488BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public static event Action OnInterfaceUsable
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xD2A670", Offset = "0xD2A670", VA = "0xD2A670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB488CC", Offset = "0xB488CC")]
		add
		{
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xD2A760", Offset = "0xD2A760", VA = "0xD2A760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB488DC", Offset = "0xB488DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public static event Action OnHostSwitchToMe
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xD2A850", Offset = "0xD2A850", VA = "0xD2A850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB488EC", Offset = "0xB488EC")]
		add
		{
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xD2A940", Offset = "0xD2A940", VA = "0xD2A940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB488FC", Offset = "0xB488FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public static event Action<LobbyStatus> OnLobbyStatusChanged
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xD2AA30", Offset = "0xD2AA30", VA = "0xD2AA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4890C", Offset = "0xB4890C")]
		add
		{
		}
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xD2AB20", Offset = "0xD2AB20", VA = "0xD2AB20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4891C", Offset = "0xB4891C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public static event Action<string, string> OnErrorOccured
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xD2AC10", Offset = "0xD2AC10", VA = "0xD2AC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4892C", Offset = "0xB4892C")]
		add
		{
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xD2AD00", Offset = "0xD2AD00", VA = "0xD2AD00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4893C", Offset = "0xB4893C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public static event Action<bool> OnProModeChanged
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xD2AEC4", Offset = "0xD2AEC4", VA = "0xD2AEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4896C", Offset = "0xB4896C")]
		add
		{
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0xD2AFB4", Offset = "0xD2AFB4", VA = "0xD2AFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4897C", Offset = "0xB4897C")]
		remove
		{
		}
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xD2B0A4", Offset = "0xD2B0A4", VA = "0xD2B0A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xD2B5E8", Offset = "0xD2B5E8", VA = "0xD2B5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xD2B3D4", Offset = "0xD2B3D4", VA = "0xD2B3D4")]
	public void SubscribeEvents()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xD2BB9C", Offset = "0xD2BB9C", VA = "0xD2BB9C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xD2BDB0", Offset = "0xD2BDB0", VA = "0xD2BDB0")]
	private void OnPlayerDisconnect(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xD2B9DC", Offset = "0xD2B9DC", VA = "0xD2B9DC")]
	private void ExitFromDisconnect()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xD2C75C", Offset = "0xD2C75C", VA = "0xD2C75C")]
	private void OnSetupOffline()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xD2CB04", Offset = "0xD2CB04", VA = "0xD2CB04")]
	private void OnSetupOnline()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xD2C7BC", Offset = "0xD2C7BC", VA = "0xD2C7BC")]
	public static void SetLobbyStatus(LobbyStatus status)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xD2CF94", Offset = "0xD2CF94", VA = "0xD2CF94")]
	private void SyncParty(List<Multiplayer.Player.User> party)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xD2C1EC", Offset = "0xD2C1EC", VA = "0xD2C1EC")]
	private void SyncReadyState(List<Multiplayer.Player.User> party)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xD2DFD0", Offset = "0xD2DFD0", VA = "0xD2DFD0")]
	private void SetPlayerReady(int id, bool state)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xD2D558", Offset = "0xD2D558", VA = "0xD2D558")]
	private void MoveSpawnedPlayer(int fromSlot, int toSlot)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xD2D388", Offset = "0xD2D388", VA = "0xD2D388")]
	private bool PlayerAlreadySpawned(Multiplayer.Player.User partyMember, out int playerSlot)
	{
		return default(bool);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xD2DDD0", Offset = "0xD2DDD0", VA = "0xD2DDD0")]
	private void SpawnGhost(int slot)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xD2DA44", Offset = "0xD2DA44", VA = "0xD2DA44")]
	private void SpawnBot(Multiplayer.Player.User bot, int slot)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xD2D8DC", Offset = "0xD2D8DC", VA = "0xD2D8DC")]
	private void SpawnMe(int slot)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xD2E2E8", Offset = "0xD2E2E8", VA = "0xD2E2E8")]
	private void PlayerInstantiated(GameObject playerObj, int rId, InstantiationData data)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xD2EC84", Offset = "0xD2EC84", VA = "0xD2EC84")]
	private void _OnHostSwitchToMe()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xD2D4A4", Offset = "0xD2D4A4", VA = "0xD2D4A4")]
	private void RemoveUser(Player player)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xD2EB44", Offset = "0xD2EB44", VA = "0xD2EB44")]
	private void CheckForCountdownStart()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xD2EDD4", Offset = "0xD2EDD4", VA = "0xD2EDD4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4898C", Offset = "0xB4898C")]
	private void SkipTimer()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xD2ED64", Offset = "0xD2ED64", VA = "0xD2ED64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB489C4", Offset = "0xB489C4")]
	private IEnumerator CountDownGameStart(int timeOut = 60)
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xD2EE88", Offset = "0xD2EE88", VA = "0xD2EE88")]
	private void IntMessageReceived(string eventName, int sender, int payload)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xD2F224", Offset = "0xD2F224", VA = "0xD2F224")]
	private bool PlayerExists(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xD2F298", Offset = "0xD2F298", VA = "0xD2F298")]
	private void MessageReceived(string eventName, int sender)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xD2F710", Offset = "0xD2F710", VA = "0xD2F710")]
	private void ByteMessageRecieved(string eventName, int sender, byte[] payload)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xD2ECE4", Offset = "0xD2ECE4", VA = "0xD2ECE4")]
	public static void SetReady(bool isReady)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xD2F934", Offset = "0xD2F934", VA = "0xD2F934")]
	public static void SelectedMap(int map)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xD2F9AC", Offset = "0xD2F9AC", VA = "0xD2F9AC")]
	public static void SelectedMode(int mode)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xD2FA50", Offset = "0xD2FA50", VA = "0xD2FA50")]
	public static void SelectedCourse(int course)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xD2FAC8", Offset = "0xD2FAC8", VA = "0xD2FAC8")]
	public static void StartMatch()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xD2FB40", Offset = "0xD2FB40", VA = "0xD2FB40")]
	public static void SelectedSkin(SkinPair skin)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xD2FD60", Offset = "0xD2FD60", VA = "0xD2FD60")]
	public static void LookForMatch()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xD30018", Offset = "0xD30018", VA = "0xD30018")]
	public static void CancelMatchSearch()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xD301F4", Offset = "0xD301F4", VA = "0xD301F4")]
	public static void CloseRoom()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xD2C6B0", Offset = "0xD2C6B0", VA = "0xD2C6B0")]
	public static void LeaveParty()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xD30344", Offset = "0xD30344", VA = "0xD30344")]
	public static void ReportError(string error)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xD30408", Offset = "0xD30408", VA = "0xD30408")]
	public static void ToggleProMode()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xD304BC", Offset = "0xD304BC", VA = "0xD304BC")]
	public LobbyEventMediator()
	{
	}
}
[Token(Token = "0x2000157")]
public enum LobbyStatus
{
	[Token(Token = "0x40009ED")]
	Initialising,
	[Token(Token = "0x40009EE")]
	Ready,
	[Token(Token = "0x40009EF")]
	SearchingForGame,
	[Token(Token = "0x40009F0")]
	WaitingForGame,
	[Token(Token = "0x40009F1")]
	JoingGame,
	[Token(Token = "0x40009F2")]
	WaitingForMorePlayers,
	[Token(Token = "0x40009F3")]
	InvitingPlayers
}
[Token(Token = "0x2000158")]
public class PartyInitialiser : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000956")]
	[Address(RVA = "0xF28614", Offset = "0xF28614", VA = "0xF28614")]
	private void Start()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xF28674", Offset = "0xF28674", VA = "0xF28674")]
	public PartyInitialiser()
	{
	}
}
[Token(Token = "0x2000159")]
public static class PartyMediator
{
	[Token(Token = "0x200071E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34780", Offset = "0xB34780")]
	private sealed class <>c__DisplayClass82_0
	{
		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool offline;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool setRegion;

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0xCF4548", Offset = "0xCF4548", VA = "0xCF4548")]
		public <>c__DisplayClass82_0()
		{
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0xCF900C", Offset = "0xCF900C", VA = "0xCF900C")]
		internal void <Setup>b__0(Result result, Multiplayer.Player.User user, bool isHost)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200071F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34790", Offset = "0xB34790")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__83_0;

		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Multiplayer.Player.User> <>9__85_0;

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0xCF8F74", Offset = "0xCF8F74", VA = "0xCF8F74")]
		public <>c()
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0xCF8F7C", Offset = "0xCF8F7C", VA = "0xCF8F7C")]
		internal void <OnSetupReturned>b__83_0()
		{
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0xCF8FE0", Offset = "0xCF8FE0", VA = "0xCF8FE0")]
		internal int <SyncUsers>b__85_0(Multiplayer.Player.User u1, Multiplayer.Player.User u2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A5F4", Offset = "0xB3A5F4")]
	private static Multiplayer.Player.User <Me>k__BackingField;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A604", Offset = "0xB3A604")]
	private static List<Multiplayer.Player.User> <Users>k__BackingField;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IGroupCommunicate _coms;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A6D4", Offset = "0xB3A6D4")]
	private static bool <Initialised>k__BackingField;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A6E4", Offset = "0xB3A6E4")]
	private static PartyState <State>k__BackingField;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool _useMatchOrdering;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static readonly List<Color> _playerColours;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly List<Color> _playerColoursGroup;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static Dictionary<int, int> _playerConsecReadyFails;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static int playersInCurrentScene;

	[Token(Token = "0x4000A0A")]
	private const string PLAYER_LOADED = "PlayerLoaded";

	[Token(Token = "0x4000A0B")]
	private const string PLAYER_RECALIBRATED = "PlayerRecalibrated";

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private static int _MaxPlayers;

	[Token(Token = "0x4000A0D")]
	public const int MobilePlayerAmount = 4;

	[Token(Token = "0x4000A0E")]
	public const int PCPlayerAmount = 8;

	[Token(Token = "0x170000CB")]
	public static int MyId
	{
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xCF04F8", Offset = "0xCF04F8", VA = "0xCF04F8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CC")]
	public static Multiplayer.Player.User Me
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xCF05A8", Offset = "0xCF05A8", VA = "0xCF05A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A28", Offset = "0xB48A28")]
		get
		{
			return null;
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xCF0610", Offset = "0xCF0610", VA = "0xCF0610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A38", Offset = "0xB48A38")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public static List<Multiplayer.Player.User> Users
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xCF067C", Offset = "0xCF067C", VA = "0xCF067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A48", Offset = "0xB48A48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xCF06E4", Offset = "0xCF06E4", VA = "0xCF06E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A58", Offset = "0xB48A58")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public static bool Initialised
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0xCF1DD0", Offset = "0xCF1DD0", VA = "0xCF1DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48BE8", Offset = "0xB48BE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000976")]
		[Address(RVA = "0xCF1E38", Offset = "0xCF1E38", VA = "0xCF1E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48BF8", Offset = "0xB48BF8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public static PartyState State
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0xCF1EA8", Offset = "0xCF1EA8", VA = "0xCF1EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48C08", Offset = "0xB48C08")]
		get
		{
			return default(PartyState);
		}
		[Token(Token = "0x6000978")]
		[Address(RVA = "0xCF1F10", Offset = "0xCF1F10", VA = "0xCF1F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48C18", Offset = "0xB48C18")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public static int MaxPlayers
	{
		[Token(Token = "0x6000979")]
		[Address(RVA = "0xCF1F7C", Offset = "0xCF1F7C", VA = "0xCF1F7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D1")]
	public static bool UseGroupMode
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0xCF2338", Offset = "0xCF2338", VA = "0xCF2338")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003D")]
	public static event Action<List<Multiplayer.Player.User>> OnPartyChanged
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0xCF0750", Offset = "0xCF0750", VA = "0xCF0750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A68", Offset = "0xB48A68")]
		add
		{
		}
		[Token(Token = "0x600095E")]
		[Address(RVA = "0xCF0840", Offset = "0xCF0840", VA = "0xCF0840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A78", Offset = "0xB48A78")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public static event Action<Multiplayer.Player.User> OnPlayerDisconnect
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xCF0930", Offset = "0xCF0930", VA = "0xCF0930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A88", Offset = "0xB48A88")]
		add
		{
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xCF0A20", Offset = "0xCF0A20", VA = "0xCF0A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48A98", Offset = "0xB48A98")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public static event Action OnHostSwitchToMe
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0xCF0B10", Offset = "0xCF0B10", VA = "0xCF0B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48AA8", Offset = "0xB48AA8")]
		add
		{
		}
		[Token(Token = "0x6000962")]
		[Address(RVA = "0xCF0C00", Offset = "0xCF0C00", VA = "0xCF0C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48AB8", Offset = "0xB48AB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000040")]
	public static event Action OnInitialised
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0xCF0CF0", Offset = "0xCF0CF0", VA = "0xCF0CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48AC8", Offset = "0xB48AC8")]
		add
		{
		}
		[Token(Token = "0x6000964")]
		[Address(RVA = "0xCF0DE0", Offset = "0xCF0DE0", VA = "0xCF0DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48AD8", Offset = "0xB48AD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000041")]
	public static event Action OnSetup
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0xCF0ED0", Offset = "0xCF0ED0", VA = "0xCF0ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48AE8", Offset = "0xB48AE8")]
		add
		{
		}
		[Token(Token = "0x6000966")]
		[Address(RVA = "0xCF0FC0", Offset = "0xCF0FC0", VA = "0xCF0FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48AF8", Offset = "0xB48AF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public static event Action<GameObject, int, InstantiationData> OnPlayerInstantiated
	{
		[Token(Token = "0x6000967")]
		[Address(RVA = "0xCF10B0", Offset = "0xCF10B0", VA = "0xCF10B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B08", Offset = "0xB48B08")]
		add
		{
		}
		[Token(Token = "0x6000968")]
		[Address(RVA = "0xCF11A0", Offset = "0xCF11A0", VA = "0xCF11A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B18", Offset = "0xB48B18")]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public static event Action<string, int> OnMessageReceived
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0xCF1290", Offset = "0xCF1290", VA = "0xCF1290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B28", Offset = "0xB48B28")]
		add
		{
		}
		[Token(Token = "0x600096A")]
		[Address(RVA = "0xCF1380", Offset = "0xCF1380", VA = "0xCF1380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B38", Offset = "0xB48B38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000044")]
	public static event Action<string, int, byte[]> OnByteMessageReceived
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0xCF1470", Offset = "0xCF1470", VA = "0xCF1470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B48", Offset = "0xB48B48")]
		add
		{
		}
		[Token(Token = "0x600096C")]
		[Address(RVA = "0xCF1560", Offset = "0xCF1560", VA = "0xCF1560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B58", Offset = "0xB48B58")]
		remove
		{
		}
	}

	[Token(Token = "0x14000045")]
	public static event Action<int, float, float> OnPlayerHeightRecalibrated
	{
		[Token(Token = "0x600096D")]
		[Address(RVA = "0xCF1650", Offset = "0xCF1650", VA = "0xCF1650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B68", Offset = "0xB48B68")]
		add
		{
		}
		[Token(Token = "0x600096E")]
		[Address(RVA = "0xCF1740", Offset = "0xCF1740", VA = "0xCF1740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B78", Offset = "0xB48B78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000046")]
	public static event Action<string, int, int> OnIntMessageReceived
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0xCF1830", Offset = "0xCF1830", VA = "0xCF1830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B88", Offset = "0xB48B88")]
		add
		{
		}
		[Token(Token = "0x6000970")]
		[Address(RVA = "0xCF1920", Offset = "0xCF1920", VA = "0xCF1920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48B98", Offset = "0xB48B98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000047")]
	public static event Action<string, int, float> OnFloatMessageReceived
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0xCF1A10", Offset = "0xCF1A10", VA = "0xCF1A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48BA8", Offset = "0xB48BA8")]
		add
		{
		}
		[Token(Token = "0x6000972")]
		[Address(RVA = "0xCF1B00", Offset = "0xCF1B00", VA = "0xCF1B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48BB8", Offset = "0xB48BB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000048")]
	public static event Action<string, int, string> OnStringMessageReceived
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0xCF1BF0", Offset = "0xCF1BF0", VA = "0xCF1BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48BC8", Offset = "0xB48BC8")]
		add
		{
		}
		[Token(Token = "0x6000974")]
		[Address(RVA = "0xCF1CE0", Offset = "0xCF1CE0", VA = "0xCF1CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48BD8", Offset = "0xB48BD8")]
		remove
		{
		}
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xCF23A0", Offset = "0xCF23A0", VA = "0xCF23A0")]
	public static void InitEditor()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xCF270C", Offset = "0xCF270C", VA = "0xCF270C")]
	public static void Init()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xCF27B4", Offset = "0xCF27B4", VA = "0xCF27B4")]
	public static void InitMock(bool setupParty)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xCF294C", Offset = "0xCF294C", VA = "0xCF294C")]
	public static void Init(Multiplayer.Player.User me)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xCF24E4", Offset = "0xCF24E4", VA = "0xCF24E4")]
	private static void Init(Multiplayer.Player.User me, IGroupCommunicate communication)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xCF2F9C", Offset = "0xCF2F9C", VA = "0xCF2F9C")]
	public static void ReInitialize()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xCF29D0", Offset = "0xCF29D0", VA = "0xCF29D0")]
	private static void SubscribeEvents()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xCF30A0", Offset = "0xCF30A0", VA = "0xCF30A0")]
	private static void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xCF366C", Offset = "0xCF366C", VA = "0xCF366C")]
	private static void SwitchWrappers(IGroupCommunicate coms)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xCF374C", Offset = "0xCF374C", VA = "0xCF374C")]
	public static void SetupOnline(string roomId, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xCF3E3C", Offset = "0xCF3E3C", VA = "0xCF3E3C")]
	public static void SetupCrossplay([Optional] Action callback)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xCF3F80", Offset = "0xCF3F80", VA = "0xCF3F80")]
	private static void SetupCrossplayCurrentRoom(Action callback)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xCF28AC", Offset = "0xCF28AC", VA = "0xCF28AC")]
	public static void SetupOffline([Optional] Action callback)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xCF3AD8", Offset = "0xCF3AD8", VA = "0xCF3AD8")]
	private static void Setup(string roomId, bool offline, bool setRegion, Action callback, CloudRegion region)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xCF41E8", Offset = "0xCF41E8", VA = "0xCF41E8")]
	private static void OnSetupReturned(Result result, bool offline, bool setRegion, Multiplayer.Player.User user, Action callback)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xCF4810", Offset = "0xCF4810", VA = "0xCF4810")]
	private static void SetupBots(bool offline)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xCF493C", Offset = "0xCF493C", VA = "0xCF493C")]
	private static void SyncUsers(int myId)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xCF556C", Offset = "0xCF556C", VA = "0xCF556C")]
	private static void LogUsers(string prefix, List<Multiplayer.Player.User> users)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xCF5688", Offset = "0xCF5688", VA = "0xCF5688")]
	private static int GetLowestFreeSpot(bool[] array)
	{
		return default(int);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xCF56E4", Offset = "0xCF56E4", VA = "0xCF56E4")]
	private static int GetOrder(Multiplayer.Player.User user, int photonOrder)
	{
		return default(int);
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xCF4550", Offset = "0xCF4550", VA = "0xCF4550")]
	private static void SetRegion()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xCF57E0", Offset = "0xCF57E0", VA = "0xCF57E0")]
	public static Color GetColourForOrder(int order)
	{
		return default(Color);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xCF5940", Offset = "0xCF5940", VA = "0xCF5940")]
	public static Multiplayer.Player.User GetUser(int id)
	{
		return null;
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xCF5BFC", Offset = "0xCF5BFC", VA = "0xCF5BFC")]
	public static bool IsHost()
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xCF5D7C", Offset = "0xCF5D7C", VA = "0xCF5D7C")]
	public static int PlayersInParty()
	{
		return default(int);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xCF2118", Offset = "0xCF2118", VA = "0xCF2118")]
	public static int MaxPartySize()
	{
		return default(int);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xCF5EE4", Offset = "0xCF5EE4", VA = "0xCF5EE4")]
	public static bool IsPartySizeReduced()
	{
		return default(bool);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xCF5F58", Offset = "0xCF5F58", VA = "0xCF5F58")]
	public static bool CheckConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xCF6148", Offset = "0xCF6148", VA = "0xCF6148")]
	public static void ReportReadyStatuses(List<UserReadyPair> readyStatuses)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xCF67F0", Offset = "0xCF67F0", VA = "0xCF67F0")]
	public static void LeaveParty()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xCF6CEC", Offset = "0xCF6CEC", VA = "0xCF6CEC")]
	public static void CloseRoom()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xCF6A60", Offset = "0xCF6A60", VA = "0xCF6A60")]
	private static bool ComsNotReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xCF6E24", Offset = "0xCF6E24", VA = "0xCF6E24")]
	public static void SendMessage(string message, MessageTarget target = MessageTarget.Others)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xCF6F50", Offset = "0xCF6F50", VA = "0xCF6F50")]
	public static void SendMessage(string message, int payload, MessageTarget target = MessageTarget.Others)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xCF7090", Offset = "0xCF7090", VA = "0xCF7090")]
	public static void SendMessage(string message, float payload, MessageTarget target = MessageTarget.Others)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xCF71D0", Offset = "0xCF71D0", VA = "0xCF71D0")]
	public static void SendMessage(string message, string payload, MessageTarget target = MessageTarget.Others)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xCF7310", Offset = "0xCF7310", VA = "0xCF7310")]
	public static void SendMessage(string message, byte[] payload, MessageTarget target = MessageTarget.Others)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xCF7450", Offset = "0xCF7450", VA = "0xCF7450")]
	public static void InstantiateLobby(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xCF770C", Offset = "0xCF770C", VA = "0xCF770C")]
	public static void InstantiateGame(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xCF7848", Offset = "0xCF7848", VA = "0xCF7848")]
	public static void InstantiateBaseCamp(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xCF758C", Offset = "0xCF758C", VA = "0xCF758C")]
	private static byte[] GetInstantiationData()
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xCF7984", Offset = "0xCF7984", VA = "0xCF7984")]
	public static void SendPlayerLoadedEvent()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xCF79F0", Offset = "0xCF79F0", VA = "0xCF79F0")]
	private static void _OnPlayerDisconnect(Multiplayer.Player.User player, string cause)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xCF7D74", Offset = "0xCF7D74", VA = "0xCF7D74")]
	private static void _OnPlayerJoined(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xCF7F28", Offset = "0xCF7F28", VA = "0xCF7F28")]
	private static void _OnPlayerInstantiated(GameObject gameObject, int id, byte[] payload)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xCF809C", Offset = "0xCF809C", VA = "0xCF809C")]
	private static void _OnMessageReceived(string eventName, int sender)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xCF81B4", Offset = "0xCF81B4", VA = "0xCF81B4")]
	private static void _OnByteMessageReceived(string eventName, int sender, byte[] payload)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xCF8658", Offset = "0xCF8658", VA = "0xCF8658")]
	private static void _OnStringMessagedReceived(string eventName, int sender, string payload)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xCF872C", Offset = "0xCF872C", VA = "0xCF872C")]
	private static void _OnIntMessageReceived(string eventName, int sender, int payload)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xCF8800", Offset = "0xCF8800", VA = "0xCF8800")]
	private static void _OnFloatMessageReceived(string eventName, int sender, float payload)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xCF8388", Offset = "0xCF8388", VA = "0xCF8388")]
	private static void UpdatePlayerHeight(int player, float height, float armSpan)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xCF88E0", Offset = "0xCF88E0", VA = "0xCF88E0")]
	public static void UpdatePlayerHeight(float height, float armSpan)
	{
	}
}
[Token(Token = "0x200015A")]
public enum PartyState
{
	[Token(Token = "0x4000A10")]
	Unset,
	[Token(Token = "0x4000A11")]
	Offline,
	[Token(Token = "0x4000A12")]
	Online
}
[Token(Token = "0x200015B")]
public class ScoreKeeper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	private const float FAILED_CHECKPOINT_TIME_DEDUCTION = 5f;

	[Token(Token = "0x4000A14")]
	private const float FAILED_CHECKPOINT_SCORE_DEDUCTION = 0f;

	[Token(Token = "0x4000A15")]
	private const float PROXIMITY_SCORE_MULTIPLIER = 65f;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _passedCheckpoints;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _score;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _lastTimeSample;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _timed;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _recording;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool _activeAdventure;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool[] _adventureItems;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Multiplayer.Player.User _user;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xC9D118", Offset = "0xC9D118", VA = "0xC9D118")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xC9D3B4", Offset = "0xC9D3B4", VA = "0xC9D3B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xC9D5A8", Offset = "0xC9D5A8", VA = "0xC9D5A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xC9D5F0", Offset = "0xC9D5F0", VA = "0xC9D5F0")]
	public void ReportProximity(float proximity)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xC9D618", Offset = "0xC9D618", VA = "0xC9D618")]
	public void AddToScore(ScoreBonus bonus)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xC9D638", Offset = "0xC9D638", VA = "0xC9D638")]
	private void Reset()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xC9D6A0", Offset = "0xC9D6A0", VA = "0xC9D6A0")]
	public void Init(Multiplayer.Player.User me)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xC9D6A8", Offset = "0xC9D6A8", VA = "0xC9D6A8")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xC9D6B4", Offset = "0xC9D6B4", VA = "0xC9D6B4")]
	public void PauseRecording(bool paused)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xC9D6C4", Offset = "0xC9D6C4", VA = "0xC9D6C4")]
	public ScoreBreakdown FinishedRecording()
	{
		return default(ScoreBreakdown);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xC9D83C", Offset = "0xC9D83C", VA = "0xC9D83C")]
	public float SampleScore()
	{
		return default(float);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xC9D844", Offset = "0xC9D844", VA = "0xC9D844")]
	private void OnCheckpointPassed(int playerid, int checkpoint, bool inside, int pointsToAdd, bool finalRing, int ringType)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xC9D9BC", Offset = "0xC9D9BC", VA = "0xC9D9BC")]
	private void TriggerSoundEffect(int pointsToAdd, int ringType)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xC9DAE0", Offset = "0xC9DAE0", VA = "0xC9DAE0")]
	private void AdventureItemCollected(int index, AdventureItemType type)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xC9DB20", Offset = "0xC9DB20", VA = "0xC9DB20")]
	private void AdventureFinishLinePassed()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xC9DB80", Offset = "0xC9DB80", VA = "0xC9DB80")]
	private void AdventurePlayerFinished(ScoreData data)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xC9DC44", Offset = "0xC9DC44", VA = "0xC9DC44")]
	public List<bool> GetAdventureItems()
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xC9DCB4", Offset = "0xC9DCB4", VA = "0xC9DCB4")]
	public ScoreKeeper()
	{
	}
}
[Token(Token = "0x200015C")]
public enum ScoreBonus
{
	[Token(Token = "0x4000A1F")]
	RingLarge = 200,
	[Token(Token = "0x4000A20")]
	RingMedium = 500,
	[Token(Token = "0x4000A21")]
	RingTiny = 1000
}
[Token(Token = "0x200015D")]
public struct ScoreBreakdown
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float rawScore;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int clearedCheckpoints;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float totalPenilisation;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xC9CEA0", Offset = "0xC9CEA0", VA = "0xC9CEA0")]
	public float GetTotalScore()
	{
		return default(float);
	}
}
[Token(Token = "0x200015E")]
public class ImageDownloader : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xCE52C0", Offset = "0xCE52C0", VA = "0xCE52C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xCE52C4", Offset = "0xCE52C4", VA = "0xCE52C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xCE52C8", Offset = "0xCE52C8", VA = "0xCE52C8")]
	public ImageDownloader()
	{
	}
}
[Token(Token = "0x200015F")]
public class MultiplayerProbeHack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xBBD71C", Offset = "0xBBD71C", VA = "0xBBD71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xBBD874", Offset = "0xBBD874", VA = "0xBBD874")]
	public MultiplayerProbeHack()
	{
	}
}
[Token(Token = "0x2000160")]
public static class MultiplayerVersion
{
	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xBBD87C", Offset = "0xBBD87C", VA = "0xBBD87C")]
	public static string GetPoolName()
	{
		return null;
	}
}
[Token(Token = "0x2000161")]
public static class PS4Utils
{
	[Token(Token = "0x4000A25")]
	public const int PS4_ERROR_CODE = 102030405;

	[Token(Token = "0x60009C9")]
	public static bool IsError<T>(string action, Sony.NP.ResponseBase response, out Result<T> result)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xF1ED3C", Offset = "0xF1ED3C", VA = "0xF1ED3C")]
	public static bool IsError(string action, Sony.NP.ResponseBase response, out Result result)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xF25330", Offset = "0xF25330", VA = "0xF25330")]
	private static string WrapError(string action, string error)
	{
		return null;
	}
}
[Token(Token = "0x2000162")]
public interface IGroupCommunicate
{
	[Token(Token = "0x170000D2")]
	bool IsInitialised
	{
		[Token(Token = "0x60009CD")]
		get;
	}

	[Token(Token = "0x170000D3")]
	bool IsMaster
	{
		[Token(Token = "0x60009CE")]
		get;
	}

	[Token(Token = "0x14000049")]
	event Action<string, int> OnMessageReceived;

	[Token(Token = "0x1400004A")]
	event Action<string, int, int> OnIntMessageReceived;

	[Token(Token = "0x1400004B")]
	event Action<string, int, float> OnFloatMessageReceived;

	[Token(Token = "0x1400004C")]
	event Action<string, int, string> OnStringMessageReceived;

	[Token(Token = "0x1400004D")]
	event Action<string, int, byte[]> OnByteMessageReceived;

	[Token(Token = "0x1400004E")]
	event Action<Multiplayer.Player.User, string> OnPlayerDisconnect;

	[Token(Token = "0x1400004F")]
	event Action<Multiplayer.Player.User> OnPlayerJoined;

	[Token(Token = "0x14000050")]
	event Action<GameObject, int, byte[]> OnPlayerInstantiated;

	[Token(Token = "0x60009CC")]
	void Init(string roomId, Multiplayer.Player.User me, bool offlineMode, Action<Result, Multiplayer.Player.User, bool> callback, CloudRegion region = CloudRegion.NONE);

	[Token(Token = "0x60009CF")]
	List<Multiplayer.Player.User> GetPlayerList();

	[Token(Token = "0x60009D0")]
	CloudRegion GetCurrentRegion();

	[Token(Token = "0x60009D1")]
	void InstantiateLobby(Vector3 pos, Quaternion rot, byte[] data);

	[Token(Token = "0x60009D2")]
	void InstantiateGame(Vector3 pos, Quaternion rot, byte[] data);

	[Token(Token = "0x60009D3")]
	void InstantiateBaseCamp(Vector3 pos, Quaternion rot, byte[] data);

	[Token(Token = "0x60009D4")]
	void SendMessage(string message, int myId, MessageTarget target);

	[Token(Token = "0x60009D5")]
	void SendMessage(string message, int myId, int payload, MessageTarget target);

	[Token(Token = "0x60009D6")]
	void SendMessage(string message, int myId, float payload, MessageTarget target);

	[Token(Token = "0x60009D7")]
	void SendMessage(string message, int myId, string payload, MessageTarget target);

	[Token(Token = "0x60009D8")]
	void SendMessage(string message, int myId, byte[] payload, MessageTarget target);

	[Token(Token = "0x60009D9")]
	void SetPlayerData(string key, int value);

	[Token(Token = "0x60009DA")]
	void LeaveParty();

	[Token(Token = "0x60009DB")]
	void KickUser(Multiplayer.Player.User user);

	[Token(Token = "0x60009DC")]
	bool CheckConnection();

	[Token(Token = "0x60009DD")]
	void CloseRoom();
}
[Token(Token = "0x2000163")]
internal class MockCommunicate : IGroupCommunicate
{
	[Token(Token = "0x2000720")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB347A0", Offset = "0xB347A0")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MockCommunicate <>4__this;

		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int myId;

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0xBB76B8", Offset = "0xBB76B8", VA = "0xBB76B8")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0xBB76C0", Offset = "0xBB76C0", VA = "0xBB76C0")]
		internal void <SendMessage>b__0()
		{
		}
	}

	[Token(Token = "0x2000721")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB347B0", Offset = "0xB347B0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MockCommunicate <>4__this;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x4002C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int myId;

		[Token(Token = "0x4002C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int payload;

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0xBB7728", Offset = "0xBB7728", VA = "0xBB7728")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0xBB7730", Offset = "0xBB7730", VA = "0xBB7730")]
		internal void <SendMessage>b__0()
		{
		}
	}

	[Token(Token = "0x2000722")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB347C0", Offset = "0xB347C0")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MockCommunicate <>4__this;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x4002C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int myId;

		[Token(Token = "0x4002C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float payload;

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0xBB7798", Offset = "0xBB7798", VA = "0xBB7798")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0xBB77A0", Offset = "0xBB77A0", VA = "0xBB77A0")]
		internal void <SendMessage>b__0()
		{
		}
	}

	[Token(Token = "0x2000723")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB347D0", Offset = "0xB347D0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4002C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MockCommunicate <>4__this;

		[Token(Token = "0x4002C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x4002C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int myId;

		[Token(Token = "0x4002C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string payload;

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0xBB780C", Offset = "0xBB780C", VA = "0xBB780C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0xBB7814", Offset = "0xBB7814", VA = "0xBB7814")]
		internal void <SendMessage>b__0()
		{
		}
	}

	[Token(Token = "0x2000724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB347E0", Offset = "0xB347E0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MockCommunicate <>4__this;

		[Token(Token = "0x4002C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x4002C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int myId;

		[Token(Token = "0x4002C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] payload;

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0xBB7880", Offset = "0xBB7880", VA = "0xBB7880")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0xBB7888", Offset = "0xBB7888", VA = "0xBB7888")]
		internal void <SendMessage>b__0()
		{
		}
	}

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Multiplayer.Player.User _me;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A6F4", Offset = "0xB3A6F4")]
	private bool <IsInitialised>k__BackingField;

	[Token(Token = "0x170000D4")]
	public bool IsInitialised
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xD40240", Offset = "0xD40240", VA = "0xD40240", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D28", Offset = "0xB48D28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xD40248", Offset = "0xD40248", VA = "0xD40248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D38", Offset = "0xB48D38")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public bool IsMaster
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xD40254", Offset = "0xD40254", VA = "0xD40254", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000051")]
	public event Action<string, int> OnMessageReceived
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xD40F50", Offset = "0xD40F50", VA = "0xD40F50", Slot = "22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D48", Offset = "0xB48D48")]
		add
		{
		}
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xD40FF4", Offset = "0xD40FF4", VA = "0xD40FF4", Slot = "23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D58", Offset = "0xB48D58")]
		remove
		{
		}
	}

	[Token(Token = "0x14000052")]
	public event Action<string, int, int> OnIntMessageReceived
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xD41098", Offset = "0xD41098", VA = "0xD41098", Slot = "24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D68", Offset = "0xB48D68")]
		add
		{
		}
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xD4113C", Offset = "0xD4113C", VA = "0xD4113C", Slot = "25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D78", Offset = "0xB48D78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000053")]
	public event Action<string, int, float> OnFloatMessageReceived
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xD411E0", Offset = "0xD411E0", VA = "0xD411E0", Slot = "26")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D88", Offset = "0xB48D88")]
		add
		{
		}
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xD41284", Offset = "0xD41284", VA = "0xD41284", Slot = "27")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48D98", Offset = "0xB48D98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000054")]
	public event Action<string, int, string> OnStringMessageReceived
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xD41328", Offset = "0xD41328", VA = "0xD41328", Slot = "28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48DA8", Offset = "0xB48DA8")]
		add
		{
		}
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xD413CC", Offset = "0xD413CC", VA = "0xD413CC", Slot = "29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48DB8", Offset = "0xB48DB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000055")]
	public event Action<string, int, byte[]> OnByteMessageReceived
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xD41470", Offset = "0xD41470", VA = "0xD41470", Slot = "30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48DC8", Offset = "0xB48DC8")]
		add
		{
		}
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xD41514", Offset = "0xD41514", VA = "0xD41514", Slot = "31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48DD8", Offset = "0xB48DD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000056")]
	public event Action<Multiplayer.Player.User, string> OnPlayerDisconnect
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xD415B8", Offset = "0xD415B8", VA = "0xD415B8", Slot = "32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48DE8", Offset = "0xB48DE8")]
		add
		{
		}
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xD4165C", Offset = "0xD4165C", VA = "0xD4165C", Slot = "33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48DF8", Offset = "0xB48DF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000057")]
	public event Action<Multiplayer.Player.User> OnPlayerJoined
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xD41700", Offset = "0xD41700", VA = "0xD41700", Slot = "34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E08", Offset = "0xB48E08")]
		add
		{
		}
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xD417A4", Offset = "0xD417A4", VA = "0xD417A4", Slot = "35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E18", Offset = "0xB48E18")]
		remove
		{
		}
	}

	[Token(Token = "0x14000058")]
	public event Action<GameObject, int, byte[]> OnPlayerInstantiated
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xD41848", Offset = "0xD41848", VA = "0xD41848", Slot = "36")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E28", Offset = "0xB48E28")]
		add
		{
		}
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xD418EC", Offset = "0xD418EC", VA = "0xD418EC", Slot = "37")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E38", Offset = "0xB48E38")]
		remove
		{
		}
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xD4015C", Offset = "0xD4015C", VA = "0xD4015C", Slot = "4")]
	public void Init(string roomId, Multiplayer.Player.User me, bool offlineMode, Action<Result, Multiplayer.Player.User, bool> callback, CloudRegion region)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xD4025C", Offset = "0xD4025C", VA = "0xD4025C", Slot = "7")]
	public List<Multiplayer.Player.User> GetPlayerList()
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xD402E4", Offset = "0xD402E4", VA = "0xD402E4", Slot = "8")]
	public CloudRegion GetCurrentRegion()
	{
		return default(CloudRegion);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xD402EC", Offset = "0xD402EC", VA = "0xD402EC")]
	public void Instantiate(Vector3 pos, Quaternion rot, bool isLobbyPlayer, byte[] data)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xD4050C", Offset = "0xD4050C", VA = "0xD4050C", Slot = "9")]
	public void InstantiateLobby(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xD40768", Offset = "0xD40768", VA = "0xD40768", Slot = "10")]
	public void InstantiateGame(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xD40888", Offset = "0xD40888", VA = "0xD40888", Slot = "11")]
	public void InstantiateBaseCamp(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xD405C4", Offset = "0xD405C4", VA = "0xD405C4")]
	private void Instantiate(Vector3 pos, Quaternion rot, byte[] data, string prefabName)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xD40940", Offset = "0xD40940", VA = "0xD40940", Slot = "12")]
	public void SendMessage(string message, int myId, MessageTarget target)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xD40A6C", Offset = "0xD40A6C", VA = "0xD40A6C", Slot = "13")]
	public void SendMessage(string message, int myId, int payload, MessageTarget target)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xD40B9C", Offset = "0xD40B9C", VA = "0xD40B9C", Slot = "14")]
	public void SendMessage(string message, int myId, float payload, MessageTarget target)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xD40CD0", Offset = "0xD40CD0", VA = "0xD40CD0", Slot = "15")]
	public void SendMessage(string message, int myId, string payload, MessageTarget target)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xD40E04", Offset = "0xD40E04", VA = "0xD40E04", Slot = "16")]
	public void SendMessage(string message, int myId, byte[] payload, MessageTarget target)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xD40F38", Offset = "0xD40F38", VA = "0xD40F38", Slot = "17")]
	public void SetPlayerData(string key, int value)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xD40F3C", Offset = "0xD40F3C", VA = "0xD40F3C", Slot = "18")]
	public void LeaveParty()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xD40F40", Offset = "0xD40F40", VA = "0xD40F40", Slot = "19")]
	public void KickUser(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xD40F44", Offset = "0xD40F44", VA = "0xD40F44", Slot = "20")]
	public bool CheckConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xD40F4C", Offset = "0xD40F4C", VA = "0xD40F4C", Slot = "21")]
	public void CloseRoom()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xD41990", Offset = "0xD41990", VA = "0xD41990")]
	public MockCommunicate()
	{
	}
}
[Token(Token = "0x2000164")]
public class OfflineCommunicate : IGroupCommunicate
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Multiplayer.Player.User _me;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A784", Offset = "0xB3A784")]
	private bool <IsInitialised>k__BackingField;

	[Token(Token = "0x170000D6")]
	public bool IsInitialised
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xD129D8", Offset = "0xD129D8", VA = "0xD129D8", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E48", Offset = "0xB48E48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xD129E0", Offset = "0xD129E0", VA = "0xD129E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E58", Offset = "0xB48E58")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public bool IsMaster
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xD129EC", Offset = "0xD129EC", VA = "0xD129EC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000059")]
	public event Action<string, int> OnMessageReceived
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xD1335C", Offset = "0xD1335C", VA = "0xD1335C", Slot = "22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E68", Offset = "0xB48E68")]
		add
		{
		}
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xD13400", Offset = "0xD13400", VA = "0xD13400", Slot = "23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E78", Offset = "0xB48E78")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005A")]
	public event Action<string, int, int> OnIntMessageReceived
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xD134A4", Offset = "0xD134A4", VA = "0xD134A4", Slot = "24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E88", Offset = "0xB48E88")]
		add
		{
		}
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xD13548", Offset = "0xD13548", VA = "0xD13548", Slot = "25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48E98", Offset = "0xB48E98")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005B")]
	public event Action<string, int, float> OnFloatMessageReceived
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xD135EC", Offset = "0xD135EC", VA = "0xD135EC", Slot = "26")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48EA8", Offset = "0xB48EA8")]
		add
		{
		}
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xD13690", Offset = "0xD13690", VA = "0xD13690", Slot = "27")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48EB8", Offset = "0xB48EB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005C")]
	public event Action<string, int, string> OnStringMessageReceived
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xD13734", Offset = "0xD13734", VA = "0xD13734", Slot = "28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48EC8", Offset = "0xB48EC8")]
		add
		{
		}
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xD137D8", Offset = "0xD137D8", VA = "0xD137D8", Slot = "29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48ED8", Offset = "0xB48ED8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005D")]
	public event Action<string, int, byte[]> OnByteMessageReceived
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xD1387C", Offset = "0xD1387C", VA = "0xD1387C", Slot = "30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48EE8", Offset = "0xB48EE8")]
		add
		{
		}
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xD13920", Offset = "0xD13920", VA = "0xD13920", Slot = "31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48EF8", Offset = "0xB48EF8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005E")]
	public event Action<Multiplayer.Player.User, string> OnPlayerDisconnect
	{
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xD139C4", Offset = "0xD139C4", VA = "0xD139C4", Slot = "32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F08", Offset = "0xB48F08")]
		add
		{
		}
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xD13A68", Offset = "0xD13A68", VA = "0xD13A68", Slot = "33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F18", Offset = "0xB48F18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400005F")]
	public event Action<Multiplayer.Player.User> OnPlayerJoined
	{
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xD13B0C", Offset = "0xD13B0C", VA = "0xD13B0C", Slot = "34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F28", Offset = "0xB48F28")]
		add
		{
		}
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xD13BB0", Offset = "0xD13BB0", VA = "0xD13BB0", Slot = "35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F38", Offset = "0xB48F38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000060")]
	public event Action<GameObject, int, byte[]> OnPlayerInstantiated
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xD13C54", Offset = "0xD13C54", VA = "0xD13C54", Slot = "36")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F48", Offset = "0xB48F48")]
		add
		{
		}
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xD13CF8", Offset = "0xD13CF8", VA = "0xD13CF8", Slot = "37")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F58", Offset = "0xB48F58")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xD128F4", Offset = "0xD128F4", VA = "0xD128F4", Slot = "4")]
	public void Init(string roomId, Multiplayer.Player.User me, bool offlineMode, Action<Result, Multiplayer.Player.User, bool> callback, CloudRegion region = CloudRegion.NONE)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xD129F4", Offset = "0xD129F4", VA = "0xD129F4", Slot = "7")]
	public List<Multiplayer.Player.User> GetPlayerList()
	{
		return null;
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xD12A7C", Offset = "0xD12A7C", VA = "0xD12A7C", Slot = "8")]
	public CloudRegion GetCurrentRegion()
	{
		return default(CloudRegion);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xD12A84", Offset = "0xD12A84", VA = "0xD12A84", Slot = "9")]
	public void InstantiateLobby(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xD12D34", Offset = "0xD12D34", VA = "0xD12D34", Slot = "10")]
	public void InstantiateGame(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xD12EB4", Offset = "0xD12EB4", VA = "0xD12EB4", Slot = "11")]
	public void InstantiateBaseCamp(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xD12B90", Offset = "0xD12B90", VA = "0xD12B90")]
	private void Instantiate(Vector3 pos, Quaternion rot, byte[] data, string prefabName)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xD12FC0", Offset = "0xD12FC0", VA = "0xD12FC0")]
	private bool ShouldReply(MessageTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xD12FE4", Offset = "0xD12FE4", VA = "0xD12FE4", Slot = "12")]
	public void SendMessage(string message, int myId, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xD13088", Offset = "0xD13088", VA = "0xD13088", Slot = "13")]
	public void SendMessage(string message, int myId, int payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xD13134", Offset = "0xD13134", VA = "0xD13134", Slot = "14")]
	public void SendMessage(string message, int myId, float payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xD131EC", Offset = "0xD131EC", VA = "0xD131EC", Slot = "15")]
	public void SendMessage(string message, int myId, string payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xD13298", Offset = "0xD13298", VA = "0xD13298", Slot = "16")]
	public void SendMessage(string message, int myId, byte[] payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xD13344", Offset = "0xD13344", VA = "0xD13344", Slot = "17")]
	public void SetPlayerData(string key, int value)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xD13348", Offset = "0xD13348", VA = "0xD13348", Slot = "18")]
	public void LeaveParty()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xD1334C", Offset = "0xD1334C", VA = "0xD1334C", Slot = "19")]
	public void KickUser(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xD13350", Offset = "0xD13350", VA = "0xD13350", Slot = "20")]
	public bool CheckConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xD13358", Offset = "0xD13358", VA = "0xD13358", Slot = "21")]
	public void CloseRoom()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xD13D9C", Offset = "0xD13D9C", VA = "0xD13D9C")]
	public OfflineCommunicate()
	{
	}
}
[Token(Token = "0x2000165")]
public class PhotonCommunicate : Photon.MonoBehaviour, IGroupCommunicate, IPunCallbacks
{
	[Token(Token = "0x2000725")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB347F0", Offset = "0xB347F0")]
	private sealed class <InitAfterDisconnect>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonCommunicate <>4__this;

		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Multiplayer.Player.User me;

		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool offlineMode;

		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CloudRegion region;

		[Token(Token = "0x1700044E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0xD06E08", Offset = "0xD06E08", VA = "0xD06E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E0C")]
			[Address(RVA = "0xD06E70", Offset = "0xD06E70", VA = "0xD06E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0xCFF7B8", Offset = "0xCFF7B8", VA = "0xCFF7B8")]
		[DebuggerHidden]
		public <InitAfterDisconnect>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0xD06D50", Offset = "0xD06D50", VA = "0xD06D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0xD06D54", Offset = "0xD06D54", VA = "0xD06D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0xD06E10", Offset = "0xD06E10", VA = "0xD06E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000726")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34800", Offset = "0xB34800")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Multiplayer.Player.User> <>9__38_0;

		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__91_0;

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0xD06C74", Offset = "0xD06C74", VA = "0xD06C74")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0xD06C7C", Offset = "0xD06C7C", VA = "0xD06C7C")]
		internal int <GetPlayerList>b__38_0(Multiplayer.Player.User p1, Multiplayer.Player.User p2)
		{
			return default(int);
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0xD06CA8", Offset = "0xD06CA8", VA = "0xD06CA8")]
		internal void <OnJoinedRoom>b__91_0()
		{
		}
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _debug;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonCommunicate _instance;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Multiplayer.Player.User _localMe;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _roomId;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _matchmaking;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _needsDisconnect;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private MatchingStage _matchingStage;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _initAfterDisconnect;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isHost;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<Result, Multiplayer.Player.User, bool> _initCallback;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<Result, bool, string> _matchMakingCallback;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action _onStagingCallback;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A814", Offset = "0xB3A814")]
	private bool <IsOfflineMode>k__BackingField;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A824", Offset = "0xB3A824")]
	private bool <IsInitialised>k__BackingField;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _disconnecting;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int id;

	[Token(Token = "0x170000D8")]
	public static PhotonCommunicate Instance
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xCF2454", Offset = "0xCF2454", VA = "0xCF2454")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D9")]
	public bool IsOfflineMode
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xCFE778", Offset = "0xCFE778", VA = "0xCFE778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F68", Offset = "0xB48F68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xCFE780", Offset = "0xCFE780", VA = "0xCFE780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F78", Offset = "0xB48F78")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public bool IsInitialised
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xCFE78C", Offset = "0xCFE78C", VA = "0xCFE78C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F88", Offset = "0xB48F88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xCFE794", Offset = "0xCFE794", VA = "0xCFE794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB48F98", Offset = "0xB48F98")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public bool IsMaster
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xCFE7A0", Offset = "0xCFE7A0", VA = "0xCFE7A0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000061")]
	public event Action<string, int> OnMessageReceived
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xD01960", Offset = "0xD01960", VA = "0xD01960", Slot = "22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4900C", Offset = "0xB4900C")]
		add
		{
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xD01A04", Offset = "0xD01A04", VA = "0xD01A04", Slot = "23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4901C", Offset = "0xB4901C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000062")]
	public event Action<string, int, int> OnIntMessageReceived
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xD01AA8", Offset = "0xD01AA8", VA = "0xD01AA8", Slot = "24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4902C", Offset = "0xB4902C")]
		add
		{
		}
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xD01B4C", Offset = "0xD01B4C", VA = "0xD01B4C", Slot = "25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4903C", Offset = "0xB4903C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000063")]
	public event Action<string, int, float> OnFloatMessageReceived
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xD01BF0", Offset = "0xD01BF0", VA = "0xD01BF0", Slot = "26")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4904C", Offset = "0xB4904C")]
		add
		{
		}
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xD01C94", Offset = "0xD01C94", VA = "0xD01C94", Slot = "27")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4905C", Offset = "0xB4905C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000064")]
	public event Action<string, int, string> OnStringMessageReceived
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xD01D38", Offset = "0xD01D38", VA = "0xD01D38", Slot = "28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4906C", Offset = "0xB4906C")]
		add
		{
		}
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xD01DDC", Offset = "0xD01DDC", VA = "0xD01DDC", Slot = "29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4907C", Offset = "0xB4907C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000065")]
	public event Action<string, int, byte[]> OnByteMessageReceived
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xD01E80", Offset = "0xD01E80", VA = "0xD01E80", Slot = "30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4908C", Offset = "0xB4908C")]
		add
		{
		}
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xD01F24", Offset = "0xD01F24", VA = "0xD01F24", Slot = "31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4909C", Offset = "0xB4909C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000066")]
	public event Action<Multiplayer.Player.User, string> OnPlayerDisconnect
	{
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xD01FC8", Offset = "0xD01FC8", VA = "0xD01FC8", Slot = "32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB490AC", Offset = "0xB490AC")]
		add
		{
		}
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xD0206C", Offset = "0xD0206C", VA = "0xD0206C", Slot = "33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB490BC", Offset = "0xB490BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000067")]
	public event Action<Multiplayer.Player.User> OnPlayerJoined
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xD02110", Offset = "0xD02110", VA = "0xD02110", Slot = "34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB490CC", Offset = "0xB490CC")]
		add
		{
		}
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xD021B4", Offset = "0xD021B4", VA = "0xD021B4", Slot = "35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB490DC", Offset = "0xB490DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000068")]
	public event Action<GameObject, int, byte[]> OnPlayerInstantiated
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xD02258", Offset = "0xD02258", VA = "0xD02258", Slot = "36")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB490EC", Offset = "0xB490EC")]
		add
		{
		}
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xD022FC", Offset = "0xD022FC", VA = "0xD022FC", Slot = "37")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB490FC", Offset = "0xB490FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000069")]
	public static event Action<ExitGames.Client.Photon.Hashtable> OnRoomPropertiesChanged
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xD023A0", Offset = "0xD023A0", VA = "0xD023A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4910C", Offset = "0xB4910C")]
		add
		{
		}
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xD02458", Offset = "0xD02458", VA = "0xD02458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4911C", Offset = "0xB4911C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xCFE634", Offset = "0xCFE634", VA = "0xCFE634")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xCFE8F4", Offset = "0xCFE8F4", VA = "0xCFE8F4")]
	private void Disconnect()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xCFEAF8", Offset = "0xCFEAF8", VA = "0xCFEAF8", Slot = "4")]
	public void Init(string roomId, Multiplayer.Player.User me, bool offlineMode, Action<Result, Multiplayer.Player.User, bool> callback, CloudRegion region = CloudRegion.NONE)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xCFEEA0", Offset = "0xCFEEA0", VA = "0xCFEEA0")]
	public void InitMatchmaking(Multiplayer.Player.User me, Action<Result, bool, string> callback, Action onStaging)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xCFEF44", Offset = "0xCFEF44", VA = "0xCFEF44")]
	public void LeaveMatchmakingQueue()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xCFF064", Offset = "0xCFF064", VA = "0xCFF064")]
	private bool PhotonRegionMatch(CloudRegion region)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xCFF06C", Offset = "0xCFF06C", VA = "0xCFF06C", Slot = "21")]
	public void CloseRoom()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xCFEB18", Offset = "0xCFEB18", VA = "0xCFEB18")]
	private void InitWithCheck(Multiplayer.Player.User me, bool offlineMode, CloudRegion region)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xCFF394", Offset = "0xCFF394", VA = "0xCFF394")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB48FA8", Offset = "0xB48FA8")]
	private IEnumerator InitAfterDisconnect(Multiplayer.Player.User me, bool offlineMode, CloudRegion region)
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xCFF594", Offset = "0xCFF594", VA = "0xCFF594")]
	private void Init(Multiplayer.Player.User me, bool offlineMode, CloudRegion region)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xD00680", Offset = "0xD00680", VA = "0xD00680")]
	public void FindRandomGame()
	{
	}

	[Token(Token = "0x6000A4B")]
	public void SetRoomProperty<T>(string key, T value)
	{
	}

	[Token(Token = "0x6000A4C")]
	public T GetRoomProperty<T>(string key, T fallback)
	{
		return (T)null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xD00750", Offset = "0xD00750", VA = "0xD00750", Slot = "7")]
	public List<Multiplayer.Player.User> GetPlayerList()
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xD00C1C", Offset = "0xD00C1C", VA = "0xD00C1C", Slot = "8")]
	public CloudRegion GetCurrentRegion()
	{
		return default(CloudRegion);
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xD00C90", Offset = "0xD00C90", VA = "0xD00C90", Slot = "12")]
	public void SendMessage(string message, int myId, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xD00DC0", Offset = "0xD00DC0", VA = "0xD00DC0", Slot = "13")]
	public void SendMessage(string message, int myId, int payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xD00F38", Offset = "0xD00F38", VA = "0xD00F38", Slot = "14")]
	public void SendMessage(string message, int myId, float payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xD010C0", Offset = "0xD010C0", VA = "0xD010C0", Slot = "15")]
	public void SendMessage(string message, int myId, string payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xD01224", Offset = "0xD01224", VA = "0xD01224", Slot = "16")]
	public void SendMessage(string message, int myId, byte[] payload, MessageTarget target)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xD01388", Offset = "0xD01388", VA = "0xD01388", Slot = "17")]
	public void SetPlayerData(string key, int value)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xD01454", Offset = "0xD01454", VA = "0xD01454", Slot = "18")]
	public void LeaveParty()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xD014AC", Offset = "0xD014AC", VA = "0xD014AC", Slot = "19")]
	public void KickUser(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xD017D8", Offset = "0xD017D8", VA = "0xD017D8", Slot = "20")]
	public bool CheckConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xD02510", Offset = "0xD02510", VA = "0xD02510", Slot = "38")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xD02594", Offset = "0xD02594", VA = "0xD02594", Slot = "39")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xD026A4", Offset = "0xD026A4", VA = "0xD026A4", Slot = "40")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xD02758", Offset = "0xD02758", VA = "0xD02758", Slot = "41")]
	public void OnPhotonCreateRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xD0284C", Offset = "0xD0284C", VA = "0xD0284C", Slot = "42")]
	public void OnPhotonJoinRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xCFF494", Offset = "0xCFF494", VA = "0xCFF494")]
	private void CheckCallbacks(string error)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xD02940", Offset = "0xD02940", VA = "0xD02940", Slot = "43")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xD029C4", Offset = "0xD029C4", VA = "0xD029C4", Slot = "44")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xD02A48", Offset = "0xD02A48", VA = "0xD02A48", Slot = "45")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xD02A4C", Offset = "0xD02A4C", VA = "0xD02A4C", Slot = "46")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xD02CC4", Offset = "0xD02CC4", VA = "0xD02CC4", Slot = "47")]
	public void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xD02C2C", Offset = "0xD02C2C", VA = "0xD02C2C")]
	public static string SplitCamelCase(string str)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xD02DFC", Offset = "0xD02DFC", VA = "0xD02DFC", Slot = "48")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4912C", Offset = "0xB4912C")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xD03018", Offset = "0xD03018", VA = "0xD03018", Slot = "49")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD030DC", Offset = "0xD030DC", VA = "0xD030DC", Slot = "50")]
	public void OnReceivedRoomListUpdate()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xD036AC", Offset = "0xD036AC", VA = "0xD036AC", Slot = "51")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD03AC4", Offset = "0xD03AC4", VA = "0xD03AC4")]
	private bool IsRoomFull(bool checkOverfull = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xD03C68", Offset = "0xD03C68", VA = "0xD03C68", Slot = "52")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD0419C", Offset = "0xD0419C", VA = "0xD0419C", Slot = "53")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xD042B4", Offset = "0xD042B4", VA = "0xD042B4", Slot = "54")]
	public void OnPhotonRandomJoinFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xD044F0", Offset = "0xD044F0", VA = "0xD044F0", Slot = "55")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xD04690", Offset = "0xD04690", VA = "0xD04690", Slot = "56")]
	public void OnPhotonMaxCccuReached()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xD04714", Offset = "0xD04714", VA = "0xD04714", Slot = "57")]
	public void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xD04890", Offset = "0xD04890", VA = "0xD04890", Slot = "58")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xD04AA0", Offset = "0xD04AA0", VA = "0xD04AA0", Slot = "59")]
	public void OnUpdatedFriendList()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xD04B00", Offset = "0xD04B00", VA = "0xD04B00", Slot = "60")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xD04B60", Offset = "0xD04B60", VA = "0xD04B60", Slot = "61")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xD04BC0", Offset = "0xD04BC0", VA = "0xD04BC0", Slot = "62")]
	public void OnWebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xD04C20", Offset = "0xD04C20", VA = "0xD04C20", Slot = "63")]
	public void OnOwnershipRequest(object[] viewAndPlayer)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xD04C24", Offset = "0xD04C24", VA = "0xD04C24", Slot = "64")]
	public void OnLobbyStatisticsUpdate()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xD04C84", Offset = "0xD04C84", VA = "0xD04C84", Slot = "65")]
	public void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xD04CE4", Offset = "0xD04CE4", VA = "0xD04CE4", Slot = "66")]
	public void OnOwnershipTransfered(object[] viewAndPlayers)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xD009B8", Offset = "0xD009B8", VA = "0xD009B8")]
	public Multiplayer.Player.User PhotonPlayerToUser(PhotonPlayer input)
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	private T ExtractProperty<T>(PhotonPlayer input, string key, T fallback)
	{
		return (T)null;
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xD04CE8", Offset = "0xD04CE8", VA = "0xD04CE8")]
	[PunRPC]
	private void _OnMessageReceived(string message, int senderId, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xD04DD4", Offset = "0xD04DD4", VA = "0xD04DD4")]
	[PunRPC]
	private void _OnIntMessageReceived(string message, int senderId, int payload, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xD04EE8", Offset = "0xD04EE8", VA = "0xD04EE8")]
	[PunRPC]
	private void _OnFloatMessageReceived(string message, int senderId, float payload, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xD04FFC", Offset = "0xD04FFC", VA = "0xD04FFC")]
	[PunRPC]
	private void _OnStringMessageReceived(string message, int senderId, string payload, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xD050F4", Offset = "0xD050F4", VA = "0xD050F4")]
	[PunRPC]
	private void _OnByteMessageReceived(string message, int senderId, byte[] payload, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xD051EC", Offset = "0xD051EC", VA = "0xD051EC", Slot = "9")]
	public void InstantiateLobby(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xD05560", Offset = "0xD05560", VA = "0xD05560", Slot = "10")]
	public void InstantiateGame(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xD05834", Offset = "0xD05834", VA = "0xD05834", Slot = "11")]
	public void InstantiateBaseCamp(Vector3 pos, Quaternion rot, byte[] data)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xD05B08", Offset = "0xD05B08", VA = "0xD05B08")]
	[PunRPC]
	private void _SpawnLobby(Vector3 pos, Quaternion rot, int pView, int pPlayer, byte[] data)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xD060C0", Offset = "0xD060C0", VA = "0xD060C0")]
	[PunRPC]
	private void _SpawnGame(Vector3 pos, Quaternion rot, int pView, int pPlayer, byte[] data)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xD06614", Offset = "0xD06614", VA = "0xD06614")]
	[PunRPC]
	private void _SpawnBaseCamp(Vector3 pos, Quaternion rot, int pView, int pPlayer, byte[] data)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xD05F28", Offset = "0xD05F28", VA = "0xD05F28")]
	private GameObject InstantiatePlayer(string name, Vector3 pos, Quaternion rot, int pView, int pPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xD06A28", Offset = "0xD06A28", VA = "0xD06A28")]
	private void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xD06AD8", Offset = "0xD06AD8", VA = "0xD06AD8")]
	public PhotonCommunicate()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xD06AE8", Offset = "0xD06AE8", VA = "0xD06AE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB491E4", Offset = "0xB491E4")]
	private void <OnJoinedRoom>b__91_1()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xD06B9C", Offset = "0xD06B9C", VA = "0xD06B9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB491F4", Offset = "0xB491F4")]
	private void <OnPhotonRandomJoinFailed>b__95_0()
	{
	}
}
[Token(Token = "0x2000166")]
public enum CloudRegion
{
	[Token(Token = "0x4000A54")]
	EU,
	[Token(Token = "0x4000A55")]
	USE,
	[Token(Token = "0x4000A56")]
	SNG,
	[Token(Token = "0x4000A57")]
	JP,
	[Token(Token = "0x4000A58")]
	NONE,
	[Token(Token = "0x4000A59")]
	AU,
	[Token(Token = "0x4000A5A")]
	USW,
	[Token(Token = "0x4000A5B")]
	SA,
	[Token(Token = "0x4000A5C")]
	CA,
	[Token(Token = "0x4000A5D")]
	KR,
	[Token(Token = "0x4000A5E")]
	IN,
	[Token(Token = "0x4000A5F")]
	RU,
	[Token(Token = "0x4000A60")]
	CN
}
[Token(Token = "0x2000167")]
public enum MessageTarget
{
	[Token(Token = "0x4000A62")]
	All,
	[Token(Token = "0x4000A63")]
	Others,
	[Token(Token = "0x4000A64")]
	Master,
	[Token(Token = "0x4000A65")]
	AllBuffered,
	[Token(Token = "0x4000A66")]
	OthersBuffered,
	[Token(Token = "0x4000A67")]
	AllViaServer,
	[Token(Token = "0x4000A68")]
	AllBufferedViaServer
}
[Token(Token = "0x2000168")]
internal enum MatchingStage
{
	[Token(Token = "0x4000A6A")]
	None,
	[Token(Token = "0x4000A6B")]
	PreStaging,
	[Token(Token = "0x4000A6C")]
	Staging,
	[Token(Token = "0x4000A6D")]
	PostStaging,
	[Token(Token = "0x4000A6E")]
	Setup
}
[Token(Token = "0x2000169")]
public static class AiBalancing
{
	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xE5FBA4", Offset = "0xE5FBA4", VA = "0xE5FBA4")]
	public static float SafenessMultiplier(int map)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xE5FBAC", Offset = "0xE5FBAC", VA = "0xE5FBAC")]
	public static float SpeedMultplier(int map, int course, float difficulty)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xE5FD6C", Offset = "0xE5FD6C", VA = "0xE5FD6C")]
	public static float BoostTargetting(int map, float difficulty)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xE5FE10", Offset = "0xE5FE10", VA = "0xE5FE10")]
	public static float BoostMultiplier(int map, float difficulty)
	{
		return default(float);
	}
}
[Token(Token = "0x200016A")]
public class BasecampBoneSwitcher : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer skin;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xE6D3A8", Offset = "0xE6D3A8", VA = "0xE6D3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xE6D4C8", Offset = "0xE6D4C8", VA = "0xE6D4C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xE6D4C4", Offset = "0xE6D4C4", VA = "0xE6D4C4")]
	private void To2Bone()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xE6D4C0", Offset = "0xE6D4C0", VA = "0xE6D4C0")]
	private void To4Bone()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xE6D594", Offset = "0xE6D594", VA = "0xE6D594")]
	public BasecampBoneSwitcher()
	{
	}
}
[Token(Token = "0x200016B")]
public class CharAnimGame : CharacterAnimation
{
	[Token(Token = "0x2000727")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34810", Offset = "0xB34810")]
	private sealed class <GrossPositionalOffsetFix>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharAnimGame <>4__this;

		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startpos>5__3;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <endPos>5__4;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E14")]
			[Address(RVA = "0xD7BF5C", Offset = "0xD7BF5C", VA = "0xD7BF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E16")]
			[Address(RVA = "0xD7BFC4", Offset = "0xD7BFC4", VA = "0xD7BFC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0xD7B7D4", Offset = "0xD7B7D4", VA = "0xD7B7D4")]
		[DebuggerHidden]
		public <GrossPositionalOffsetFix>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0xD7BD58", Offset = "0xD7BD58", VA = "0xD7BD58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0xD7BD5C", Offset = "0xD7BD5C", VA = "0xD7BD5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0xD7BF64", Offset = "0xD7BF64", VA = "0xD7BF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34820", Offset = "0xB34820")]
	private sealed class <SwingParachuteRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharAnimGame <>4__this;

		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <initPos>5__2;

		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__3;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0xD7CB78", Offset = "0xD7CB78", VA = "0xD7CB78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0xD7CBE0", Offset = "0xD7CBE0", VA = "0xD7CBE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0xD7B800", Offset = "0xD7B800", VA = "0xD7B800")]
		[DebuggerHidden]
		public <SwingParachuteRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0xD7C824", Offset = "0xD7C824", VA = "0xD7C824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0xD7C828", Offset = "0xD7C828", VA = "0xD7C828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0xD7CB80", Offset = "0xD7CB80", VA = "0xD7CB80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000729")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34830", Offset = "0xB34830")]
	private sealed class <OpenParachuteRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharAnimGame <>4__this;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion <startRotPara>5__3;

		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <startRotChar>5__4;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <endRotChar>5__5;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <triggeredAnim>5__6;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion <parentStartRot>5__7;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion <parentEndRot>5__8;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E20")]
			[Address(RVA = "0xD7C4F4", Offset = "0xD7C4F4", VA = "0xD7C4F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E22")]
			[Address(RVA = "0xD7C55C", Offset = "0xD7C55C", VA = "0xD7C55C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0xD7B9A0", Offset = "0xD7B9A0", VA = "0xD7B9A0")]
		[DebuggerHidden]
		public <OpenParachuteRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0xD7BFCC", Offset = "0xD7BFCC", VA = "0xD7BFCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0xD7BFD0", Offset = "0xD7BFD0", VA = "0xD7BFD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xD7C4FC", Offset = "0xD7C4FC", VA = "0xD7C4FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34840", Offset = "0xB34840")]
	private sealed class <RotateOverTime>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float initDelay;

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharAnimGame <>4__this;

		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 axis;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float duration;

		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <time>5__2;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <lerp>5__3;

		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <startRot>5__4;

		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion <endRot>5__5;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E26")]
			[Address(RVA = "0xD7C7B4", Offset = "0xD7C7B4", VA = "0xD7C7B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E28")]
			[Address(RVA = "0xD7C81C", Offset = "0xD7C81C", VA = "0xD7C81C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0xD7BB04", Offset = "0xD7BB04", VA = "0xD7BB04")]
		[DebuggerHidden]
		public <RotateOverTime>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0xD7C564", Offset = "0xD7C564", VA = "0xD7C564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0xD7C568", Offset = "0xD7C568", VA = "0xD7C568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xD7C7BC", Offset = "0xD7C7BC", VA = "0xD7C7BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject parachute;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve parachuteMotion;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform parachutePivot;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform character;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform parent;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _initPos;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _lastSpeed;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _lastDT;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool animate;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int flyingXRot;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SkinnedMeshRenderer _skin;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _optimiseBonesInFlight;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xD7B254", Offset = "0xD7B254", VA = "0xD7B254", Slot = "4")]
	protected override void Setup()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xD7B2E4", Offset = "0xD7B2E4", VA = "0xD7B2E4", Slot = "5")]
	public virtual void Jump()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xD7B474", Offset = "0xD7B474", VA = "0xD7B474")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xD7B574", Offset = "0xD7B574", VA = "0xD7B574", Slot = "6")]
	public virtual void OpenParachute(bool takeOverMotion)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xD7B6F0", Offset = "0xD7B6F0", VA = "0xD7B6F0")]
	public void SkipToParachute()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xD7B764", Offset = "0xD7B764", VA = "0xD7B764")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49204", Offset = "0xB49204")]
	private IEnumerator GrossPositionalOffsetFix()
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xD7B680", Offset = "0xD7B680", VA = "0xD7B680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49268", Offset = "0xB49268")]
	private IEnumerator SwingParachuteRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xD7B82C", Offset = "0xD7B82C", VA = "0xD7B82C", Slot = "7")]
	public virtual void SkipToFly()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xD7B900", Offset = "0xD7B900", VA = "0xD7B900")]
	public void Boost()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xD7B970", Offset = "0xD7B970", VA = "0xD7B970")]
	public void Crash()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xD7B610", Offset = "0xD7B610", VA = "0xD7B610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB492CC", Offset = "0xB492CC")]
	private IEnumerator OpenParachuteRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xD7B9CC", Offset = "0xD7B9CC", VA = "0xD7B9CC", Slot = "8")]
	protected virtual void OnParachuteOpen()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xD7B9D0", Offset = "0xD7B9D0", VA = "0xD7B9D0")]
	public Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, float angle, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xD7B3C4", Offset = "0xD7B3C4", VA = "0xD7B3C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49330", Offset = "0xB49330")]
	private IEnumerator RotateOverTime(Vector3 axis, float angle, float duration, float initDelay)
	{
		return null;
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xD7BB30", Offset = "0xD7BB30", VA = "0xD7BB30")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xD7BB58", Offset = "0xD7BB58", VA = "0xD7BB58", Slot = "9")]
	public virtual void ResetCharacter()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xD7BD00", Offset = "0xD7BD00", VA = "0xD7BD00")]
	public CharAnimGame()
	{
	}
}
[Token(Token = "0x200016C")]
public class CharAnimGameRS : CharAnimGame
{
	[Token(Token = "0x200072B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34850", Offset = "0xB34850")]
	private sealed class <TurnHands>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fromNorm;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharAnimGameRS <>4__this;

		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <fromL>5__3;

		[Token(Token = "0x4002C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion <fromR>5__4;

		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion <toL>5__5;

		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion <toR>5__6;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0xD7D8F4", Offset = "0xD7D8F4", VA = "0xD7D8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0xD7D95C", Offset = "0xD7D95C", VA = "0xD7D95C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0xD7D180", Offset = "0xD7D180", VA = "0xD7D180")]
		[DebuggerHidden]
		public <TurnHands>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0xD7D5F4", Offset = "0xD7D5F4", VA = "0xD7D5F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0xD7D5F8", Offset = "0xD7D5F8", VA = "0xD7D5F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0xD7D8FC", Offset = "0xD7D8FC", VA = "0xD7D8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34860", Offset = "0xB34860")]
	private sealed class <StretchCharacter>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharAnimGameRS <>4__this;

		[Token(Token = "0x4002C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool delayed;

		[Token(Token = "0x4002C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float start;

		[Token(Token = "0x4002C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float end;

		[Token(Token = "0x4002C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x1700045A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E32")]
			[Address(RVA = "0xD7D584", Offset = "0xD7D584", VA = "0xD7D584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E34")]
			[Address(RVA = "0xD7D5EC", Offset = "0xD7D5EC", VA = "0xD7D5EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0xD7D1AC", Offset = "0xD7D1AC", VA = "0xD7D1AC")]
		[DebuggerHidden]
		public <StretchCharacter>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0xD7D3E4", Offset = "0xD7D3E4", VA = "0xD7D3E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0xD7D3E8", Offset = "0xD7D3E8", VA = "0xD7D3E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0xD7D58C", Offset = "0xD7D58C", VA = "0xD7D58C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject paraHandL;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject paraHandR;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HandAnimator handAnim;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform vrHandOutputLeft;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform vrHandOutputRight;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion _initHandLeftRot;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion _initHandRightRot;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion _turnedHandLeftRot;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion _turnedHandRightRot;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform _modelChar;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xD7CBE8", Offset = "0xD7CBE8", VA = "0xD7CBE8", Slot = "4")]
	protected override void Setup()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xD7CDC0", Offset = "0xD7CDC0", VA = "0xD7CDC0", Slot = "7")]
	public override void SkipToFly()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xD7CF4C", Offset = "0xD7CF4C", VA = "0xD7CF4C", Slot = "5")]
	public override void Jump()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xD7D024", Offset = "0xD7D024", VA = "0xD7D024", Slot = "8")]
	protected override void OnParachuteOpen()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xD7CEC8", Offset = "0xD7CEC8", VA = "0xD7CEC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49394", Offset = "0xB49394")]
	private IEnumerator TurnHands(bool fromNorm)
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xD7CF8C", Offset = "0xD7CF8C", VA = "0xD7CF8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB493F8", Offset = "0xB493F8")]
	private IEnumerator StretchCharacter(float start, float end, bool delayed = true)
	{
		return null;
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xD7D1D8", Offset = "0xD7D1D8", VA = "0xD7D1D8", Slot = "9")]
	public override void ResetCharacter()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xD7D394", Offset = "0xD7D394", VA = "0xD7D394")]
	public CharAnimGameRS()
	{
	}
}
[Token(Token = "0x200016D")]
public class CharAnimLobby : CharacterAnimation
{
	[Token(Token = "0x200072D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34870", Offset = "0xB34870")]
	private sealed class <RandomFootTap>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharAnimLobby <>4__this;

		[Token(Token = "0x1700045C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E38")]
			[Address(RVA = "0xD7DC9C", Offset = "0xD7DC9C", VA = "0xD7DC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0xD7DD04", Offset = "0xD7DD04", VA = "0xD7DD04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0xD7DA8C", Offset = "0xD7DA8C", VA = "0xD7DA8C")]
		[DebuggerHidden]
		public <RandomFootTap>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0xD7DB60", Offset = "0xD7DB60", VA = "0xD7DB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0xD7DB64", Offset = "0xD7DB64", VA = "0xD7DB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0xD7DCA4", Offset = "0xD7DCA4", VA = "0xD7DCA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD7D964", Offset = "0xD7D964", VA = "0xD7D964", Slot = "4")]
	protected override void Setup()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD7DA1C", Offset = "0xD7DA1C", VA = "0xD7DA1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4945C", Offset = "0xB4945C")]
	private IEnumerator RandomFootTap()
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD7DAB8", Offset = "0xD7DAB8", VA = "0xD7DAB8")]
	public void ReadyUp()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xD7DB54", Offset = "0xD7DB54", VA = "0xD7DB54")]
	public void ChangeSkin()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xD7DB58", Offset = "0xD7DB58", VA = "0xD7DB58")]
	public CharAnimLobby()
	{
	}
}
[Token(Token = "0x200016E")]
public class CharAnimLobbyStanding : CharacterAnimation
{
	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xD7DD0C", Offset = "0xD7DD0C", VA = "0xD7DD0C", Slot = "4")]
	protected override void Setup()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xD7DDC0", Offset = "0xD7DDC0", VA = "0xD7DDC0")]
	public void ChangeSkin()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xD7DDC4", Offset = "0xD7DDC4", VA = "0xD7DDC4")]
	public CharAnimLobbyStanding()
	{
	}
}
[Token(Token = "0x200016F")]
public abstract class CharacterAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Animator _anim;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xD7DDCC", Offset = "0xD7DDCC", VA = "0xD7DDCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC7")]
	protected abstract void Setup();

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xD7DDD8", Offset = "0xD7DDD8", VA = "0xD7DDD8")]
	protected void SetAnimTrigger(string name)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD7DE7C", Offset = "0xD7DE7C", VA = "0xD7DE7C")]
	protected void SetAnimBool(string name, bool value)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xD7BD50", Offset = "0xD7BD50", VA = "0xD7BD50")]
	protected CharacterAnimation()
	{
	}
}
[Token(Token = "0x2000170")]
public class GameBodyCull : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camera;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _showing;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer bodyRend;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator bodyAnim;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HeadShrink headShrink;

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xDD2BCC", Offset = "0xDD2BCC", VA = "0xDD2BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xDD2C54", Offset = "0xDD2C54", VA = "0xDD2C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xDD2F64", Offset = "0xDD2F64", VA = "0xDD2F64")]
	public GameBodyCull()
	{
	}
}
[Token(Token = "0x2000171")]
public class HeadShrink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float size;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xCE49FC", Offset = "0xCE49FC", VA = "0xCE49FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xCE4A00", Offset = "0xCE4A00", VA = "0xCE4A00")]
	public void Shrink()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xCE4A9C", Offset = "0xCE4A9C", VA = "0xCE4A9C")]
	public HeadShrink()
	{
	}
}
[Token(Token = "0x2000172")]
public class PauseIKToggle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FinalIKBodyWrapper ik;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xCFACE8", Offset = "0xCFACE8", VA = "0xCFACE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xCFAEAC", Offset = "0xCFAEAC", VA = "0xCFAEAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xCFB064", Offset = "0xCFB064", VA = "0xCFB064")]
	private void OnReset()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xCFB0D4", Offset = "0xCFB0D4", VA = "0xCFB0D4")]
	private void UserPaused(bool paused)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xCFB1EC", Offset = "0xCFB1EC", VA = "0xCFB1EC")]
	private void UserStart()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xCFB260", Offset = "0xCFB260", VA = "0xCFB260")]
	private void OnFinished(ScoreData obj)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xCFB28C", Offset = "0xCFB28C", VA = "0xCFB28C")]
	private void OnSwitch()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xCFB2DC", Offset = "0xCFB2DC", VA = "0xCFB2DC")]
	public PauseIKToggle()
	{
	}
}
[Token(Token = "0x2000173")]
public class GameAIPlayback : UnityEngine.MonoBehaviour, IGameAI
{
	[Token(Token = "0x200072E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34880", Offset = "0xB34880")]
	private sealed class <StartBot>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameAIPlayback <>4__this;

		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <endRot>5__2;

		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <timer>5__4;

		[Token(Token = "0x1700045E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0xDD0038", Offset = "0xDD0038", VA = "0xDD0038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xDD00A0", Offset = "0xDD00A0", VA = "0xDD00A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0xDCFDA8", Offset = "0xDCFDA8", VA = "0xDCFDA8")]
		[DebuggerHidden]
		public <StartBot>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0xDCFE0C", Offset = "0xDCFE0C", VA = "0xDCFE0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0xDCFE10", Offset = "0xDCFE10", VA = "0xDCFE10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0xDD0040", Offset = "0xDD0040", VA = "0xDD0040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> _pos;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _rot;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<float> _time;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _playing;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _paused;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _runningTime;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _score;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _currentKey;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _startPos;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> _event;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> _eventTime;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _currentEventKey;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SonicBoomEffect boostShockwave;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _initPos;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion _initRot;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Multiplayer.Player.User _user;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CharAnimGame anim;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ScoreKeeper scoreKeeper;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xDCEFF0", Offset = "0xDCEFF0", VA = "0xDCEFF0", Slot = "4")]
	public void Init(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xDCF080", Offset = "0xDCF080", VA = "0xDCF080")]
	public void SetFlightPath(FlightRecording recording)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xDCF4A0", Offset = "0xDCF4A0", VA = "0xDCF4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xDCF9E4", Offset = "0xDCF9E4", VA = "0xDCF9E4")]
	private void Finished()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xDCFC70", Offset = "0xDCFC70", VA = "0xDCFC70", Slot = "5")]
	public void Restart(int seed)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xDCFCEC", Offset = "0xDCFCEC", VA = "0xDCFCEC", Slot = "6")]
	public void StartRace()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xDCFD38", Offset = "0xDCFD38", VA = "0xDCFD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB494C0", Offset = "0xB494C0")]
	private IEnumerator StartBot()
	{
		return null;
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xDCFDD4", Offset = "0xDCFDD4", VA = "0xDCFDD4", Slot = "7")]
	public void Pause(bool paused)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xDCFDFC", Offset = "0xDCFDFC", VA = "0xDCFDFC", Slot = "8")]
	public GameObject GetObj()
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xDCFE04", Offset = "0xDCFE04", VA = "0xDCFE04")]
	public GameAIPlayback()
	{
	}
}
[Token(Token = "0x2000174")]
public struct FlightRecording
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Vector3> positions;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public List<Vector3> rotations;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<float> times;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> events;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> eventTimes;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float score;

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xE9AAF8", Offset = "0xE9AAF8", VA = "0xE9AAF8")]
	public FlightRecording(List<Vector3> positions, List<Vector3> rotations, List<float> times, List<int> events, List<float> eventTimes, float score)
	{
	}
}
[Token(Token = "0x2000175")]
public class GameAISpline : UnityEngine.MonoBehaviour, IGameAI
{
	[Token(Token = "0x200072F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34890", Offset = "0xB34890")]
	private sealed class <StartBot>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameAISpline <>4__this;

		[Token(Token = "0x17000460")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xDD2B5C", Offset = "0xDD2B5C", VA = "0xDD2B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xDD2BC4", Offset = "0xDD2BC4", VA = "0xDD2BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E41")]
		[Address(RVA = "0xDD1024", Offset = "0xDD1024", VA = "0xDD1024")]
		[DebuggerHidden]
		public <StartBot>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0xDD2960", Offset = "0xDD2960", VA = "0xDD2960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0xDD2964", Offset = "0xDD2964", VA = "0xDD2964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0xDD2B64", Offset = "0xDD2B64", VA = "0xDD2B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB348A0", Offset = "0xB348A0")]
	private sealed class <Disappear>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameAISpline <>4__this;

		[Token(Token = "0x17000462")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0xDD28F0", Offset = "0xDD28F0", VA = "0xDD28F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0xDD2958", Offset = "0xDD2958", VA = "0xDD2958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0xDD2348", Offset = "0xDD2348", VA = "0xDD2348")]
		[DebuggerHidden]
		public <Disappear>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0xDD2834", Offset = "0xDD2834", VA = "0xDD2834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0xDD2838", Offset = "0xDD2838", VA = "0xDD2838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0xDD28F8", Offset = "0xDD28F8", VA = "0xDD28F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<WayPoint> _wayPoints;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WayPoint _currentWayPoint;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _wayPointTarget;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _wayPointsRegistered;

	[Token(Token = "0x4000AAD")]
	private const float MAX_DOWN_ACCEL = 5f;

	[Token(Token = "0x4000AAE")]
	private const float MAX_UP_ACCEL = 6f;

	[Token(Token = "0x4000AAF")]
	private const float MAX_SPEED = 78f;

	[Token(Token = "0x4000AB0")]
	private const float MIN_SINK_SPEED = 58f;

	[Token(Token = "0x4000AB1")]
	private const float BOOST_SPEED = 30f;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _totalDistance;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _glideSpeed;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _launchTime;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _launchSpeed;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _wasLaunching;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _lastLaunchPos;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _launchPos;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _preLaunchPos;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _normRaw;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _normPos;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _boostAmount;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _boostToAdd;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _boosting;

	[Token(Token = "0x4000AC0")]
	private const float BOOST_FROM_WP = 0.007f;

	[Token(Token = "0x4000AC1")]
	private const float LAUNCH_DURATION = 4.8f;

	[Token(Token = "0x4000AC2")]
	private const float LAUNCH_HANDOFF_DURATION = 2f;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _initPos;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion _initRot;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Multiplayer.Player.User _user;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CharAnimGame anim;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _playing;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform _character;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _bankLerp;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SplineAIPath _path;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve launchCurve;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SonicBoomEffect boostEffect;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private BotSkill _skill;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private AnimationCurve _normalisedSpeedCurve;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _passedCheckpoints;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _passedMarkers;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<float> _checkpointDepths;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<float> _waypointDepths;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _paused;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float _speedMuliplier;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _boostMuliplier;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _difficulty;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _precious;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AnimationCurve boostSamples;

	[Token(Token = "0x4000ADB")]
	private const int BoostSampleAmount = 100;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public CharacterRagdoll ragdoll;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public NormalisedSpline launchSpline;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _easyMode;

	[Token(Token = "0x1400006A")]
	public static event SplineTestA.PastCheckpoint OnCheckpointPassed
	{
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xDD00A8", Offset = "0xDD00A8", VA = "0xDD00A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49524", Offset = "0xB49524")]
		add
		{
		}
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xDD015C", Offset = "0xDD015C", VA = "0xDD015C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49534", Offset = "0xB49534")]
		remove
		{
		}
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xDD0210", Offset = "0xDD0210", VA = "0xDD0210")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xDD0334", Offset = "0xDD0334", VA = "0xDD0334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xDD0380", Offset = "0xDD0380", VA = "0xDD0380")]
	public void SetPath(int seed, BotSkill skillLevel, float dificulty, bool precious)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xDD0558", Offset = "0xDD0558", VA = "0xDD0558")]
	private void OrientateLaunchSpline()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xDD0A50", Offset = "0xDD0A50", VA = "0xDD0A50")]
	private AnimationCurve CreateBoostSamples(float multiplier)
	{
		return null;
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xDD0D70", Offset = "0xDD0D70", VA = "0xDD0D70")]
	private float CreateSample(Vector3 pos, Vector3 fwd, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xDD0760", Offset = "0xDD0760", VA = "0xDD0760")]
	private AnimationCurve CreateNormaliseCurve()
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xDD0EC8", Offset = "0xDD0EC8", VA = "0xDD0EC8", Slot = "4")]
	public void Init(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xDD0F38", Offset = "0xDD0F38", VA = "0xDD0F38", Slot = "6")]
	public void StartRace()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xDD0FB4", Offset = "0xDD0FB4", VA = "0xDD0FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49544", Offset = "0xB49544")]
	private IEnumerator StartBot()
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xDD1050", Offset = "0xDD1050", VA = "0xDD1050")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xDD18A0", Offset = "0xDD18A0", VA = "0xDD18A0")]
	private void FaceDirection(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xDD1DEC", Offset = "0xDD1DEC", VA = "0xDD1DEC")]
	private void CheckForCrash()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xDD22D8", Offset = "0xDD22D8", VA = "0xDD22D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB495A8", Offset = "0xB495A8")]
	private IEnumerator Disappear()
	{
		return null;
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xDD1D30", Offset = "0xDD1D30", VA = "0xDD1D30")]
	private void Finished()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xDD0D10", Offset = "0xDD0D10", VA = "0xDD0D10")]
	public Vector3 GetPointAtNormPos(float normPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xDD2374", Offset = "0xDD2374", VA = "0xDD2374", Slot = "5")]
	public void Restart(int seed)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xDD2504", Offset = "0xDD2504", VA = "0xDD2504", Slot = "7")]
	public void Pause(bool paused)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xDD252C", Offset = "0xDD252C", VA = "0xDD252C", Slot = "8")]
	public GameObject GetObj()
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xDD2534", Offset = "0xDD2534", VA = "0xDD2534")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xDD2820", Offset = "0xDD2820", VA = "0xDD2820")]
	public GameAISpline()
	{
	}
}
[Token(Token = "0x2000176")]
public class WayPoint : BezierPoint
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float boostGained;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int sampleIndex;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 offset;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x13A2744", Offset = "0x13A2744", VA = "0x13A2744")]
	public WayPoint(Vector3 position, Vector3 forward, float boostGained)
	{
	}
}
[Token(Token = "0x2000177")]
public struct BotSkill
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float pathSimplicity;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float boostTargeting;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float safeness;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speedMultiplier;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color gizmosColour;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xD744D4", Offset = "0xD744D4", VA = "0xD744D4")]
	public BotSkill(float pathSimplicity, float boostTargeting, float speedMultiplier, float safeness, Color gizmosColour)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xD744E8", Offset = "0xD744E8", VA = "0xD744E8")]
	public static BotSkill Good()
	{
		return default(BotSkill);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xD74544", Offset = "0xD74544", VA = "0xD74544")]
	public static BotSkill Average()
	{
		return default(BotSkill);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xD74624", Offset = "0xD74624", VA = "0xD74624")]
	public static BotSkill Bad()
	{
		return default(BotSkill);
	}
}
[Token(Token = "0x2000178")]
public interface IGameAI
{
	[Token(Token = "0x6000B00")]
	void Init(Multiplayer.Player.User user);

	[Token(Token = "0x6000B01")]
	void Restart(int seed);

	[Token(Token = "0x6000B02")]
	void StartRace();

	[Token(Token = "0x6000B03")]
	void Pause(bool paused);

	[Token(Token = "0x6000B04")]
	GameObject GetObj();
}
[Token(Token = "0x2000179")]
public class BezierPoint
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 tangentFwd;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 tangentBwd;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 forward;

	[Token(Token = "0x6000B05")]
	public static Vector3 GetPointAtNormPos<T>(float normPos, List<T> points) where T : BezierPoint
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xE6FD9C", Offset = "0xE6FD9C", VA = "0xE6FD9C")]
	public static Vector3 CalculateCubicPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B07")]
	public static void SetTangets<T>(List<T> points) where T : BezierPoint
	{
	}

	[Token(Token = "0x6000B08")]
	public static void SetMidTangents<T>(List<T> points, List<int> toSet) where T : BezierPoint
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xE6FF9C", Offset = "0xE6FF9C", VA = "0xE6FF9C")]
	public BezierPoint()
	{
	}
}
[Token(Token = "0x200017A")]
public class GameFriend : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SonicBoomEffect sonicEffect;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharAnimGame character;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NetworkPlayer netPlayer;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _startPos;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion _startRot;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BodyIK bodyIk;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CharacterRagdoll ragdoll;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _movementDir;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _ragdolling;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CheapFinalIk cheapIk;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x1170704", Offset = "0x1170704", VA = "0x1170704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x1170820", Offset = "0x1170820", VA = "0x1170820")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x11708B4", Offset = "0x11708B4", VA = "0x11708B4")]
	public void Launching(bool ready)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1170A14", Offset = "0x1170A14", VA = "0x1170A14")]
	public void Finished(bool crashed)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x1170E1C", Offset = "0x1170E1C", VA = "0x1170E1C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1170E78", Offset = "0x1170E78", VA = "0x1170E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x1170B68", Offset = "0x1170B68", VA = "0x1170B68")]
	public void Ragdoll()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x1170F68", Offset = "0x1170F68", VA = "0x1170F68")]
	public void UserBoosting(float amount)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x1170E54", Offset = "0x1170E54", VA = "0x1170E54")]
	private void TakeOver()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x1170F84", Offset = "0x1170F84", VA = "0x1170F84")]
	private void ResetCharacter()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x11711BC", Offset = "0x11711BC", VA = "0x11711BC")]
	public GameFriend()
	{
	}
}
[Token(Token = "0x200017B")]
public class MockCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform posParent;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 offset;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xD3FE54", Offset = "0xD3FE54", VA = "0xD3FE54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xD3FF38", Offset = "0xD3FF38", VA = "0xD3FF38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xD4003C", Offset = "0xD4003C", VA = "0xD4003C")]
	private Quaternion FindScreenAngle()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xD40154", Offset = "0xD40154", VA = "0xD40154")]
	public MockCamera()
	{
	}
}
[Token(Token = "0x200017C")]
public class HeadMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headBone;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform neckBone;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform camera;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion caminitRot;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion headInitRot;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion neckInitRot;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool useClamping;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 minClamp;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 maxClamp;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xCE4518", Offset = "0xCE4518", VA = "0xCE4518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xCE4580", Offset = "0xCE4580", VA = "0xCE4580")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xCE477C", Offset = "0xCE477C", VA = "0xCE477C")]
	private float ClampRot(float angle, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xCE4964", Offset = "0xCE4964", VA = "0xCE4964")]
	public HeadMovement()
	{
	}
}
[Token(Token = "0x200017D")]
public class NameDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parent;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform positionRef;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject namePanelPrefab;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Player player;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _parentOffset;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _panel;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _camTf;

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xBBD8C4", Offset = "0xBBD8C4", VA = "0xBBD8C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xBBDCEC", Offset = "0xBBDCEC", VA = "0xBBDCEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xBBDDE4", Offset = "0xBBDDE4", VA = "0xBBDDE4")]
	private void RefreshNameColor(List<Multiplayer.Player.User> obj)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xBBDE50", Offset = "0xBBDE50", VA = "0xBBDE50")]
	private void UpdateCamera(Transform cameraTransform, Transform parentTransform)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xBBDE58", Offset = "0xBBDE58", VA = "0xBBDE58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xBBE0B4", Offset = "0xBBE0B4", VA = "0xBBE0B4")]
	public NameDisplay()
	{
	}
}
[Token(Token = "0x200017E")]
public class NamePanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text text;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text[] shadowTexts;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xBBDBC0", Offset = "0xBBDBC0", VA = "0xBBDBC0")]
	public void Init(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xBBE0BC", Offset = "0xBBE0BC", VA = "0xBBE0BC")]
	public NamePanel()
	{
	}
}
[Token(Token = "0x200017F")]
public class NetworkPlayer : Photon.MonoBehaviour
{
	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool trackBody;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool sync;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A8E4", Offset = "0xB3A8E4")]
	private Vector3 <BodyOffset>k__BackingField;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A8F4", Offset = "0xB3A8F4")]
	private Vector3 <OriginOffset>k__BackingField;

	[Token(Token = "0x170000DC")]
	public Vector3 BodyOffset
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xBC1BCC", Offset = "0xBC1BCC", VA = "0xBC1BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4960C", Offset = "0xB4960C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xBC1BD8", Offset = "0xBC1BD8", VA = "0xBC1BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4961C", Offset = "0xB4961C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public Vector3 OriginOffset
	{
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xBC1BE4", Offset = "0xBC1BE4", VA = "0xBC1BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4962C", Offset = "0xB4962C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xBC1BF0", Offset = "0xBC1BF0", VA = "0xBC1BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4963C", Offset = "0xB4963C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xBC1BFC", Offset = "0xBC1BFC", VA = "0xBC1BFC")]
	protected bool PlayerIsMe()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xBC1CE0", Offset = "0xBC1CE0", VA = "0xBC1CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xBC1D44", Offset = "0xBC1D44", VA = "0xBC1D44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xBC1DA8", Offset = "0xBC1DA8", VA = "0xBC1DA8")]
	public NetworkPlayer()
	{
	}
}
[Token(Token = "0x2000180")]
public class NetworkPlayerSimple : NetworkPlayer
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform head;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform bodyPos;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform bodyRot;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _bodyPostion;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion _bodyRotation;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _headPostion;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion _headRotation;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _wasTrackingBody;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xBC1DB0", Offset = "0xBC1DB0", VA = "0xBC1DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xBC1E00", Offset = "0xBC1E00", VA = "0xBC1E00")]
	private void SyncBody(bool interpolate)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xBC20CC", Offset = "0xBC20CC", VA = "0xBC20CC")]
	public void ResetBody()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xBC1FCC", Offset = "0xBC1FCC", VA = "0xBC1FCC")]
	private void SyncHead()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xBC2118", Offset = "0xBC2118", VA = "0xBC2118")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xBC23A4", Offset = "0xBC23A4", VA = "0xBC23A4")]
	public NetworkPlayerSimple()
	{
	}
}
[Token(Token = "0x2000181")]
public class NetworkRig : NetworkPlayer
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool forceLocal;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] syncObjects;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int handLeftPose;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int handRightPose;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _syncPositions;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion[] _syncRotations;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3A904", Offset = "0xB3A904")]
	public Transform bodyPos;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform bodyRot;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _bodyPos;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion _bodyRot;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3A93C", Offset = "0xB3A93C")]
	public bool trackFingers;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private FingerSyncInfo _leftFingerSyncData;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private FingerSyncInfo _rightFingerSyncData;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public FingerSyncInfo leftFingerSync;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public FingerSyncInfo rightFingerSync;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xBC23AC", Offset = "0xBC23AC", VA = "0xBC23AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xBC25D8", Offset = "0xBC25D8", VA = "0xBC25D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xBC2A78", Offset = "0xBC2A78", VA = "0xBC2A78")]
	private FingerSyncInfo InterpolateFingers(FingerSyncInfo current, FingerSyncInfo target)
	{
		return default(FingerSyncInfo);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xBC2C0C", Offset = "0xBC2C0C", VA = "0xBC2C0C")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xBC31AC", Offset = "0xBC31AC", VA = "0xBC31AC")]
	private void ReceiveFingers(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xBC3150", Offset = "0xBC3150", VA = "0xBC3150")]
	private void SendFingers(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xBC341C", Offset = "0xBC341C", VA = "0xBC341C")]
	private void SendFingers(PhotonStream stream, FingerSyncInfo fingers)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xBC353C", Offset = "0xBC353C", VA = "0xBC353C")]
	public NetworkRig()
	{
	}
}
[Token(Token = "0x2000182")]
public class Player : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000731")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB348B0", Offset = "0xB348B0")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Player <>4__this;

		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceRequest mat;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animate;

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0xC4CA08", Offset = "0xC4CA08", VA = "0xC4CA08")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6002E4E")]
		[Address(RVA = "0xC4CF3C", Offset = "0xC4CF3C", VA = "0xC4CF3C")]
		internal void <SetSkinSelection>b__0(AsyncOperation op)
		{
		}
	}

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A974", Offset = "0xB3A974")]
	private Multiplayer.Player.User <User>k__BackingField;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterAnimation charAnim;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] charRenderers;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useSkyManager;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool useFakeLobbyLight;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Cubemap lobbySky;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Cubemap lobbySkyMask;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D lobbyGradient;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _isSkyInit;

	[Token(Token = "0x170000DE")]
	public Multiplayer.Player.User User
	{
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xC4C860", Offset = "0xC4C860", VA = "0xC4C860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4964C", Offset = "0xB4964C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xC4C868", Offset = "0xC4C868", VA = "0xC4C868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4965C", Offset = "0xB4965C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xC4C870", Offset = "0xC4C870", VA = "0xC4C870")]
	public void Init(Multiplayer.Player.User user)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xC4C890", Offset = "0xC4C890", VA = "0xC4C890")]
	public void SetSkinSelection(SkinPair setting, bool animate = true)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xC4CA10", Offset = "0xC4CA10", VA = "0xC4CA10")]
	private void OnMaterialLoaded(Material mat, bool animate)
	{
	}

	[Token(Token = "0x6000B40")]
	public T GetAnim<T>() where T : CharacterAnimation
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xC4CD24", Offset = "0xC4CD24", VA = "0xC4CD24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xC4CF34", Offset = "0xC4CF34", VA = "0xC4CF34")]
	public Player()
	{
	}
}
[Token(Token = "0x2000183")]
public class CharacterRagdoll : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] rbodies;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform body;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _initPos;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion _initRot;

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xD7EDD8", Offset = "0xD7EDD8", VA = "0xD7EDD8")]
	public void ApplyForce(Vector3 force)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xD7EEE8", Offset = "0xD7EEE8", VA = "0xD7EEE8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xD7EF74", Offset = "0xD7EF74", VA = "0xD7EF74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4966C", Offset = "0xB4966C")]
	private void CacheRigidbodies()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xD7EFCC", Offset = "0xD7EFCC", VA = "0xD7EFCC")]
	public CharacterRagdoll()
	{
	}
}
[Token(Token = "0x2000184")]
public class RagdollTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000732")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB348C0", Offset = "0xB348C0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RagdollTest <>4__this;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody[] <rbodies>5__2;

		[Token(Token = "0x17000464")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E52")]
			[Address(RVA = "0xBDE874", Offset = "0xBDE874", VA = "0xBDE874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xBDE8DC", Offset = "0xBDE8DC", VA = "0xBDE8DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0xBDE678", Offset = "0xBDE678", VA = "0xBDE678")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0xBDE6AC", Offset = "0xBDE6AC", VA = "0xBDE6AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0xBDE6B0", Offset = "0xBDE6B0", VA = "0xBDE6B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0xBDE87C", Offset = "0xBDE87C", VA = "0xBDE87C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject body;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xBDE608", Offset = "0xBDE608", VA = "0xBDE608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB496A4", Offset = "0xB496A4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xBDE6A4", Offset = "0xBDE6A4", VA = "0xBDE6A4")]
	public RagdollTest()
	{
	}
}
[Token(Token = "0x2000185")]
public class SetPlayerToMe : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xCA47B8", Offset = "0xCA47B8", VA = "0xCA47B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xCA487C", Offset = "0xCA487C", VA = "0xCA487C")]
	public SetPlayerToMe()
	{
	}
}
[Token(Token = "0x2000186")]
public class TrackFriendArmIK : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BodyIK bodyIk;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NetworkRig netRig;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _useHandIkL;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _useHandIkR;

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xCB4964", Offset = "0xCB4964", VA = "0xCB4964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xCB4A20", Offset = "0xCB4A20", VA = "0xCB4A20")]
	public TrackFriendArmIK()
	{
	}
}
[Token(Token = "0x2000187")]
public class TrailColourSetter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setManually;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int manualTrail;

	[Token(Token = "0x4000B3F")]
	private const float _FADE_BUFFER = 3f;

	[Token(Token = "0x4000B40")]
	private const float _FADE_MAX = 2f;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _fadeTime;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xCB4A30", Offset = "0xCB4A30", VA = "0xCB4A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xCB4BB4", Offset = "0xCB4BB4", VA = "0xCB4BB4")]
	private void SetTrailColour(Color colour)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xCB4CC0", Offset = "0xCB4CC0", VA = "0xCB4CC0")]
	private Color[] GetParticleColours(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xCB4E48", Offset = "0xCB4E48", VA = "0xCB4E48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xCB4F14", Offset = "0xCB4F14", VA = "0xCB4F14")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xCB4FC8", Offset = "0xCB4FC8", VA = "0xCB4FC8")]
	private void GameStart()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xCB5078", Offset = "0xCB5078", VA = "0xCB5078")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xCB5180", Offset = "0xCB5180", VA = "0xCB5180")]
	public TrailColourSetter()
	{
	}
}
[Token(Token = "0x2000188")]
public static class CrossPlay
{
	[Token(Token = "0x2000733")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB348D0", Offset = "0xB348D0")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result> callback;

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0xD46920", Offset = "0xD46920", VA = "0xD46920")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0xD46E38", Offset = "0xD46E38", VA = "0xD46E38")]
		internal void <FindAndJoinRoom>b__0(Result result, bool needsJoin, string roomid)
		{
		}
	}

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool NeedsJoin;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string RoomId;

	[Token(Token = "0x170000DF")]
	public static CloudRegion Region
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xD467D8", Offset = "0xD467D8", VA = "0xD467D8")]
		get
		{
			return default(CloudRegion);
		}
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xD467E0", Offset = "0xD467E0", VA = "0xD467E0")]
	public static void FindAndJoinRoom(Action<Result> callback, Action inQueue)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xD46928", Offset = "0xD46928", VA = "0xD46928")]
	public static void LeaveQueue([Optional] Action callback)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xD4694C", Offset = "0xD4694C", VA = "0xD4694C")]
	public static void CloseRoom()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xD46970", Offset = "0xD46970", VA = "0xD46970")]
	public static bool IsMobile(PlatformTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xD46988", Offset = "0xD46988", VA = "0xD46988")]
	public static int SelectRandomMap()
	{
		return default(int);
	}
}
[Token(Token = "0x2000189")]
public interface IRoomControl
{
	[Token(Token = "0x1400006B")]
	event Action<RoomData> OnRoomExternallyJoined;

	[Token(Token = "0x6000B5E")]
	void Init();

	[Token(Token = "0x6000B5F")]
	void LeaveRoom(RoomData room);

	[Token(Token = "0x6000B60")]
	void CloseRoom(RoomData room);

	[Token(Token = "0x6000B61")]
	void SetRegion(RoomData room, string region);

	[Token(Token = "0x6000B62")]
	void GetRegion(Action<Result<string>> callback);

	[Token(Token = "0x6000B63")]
	void IsRoomOpen(RoomData room, Action<bool> callback);

	[Token(Token = "0x6000B64")]
	void JoinRoom(ulong roomId, Action<Result<RoomData>> callback);

	[Token(Token = "0x6000B65")]
	void CreatePrivateRoom(Action<Result<RoomData>> callback);
}
[Token(Token = "0x200018A")]
public class InitMultiplayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xCE6A48", Offset = "0xCE6A48", VA = "0xCE6A48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xCE6AE4", Offset = "0xCE6AE4", VA = "0xCE6AE4")]
	private void SetupMultiplayer()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xCE6C5C", Offset = "0xCE6C5C", VA = "0xCE6C5C")]
	public static bool IsEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xCE6CE8", Offset = "0xCE6CE8", VA = "0xCE6CE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xCE6D5C", Offset = "0xCE6D5C", VA = "0xCE6D5C")]
	private void OnRoomsInit(PlatformUser pUser)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xCE6E54", Offset = "0xCE6E54", VA = "0xCE6E54")]
	private void Proceed()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xCE6BDC", Offset = "0xCE6BDC", VA = "0xCE6BDC")]
	private void UpdatePhoton()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xCE7028", Offset = "0xCE7028", VA = "0xCE7028")]
	public InitMultiplayer()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xCE7030", Offset = "0xCE7030", VA = "0xCE7030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49728", Offset = "0xB49728")]
	private void <SetupMultiplayer>b__1_0(Result initResult)
	{
	}
}
[Token(Token = "0x200018B")]
public interface IRoomInvite
{
	[Token(Token = "0x1400006C")]
	event Action<RoomInvite> OnInviteRecieved;

	[Token(Token = "0x6000B71")]
	void InitRoomCreation();

	[Token(Token = "0x6000B72")]
	void GetFriends(Action<Result<List<PlatformUser>>> callback);

	[Token(Token = "0x6000B73")]
	void InviteFriend(PlatformUser person, RoomData room, Action<Result> callback);

	[Token(Token = "0x6000B74")]
	void GetRoomInvites(Action<List<RoomInvite>> callback);

	[Token(Token = "0x6000B75")]
	bool UsesAvatarLinks();

	[Token(Token = "0x6000B76")]
	void GetAvatar(PlatformUser person, Action<Sprite> callback);
}
[Token(Token = "0x200018C")]
public class PlatformUser
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong id;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string picLink;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool online;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string inviteToken;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool inParty;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite pic;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool muted;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public PlatformTarget platform;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xC4C06C", Offset = "0xC4C06C", VA = "0xC4C06C")]
	public static PlatformUser Offline()
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xC4BE28", Offset = "0xC4BE28", VA = "0xC4BE28")]
	public PlatformUser()
	{
	}
}
[Token(Token = "0x200018D")]
public struct RoomInvite
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong roomId;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public PlatformUser sender;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime sentTime;
}
[Token(Token = "0x200018E")]
public static class RoomInviter
{
	[Serializable]
	[Token(Token = "0x2000734")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB348E0", Offset = "0xB348E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RoomInvite> <>9__17_0;

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0xC941F4", Offset = "0xC941F4", VA = "0xC941F4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0xC941FC", Offset = "0xC941FC", VA = "0xC941FC")]
		internal int <MergeAddInvites>b__17_0(RoomInvite i1, RoomInvite i2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000735")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB348F0", Offset = "0xB348F0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0xC9313C", Offset = "0xC9313C", VA = "0xC9313C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0xC94210", Offset = "0xC94210", VA = "0xC94210")]
		internal void <CreatePrivateRoom>b__0(Result<RoomData> r)
		{
		}
	}

	[Token(Token = "0x2000736")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34900", Offset = "0xB34900")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<List<PlatformUser>>> callback;

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0xC937D8", Offset = "0xC937D8", VA = "0xC937D8")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0xC94410", Offset = "0xC94410", VA = "0xC94410")]
		internal void <GetInvitableFriends>b__0(Result<List<PlatformUser>> result)
		{
		}
	}

	[Token(Token = "0x2000737")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34910", Offset = "0xB34910")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong id;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformUser friend;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result> callback;

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0xC93AD8", Offset = "0xC93AD8", VA = "0xC93AD8")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0xC94660", Offset = "0xC94660", VA = "0xC94660")]
		internal void <InviteFriend>b__0(Result result)
		{
		}
	}

	[Token(Token = "0x2000738")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34920", Offset = "0xB34920")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlatformUser user;

		[Token(Token = "0x4002C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Sprite> callback;

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0xC93EC4", Offset = "0xC93EC4", VA = "0xC93EC4")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0xC947C8", Offset = "0xC947C8", VA = "0xC947C8")]
		internal void <GetUserPic>b__0(Texture2D t)
		{
		}
	}

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IRoomInvite _inviter;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<ulong, PlatformUser> _invitableFriends;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<PlatformUser> _invitedFriends;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static HashSet<ulong> _invitedFriendIds;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static List<RoomInvite> CachedInvites;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool PrepareForInviting;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private static bool _downloadPics;

	[Token(Token = "0x1400006D")]
	public static event Action<RoomInvite> OnInviteRecieved
	{
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xC921FC", Offset = "0xC921FC", VA = "0xC921FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49758", Offset = "0xB49758")]
		add
		{
		}
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xC922EC", Offset = "0xC922EC", VA = "0xC922EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49768", Offset = "0xB49768")]
		remove
		{
		}
	}

	[Token(Token = "0x1400006E")]
	public static event Action<List<PlatformUser>> OnPartyUpdated
	{
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xC923DC", Offset = "0xC923DC", VA = "0xC923DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49778", Offset = "0xB49778")]
		add
		{
		}
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC924CC", Offset = "0xC924CC", VA = "0xC924CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49788", Offset = "0xB49788")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xC925BC", Offset = "0xC925BC", VA = "0xC925BC")]
	public static void Init(bool editorMode = false)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xC92910", Offset = "0xC92910", VA = "0xC92910")]
	private static IRoomInvite GetWrapper()
	{
		return null;
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xC92990", Offset = "0xC92990", VA = "0xC92990")]
	private static void OnInitialRoomInvitesReturned(List<RoomInvite> invs)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xC92EF0", Offset = "0xC92EF0", VA = "0xC92EF0")]
	private static void _OnInviteRecieved(RoomInvite invite)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xC92B40", Offset = "0xC92B40", VA = "0xC92B40")]
	private static void MergeAddInvites(RoomInvite inv, bool sort)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xC9307C", Offset = "0xC9307C", VA = "0xC9307C")]
	public static void CreatePrivateRoom(Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xC93224", Offset = "0xC93224", VA = "0xC93224")]
	private static void OnPartyChanged(List<Multiplayer.Player.User> party)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xC93698", Offset = "0xC93698", VA = "0xC93698")]
	public static void GetInvitableFriends(Action<Result<List<PlatformUser>>> callback)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xC937E0", Offset = "0xC937E0", VA = "0xC937E0")]
	public static void InviteFriend(ulong id, Action<Result> callback)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xC93AE0", Offset = "0xC93AE0", VA = "0xC93AE0")]
	public static bool HasInvitedFriend(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xC93B64", Offset = "0xC93B64", VA = "0xC93B64")]
	public static void ReadyToInvite()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xC932DC", Offset = "0xC932DC", VA = "0xC932DC")]
	public static List<PlatformUser> GetParty()
	{
		return null;
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xC93C78", Offset = "0xC93C78", VA = "0xC93C78")]
	public static void GetUserPic(PlatformUser user, Action<Sprite> callback)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xC93ECC", Offset = "0xC93ECC", VA = "0xC93ECC")]
	public static void Leave()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC93F88", Offset = "0xC93F88", VA = "0xC93F88")]
	public static RoomInvite GetNextInvite()
	{
		return default(RoomInvite);
	}
}
[Token(Token = "0x200018F")]
public class FriendList
{
	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PlatformUser> friends;

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xDCEFE8", Offset = "0xDCEFE8", VA = "0xDCEFE8")]
	public FriendList()
	{
	}
}
[Token(Token = "0x2000190")]
public class CoordLaunchTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xD42998", Offset = "0xD42998", VA = "0xD42998")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xD43140", Offset = "0xD43140", VA = "0xD43140")]
	private void PrintAndReport(string msg)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xD43164", Offset = "0xD43164", VA = "0xD43164")]
	public CoordLaunchTest()
	{
	}
}
[Token(Token = "0x2000191")]
public interface ILaunchChecker
{
	[Token(Token = "0x6000B91")]
	void InitLaunchChecker();

	[Token(Token = "0x6000B92")]
	void LaunchedInClosedRoom(Action<bool, RoomData> callback);

	[Token(Token = "0x6000B93")]
	void LaunchedWithInvite(Action<bool, ulong> callback);

	[Token(Token = "0x6000B94")]
	void RequestPartyCommunication();

	[Token(Token = "0x6000B95")]
	void SendRegionToLaunchRoom(string region);

	[Token(Token = "0x6000B96")]
	void AwaitRegion(Action<string> callback);

	[Token(Token = "0x6000B97")]
	void GetPlatformUser(Action<PlatformUser> callback);
}
[Token(Token = "0x2000192")]
public class MockLaunchChecker : ILaunchChecker
{
	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xBB78F4", Offset = "0xBB78F4", VA = "0xBB78F4", Slot = "4")]
	public void InitLaunchChecker()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xBB78F8", Offset = "0xBB78F8", VA = "0xBB78F8", Slot = "5")]
	public void LaunchedInClosedRoom(Action<bool, RoomData> callback)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xBB796C", Offset = "0xBB796C", VA = "0xBB796C", Slot = "6")]
	public void LaunchedWithInvite(Action<bool, ulong> callback)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xBB79D4", Offset = "0xBB79D4", VA = "0xBB79D4", Slot = "7")]
	public void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xBB7A34", Offset = "0xBB7A34", VA = "0xBB7A34", Slot = "8")]
	public void SendRegionToLaunchRoom(string region)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xBB7A94", Offset = "0xBB7A94", VA = "0xBB7A94", Slot = "9")]
	public void AwaitRegion(Action<string> callback)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xBB7AF4", Offset = "0xBB7AF4", VA = "0xBB7AF4", Slot = "10")]
	public void GetPlatformUser(Action<PlatformUser> callback)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xBB7B60", Offset = "0xBB7B60", VA = "0xBB7B60")]
	public MockLaunchChecker()
	{
	}
}
[Token(Token = "0x2000193")]
public class OculusLaunchChecker : ILaunchChecker
{
	[Token(Token = "0x2000739")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34930", Offset = "0xB34930")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OculusLaunchChecker <>4__this;

		[Token(Token = "0x4002C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] bytes;

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0x105D440", Offset = "0x105D440", VA = "0x105D440")]
		public <>c__DisplayClass10_0()
		{
		}
	}

	[Token(Token = "0x200073A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34940", Offset = "0xB34940")]
	private sealed class <>c__DisplayClass10_1
	{
		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass10_0 CS$<>8__locals1;

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0x105D448", Offset = "0x105D448", VA = "0x105D448")]
		public <>c__DisplayClass10_1()
		{
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0x105DBBC", Offset = "0x105DBBC", VA = "0x105DBBC")]
		internal void <SendRegionToLaunchRoom>b__0()
		{
		}
	}

	[Token(Token = "0x200073B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34950", Offset = "0xB34950")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<PlatformUser> callback;

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0x105D5D4", Offset = "0x105D5D4", VA = "0x105D5D4")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x105DC68", Offset = "0x105DC68", VA = "0x105DC68")]
		internal void <GetPlatformUser>b__0(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
		{
		}
	}

	[Token(Token = "0x200073C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34960", Offset = "0xB34960")]
	private sealed class <PollForMessage>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusLaunchChecker <>4__this;

		[Token(Token = "0x17000466")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0x105DFD4", Offset = "0x105DFD4", VA = "0x105DFD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0x105E03C", Offset = "0x105E03C", VA = "0x105E03C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0x105D7B4", Offset = "0x105D7B4", VA = "0x105D7B4")]
		[DebuggerHidden]
		public <PollForMessage>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0x105DDCC", Offset = "0x105DDCC", VA = "0x105DDCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E69")]
		[Address(RVA = "0x105DDD0", Offset = "0x105DDD0", VA = "0x105DDD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0x105DFDC", Offset = "0x105DFDC", VA = "0x105DFDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LaunchDetails _launchDetails;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoomData _room;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<ulong, Action> _messagesToSend;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HashSet<ulong> _connectedUsers;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<string> _regCallback;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isHost;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x105CAA8", Offset = "0x105CAA8", VA = "0x105CAA8", Slot = "4")]
	public void InitLaunchChecker()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x105CBE8", Offset = "0x105CBE8", VA = "0x105CBE8", Slot = "5")]
	public void LaunchedInClosedRoom(Action<bool, RoomData> callback)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x105CEC0", Offset = "0x105CEC0", VA = "0x105CEC0", Slot = "6")]
	public void LaunchedWithInvite(Action<bool, ulong> callback)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x105D0A4", Offset = "0x105D0A4", VA = "0x105D0A4", Slot = "7")]
	public void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x105D184", Offset = "0x105D184", VA = "0x105D184", Slot = "8")]
	public void SendRegionToLaunchRoom(string region)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x105D450", Offset = "0x105D450", VA = "0x105D450", Slot = "9")]
	public void AwaitRegion(Action<string> callback)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x105D4D4", Offset = "0x105D4D4", VA = "0x105D4D4", Slot = "10")]
	public void GetPlatformUser(Action<PlatformUser> callback)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x105D5DC", Offset = "0x105D5DC", VA = "0x105D5DC")]
	private void OnPeerRequestReceived(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> message)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x105D744", Offset = "0x105D744", VA = "0x105D744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49798", Offset = "0xB49798")]
	private IEnumerator PollForMessage()
	{
		return null;
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x105D7E0", Offset = "0x105D7E0", VA = "0x105D7E0")]
	private void OnPeerStateChanged(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> message)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x105DB24", Offset = "0x105DB24", VA = "0x105DB24")]
	public OculusLaunchChecker()
	{
	}
}
[Token(Token = "0x2000194")]
public class OculusPartyMediator : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200073D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34970", Offset = "0xB34970")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Result<RoomData>> <>9__12_0;

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0x1060B54", Offset = "0x1060B54", VA = "0x1060B54")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E6F")]
		[Address(RVA = "0x1060B5C", Offset = "0x1060B5C", VA = "0x1060B5C")]
		internal void <CacheLaunchDetails>b__12_0(Result<RoomData> result)
		{
		}
	}

	[Token(Token = "0x200073E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34980", Offset = "0xB34980")]
	private sealed class <PollForMessage>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000468")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E73")]
			[Address(RVA = "0x1060FE4", Offset = "0x1060FE4", VA = "0x1060FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0x106104C", Offset = "0x106104C", VA = "0x106104C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0x10602B4", Offset = "0x10602B4", VA = "0x10602B4")]
		[DebuggerHidden]
		public <PollForMessage>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0x1060CEC", Offset = "0x1060CEC", VA = "0x1060CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0x1060CF0", Offset = "0x1060CF0", VA = "0x1060CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0x1060FEC", Offset = "0x1060FEC", VA = "0x1060FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200073F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34990", Offset = "0xB34990")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] bytes;

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0x10609B8", Offset = "0x10609B8", VA = "0x10609B8")]
		public <>c__DisplayClass19_0()
		{
		}
	}

	[Token(Token = "0x2000740")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB349A0", Offset = "0xB349A0")]
	private sealed class <>c__DisplayClass19_1
	{
		[Token(Token = "0x4002C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4002C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass19_0 CS$<>8__locals1;

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0x10609C0", Offset = "0x10609C0", VA = "0x10609C0")]
		public <>c__DisplayClass19_1()
		{
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0x1060C28", Offset = "0x1060C28", VA = "0x1060C28")]
		internal void <SendMessageToParty>b__0()
		{
		}
	}

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LaunchDetails _launchDetails;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RoomData _room;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool editorOnlineMode;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int editorRoomId;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool CoordinatedLaunch;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool AwaitingRoomRegion;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<ulong, Action> _messagesToSend;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static HashSet<ulong> _connectedUsers;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action _initCallback;

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x105F380", Offset = "0x105F380", VA = "0x105F380")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x105F5F8", Offset = "0x105F5F8", VA = "0x105F5F8")]
	public void Init(Action callback)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x105F580", Offset = "0x105F580", VA = "0x105F580")]
	public static bool IsEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x105F674", Offset = "0x105F674", VA = "0x105F674")]
	private void CacheLaunchDetails()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x105FB28", Offset = "0x105FB28", VA = "0x105FB28")]
	private void GetUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x105FD3C", Offset = "0x105FD3C", VA = "0x105FD3C")]
	private void OnUserInitialised()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x105FFFC", Offset = "0x105FFFC", VA = "0x105FFFC")]
	private void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x10600E8", Offset = "0x10600E8", VA = "0x10600E8")]
	private void OnPeerRequestReceived(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> message)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1060254", Offset = "0x1060254", VA = "0x1060254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB497FC", Offset = "0xB497FC")]
	private IEnumerator PollForMessage()
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x10602E0", Offset = "0x10602E0", VA = "0x10602E0")]
	private static void OnPeerStateChanged(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> message)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1060658", Offset = "0x1060658", VA = "0x1060658")]
	public static void SendMessageToParty(string message)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x10609C8", Offset = "0x10609C8", VA = "0x10609C8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1060A28", Offset = "0x1060A28", VA = "0x1060A28")]
	public OculusPartyMediator()
	{
	}
}
[Token(Token = "0x2000195")]
public class PicoLaunchChecker : ILaunchChecker
{
	[Token(Token = "0x2000741")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB349B0", Offset = "0xB349B0")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4002C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<PlatformUser> callback;

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0xC4BE20", Offset = "0xC4BE20", VA = "0xC4BE20")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0xC4BE38", Offset = "0xC4BE38", VA = "0xC4BE38")]
		internal void <GetPlatformUser>b__0(Pico.Platform.Message<Pico.Platform.Models.User> msg)
		{
		}
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xC4B9B0", Offset = "0xC4B9B0", VA = "0xC4B9B0", Slot = "4")]
	public void InitLaunchChecker()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC4B9B4", Offset = "0xC4B9B4", VA = "0xC4B9B4", Slot = "5")]
	public void LaunchedInClosedRoom(Action<bool, RoomData> callback)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC4BA28", Offset = "0xC4BA28", VA = "0xC4BA28", Slot = "6")]
	public void LaunchedWithInvite(Action<bool, ulong> callback)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xC4BA90", Offset = "0xC4BA90", VA = "0xC4BA90", Slot = "7")]
	public void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xC4BAF0", Offset = "0xC4BAF0", VA = "0xC4BAF0", Slot = "8")]
	public void SendRegionToLaunchRoom(string region)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xC4BB50", Offset = "0xC4BB50", VA = "0xC4BB50", Slot = "9")]
	public void AwaitRegion(Action<string> callback)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xC4BBB0", Offset = "0xC4BBB0", VA = "0xC4BBB0", Slot = "10")]
	public void GetPlatformUser(Action<PlatformUser> callback)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC4BE30", Offset = "0xC4BE30", VA = "0xC4BE30")]
	public PicoLaunchChecker()
	{
	}
}
[Token(Token = "0x2000196")]
public class QiyuLaunchChecker : ILaunchChecker
{
	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xBDCE54", Offset = "0xBDCE54", VA = "0xBDCE54", Slot = "4")]
	public void InitLaunchChecker()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xBDCE58", Offset = "0xBDCE58", VA = "0xBDCE58", Slot = "5")]
	public void LaunchedInClosedRoom(Action<bool, RoomData> callback)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xBDCECC", Offset = "0xBDCECC", VA = "0xBDCECC", Slot = "6")]
	public void LaunchedWithInvite(Action<bool, ulong> callback)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xBDCF34", Offset = "0xBDCF34", VA = "0xBDCF34", Slot = "7")]
	public void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xBDCF94", Offset = "0xBDCF94", VA = "0xBDCF94", Slot = "8")]
	public void SendRegionToLaunchRoom(string region)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xBDCFF4", Offset = "0xBDCFF4", VA = "0xBDCFF4", Slot = "9")]
	public void AwaitRegion(Action<string> callback)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xBDD054", Offset = "0xBDD054", VA = "0xBDD054", Slot = "10")]
	public void GetPlatformUser(Action<PlatformUser> callback)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xBDD0C0", Offset = "0xBDD0C0", VA = "0xBDD0C0")]
	public QiyuLaunchChecker()
	{
	}
}
[Token(Token = "0x2000197")]
public static class RoomLaunchChecker
{
	[Serializable]
	[Token(Token = "0x2000742")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB349C0", Offset = "0xB349C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool, ulong> <>9__16_2;

		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<bool, RoomData> <>9__16_1;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<PlatformUser> <>9__16_0;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__18_0;

		[Token(Token = "0x4002C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Result<RoomData>> <>9__20_0;

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0xC96280", Offset = "0xC96280", VA = "0xC96280")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0xC96288", Offset = "0xC96288", VA = "0xC96288")]
		internal void <Init>b__16_0(PlatformUser user)
		{
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0xC9643C", Offset = "0xC9643C", VA = "0xC9643C")]
		internal void <Init>b__16_1(bool inRoom, RoomData room)
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0xC96684", Offset = "0xC96684", VA = "0xC96684")]
		internal void <Init>b__16_2(bool hasInv, ulong roomId)
		{
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0xC9671C", Offset = "0xC9671C", VA = "0xC9671C")]
		internal void <StartFallbackTimeout>b__18_0()
		{
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0xC968F4", Offset = "0xC968F4", VA = "0xC968F4")]
		internal void <HandInviteLaunch>b__20_0(Result<RoomData> result)
		{
		}
	}

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ILaunchChecker _checker;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9A4", Offset = "0xB3A9A4")]
	private static bool <AwaitingRegion>k__BackingField;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9B4", Offset = "0xB3A9B4")]
	private static bool <ReportRegionToRoom>k__BackingField;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9C4", Offset = "0xB3A9C4")]
	private static bool <SkipTitle>k__BackingField;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static PlatformUser _user;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Action<PlatformUser> _initCallback;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool _editorMode;

	[Token(Token = "0x170000E0")]
	public static bool AwaitingRegion
	{
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xC94860", Offset = "0xC94860", VA = "0xC94860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49860", Offset = "0xB49860")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xC948C8", Offset = "0xC948C8", VA = "0xC948C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49870", Offset = "0xB49870")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public static bool ReportRegionToRoom
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xC94938", Offset = "0xC94938", VA = "0xC94938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49880", Offset = "0xB49880")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xC949A0", Offset = "0xC949A0", VA = "0xC949A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49890", Offset = "0xB49890")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public static bool SkipTitle
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xC94A10", Offset = "0xC94A10", VA = "0xC94A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB498A0", Offset = "0xB498A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xC94A78", Offset = "0xC94A78", VA = "0xC94A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB498B0", Offset = "0xB498B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xC94AE8", Offset = "0xC94AE8", VA = "0xC94AE8")]
	public static void Init(Action<PlatformUser> callback, bool editorMode = false)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xC94DB0", Offset = "0xC94DB0", VA = "0xC94DB0")]
	private static ILaunchChecker GetWrapper()
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xC94E30", Offset = "0xC94E30", VA = "0xC94E30")]
	private static void StartFallbackTimeout()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xC94F54", Offset = "0xC94F54", VA = "0xC94F54")]
	private static void HandleClosedRoomLaunch(RoomData room)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xC95580", Offset = "0xC95580", VA = "0xC95580")]
	private static void HandInviteLaunch(ulong roomId)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xC954C8", Offset = "0xC954C8", VA = "0xC954C8")]
	private static void SendCallback()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xC95B60", Offset = "0xC95B60", VA = "0xC95B60")]
	private static void HandleNormalLaunch()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xC95CB4", Offset = "0xC95CB4", VA = "0xC95CB4")]
	private static bool RoomValid(RoomData room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xC952E0", Offset = "0xC952E0", VA = "0xC952E0")]
	private static void RequestPartyComs()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xC953B8", Offset = "0xC953B8", VA = "0xC953B8")]
	private static void AwaitRegion()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xC95D18", Offset = "0xC95D18", VA = "0xC95D18")]
	private static void OnRegionRecieved(string region)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xC96070", Offset = "0xC96070", VA = "0xC96070")]
	public static void SendRegionToLaunchRoom(string region)
	{
	}
}
[Token(Token = "0x2000198")]
public class ViveportLaunchChecker : ILaunchChecker
{
	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x13A0A00", Offset = "0x13A0A00", VA = "0x13A0A00", Slot = "4")]
	public void InitLaunchChecker()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x13A0A04", Offset = "0x13A0A04", VA = "0x13A0A04", Slot = "5")]
	public void LaunchedInClosedRoom(Action<bool, RoomData> callback)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x13A0A78", Offset = "0x13A0A78", VA = "0x13A0A78", Slot = "6")]
	public void LaunchedWithInvite(Action<bool, ulong> callback)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x13A0AE0", Offset = "0x13A0AE0", VA = "0x13A0AE0", Slot = "7")]
	public void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x13A0B40", Offset = "0x13A0B40", VA = "0x13A0B40", Slot = "8")]
	public void SendRegionToLaunchRoom(string region)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x13A0BA0", Offset = "0x13A0BA0", VA = "0x13A0BA0", Slot = "9")]
	public void AwaitRegion(Action<string> callback)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x13A0C00", Offset = "0x13A0C00", VA = "0x13A0C00", Slot = "10")]
	public void GetPlatformUser(Action<PlatformUser> callback)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x13A0CB4", Offset = "0x13A0CB4", VA = "0x13A0CB4")]
	public ViveportLaunchChecker()
	{
	}
}
[Token(Token = "0x2000199")]
public static class MatchFinder
{
	[Serializable]
	[Token(Token = "0x2000743")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB349D0", Offset = "0xB349D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Result> <>9__10_0;

		[Token(Token = "0x4002C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__10_1;

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0xD3C76C", Offset = "0xD3C76C", VA = "0xD3C76C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0xD3C774", Offset = "0xD3C774", VA = "0xD3C774")]
		internal void <FindGame>b__10_0(Result r)
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0xD3CA68", Offset = "0xD3CA68", VA = "0xD3CA68")]
		internal void <FindGame>b__10_1()
		{
		}
	}

	[Token(Token = "0x4000B72")]
	private const int CountDownLength = 60;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _canceledSearch;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool Searching;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool UsingCrossPlay;

	[Token(Token = "0x170000E3")]
	public static int CountDown
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xD3C3A8", Offset = "0xD3C3A8", VA = "0xD3C3A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xD3C410", Offset = "0xD3C410", VA = "0xD3C410")]
		set
		{
		}
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xD3C47C", Offset = "0xD3C47C", VA = "0xD3C47C")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xD3C54C", Offset = "0xD3C54C", VA = "0xD3C54C")]
	private static void OnFoundRoom(RoomData obj)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xD3C5DC", Offset = "0xD3C5DC", VA = "0xD3C5DC")]
	private static void OnJoinRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xD2FE54", Offset = "0xD2FE54", VA = "0xD2FE54")]
	public static void FindGame()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xD30110", Offset = "0xD30110", VA = "0xD30110")]
	public static void CancelSearch()
	{
	}
}
[Token(Token = "0x200019A")]
public static class RoomMatchmaker
{
	[Serializable]
	[Token(Token = "0x2000744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB349E0", Offset = "0xB349E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<RoomData> <>9__13_0;

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__13_1;

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0xC989F8", Offset = "0xC989F8", VA = "0xC989F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0xC98A00", Offset = "0xC98A00", VA = "0xC98A00")]
		internal void <_OnJoinRoom>b__13_0(RoomData newRoom)
		{
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0xC98B44", Offset = "0xC98B44", VA = "0xC98B44")]
		internal void <_OnJoinRoom>b__13_1()
		{
		}
	}

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IRoomMatchmake _matchMaker;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9F4", Offset = "0xB3A9F4")]
	private static bool <MatchMaking>k__BackingField;

	[Token(Token = "0x170000E4")]
	public static bool MatchMaking
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xC97D4C", Offset = "0xC97D4C", VA = "0xC97D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49900", Offset = "0xB49900")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC97DB4", Offset = "0xC97DB4", VA = "0xC97DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49910", Offset = "0xB49910")]
		private set
		{
		}
	}

	[Token(Token = "0x1400006F")]
	public static event Action<RoomData> OnFoundRoom
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC9798C", Offset = "0xC9798C", VA = "0xC9798C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB498C0", Offset = "0xB498C0")]
		add
		{
		}
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xC97A7C", Offset = "0xC97A7C", VA = "0xC97A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB498D0", Offset = "0xB498D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000070")]
	public static event Action<RoomData> OnJoinRoom
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC97B6C", Offset = "0xC97B6C", VA = "0xC97B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB498E0", Offset = "0xB498E0")]
		add
		{
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xC97C5C", Offset = "0xC97C5C", VA = "0xC97C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB498F0", Offset = "0xB498F0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xC97E24", Offset = "0xC97E24", VA = "0xC97E24")]
	public static void Init(bool editorMode = false)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xC98040", Offset = "0xC98040", VA = "0xC98040")]
	private static IRoomMatchmake GetWrapper()
	{
		return null;
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xC980C0", Offset = "0xC980C0", VA = "0xC980C0")]
	private static void _OnJoinRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xC98434", Offset = "0xC98434", VA = "0xC98434")]
	private static bool IsRoomReady(RoomData room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xC98664", Offset = "0xC98664", VA = "0xC98664")]
	public static void FindAndJoinRoom(Action<bool> queueSuccessCallback)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xC98794", Offset = "0xC98794", VA = "0xC98794")]
	public static void LeaveQueue([Optional] Action callback)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xC988C8", Offset = "0xC988C8", VA = "0xC988C8")]
	public static void OnQuit()
	{
	}
}
[Token(Token = "0x200019B")]
public interface IRoomMatchmake
{
	[Token(Token = "0x14000071")]
	event Action<RoomData> OnJoinRoom;

	[Token(Token = "0x6000BFC")]
	void InitMatchMaking();

	[Token(Token = "0x6000BFD")]
	void FindAndJoinRoom(Action<bool> queueSuccessCallback);

	[Token(Token = "0x6000BFE")]
	void LeaveQueue(Action callback);
}
[Token(Token = "0x200019C")]
public class MockRoomControl : IRoomMatchmake, IRoomControl, IRoomInvite
{
	[Token(Token = "0x2000745")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB349F0", Offset = "0xB349F0")]
	private sealed class <Update>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MockRoomControl <>4__this;

		[Token(Token = "0x1700046A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0xBB91D8", Offset = "0xBB91D8", VA = "0xBB91D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0xBB9240", Offset = "0xBB9240", VA = "0xBB9240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0xBB829C", Offset = "0xBB829C", VA = "0xBB829C")]
		[DebuggerHidden]
		public <Update>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0xBB90A8", Offset = "0xBB90A8", VA = "0xBB90A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0xBB90AC", Offset = "0xBB90AC", VA = "0xBB90AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0xBB91E0", Offset = "0xBB91E0", VA = "0xBB91E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000746")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A00", Offset = "0xB34A00")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> queueSuccessCallback;

		[Token(Token = "0x4002CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MockRoomControl <>4__this;

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0xBB83B0", Offset = "0xBB83B0", VA = "0xBB83B0")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0xBB8F60", Offset = "0xBB8F60", VA = "0xBB8F60")]
		internal void <FindAndJoinRoom>b__0()
		{
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0xBB8FC4", Offset = "0xBB8FC4", VA = "0xBB8FC4")]
		internal void <FindAndJoinRoom>b__1()
		{
		}
	}

	[Token(Token = "0x2000747")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A10", Offset = "0xB34A10")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4002CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0xBB8844", Offset = "0xBB8844", VA = "0xBB8844")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0xBB8B4C", Offset = "0xBB8B4C", VA = "0xBB8B4C")]
		internal void <CreatePrivateRoom>b__0()
		{
		}
	}

	[Token(Token = "0x2000748")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A20", Offset = "0xB34A20")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<List<PlatformUser>>> callback;

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0xBB88EC", Offset = "0xBB88EC", VA = "0xBB88EC")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0xBB8C58", Offset = "0xBB8C58", VA = "0xBB8C58")]
		internal void <GetFriends>b__0()
		{
		}
	}

	[Token(Token = "0x2000749")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A30", Offset = "0xB34A30")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4002CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result> callback;

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0xBB8998", Offset = "0xBB8998", VA = "0xBB8998")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0xBB8EC8", Offset = "0xBB8EC8", VA = "0xBB8EC8")]
		internal void <InviteFriend>b__0()
		{
		}
	}

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _cancelledSearch;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _roomOpen;

	[Token(Token = "0x14000072")]
	public event Action<RoomData> OnJoinRoom
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xBB80E0", Offset = "0xBB80E0", VA = "0xBB80E0", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49940", Offset = "0xB49940")]
		add
		{
		}
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xBB8184", Offset = "0xBB8184", VA = "0xBB8184", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49950", Offset = "0xB49950")]
		remove
		{
		}
	}

	[Token(Token = "0x14000073")]
	public event Action<RoomInvite> OnInviteRecieved
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xBB8510", Offset = "0xBB8510", VA = "0xBB8510", Slot = "19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB499C4", Offset = "0xB499C4")]
		add
		{
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xBB85B4", Offset = "0xBB85B4", VA = "0xBB85B4", Slot = "20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB499D4", Offset = "0xB499D4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000074")]
	public event Action<RoomData> OnRoomExternallyJoined
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xBB8658", Offset = "0xBB8658", VA = "0xBB8658", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB499E4", Offset = "0xB499E4")]
		add
		{
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xBB86FC", Offset = "0xBB86FC", VA = "0xBB86FC", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB499F4", Offset = "0xB499F4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xBB8228", Offset = "0xBB8228", VA = "0xBB8228", Slot = "6")]
	public void InitMatchMaking()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xBB822C", Offset = "0xBB822C", VA = "0xBB822C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49960", Offset = "0xB49960")]
	private IEnumerator Update()
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xBB82C8", Offset = "0xBB82C8", VA = "0xBB82C8", Slot = "7")]
	public void FindAndJoinRoom(Action<bool> queueSuccessCallback)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xBB83B8", Offset = "0xBB83B8", VA = "0xBB83B8", Slot = "8")]
	public void LeaveQueue(Action callback)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xBB83D4", Offset = "0xBB83D4", VA = "0xBB83D4", Slot = "11")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xBB83D8", Offset = "0xBB83D8", VA = "0xBB83D8", Slot = "12")]
	public void LeaveRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xBB83DC", Offset = "0xBB83DC", VA = "0xBB83DC", Slot = "13")]
	public void CloseRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xBB83E4", Offset = "0xBB83E4", VA = "0xBB83E4")]
	public void KickPlayer(RoomData room, ulong matchMakingId, Action callback)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xBB83E8", Offset = "0xBB83E8", VA = "0xBB83E8", Slot = "14")]
	public void SetRegion(RoomData room, string region)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xBB83EC", Offset = "0xBB83EC", VA = "0xBB83EC", Slot = "15")]
	public void GetRegion(Action<Result<string>> callback)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xBB83F0", Offset = "0xBB83F0", VA = "0xBB83F0", Slot = "16")]
	public void IsRoomOpen(RoomData room, Action<bool> callback)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xBB8464", Offset = "0xBB8464", VA = "0xBB8464", Slot = "17")]
	public void JoinRoom(ulong roomId, Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xBB87A0", Offset = "0xBB87A0", VA = "0xBB87A0", Slot = "21")]
	public void InitRoomCreation()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xBB87A4", Offset = "0xBB87A4", VA = "0xBB87A4", Slot = "18")]
	public void CreatePrivateRoom(Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xBB884C", Offset = "0xBB884C", VA = "0xBB884C", Slot = "22")]
	public void GetFriends(Action<Result<List<PlatformUser>>> callback)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xBB88F4", Offset = "0xBB88F4", VA = "0xBB88F4", Slot = "23")]
	public void InviteFriend(PlatformUser person, RoomData room, Action<Result> callback)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xBB89A0", Offset = "0xBB89A0", VA = "0xBB89A0", Slot = "24")]
	public void GetRoomInvites(Action<List<RoomInvite>> callback)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xBB8A28", Offset = "0xBB8A28", VA = "0xBB8A28", Slot = "25")]
	public bool UsesAvatarLinks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xBB8A30", Offset = "0xBB8A30", VA = "0xBB8A30", Slot = "26")]
	public void GetAvatar(PlatformUser person, Action<Sprite> callback)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xBB8A90", Offset = "0xBB8A90", VA = "0xBB8A90")]
	public void CheckForInviteLaunch(Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xBB8B3C", Offset = "0xBB8B3C", VA = "0xBB8B3C")]
	public MockRoomControl()
	{
	}
}
[Token(Token = "0x200019D")]
public class OculusOpenFromInvCache : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool CachedInvOpen;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ulong CachedRoomId;

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x105F1B8", Offset = "0x105F1B8", VA = "0x105F1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x105F1BC", Offset = "0x105F1BC", VA = "0x105F1BC")]
	private void OnAcceptedInviteExternally(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x105F374", Offset = "0x105F374", VA = "0x105F374")]
	public OculusOpenFromInvCache()
	{
	}
}
[Token(Token = "0x200019E")]
public class OculusRoomWrapper : IRoomControl, IRoomMatchmake, IRoomInvite
{
	[Token(Token = "0x200074A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A40", Offset = "0xB34A40")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0xF2A8A0", Offset = "0xF2A8A0", VA = "0xF2A8A0")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0xF2A8A8", Offset = "0xF2A8A8", VA = "0xF2A8A8")]
		internal void <LeaveQueue>b__0(Oculus.Platform.Message msg)
		{
		}
	}

	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A50", Offset = "0xB34A50")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4002CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0xF2A8BC", Offset = "0xF2A8BC", VA = "0xF2A8BC")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0xF2A8C4", Offset = "0xF2A8C4", VA = "0xF2A8C4")]
		internal void <KickPlayer>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> result)
		{
		}
	}

	[Token(Token = "0x200074C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A60", Offset = "0xB34A60")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4002CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomData room;

		[Token(Token = "0x4002CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<string, string> toAdd;

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0xF2A8D8", Offset = "0xF2A8D8", VA = "0xF2A8D8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0xF2A8E0", Offset = "0xF2A8E0", VA = "0xF2A8E0")]
		internal void <SetRegion>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200074D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A70", Offset = "0xB34A70")]
	private sealed class <>c
	{
		[Token(Token = "0x4002CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Oculus.Platform.Message<Oculus.Platform.Models.Room>.Callback <>9__22_1;

		[Token(Token = "0x6002EA0")]
		[Address(RVA = "0xF2A7B4", Offset = "0xF2A7B4", VA = "0xF2A7B4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0xF2A7BC", Offset = "0xF2A7BC", VA = "0xF2A7BC")]
		internal void <SetRegion>b__22_1(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg2)
		{
		}
	}

	[Token(Token = "0x200074E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A80", Offset = "0xB34A80")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<string>> callback;

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0xF2ABF0", Offset = "0xF2ABF0", VA = "0xF2ABF0")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0xF2ABF8", Offset = "0xF2ABF8", VA = "0xF2ABF8")]
		internal void <GetRegion>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}
	}

	[Token(Token = "0x200074F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34A90", Offset = "0xB34A90")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0xF2AE1C", Offset = "0xF2AE1C", VA = "0xF2AE1C")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002EA5")]
		[Address(RVA = "0xF2AE24", Offset = "0xF2AE24", VA = "0xF2AE24")]
		internal void <IsRoomOpen>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}
	}

	[Token(Token = "0x2000750")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AA0", Offset = "0xB34AA0")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0xF2AFA4", Offset = "0xF2AFA4", VA = "0xF2AFA4")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0xF2AFAC", Offset = "0xF2AFAC", VA = "0xF2AFAC")]
		internal void <JoinRoom>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}
	}

	[Token(Token = "0x2000751")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AB0", Offset = "0xB34AB0")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> callback;

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startTime;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float currentTime;

		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusRoomWrapper <>4__this;

		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0xF2B194", Offset = "0xF2B194", VA = "0xF2B194")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0xF2B19C", Offset = "0xF2B19C", VA = "0xF2B19C")]
		internal void <GetRegionRec>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0xF2B480", Offset = "0xF2B480", VA = "0xF2B480")]
		internal void <GetRegionRec>b__1()
		{
		}
	}

	[Token(Token = "0x2000752")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AC0", Offset = "0xB34AC0")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong sender;

		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<RoomInvite> callback;

		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusRoomWrapper <>4__this;

		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong roomId;

		[Token(Token = "0x4002CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DateTime sendTime;

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0xF2B4A8", Offset = "0xF2B4A8", VA = "0xF2B4A8")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0xF2B4B0", Offset = "0xF2B4B0", VA = "0xF2B4B0")]
		internal void <PopulateRoomInv>b__0(Oculus.Platform.Message<Oculus.Platform.Models.User> result)
		{
		}
	}

	[Token(Token = "0x2000753")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AD0", Offset = "0xB34AD0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0xF2B72C", Offset = "0xF2B72C", VA = "0xF2B72C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xF2B734", Offset = "0xF2B734", VA = "0xF2B734")]
		internal void <CreatePrivateRoom>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}
	}

	[Token(Token = "0x2000754")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AE0", Offset = "0xB34AE0")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<List<PlatformUser>>> callback;

		[Token(Token = "0x4002CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OculusRoomWrapper <>4__this;

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0xF2B978", Offset = "0xF2B978", VA = "0xF2B978")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xF2B980", Offset = "0xF2B980", VA = "0xF2B980")]
		internal void <GetFriends>b__0(Oculus.Platform.Message<Oculus.Platform.Models.UserList> msg)
		{
		}
	}

	[Token(Token = "0x2000755")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AF0", Offset = "0xB34AF0")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4002CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result> callback;

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0xF2BC74", Offset = "0xF2BC74", VA = "0xF2BC74")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xF2BC7C", Offset = "0xF2BC7C", VA = "0xF2BC7C")]
		internal void <InviteFriend>b__0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
		{
		}
	}

	[Token(Token = "0x2000756")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B00", Offset = "0xB34B00")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4002CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<List<RoomInvite>> callback;

		[Token(Token = "0x4002CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OculusRoomWrapper <>4__this;

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0xF2BE80", Offset = "0xF2BE80", VA = "0xF2BE80")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0xF2BE88", Offset = "0xF2BE88", VA = "0xF2BE88")]
		internal void <GetRoomInvites>b__0(Oculus.Platform.Message<RoomInviteNotificationList> msg)
		{
		}
	}

	[Token(Token = "0x2000757")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B10", Offset = "0xB34B10")]
	private sealed class <>c__DisplayClass36_1
	{
		[Token(Token = "0x4002CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoomInvite> toReturn;

		[Token(Token = "0x4002CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cbAmount;

		[Token(Token = "0x4002CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass36_0 CS$<>8__locals1;

		[Token(Token = "0x4002CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<RoomInvite> <>9__1;

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0xF2C134", Offset = "0xF2C134", VA = "0xF2C134")]
		public <>c__DisplayClass36_1()
		{
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xF2C13C", Offset = "0xF2C13C", VA = "0xF2C13C")]
		internal void <GetRoomInvites>b__1(RoomInvite inv)
		{
		}
	}

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<bool> _queueSuccessCallback;

	[Token(Token = "0x14000075")]
	public event Action<RoomData> OnJoinRoom
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1061054", Offset = "0x1061054", VA = "0x1061054", Slot = "14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A04", Offset = "0xB49A04")]
		add
		{
		}
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x10610F8", Offset = "0x10610F8", VA = "0x10610F8", Slot = "15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A14", Offset = "0xB49A14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000076")]
	public event Action<string> OnJoinRoomFailed
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x106119C", Offset = "0x106119C", VA = "0x106119C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A24", Offset = "0xB49A24")]
		add
		{
		}
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1061240", Offset = "0x1061240", VA = "0x1061240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A34", Offset = "0xB49A34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000077")]
	public event Action<RoomData> OnRoomExternallyJoined
	{
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x10612E4", Offset = "0x10612E4", VA = "0x10612E4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A44", Offset = "0xB49A44")]
		add
		{
		}
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1061388", Offset = "0x1061388", VA = "0x1061388", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A54", Offset = "0xB49A54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000078")]
	public event Action<RoomInvite> OnInviteRecieved
	{
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1062624", Offset = "0x1062624", VA = "0x1062624", Slot = "19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A64", Offset = "0xB49A64")]
		add
		{
		}
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x10626C8", Offset = "0x10626C8", VA = "0x10626C8", Slot = "20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A74", Offset = "0xB49A74")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x106142C", Offset = "0x106142C", VA = "0x106142C", Slot = "6")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x10614DC", Offset = "0x10614DC", VA = "0x10614DC")]
	public void OnAcceptedInviteExternally(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1061708", Offset = "0x1061708", VA = "0x1061708", Slot = "16")]
	public void InitMatchMaking()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x10617B8", Offset = "0x10617B8", VA = "0x10617B8", Slot = "17")]
	public void FindAndJoinRoom(Action<bool> queueSuccessCallback)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1061874", Offset = "0x1061874", VA = "0x1061874")]
	private void MatchmakingEnqueueCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x10619D0", Offset = "0x10619D0", VA = "0x10619D0")]
	private void MatchFoundCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1061B64", Offset = "0x1061B64", VA = "0x1061B64")]
	private void MatchmakingJoinRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1061D3C", Offset = "0x1061D3C", VA = "0x1061D3C")]
	public static RoomData ConvertRoomData(Oculus.Platform.Models.Room data, bool friendly)
	{
		return default(RoomData);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1061F34", Offset = "0x1061F34", VA = "0x1061F34", Slot = "7")]
	public void LeaveRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1061F48", Offset = "0x1061F48", VA = "0x1061F48", Slot = "18")]
	public void LeaveQueue(Action callback)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1062004", Offset = "0x1062004", VA = "0x1062004", Slot = "8")]
	public void CloseRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x106203C", Offset = "0x106203C", VA = "0x106203C")]
	public void KickPlayer(RoomData room, ulong matchMakingId, Action callback)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x106211C", Offset = "0x106211C", VA = "0x106211C", Slot = "9")]
	public void SetRegion(RoomData room, string region)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x10622B8", Offset = "0x10622B8", VA = "0x10622B8", Slot = "10")]
	public void GetRegion(Action<Result<string>> callback)
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1062384", Offset = "0x1062384", VA = "0x1062384", Slot = "11")]
	public void IsRoomOpen(RoomData room, Action<bool> callback)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x1062458", Offset = "0x1062458", VA = "0x1062458", Slot = "12")]
	public void JoinRoom(ulong roomId, Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1062530", Offset = "0x1062530", VA = "0x1062530")]
	private void GetRegionRec(float startTime, float currentTime, Action<string> callback)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x106276C", Offset = "0x106276C", VA = "0x106276C", Slot = "21")]
	public void InitRoomCreation()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x106281C", Offset = "0x106281C", VA = "0x106281C")]
	private void _OnInviteRecieved(Oculus.Platform.Message<RoomInviteNotification> message)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x106297C", Offset = "0x106297C", VA = "0x106297C")]
	private void PopulateRoomInv(ulong sender, ulong roomId, DateTime sendTime, Action<RoomInvite> callback)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1062A6C", Offset = "0x1062A6C", VA = "0x1062A6C", Slot = "13")]
	public void CreatePrivateRoom(Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1062B60", Offset = "0x1062B60", VA = "0x1062B60", Slot = "22")]
	public void GetFriends(Action<Result<List<PlatformUser>>> callback)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1062C34", Offset = "0x1062C34", VA = "0x1062C34", Slot = "23")]
	public void InviteFriend(PlatformUser person, RoomData room, Action<Result> callback)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1062ECC", Offset = "0x1062ECC", VA = "0x1062ECC", Slot = "24")]
	public void GetRoomInvites(Action<List<RoomInvite>> callback)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1062F9C", Offset = "0x1062F9C", VA = "0x1062F9C", Slot = "25")]
	public bool UsesAvatarLinks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x1062FA4", Offset = "0x1062FA4", VA = "0x1062FA4", Slot = "26")]
	public void GetAvatar(PlatformUser person, Action<Sprite> callback)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1063004", Offset = "0x1063004", VA = "0x1063004")]
	private void GetRoomInvitesOnPopulated(ref List<RoomInvite> invs, ref int cbAmount, RoomInvite inv, Action<List<RoomInvite>> callback)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x10630F0", Offset = "0x10630F0", VA = "0x10630F0")]
	private PlatformUser UserToSM(Oculus.Platform.Models.User user)
	{
		return null;
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1063190", Offset = "0x1063190", VA = "0x1063190")]
	public OculusRoomWrapper()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x1063198", Offset = "0x1063198", VA = "0x1063198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A84", Offset = "0xB49A84")]
	private void <OnAcceptedInviteExternally>b__11_0(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg2)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x10632B4", Offset = "0x10632B4", VA = "0x10632B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49A94", Offset = "0xB49A94")]
	private void <_OnInviteRecieved>b__31_0(RoomInvite inv)
	{
	}
}
[Token(Token = "0x200019F")]
public class PS4EventListener : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000758")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B20", Offset = "0xB34B20")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<NpCallbackEvent> action;

		[Token(Token = "0x4002CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NpCallbackEvent cbEvent;

		[Token(Token = "0x6002EB7")]
		[Address(RVA = "0xF1D2F8", Offset = "0xF1D2F8", VA = "0xF1D2F8")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xF1E08C", Offset = "0xF1E08C", VA = "0xF1E08C")]
		internal void <OnAsyncEvent>b__0()
		{
		}
	}

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<uint, Action<NpCallbackEvent>> _inProgress;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Queue<Action> _returned;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static NpCallbackEvent[] _buffer;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SaveDataCallbackEvent[] _saveDataBuffer;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int _bufferLength;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int _saveDataBufferLength;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool _initialised;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static HashSet<Sony.NP.FunctionTypes> _toCache;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<Sony.NP.FunctionTypes, NpCallbackEvent> _cachedSet;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<Sony.NP.FunctionTypes, List<Action<NpCallbackEvent>>> _subscriptions;

	[Token(Token = "0x14000079")]
	public static event Action<SaveDataCallbackEvent> OnSafeAsyncEvent
	{
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xF1CB50", Offset = "0xF1CB50", VA = "0xF1CB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49AA4", Offset = "0xB49AA4")]
		add
		{
		}
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xF1CC40", Offset = "0xF1CC40", VA = "0xF1CC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49AB4", Offset = "0xB49AB4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xF1CD30", Offset = "0xF1CD30", VA = "0xF1CD30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xF1CD34", Offset = "0xF1CD34", VA = "0xF1CD34")]
	private void OnSaveDataAsyncEvent(SaveDataCallbackEvent cbEvent)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xF1CE88", Offset = "0xF1CE88", VA = "0xF1CE88")]
	private void OnAsyncEvent(NpCallbackEvent cbEvent)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xF1D300", Offset = "0xF1D300", VA = "0xF1D300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xF1D3C4", Offset = "0xF1D3C4", VA = "0xF1D3C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xF1D710", Offset = "0xF1D710", VA = "0xF1D710")]
	public static void AddCallback(uint reqId, Action<NpCallbackEvent> callback)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xF1DA5C", Offset = "0xF1DA5C", VA = "0xF1DA5C")]
	public static void Subscribe(Sony.NP.FunctionTypes type, Action<NpCallbackEvent> callback)
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xF1DBD4", Offset = "0xF1DBD4", VA = "0xF1DBD4")]
	public static void Desubscribe(Sony.NP.FunctionTypes type, Action<NpCallbackEvent> callback)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xF1DD30", Offset = "0xF1DD30", VA = "0xF1DD30")]
	public static bool IsCached(Sony.NP.FunctionTypes type, out NpCallbackEvent response)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xF1DE3C", Offset = "0xF1DE3C", VA = "0xF1DE3C")]
	public static bool IsCached(Sony.NP.FunctionTypes type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xF1DEC0", Offset = "0xF1DEC0", VA = "0xF1DEC0")]
	public PS4EventListener()
	{
	}
}
[Token(Token = "0x20001A0")]
public static class PS4Invitations
{
	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<ulong, Matching.NpSessionId> _invs;

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xF1E0E8", Offset = "0xF1E0E8", VA = "0xF1E0E8")]
	public static bool HasInvitation(ulong receipt, out Matching.NpSessionId invitation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xF1E1CC", Offset = "0xF1E1CC", VA = "0xF1E1CC")]
	public static ulong StoreInvitation(Matching.NpSessionId inv)
	{
		return default(ulong);
	}
}
[Token(Token = "0x20001A1")]
public class PS4LaunchChecker : ILaunchChecker
{
	[Token(Token = "0x2000759")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B30", Offset = "0xB34B30")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<PlatformUser> callback;

		[Token(Token = "0x4002CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PS4LaunchChecker <>4__this;

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0xF20424", Offset = "0xF20424", VA = "0xF20424")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xF204E8", Offset = "0xF204E8", VA = "0xF204E8")]
		internal void <GetPlatformUser>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlatformUser Profile;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matching.NpPlayTogetherInvitee[] _playTogetherInvitees;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ILaunchChecker _launchCheckerImplementation;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _authorised;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _plusUser;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _erroredOnPlus;

	[Token(Token = "0x170000E5")]
	public static UserProfiles.LocalLoginUserId LocalUser
	{
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xF1E31C", Offset = "0xF1E31C", VA = "0xF1E31C")]
		get
		{
			return default(UserProfiles.LocalLoginUserId);
		}
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xF1E574", Offset = "0xF1E574", VA = "0xF1E574", Slot = "4")]
	public void InitLaunchChecker()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xF1E5E0", Offset = "0xF1E5E0", VA = "0xF1E5E0", Slot = "5")]
	public void LaunchedInClosedRoom(Action<bool, RoomData> callback)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xF1EF58", Offset = "0xF1EF58", VA = "0xF1EF58", Slot = "6")]
	public void LaunchedWithInvite(Action<bool, ulong> callback)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xF1F294", Offset = "0xF1F294", VA = "0xF1F294", Slot = "7")]
	public void RequestPartyCommunication()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xF1F31C", Offset = "0xF1F31C", VA = "0xF1F31C")]
	private RoomData CreateRoomSync()
	{
		return default(RoomData);
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xF1FBDC", Offset = "0xF1FBDC", VA = "0xF1FBDC", Slot = "8")]
	public void SendRegionToLaunchRoom(string region)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xF1FC78", Offset = "0xF1FC78", VA = "0xF1FC78")]
	public static void SendPlayTogetherInvites(Matching.NpPlayTogetherInvitee[] invs)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xF1FF48", Offset = "0xF1FF48", VA = "0xF1FF48", Slot = "9")]
	public void AwaitRegion(Action<string> callback)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xF1FF4C", Offset = "0xF1FF4C", VA = "0xF1FF4C", Slot = "10")]
	public void GetPlatformUser(Action<PlatformUser> callback)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xF1E380", Offset = "0xF1E380", VA = "0xF1E380")]
	private static UserProfiles.LocalLoginUserId GetLoggedInUser()
	{
		return default(UserProfiles.LocalLoginUserId);
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xF2042C", Offset = "0xF2042C", VA = "0xF2042C")]
	private static string GetLocalName()
	{
		return null;
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xF20474", Offset = "0xF20474", VA = "0xF20474")]
	public PS4LaunchChecker()
	{
	}
}
[Token(Token = "0x20001A2")]
public class PS4RoomControl : IRoomControl
{
	[Token(Token = "0x200075A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B40", Offset = "0xB34B40")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4002CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PS4RoomControl <>4__this;

		[Token(Token = "0x4002CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matching.PlayTogetherHostEventResponse response;

		[Token(Token = "0x4002CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result<RoomData>> <>9__2;

		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6002EBB")]
		[Address(RVA = "0xF21958", Offset = "0xF21958", VA = "0xF21958")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xF234F4", Offset = "0xF234F4", VA = "0xF234F4")]
		internal void <HandlePlayTogetherEvent>b__0(Result<bool> onlineResult)
		{
		}

		[Token(Token = "0x6002EBD")]
		[Address(RVA = "0xF235F8", Offset = "0xF235F8", VA = "0xF235F8")]
		internal void <HandlePlayTogetherEvent>b__1()
		{
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xF23690", Offset = "0xF23690", VA = "0xF23690")]
		internal void <HandlePlayTogetherEvent>b__2(Result<RoomData> roomResult)
		{
		}
	}

	[Token(Token = "0x200075B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B50", Offset = "0xB34B50")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Result<RoomData> roomResult;

		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0xF237EC", Offset = "0xF237EC", VA = "0xF237EC")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xF237F4", Offset = "0xF237F4", VA = "0xF237F4")]
		internal void <HandlePlayTogetherEvent>b__3(ulong roomId, string region)
		{
		}
	}

	[Token(Token = "0x200075C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B60", Offset = "0xB34B60")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<bool>> callback;

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0xF21A00", Offset = "0xF21A00", VA = "0xF21A00")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0xF238AC", Offset = "0xF238AC", VA = "0xF238AC")]
		internal void <CheckOnline>b__0(Result result, bool auth, bool pUser)
		{
		}
	}

	[Token(Token = "0x200075D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B70", Offset = "0xB34B70")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PS4RoomControl <>4__this;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matching.SessionInvitationEventResponse response;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result<RoomData>> <>9__2;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6002EC3")]
		[Address(RVA = "0xF21DF4", Offset = "0xF21DF4", VA = "0xF21DF4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0xF239F8", Offset = "0xF239F8", VA = "0xF239F8")]
		internal void <HandleInviteEvent>b__0(Result<bool> onlineResult)
		{
		}

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0xF23AFC", Offset = "0xF23AFC", VA = "0xF23AFC")]
		internal void <HandleInviteEvent>b__1()
		{
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0xF23BDC", Offset = "0xF23BDC", VA = "0xF23BDC")]
		internal void <HandleInviteEvent>b__2(Result<RoomData> result)
		{
		}
	}

	[Token(Token = "0x200075E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B80", Offset = "0xB34B80")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<string>> callback;

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0xF2293C", Offset = "0xF2293C", VA = "0xF2293C")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0xF23CC4", Offset = "0xF23CC4", VA = "0xF23CC4")]
		internal void <GetRegion>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x200075F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B90", Offset = "0xB34B90")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0xF22CE0", Offset = "0xF22CE0", VA = "0xF22CE0")]
		public <>c__DisplayClass21_0()
		{
		}
	}

	[Token(Token = "0x2000760")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34BA0", Offset = "0xB34BA0")]
	private sealed class <>c__DisplayClass21_1
	{
		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matching.RefreshRoomResponse response;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass21_0 CS$<>8__locals1;

		[Token(Token = "0x6002ECA")]
		[Address(RVA = "0xF22CE8", Offset = "0xF22CE8", VA = "0xF22CE8")]
		public <>c__DisplayClass21_1()
		{
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0xF23FB4", Offset = "0xF23FB4", VA = "0xF23FB4")]
		internal void <IsRoomOpen>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x2000761")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34BB0", Offset = "0xB34BB0")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0xF230F8", Offset = "0xF230F8", VA = "0xF230F8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0xF24090", Offset = "0xF24090", VA = "0xF24090")]
		internal void <JoinRoom>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x2000762")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34BC0", Offset = "0xB34BC0")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xF234B4", Offset = "0xF234B4", VA = "0xF234B4")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0xF24298", Offset = "0xF24298", VA = "0xF24298")]
		internal void <CreatePrivateRoom>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Matching.AttributeMetadata _regionMeta;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _initialised;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Matching.RoomResponse LastRoomResponse;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Action<ulong, string> SendPlayTogetherInvites;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action _leaveCallback;

	[Token(Token = "0x170000E6")]
	private static Sony.NP.Core.UserServiceUserId UserId
	{
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xF21150", Offset = "0xF21150", VA = "0xF21150")]
		get
		{
			return default(Sony.NP.Core.UserServiceUserId);
		}
	}

	[Token(Token = "0x1400007A")]
	public event Action<RoomData> OnRoomExternallyJoined
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xF211D4", Offset = "0xF211D4", VA = "0xF211D4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49AC4", Offset = "0xB49AC4")]
		add
		{
		}
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xF21278", Offset = "0xF21278", VA = "0xF21278", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49AD4", Offset = "0xB49AD4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xF2131C", Offset = "0xF2131C", VA = "0xF2131C", Slot = "6")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xF21448", Offset = "0xF21448", VA = "0xF21448")]
	public void SetInitConfiguration()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xF2171C", Offset = "0xF2171C", VA = "0xF2171C")]
	private void HandlePlayTogetherEvent(NpCallbackEvent callbackEvent)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xF21960", Offset = "0xF21960", VA = "0xF21960")]
	private void CheckOnline(Action<Result<bool>> callback)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xF21AB4", Offset = "0xF21AB4", VA = "0xF21AB4")]
	private void ExitIfOnline(Action callback)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xF21BB8", Offset = "0xF21BB8", VA = "0xF21BB8")]
	private void HandleInviteEvent(NpCallbackEvent callbackEvent)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xF1F8D0", Offset = "0xF1F8D0", VA = "0xF1F8D0")]
	public static RoomData ConvertRoom(Matching.Room inRoom)
	{
		return default(RoomData);
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xF21DFC", Offset = "0xF21DFC", VA = "0xF21DFC", Slot = "7")]
	public void LeaveRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xF22070", Offset = "0xF22070", VA = "0xF22070", Slot = "8")]
	public void CloseRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xF22074", Offset = "0xF22074", VA = "0xF22074", Slot = "9")]
	public void SetRegion(RoomData room, string region)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xF224F4", Offset = "0xF224F4", VA = "0xF224F4", Slot = "10")]
	public void GetRegion(Action<Result<string>> callback)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xF22944", Offset = "0xF22944", VA = "0xF22944", Slot = "11")]
	public void IsRoomOpen(RoomData room, Action<bool> callback)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xF22CF0", Offset = "0xF22CF0", VA = "0xF22CF0", Slot = "12")]
	public void JoinRoom(ulong roomId, Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xF23100", Offset = "0xF23100", VA = "0xF23100", Slot = "13")]
	public void CreatePrivateRoom(Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xF1F6CC", Offset = "0xF1F6CC", VA = "0xF1F6CC")]
	public static Matching.CreateRoomRequest CreateRoomRequest()
	{
		return null;
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xF234BC", Offset = "0xF234BC", VA = "0xF234BC")]
	public PS4RoomControl()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xF234C4", Offset = "0xF234C4", VA = "0xF234C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49AE4", Offset = "0xB49AE4")]
	private void <LeaveRoom>b__17_0(NpCallbackEvent eventCB)
	{
	}
}
[Token(Token = "0x20001A3")]
public class PS4RoomInviter : IRoomInvite
{
	[Token(Token = "0x2000763")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34BD0", Offset = "0xB34BD0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PS4RoomInviter <>4__this;

		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Result<List<PlatformUser>>> callback;

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xF24D78", Offset = "0xF24D78", VA = "0xF24D78")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0xF25198", Offset = "0xF25198", VA = "0xF25198")]
		internal void <GetFriends>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x2000764")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34BE0", Offset = "0xB34BE0")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result> callback;

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0xF250F4", Offset = "0xF250F4", VA = "0xF250F4")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0xF25244", Offset = "0xF25244", VA = "0xF25244")]
		internal void <InviteFriend>b__0(NpCallbackEvent eventCb)
		{
		}
	}

	[Token(Token = "0x170000E7")]
	private Sony.NP.Core.UserServiceUserId UserId
	{
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xF24654", Offset = "0xF24654", VA = "0xF24654")]
		get
		{
			return default(Sony.NP.Core.UserServiceUserId);
		}
	}

	[Token(Token = "0x1400007B")]
	public event Action<RoomInvite> OnInviteRecieved
	{
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xF24508", Offset = "0xF24508", VA = "0xF24508", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49AF4", Offset = "0xB49AF4")]
		add
		{
		}
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xF245AC", Offset = "0xF245AC", VA = "0xF245AC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49B04", Offset = "0xB49B04")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xF24650", Offset = "0xF24650", VA = "0xF24650", Slot = "6")]
	public void InitRoomCreation()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xF246D8", Offset = "0xF246D8", VA = "0xF246D8")]
	private void OutputFriends(Friends.FriendsResponse friendsResponse, Action<Result<List<PlatformUser>>> callback)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xF249D8", Offset = "0xF249D8", VA = "0xF249D8", Slot = "7")]
	public void GetFriends(Action<Result<List<PlatformUser>>> callback)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF24D80", Offset = "0xF24D80", VA = "0xF24D80", Slot = "8")]
	public void InviteFriend(PlatformUser person, RoomData room, Action<Result> callback)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF250FC", Offset = "0xF250FC", VA = "0xF250FC", Slot = "9")]
	public void GetRoomInvites(Action<List<RoomInvite>> callback)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF25184", Offset = "0xF25184", VA = "0xF25184", Slot = "10")]
	public bool UsesAvatarLinks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xF2518C", Offset = "0xF2518C", VA = "0xF2518C", Slot = "11")]
	public void GetAvatar(PlatformUser person, Action<Sprite> callback)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xF25190", Offset = "0xF25190", VA = "0xF25190")]
	public PS4RoomInviter()
	{
	}
}
[Token(Token = "0x20001A4")]
public static class PSPlus
{
	[Token(Token = "0x2000765")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34BF0", Offset = "0xB34BF0")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<bool>> callback;

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0xF25744", Offset = "0xF25744", VA = "0xF25744")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0xF27078", Offset = "0xF27078", VA = "0xF27078")]
		internal void <CheckAvailability>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x2000766")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C00", Offset = "0xB34C00")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<bool>> callback;

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0xF25A2C", Offset = "0xF25A2C", VA = "0xF25A2C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0xF264EC", Offset = "0xF264EC", VA = "0xF264EC")]
		internal void <CheckPlus>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x2000767")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C10", Offset = "0xB34C10")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4002CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result> callback;

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0xF25F0C", Offset = "0xF25F0C", VA = "0xF25F0C")]
		public <>c__DisplayClass13_0()
		{
		}
	}

	[Token(Token = "0x2000768")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C20", Offset = "0xB34C20")]
	private sealed class <>c__DisplayClass13_1
	{
		[Token(Token = "0x4002CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NpUtils.GetParentalControlInfoResponse response;

		[Token(Token = "0x4002CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass13_0 CS$<>8__locals1;

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0xF25F14", Offset = "0xF25F14", VA = "0xF25F14")]
		public <>c__DisplayClass13_1()
		{
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0xF26644", Offset = "0xF26644", VA = "0xF26644")]
		internal void <CheckParentalControl>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x2000769")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C30", Offset = "0xB34C30")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result, bool, bool> callback;

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0xF25F4C", Offset = "0xF25F4C", VA = "0xF25F4C")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0xF268E8", Offset = "0xF268E8", VA = "0xF268E8")]
		internal void <Refresh>b__0(Result result, bool auth, bool pUser)
		{
		}
	}

	[Token(Token = "0x200076A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C40", Offset = "0xB34C40")]
	private sealed class <>c__DisplayClass15_1
	{
		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Result result;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool auth;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool pUser;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass15_0 CS$<>8__locals1;

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0xF26A94", Offset = "0xF26A94", VA = "0xF26A94")]
		public <>c__DisplayClass15_1()
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0xF26A9C", Offset = "0xF26A9C", VA = "0xF26A9C")]
		internal void <Refresh>b__1()
		{
		}
	}

	[Token(Token = "0x200076B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C50", Offset = "0xB34C50")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result, bool, bool> callback;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool plus;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool voip;

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0xF2613C", Offset = "0xF2613C", VA = "0xF2613C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0xF26B14", Offset = "0xF26B14", VA = "0xF26B14")]
		internal void <RefreshSequence>b__0(Result<bool> r)
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0xF26C14", Offset = "0xF26C14", VA = "0xF26C14")]
		internal void <RefreshSequence>b__1(Result<bool> r)
		{
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0xF26D14", Offset = "0xF26D14", VA = "0xF26D14")]
		internal void <RefreshSequence>b__2(Result r)
		{
		}
	}

	[Token(Token = "0x200076C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C60", Offset = "0xB34C60")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0xF264E4", Offset = "0xF264E4", VA = "0xF264E4")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0xF26D90", Offset = "0xF26D90", VA = "0xF26D90")]
		internal void <UpdateUser>b__0(NpCallbackEvent eventCB)
		{
		}
	}

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _allowedVoip;

	[Token(Token = "0x4000BA0")]
	private const float NotifyPlusFreq = 1.5f;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IEnumerator _notifyRoutine;

	[Token(Token = "0x170000E8")]
	public static bool AllowedVoip
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF25394", Offset = "0xF25394", VA = "0xF25394")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF2539C", Offset = "0xF2539C", VA = "0xF2539C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	private static Sony.NP.Core.UserServiceUserId UserId
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF253F4", Offset = "0xF253F4", VA = "0xF253F4")]
		get
		{
			return default(Sony.NP.Core.UserServiceUserId);
		}
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xF2097C", Offset = "0xF2097C", VA = "0xF2097C")]
	public static Result Init(Sony.NP.Core.UserServiceUserId userId, bool checkPlus, out bool authenicated, out bool plusUser)
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xF25478", Offset = "0xF25478", VA = "0xF25478")]
	public static void CheckAvailability(Action<Result<bool>> callback)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xF2574C", Offset = "0xF2574C", VA = "0xF2574C")]
	private static void CheckPlus(Action<Result<bool>> callback)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF1EB6C", Offset = "0xF1EB6C", VA = "0xF1EB6C")]
	public static void DisplaySignUpDialog()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xF25A34", Offset = "0xF25A34", VA = "0xF25A34")]
	public static void DisplaySignInDialog()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xF25C04", Offset = "0xF25C04", VA = "0xF25C04")]
	public static void CheckParentalControl(Action<Result> callback)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xF25F1C", Offset = "0xF25F1C", VA = "0xF25F1C")]
	public static void NotifyPlusFeature()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xF21A08", Offset = "0xF21A08", VA = "0xF21A08")]
	public static void Refresh(Action<Result, bool, bool> callback)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xF25F54", Offset = "0xF25F54", VA = "0xF25F54")]
	private static void RefreshSequence(bool auth, bool plus, bool voip, Action<Result, bool, bool> callback)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xF26144", Offset = "0xF26144", VA = "0xF26144")]
	public static void UpdateUser(Action callback)
	{
	}
}
[Token(Token = "0x20001A5")]
public struct RoomData
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string roomId;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong roomIdLong;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Multiplayer.Player.User> users;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool friendly;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string region;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isCrossplay;

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xBEF82C", Offset = "0xBEF82C", VA = "0xBEF82C")]
	public RoomData(ulong roomId, List<Multiplayer.Player.User> users, bool friendly, string region = "", bool crossplay = false)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xBEF898", Offset = "0xBEF898", VA = "0xBEF898")]
	public static RoomData Empty()
	{
		return default(RoomData);
	}
}
[Token(Token = "0x20001A6")]
public static class RoomMediator
{
	[Token(Token = "0x200076D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C70", Offset = "0xB34C70")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<RoomData> callback;

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0xC99E6C", Offset = "0xC99E6C", VA = "0xC99E6C")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0xC9A108", Offset = "0xC9A108", VA = "0xC9A108")]
		internal void <FindRoomRegion>b__0(string region)
		{
		}
	}

	[Token(Token = "0x200076E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C80", Offset = "0xB34C80")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> callback;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startTime;

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float currentTime;

		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0xC99FD4", Offset = "0xC99FD4", VA = "0xC99FD4")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0xC9A2BC", Offset = "0xC9A2BC", VA = "0xC9A2BC")]
		internal void <FindRoomRegionPoll>b__0(Result<string> result)
		{
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0xC9A504", Offset = "0xC9A504", VA = "0xC9A504")]
		internal void <FindRoomRegionPoll>b__1()
		{
		}
	}

	[Token(Token = "0x200076F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34C90", Offset = "0xB34C90")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result<RoomData>> callback;

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0xC9A064", Offset = "0xC9A064", VA = "0xC9A064")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0xC9A580", Offset = "0xC9A580", VA = "0xC9A580")]
		internal void <JoinRoom>b__0(Result<RoomData> r)
		{
		}
	}

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IRoomControl _roomControl;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AAA4", Offset = "0xB3AAA4")]
	private static RoomData <Room>k__BackingField;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AAB4", Offset = "0xB3AAB4")]
	private static bool <JoiningRoom>k__BackingField;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<ulong, int> userOrders;

	[Token(Token = "0x170000EA")]
	public static RoomData Room
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xC98BE8", Offset = "0xC98BE8", VA = "0xC98BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49B14", Offset = "0xB49B14")]
		get
		{
			return default(RoomData);
		}
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xC98C64", Offset = "0xC98C64", VA = "0xC98C64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49B24", Offset = "0xB49B24")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public static bool JoiningRoom
	{
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xC98CF8", Offset = "0xC98CF8", VA = "0xC98CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49B34", Offset = "0xB49B34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC98D60", Offset = "0xC98D60", VA = "0xC98D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49B44", Offset = "0xB49B44")]
		set
		{
		}
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xC9524C", Offset = "0xC9524C", VA = "0xC9524C")]
	public static void Init(RoomData startingRoom, bool editorMode = false)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xC95710", Offset = "0xC95710", VA = "0xC95710")]
	public static void Init(bool editorMode = false)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xC98E50", Offset = "0xC98E50", VA = "0xC98E50")]
	private static void OnRoomExternallyJoined(RoomData room)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xC98DD0", Offset = "0xC98DD0", VA = "0xC98DD0")]
	private static IRoomControl GetWrapper()
	{
		return null;
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xC98FC8", Offset = "0xC98FC8", VA = "0xC98FC8")]
	private static void CacheRoomOrders()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xC99264", Offset = "0xC99264", VA = "0xC99264")]
	public static int GetUserPosition(ulong matchMakingId)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xC99338", Offset = "0xC99338", VA = "0xC99338")]
	public static void RemoveCachedPerson(ulong person)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xC991B8", Offset = "0xC991B8", VA = "0xC991B8")]
	public static bool InRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xC99558", Offset = "0xC99558", VA = "0xC99558")]
	public static void IsRoomOpen(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xC996CC", Offset = "0xC996CC", VA = "0xC996CC")]
	public static int GetUserAmount()
	{
		return default(int);
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xC997A4", Offset = "0xC997A4", VA = "0xC997A4")]
	public static bool IsInParty(ulong matchMakingId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xC999D4", Offset = "0xC999D4", VA = "0xC999D4")]
	public static void CloseRoom()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xC99BD4", Offset = "0xC99BD4", VA = "0xC99BD4")]
	public static void LeaveRoom()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xC95E2C", Offset = "0xC95E2C", VA = "0xC95E2C")]
	public static void SetRoomRegion(string region, bool alertPlatform)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xC9857C", Offset = "0xC9857C", VA = "0xC9857C")]
	public static void FindRoomRegion(Action<RoomData> callback)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xC99E74", Offset = "0xC99E74", VA = "0xC99E74")]
	private static void FindRoomRegionPoll(float startTime, float currentTime, Action<string> callback)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xC9431C", Offset = "0xC9431C", VA = "0xC9431C")]
	public static void SetRoom(RoomData room)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xC99FDC", Offset = "0xC99FDC", VA = "0xC99FDC")]
	public static void OnQuit()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xC95958", Offset = "0xC95958", VA = "0xC95958")]
	public static void JoinRoom(ulong roomId, Action<Result<RoomData>> callback)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xC93144", Offset = "0xC93144", VA = "0xC93144")]
	public static void CreatePrivateRoom(Action<Result<RoomData>> callback)
	{
	}
}
[Token(Token = "0x20001A7")]
public class CircularBuffer
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float[] _buffer;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _start;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _end;

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xD810E8", Offset = "0xD810E8", VA = "0xD810E8")]
	public CircularBuffer(int size)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xD81158", Offset = "0xD81158", VA = "0xD81158")]
	public int CopyBufferTo(float[] dest, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xD81320", Offset = "0xD81320", VA = "0xD81320")]
	public void Feed(float[] input, int length)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xD81430", Offset = "0xD81430", VA = "0xD81430")]
	public void Feed(float input)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xD81490", Offset = "0xD81490", VA = "0xD81490")]
	public int BufferedSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xD814C0", Offset = "0xD814C0", VA = "0xD814C0")]
	public int Length()
	{
		return default(int);
	}
}
[Token(Token = "0x20001A8")]
public class Ps4Voip : IVOIP
{
	[Token(Token = "0x2000770")]
	private class VoipMember
	{
		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong id;

		[Token(Token = "0x4002CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Member member;

		[Token(Token = "0x4002CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool muted;

		[Token(Token = "0x4002CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool add;

		[Token(Token = "0x4002CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool wasMuted;

		[Token(Token = "0x4002CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool wasAdded;

		[Token(Token = "0x4002CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool wasTalking;

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0xBD8F30", Offset = "0xBD8F30", VA = "0xBD8F30")]
		public VoipMember(ulong id, Member member, bool muted)
		{
		}
	}

	[Token(Token = "0x2000771")]
	private class Member
	{
		[Token(Token = "0x4002CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ushort roomId;

		[Token(Token = "0x4002CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sony.NP.Core.NpAccountId accountId;

		[Token(Token = "0x4002CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string accountName;

		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetworkUtils.NetInAddr ipAddress;

		[Token(Token = "0x4002CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Matching.SignalingStatus status;

		[Token(Token = "0x4002CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ushort port;

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0xBD8D08", Offset = "0xBD8D08", VA = "0xBD8D08")]
		public Member(Matching.Member info)
		{
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0xBD8D4C", Offset = "0xBD8D4C", VA = "0xBD8D4C")]
		public void MergeAdd(Matching.Member info)
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0xBD8EFC", Offset = "0xBD8EFC", VA = "0xBD8EFC")]
		public bool IsReady()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000772")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34CA0", Offset = "0xB34CA0")]
	private sealed class <Update>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ps4Voip <>4__this;

		[Token(Token = "0x1700046C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0xBD8C98", Offset = "0xBD8C98", VA = "0xBD8C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EF5")]
			[Address(RVA = "0xBD8D00", Offset = "0xBD8D00", VA = "0xBD8D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0xBD8A08", Offset = "0xBD8A08", VA = "0xBD8A08")]
		[DebuggerHidden]
		public <Update>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0xBD8A34", Offset = "0xBD8A34", VA = "0xBD8A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0xBD8A38", Offset = "0xBD8A38", VA = "0xBD8A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0xBD8CA0", Offset = "0xBD8CA0", VA = "0xBD8CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000773")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34CB0", Offset = "0xB34CB0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4002D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong id;

		[Token(Token = "0x4002D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ps4Voip <>4__this;

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0xBD89B4", Offset = "0xBD89B4", VA = "0xBD89B4")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0xBD89BC", Offset = "0xBD89BC", VA = "0xBD89BC")]
		internal void <SetupPs4Room>b__1(Result<RoomData> r)
		{
		}
	}

	[Token(Token = "0x4000BAF")]
	private const float TALKING_CHECK_FREQUENCY = 0.5f;

	[Token(Token = "0x4000BB0")]
	private const int MAX_TALKING = 8;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ushort[] _talkingMembers;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Member> _members;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<VoipMember> _voipMembers;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _voipOn;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _selfMuted;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool _awaitingVoipRoomId;

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xC56450", Offset = "0xC56450", VA = "0xC56450")]
	private static int InitialiseNetChat(int userId, int deviceInId, int deviceOutId)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xC56458", Offset = "0xC56458", VA = "0xC56458")]
	private static int UpdateNetChatMember(ushort roomMemberId, Sony.NP.Core.NpAccountId accountId, NetworkUtils.NetInAddr IpAddress, ushort Port, Matching.SignalingStatus status, bool addMember, ushort channelMask)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xC56460", Offset = "0xC56460", VA = "0xC56460")]
	private static void RemoveAllNetChatMembers()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xC56464", Offset = "0xC56464", VA = "0xC56464")]
	private static int GetMembersTalking([In][Out] ushort[] pTalkingMembers, int nMaxTalkingMembers)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xC5646C", Offset = "0xC5646C", VA = "0xC5646C")]
	private static void MuteNetChatMember(ushort roomMemberId, bool mute)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xC56470", Offset = "0xC56470", VA = "0xC56470")]
	private static void GlobalMuteChat(bool mute)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xC56474", Offset = "0xC56474", VA = "0xC56474")]
	public Ps4Voip()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xC56644", Offset = "0xC56644", VA = "0xC56644", Slot = "4")]
	public void Start(bool muted)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xC56758", Offset = "0xC56758", VA = "0xC56758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49B54", Offset = "0xB49B54")]
	private IEnumerator Update()
	{
		return null;
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xC56AA0", Offset = "0xC56AA0", VA = "0xC56AA0")]
	private void CheckCachedRoomInfo()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xC567C8", Offset = "0xC567C8", VA = "0xC567C8")]
	private void SetupPs4Room()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xC57274", Offset = "0xC57274", VA = "0xC57274")]
	private void UnfriendlyRoom(ulong id)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xC57368", Offset = "0xC57368", VA = "0xC57368")]
	private void OnPhotonRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable obj)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xC579F0", Offset = "0xC579F0", VA = "0xC579F0", Slot = "5")]
	public void End()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xC57A74", Offset = "0xC57A74", VA = "0xC57A74")]
	public void HandleRefreshRoom(NpCallbackEvent cbEvent)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xC56C70", Offset = "0xC56C70", VA = "0xC56C70")]
	private void LogMember(Matching.Member memberInfo)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xC57BCC", Offset = "0xC57BCC", VA = "0xC57BCC")]
	private void UpdateChatState()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xC57E50", Offset = "0xC57E50", VA = "0xC57E50")]
	private void UpdateVoipMembers(Member updatedMem)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xC57138", Offset = "0xC57138", VA = "0xC57138")]
	private void UpdateMembers(Matching.Member info)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xC57F54", Offset = "0xC57F54", VA = "0xC57F54", Slot = "6")]
	public int GetPcm(ulong id, float[] dest, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xC57F5C", Offset = "0xC57F5C", VA = "0xC57F5C", Slot = "7")]
	public int GetBufferAmount(ulong id)
	{
		return default(int);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xC57F64", Offset = "0xC57F64", VA = "0xC57F64", Slot = "8")]
	public uint GetFrequency()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xC57F6C", Offset = "0xC57F6C", VA = "0xC57F6C", Slot = "9")]
	public void SetMute(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xC58064", Offset = "0xC58064", VA = "0xC58064", Slot = "10")]
	public void MuteSelf(bool muted)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xC580B0", Offset = "0xC580B0", VA = "0xC580B0", Slot = "11")]
	public void AddPerson(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xC581F8", Offset = "0xC581F8", VA = "0xC581F8", Slot = "12")]
	public void RemovePerson(ulong id)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xC582E8", Offset = "0xC582E8", VA = "0xC582E8", Slot = "13")]
	public bool NeedsOutput()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xC582F0", Offset = "0xC582F0", VA = "0xC582F0", Slot = "14")]
	public bool CanMuteSelf()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xC582F8", Offset = "0xC582F8", VA = "0xC582F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49BB8", Offset = "0xB49BB8")]
	private void <SetupPs4Room>b__18_0(Result<RoomData> r)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xC58404", Offset = "0xC58404", VA = "0xC58404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49BC8", Offset = "0xB49BC8")]
	private void <OnPhotonRoomPropertiesChanged>b__20_0(Result<RoomData> r)
	{
	}
}
[Token(Token = "0x20001A9")]
public class Ps4VoipUnityNetChat : IVOIP
{
	[Token(Token = "0x2000774")]
	private class VoipMember
	{
		[Token(Token = "0x4002D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong id;

		[Token(Token = "0x4002D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Member member;

		[Token(Token = "0x4002D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool muted;

		[Token(Token = "0x4002D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool added;

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0xBDAF44", Offset = "0xBDAF44", VA = "0xBDAF44")]
		public VoipMember(ulong id, Member member, bool muted)
		{
		}
	}

	[Token(Token = "0x2000775")]
	private class Member
	{
		[Token(Token = "0x4002D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ushort roomId;

		[Token(Token = "0x4002D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sony.NP.Core.NpAccountId accountId;

		[Token(Token = "0x4002D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string accountName;

		[Token(Token = "0x4002D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetworkUtils.NetInAddr ipAddress;

		[Token(Token = "0x4002D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Matching.SignalingStatus status;

		[Token(Token = "0x4002D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ushort port;

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0xBDAC98", Offset = "0xBDAC98", VA = "0xBDAC98")]
		public Member(Matching.Member info)
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0xBDAAE8", Offset = "0xBDAAE8", VA = "0xBDAAE8")]
		public void MergeAdd(Matching.Member info)
		{
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0xBDA9B0", Offset = "0xBDA9B0", VA = "0xBDA9B0")]
		public bool IsReady()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Member> _members;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<VoipMember> _voipMembers;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _voipOn;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _selfMuted;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool _awaitingVoipRoomId;

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xBD8F7C", Offset = "0xBD8F7C", VA = "0xBD8F7C")]
	private static int InitialiseNetChat(int userId, int deviceInId, int deviceOutId)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xBD8F84", Offset = "0xBD8F84", VA = "0xBD8F84")]
	private static int UpdateNetChatMember(ushort roomMemberId, Sony.NP.Core.NpAccountId accountId, NetworkUtils.NetInAddr IpAddress, ushort Port, Matching.SignalingStatus status, bool addMember)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xBD8F8C", Offset = "0xBD8F8C", VA = "0xBD8F8C")]
	private static void RemoveAllNetChatMembers()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xBD8F90", Offset = "0xBD8F90", VA = "0xBD8F90")]
	public Ps4VoipUnityNetChat()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xBD9148", Offset = "0xBD9148", VA = "0xBD9148", Slot = "4")]
	public void Start(bool muted)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xBD94F0", Offset = "0xBD94F0", VA = "0xBD94F0")]
	private void CheckCachedRoomInfo()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xBD9248", Offset = "0xBD9248", VA = "0xBD9248")]
	private void SetupPs4Room()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xBD9D1C", Offset = "0xBD9D1C", VA = "0xBD9D1C")]
	private void UnfriendlyRoom()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xBD9E04", Offset = "0xBD9E04", VA = "0xBD9E04")]
	private void OnPhotonRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable obj)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xBDA48C", Offset = "0xBDA48C", VA = "0xBDA48C", Slot = "5")]
	public void End()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xBDA4E8", Offset = "0xBDA4E8", VA = "0xBDA4E8")]
	public void HandleRefreshRoom(NpCallbackEvent cbEvent)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xBD96C0", Offset = "0xBD96C0", VA = "0xBD96C0")]
	private void LogMember(Matching.Member memberInfo)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xBDA640", Offset = "0xBDA640", VA = "0xBDA640")]
	private void UpdateChatState()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xBDA9E4", Offset = "0xBDA9E4", VA = "0xBDA9E4")]
	private void UpdateVoipMembers(Member added)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xBD9B88", Offset = "0xBD9B88", VA = "0xBD9B88")]
	private void UpdateMembers(Matching.Member info)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xBDACDC", Offset = "0xBDACDC", VA = "0xBDACDC", Slot = "6")]
	public int GetPcm(ulong id, float[] dest, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xBDACE4", Offset = "0xBDACE4", VA = "0xBDACE4", Slot = "7")]
	public int GetBufferAmount(ulong id)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xBDACEC", Offset = "0xBDACEC", VA = "0xBDACEC", Slot = "8")]
	public uint GetFrequency()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xBDACF4", Offset = "0xBDACF4", VA = "0xBDACF4", Slot = "9")]
	public void SetMute(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xBDADEC", Offset = "0xBDADEC", VA = "0xBDADEC", Slot = "10")]
	public void MuteSelf(bool muted)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xBDADF8", Offset = "0xBDADF8", VA = "0xBDADF8", Slot = "11")]
	public void AddPerson(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xBDAF8C", Offset = "0xBDAF8C", VA = "0xBDAF8C", Slot = "12")]
	public void RemovePerson(ulong id)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xBDAF94", Offset = "0xBDAF94", VA = "0xBDAF94", Slot = "13")]
	public bool NeedsOutput()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xBDAF9C", Offset = "0xBDAF9C", VA = "0xBDAF9C", Slot = "14")]
	public bool CanMuteSelf()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xBDAFA4", Offset = "0xBDAFA4", VA = "0xBDAFA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49BD8", Offset = "0xB49BD8")]
	private void <SetupPs4Room>b__11_1(Result<RoomData> r)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xBDAFC8", Offset = "0xBDAFC8", VA = "0xBDAFC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49BE8", Offset = "0xB49BE8")]
	private void <SetupPs4Room>b__11_0(Result<RoomData> r)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xBDB0D0", Offset = "0xBDB0D0", VA = "0xBDB0D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49BF8", Offset = "0xB49BF8")]
	private void <OnPhotonRoomPropertiesChanged>b__13_0(Result<RoomData> r)
	{
	}
}
[Token(Token = "0x20001AA")]
public class RiftVOIP : IVOIP
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isMuted;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _initialised;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int audioSystemPlaybackFrequency;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> _mutedUsers;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xBEB1AC", Offset = "0xBEB1AC", VA = "0xBEB1AC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xBEB2D4", Offset = "0xBEB2D4", VA = "0xBEB2D4")]
	private void OnConnectRequest(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> message)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xBEB298", Offset = "0xBEB298", VA = "0xBEB298")]
	private VoipSampleRate SampleRateToEnum(int rate)
	{
		return default(VoipSampleRate);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xBEB53C", Offset = "0xBEB53C", VA = "0xBEB53C", Slot = "4")]
	public void Start(bool muted)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xBEB5A4", Offset = "0xBEB5A4", VA = "0xBEB5A4", Slot = "5")]
	public void End()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xBEB620", Offset = "0xBEB620", VA = "0xBEB620", Slot = "6")]
	public int GetPcm(ulong id, float[] dest, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xBEB724", Offset = "0xBEB724", VA = "0xBEB724", Slot = "7")]
	public int GetBufferAmount(ulong id)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xBEB804", Offset = "0xBEB804", VA = "0xBEB804", Slot = "8")]
	public uint GetFrequency()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xBEB80C", Offset = "0xBEB80C", VA = "0xBEB80C", Slot = "9")]
	public void SetMute(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xBEB584", Offset = "0xBEB584", VA = "0xBEB584", Slot = "10")]
	public void MuteSelf(bool muted)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xBEB8F0", Offset = "0xBEB8F0", VA = "0xBEB8F0", Slot = "11")]
	public void AddPerson(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xBEB8FC", Offset = "0xBEB8FC", VA = "0xBEB8FC", Slot = "12")]
	public void RemovePerson(ulong id)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xBEB908", Offset = "0xBEB908", VA = "0xBEB908", Slot = "13")]
	public bool NeedsOutput()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xBEB910", Offset = "0xBEB910", VA = "0xBEB910", Slot = "14")]
	public bool CanMuteSelf()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xBEB918", Offset = "0xBEB918", VA = "0xBEB918")]
	public RiftVOIP()
	{
	}
}
[Token(Token = "0x20001AB")]
public static class VOIP
{
	[Serializable]
	[Token(Token = "0x2000776")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34CC0", Offset = "0xB34CC0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__29_0;

		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Multiplayer.Player.User> <>9__29_1;

		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<List<Multiplayer.Player.User>> <>9__29_2;

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0xF9ECB0", Offset = "0xF9ECB0", VA = "0xF9ECB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0xF9ECB8", Offset = "0xF9ECB8", VA = "0xF9ECB8")]
		internal void <Init>b__29_0()
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0xF9EF34", Offset = "0xF9EF34", VA = "0xF9EF34")]
		internal void <Init>b__29_1(Multiplayer.Player.User user)
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0xF9F030", Offset = "0xF9F030", VA = "0xF9F030")]
		internal void <Init>b__29_2(List<Multiplayer.Player.User> party)
		{
		}
	}

	[Token(Token = "0x4000BC0")]
	public const int BUFFER_SIZE = 10000;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, VoipSource> _sources;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<PlatformUser> _users;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IVOIP _wrapper;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AAC4", Offset = "0xB3AAC4")]
	private static bool <IsOn>k__BackingField;

	[Token(Token = "0x4000BC7")]
	private const string USE_VOICE_PREF = "UseVoice";

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AAF4", Offset = "0xB3AAF4")]
	private static bool <UseVoice>k__BackingField;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static PlatformTarget _platform;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool _needsOutput;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool CanMuteSelf;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AB04", Offset = "0xB3AB04")]
	private static bool <Hide>k__BackingField;

	[Token(Token = "0x170000EC")]
	public static bool IsOn
	{
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xF9C5E0", Offset = "0xF9C5E0", VA = "0xF9C5E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C08", Offset = "0xB49C08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xF9C648", Offset = "0xF9C648", VA = "0xF9C648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C18", Offset = "0xB49C18")]
		private set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public static bool UseVoice
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xF9CA78", Offset = "0xF9CA78", VA = "0xF9CA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C68", Offset = "0xB49C68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xF9CAE0", Offset = "0xF9CAE0", VA = "0xF9CAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C78", Offset = "0xB49C78")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public static bool Hide
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xF9CB50", Offset = "0xF9CB50", VA = "0xF9CB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C88", Offset = "0xB49C88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xF9CBB8", Offset = "0xF9CBB8", VA = "0xF9CBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C98", Offset = "0xB49C98")]
		private set
		{
		}
	}

	[Token(Token = "0x1400007C")]
	public static event Action<ulong, bool> OnUserMuted
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xF9C6B8", Offset = "0xF9C6B8", VA = "0xF9C6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C28", Offset = "0xB49C28")]
		add
		{
		}
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xF9C7A8", Offset = "0xF9C7A8", VA = "0xF9C7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C38", Offset = "0xB49C38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400007D")]
	public static event Action<bool> OnUseVoiceChanged
	{
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xF9C898", Offset = "0xF9C898", VA = "0xF9C898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C48", Offset = "0xB49C48")]
		add
		{
		}
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xF9C988", Offset = "0xF9C988", VA = "0xF9C988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49C58", Offset = "0xB49C58")]
		remove
		{
		}
	}

	[Token(Token = "0x1400007E")]
	public static event Action<ulong, bool> OnUserTalking
	{
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xF9CC28", Offset = "0xF9CC28", VA = "0xF9CC28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49CA8", Offset = "0xB49CA8")]
		add
		{
		}
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xF9CD18", Offset = "0xF9CD18", VA = "0xF9CD18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49CB8", Offset = "0xB49CB8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xF9CE08", Offset = "0xF9CE08", VA = "0xF9CE08")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xF9D310", Offset = "0xF9D310", VA = "0xF9D310")]
	private static IVOIP GetWrapper()
	{
		return null;
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xF9D340", Offset = "0xF9D340", VA = "0xF9D340")]
	private static void Start(bool muted)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xF9D610", Offset = "0xF9D610", VA = "0xF9D610")]
	private static void End()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xF9D90C", Offset = "0xF9D90C", VA = "0xF9D90C")]
	private static void OnSourcePointEnabled(PlatformUser user, Transform point)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xF9DA34", Offset = "0xF9DA34", VA = "0xF9DA34")]
	private static void AddPerson(PlatformUser user, bool muted)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xF9DF30", Offset = "0xF9DF30", VA = "0xF9DF30")]
	private static void RemovePerson(PlatformUser user)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xF9E18C", Offset = "0xF9E18C", VA = "0xF9E18C")]
	public static void SetMute(PlatformUser user, bool muted)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xF9DE1C", Offset = "0xF9DE1C", VA = "0xF9DE1C")]
	private static void SetSourceMute(ulong id, bool muted)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xF9DC60", Offset = "0xF9DC60", VA = "0xF9DC60")]
	private static VoipSource CreateSource(PlatformUser user)
	{
		return null;
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xF9E4CC", Offset = "0xF9E4CC", VA = "0xF9E4CC")]
	public static void SetUseVoice(bool on)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xF9D584", Offset = "0xF9D584", VA = "0xF9D584")]
	private static bool CheckPermission(bool muting)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xF9EAC4", Offset = "0xF9EAC4", VA = "0xF9EAC4")]
	public static void ReportTalking(ulong id, bool talking)
	{
	}
}
[Token(Token = "0x20001AC")]
public interface IVOIP
{
	[Token(Token = "0x6000D13")]
	void Start(bool muted);

	[Token(Token = "0x6000D14")]
	void End();

	[Token(Token = "0x6000D15")]
	int GetPcm(ulong id, float[] dest, int length);

	[Token(Token = "0x6000D16")]
	int GetBufferAmount(ulong id);

	[Token(Token = "0x6000D17")]
	uint GetFrequency();

	[Token(Token = "0x6000D18")]
	void SetMute(ulong id, bool muted);

	[Token(Token = "0x6000D19")]
	void MuteSelf(bool muted);

	[Token(Token = "0x6000D1A")]
	void AddPerson(ulong id, bool muted);

	[Token(Token = "0x6000D1B")]
	void RemovePerson(ulong id);

	[Token(Token = "0x6000D1C")]
	bool NeedsOutput();

	[Token(Token = "0x6000D1D")]
	bool CanMuteSelf();
}
[Token(Token = "0x20001AD")]
public class VoipListenerPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform currentListener;

	[Token(Token = "0x1400007F")]
	public static event Action<Transform> OnListenerUpdated
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x13A0CBC", Offset = "0x13A0CBC", VA = "0x13A0CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49CC8", Offset = "0xB49CC8")]
		add
		{
		}
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x13A0D70", Offset = "0x13A0D70", VA = "0x13A0D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49CD8", Offset = "0xB49CD8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x13A0E24", Offset = "0x13A0E24", VA = "0x13A0E24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x13A0EBC", Offset = "0x13A0EBC", VA = "0x13A0EBC")]
	public VoipListenerPoint()
	{
	}
}
[Token(Token = "0x20001AE")]
public class VoipSource : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000777")]
	public class FilterReadDel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoipSource parent;

		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] scratchBuffer;

		[Token(Token = "0x4002D14")]
		private const int SCRATCH_BUFFER_SIZE = 5000;

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x13A1D58", Offset = "0x13A1D58", VA = "0x13A1D58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0x13A1DB0", Offset = "0x13A1DB0", VA = "0x13A1DB0")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0x13A20C0", Offset = "0x13A20C0", VA = "0x13A20C0")]
		public FilterReadDel()
		{
		}
	}

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float peakAmplitude;

	[Token(Token = "0x4000BD1")]
	private const int initialPlaybackDelayMS = 40;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _source;

	[Token(Token = "0x4000BD3")]
	private const bool _verboseLogging = false;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _playbackFreq;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _sourcePoint;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _is2d;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ulong _userId;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IVOIP _wrapper;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] _earVolumes;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x13A14F8", Offset = "0x13A14F8", VA = "0x13A14F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x13A1650", Offset = "0x13A1650", VA = "0x13A1650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x13A166C", Offset = "0x13A166C", VA = "0x13A166C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x13A16E0", Offset = "0x13A16E0", VA = "0x13A16E0")]
	private void SetSourceTo2D()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x13A170C", Offset = "0x13A170C", VA = "0x13A170C")]
	private int MSToElements(int ms)
	{
		return default(int);
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x13A1730", Offset = "0x13A1730", VA = "0x13A1730")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x13A18E8", Offset = "0x13A18E8", VA = "0x13A18E8")]
	private void SetPanVolume()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x13A1648", Offset = "0x13A1648", VA = "0x13A1648")]
	private bool Get2D()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x13A1B08", Offset = "0x13A1B08", VA = "0x13A1B08")]
	private int GetPcm(float[] dest, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x13A1820", Offset = "0x13A1820", VA = "0x13A1820")]
	private int GetBufferAmount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x13A1BEC", Offset = "0x13A1BEC", VA = "0x13A1BEC")]
	public void Setup(ulong id, float frequency, IVOIP wrapper)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x13A1C28", Offset = "0x13A1C28", VA = "0x13A1C28")]
	public void Retire()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x13A1CA4", Offset = "0x13A1CA4", VA = "0x13A1CA4")]
	public void Mute(bool muted)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x13A1CD0", Offset = "0x13A1CD0", VA = "0x13A1CD0")]
	public void SetSourcePoint(Transform body)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x13A1CD8", Offset = "0x13A1CD8", VA = "0x13A1CD8")]
	public VoipSource()
	{
	}
}
[Token(Token = "0x20001AF")]
public class VoipSourcePoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x14000080")]
	public static event Action<PlatformUser, Transform> OnPointEnabled
	{
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x13A20C8", Offset = "0x13A20C8", VA = "0x13A20C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49CE8", Offset = "0xB49CE8")]
		add
		{
		}
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x13A217C", Offset = "0x13A217C", VA = "0x13A217C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49CF8", Offset = "0xB49CF8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x13A2230", Offset = "0x13A2230", VA = "0x13A2230")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x13A22FC", Offset = "0x13A22FC", VA = "0x13A22FC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x13A2234", Offset = "0x13A2234", VA = "0x13A2234")]
	private void ReportPoint()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x13A2300", Offset = "0x13A2300", VA = "0x13A2300")]
	public VoipSourcePoint()
	{
	}
}
[Token(Token = "0x20001B0")]
public class AsyncWebDownloader : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34CD0", Offset = "0xB34CD0")]
	private sealed class <Download>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4002D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Texture2D> callback;

		[Token(Token = "0x4002D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x1700046E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F07")]
			[Address(RVA = "0xE6BC70", Offset = "0xE6BC70", VA = "0xE6BC70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F09")]
			[Address(RVA = "0xE6BCD8", Offset = "0xE6BCD8", VA = "0xE6BCD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0xE6BB2C", Offset = "0xE6BB2C", VA = "0xE6BB2C")]
		[DebuggerHidden]
		public <Download>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0xE6BB60", Offset = "0xE6BB60", VA = "0xE6BB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0xE6BB64", Offset = "0xE6BB64", VA = "0xE6BB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0xE6BC78", Offset = "0xE6BC78", VA = "0xE6BC78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AsyncWebDownloader _instance;

	[Token(Token = "0x170000EF")]
	public static AsyncWebDownloader Instance
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xE6B8B8", Offset = "0xE6B8B8", VA = "0xE6B8B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xE6B998", Offset = "0xE6B998", VA = "0xE6B998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xE6BA00", Offset = "0xE6BA00", VA = "0xE6BA00")]
	public void DownloadImage(string url, Action<Texture2D> callback)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xE6BAB0", Offset = "0xE6BAB0", VA = "0xE6BAB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49D08", Offset = "0xB49D08")]
	private IEnumerator Download(string url, Action<Texture2D> callback)
	{
		return null;
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xE6BB58", Offset = "0xE6BB58", VA = "0xE6BB58")]
	public AsyncWebDownloader()
	{
	}
}
[Token(Token = "0x20001B1")]
public class AttachWorldObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tagOfObject;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string nameOfObject;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool zeroPosition;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool zeroRotation;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xE6C05C", Offset = "0xE6C05C", VA = "0xE6C05C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xE6C1DC", Offset = "0xE6C1DC", VA = "0xE6C1DC")]
	public AttachWorldObject()
	{
	}
}
[Token(Token = "0x20001B2")]
public class BodyColliderUtility : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rigSource;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rigDest;

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xE722D4", Offset = "0xE722D4", VA = "0xE722D4")]
	public BodyColliderUtility()
	{
	}
}
[Token(Token = "0x20001B3")]
public class Coroutiner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000779")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34CE0", Offset = "0xB34CE0")]
	private sealed class <_WaitEndOfFrameThenAction>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000470")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0xD43744", Offset = "0xD43744", VA = "0xD43744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0xD437AC", Offset = "0xD437AC", VA = "0xD437AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0xD435B4", Offset = "0xD435B4", VA = "0xD435B4")]
		[DebuggerHidden]
		public <_WaitEndOfFrameThenAction>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0xD436A0", Offset = "0xD436A0", VA = "0xD436A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0xD436A4", Offset = "0xD436A4", VA = "0xD436A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0xD4374C", Offset = "0xD4374C", VA = "0xD4374C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200077A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34CF0", Offset = "0xB34CF0")]
	private sealed class <_WaitFrameThenAction>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000472")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F13")]
			[Address(RVA = "0xD43814", Offset = "0xD43814", VA = "0xD43814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000473")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F15")]
			[Address(RVA = "0xD4387C", Offset = "0xD4387C", VA = "0xD4387C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0xD435E0", Offset = "0xD435E0", VA = "0xD435E0")]
		[DebuggerHidden]
		public <_WaitFrameThenAction>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0xD437B4", Offset = "0xD437B4", VA = "0xD437B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0xD437B8", Offset = "0xD437B8", VA = "0xD437B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0xD4381C", Offset = "0xD4381C", VA = "0xD4381C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200077B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D00", Offset = "0xB34D00")]
	private sealed class <_WaitTimethenAction>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000474")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F19")]
			[Address(RVA = "0xD43938", Offset = "0xD43938", VA = "0xD43938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0xD439A0", Offset = "0xD439A0", VA = "0xD439A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0xD4360C", Offset = "0xD4360C", VA = "0xD4360C")]
		[DebuggerHidden]
		public <_WaitTimethenAction>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0xD43884", Offset = "0xD43884", VA = "0xD43884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0xD43888", Offset = "0xD43888", VA = "0xD43888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0xD43940", Offset = "0xD43940", VA = "0xD43940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200077C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D10", Offset = "0xB34D10")]
	private sealed class <>c__DisplayClass11_0<T>
	{
		[Token(Token = "0x4002D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool returned;

		[Token(Token = "0x4002D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<bool, T> callback;

		[Token(Token = "0x6002F1C")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002F1D")]
		internal void <AsyncWithTimeoutRoutine>b__0(T obj)
		{
		}
	}

	[Token(Token = "0x200077D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D20", Offset = "0xB34D20")]
	private sealed class <AsyncWithTimeoutRoutine>d__11<T> : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<bool, T> callback;

		[Token(Token = "0x4002D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<Action<T>> toCall;

		[Token(Token = "0x4002D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<float> timeoutProgressReporter;

		[Token(Token = "0x4002D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int timeout;

		[Token(Token = "0x4002D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private <>c__DisplayClass11_0<T> <>8__1;

		[Token(Token = "0x4002D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <timer>5__2;

		[Token(Token = "0x17000476")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F21")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000477")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F23")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F1E")]
		[DebuggerHidden]
		public <AsyncWithTimeoutRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002F1F")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F20")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F22")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Coroutiner _instance;

	[Token(Token = "0x170000F0")]
	private static Coroutiner _Instance
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xD4316C", Offset = "0xD4316C", VA = "0xD4316C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xD432F0", Offset = "0xD432F0", VA = "0xD432F0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xD4336C", Offset = "0xD4336C", VA = "0xD4336C")]
	public static void WaitFrameThenAction(Action action)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xD43424", Offset = "0xD43424", VA = "0xD43424")]
	public static void WaitEndOfFrameThenAction(Action action)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xD434DC", Offset = "0xD434DC", VA = "0xD434DC")]
	public static void WaitTimeThenAction(Action action, float time)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xD4346C", Offset = "0xD4346C", VA = "0xD4346C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49D6C", Offset = "0xB49D6C")]
	private IEnumerator _WaitEndOfFrameThenAction(Action action)
	{
		return null;
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xD433B4", Offset = "0xD433B4", VA = "0xD433B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49DD0", Offset = "0xB49DD0")]
	private IEnumerator _WaitFrameThenAction(Action action)
	{
		return null;
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xD43534", Offset = "0xD43534", VA = "0xD43534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49E34", Offset = "0xB49E34")]
	private IEnumerator _WaitTimethenAction(Action action, float time)
	{
		return null;
	}

	[Token(Token = "0x6000D47")]
	public static void AsyncWithTimeout<T>(Action<Action<T>> toCall, Action<bool, T> callback, int timeout, [Optional] Action<float> timeoutProgressReporter)
	{
	}

	[Token(Token = "0x6000D48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49E98", Offset = "0xB49E98")]
	private IEnumerator AsyncWithTimeoutRoutine<T>(Action<Action<T>> toCall, Action<bool, T> callback, int timeout, Action<float> timeoutProgressReporter)
	{
		return null;
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xD43638", Offset = "0xD43638", VA = "0xD43638")]
	public static void StartRoutine(IEnumerator coroutine)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xD43668", Offset = "0xD43668", VA = "0xD43668")]
	public static void StopRoutine(IEnumerator coroutine)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xD43698", Offset = "0xD43698", VA = "0xD43698")]
	public Coroutiner()
	{
	}
}
[Token(Token = "0x20001B4")]
public class FriendHeldObjTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200077E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D30", Offset = "0xB34D30")]
	private sealed class <AttractItem>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FriendHeldObjTracker <>4__this;

		[Token(Token = "0x4002D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayGrabbable held;

		[Token(Token = "0x4002D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x4002D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <lerp>5__3;

		[Token(Token = "0x4002D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <heldTf>5__4;

		[Token(Token = "0x4002D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <initPos>5__5;

		[Token(Token = "0x4002D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <initRot>5__6;

		[Token(Token = "0x4002D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform <palm>5__7;

		[Token(Token = "0x4002D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <destPosOffset>5__8;

		[Token(Token = "0x4002D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion <destRotOffset>5__9;

		[Token(Token = "0x17000478")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F27")]
			[Address(RVA = "0xDCEE70", Offset = "0xDCEE70", VA = "0xDCEE70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F29")]
			[Address(RVA = "0xDCEED8", Offset = "0xDCEED8", VA = "0xDCEED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0xDCEA38", Offset = "0xDCEA38", VA = "0xDCEA38")]
		[DebuggerHidden]
		public <AttractItem>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0xDCEA6C", Offset = "0xDCEA6C", VA = "0xDCEA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0xDCEA70", Offset = "0xDCEA70", VA = "0xDCEA70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0xDCEE78", Offset = "0xDCEE78", VA = "0xDCEE78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetworkRig rig;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPoseAnimator anim;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Player player;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _attractItem;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RayGrabbable _controllerPrefab;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RayGrabbable _heldObj;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isLeft;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _currentPose;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xDCE430", Offset = "0xDCE430", VA = "0xDCE430")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xDCE77C", Offset = "0xDCE77C", VA = "0xDCE77C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xDCE7F8", Offset = "0xDCE7F8", VA = "0xDCE7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xDCE844", Offset = "0xDCE844", VA = "0xDCE844")]
	private void OnGunGrabbed(int playerId, Transform gun)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xDCE9BC", Offset = "0xDCE9BC", VA = "0xDCE9BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49EFC", Offset = "0xB49EFC")]
	private IEnumerator AttractItem(RayGrabbable held)
	{
		return null;
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xDCE4F4", Offset = "0xDCE4F4", VA = "0xDCE4F4")]
	public void SetHeldObject(bool isLeft)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xDCEA64", Offset = "0xDCEA64", VA = "0xDCEA64")]
	public FriendHeldObjTracker()
	{
	}
}
[Token(Token = "0x20001B5")]
public class GunEventMediator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	private const string _ON_GUN_REQUEST = "OnGunRequest";

	[Token(Token = "0x4000BEE")]
	private const string _ON_GUN_CLAIM = "OnGunClaim";

	[Token(Token = "0x4000BEF")]
	private const string _ON_GUN_FIRE = "OnGunFire";

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<NetworkGun> guns;

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xCDB3C8", Offset = "0xCDB3C8", VA = "0xCDB3C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xCDB3CC", Offset = "0xCDB3CC", VA = "0xCDB3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xCDB3D0", Offset = "0xCDB3D0", VA = "0xCDB3D0")]
	public GunEventMediator()
	{
	}
}
[Token(Token = "0x20001B6")]
public class GunTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200077F")]
	public delegate float GetTriggerLevel();

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _trigger;

	[Token(Token = "0x4000BF2")]
	private const float _MAX_X = 0f;

	[Token(Token = "0x4000BF3")]
	private const float _MIN_X = -0.013f;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GetTriggerLevel _triggerLevel;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AB54", Offset = "0xB3AB54")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3AB64", Offset = "0xB3AB64")]
	private float <Trigger>k__BackingField;

	[Token(Token = "0x170000F1")]
	public bool IsLeft
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xCDB3D8", Offset = "0xCDB3D8", VA = "0xCDB3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49F60", Offset = "0xB49F60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xCDB3E0", Offset = "0xCDB3E0", VA = "0xCDB3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49F70", Offset = "0xB49F70")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public float Trigger
	{
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xCDB3EC", Offset = "0xCDB3EC", VA = "0xCDB3EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49F80", Offset = "0xB49F80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xCDB3F4", Offset = "0xCDB3F4", VA = "0xCDB3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49F90", Offset = "0xB49F90")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xCDB3FC", Offset = "0xCDB3FC", VA = "0xCDB3FC")]
	public void LinkTriggerLevel(GetTriggerLevel getter, bool isLeft)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xCDB40C", Offset = "0xCDB40C", VA = "0xCDB40C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xCDB734", Offset = "0xCDB734", VA = "0xCDB734")]
	public GunTrigger()
	{
	}
}
[Token(Token = "0x20001B7")]
public struct InstantiationData
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SkinPair skin;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float height;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float armSpan;
}
[Token(Token = "0x20001B8")]
public class NetworkGun : Photon.MonoBehaviour
{
	[Token(Token = "0x2000780")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D40", Offset = "0xB34D40")]
	private sealed class <ColliderFix>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkGun <>4__this;

		[Token(Token = "0x1700047A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F31")]
			[Address(RVA = "0xBC0D4C", Offset = "0xBC0D4C", VA = "0xBC0D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F33")]
			[Address(RVA = "0xBC0DB4", Offset = "0xBC0DB4", VA = "0xBC0DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0xBC0C70", Offset = "0xBC0C70", VA = "0xBC0C70")]
		[DebuggerHidden]
		public <ColliderFix>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0xBC0CC0", Offset = "0xBC0CC0", VA = "0xBC0CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0xBC0CC4", Offset = "0xBC0CC4", VA = "0xBC0CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0xBC0D54", Offset = "0xBC0D54", VA = "0xBC0D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StickyProjectile _bolt;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _forceMin;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _forceMax;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _gunTip;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GunTrigger _trigger;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _canShoot;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double _timeWhenGrabbed;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _grabber;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _lastShotTime;

	[Token(Token = "0x4000C03")]
	private const float ShootFrequency = 0.2f;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider _collider;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource _source;

	[Token(Token = "0x14000081")]
	public static event Action<int, Transform> OnGunGrabbed
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xBBF828", Offset = "0xBBF828", VA = "0xBBF828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49FA0", Offset = "0xB49FA0")]
		add
		{
		}
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xBBF8DC", Offset = "0xBBF8DC", VA = "0xBBF8DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB49FB0", Offset = "0xB49FB0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xBBF990", Offset = "0xBBF990", VA = "0xBBF990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xBBFBD4", Offset = "0xBBFBD4", VA = "0xBBFBD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xBBFCF4", Offset = "0xBBFCF4", VA = "0xBBFCF4")]
	public void TryClaim()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xBBFF44", Offset = "0xBBFF44", VA = "0xBBFF44")]
	[PunRPC]
	private void ClaimGun(int playerId, double time)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xBC0080", Offset = "0xBC0080", VA = "0xBC0080")]
	private void SetGunOwner(double time, int playerId)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xBC0154", Offset = "0xBC0154", VA = "0xBC0154")]
	public bool IsMine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xBC0238", Offset = "0xBC0238", VA = "0xBC0238")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xBC023C", Offset = "0xBC023C", VA = "0xBC023C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xBC036C", Offset = "0xBC036C", VA = "0xBC036C")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xBC09C4", Offset = "0xBC09C4", VA = "0xBC09C4")]
	[PunRPC]
	private void FireGun(Vector3 pos, Quaternion rot, float force, int player, int color)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xBC0C00", Offset = "0xBC0C00", VA = "0xBC0C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB49FE0", Offset = "0xB49FE0")]
	private IEnumerator ColliderFix()
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xBC0C9C", Offset = "0xBC0C9C", VA = "0xBC0C9C")]
	public NetworkGun()
	{
	}
}
[Token(Token = "0x20001B9")]
public class NetworkHandObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xBC0DBC", Offset = "0xBC0DBC", VA = "0xBC0DBC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xBC1158", Offset = "0xBC1158", VA = "0xBC1158")]
	public NetworkHandObject()
	{
	}
}
[Token(Token = "0x20001BA")]
public static class NetworkObjTracker
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<GameObject> objectCache;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static HashSet<Photon.MonoBehaviour> PhotonNetworkCache;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xBBFB18", Offset = "0xBBFB18", VA = "0xBBFB18")]
	public static void AddObject(Photon.MonoBehaviour obj)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xBBFC38", Offset = "0xBBFC38", VA = "0xBBFC38")]
	public static void RemoveObject(Photon.MonoBehaviour obj)
	{
	}
}
[Token(Token = "0x20001BB")]
public class NetworkPhysicsObject : Photon.MonoBehaviour
{
	[Token(Token = "0x2000781")]
	internal struct State
	{
		[Token(Token = "0x4002D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double timestamp;

		[Token(Token = "0x4002D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 pos;

		[Token(Token = "0x4002D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Vector3 velocity;

		[Token(Token = "0x4002D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Quaternion rot;

		[Token(Token = "0x4002D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Vector3 angularVelocity;

		[Token(Token = "0x4002D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal bool isKinematic;

		[Token(Token = "0x4002D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal int ownerStrength;
	}

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rbody;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int networkOwner;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int ownerStrength;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _lastStrengthSet;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State _lastState;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ABD4", Offset = "0xB3ABD4")]
	private bool <IsKinematic>k__BackingField;

	[Token(Token = "0x4000C0F")]
	private const float _WEAKENING_TIME_INCREMENT = 0.2f;

	[Token(Token = "0x170000F3")]
	public bool IsKinematic
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xBC1204", Offset = "0xBC1204", VA = "0xBC1204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B044", Offset = "0xB4B044")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xBC120C", Offset = "0xBC120C", VA = "0xBC120C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B054", Offset = "0xB4B054")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public bool Owned
	{
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xBC1218", Offset = "0xBC1218", VA = "0xBC1218")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xBC1228", Offset = "0xBC1228", VA = "0xBC1228")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xBC1280", Offset = "0xBC1280", VA = "0xBC1280")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xBC1604", Offset = "0xBC1604", VA = "0xBC1604")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xBC1998", Offset = "0xBC1998", VA = "0xBC1998")]
	private void WeakenLink()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xBC19EC", Offset = "0xBC19EC", VA = "0xBC19EC")]
	public void SetNetworkOwner(int owner, int strength)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xBC1A54", Offset = "0xBC1A54", VA = "0xBC1A54")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xBC1BB8", Offset = "0xBC1BB8", VA = "0xBC1BB8")]
	public NetworkPhysicsObject()
	{
	}
}
[Token(Token = "0x20001BC")]
public class NetworkSceneObject : Photon.MonoBehaviour
{
	[Token(Token = "0x2000782")]
	internal struct State
	{
		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double timestamp;

		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 pos;

		[Token(Token = "0x4002D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Vector3 velocity;

		[Token(Token = "0x4002D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Quaternion rot;

		[Token(Token = "0x4002D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Vector3 angularVelocity;

		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal bool isKinematic;
	}

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rbody;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRGrabbable _grabbale;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonView _photonView;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _subbedOrigin;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _wasGrabbed;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool sleepOnStart;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool debugTakeControl;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State _lastState;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NetworkSceneObject[] linkedObjects;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _unsubTM;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _isWriting;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool _wasSleeping;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _restFrames;

	[Token(Token = "0x170000F5")]
	private bool IsGrabbed
	{
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xBC3544", Offset = "0xBC3544", VA = "0xBC3544")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F6")]
	public Rigidbody Rbody
	{
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xBC35DC", Offset = "0xBC35DC", VA = "0xBC35DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xBC35E4", Offset = "0xBC35E4", VA = "0xBC35E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xBC36E8", Offset = "0xBC36E8", VA = "0xBC36E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xBC3A6C", Offset = "0xBC3A6C", VA = "0xBC3A6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xBC3C18", Offset = "0xBC3C18", VA = "0xBC3C18")]
	private void OnGrabEnd(VRGrabber vrGrabber)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xBC3C1C", Offset = "0xBC3C1C", VA = "0xBC3C1C")]
	private void OnGrabBegin(VRGrabber vrGrabber)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xBC3CB0", Offset = "0xBC3CB0", VA = "0xBC3CB0")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xBC40F4", Offset = "0xBC40F4", VA = "0xBC40F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4B064", Offset = "0xB4B064")]
	private void ReleaseNetworkControl()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xBC4168", Offset = "0xBC4168", VA = "0xBC4168")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xBC481C", Offset = "0xBC481C", VA = "0xBC481C")]
	private void CheckShouldSleep()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xBC39C4", Offset = "0xBC39C4", VA = "0xBC39C4")]
	private void Sleep()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xBC4448", Offset = "0xBC4448", VA = "0xBC4448")]
	private void SmoothPositioning()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xBC48DC", Offset = "0xBC48DC", VA = "0xBC48DC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xBC0F30", Offset = "0xBC0F30", VA = "0xBC0F30")]
	public bool CanTakeOver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xBC4314", Offset = "0xBC4314", VA = "0xBC4314")]
	public bool IsOwnedByMe()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xBC0FD8", Offset = "0xBC0FD8", VA = "0xBC0FD8")]
	public void TakeOver(bool takeOverLinks)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xBC4A60", Offset = "0xBC4A60", VA = "0xBC4A60")]
	public NetworkSceneObject()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xBC4A70", Offset = "0xBC4A70", VA = "0xBC4A70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B09C", Offset = "0xB4B09C")]
	private void <ReleaseNetworkControl>b__23_0()
	{
	}
}
[Token(Token = "0x20001BD")]
public class PartyLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int windowOpen;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> eventsReceived;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string generalLog;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xF2867C", Offset = "0xF2867C", VA = "0xF2867C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xF286EC", Offset = "0xF286EC", VA = "0xF286EC")]
	private void CacheEvents()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xF28888", Offset = "0xF28888", VA = "0xF28888")]
	private void AddMessage(string msgName, int sender, [Optional] object payload)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xF28944", Offset = "0xF28944", VA = "0xF28944")]
	public static void PrintMessage(string msg)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xF289FC", Offset = "0xF289FC", VA = "0xF289FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xF28A68", Offset = "0xF28A68", VA = "0xF28A68")]
	private void InputGUI()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xF28CE8", Offset = "0xF28CE8", VA = "0xF28CE8")]
	private void LogGUI()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xF29564", Offset = "0xF29564", VA = "0xF29564")]
	public PartyLogger()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xF29630", Offset = "0xF29630", VA = "0xF29630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B0AC", Offset = "0xB4B0AC")]
	private void <CacheEvents>b__4_0(string msgName, int sender)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xF29638", Offset = "0xF29638", VA = "0xF29638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B0BC", Offset = "0xB4B0BC")]
	private void <CacheEvents>b__4_1(string msgName, int sender, int payload)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xF296C0", Offset = "0xF296C0", VA = "0xF296C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B0CC", Offset = "0xB4B0CC")]
	private void <CacheEvents>b__4_2(string msgName, int sender, string payload)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xF296C4", Offset = "0xF296C4", VA = "0xF296C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B0DC", Offset = "0xB4B0DC")]
	private void <CacheEvents>b__4_3(string msgName, int sender, float payload)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xF2974C", Offset = "0xF2974C", VA = "0xF2974C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B0EC", Offset = "0xB4B0EC")]
	private void <CacheEvents>b__4_4(string msgName, int sender, byte[] payload)
	{
	}
}
[Token(Token = "0x20001BE")]
public class PlayerColours : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] playerColours;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color[] Colours;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xC4DCC0", Offset = "0xC4DCC0", VA = "0xC4DCC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xC4DD18", Offset = "0xC4DD18", VA = "0xC4DD18")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4B0FC", Offset = "0xB4B0FC")]
	private void SpitOutColors()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xC4DE2C", Offset = "0xC4DE2C", VA = "0xC4DE2C")]
	public PlayerColours()
	{
	}
}
[Token(Token = "0x20001BF")]
public struct SkinPair
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int skin;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int colour;

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xDA73C4", Offset = "0xDA73C4", VA = "0xDA73C4")]
	public SkinPair(int skin, int colour)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xDA73CC", Offset = "0xDA73CC", VA = "0xDA73CC")]
	public byte[] Serialized()
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xDA743C", Offset = "0xDA743C", VA = "0xDA743C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20001C0")]
public static class SpriteTools
{
	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xD59940", Offset = "0xD59940", VA = "0xD59940")]
	public static Sprite SpriteFromTexture(Texture2D texture)
	{
		return null;
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB31FF0", Offset = "0xB31FF0")]
public class FastList<T>
{
	[Token(Token = "0x2000783")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000784")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D50", Offset = "0xB34D50")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4002D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4002D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700047C")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6002F3B")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700047D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F3D")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F38")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002F39")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F3A")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3C")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x170000F7")]
	public int Count
	{
		[Token(Token = "0x6000DA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DA5")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public T Item
	{
		[Token(Token = "0x6000DA6")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000DA7")]
		set
		{
		}
	}

	[Token(Token = "0x6000DA2")]
	public FastList()
	{
	}

	[Token(Token = "0x6000DA3")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000DA8")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000DA9")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000DAA")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000DAB")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000DAC")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAD")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000DAE")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAF")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000DB0")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB1")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000DB2")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000DB3")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000DB5")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000DB6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B134", Offset = "0xB4B134")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000DB8")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000DB9")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000DBA")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DBB")]
	public void Release()
	{
	}
}
[Token(Token = "0x20001C2")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xCE7B30", Offset = "0xCE7B30", VA = "0xCE7B30")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20001C3")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xCE7B04", Offset = "0xCE7B04", VA = "0xCE7B04")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20001C4")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xF18DF4", Offset = "0xF18DF4", VA = "0xF18DF4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xF18F60", Offset = "0xF18F60", VA = "0xF18F60")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xF19304", Offset = "0xF19304", VA = "0xF19304")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xF194AC", Offset = "0xF194AC", VA = "0xF194AC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xF194DC", Offset = "0xF194DC", VA = "0xF194DC")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PoseEditHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xC53240", Offset = "0xC53240", VA = "0xC53240")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xC532CC", Offset = "0xC532CC", VA = "0xC532CC")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xC53438", Offset = "0xC53438", VA = "0xC53438")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20001C6")]
public class GazeTargetSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x170000F9")]
	public bool IsVisible
	{
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1174F44", Offset = "0x1174F44", VA = "0x1174F44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1174F4C", Offset = "0x1174F4C", VA = "0x1174F4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1175074", Offset = "0x1175074", VA = "0x1175074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1175290", Offset = "0x1175290", VA = "0x1175290")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x1175298", Offset = "0x1175298", VA = "0x1175298")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20001C7")]
public class RemoteLoopbackManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000785")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4002D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4002D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0xBE6224", Offset = "0xBE6224", VA = "0xBE6224")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000786")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4002D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42358", Offset = "0xB42358")]
		public float FakeLatencyMax;

		[Token(Token = "0x4002D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42370", Offset = "0xB42370")]
		public float FakeLatencyMin;

		[Token(Token = "0x4002D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42388", Offset = "0xB42388")]
		public float LatencyWeight;

		[Token(Token = "0x4002D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB423A0", Offset = "0xB423A0")]
		public int MaxSamples;

		[Token(Token = "0x4002D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4002D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4002D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0xBE622C", Offset = "0xBE622C", VA = "0xBE622C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0xBE63C4", Offset = "0xBE63C4", VA = "0xBE63C4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xBE58C4", Offset = "0xBE58C4", VA = "0xBE58C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xBE59E8", Offset = "0xBE59E8", VA = "0xBE59E8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xBE5D4C", Offset = "0xBE5D4C", VA = "0xBE5D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xBE5CB0", Offset = "0xBE5CB0", VA = "0xBE5CB0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xBE5FA8", Offset = "0xBE5FA8", VA = "0xBE5FA8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xBE6338", Offset = "0xBE6338", VA = "0xBE6338")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x20001C8")]
public class P2PManager
{
	[Token(Token = "0x2000787")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4002D58")]
		Update = 1
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xF1A7E4", Offset = "0xF1A7E4", VA = "0xF1A7E4")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xF1A8A4", Offset = "0xF1A8A4", VA = "0xF1A8A4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xF1A988", Offset = "0xF1A988", VA = "0xF1A988")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xF1AA0C", Offset = "0xF1AA0C", VA = "0xF1AA0C")]
	private void PeerConnectRequestCallback(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xF1AB68", Offset = "0xF1AB68", VA = "0xF1AB68")]
	private void ConnectionStateChangedCallback(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xF1AE18", Offset = "0xF1AE18", VA = "0xF1AE18")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xF1B20C", Offset = "0xF1B20C", VA = "0xF1B20C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xF1B4B0", Offset = "0xF1B4B0", VA = "0xF1B4B0")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xF1AFDC", Offset = "0xF1AFDC", VA = "0xF1AFDC")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xF1B3E0", Offset = "0xF1B3E0", VA = "0xF1B3E0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xF1B0C4", Offset = "0xF1B0C4", VA = "0xF1B0C4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xF1B6C8", Offset = "0xF1B6C8", VA = "0xF1B6C8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xF1B024", Offset = "0xF1B024", VA = "0xF1B024")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xF1B424", Offset = "0xF1B424", VA = "0xF1B424")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xF1B16C", Offset = "0xF1B16C", VA = "0xF1B16C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xF1B754", Offset = "0xF1B754", VA = "0xF1B754")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20001C9")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xC4DFA8", Offset = "0xC4DFA8", VA = "0xC4DFA8", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xC4DFE4", Offset = "0xC4DFE4", VA = "0xC4DFE4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xC4E01C", Offset = "0xC4E01C", VA = "0xC4E01C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xC4E044", Offset = "0xC4E044", VA = "0xC4E044")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xC4E1E4", Offset = "0xC4E1E4", VA = "0xC4E1E4")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xC4E264", Offset = "0xC4E264", VA = "0xC4E264")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xC4E2B8", Offset = "0xC4E2B8", VA = "0xC4E2B8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20001CA")]
public class RemotePlayer
{
	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xBE644C", Offset = "0xBE644C", VA = "0xBE644C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20001CB")]
public class RoomManager
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xC969F4", Offset = "0xC969F4", VA = "0xC969F4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xC96AC0", Offset = "0xC96AC0", VA = "0xC96AC0")]
	private void AcceptingInviteCallback(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xC96C20", Offset = "0xC96C20", VA = "0xC96C20")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xC96D30", Offset = "0xC96D30", VA = "0xC96D30")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xC96DE4", Offset = "0xC96DE4", VA = "0xC96DE4")]
	private void CreateAndJoinPrivateRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xC96F18", Offset = "0xC96F18", VA = "0xC96F18")]
	private void OnLaunchInviteWorkflowComplete(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xC96C50", Offset = "0xC96C50", VA = "0xC96C50")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xC96FA4", Offset = "0xC96FA4", VA = "0xC96FA4")]
	private void JoinRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xC97640", Offset = "0xC97640", VA = "0xC97640")]
	private void RoomUpdateCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xC97910", Offset = "0xC97910", VA = "0xC97910")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xC97244", Offset = "0xC97244", VA = "0xC97244")]
	private void ProcessRoomData(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x20001CC")]
public class SocialPlatformManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000788")]
	public enum State
	{
		[Token(Token = "0x4002D5A")]
		INITIALIZING,
		[Token(Token = "0x4002D5B")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4002D5C")]
		CREATING_A_ROOM,
		[Token(Token = "0x4002D5D")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4002D5E")]
		JOINING_A_ROOM,
		[Token(Token = "0x4002D5F")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4002D60")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4002D61")]
		SHUTDOWN
	}

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x170000FA")]
	public static State CurrentState
	{
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xDAD060", Offset = "0xDAD060", VA = "0xDAD060")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x170000FB")]
	public static ulong MyID
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xDAD0D4", Offset = "0xDAD0D4", VA = "0xDAD0D4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170000FC")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xDAD1AC", Offset = "0xDAD1AC", VA = "0xDAD1AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xDAB2F8", Offset = "0xDAB2F8", VA = "0xDAB2F8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xDAB684", Offset = "0xDAB684", VA = "0xDAB684", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xDABD60", Offset = "0xDABD60", VA = "0xDABD60")]
	private void InitCallback(Oculus.Platform.Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xDAC028", Offset = "0xDAC028", VA = "0xDAC028", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xDAC02C", Offset = "0xDAC02C", VA = "0xDAC02C")]
	private void IsEntitledCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xDAC120", Offset = "0xDAC120", VA = "0xDAC120")]
	private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xDAC814", Offset = "0xDAC814", VA = "0xDAC814")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Oculus.Platform.Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xDACCD4", Offset = "0xDACCD4", VA = "0xDACCD4")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xDACEA0", Offset = "0xDACEA0", VA = "0xDACEA0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xDACFF0", Offset = "0xDACFF0", VA = "0xDACFF0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xDAB984", Offset = "0xDAB984", VA = "0xDAB984")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xDABEBC", Offset = "0xDABEBC", VA = "0xDABEBC")]
	public static void TerminateWithError(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xDABA38", Offset = "0xDABA38", VA = "0xDABA38")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xDAD2C0", Offset = "0xDAD2C0", VA = "0xDAD2C0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xDAD440", Offset = "0xDAD440", VA = "0xDAD440")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xDAD528", Offset = "0xDAD528", VA = "0xDAD528")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xDAD64C", Offset = "0xDAD64C", VA = "0xDAD64C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xDAD71C", Offset = "0xDAD71C", VA = "0xDAD71C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xDABF6C", Offset = "0xDABF6C", VA = "0xDABF6C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xDADB48", Offset = "0xDADB48", VA = "0xDADB48")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xDADBD4", Offset = "0xDADBD4", VA = "0xDADBD4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xDAD96C", Offset = "0xDAD96C", VA = "0xDAD96C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xDADDA8", Offset = "0xDADDA8", VA = "0xDADDA8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xDAB270", Offset = "0xDAB270", VA = "0xDAB270")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4B198", Offset = "0xB4B198")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xDADEE4", Offset = "0xDADEE4", VA = "0xDADEE4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xDADFAC", Offset = "0xDADFAC", VA = "0xDADFAC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20001CD")]
public class VoipManager
{
	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x13A0EC4", Offset = "0x13A0EC4", VA = "0x13A0EC4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x13A0F84", Offset = "0x13A0F84", VA = "0x13A0F84")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x13A1068", Offset = "0x13A1068", VA = "0x13A1068")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x13A10EC", Offset = "0x13A10EC", VA = "0x13A10EC")]
	private void VoipConnectRequestCallback(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x13A1248", Offset = "0x13A1248", VA = "0x13A1248")]
	private void VoipStateChangedCallback(Oculus.Platform.Message<Oculus.Platform.Models.NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20001CE")]
public class GazeTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1174BD0", Offset = "0x1174BD0", VA = "0x1174BD0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1174C40", Offset = "0x1174C40", VA = "0x1174C40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1174DBC", Offset = "0x1174DBC", VA = "0x1174DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1174E20", Offset = "0x1174E20", VA = "0x1174E20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x1174C7C", Offset = "0x1174C7C", VA = "0x1174C7C")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1174EDC", Offset = "0x1174EDC", VA = "0x1174EDC")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1174F3C", Offset = "0x1174F3C", VA = "0x1174F3C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CF")]
public class AvatarLayer
{
	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xE6C5E8", Offset = "0xE6C5E8", VA = "0xE6C5E8")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D0")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xF2720C", Offset = "0xF2720C", VA = "0xF2720C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20001D1")]
public class OvrAvatar : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000789")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4002D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0xD2069C", Offset = "0xD2069C", VA = "0xD2069C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200078A")]
	public enum HandType
	{
		[Token(Token = "0x4002D64")]
		Right,
		[Token(Token = "0x4002D65")]
		Left,
		[Token(Token = "0x4002D66")]
		Max
	}

	[Token(Token = "0x200078B")]
	public enum HandJoint
	{
		[Token(Token = "0x4002D68")]
		HandBase,
		[Token(Token = "0x4002D69")]
		IndexBase,
		[Token(Token = "0x4002D6A")]
		IndexTip,
		[Token(Token = "0x4002D6B")]
		ThumbBase,
		[Token(Token = "0x4002D6C")]
		ThumbTip,
		[Token(Token = "0x4002D6D")]
		Max
	}

	[Token(Token = "0x200078C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D60", Offset = "0xB34D60")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700047E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F45")]
			[Address(RVA = "0xD2299C", Offset = "0xD2299C", VA = "0xD2299C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F47")]
			[Address(RVA = "0xD22A04", Offset = "0xD22A04", VA = "0xD22A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0xD223D0", Offset = "0xD223D0", VA = "0xD223D0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0xD2280C", Offset = "0xD2280C", VA = "0xD2280C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0xD22810", Offset = "0xD22810", VA = "0xD22810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0xD229A4", Offset = "0xD229A4", VA = "0xD229A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3ABF4", Offset = "0xB3ABF4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3AC2C", Offset = "0xB3AC2C")]
	public bool EnableBody;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3AC64", Offset = "0xB3AC64")]
	public bool RecordPackets;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3AC9C", Offset = "0xB3AC9C")]
	public bool StartWithControllers;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3ACD4", Offset = "0xB3ACD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3ACD4", Offset = "0xB3ACD4")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AD44", Offset = "0xB3AD44")]
	private bool CombineMeshes;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AD7C", Offset = "0xB3AD7C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3ADB4", Offset = "0xB3ADB4")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3ADEC", Offset = "0xB3ADEC")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AE24", Offset = "0xB3AE24")]
	public bool EnableLaughter;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000CAE")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000CB0")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000CB1")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000CB2")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000CB3")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000CB4")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xD1D00C", Offset = "0xD1D00C", VA = "0xD1D00C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xD1D374", Offset = "0xD1D374", VA = "0xD1D374")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xD1D400", Offset = "0xD1D400", VA = "0xD1D400")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xD1D46C", Offset = "0xD1D46C", VA = "0xD1D46C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xD1D594", Offset = "0xD1D594", VA = "0xD1D594")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xD1D678", Offset = "0xD1D678", VA = "0xD1D678")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xD1D758", Offset = "0xD1D758", VA = "0xD1D758")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xD1D940", Offset = "0xD1D940", VA = "0xD1D940")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xD1DA08", Offset = "0xD1DA08", VA = "0xD1DA08")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xD1DA8C", Offset = "0xD1DA8C", VA = "0xD1DA8C")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xD1DB74", Offset = "0xD1DB74", VA = "0xD1DB74")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xD1DC00", Offset = "0xD1DC00", VA = "0xD1DC00")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xD1DD1C", Offset = "0xD1DD1C", VA = "0xD1DD1C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xD1DD7C", Offset = "0xD1DD7C", VA = "0xD1DD7C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000E2E")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xD1E200", Offset = "0xD1E200", VA = "0xD1E200")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xD1E560", Offset = "0xD1E560", VA = "0xD1E560")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xD1E6C4", Offset = "0xD1E6C4", VA = "0xD1E6C4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xD1E98C", Offset = "0xD1E98C", VA = "0xD1E98C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xD1EA78", Offset = "0xD1EA78", VA = "0xD1EA78")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xD1F07C", Offset = "0xD1F07C", VA = "0xD1F07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xD1F37C", Offset = "0xD1F37C", VA = "0xD1F37C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xD1FD94", Offset = "0xD1FD94", VA = "0xD1FD94")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xD1FDE8", Offset = "0xD1FDE8", VA = "0xD1FDE8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xD1ECF0", Offset = "0xD1ECF0", VA = "0xD1ECF0")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xD1ED8C", Offset = "0xD1ED8C", VA = "0xD1ED8C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xD1FE18", Offset = "0xD1FE18", VA = "0xD1FE18")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xD1F6F0", Offset = "0xD1F6F0", VA = "0xD1F6F0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xD20060", Offset = "0xD20060", VA = "0xD20060")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xD1FE80", Offset = "0xD1FE80", VA = "0xD1FE80")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xD20718", Offset = "0xD20718", VA = "0xD20718")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xD20B1C", Offset = "0xD20B1C", VA = "0xD20B1C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xD20EA4", Offset = "0xD20EA4", VA = "0xD20EA4")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xD20FE4", Offset = "0xD20FE4", VA = "0xD20FE4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xD2119C", Offset = "0xD2119C", VA = "0xD2119C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xD1F890", Offset = "0xD1F890", VA = "0xD1F890")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xD21274", Offset = "0xD21274", VA = "0xD21274")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xD1F700", Offset = "0xD1F700", VA = "0xD1F700")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xD21368", Offset = "0xD21368", VA = "0xD21368")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xD21914", Offset = "0xD21914", VA = "0xD21914")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xD21DD4", Offset = "0xD21DD4", VA = "0xD21DD4")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xD21E4C", Offset = "0xD21E4C", VA = "0xD21E4C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xD21EC8", Offset = "0xD21EC8", VA = "0xD21EC8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xD1FC28", Offset = "0xD1FC28", VA = "0xD1FC28")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xD21424", Offset = "0xD21424", VA = "0xD21424")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xD22360", Offset = "0xD22360", VA = "0xD22360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B1FC", Offset = "0xB4B1FC")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xD223FC", Offset = "0xD223FC", VA = "0xD223FC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xD22204", Offset = "0xD22204", VA = "0xD22204")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xD224C4", Offset = "0xD224C4", VA = "0xD224C4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xD225B0", Offset = "0xD225B0", VA = "0xD225B0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xD21F98", Offset = "0xD21F98", VA = "0xD21F98")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xD2269C", Offset = "0xD2269C", VA = "0xD2269C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20001D2")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xD22A0C", Offset = "0xD22A0C", VA = "0xD22A0C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20001D3")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xD22ABC", Offset = "0xD22ABC", VA = "0xD22ABC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xD23D9C", Offset = "0xD23D9C", VA = "0xD23D9C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xD23940", Offset = "0xD23940", VA = "0xD23940")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xD236E4", Offset = "0xD236E4", VA = "0xD236E4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xD237B4", Offset = "0xD237B4", VA = "0xD237B4")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xD24000", Offset = "0xD24000", VA = "0xD24000")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20001D4")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000CD1")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xD24580", Offset = "0xD24580", VA = "0xD24580")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20001D5")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xD247E8", Offset = "0xD247E8", VA = "0xD247E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xD24BF0", Offset = "0xD24BF0", VA = "0xD24BF0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20001D6")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xD20D48", Offset = "0xD20D48", VA = "0xD20D48")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xD24CEC", Offset = "0xD24CEC", VA = "0xD24CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xD24E08", Offset = "0xD24E08", VA = "0xD24E08")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20001D7")]
public class OvrAvatarComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xD24E6C", Offset = "0xD24E6C", VA = "0xD24E6C")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xD24904", Offset = "0xD24904", VA = "0xD24904")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xD24E74", Offset = "0xD24E74", VA = "0xD24E74")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xD24ED4", Offset = "0xD24ED4", VA = "0xD24ED4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xD256B8", Offset = "0xD256B8", VA = "0xD256B8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xD24C54", Offset = "0xD24C54", VA = "0xD24C54")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20001D8")]
public abstract class OvrAvatarDriver : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200078D")]
	public enum PacketMode
	{
		[Token(Token = "0x4002D72")]
		SDK,
		[Token(Token = "0x4002D73")]
		Unity
	}

	[Token(Token = "0x200078E")]
	public struct ControllerPose
	{
		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0xD26860", Offset = "0xD26860", VA = "0xD26860")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200078F")]
	public struct PoseFrame
	{
		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4002D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4002D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0xD202E4", Offset = "0xD202E4", VA = "0xD202E4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xD267AC", Offset = "0xD267AC", VA = "0xD267AC")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000E69")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xD267BC", Offset = "0xD267BC", VA = "0xD267BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xD1EE28", Offset = "0xD1EE28", VA = "0xD1EE28")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xD26848", Offset = "0xD26848", VA = "0xD26848")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xD26850", Offset = "0xD26850", VA = "0xD26850")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20001D9")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xD269BC", Offset = "0xD269BC", VA = "0xD269BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xD26B18", Offset = "0xD26B18", VA = "0xD26B18")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20001DA")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xD26B84", Offset = "0xD26B84", VA = "0xD26B84")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xD26CF0", Offset = "0xD26CF0", VA = "0xD26CF0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xD27094", Offset = "0xD27094", VA = "0xD27094")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xD272B0", Offset = "0xD272B0", VA = "0xD272B0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xD272DC", Offset = "0xD272DC", VA = "0xD272DC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20001DB")]
public class OvrAvatarMaterialManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000790")]
	public enum TextureType
	{
		[Token(Token = "0x4002D84")]
		DiffuseTextures,
		[Token(Token = "0x4002D85")]
		NormalMaps,
		[Token(Token = "0x4002D86")]
		RoughnessMaps,
		[Token(Token = "0x4002D87")]
		Count
	}

	[Token(Token = "0x2000791")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4002D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4002D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4002D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4002D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4002D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000792")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4002D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000793")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4002D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4002D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4002D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4002D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000794")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4002D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4002D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0xF14350", Offset = "0xF14350", VA = "0xF14350")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000795")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D70", Offset = "0xB34D70")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4002D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4002D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4002D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4002D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4002D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4002D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4002DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4002DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000480")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0xF142E0", Offset = "0xF142E0", VA = "0xF142E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F50")]
			[Address(RVA = "0xF14348", Offset = "0xF14348", VA = "0xF14348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0xF13A24", Offset = "0xF13A24", VA = "0xF13A24")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0xF13A50", Offset = "0xF13A50", VA = "0xF13A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0xF13A54", Offset = "0xF13A54", VA = "0xF13A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0xF142E8", Offset = "0xF142E8", VA = "0xF142E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000D05")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000D06")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000D07")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000D08")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xD2738C", Offset = "0xD2738C", VA = "0xD2738C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xD274EC", Offset = "0xD274EC", VA = "0xD274EC")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xD27514", Offset = "0xD27514", VA = "0xD27514")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xD27C2C", Offset = "0xD27C2C", VA = "0xD27C2C")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xD27C98", Offset = "0xD27C98", VA = "0xD27C98")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xD275A8", Offset = "0xD275A8", VA = "0xD275A8")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xD27CEC", Offset = "0xD27CEC", VA = "0xD27CEC")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xD279A8", Offset = "0xD279A8", VA = "0xD279A8")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xD27DDC", Offset = "0xD27DDC", VA = "0xD27DDC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xD28054", Offset = "0xD28054", VA = "0xD28054")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xD28150", Offset = "0xD28150", VA = "0xD28150")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD28188", Offset = "0xD28188", VA = "0xD28188")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD27BB0", Offset = "0xD27BB0", VA = "0xD27BB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B260", Offset = "0xB4B260")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD28F3C", Offset = "0xD28F3C", VA = "0xD28F3C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20001DC")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x170000FD")]
	public float Duration
	{
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xF14358", Offset = "0xF14358", VA = "0xF14358")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FE")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xF143C4", Offset = "0xF143C4", VA = "0xF143C4")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xF14448", Offset = "0xF14448", VA = "0xF14448")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xF1450C", Offset = "0xF1450C", VA = "0xF1450C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xF1464C", Offset = "0xF1464C", VA = "0xF1464C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xF14728", Offset = "0xF14728", VA = "0xF14728")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xF147F8", Offset = "0xF147F8", VA = "0xF147F8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xF14A04", Offset = "0xF14A04", VA = "0xF14A04")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xF14C5C", Offset = "0xF14C5C", VA = "0xF14C5C")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20001DD")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xE718E0", Offset = "0xE718E0", VA = "0xE718E0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xE719F4", Offset = "0xE719F4", VA = "0xE719F4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xE71BA0", Offset = "0xE71BA0", VA = "0xE71BA0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xE71A64", Offset = "0xE71A64", VA = "0xE71A64")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xE71AF8", Offset = "0xE71AF8", VA = "0xE71AF8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20001DE")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xE714E0", Offset = "0xE714E0", VA = "0xE714E0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xE71884", Offset = "0xE71884", VA = "0xE71884")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xE71680", Offset = "0xE71680", VA = "0xE71680")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xE716F8", Offset = "0xE716F8", VA = "0xE716F8")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xE71794", Offset = "0xE71794", VA = "0xE71794")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20001DF")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000D10")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000D11")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xF14E4C", Offset = "0xF14E4C", VA = "0xF14E4C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xF14ED8", Offset = "0xF14ED8", VA = "0xF14ED8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xF14EF4", Offset = "0xF14EF4", VA = "0xF14EF4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xF150A0", Offset = "0xF150A0", VA = "0xF150A0")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xF1523C", Offset = "0xF1523C", VA = "0xF1523C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20001E0")]
public class OvrAvatarRenderComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xF152B4", Offset = "0xF152B4", VA = "0xF152B4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xF15398", Offset = "0xF15398", VA = "0xF15398")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xF15610", Offset = "0xF15610", VA = "0xF15610")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xF159A4", Offset = "0xF159A4", VA = "0xF159A4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xF15A9C", Offset = "0xF15A9C", VA = "0xF15A9C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20001E1")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000D1A")]
	Body = 1,
	[Token(Token = "0x4000D1B")]
	Hands = 2,
	[Token(Token = "0x4000D1C")]
	Base = 4,
	[Token(Token = "0x4000D1D")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000D1E")]
	Expressive = 0x20,
	[Token(Token = "0x4000D1F")]
	All = -1
}
[Token(Token = "0x20001E2")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000D21")]
	AvatarSpecification,
	[Token(Token = "0x4000D22")]
	AssetLoaded,
	[Token(Token = "0x4000D23")]
	Count
}
[Token(Token = "0x20001E3")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20001E4")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20001E5")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000D29")]
	Mesh,
	[Token(Token = "0x4000D2A")]
	Texture,
	[Token(Token = "0x4000D2B")]
	Pose,
	[Token(Token = "0x4000D2C")]
	Material,
	[Token(Token = "0x4000D2D")]
	CombinedMesh,
	[Token(Token = "0x4000D2E")]
	PBSMaterial,
	[Token(Token = "0x4000D2F")]
	FailedLoad,
	[Token(Token = "0x4000D30")]
	Count
}
[Token(Token = "0x20001E6")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20001E7")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20001E8")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20001E9")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20001EA")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20001EB")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000D65")]
	RGB24,
	[Token(Token = "0x4000D66")]
	DXT1,
	[Token(Token = "0x4000D67")]
	DXT5,
	[Token(Token = "0x4000D68")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000D69")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000D6A")]
	Count
}
[Token(Token = "0x20001EC")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20001ED")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000D72")]
	SkinnedMeshRender,
	[Token(Token = "0x4000D73")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000D74")]
	ProjectorRender,
	[Token(Token = "0x4000D75")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000D76")]
	Count
}
[Token(Token = "0x20001EE")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000D78")]
	Unknown,
	[Token(Token = "0x4000D79")]
	Default,
	[Token(Token = "0x4000D7A")]
	Verbose,
	[Token(Token = "0x4000D7B")]
	Debug,
	[Token(Token = "0x4000D7C")]
	Info,
	[Token(Token = "0x4000D7D")]
	Warn,
	[Token(Token = "0x4000D7E")]
	Error,
	[Token(Token = "0x4000D7F")]
	Fatal,
	[Token(Token = "0x4000D80")]
	Silent
}
[Token(Token = "0x20001EF")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20001F0")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000D85")]
	One = 1,
	[Token(Token = "0x4000D86")]
	Two = 2,
	[Token(Token = "0x4000D87")]
	Three = 4,
	[Token(Token = "0x4000D88")]
	Joystick = 8
}
[Token(Token = "0x20001F1")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000D8A")]
	One = 1,
	[Token(Token = "0x4000D8B")]
	Two = 2,
	[Token(Token = "0x4000D8C")]
	Joystick = 4,
	[Token(Token = "0x4000D8D")]
	ThumbRest = 8,
	[Token(Token = "0x4000D8E")]
	Index = 0x10,
	[Token(Token = "0x4000D8F")]
	Pointing = 0x40,
	[Token(Token = "0x4000D90")]
	ThumbUp = 0x80
}
[Token(Token = "0x20001F2")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20001F3")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20001F4")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20001F5")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F6")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F7")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20001F8")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F9")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001FA")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000DB0")]
	Add,
	[Token(Token = "0x4000DB1")]
	Multiply,
	[Token(Token = "0x4000DB2")]
	Count
}
[Token(Token = "0x20001FB")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000DB4")]
	Color,
	[Token(Token = "0x4000DB5")]
	Texture,
	[Token(Token = "0x4000DB6")]
	TextureSingleChannel,
	[Token(Token = "0x4000DB7")]
	Parallax,
	[Token(Token = "0x4000DB8")]
	Count
}
[Token(Token = "0x20001FC")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000DBA")]
	None,
	[Token(Token = "0x4000DBB")]
	Positional,
	[Token(Token = "0x4000DBC")]
	ViewReflection,
	[Token(Token = "0x4000DBD")]
	Fresnel,
	[Token(Token = "0x4000DBE")]
	Pulse,
	[Token(Token = "0x4000DBF")]
	Count
}
[Token(Token = "0x20001FD")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000DC1")]
	Touch,
	[Token(Token = "0x4000DC2")]
	Malibu,
	[Token(Token = "0x4000DC3")]
	Go,
	[Token(Token = "0x4000DC4")]
	Quest,
	[Token(Token = "0x4000DC5")]
	Count
}
[Token(Token = "0x20001FE")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000DC7")]
	Lowest = 1,
	[Token(Token = "0x4000DC8")]
	Medium = 3,
	[Token(Token = "0x4000DC9")]
	Highest = 5
}
[Token(Token = "0x20001FF")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000DCB")]
	Unknown = -1,
	[Token(Token = "0x4000DCC")]
	One,
	[Token(Token = "0x4000DCD")]
	Two
}
[Token(Token = "0x2000200")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x13AA06C", Offset = "0x13AA06C", VA = "0x13AA06C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x13AA09C", Offset = "0x13AA09C", VA = "0x13AA09C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x13AA2BC", Offset = "0x13AA2BC", VA = "0x13AA2BC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000201")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x13AA3A0", Offset = "0x13AA3A0", VA = "0x13AA3A0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x13AA3D0", Offset = "0x13AA3D0", VA = "0x13AA3D0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x13AA764", Offset = "0x13AA764", VA = "0x13AA764", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000202")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x13A9714", Offset = "0x13A9714", VA = "0x13A9714")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x13A9744", Offset = "0x13A9744", VA = "0x13A9744", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x13A99D8", Offset = "0x13A99D8", VA = "0x13A99D8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000203")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x13AA8CC", Offset = "0x13AA8CC", VA = "0x13AA8CC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x13AA8FC", Offset = "0x13AA8FC", VA = "0x13AA8FC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x13AAAF0", Offset = "0x13AAAF0", VA = "0x13AAAF0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000204")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xD22A14", Offset = "0xD22A14", VA = "0xD22A14")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000205")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000206")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000E02")]
	FirstPerson = 1,
	[Token(Token = "0x4000E03")]
	ThirdPerson = 2,
	[Token(Token = "0x4000E04")]
	SelfOccluding = 4
}
[Token(Token = "0x2000207")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000208")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000209")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200020A")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200020B")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000E1A")]
	Default,
	[Token(Token = "0x4000E1B")]
	GripSphere,
	[Token(Token = "0x4000E1C")]
	GripCube,
	[Token(Token = "0x4000E1D")]
	Count
}
[Token(Token = "0x200020C")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000E1F")]
	Body,
	[Token(Token = "0x4000E20")]
	Clothing,
	[Token(Token = "0x4000E21")]
	Eyewear,
	[Token(Token = "0x4000E22")]
	Hair,
	[Token(Token = "0x4000E23")]
	Beard,
	[Token(Token = "0x4000E24")]
	Count
}
[Token(Token = "0x200020D")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200020E")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200020F")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000210")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000211")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000E2E")]
	AvatarHead,
	[Token(Token = "0x4000E2F")]
	AvatarHand,
	[Token(Token = "0x4000E30")]
	Object,
	[Token(Token = "0x4000E31")]
	ObjectStatic,
	[Token(Token = "0x4000E32")]
	Count
}
[Token(Token = "0x2000212")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000213")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000214")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000215")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000216")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000E3E")]
	Point,
	[Token(Token = "0x4000E3F")]
	Direction,
	[Token(Token = "0x4000E40")]
	Spot,
	[Token(Token = "0x4000E41")]
	Count
}
[Token(Token = "0x2000217")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000218")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000219")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200021A")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200021B")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000E57")]
	None = 0u,
	[Token(Token = "0x4000E58")]
	GazeTarget = 1u,
	[Token(Token = "0x4000E59")]
	Any = uint.MaxValue
}
[Token(Token = "0x200021C")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200021D")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200021E")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200021F")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000220")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000221")]
public class OvrAvatarSDKManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000796")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4002DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4002DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4002DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4002DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4002DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4002DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4002DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4002DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0xF16B0C", Offset = "0xF16B0C", VA = "0xF16B0C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000E6E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x170000FF")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xF1407C", Offset = "0xF1407C", VA = "0xF1407C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xF15AAC", Offset = "0xF15AAC", VA = "0xF15AAC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xF15CF8", Offset = "0xF15CF8", VA = "0xF15CF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xF15D6C", Offset = "0xF15D6C", VA = "0xF15D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xF165C0", Offset = "0xF165C0", VA = "0xF165C0")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xF16618", Offset = "0xF16618", VA = "0xF16618")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xF16670", Offset = "0xF16670", VA = "0xF16670")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xF166D8", Offset = "0xF166D8", VA = "0xF166D8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xF16740", Offset = "0xF16740", VA = "0xF16740")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xF163F8", Offset = "0xF163F8", VA = "0xF163F8")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xF16820", Offset = "0xF16820", VA = "0xF16820")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xF1693C", Offset = "0xF1693C", VA = "0xF1693C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xF15590", Offset = "0xF15590", VA = "0xF15590")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xF16A1C", Offset = "0xF16A1C", VA = "0xF16A1C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xF15CAC", Offset = "0xF15CAC", VA = "0xF15CAC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xF1420C", Offset = "0xF1420C", VA = "0xF1420C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xF16AF4", Offset = "0xF16AF4", VA = "0xF16AF4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000222")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000100")]
	public static string AppID
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xF16AB4", Offset = "0xF16AB4", VA = "0xF16AB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xF16C4C", Offset = "0xF16C4C", VA = "0xF16C4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xF16AD4", Offset = "0xF16AD4", VA = "0xF16AD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xF16C78", Offset = "0xF16C78", VA = "0xF16C78")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xF16B38", Offset = "0xF16B38", VA = "0xF16B38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xF16CA4", Offset = "0xF16CA4", VA = "0xF16CA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xF16CF8", Offset = "0xF16CF8", VA = "0xF16CF8")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000223")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xF18634", Offset = "0xF18634", VA = "0xF18634")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xF188D8", Offset = "0xF188D8", VA = "0xF188D8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xF18778", Offset = "0xF18778", VA = "0xF18778")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xF18B04", Offset = "0xF18B04", VA = "0xF18B04")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000224")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xF18B14", Offset = "0xF18B14", VA = "0xF18B14")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xF18C44", Offset = "0xF18C44", VA = "0xF18C44")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xF18DE4", Offset = "0xF18DE4", VA = "0xF18DE4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000225")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000E7D")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000E7E")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000E7F")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xF16D50", Offset = "0xF16D50", VA = "0xF16D50")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xF17BB8", Offset = "0xF17BB8", VA = "0xF17BB8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xF17DD4", Offset = "0xF17DD4", VA = "0xF17DD4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xF1732C", Offset = "0xF1732C", VA = "0xF1732C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xF170FC", Offset = "0xF170FC", VA = "0xF170FC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xF17210", Offset = "0xF17210", VA = "0xF17210")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xF18624", Offset = "0xF18624", VA = "0xF18624")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000226")]
public class OvrAvatarTextureCopyManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000797")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4002DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4002DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4002DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000798")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4002DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4002DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4002DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4002DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4002DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0xF19C6C", Offset = "0xF19C6C", VA = "0xF19C6C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000799")]
	public struct TextureSet
	{
		[Token(Token = "0x4002DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4002DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0xF19E18", Offset = "0xF19E18", VA = "0xF19E18")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200079A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D80", Offset = "0xB34D80")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4002DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4002DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000482")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F57")]
			[Address(RVA = "0xF1A5A4", Offset = "0xF1A5A4", VA = "0xF1A5A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000483")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F59")]
			[Address(RVA = "0xF1A60C", Offset = "0xF1A60C", VA = "0xF1A60C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F54")]
		[Address(RVA = "0xF19F64", Offset = "0xF19F64", VA = "0xF19F64")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0xF1A0CC", Offset = "0xF1A0CC", VA = "0xF1A0CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F56")]
		[Address(RVA = "0xF1A0D0", Offset = "0xF1A0D0", VA = "0xF1A0D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0xF1A5AC", Offset = "0xF1A5AC", VA = "0xF1A5AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000E83")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000E84")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000E87")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000E88")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000E89")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000E8A")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000E8B")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000E8C")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000E8D")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xF19594", Offset = "0xF19594", VA = "0xF19594")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xF198F0", Offset = "0xF198F0", VA = "0xF198F0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xF14290", Offset = "0xF14290", VA = "0xF14290")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xF19AE8", Offset = "0xF19AE8", VA = "0xF19AE8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xF19A58", Offset = "0xF19A58", VA = "0xF19A58")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xF19C7C", Offset = "0xF19C7C", VA = "0xF19C7C")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xF19E28", Offset = "0xF19E28", VA = "0xF19E28")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xF19ED0", Offset = "0xF19ED0", VA = "0xF19ED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B364", Offset = "0xB4B364")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xF167D4", Offset = "0xF167D4", VA = "0xF167D4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xF19F90", Offset = "0xF19F90", VA = "0xF19F90")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000227")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xF1A614", Offset = "0xF1A614", VA = "0xF1A614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xF1A774", Offset = "0xF1A774", VA = "0xF1A774")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000228")]
public class EnableSwitch : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000EF4")]
	public bool SetActive<T>(int target) where T : UnityEngine.MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD5870C", Offset = "0xD5870C", VA = "0xD5870C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000229")]
public class LipSyncDemo_Control : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AE7C", Offset = "0xB3AE7C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AEB4", Offset = "0xB3AEB4")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AEEC", Offset = "0xB3AEEC")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xDF7428", Offset = "0xDF7428", VA = "0xDF7428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xDF742C", Offset = "0xDF742C", VA = "0xDF742C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xDF74AC", Offset = "0xDF74AC", VA = "0xDF74AC")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xDF7698", Offset = "0xDF7698", VA = "0xDF7698")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200022A")]
public class LipSyncDemo_SetCurrentTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xDF76C8", Offset = "0xDF76C8", VA = "0xDF76C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xDF77CC", Offset = "0xDF77CC", VA = "0xDF77CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xDF7AE0", Offset = "0xDF7AE0", VA = "0xDF7AE0")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xDF7D6C", Offset = "0xDF7D6C", VA = "0xDF7D6C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xDF7DBC", Offset = "0xDF7DBC", VA = "0xDF7DBC")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200022B")]
public class OVRLipSyncDebugConsole : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000103")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x104EF1C", Offset = "0x104EF1C", VA = "0x104EF1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x104F1D4", Offset = "0x104F1D4", VA = "0x104F1D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x104F310", Offset = "0x104F310", VA = "0x104F310")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x104F244", Offset = "0x104F244", VA = "0x104F244")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x104D174", Offset = "0x104D174", VA = "0x104D174")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x104F498", Offset = "0x104F498", VA = "0x104F498")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x104D10C", Offset = "0x104D10C", VA = "0x104D10C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x104D1F4", Offset = "0x104D1F4", VA = "0x104D1F4")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x104F3A8", Offset = "0x104F3A8", VA = "0x104F3A8")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x104F538", Offset = "0x104F538", VA = "0x104F538")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x104F574", Offset = "0x104F574", VA = "0x104F574")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x104F768", Offset = "0x104F768", VA = "0x104F768")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x104F584", Offset = "0x104F584", VA = "0x104F584")]
	private void Display()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x104F818", Offset = "0x104F818", VA = "0x104F818")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200022C")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x10502F4", Offset = "0x10502F4", VA = "0x10502F4")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200022D")]
public static class OVRTouchpad
{
	[Token(Token = "0x200079B")]
	public enum TouchEvent
	{
		[Token(Token = "0x4002DBA")]
		SingleTap,
		[Token(Token = "0x4002DBB")]
		DoubleTap,
		[Token(Token = "0x4002DBC")]
		Left,
		[Token(Token = "0x4002DBD")]
		Right,
		[Token(Token = "0x4002DBE")]
		Up,
		[Token(Token = "0x4002DBF")]
		Down
	}

	[Token(Token = "0x200079C")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x104BD88", Offset = "0x104BD88", VA = "0x104BD88")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1052CD8", Offset = "0x1052CD8", VA = "0x1052CD8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1052FF8", Offset = "0x1052FF8", VA = "0x1052FF8")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x1052E48", Offset = "0x1052E48", VA = "0x1052E48")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x104CC68", Offset = "0x104CC68", VA = "0x104CC68")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200022E")]
public sealed class OVRTouchpadHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x10530A8", Offset = "0x10530A8", VA = "0x10530A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1053124", Offset = "0x1053124", VA = "0x1053124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x10531BC", Offset = "0x10531BC", VA = "0x10531BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1053218", Offset = "0x1053218", VA = "0x1053218")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x105327C", Offset = "0x105327C", VA = "0x105327C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x1053280", Offset = "0x1053280", VA = "0x1053280")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200022F")]
public class OVRLipSync : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200079D")]
	public enum Result
	{
		[Token(Token = "0x4002DC1")]
		Success = 0,
		[Token(Token = "0x4002DC2")]
		Unknown = -2200,
		[Token(Token = "0x4002DC3")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4002DC4")]
		InvalidParam = -2202,
		[Token(Token = "0x4002DC5")]
		BadSampleRate = -2203,
		[Token(Token = "0x4002DC6")]
		MissingDLL = -2204,
		[Token(Token = "0x4002DC7")]
		BadVersion = -2205,
		[Token(Token = "0x4002DC8")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x200079E")]
	public enum AudioDataType
	{
		[Token(Token = "0x4002DCA")]
		S16_Mono,
		[Token(Token = "0x4002DCB")]
		S16_Stereo,
		[Token(Token = "0x4002DCC")]
		F32_Mono,
		[Token(Token = "0x4002DCD")]
		F32_Stereo
	}

	[Token(Token = "0x200079F")]
	public enum Viseme
	{
		[Token(Token = "0x4002DCF")]
		sil,
		[Token(Token = "0x4002DD0")]
		PP,
		[Token(Token = "0x4002DD1")]
		FF,
		[Token(Token = "0x4002DD2")]
		TH,
		[Token(Token = "0x4002DD3")]
		DD,
		[Token(Token = "0x4002DD4")]
		kk,
		[Token(Token = "0x4002DD5")]
		CH,
		[Token(Token = "0x4002DD6")]
		SS,
		[Token(Token = "0x4002DD7")]
		nn,
		[Token(Token = "0x4002DD8")]
		RR,
		[Token(Token = "0x4002DD9")]
		aa,
		[Token(Token = "0x4002DDA")]
		E,
		[Token(Token = "0x4002DDB")]
		ih,
		[Token(Token = "0x4002DDC")]
		oh,
		[Token(Token = "0x4002DDD")]
		ou
	}

	[Token(Token = "0x20007A0")]
	public enum Signals
	{
		[Token(Token = "0x4002DDF")]
		VisemeOn,
		[Token(Token = "0x4002DE0")]
		VisemeOff,
		[Token(Token = "0x4002DE1")]
		VisemeAmount,
		[Token(Token = "0x4002DE2")]
		VisemeSmoothing,
		[Token(Token = "0x4002DE3")]
		LaughterAmount
	}

	[Token(Token = "0x20007A1")]
	public enum ContextProviders
	{
		[Token(Token = "0x4002DE5")]
		Original,
		[Token(Token = "0x4002DE6")]
		Enhanced,
		[Token(Token = "0x4002DE7")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20007A2")]
	public class Frame
	{
		[Token(Token = "0x4002DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4002DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4002DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4002DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x104C9D0", Offset = "0x104C9D0", VA = "0x104C9D0")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x104CA28", Offset = "0x104CA28", VA = "0x104CA28")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x104CAB8", Offset = "0x104CAB8", VA = "0x104CAB8")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000EA8")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x104B358", Offset = "0x104B358", VA = "0x104B358")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x104B3E8", Offset = "0x104B3E8", VA = "0x104B3E8")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x104B458", Offset = "0x104B458", VA = "0x104B458")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x104B4EC", Offset = "0x104B4EC", VA = "0x104B4EC")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x104B594", Offset = "0x104B594", VA = "0x104B594")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x104B660", Offset = "0x104B660", VA = "0x104B660")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x104B6E0", Offset = "0x104B6E0", VA = "0x104B6E0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x104B760", Offset = "0x104B760", VA = "0x104B760")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x104B808", Offset = "0x104B808", VA = "0x104B808")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x104B910", Offset = "0x104B910", VA = "0x104B910")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x104BD8C", Offset = "0x104BD8C", VA = "0x104BD8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x104BC50", Offset = "0x104BC50", VA = "0x104BC50")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x104BE6C", Offset = "0x104BE6C", VA = "0x104BE6C")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x104BF80", Offset = "0x104BF80", VA = "0x104BF80")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x104BFF0", Offset = "0x104BFF0", VA = "0x104BFF0")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x104C058", Offset = "0x104C058", VA = "0x104C058")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x104C17C", Offset = "0x104C17C", VA = "0x104C17C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x104C2B4", Offset = "0x104C2B4", VA = "0x104C2B4")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x104C394", Offset = "0x104C394", VA = "0x104C394")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x104C474", Offset = "0x104C474", VA = "0x104C474")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x104C578", Offset = "0x104C578", VA = "0x104C578")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x104C71C", Offset = "0x104C71C", VA = "0x104C71C")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x104C8B8", Offset = "0x104C8B8", VA = "0x104C8B8")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000230")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32098", Offset = "0xB32098")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AF24", Offset = "0xB3AF24")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AF5C", Offset = "0xB3AF5C")]
	public bool enableTouchInput;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AF94", Offset = "0xB3AF94")]
	public bool audioLoopback;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3AFCC", Offset = "0xB3AFCC")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B004", Offset = "0xB3B004")]
	public bool showVisemes;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B03C", Offset = "0xB3B03C")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B074", Offset = "0xB3B074")]
	public bool skipAudioSource;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B0AC", Offset = "0xB3B0AC")]
	public float gain;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x104CB40", Offset = "0x104CB40", VA = "0x104CB40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x104CD28", Offset = "0x104CD28", VA = "0x104CD28")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x104D274", Offset = "0x104D274", VA = "0x104D274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x104D558", Offset = "0x104D558", VA = "0x104D558")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x104D5BC", Offset = "0x104D5BC", VA = "0x104D5BC")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x104D628", Offset = "0x104D628", VA = "0x104D628")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x104D78C", Offset = "0x104D78C", VA = "0x104D78C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x104D8F0", Offset = "0x104D8F0", VA = "0x104D8F0")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x104DA24", Offset = "0x104DA24", VA = "0x104DA24")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x104D2B8", Offset = "0x104D2B8", VA = "0x104D2B8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x104D038", Offset = "0x104D038", VA = "0x104D038")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x104DA34", Offset = "0x104DA34", VA = "0x104DA34")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x104DB60", Offset = "0x104DB60", VA = "0x104DB60")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB320FC", Offset = "0xB320FC")]
public class OVRLipSyncContextBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B0E4", Offset = "0xB3B0E4")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B11C", Offset = "0xB3B11C")]
	public bool enableAcceleration;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000104")]
	public int Smoothing
	{
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x104DCE0", Offset = "0x104DCE0", VA = "0x104DCE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x104DBF4", Offset = "0x104DBF4", VA = "0x104DBF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public uint Context
	{
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x104DCE8", Offset = "0x104DCE8", VA = "0x104DCE8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000106")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x104DCF0", Offset = "0x104DCF0", VA = "0x104DCF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x104DCF8", Offset = "0x104DCF8", VA = "0x104DCF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x104DE88", Offset = "0x104DE88", VA = "0x104DE88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x104DFA4", Offset = "0x104DFA4", VA = "0x104DFA4")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x104DFAC", Offset = "0x104DFAC", VA = "0x104DFAC")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x104E0A0", Offset = "0x104E0A0", VA = "0x104E0A0")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x104E168", Offset = "0x104E168", VA = "0x104E168")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x104DB84", Offset = "0x104DB84", VA = "0x104DB84")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000232")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32160", Offset = "0xB32160")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B154", Offset = "0xB3B154")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x104E1E0", Offset = "0x104E1E0", VA = "0x104E1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x104E368", Offset = "0x104E368", VA = "0x104E368")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000233")]
public class OVRLipSyncContextMorphTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B18C", Offset = "0xB3B18C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B1C4", Offset = "0xB3B1C4")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B1FC", Offset = "0xB3B1FC")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B234", Offset = "0xB3B234")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B26C", Offset = "0xB3B26C")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B2A4", Offset = "0xB3B2A4")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3B2DC", Offset = "0xB3B2DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B2DC", Offset = "0xB3B2DC")]
	public float laughterThreshold;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3B330", Offset = "0xB3B330")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B330", Offset = "0xB3B330")]
	public float laughterMultiplier;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3B384", Offset = "0xB3B384")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B384", Offset = "0xB3B384")]
	public int smoothAmount;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x104E36C", Offset = "0x104E36C", VA = "0x104E36C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x104E4B0", Offset = "0x104E4B0", VA = "0x104E4B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x104E760", Offset = "0x104E760", VA = "0x104E760")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x104E5BC", Offset = "0x104E5BC", VA = "0x104E5BC")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x104E670", Offset = "0x104E670", VA = "0x104E670")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x104E830", Offset = "0x104E830", VA = "0x104E830")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x104E8F4", Offset = "0x104E8F4", VA = "0x104E8F4")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x104E95C", Offset = "0x104E95C", VA = "0x104E95C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000234")]
public class OVRLipSyncContextTextureFlip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B3DC", Offset = "0xB3B3DC")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xB3B3DC", Offset = "0xB3B3DC")]
	public Texture[] Textures;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3B558", Offset = "0xB3B558")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B558", Offset = "0xB3B558")]
	public int smoothAmount;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x104EA54", Offset = "0x104EA54", VA = "0x104EA54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x104EBA8", Offset = "0x104EBA8", VA = "0x104EBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x104ED4C", Offset = "0x104ED4C", VA = "0x104ED4C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x104EE70", Offset = "0x104EE70", VA = "0x104EE70")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000235")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB321C4", Offset = "0xB321C4")]
public class OVRLipSyncMicInput : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007A3")]
	public enum micActivation
	{
		[Token(Token = "0x4002DED")]
		HoldToSpeak,
		[Token(Token = "0x4002DEE")]
		PushToSpeak,
		[Token(Token = "0x4002DEF")]
		ConstantSpeak
	}

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B5B0", Offset = "0xB3B5B0")]
	public AudioSource audioSource;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B5E8", Offset = "0xB3B5E8")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B620", Offset = "0xB3B620")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3B658", Offset = "0xB3B658")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B658", Offset = "0xB3B658")]
	private float micInputVolume;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B6C0", Offset = "0xB3B6C0")]
	private int micFrequency;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B70C", Offset = "0xB3B70C")]
	public micActivation micControl;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B744", Offset = "0xB3B744")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B77C", Offset = "0xB3B77C")]
	public string selectedDevice;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000107")]
	public float MicFrequency
	{
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x104F88C", Offset = "0x104F88C", VA = "0x104F88C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x104F898", Offset = "0x104F898", VA = "0x104F898")]
		set
		{
		}
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x104F93C", Offset = "0x104F93C", VA = "0x104F93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x104F9FC", Offset = "0x104F9FC", VA = "0x104F9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x104FA48", Offset = "0x104FA48", VA = "0x104FA48")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x104FB8C", Offset = "0x104FB8C", VA = "0x104FB8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x104FFC4", Offset = "0x104FFC4", VA = "0x104FFC4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x104FFD8", Offset = "0x104FFD8", VA = "0x104FFD8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x104FFF0", Offset = "0x104FFF0", VA = "0x104FFF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x104FFF4", Offset = "0x104FFF4", VA = "0x104FFF4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x105006C", Offset = "0x105006C", VA = "0x105006C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x104FAD0", Offset = "0x104FAD0", VA = "0x104FAD0")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x104FE30", Offset = "0x104FE30", VA = "0x104FE30")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x104FCE8", Offset = "0x104FCE8", VA = "0x104FCE8")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x105024C", Offset = "0x105024C", VA = "0x105024C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1050254", Offset = "0x1050254", VA = "0x1050254")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000236")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x104E2AC", Offset = "0x104E2AC", VA = "0x104E2AC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1050284", Offset = "0x1050284", VA = "0x1050284")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000237")]
public class DebugUIBuilder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007A4")]
	public delegate void OnClick();

	[Token(Token = "0x20007A5")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20007A6")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20007A7")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20007A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34D90", Offset = "0xB34D90")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4002DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0xD506A0", Offset = "0xD506A0", VA = "0xD506A0")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0xD51040", Offset = "0xD51040", VA = "0xD51040")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20007A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34DA0", Offset = "0xB34DA0")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4002DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0xD50914", Offset = "0xD50914", VA = "0xD50914")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0xD51264", Offset = "0xD51264", VA = "0xD51264")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20007AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34DB0", Offset = "0xB34DB0")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4002DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4002DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0xD50B2C", Offset = "0xD50B2C", VA = "0xD50B2C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0xD514DC", Offset = "0xD514DC", VA = "0xD514DC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20007AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34DC0", Offset = "0xB34DC0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4002DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4002DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0xD50CC0", Offset = "0xD50CC0", VA = "0xD50CC0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0xD51890", Offset = "0xD51890", VA = "0xD51890")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20007AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34DD0", Offset = "0xB34DD0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4002DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4002DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0xD50F18", Offset = "0xD50F18", VA = "0xD50F18")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0xD518B0", Offset = "0xD518B0", VA = "0xD518B0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000EDC")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000EDD")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000EDE")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000EEB")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000EEC")]
	private const float marginH = 16f;

	[Token(Token = "0x4000EED")]
	private const float marginV = 16f;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xD4F64C", Offset = "0xD4F64C", VA = "0xD4F64C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xD4FA50", Offset = "0xD4FA50", VA = "0xD4FA50")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xD5001C", Offset = "0xD5001C", VA = "0xD5001C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xD4FDC8", Offset = "0xD4FDC8", VA = "0xD4FDC8")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xD501C4", Offset = "0xD501C4", VA = "0xD501C4")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xD50478", Offset = "0xD50478", VA = "0xD50478")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xD506A8", Offset = "0xD506A8", VA = "0xD506A8")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xD5078C", Offset = "0xD5078C", VA = "0xD5078C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xD5091C", Offset = "0xD5091C", VA = "0xD5091C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xD509B8", Offset = "0xD509B8", VA = "0xD509B8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xD50B34", Offset = "0xD50B34", VA = "0xD50B34")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xD50CC8", Offset = "0xD50CC8", VA = "0xD50CC8")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xD50F20", Offset = "0xD50F20", VA = "0xD50F20")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xD50FD0", Offset = "0xD50FD0", VA = "0xD50FD0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000238")]
public class HandedInputSelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xCE241C", Offset = "0xCE241C", VA = "0xCE241C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xCE24A4", Offset = "0xCE24A4", VA = "0xCE24A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xCE256C", Offset = "0xCE256C", VA = "0xCE256C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xCE25A8", Offset = "0xCE25A8", VA = "0xCE25A8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000239")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20007AD")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4002DF9")]
		On,
		[Token(Token = "0x4002DFA")]
		Off,
		[Token(Token = "0x4002DFB")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000108")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xCEA824", Offset = "0xCEA824", VA = "0xCEA824")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xCEA7E0", Offset = "0xCEA7E0", VA = "0xCEA7E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xCEA82C", Offset = "0xCEA82C", VA = "0xCEA82C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xCEA884", Offset = "0xCEA884", VA = "0xCEA884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xCEA99C", Offset = "0xCEA99C", VA = "0xCEA99C", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xCEA9B8", Offset = "0xCEA9B8", VA = "0xCEA9B8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xCEAA0C", Offset = "0xCEAA0C", VA = "0xCEAA0C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xCEAC68", Offset = "0xCEAC68", VA = "0xCEAC68")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xCEAD7C", Offset = "0xCEAD7C", VA = "0xCEAD7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xCEAE10", Offset = "0xCEAE10", VA = "0xCEAE10")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xCEAEE0", Offset = "0xCEAEE0", VA = "0xCEAEE0")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xCEAF98", Offset = "0xCEAF98", VA = "0xCEAF98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xCEB064", Offset = "0xCEB064", VA = "0xCEB064")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200023A")]
public class CharacterCameraConstraint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B854", Offset = "0xB3B854")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B88C", Offset = "0xB3B88C")]
	public bool EnableCollision;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B8C4", Offset = "0xB3B8C4")]
	public float MaxFade;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B8FC", Offset = "0xB3B8FC")]
	public float FadeMinDistance;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B934", Offset = "0xB3B934")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xD7DF28", Offset = "0xD7DF28", VA = "0xD7DF28")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xD7DFB0", Offset = "0xD7DFB0", VA = "0xD7DFB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xD7E020", Offset = "0xD7E020", VA = "0xD7E020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xD7E024", Offset = "0xD7E024", VA = "0xD7E024")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xD7E048", Offset = "0xD7E048", VA = "0xD7E048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xD7E06C", Offset = "0xD7E06C", VA = "0xD7E06C")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200023B")]
public class LocomotionController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xD37230", Offset = "0xD37230", VA = "0xD37230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xD372DC", Offset = "0xD372DC", VA = "0xD372DC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200023C")]
public class LocomotionTeleport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007AE")]
	public enum States
	{
		[Token(Token = "0x4002DFD")]
		Ready,
		[Token(Token = "0x4002DFE")]
		Aim,
		[Token(Token = "0x4002DFF")]
		CancelAim,
		[Token(Token = "0x4002E00")]
		PreTeleport,
		[Token(Token = "0x4002E01")]
		CancelTeleport,
		[Token(Token = "0x4002E02")]
		Teleporting,
		[Token(Token = "0x4002E03")]
		PostTeleport
	}

	[Token(Token = "0x20007AF")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4002E05")]
		None,
		[Token(Token = "0x4002E06")]
		Aim,
		[Token(Token = "0x4002E07")]
		PreTeleport,
		[Token(Token = "0x4002E08")]
		Teleport
	}

	[Token(Token = "0x20007B0")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4002E0A")]
		Point,
		[Token(Token = "0x4002E0B")]
		Sphere,
		[Token(Token = "0x4002E0C")]
		Capsule
	}

	[Token(Token = "0x20007B1")]
	public class AimData
	{
		[Token(Token = "0x4002E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4002E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4002E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4002E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4002E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB423B8", Offset = "0xB423B8")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000484")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6002F7C")]
			[Address(RVA = "0xD3A4A0", Offset = "0xD3A4A0", VA = "0xD3A4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53178", Offset = "0xB53178")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0xD3A4A8", Offset = "0xD3A4A8", VA = "0xD3A4A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53188", Offset = "0xB53188")]
			private set
			{
			}
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0xD3A42C", Offset = "0xD3A42C", VA = "0xD3A42C")]
		public AimData()
		{
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0xD3A4B0", Offset = "0xD3A4B0", VA = "0xD3A4B0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20007B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34DE0", Offset = "0xB34DE0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000485")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F82")]
			[Address(RVA = "0xD3A278", Offset = "0xD3A278", VA = "0xD3A278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F84")]
			[Address(RVA = "0xD3A2E0", Offset = "0xD3A2E0", VA = "0xD3A2E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0xD3877C", Offset = "0xD3877C", VA = "0xD3877C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0xD3A190", Offset = "0xD3A190", VA = "0xD3A190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0xD3A194", Offset = "0xD3A194", VA = "0xD3A194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0xD3A280", Offset = "0xD3A280", VA = "0xD3A280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34DF0", Offset = "0xB34DF0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000487")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F88")]
			[Address(RVA = "0xD39C58", Offset = "0xD39C58", VA = "0xD39C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0xD39CC0", Offset = "0xD39CC0", VA = "0xD39CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0xD38C64", Offset = "0xD38C64", VA = "0xD38C64")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0xD39B20", Offset = "0xD39B20", VA = "0xD39B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0xD39B24", Offset = "0xD39B24", VA = "0xD39B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0xD39C60", Offset = "0xD39C60", VA = "0xD39C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E00", Offset = "0xB34E00")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000489")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0xD39D6C", Offset = "0xD39D6C", VA = "0xD39D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F90")]
			[Address(RVA = "0xD39DD4", Offset = "0xD39DD4", VA = "0xD39DD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0xD38E48", Offset = "0xD38E48", VA = "0xD38E48")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0xD39CC8", Offset = "0xD39CC8", VA = "0xD39CC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0xD39CCC", Offset = "0xD39CCC", VA = "0xD39CCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0xD39D74", Offset = "0xD39D74", VA = "0xD39D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E10", Offset = "0xB34E10")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700048B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F94")]
			[Address(RVA = "0xD3A120", Offset = "0xD3A120", VA = "0xD3A120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F96")]
			[Address(RVA = "0xD3A188", Offset = "0xD3A188", VA = "0xD3A188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F91")]
		[Address(RVA = "0xD3902C", Offset = "0xD3902C", VA = "0xD3902C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0xD3A048", Offset = "0xD3A048", VA = "0xD3A048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0xD3A04C", Offset = "0xD3A04C", VA = "0xD3A04C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0xD3A128", Offset = "0xD3A128", VA = "0xD3A128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E20", Offset = "0xB34E20")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700048D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0xD39E80", Offset = "0xD39E80", VA = "0xD39E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0xD39EE8", Offset = "0xD39EE8", VA = "0xD39EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F97")]
		[Address(RVA = "0xD39210", Offset = "0xD39210", VA = "0xD39210")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0xD39DDC", Offset = "0xD39DDC", VA = "0xD39DDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0xD39DE0", Offset = "0xD39DE0", VA = "0xD39DE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0xD39E88", Offset = "0xD39E88", VA = "0xD39E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E30", Offset = "0xB34E30")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700048F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0xD3A3BC", Offset = "0xD3A3BC", VA = "0xD3A3BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0xD3A424", Offset = "0xD3A424", VA = "0xD3A424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0xD393F4", Offset = "0xD393F4", VA = "0xD393F4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0xD3A2E8", Offset = "0xD3A2E8", VA = "0xD3A2E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0xD3A2EC", Offset = "0xD3A2EC", VA = "0xD3A2EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0xD3A3C4", Offset = "0xD3A3C4", VA = "0xD3A3C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E40", Offset = "0xB34E40")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000491")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0xD39FD8", Offset = "0xD39FD8", VA = "0xD39FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0xD3A040", Offset = "0xD3A040", VA = "0xD3A040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0xD395D8", Offset = "0xD395D8", VA = "0xD395D8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0xD39EF0", Offset = "0xD39EF0", VA = "0xD39EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0xD39EF4", Offset = "0xD39EF4", VA = "0xD39EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0xD39FE0", Offset = "0xD39FE0", VA = "0xD39FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B96C", Offset = "0xB3B96C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B9A4", Offset = "0xB3B9A4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3B9DC", Offset = "0xB3B9DC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BA14", Offset = "0xB3BA14")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BA4C", Offset = "0xB3BA4C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BA84", Offset = "0xB3BA84")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BABC", Offset = "0xB3BABC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BAF4", Offset = "0xB3BAF4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB2C", Offset = "0xB3BB2C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BB3C", Offset = "0xB3BB3C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BB74", Offset = "0xB3BB74")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BBBC", Offset = "0xB3BBBC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BBCC", Offset = "0xB3BBCC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BC04", Offset = "0xB3BC04")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BC3C", Offset = "0xB3BC3C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BC74", Offset = "0xB3BC74")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000109")]
	public States CurrentState
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xD37CC0", Offset = "0xD37CC0", VA = "0xD37CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B3C8", Offset = "0xB4B3C8")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xD37CC8", Offset = "0xD37CC8", VA = "0xD37CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B3D8", Offset = "0xB4B3D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xD37EF8", Offset = "0xD37EF8", VA = "0xD37EF8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700010B")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xD37F20", Offset = "0xD37F20", VA = "0xD37F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B408", Offset = "0xB4B408")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xD37F28", Offset = "0xD37F28", VA = "0xD37F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B418", Offset = "0xB4B418")]
		private set
		{
		}
	}

	[Token(Token = "0x14000082")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD37CD0", Offset = "0xD37CD0", VA = "0xD37CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B3E8", Offset = "0xB4B3E8")]
		add
		{
		}
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xD37D74", Offset = "0xD37D74", VA = "0xD37D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B3F8", Offset = "0xB4B3F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000083")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xD38634", Offset = "0xD38634", VA = "0xD38634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B460", Offset = "0xB4B460")]
		add
		{
		}
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xD386D8", Offset = "0xD386D8", VA = "0xD386D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B470", Offset = "0xB4B470")]
		remove
		{
		}
	}

	[Token(Token = "0x14000084")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xD387A8", Offset = "0xD387A8", VA = "0xD387A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B4E4", Offset = "0xB4B4E4")]
		add
		{
		}
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xD3884C", Offset = "0xD3884C", VA = "0xD3884C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B4F4", Offset = "0xB4B4F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000085")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xD388F0", Offset = "0xD388F0", VA = "0xD388F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B504", Offset = "0xB4B504")]
		add
		{
		}
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xD38994", Offset = "0xD38994", VA = "0xD38994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B514", Offset = "0xB4B514")]
		remove
		{
		}
	}

	[Token(Token = "0x14000086")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xD38AAC", Offset = "0xD38AAC", VA = "0xD38AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B524", Offset = "0xB4B524")]
		add
		{
		}
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xD38B50", Offset = "0xD38B50", VA = "0xD38B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B534", Offset = "0xB4B534")]
		remove
		{
		}
	}

	[Token(Token = "0x14000087")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xD38C90", Offset = "0xD38C90", VA = "0xD38C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B5A8", Offset = "0xB4B5A8")]
		add
		{
		}
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xD38D34", Offset = "0xD38D34", VA = "0xD38D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B5B8", Offset = "0xB4B5B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000088")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xD38E74", Offset = "0xD38E74", VA = "0xD38E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B62C", Offset = "0xB4B62C")]
		add
		{
		}
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xD38F18", Offset = "0xD38F18", VA = "0xD38F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B63C", Offset = "0xB4B63C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000089")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xD39058", Offset = "0xD39058", VA = "0xD39058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B6B0", Offset = "0xB4B6B0")]
		add
		{
		}
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xD390FC", Offset = "0xD390FC", VA = "0xD390FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B6C0", Offset = "0xB4B6C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400008A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xD3923C", Offset = "0xD3923C", VA = "0xD3923C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B734", Offset = "0xB4B734")]
		add
		{
		}
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xD392E0", Offset = "0xD392E0", VA = "0xD392E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B744", Offset = "0xB4B744")]
		remove
		{
		}
	}

	[Token(Token = "0x1400008B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xD39420", Offset = "0xD39420", VA = "0xD39420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B7B8", Offset = "0xB4B7B8")]
		add
		{
		}
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xD394C4", Offset = "0xD394C4", VA = "0xD394C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B7C8", Offset = "0xB4B7C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400008C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xD39604", Offset = "0xD39604", VA = "0xD39604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B83C", Offset = "0xB4B83C")]
		add
		{
		}
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xD396A8", Offset = "0xD396A8", VA = "0xD396A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B84C", Offset = "0xB4B84C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xD37990", Offset = "0xD37990", VA = "0xD37990")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xD379B4", Offset = "0xD379B4", VA = "0xD379B4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xD37E18", Offset = "0xD37E18", VA = "0xD37E18")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xD37F30", Offset = "0xD37F30", VA = "0xD37F30")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xD38288", Offset = "0xD38288", VA = "0xD38288")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB4B428", Offset = "0xB4B428")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xD38340", Offset = "0xD38340", VA = "0xD38340")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xD38408", Offset = "0xD38408", VA = "0xD38408")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xD38424", Offset = "0xD38424", VA = "0xD38424")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xD384EC", Offset = "0xD384EC", VA = "0xD384EC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xD38530", Offset = "0xD38530", VA = "0xD38530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xD3858C", Offset = "0xD3858C", VA = "0xD3858C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xD3862C", Offset = "0xD3862C", VA = "0xD3862C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xD385BC", Offset = "0xD385BC", VA = "0xD385BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B480", Offset = "0xB4B480")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xD38A38", Offset = "0xD38A38", VA = "0xD38A38")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xD38BF4", Offset = "0xD38BF4", VA = "0xD38BF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B544", Offset = "0xB4B544")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xD38DD8", Offset = "0xD38DD8", VA = "0xD38DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B5C8", Offset = "0xB4B5C8")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xD38FBC", Offset = "0xD38FBC", VA = "0xD38FBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B64C", Offset = "0xB4B64C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xD391A0", Offset = "0xD391A0", VA = "0xD391A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B6D0", Offset = "0xB4B6D0")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xD39384", Offset = "0xD39384", VA = "0xD39384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B754", Offset = "0xB4B754")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xD39568", Offset = "0xD39568", VA = "0xD39568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B7D8", Offset = "0xB4B7D8")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xD3974C", Offset = "0xD3974C", VA = "0xD3974C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xD39890", Offset = "0xD39890", VA = "0xD39890")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xD398C4", Offset = "0xD398C4", VA = "0xD398C4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xD399E4", Offset = "0xD399E4", VA = "0xD399E4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xD39B10", Offset = "0xD39B10", VA = "0xD39B10")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200023D")]
public class SimpleCapsuleWithStickMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400008D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xCA59C8", Offset = "0xCA59C8", VA = "0xCA59C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B85C", Offset = "0xB4B85C")]
		add
		{
		}
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xCA5A6C", Offset = "0xCA5A6C", VA = "0xCA5A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B86C", Offset = "0xB4B86C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400008E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xCA5B10", Offset = "0xCA5B10", VA = "0xCA5B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B87C", Offset = "0xB4B87C")]
		add
		{
		}
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCA5BB4", Offset = "0xCA5BB4", VA = "0xCA5BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B88C", Offset = "0xB4B88C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xCA5C58", Offset = "0xCA5C58", VA = "0xCA5C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xCA5D00", Offset = "0xCA5D00", VA = "0xCA5D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xCA5D04", Offset = "0xCA5D04", VA = "0xCA5D04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xCA5D78", Offset = "0xCA5D78", VA = "0xCA5D78")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xCA5EE8", Offset = "0xCA5EE8", VA = "0xCA5EE8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xCA61CC", Offset = "0xCA61CC", VA = "0xCA61CC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xCA63BC", Offset = "0xCA63BC", VA = "0xCA63BC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200023E")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xCACCE0", Offset = "0xCACCE0", VA = "0xCACCE0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xCACD74", Offset = "0xCACD74", VA = "0xCACD74", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000FD3")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xCACE44", Offset = "0xCACE44", VA = "0xCACE44")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200023F")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BD6C", Offset = "0xB3BD6C")]
	public float Range;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xCACE54", Offset = "0xCACE54", VA = "0xCACE54", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xCACFB0", Offset = "0xCACFB0", VA = "0xCACFB0")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000240")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BDA4", Offset = "0xB3BDA4")]
	public float Range;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BDDC", Offset = "0xB3BDDC")]
	public float MinimumElevation;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BE14", Offset = "0xB3BE14")]
	public float Gravity;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BE4C", Offset = "0xB3BE4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3BE4C", Offset = "0xB3BE4C")]
	public float AimVelocity;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BEA8", Offset = "0xB3BEA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3BEA8", Offset = "0xB3BEA8")]
	public float AimStep;

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xCACFC0", Offset = "0xCACFC0", VA = "0xCACFC0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xCAD20C", Offset = "0xCAD20C", VA = "0xCAD20C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000241")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BF00", Offset = "0xB3BF00")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xCAD220", Offset = "0xCAD220", VA = "0xCAD220")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xCAD304", Offset = "0xCAD304", VA = "0xCAD304")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xCAD334", Offset = "0xCAD334", VA = "0xCAD334")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xCAD364", Offset = "0xCAD364", VA = "0xCAD364")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xCAD404", Offset = "0xCAD404", VA = "0xCAD404", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xCAD470", Offset = "0xCAD470", VA = "0xCAD470", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xCAD4D8", Offset = "0xCAD4D8", VA = "0xCAD4D8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000242")]
public class TeleportDestination : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BF38", Offset = "0xB3BF38")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BF48", Offset = "0xB3BF48")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BF80", Offset = "0xB3BF80")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3BFB8", Offset = "0xB3BFB8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700010C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xCAD5F4", Offset = "0xCAD5F4", VA = "0xCAD5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B89C", Offset = "0xB4B89C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xCAD5FC", Offset = "0xCAD5FC", VA = "0xCAD5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B8AC", Offset = "0xB4B8AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400008F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xCAD7AC", Offset = "0xCAD7AC", VA = "0xCAD7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B8BC", Offset = "0xB4B8BC")]
		add
		{
		}
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xCAD850", Offset = "0xCAD850", VA = "0xCAD850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B8CC", Offset = "0xB4B8CC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xCAD608", Offset = "0xCAD608", VA = "0xCAD608")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xCAD690", Offset = "0xCAD690", VA = "0xCAD690")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xCAD768", Offset = "0xCAD768", VA = "0xCAD768")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xCAD7A8", Offset = "0xCAD7A8", VA = "0xCAD7A8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xCAD8F4", Offset = "0xCAD8F4", VA = "0xCAD8F4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xCAD95C", Offset = "0xCAD95C", VA = "0xCAD95C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xCAD97C", Offset = "0xCAD97C", VA = "0xCAD97C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000243")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20007B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E50", Offset = "0xB34E50")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000493")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FAC")]
			[Address(RVA = "0xCAE040", Offset = "0xCAE040", VA = "0xCAE040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0xCAE0A8", Offset = "0xCAE0A8", VA = "0xCAE0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0xCADD8C", Offset = "0xCADD8C", VA = "0xCADD8C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0xCADFB0", Offset = "0xCADFB0", VA = "0xCADFB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0xCADFB4", Offset = "0xCADFB4", VA = "0xCADFB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0xCAE048", Offset = "0xCAE048", VA = "0xCAE048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E60", Offset = "0xB34E60")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000495")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0xCADF40", Offset = "0xCADF40", VA = "0xCADF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0xCADFA8", Offset = "0xCADFA8", VA = "0xCADFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0xCADE28", Offset = "0xCADE28", VA = "0xCADE28")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB0")]
		[Address(RVA = "0xCADEAC", Offset = "0xCADEAC", VA = "0xCADEAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB1")]
		[Address(RVA = "0xCADEB0", Offset = "0xCADEB0", VA = "0xCADEB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0xCADF48", Offset = "0xCADF48", VA = "0xCADF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xCADB5C", Offset = "0xCADB5C", VA = "0xCADB5C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xCADC08", Offset = "0xCADC08", VA = "0xCADC08", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xCADC60", Offset = "0xCADC60", VA = "0xCADC60", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xCADD1C", Offset = "0xCADD1C", VA = "0xCADD1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B8DC", Offset = "0xB4B8DC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xCADDB8", Offset = "0xCADDB8", VA = "0xCADDB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B940", Offset = "0xB4B940")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FF0")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000FF1")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xCADE54", Offset = "0xCADE54", VA = "0xCADE54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B9A4", Offset = "0xB4B9A4")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xCADE80", Offset = "0xCADE80", VA = "0xCADE80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B9B4", Offset = "0xB4B9B4")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000244")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C000", Offset = "0xB3C000")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C010", Offset = "0xB3C010")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C048", Offset = "0xB3C048")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C080", Offset = "0xB3C080")]
	public bool FastTeleport;

	[Token(Token = "0x1700010D")]
	public Transform Pointer
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xCAE0B0", Offset = "0xCAE0B0", VA = "0xCAE0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B9C4", Offset = "0xB4B9C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xCAE0B8", Offset = "0xCAE0B8", VA = "0xCAE0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4B9D4", Offset = "0xB4B9D4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xCAE0C0", Offset = "0xCAE0C0", VA = "0xCAE0C0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xCAE21C", Offset = "0xCAE21C", VA = "0xCAE21C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xCAE2D4", Offset = "0xCAE2D4", VA = "0xCAE2D4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000245")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20007BB")]
	public enum InputModes
	{
		[Token(Token = "0x4002E2E")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4002E2F")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4002E30")]
		ThumbstickTeleport,
		[Token(Token = "0x4002E31")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20007BC")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002E33")]
		A,
		[Token(Token = "0x4002E34")]
		B,
		[Token(Token = "0x4002E35")]
		LeftTrigger,
		[Token(Token = "0x4002E36")]
		LeftThumbstick,
		[Token(Token = "0x4002E37")]
		RightTrigger,
		[Token(Token = "0x4002E38")]
		RightThumbstick,
		[Token(Token = "0x4002E39")]
		X,
		[Token(Token = "0x4002E3A")]
		Y
	}

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C0B8", Offset = "0xB3C0B8")]
	public InputModes InputMode;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C0F0", Offset = "0xB3C0F0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C128", Offset = "0xB3C128")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C160", Offset = "0xB3C160")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xCAE2D8", Offset = "0xCAE2D8", VA = "0xCAE2D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xCAE2DC", Offset = "0xCAE2DC", VA = "0xCAE2DC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xCAE724", Offset = "0xCAE724", VA = "0xCAE724", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xCAE7E4", Offset = "0xCAE7E4", VA = "0xCAE7E4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000246")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20007BD")]
	public enum OrientationModes
	{
		[Token(Token = "0x4002E3C")]
		HeadRelative,
		[Token(Token = "0x4002E3D")]
		ForwardFacing
	}

	[Token(Token = "0x20007BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E70", Offset = "0xB34E70")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0xCAEC74", Offset = "0xCAEC74", VA = "0xCAEC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0xCAECDC", Offset = "0xCAECDC", VA = "0xCAECDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0xCAEA50", Offset = "0xCAEA50", VA = "0xCAEA50")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0xCAEBCC", Offset = "0xCAEBCC", VA = "0xCAEBCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0xCAEBD0", Offset = "0xCAEBD0", VA = "0xCAEBD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0xCAEC7C", Offset = "0xCAEC7C", VA = "0xCAEC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xCAE890", Offset = "0xCAE890", VA = "0xCAE890")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xCAE944", Offset = "0xCAE944", VA = "0xCAE944")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xCAE94C", Offset = "0xCAE94C", VA = "0xCAE94C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xCAE998", Offset = "0xCAE998", VA = "0xCAE998", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xCAE9E0", Offset = "0xCAE9E0", VA = "0xCAE9E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4B9E4", Offset = "0xB4B9E4")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001002")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6001003")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xCAEA7C", Offset = "0xCAEA7C", VA = "0xCAEA7C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xCAEBA0", Offset = "0xCAEBA0", VA = "0xCAEBA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BA48", Offset = "0xB4BA48")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000247")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6001006")]
	[Address(RVA = "0xCAECE4", Offset = "0xCAECE4", VA = "0xCAECE4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xCAECE8", Offset = "0xCAECE8", VA = "0xCAECE8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xCAED64", Offset = "0xCAED64", VA = "0xCAED64")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000248")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C198", Offset = "0xB3C198")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C1D0", Offset = "0xB3C1D0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C208", Offset = "0xB3C208")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C240", Offset = "0xB3C240")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xCAED68", Offset = "0xCAED68", VA = "0xCAED68", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xCAEDD8", Offset = "0xCAEDD8", VA = "0xCAEDD8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xCAF250", Offset = "0xCAF250", VA = "0xCAF250")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000249")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C278", Offset = "0xB3C278")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C2B0", Offset = "0xB3C2B0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C2E8", Offset = "0xB3C2E8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xCAF254", Offset = "0xCAF254", VA = "0xCAF254", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xCAF298", Offset = "0xCAF298", VA = "0xCAF298", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xCAF708", Offset = "0xCAF708", VA = "0xCAF708")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200024A")]
public class TeleportPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xCAF718", Offset = "0xCAF718", VA = "0xCAF718")]
	private void Start()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xCAF71C", Offset = "0xCAF71C", VA = "0xCAF71C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xCAF724", Offset = "0xCAF724", VA = "0xCAF724")]
	private void Update()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xCAF80C", Offset = "0xCAF80C", VA = "0xCAF80C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xCAF834", Offset = "0xCAF834", VA = "0xCAF834")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200024B")]
public abstract class TeleportSupport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C320", Offset = "0xB3C320")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700010E")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0xCAF84C", Offset = "0xCAF84C", VA = "0xCAF84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BA58", Offset = "0xB4BA58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001015")]
		[Address(RVA = "0xCAF854", Offset = "0xCAF854", VA = "0xCAF854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BA68", Offset = "0xB4BA68")]
		private set
		{
		}
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xCACD10", Offset = "0xCACD10", VA = "0xCACD10", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xCACE18", Offset = "0xCACE18", VA = "0xCACE18", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xCAF85C", Offset = "0xCAF85C", VA = "0xCAF85C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB4BA78", Offset = "0xB4BA78")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xCAD464", Offset = "0xCAD464", VA = "0xCAD464", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xCAD4D0", Offset = "0xCAD4D0", VA = "0xCAD4D0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xCACE4C", Offset = "0xCACE4C", VA = "0xCACE4C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200024C")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20007BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E80", Offset = "0xB34E80")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000499")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FBE")]
			[Address(RVA = "0xCAFEB0", Offset = "0xCAFEB0", VA = "0xCAFEB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0xCAFF18", Offset = "0xCAFF18", VA = "0xCAFF18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0xCAFAAC", Offset = "0xCAFAAC", VA = "0xCAFAAC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0xCAFC44", Offset = "0xCAFC44", VA = "0xCAFC44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0xCAFC48", Offset = "0xCAFC48", VA = "0xCAFC48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0xCAFEB8", Offset = "0xCAFEB8", VA = "0xCAFEB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C330", Offset = "0xB3C330")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000F79")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xCAF924", Offset = "0xCAF924", VA = "0xCAF924")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xCAF9E8", Offset = "0xCAF9E8", VA = "0xCAF9E8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xCAFA14", Offset = "0xCAFA14", VA = "0xCAFA14", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xCAFA3C", Offset = "0xCAFA3C", VA = "0xCAFA3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4BAB0", Offset = "0xB4BAB0")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xCAFAD8", Offset = "0xCAFAD8", VA = "0xCAFAD8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6001021")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xCAFAF4", Offset = "0xCAFAF4", VA = "0xCAFAF4", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xCAFC18", Offset = "0xCAFC18", VA = "0xCAFC18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BB14", Offset = "0xB4BB14")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200024D")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xCAFF20", Offset = "0xCAFF20", VA = "0xCAFF20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xCAFF80", Offset = "0xCAFF80", VA = "0xCAFF80", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xCB0104", Offset = "0xCB0104", VA = "0xCB0104", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xCB01F4", Offset = "0xCB01F4", VA = "0xCB01F4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB4BB24", Offset = "0xB4BB24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xCB01F8", Offset = "0xCB01F8", VA = "0xCB01F8")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200024E")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C368", Offset = "0xB3C368")]
	public float LOSOffset;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C3A0", Offset = "0xB3C3A0")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xCB0204", Offset = "0xCB0204", VA = "0xCB0204", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xCB0434", Offset = "0xCB0434", VA = "0xCB0434")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200024F")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600102B")]
	[Address(RVA = "0xCB0440", Offset = "0xCB0440", VA = "0xCB0440", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xCB05C4", Offset = "0xCB05C4", VA = "0xCB05C4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000250")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600102D")]
	[Address(RVA = "0xCB05C8", Offset = "0xCB05C8", VA = "0xCB05C8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xCB0660", Offset = "0xCB0660", VA = "0xCB0660", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600102F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xCB06F4", Offset = "0xCB06F4", VA = "0xCB06F4")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000251")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20007C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E90", Offset = "0xB34E90")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4002E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4002E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700049B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0xCB0A5C", Offset = "0xCB0A5C", VA = "0xCB0A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0xCB0AC4", Offset = "0xCB0AC4", VA = "0xCB0AC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0xCB0798", Offset = "0xCB0798", VA = "0xCB0798")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0xCB095C", Offset = "0xCB095C", VA = "0xCB095C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0xCB0960", Offset = "0xCB0960", VA = "0xCB0960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0xCB0A64", Offset = "0xCB0A64", VA = "0xCB0A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C3D8", Offset = "0xB3C3D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3C3D8", Offset = "0xB3C3D8")]
	public float TransitionDuration;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C430", Offset = "0xB3C430")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3C430", Offset = "0xB3C430")]
	public float TeleportDelay;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C484", Offset = "0xB3C484")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xCB06FC", Offset = "0xCB06FC", VA = "0xCB06FC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xCB0728", Offset = "0xCB0728", VA = "0xCB0728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4BB5C", Offset = "0xB4BB5C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xCB07C4", Offset = "0xCB07C4", VA = "0xCB07C4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000252")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6001034")]
	[Address(RVA = "0xCB0ACC", Offset = "0xCB0ACC", VA = "0xCB0ACC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xCB0AE8", Offset = "0xCB0AE8", VA = "0xCB0AE8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000253")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20007C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EA0", Offset = "0xB34EA0")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4002E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4002E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0xCB0D34", Offset = "0xCB0D34", VA = "0xCB0D34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0xCB0D9C", Offset = "0xCB0D9C", VA = "0xCB0D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0xCB0B8C", Offset = "0xCB0B8C", VA = "0xCB0B8C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002FC8")]
		[Address(RVA = "0xCB0C00", Offset = "0xCB0C00", VA = "0xCB0C00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0xCB0C04", Offset = "0xCB0C04", VA = "0xCB0C04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0xCB0D3C", Offset = "0xCB0D3C", VA = "0xCB0D3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C4BC", Offset = "0xB3C4BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3C4BC", Offset = "0xB3C4BC")]
	public float TransitionDuration;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xCB0AF0", Offset = "0xCB0AF0", VA = "0xCB0AF0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xCB0B1C", Offset = "0xCB0B1C", VA = "0xCB0B1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4BBC0", Offset = "0xB4BBC0")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xCB0BB8", Offset = "0xCB0BB8", VA = "0xCB0BB8")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000254")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20007C2")]
	public enum PlabackState
	{
		[Token(Token = "0x4002E50")]
		Idle = 1,
		[Token(Token = "0x4002E51")]
		Preparing,
		[Token(Token = "0x4002E52")]
		Buffering,
		[Token(Token = "0x4002E53")]
		Ready,
		[Token(Token = "0x4002E54")]
		Ended
	}

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700010F")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6001039")]
		[Address(RVA = "0xBBE0C4", Offset = "0xBBE0C4", VA = "0xBBE0C4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000110")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600103A")]
		[Address(RVA = "0xBBE380", Offset = "0xBBE380", VA = "0xBBE380")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000111")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0xBBA4C8", Offset = "0xBBA4C8", VA = "0xBBA4C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000112")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600103C")]
		[Address(RVA = "0xBBB780", Offset = "0xBBB780", VA = "0xBBB780")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000113")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0xBBE5C4", Offset = "0xBBE5C4", VA = "0xBBE5C4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000114")]
	public static long Duration
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0xBBB964", Offset = "0xBBB964", VA = "0xBBB964")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000115")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0xBBB870", Offset = "0xBBB870", VA = "0xBBB870")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6001040")]
		[Address(RVA = "0xBBAEF4", Offset = "0xBBAEF4", VA = "0xBBAEF4")]
		set
		{
		}
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xBBBFC4", Offset = "0xBBBFC4", VA = "0xBBBFC4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xBBBD08", Offset = "0xBBBD08", VA = "0xBBBD08")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xBBAB84", Offset = "0xBBAB84", VA = "0xBBAB84")]
	public static void Play()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xBBAD08", Offset = "0xBBAD08", VA = "0xBBAD08")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xBBBB30", Offset = "0xBBBB30", VA = "0xBBBB30")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xBBC1B8", Offset = "0xBBC1B8", VA = "0xBBC1B8")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xBBB5C4", Offset = "0xBBB5C4", VA = "0xBBB5C4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000255")]
public class ButtonDownListener : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000090")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0xD74734", Offset = "0xD74734", VA = "0xD74734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC24", Offset = "0xB4BC24")]
		add
		{
		}
		[Token(Token = "0x600104A")]
		[Address(RVA = "0xD747D8", Offset = "0xD747D8", VA = "0xD747D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC34", Offset = "0xB4BC34")]
		remove
		{
		}
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xD7487C", Offset = "0xD7487C", VA = "0xD7487C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xD74890", Offset = "0xD74890", VA = "0xD74890")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000256")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20007C3")]
	public enum ButtonType
	{
		[Token(Token = "0x4002E56")]
		Play,
		[Token(Token = "0x4002E57")]
		Pause,
		[Token(Token = "0x4002E58")]
		FastForward,
		[Token(Token = "0x4002E59")]
		Rewind,
		[Token(Token = "0x4002E5A")]
		SkipForward,
		[Token(Token = "0x4002E5B")]
		SkipBack,
		[Token(Token = "0x4002E5C")]
		Stop
	}

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000116")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD3CBB8", Offset = "0xD3CBB8", VA = "0xD3CBB8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD3CBC0", Offset = "0xD3CBC0", VA = "0xD3CBC0")]
		set
		{
		}
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xD3CBE4", Offset = "0xD3CBE4", VA = "0xD3CBE4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xD3E0B0", Offset = "0xD3E0B0", VA = "0xD3E0B0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000257")]
public class MoviePlayerSample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007C4")]
	public enum VideoShape
	{
		[Token(Token = "0x4002E5E")]
		_360,
		[Token(Token = "0x4002E5F")]
		_180,
		[Token(Token = "0x4002E60")]
		Quad
	}

	[Token(Token = "0x20007C5")]
	public enum VideoStereo
	{
		[Token(Token = "0x4002E62")]
		Mono,
		[Token(Token = "0x4002E63")]
		TopBottom,
		[Token(Token = "0x4002E64")]
		LeftRight,
		[Token(Token = "0x4002E65")]
		BottomTop
	}

	[Token(Token = "0x20007C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EB0", Offset = "0xB34EB0")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0xBBC480", Offset = "0xBBC480", VA = "0xBBC480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0xBBC4E8", Offset = "0xBBC4E8", VA = "0xBBC4E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0xBBA880", Offset = "0xBBA880", VA = "0xBBA880")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0xBBC2FC", Offset = "0xBBC2FC", VA = "0xBBC2FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0xBBC300", Offset = "0xBBC300", VA = "0xBBC300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0xBBC488", Offset = "0xBBC488", VA = "0xBBC488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20007C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EC0", Offset = "0xB34EC0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4002E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0xBBAAE8", Offset = "0xBBAAE8", VA = "0xBBAAE8")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0xBBBEF0", Offset = "0xBBBEF0", VA = "0xBBBEF0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C544", Offset = "0xB3C544")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C554", Offset = "0xB3C554")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C564", Offset = "0xB3C564")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000117")]
	public bool IsPlaying
	{
		[Token(Token = "0x6001051")]
		[Address(RVA = "0xBBA27C", Offset = "0xBBA27C", VA = "0xBBA27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC44", Offset = "0xB4BC44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001052")]
		[Address(RVA = "0xBBA284", Offset = "0xBBA284", VA = "0xBBA284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC54", Offset = "0xB4BC54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public long Duration
	{
		[Token(Token = "0x6001053")]
		[Address(RVA = "0xBBA290", Offset = "0xBBA290", VA = "0xBBA290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC64", Offset = "0xB4BC64")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6001054")]
		[Address(RVA = "0xBBA298", Offset = "0xBBA298", VA = "0xBBA298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC74", Offset = "0xB4BC74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xBBA2A0", Offset = "0xBBA2A0", VA = "0xBBA2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC84", Offset = "0xB4BC84")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xBBA2A8", Offset = "0xBBA2A8", VA = "0xBBA2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BC94", Offset = "0xB4BC94")]
		private set
		{
		}
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xBBA2B0", Offset = "0xBBA2B0", VA = "0xBBA2B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xBBA530", Offset = "0xBBA530", VA = "0xBBA530")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xBBA598", Offset = "0xBBA598", VA = "0xBBA598")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xBBA810", Offset = "0xBBA810", VA = "0xBBA810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4BCA4", Offset = "0xB4BCA4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xBBA8AC", Offset = "0xBBA8AC", VA = "0xBBA8AC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xBBAAF0", Offset = "0xBBAAF0", VA = "0xBBAAF0")]
	public void Play()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xBBAC78", Offset = "0xBBAC78", VA = "0xBBAC78")]
	public void Pause()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xBBADFC", Offset = "0xBBADFC", VA = "0xBBADFC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xBBB034", Offset = "0xBBB034", VA = "0xBBB034")]
	private void Update()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xBBBA58", Offset = "0xBBBA58", VA = "0xBBBA58")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xBBBC78", Offset = "0xBBBC78", VA = "0xBBBC78")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xBBBDFC", Offset = "0xBBBDFC", VA = "0xBBBDFC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xBBBEE0", Offset = "0xBBBEE0", VA = "0xBBBEE0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000258")]
public class MoviePlayerSampleControls : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007C8")]
	private enum PlaybackState
	{
		[Token(Token = "0x4002E6D")]
		Playing,
		[Token(Token = "0x4002E6E")]
		Paused,
		[Token(Token = "0x4002E6F")]
		Rewinding,
		[Token(Token = "0x4002E70")]
		FastForwarding
	}

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xBBC4F0", Offset = "0xBBC4F0", VA = "0xBBC4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xBBC7A4", Offset = "0xBBC7A4", VA = "0xBBC7A4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xBBC8D0", Offset = "0xBBC8D0", VA = "0xBBC8D0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xBBC9DC", Offset = "0xBBC9DC", VA = "0xBBC9DC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xBBCABC", Offset = "0xBBCABC", VA = "0xBBCABC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xBBC9B0", Offset = "0xBBC9B0", VA = "0xBBC9B0")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xBBCB9C", Offset = "0xBBCB9C", VA = "0xBBCB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xBBC698", Offset = "0xBBC698", VA = "0xBBC698")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xBBCF30", Offset = "0xBBCF30", VA = "0xBBCF30")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000259")]
public static class VectorUtil
{
	[Token(Token = "0x600106D")]
	[Address(RVA = "0xF5C338", Offset = "0xF5C338", VA = "0xF5C338")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200025A")]
public class DebugUISample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xD51C80", Offset = "0xD51C80", VA = "0xD51C80")]
	private void Start()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xD52050", Offset = "0xD52050", VA = "0xD52050")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xD52108", Offset = "0xD52108", VA = "0xD52108")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xD52308", Offset = "0xD52308", VA = "0xD52308")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xD523F0", Offset = "0xD523F0", VA = "0xD523F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xD524CC", Offset = "0xD524CC", VA = "0xD524CC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xD52538", Offset = "0xD52538", VA = "0xD52538")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xD52540", Offset = "0xD52540", VA = "0xD52540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BD18", Offset = "0xB4BD18")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xD5259C", Offset = "0xD5259C", VA = "0xD5259C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BD28", Offset = "0xB4BD28")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xD525F8", Offset = "0xD525F8", VA = "0xD525F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BD38", Offset = "0xB4BD38")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xD52654", Offset = "0xD52654", VA = "0xD52654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BD48", Offset = "0xB4BD48")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200025B")]
public class HandsActiveChecker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34ED0", Offset = "0xB34ED0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0xCE2E04", Offset = "0xCE2E04", VA = "0xCE2E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FDA")]
			[Address(RVA = "0xCE2E6C", Offset = "0xCE2E6C", VA = "0xCE2E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0xCE2CB4", Offset = "0xCE2CB4", VA = "0xCE2CB4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0xCE2CE8", Offset = "0xCE2CE8", VA = "0xCE2CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0xCE2CEC", Offset = "0xCE2CEC", VA = "0xCE2CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0xCE2E0C", Offset = "0xCE2E0C", VA = "0xCE2E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xCE29B8", Offset = "0xCE29B8", VA = "0xCE29B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xCE2AB8", Offset = "0xCE2AB8", VA = "0xCE2AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xCE2A48", Offset = "0xCE2A48", VA = "0xCE2A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4BD58", Offset = "0xB4BD58")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xCE2CE0", Offset = "0xCE2CE0", VA = "0xCE2CE0")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200025C")]
[ExecuteInEditMode]
public class CharacterCapsule : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3C584", Offset = "0xB3C584")]
	public int SubdivisionsU;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3C5A0", Offset = "0xB3C5A0")]
	public int SubdivisionsV;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xD7E318", Offset = "0xD7E318", VA = "0xD7E318")]
	private void Update()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xD7EDD0", Offset = "0xD7EDD0", VA = "0xD7EDD0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200025D")]
public class LocomotionSampleSupport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700011A")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600107F")]
		[Address(RVA = "0xD372E4", Offset = "0xD372E4", VA = "0xD372E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xD3733C", Offset = "0xD3733C", VA = "0xD3733C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xD37680", Offset = "0xD37680", VA = "0xD37680")]
	public void Update()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xD37764", Offset = "0xD37764", VA = "0xD37764")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB4BDBC", Offset = "0xB4BDBC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6001083")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : UnityEngine.MonoBehaviour where TActivate : UnityEngine.MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6001085")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6001086")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6001087")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6001088")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6001089")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600108A")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : UnityEngine.MonoBehaviour where TActivate : UnityEngine.MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xD377CC", Offset = "0xD377CC", VA = "0xD377CC")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xD37808", Offset = "0xD37808", VA = "0xD37808")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xD3787C", Offset = "0xD3787C", VA = "0xD3787C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xD379D8", Offset = "0xD379D8", VA = "0xD379D8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xD37AAC", Offset = "0xD37AAC", VA = "0xD37AAC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xD3758C", Offset = "0xD3758C", VA = "0xD3758C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xD37B6C", Offset = "0xD37B6C", VA = "0xD37B6C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xD37BD4", Offset = "0xD37BD4", VA = "0xD37BD4")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xD37CB8", Offset = "0xD37CB8", VA = "0xD37CB8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200025E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32248", Offset = "0xB32248")]
public class OVROverlayCanvas : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007CA")]
	public enum DrawMode
	{
		[Token(Token = "0x4002E75")]
		Opaque,
		[Token(Token = "0x4002E76")]
		OpaqueWithClip,
		[Token(Token = "0x4002E77")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4002E78")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700011B")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1051990", Offset = "0x1051990", VA = "0x1051990")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1051A24", Offset = "0x1051A24", VA = "0x1051A24")]
		set
		{
		}
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1050320", Offset = "0x1050320", VA = "0x1050320")]
	private void Start()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x1050F90", Offset = "0x1050F90", VA = "0x1050F90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x1051014", Offset = "0x1051014", VA = "0x1051014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x1051108", Offset = "0x1051108", VA = "0x1051108")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x10511FC", Offset = "0x10511FC", VA = "0x10511FC", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x1051400", Offset = "0x1051400", VA = "0x1051400")]
	private void Update()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x1051AF4", Offset = "0x1051AF4", VA = "0x1051AF4")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200025F")]
public class StartMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EE0", Offset = "0xB34EE0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4002E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0xD5C198", Offset = "0xD5C198", VA = "0xD5C198")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0xD5C2A8", Offset = "0xD5C2A8", VA = "0xD5C2A8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xD5BFD8", Offset = "0xD5BFD8", VA = "0xD5BFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xD5C1A0", Offset = "0xD5C1A0", VA = "0xD5C1A0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xD5C2A0", Offset = "0xD5C2A0", VA = "0xD5C2A0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000260")]
public class ONSPAmbisonicsNative : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007CC")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002E7C")]
		Uninitialized = -1,
		[Token(Token = "0x4002E7D")]
		NotEnabled,
		[Token(Token = "0x4002E7E")]
		Success,
		[Token(Token = "0x4002E7F")]
		StreamError,
		[Token(Token = "0x4002E80")]
		ProcessError,
		[Token(Token = "0x4002E81")]
		MaxStatValue
	}

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700011C")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x17C1C30", Offset = "0x17C1C30", VA = "0x17C1C30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x17C1C38", Offset = "0x17C1C38", VA = "0x17C1C38")]
		set
		{
		}
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x17C1C44", Offset = "0x17C1C44", VA = "0x17C1C44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x17C1E78", Offset = "0x17C1E78", VA = "0x17C1E78")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x17C20E0", Offset = "0x17C20E0", VA = "0x17C20E0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000261")]
public class ONSPAudioSource : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007CD")]
	private enum Parameters
	{
		[Token(Token = "0x4002E83")]
		P_GAIN,
		[Token(Token = "0x4002E84")]
		P_USEINVSQR,
		[Token(Token = "0x4002E85")]
		P_NEAR,
		[Token(Token = "0x4002E86")]
		P_FAR,
		[Token(Token = "0x4002E87")]
		P_RADIUS,
		[Token(Token = "0x4002E88")]
		P_DISABLE_RFL,
		[Token(Token = "0x4002E89")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4002E8A")]
		P_AMBISTAT,
		[Token(Token = "0x4002E8B")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4002E8C")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4002E8D")]
		P_SENDLEVEL,
		[Token(Token = "0x4002E8E")]
		P_NUM
	}

	[Token(Token = "0x4000FEF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700011D")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x17C244C", Offset = "0x17C244C", VA = "0x17C244C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x17C2454", Offset = "0x17C2454", VA = "0x17C2454")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public float Gain
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x17C2460", Offset = "0x17C2460", VA = "0x17C2460")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x17C2468", Offset = "0x17C2468", VA = "0x17C2468")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x17C24EC", Offset = "0x17C24EC", VA = "0x17C24EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x17C24F4", Offset = "0x17C24F4", VA = "0x17C24F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public float Near
	{
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x17C2500", Offset = "0x17C2500", VA = "0x17C2500")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x17C2508", Offset = "0x17C2508", VA = "0x17C2508")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public float Far
	{
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x17C2590", Offset = "0x17C2590", VA = "0x17C2590")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x17C2598", Offset = "0x17C2598", VA = "0x17C2598")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x17C2620", Offset = "0x17C2620", VA = "0x17C2620")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x17C2628", Offset = "0x17C2628", VA = "0x17C2628")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public float ReverbSend
	{
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x17C26B0", Offset = "0x17C26B0", VA = "0x17C26B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x17C26B8", Offset = "0x17C26B8", VA = "0x17C26B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public bool EnableRfl
	{
		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x17C2740", Offset = "0x17C2740", VA = "0x17C2740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x17C2748", Offset = "0x17C2748", VA = "0x17C2748")]
		set
		{
		}
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x17C2164", Offset = "0x17C2164", VA = "0x17C2164")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x17C236C", Offset = "0x17C236C", VA = "0x17C236C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x17C2754", Offset = "0x17C2754", VA = "0x17C2754")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x17C28C8", Offset = "0x17C28C8", VA = "0x17C28C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x17C28CC", Offset = "0x17C28CC", VA = "0x17C28CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x17C27C0", Offset = "0x17C27C0", VA = "0x17C27C0")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x17C2994", Offset = "0x17C2994", VA = "0x17C2994")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x17C2DF4", Offset = "0x17C2DF4", VA = "0x17C2DF4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x17C22EC", Offset = "0x17C22EC", VA = "0x17C22EC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x17C2EC4", Offset = "0x17C2EC4", VA = "0x17C2EC4")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000262")]
public class ONSPProfiler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000FFA")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000FFC")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x17C2EE4", Offset = "0x17C2EE4", VA = "0x17C2EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x17C2EF0", Offset = "0x17C2EF0", VA = "0x17C2EF0")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x17C2FA8", Offset = "0x17C2FA8", VA = "0x17C2FA8")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x17C2F28", Offset = "0x17C2F28", VA = "0x17C2F28")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x17C3028", Offset = "0x17C3028", VA = "0x17C3028")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000263")]
public class ONSPPropagationGeometry : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007CE")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4002E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20007CF")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4002E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4002E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4002E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4001003")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000125")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x17C5AA4", Offset = "0x17C5AA4", VA = "0x17C5AA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000126")]
	public string filePath
	{
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x17C5B30", Offset = "0x17C5B30", VA = "0x17C5B30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x17C5BA8", Offset = "0x17C5BA8", VA = "0x17C5BA8")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x17C5CF0", Offset = "0x17C5CF0", VA = "0x17C5CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x17C5CF4", Offset = "0x17C5CF4", VA = "0x17C5CF4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x17C6254", Offset = "0x17C6254", VA = "0x17C6254")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x17C65EC", Offset = "0x17C65EC", VA = "0x17C65EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x17C6748", Offset = "0x17C6748", VA = "0x17C6748")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x17C6E20", Offset = "0x17C6E20", VA = "0x17C6E20")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x17C6E5C", Offset = "0x17C6E5C", VA = "0x17C6E5C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x17C8600", Offset = "0x17C8600", VA = "0x17C8600")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x17C84D8", Offset = "0x17C84D8", VA = "0x17C84D8")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x17C608C", Offset = "0x17C608C", VA = "0x17C608C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x17C5EC0", Offset = "0x17C5EC0", VA = "0x17C5EC0")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x17C8C14", Offset = "0x17C8C14", VA = "0x17C8C14")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x17C9050", Offset = "0x17C9050", VA = "0x17C9050")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000264")]
internal class ONSPPropagation
{
	[Token(Token = "0x20007D0")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4002E95")]
		Int8,
		[Token(Token = "0x4002E96")]
		UInt8,
		[Token(Token = "0x4002E97")]
		Int16,
		[Token(Token = "0x4002E98")]
		UInt16,
		[Token(Token = "0x4002E99")]
		Int32,
		[Token(Token = "0x4002E9A")]
		UInt32,
		[Token(Token = "0x4002E9B")]
		Int64,
		[Token(Token = "0x4002E9C")]
		UInt64,
		[Token(Token = "0x4002E9D")]
		Float16,
		[Token(Token = "0x4002E9E")]
		Float32,
		[Token(Token = "0x4002E9F")]
		Float64
	}

	[Token(Token = "0x20007D1")]
	public class ClientType
	{
		[Token(Token = "0x4002EA0")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4002EA1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4002EA2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4002EA3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4002EA4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4002EA5")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4002EA6")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4002EA7")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4002EA8")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4002EA9")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4002EAA")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4002EAB")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4002EAC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4002EAD")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4002EAE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x17C34DC", Offset = "0x17C34DC", VA = "0x17C34DC")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20007D2")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6002FDE")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6002FDF")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002FE0")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002FE1")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002FE2")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002FE3")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002FE4")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002FE5")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002FE6")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002FE7")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002FE8")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002FE9")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6002FEA")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002FEB")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002FEC")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20007D3")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4002EAF")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4002EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170004A3")]
		private IntPtr context
		{
			[Token(Token = "0x6002FED")]
			[Address(RVA = "0x17C414C", Offset = "0x17C414C", VA = "0x17C414C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x17C41B0", Offset = "0x17C41B0", VA = "0x17C41B0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x17C4240", Offset = "0x17C4240", VA = "0x17C4240")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002FF0")]
		[Address(RVA = "0x17C42D0", Offset = "0x17C42D0", VA = "0x17C42D0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x17C42F4", Offset = "0x17C42F4", VA = "0x17C42F4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x17C4384", Offset = "0x17C4384", VA = "0x17C4384", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x17C43A8", Offset = "0x17C43A8", VA = "0x17C43A8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x17C4434", Offset = "0x17C4434", VA = "0x17C4434", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x17C4458", Offset = "0x17C4458", VA = "0x17C4458")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0x17C44D8", Offset = "0x17C44D8", VA = "0x17C44D8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x17C44E0", Offset = "0x17C44E0", VA = "0x17C44E0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0x17C4600", Offset = "0x17C4600", VA = "0x17C4600", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x17C46F8", Offset = "0x17C46F8", VA = "0x17C46F8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0x17C4790", Offset = "0x17C4790", VA = "0x17C4790", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x17C479C", Offset = "0x17C479C", VA = "0x17C479C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x17C48C8", Offset = "0x17C48C8", VA = "0x17C48C8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x17C48D4", Offset = "0x17C48D4", VA = "0x17C48D4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x17C4980", Offset = "0x17C4980", VA = "0x17C4980", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x17C498C", Offset = "0x17C498C", VA = "0x17C498C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6003000")]
		[Address(RVA = "0x17C4A38", Offset = "0x17C4A38", VA = "0x17C4A38", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003001")]
		[Address(RVA = "0x17C4A44", Offset = "0x17C4A44", VA = "0x17C4A44")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6003002")]
		[Address(RVA = "0x17C4AF0", Offset = "0x17C4AF0", VA = "0x17C4AF0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003003")]
		[Address(RVA = "0x17C4AFC", Offset = "0x17C4AFC", VA = "0x17C4AFC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x17C4B88", Offset = "0x17C4B88", VA = "0x17C4B88", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003005")]
		[Address(RVA = "0x17C4BAC", Offset = "0x17C4BAC", VA = "0x17C4BAC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x17C4C2C", Offset = "0x17C4C2C", VA = "0x17C4C2C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003007")]
		[Address(RVA = "0x17C4C34", Offset = "0x17C4C34", VA = "0x17C4C34")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6003008")]
		[Address(RVA = "0x17C4CDC", Offset = "0x17C4CDC", VA = "0x17C4CDC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003009")]
		[Address(RVA = "0x17C4CE8", Offset = "0x17C4CE8", VA = "0x17C4CE8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600300A")]
		[Address(RVA = "0x17C4D90", Offset = "0x17C4D90", VA = "0x17C4D90", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600300B")]
		[Address(RVA = "0x17C4DA0", Offset = "0x17C4DA0", VA = "0x17C4DA0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600300C")]
		[Address(RVA = "0x17C4E30", Offset = "0x17C4E30", VA = "0x17C4E30", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x17C3488", Offset = "0x17C3488", VA = "0x17C3488")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20007D4")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4002EB1")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4002EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170004A4")]
		private IntPtr context
		{
			[Token(Token = "0x600300E")]
			[Address(RVA = "0x17C4E3C", Offset = "0x17C4E3C", VA = "0x17C4E3C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600300F")]
		[Address(RVA = "0x17C32D0", Offset = "0x17C32D0", VA = "0x17C32D0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6003010")]
		[Address(RVA = "0x17C4EA0", Offset = "0x17C4EA0", VA = "0x17C4EA0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x17C4F30", Offset = "0x17C4F30", VA = "0x17C4F30", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003012")]
		[Address(RVA = "0x17C4F54", Offset = "0x17C4F54", VA = "0x17C4F54")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x17C4FE4", Offset = "0x17C4FE4", VA = "0x17C4FE4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003014")]
		[Address(RVA = "0x17C5008", Offset = "0x17C5008", VA = "0x17C5008")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x17C5098", Offset = "0x17C5098", VA = "0x17C5098", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003016")]
		[Address(RVA = "0x17C50BC", Offset = "0x17C50BC", VA = "0x17C50BC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6003017")]
		[Address(RVA = "0x17C513C", Offset = "0x17C513C", VA = "0x17C513C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003018")]
		[Address(RVA = "0x17C5144", Offset = "0x17C5144", VA = "0x17C5144")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x17C5264", Offset = "0x17C5264", VA = "0x17C5264", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600301A")]
		[Address(RVA = "0x17C535C", Offset = "0x17C535C", VA = "0x17C535C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600301B")]
		[Address(RVA = "0x17C53F4", Offset = "0x17C53F4", VA = "0x17C53F4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600301C")]
		[Address(RVA = "0x17C5400", Offset = "0x17C5400", VA = "0x17C5400")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600301D")]
		[Address(RVA = "0x17C552C", Offset = "0x17C552C", VA = "0x17C552C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600301E")]
		[Address(RVA = "0x17C5538", Offset = "0x17C5538", VA = "0x17C5538")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600301F")]
		[Address(RVA = "0x17C55E4", Offset = "0x17C55E4", VA = "0x17C55E4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003020")]
		[Address(RVA = "0x17C55F0", Offset = "0x17C55F0", VA = "0x17C55F0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6003021")]
		[Address(RVA = "0x17C569C", Offset = "0x17C569C", VA = "0x17C569C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003022")]
		[Address(RVA = "0x17C56A8", Offset = "0x17C56A8", VA = "0x17C56A8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6003023")]
		[Address(RVA = "0x17C5754", Offset = "0x17C5754", VA = "0x17C5754", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003024")]
		[Address(RVA = "0x17C5760", Offset = "0x17C5760", VA = "0x17C5760")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6003025")]
		[Address(RVA = "0x17C57F0", Offset = "0x17C57F0", VA = "0x17C57F0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003026")]
		[Address(RVA = "0x17C5814", Offset = "0x17C5814", VA = "0x17C5814")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6003027")]
		[Address(RVA = "0x17C5894", Offset = "0x17C5894", VA = "0x17C5894", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003028")]
		[Address(RVA = "0x17C589C", Offset = "0x17C589C", VA = "0x17C589C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x17C5944", Offset = "0x17C5944", VA = "0x17C5944", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600302A")]
		[Address(RVA = "0x17C5950", Offset = "0x17C5950", VA = "0x17C5950")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600302B")]
		[Address(RVA = "0x17C59F8", Offset = "0x17C59F8", VA = "0x17C59F8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600302C")]
		[Address(RVA = "0x17C5A08", Offset = "0x17C5A08", VA = "0x17C5A08")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x17C5A98", Offset = "0x17C5A98", VA = "0x17C5A98", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0x17C3360", Offset = "0x17C3360", VA = "0x17C3360")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20007D5")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4002EB3")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4002EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170004A5")]
		private IntPtr context
		{
			[Token(Token = "0x600302F")]
			[Address(RVA = "0x17C34E4", Offset = "0x17C34E4", VA = "0x17C34E4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6003030")]
		[Address(RVA = "0x17C33AC", Offset = "0x17C33AC", VA = "0x17C33AC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6003031")]
		[Address(RVA = "0x17C3548", Offset = "0x17C3548", VA = "0x17C3548")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6003032")]
		[Address(RVA = "0x17C35D8", Offset = "0x17C35D8", VA = "0x17C35D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003033")]
		[Address(RVA = "0x17C35FC", Offset = "0x17C35FC", VA = "0x17C35FC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6003034")]
		[Address(RVA = "0x17C368C", Offset = "0x17C368C", VA = "0x17C368C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003035")]
		[Address(RVA = "0x17C36B0", Offset = "0x17C36B0", VA = "0x17C36B0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6003036")]
		[Address(RVA = "0x17C3740", Offset = "0x17C3740", VA = "0x17C3740", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003037")]
		[Address(RVA = "0x17C3764", Offset = "0x17C3764", VA = "0x17C3764")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6003038")]
		[Address(RVA = "0x17C37E4", Offset = "0x17C37E4", VA = "0x17C37E4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003039")]
		[Address(RVA = "0x17C37EC", Offset = "0x17C37EC", VA = "0x17C37EC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600303A")]
		[Address(RVA = "0x17C390C", Offset = "0x17C390C", VA = "0x17C390C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600303B")]
		[Address(RVA = "0x17C3A04", Offset = "0x17C3A04", VA = "0x17C3A04")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600303C")]
		[Address(RVA = "0x17C3A9C", Offset = "0x17C3A9C", VA = "0x17C3A9C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600303D")]
		[Address(RVA = "0x17C3AA8", Offset = "0x17C3AA8", VA = "0x17C3AA8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600303E")]
		[Address(RVA = "0x17C3BD4", Offset = "0x17C3BD4", VA = "0x17C3BD4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600303F")]
		[Address(RVA = "0x17C3BE0", Offset = "0x17C3BE0", VA = "0x17C3BE0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x17C3C8C", Offset = "0x17C3C8C", VA = "0x17C3C8C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003041")]
		[Address(RVA = "0x17C3C98", Offset = "0x17C3C98", VA = "0x17C3C98")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6003042")]
		[Address(RVA = "0x17C3D44", Offset = "0x17C3D44", VA = "0x17C3D44", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003043")]
		[Address(RVA = "0x17C3D50", Offset = "0x17C3D50", VA = "0x17C3D50")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6003044")]
		[Address(RVA = "0x17C3DFC", Offset = "0x17C3DFC", VA = "0x17C3DFC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003045")]
		[Address(RVA = "0x17C3E08", Offset = "0x17C3E08", VA = "0x17C3E08")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6003046")]
		[Address(RVA = "0x17C3E98", Offset = "0x17C3E98", VA = "0x17C3E98", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003047")]
		[Address(RVA = "0x17C3EBC", Offset = "0x17C3EBC", VA = "0x17C3EBC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6003048")]
		[Address(RVA = "0x17C3F3C", Offset = "0x17C3F3C", VA = "0x17C3F3C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6003049")]
		[Address(RVA = "0x17C3F44", Offset = "0x17C3F44", VA = "0x17C3F44")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x17C3FEC", Offset = "0x17C3FEC", VA = "0x17C3FEC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600304B")]
		[Address(RVA = "0x17C3FF8", Offset = "0x17C3FF8", VA = "0x17C3FF8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600304C")]
		[Address(RVA = "0x17C40A0", Offset = "0x17C40A0", VA = "0x17C40A0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600304D")]
		[Address(RVA = "0x17C40B0", Offset = "0x17C40B0", VA = "0x17C40B0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600304E")]
		[Address(RVA = "0x17C4140", Offset = "0x17C4140", VA = "0x17C4140", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0x17C343C", Offset = "0x17C343C", VA = "0x17C343C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000127")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x17C3038", Offset = "0x17C3038", VA = "0x17C3038")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x17C30A8", Offset = "0x17C30A8", VA = "0x17C30A8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x17C34D4", Offset = "0x17C34D4", VA = "0x17C34D4")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000265")]
public sealed class ONSPPropagationMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007D6")]
	public enum Preset
	{
		[Token(Token = "0x4002EB6")]
		Custom,
		[Token(Token = "0x4002EB7")]
		AcousticTile,
		[Token(Token = "0x4002EB8")]
		Brick,
		[Token(Token = "0x4002EB9")]
		BrickPainted,
		[Token(Token = "0x4002EBA")]
		Carpet,
		[Token(Token = "0x4002EBB")]
		CarpetHeavy,
		[Token(Token = "0x4002EBC")]
		CarpetHeavyPadded,
		[Token(Token = "0x4002EBD")]
		CeramicTile,
		[Token(Token = "0x4002EBE")]
		Concrete,
		[Token(Token = "0x4002EBF")]
		ConcreteRough,
		[Token(Token = "0x4002EC0")]
		ConcreteBlock,
		[Token(Token = "0x4002EC1")]
		ConcreteBlockPainted,
		[Token(Token = "0x4002EC2")]
		Curtain,
		[Token(Token = "0x4002EC3")]
		Foliage,
		[Token(Token = "0x4002EC4")]
		Glass,
		[Token(Token = "0x4002EC5")]
		GlassHeavy,
		[Token(Token = "0x4002EC6")]
		Grass,
		[Token(Token = "0x4002EC7")]
		Gravel,
		[Token(Token = "0x4002EC8")]
		GypsumBoard,
		[Token(Token = "0x4002EC9")]
		PlasterOnBrick,
		[Token(Token = "0x4002ECA")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4002ECB")]
		Soil,
		[Token(Token = "0x4002ECC")]
		SoundProof,
		[Token(Token = "0x4002ECD")]
		Snow,
		[Token(Token = "0x4002ECE")]
		Steel,
		[Token(Token = "0x4002ECF")]
		Water,
		[Token(Token = "0x4002ED0")]
		WoodThin,
		[Token(Token = "0x4002ED1")]
		WoodThick,
		[Token(Token = "0x4002ED2")]
		WoodFloor,
		[Token(Token = "0x4002ED3")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20007D7")]
	public sealed class Point
	{
		[Token(Token = "0x4002ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4002ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6003050")]
		[Address(RVA = "0x17D0F24", Offset = "0x17D0F24", VA = "0x17D0F24")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x17D106C", Offset = "0x17D106C", VA = "0x17D106C")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x17D10DC", Offset = "0x17D10DC", VA = "0x17D10DC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20007D8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB34EF0", Offset = "0xB34EF0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000A7B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB370C0", Offset = "0xB370C0")]
		private sealed class <>c
		{
			[Token(Token = "0x40034E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40034E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40034EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60039FB")]
			[Address(RVA = "0x17D1534", Offset = "0x17D1534", VA = "0x17D1534")]
			public <>c()
			{
			}

			[Token(Token = "0x60039FC")]
			[Address(RVA = "0x17D153C", Offset = "0x17D153C", VA = "0x17D153C")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60039FD")]
			[Address(RVA = "0x17D1554", Offset = "0x17D1554", VA = "0x17D1554")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4002ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4002ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170004A6")]
		public float Item
		{
			[Token(Token = "0x6003053")]
			[Address(RVA = "0x17D1114", Offset = "0x17D1114", VA = "0x17D1114")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0x17D0FF4", Offset = "0x17D0FF4", VA = "0x17D0FF4")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C6BC", Offset = "0xB3C6BC")]
	public Spectrum absorption;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C6F4", Offset = "0xB3C6F4")]
	public Spectrum transmission;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3C72C", Offset = "0xB3C72C")]
	public Spectrum scattering;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000128")]
	public Preset preset
	{
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x17C9128", Offset = "0x17C9128", VA = "0x17C9128")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x17C9130", Offset = "0x17C9130", VA = "0x17C9130")]
		set
		{
		}
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x17C9158", Offset = "0x17C9158", VA = "0x17C9158")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x17C8AA8", Offset = "0x17C8AA8", VA = "0x17C8AA8")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x17C9708", Offset = "0x17C9708", VA = "0x17C9708")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x17C970C", Offset = "0x17C970C", VA = "0x17C970C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x17C915C", Offset = "0x17C915C", VA = "0x17C915C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x17C8344", Offset = "0x17C8344", VA = "0x17C8344")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x17C97F0", Offset = "0x17C97F0", VA = "0x17C97F0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x17C9C50", Offset = "0x17C9C50", VA = "0x17C9C50")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x17CA0B0", Offset = "0x17CA0B0", VA = "0x17CA0B0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x17CA510", Offset = "0x17CA510", VA = "0x17CA510")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x17CA970", Offset = "0x17CA970", VA = "0x17CA970")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x17CADD0", Offset = "0x17CADD0", VA = "0x17CADD0")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x17CB230", Offset = "0x17CB230", VA = "0x17CB230")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x17CB690", Offset = "0x17CB690", VA = "0x17CB690")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x17CBAF0", Offset = "0x17CBAF0", VA = "0x17CBAF0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x17CBF50", Offset = "0x17CBF50", VA = "0x17CBF50")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x17CC3B0", Offset = "0x17CC3B0", VA = "0x17CC3B0")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x17CC810", Offset = "0x17CC810", VA = "0x17CC810")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x17CCC70", Offset = "0x17CCC70", VA = "0x17CCC70")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x17CD0D0", Offset = "0x17CD0D0", VA = "0x17CD0D0")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x17CD528", Offset = "0x17CD528", VA = "0x17CD528")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x17CD988", Offset = "0x17CD988", VA = "0x17CD988")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x17CDCC4", Offset = "0x17CDCC4", VA = "0x17CDCC4")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x17CE000", Offset = "0x17CE000", VA = "0x17CE000")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x17CE460", Offset = "0x17CE460", VA = "0x17CE460")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x17CE8C0", Offset = "0x17CE8C0", VA = "0x17CE8C0")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x17CED20", Offset = "0x17CED20", VA = "0x17CED20")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x17CF05C", Offset = "0x17CF05C", VA = "0x17CF05C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x17CF1B8", Offset = "0x17CF1B8", VA = "0x17CF1B8")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x17CF4F4", Offset = "0x17CF4F4", VA = "0x17CF4F4")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x17CF94C", Offset = "0x17CF94C", VA = "0x17CF94C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x17CFDAC", Offset = "0x17CFDAC", VA = "0x17CFDAC")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x17D0204", Offset = "0x17D0204", VA = "0x17D0204")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x17D0664", Offset = "0x17D0664", VA = "0x17D0664")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x17D0AC4", Offset = "0x17D0AC4", VA = "0x17D0AC4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x17D0F5C", Offset = "0x17D0F5C", VA = "0x17D0F5C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000266")]
public class ONSPPropagationSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x17D156C", Offset = "0x17D156C", VA = "0x17D156C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x17D163C", Offset = "0x17D163C", VA = "0x17D163C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000267")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000129")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6001103")]
		[Address(RVA = "0x17C21D8", Offset = "0x17C21D8", VA = "0x17C21D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x17D1BF8", Offset = "0x17D1BF8", VA = "0x17D1BF8")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000268")]
public class ONSPVersion : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400100E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6001105")]
	[Address(RVA = "0x17D1C08", Offset = "0x17D1C08", VA = "0x17D1C08")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x17D1CA0", Offset = "0x17D1CA0", VA = "0x17D1CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x17D1DAC", Offset = "0x17D1DAC", VA = "0x17D1DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x17D1DB0", Offset = "0x17D1DB0", VA = "0x17D1DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x17D1DB4", Offset = "0x17D1DB4", VA = "0x17D1DB4")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000269")]
public class OculusSpatializerUnity : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007D9")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x400101D")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4001023")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xF3DAD0", Offset = "0xF3DAD0", VA = "0xF3DAD0")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xF3D900", Offset = "0xF3D900", VA = "0xF3D900")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4BDF4", Offset = "0xB4BDF4")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xF3DB08", Offset = "0xF3DB08", VA = "0xF3DB08")]
	private void Start()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xF3DC2C", Offset = "0xF3DC2C", VA = "0xF3DC2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xF3DD20", Offset = "0xF3DD20", VA = "0xF3DD20")]
	private void Update()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xF3E6D8", Offset = "0xF3E6D8", VA = "0xF3E6D8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001110")]
	[Address(RVA = "0xF3DB98", Offset = "0xF3DB98", VA = "0xF3DB98")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6001111")]
	[Address(RVA = "0xF3DC90", Offset = "0xF3DC90", VA = "0xF3DC90")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6001112")]
	[Address(RVA = "0xF3E440", Offset = "0xF3E440", VA = "0xF3E440")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6001113")]
	[Address(RVA = "0xF3E4C0", Offset = "0xF3E4C0", VA = "0xF3E4C0")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6001114")]
	[Address(RVA = "0xF3E548", Offset = "0xF3E548", VA = "0xF3E548")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6001115")]
	[Address(RVA = "0xF3E5D0", Offset = "0xF3E5D0", VA = "0xF3E5D0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6001116")]
	[Address(RVA = "0xF3E650", Offset = "0xF3E650", VA = "0xF3E650")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6001117")]
	[Address(RVA = "0xF3F510", Offset = "0xF3F510", VA = "0xF3F510")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6001118")]
	[Address(RVA = "0xF3F5B8", Offset = "0xF3F5B8", VA = "0xF3F5B8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xF3F660", Offset = "0xF3F660", VA = "0xF3F660")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200026A")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200026B")]
public class ONSPReflectionZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x17D164C", Offset = "0x17D164C", VA = "0x17D164C")]
	private void Start()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x17D1650", Offset = "0x17D1650", VA = "0x17D1650")]
	private void Update()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x17D1654", Offset = "0x17D1654", VA = "0x17D1654")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x17D17BC", Offset = "0x17D17BC", VA = "0x17D17BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x17D16A0", Offset = "0x17D16A0", VA = "0x17D16A0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x17D1730", Offset = "0x17D1730", VA = "0x17D1730")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x17D1808", Offset = "0x17D1808", VA = "0x17D1808")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x17D18A0", Offset = "0x17D18A0", VA = "0x17D18A0")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x17D1A08", Offset = "0x17D1A08", VA = "0x17D1A08")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x17D1B70", Offset = "0x17D1B70", VA = "0x17D1B70")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200026C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB322AC", Offset = "0xB322AC")]
public class MouseLook : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007DA")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002ED9")]
		MouseXAndY,
		[Token(Token = "0x4002EDA")]
		MouseX,
		[Token(Token = "0x4002EDB")]
		MouseY
	}

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xBB99EC", Offset = "0xBB99EC", VA = "0xBB99EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xBB9C4C", Offset = "0xBB9C4C", VA = "0xBB9C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xBB9D0C", Offset = "0xBB9D0C", VA = "0xBB9D0C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200026D")]
public class Ps4RemoveExtraControls : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _useInstead;

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xC56444", Offset = "0xC56444", VA = "0xC56444")]
	private void Start()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xC56448", Offset = "0xC56448", VA = "0xC56448")]
	public Ps4RemoveExtraControls()
	{
	}
}
[Token(Token = "0x200026E")]
public class PauseMenuHandler : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20007DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F28", Offset = "0xB34F28")]
	private sealed class <>c
	{
		[Token(Token = "0x4002EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__5_0;

		[Token(Token = "0x600305A")]
		[Address(RVA = "0xCFB76C", Offset = "0xCFB76C", VA = "0xCFB76C")]
		public <>c()
		{
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0xCFB774", Offset = "0xCFB774", VA = "0xCFB774")]
		internal void <Restart>b__5_0()
		{
		}
	}

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _menuGazeDirection;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GhostPlayer[] _ghosts;

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xCFB2E4", Offset = "0xCFB2E4", VA = "0xCFB2E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xCFB40C", Offset = "0xCFB40C", VA = "0xCFB40C")]
	public void Continue()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xCFB484", Offset = "0xCFB484", VA = "0xCFB484")]
	public void Quit()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xCFB500", Offset = "0xCFB500", VA = "0xCFB500")]
	public void Restart()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xCFB680", Offset = "0xCFB680", VA = "0xCFB680")]
	public void Leave()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xCFB700", Offset = "0xCFB700", VA = "0xCFB700")]
	public PauseMenuHandler()
	{
	}
}
[Token(Token = "0x200026F")]
internal static class CustomTypes
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xD47BA8", Offset = "0xD47BA8", VA = "0xD47BA8")]
	internal static void Register()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xD47E34", Offset = "0xD47E34", VA = "0xD47E34")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xD48028", Offset = "0xD48028", VA = "0xD48028")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xD48210", Offset = "0xD48210", VA = "0xD48210")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xD483D4", Offset = "0xD483D4", VA = "0xD483D4")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xD4858C", Offset = "0xD4858C", VA = "0xD4858C")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xD4878C", Offset = "0xD4878C", VA = "0xD4878C")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xD4898C", Offset = "0xD4898C", VA = "0xD4898C")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xD48B4C", Offset = "0xD48B4C", VA = "0xD48B4C")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x2000270")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x400103A")]
	OnConnectedToPhoton,
	[Token(Token = "0x400103B")]
	OnLeftRoom,
	[Token(Token = "0x400103C")]
	OnMasterClientSwitched,
	[Token(Token = "0x400103D")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x400103E")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x400103F")]
	OnCreatedRoom,
	[Token(Token = "0x4001040")]
	OnJoinedLobby,
	[Token(Token = "0x4001041")]
	OnLeftLobby,
	[Token(Token = "0x4001042")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x4001043")]
	OnConnectionFail,
	[Token(Token = "0x4001044")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x4001045")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x4001046")]
	OnJoinedRoom,
	[Token(Token = "0x4001047")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x4001048")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x4001049")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x400104A")]
	OnConnectedToMaster,
	[Token(Token = "0x400104B")]
	OnPhotonSerializeView,
	[Token(Token = "0x400104C")]
	OnPhotonInstantiate,
	[Token(Token = "0x400104D")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x400104E")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x400104F")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x4001050")]
	OnUpdatedFriendList,
	[Token(Token = "0x4001051")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x4001052")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x4001053")]
	OnWebRpcResponse,
	[Token(Token = "0x4001054")]
	OnOwnershipRequest,
	[Token(Token = "0x4001055")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x4001056")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x4001057")]
	OnOwnershipTransfered
}
[Token(Token = "0x2000271")]
public enum PhotonLogLevel
{
	[Token(Token = "0x4001059")]
	ErrorsOnly,
	[Token(Token = "0x400105A")]
	Informational,
	[Token(Token = "0x400105B")]
	Full
}
[Token(Token = "0x2000272")]
public enum PhotonTargets
{
	[Token(Token = "0x400105D")]
	All,
	[Token(Token = "0x400105E")]
	Others,
	[Token(Token = "0x400105F")]
	MasterClient,
	[Token(Token = "0x4001060")]
	AllBuffered,
	[Token(Token = "0x4001061")]
	OthersBuffered,
	[Token(Token = "0x4001062")]
	AllViaServer,
	[Token(Token = "0x4001063")]
	AllBufferedViaServer
}
[Token(Token = "0x2000273")]
public enum CloudRegionCode
{
	[Token(Token = "0x4001065")]
	eu = 0,
	[Token(Token = "0x4001066")]
	us = 1,
	[Token(Token = "0x4001067")]
	asia = 2,
	[Token(Token = "0x4001068")]
	jp = 3,
	[Token(Token = "0x4001069")]
	au = 5,
	[Token(Token = "0x400106A")]
	usw = 6,
	[Token(Token = "0x400106B")]
	sa = 7,
	[Token(Token = "0x400106C")]
	cae = 8,
	[Token(Token = "0x400106D")]
	kr = 9,
	[Token(Token = "0x400106E")]
	@in = 10,
	[Token(Token = "0x400106F")]
	ru = 11,
	[Token(Token = "0x4001070")]
	none = 4
}
[Token(Token = "0x2000274")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x4001072")]
	eu = 1,
	[Token(Token = "0x4001073")]
	us = 2,
	[Token(Token = "0x4001074")]
	asia = 4,
	[Token(Token = "0x4001075")]
	jp = 8,
	[Token(Token = "0x4001076")]
	au = 0x10,
	[Token(Token = "0x4001077")]
	usw = 0x20,
	[Token(Token = "0x4001078")]
	sa = 0x40,
	[Token(Token = "0x4001079")]
	cae = 0x80,
	[Token(Token = "0x400107A")]
	kr = 0x100,
	[Token(Token = "0x400107B")]
	@in = 0x200,
	[Token(Token = "0x400107C")]
	ru = 0x400
}
[Token(Token = "0x2000275")]
public enum ConnectionState
{
	[Token(Token = "0x400107E")]
	Disconnected,
	[Token(Token = "0x400107F")]
	Connecting,
	[Token(Token = "0x4001080")]
	Connected,
	[Token(Token = "0x4001081")]
	Disconnecting,
	[Token(Token = "0x4001082")]
	InitializingApplication
}
[Token(Token = "0x2000276")]
public enum EncryptionMode
{
	[Token(Token = "0x4001084")]
	PayloadEncryption = 0,
	[Token(Token = "0x4001085")]
	DatagramEncryption = 10
}
[Token(Token = "0x2000277")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x4001086")]
	public const byte Mode = 0;

	[Token(Token = "0x4001087")]
	public const byte Secret1 = 1;

	[Token(Token = "0x4001088")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x2000278")]
public static class Extensions
{
	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xE8C3F0", Offset = "0xE8C3F0", VA = "0xE8C3F0")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xE8C4F0", Offset = "0xE8C4F0", VA = "0xE8C4F0")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xE8C54C", Offset = "0xE8C54C", VA = "0xE8C54C")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xE8C5A4", Offset = "0xE8C5A4", VA = "0xE8C5A4")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xE8C688", Offset = "0xE8C688", VA = "0xE8C688")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xE8C74C", Offset = "0xE8C74C", VA = "0xE8C74C")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xE8C824", Offset = "0xE8C824", VA = "0xE8C824")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xE8C8A8", Offset = "0xE8C8A8", VA = "0xE8C8A8")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xE8CC74", Offset = "0xE8CC74", VA = "0xE8CC74")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xE8D05C", Offset = "0xE8D05C", VA = "0xE8D05C")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xE8D0C8", Offset = "0xE8D0C8", VA = "0xE8D0C8")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xE8D21C", Offset = "0xE8D21C", VA = "0xE8D21C")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xE8D5B4", Offset = "0xE8D5B4", VA = "0xE8D5B4")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xE8DA80", Offset = "0xE8DA80", VA = "0xE8DA80")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000279")]
public static class GameObjectExtensions
{
	[Token(Token = "0x600114A")]
	[Address(RVA = "0x11714C0", Offset = "0x11714C0", VA = "0x11714C0")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x200027A")]
public class FriendInfo
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C794", Offset = "0xB3C794")]
	private string <Name>k__BackingField;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C7A4", Offset = "0xB3C7A4")]
	private bool <IsOnline>k__BackingField;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C7B4", Offset = "0xB3C7B4")]
	private string <Room>k__BackingField;

	[Token(Token = "0x1700012A")]
	public string Name
	{
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xDCEEE0", Offset = "0xDCEEE0", VA = "0xDCEEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BF48", Offset = "0xB4BF48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600114C")]
		[Address(RVA = "0xDCEEE8", Offset = "0xDCEEE8", VA = "0xDCEEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BF58", Offset = "0xB4BF58")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public bool IsOnline
	{
		[Token(Token = "0x600114D")]
		[Address(RVA = "0xDCEEF0", Offset = "0xDCEEF0", VA = "0xDCEEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BF68", Offset = "0xB4BF68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600114E")]
		[Address(RVA = "0xDCEEF8", Offset = "0xDCEEF8", VA = "0xDCEEF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BF78", Offset = "0xB4BF78")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public string Room
	{
		[Token(Token = "0x600114F")]
		[Address(RVA = "0xDCEF04", Offset = "0xDCEF04", VA = "0xDCEF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BF88", Offset = "0xB4BF88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001150")]
		[Address(RVA = "0xDCEF0C", Offset = "0xDCEF0C", VA = "0xDCEF0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BF98", Offset = "0xB4BF98")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public bool IsInRoom
	{
		[Token(Token = "0x6001151")]
		[Address(RVA = "0xDCEF14", Offset = "0xDCEF14", VA = "0xDCEF14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xDCEF40", Offset = "0xDCEF40", VA = "0xDCEF40", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xDCEFE0", Offset = "0xDCEFE0", VA = "0xDCEFE0")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x200027B")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x20007DC")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x4002EDF")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x4002EE0")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x4002EE1")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x4002EE2")]
		PublishUserId = 8,
		[Token(Token = "0x4002EE3")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x4002EE4")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x1700012E")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x6001154")]
		[Address(RVA = "0xE0A7D4", Offset = "0xE0A7D4", VA = "0xE0A7D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xE0A7F8", Offset = "0xE0A7F8", VA = "0xE0A7F8")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xE0A898", Offset = "0xE0A898", VA = "0xE0A898")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xE0A918", Offset = "0xE0A918", VA = "0xE0A918", Slot = "17")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xE0A9D0", Offset = "0xE0A9D0", VA = "0xE0A9D0", Slot = "18")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xE0AB70", Offset = "0xE0AB70", VA = "0xE0AB70", Slot = "19")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xE0AC68", Offset = "0xE0AC68", VA = "0xE0AC68")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xE0B068", Offset = "0xE0B068", VA = "0xE0B068", Slot = "20")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xE0B2F4", Offset = "0xE0B2F4", VA = "0xE0B2F4", Slot = "21")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xE0B5EC", Offset = "0xE0B5EC", VA = "0xE0B5EC", Slot = "22")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xE0B920", Offset = "0xE0B920", VA = "0xE0B920", Slot = "23")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xE0B9F8", Offset = "0xE0B9F8", VA = "0xE0B9F8", Slot = "24")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xE0BC9C", Offset = "0xE0BC9C", VA = "0xE0BC9C", Slot = "25")]
	public virtual bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xE0BD58", Offset = "0xE0BD58", VA = "0xE0BD58")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xE0BDE8", Offset = "0xE0BDE8", VA = "0xE0BDE8")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xE0C0C0", Offset = "0xE0C0C0", VA = "0xE0C0C0")]
	protected void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xE0C378", Offset = "0xE0C378", VA = "0xE0C378")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xE0C17C", Offset = "0xE0C17C", VA = "0xE0C17C")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xE0C400", Offset = "0xE0C400", VA = "0xE0C400", Slot = "26")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xE0C824", Offset = "0xE0C824", VA = "0xE0C824", Slot = "27")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xE0CC20", Offset = "0xE0CC20", VA = "0xE0CC20", Slot = "28")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xE0CD98", Offset = "0xE0CD98", VA = "0xE0CD98", Slot = "29")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xE0CFD8", Offset = "0xE0CFD8", VA = "0xE0CFD8", Slot = "30")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x200027C")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SqlLobbyFilter;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] ExpectedUsers;

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xD1569C", Offset = "0xD1569C", VA = "0xD1569C")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x200027D")]
internal class EnterRoomParams
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RoomName;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby Lobby;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnGameServer;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CreateIfNotExists;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool RejoinOnly;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ExpectedUsers;

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xD58714", Offset = "0xD58714", VA = "0xD58714")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x200027E")]
public class ErrorCode
{
	[Token(Token = "0x400109C")]
	public const int Ok = 0;

	[Token(Token = "0x400109D")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x400109E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C7C4", Offset = "0xB3C7C4")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x400109F")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x40010A0")]
	public const int InternalServerError = -1;

	[Token(Token = "0x40010A1")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x40010A2")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x40010A3")]
	public const int GameFull = 32765;

	[Token(Token = "0x40010A4")]
	public const int GameClosed = 32764;

	[Token(Token = "0x40010A5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C7FC", Offset = "0xB3C7FC")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x40010A6")]
	public const int ServerFull = 32762;

	[Token(Token = "0x40010A7")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x40010A8")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x40010A9")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x40010AA")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x40010AB")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x40010AC")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x40010AD")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x40010AE")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x40010AF")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x40010B0")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x40010B1")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x40010B2")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x40010B3")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x40010B4")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x40010B5")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x40010B6")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x40010B7")]
	public const int SlotError = 32742;

	[Token(Token = "0x40010B8")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xD58724", Offset = "0xD58724", VA = "0xD58724")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x200027F")]
public class ActorProperties
{
	[Token(Token = "0x40010B9")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x40010BA")]
	public const byte IsInactive = 254;

	[Token(Token = "0x40010BB")]
	public const byte UserId = 253;

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xE5C9C4", Offset = "0xE5C9C4", VA = "0xE5C9C4")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x2000280")]
public class GamePropertyKey
{
	[Token(Token = "0x40010BC")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x40010BD")]
	public const byte IsVisible = 254;

	[Token(Token = "0x40010BE")]
	public const byte IsOpen = 253;

	[Token(Token = "0x40010BF")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x40010C0")]
	public const byte Removed = 251;

	[Token(Token = "0x40010C1")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x40010C2")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x40010C3")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x40010C4")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x11715F0", Offset = "0x11715F0", VA = "0x11715F0")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x2000281")]
public class EventCode
{
	[Token(Token = "0x40010C5")]
	public const byte GameList = 230;

	[Token(Token = "0x40010C6")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x40010C7")]
	public const byte QueueState = 228;

	[Token(Token = "0x40010C8")]
	public const byte Match = 227;

	[Token(Token = "0x40010C9")]
	public const byte AppStats = 226;

	[Token(Token = "0x40010CA")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x40010CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C834", Offset = "0xB3C834")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x40010CC")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x40010CD")]
	public const byte Leave = 254;

	[Token(Token = "0x40010CE")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x40010CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C86C", Offset = "0xB3C86C")]
	public const byte SetProperties = 253;

	[Token(Token = "0x40010D0")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x40010D1")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x40010D2")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xD58D68", Offset = "0xD58D68", VA = "0xD58D68")]
	public EventCode()
	{
	}
}
[Token(Token = "0x2000282")]
public class ParameterCode
{
	[Token(Token = "0x40010D3")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x40010D4")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x40010D5")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x40010D6")]
	public const byte EventForward = 234;

	[Token(Token = "0x40010D7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C8A4", Offset = "0xB3C8A4")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x40010D8")]
	public const byte IsInactive = 233;

	[Token(Token = "0x40010D9")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x40010DA")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x40010DB")]
	public const byte Address = 230;

	[Token(Token = "0x40010DC")]
	public const byte PeerCount = 229;

	[Token(Token = "0x40010DD")]
	public const byte GameCount = 228;

	[Token(Token = "0x40010DE")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x40010DF")]
	public const byte UserId = 225;

	[Token(Token = "0x40010E0")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x40010E1")]
	public const byte Position = 223;

	[Token(Token = "0x40010E2")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x40010E3")]
	public const byte GameList = 222;

	[Token(Token = "0x40010E4")]
	public const byte Secret = 221;

	[Token(Token = "0x40010E5")]
	public const byte AppVersion = 220;

	[Token(Token = "0x40010E6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C8DC", Offset = "0xB3C8DC")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x40010E7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C914", Offset = "0xB3C914")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x40010E8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C94C", Offset = "0xB3C94C")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x40010E9")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x40010EA")]
	public const byte Broadcast = 250;

	[Token(Token = "0x40010EB")]
	public const byte ActorList = 252;

	[Token(Token = "0x40010EC")]
	public const byte ActorNr = 254;

	[Token(Token = "0x40010ED")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x40010EE")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x40010EF")]
	public const byte Data = 245;

	[Token(Token = "0x40010F0")]
	public const byte Code = 244;

	[Token(Token = "0x40010F1")]
	public const byte GameProperties = 248;

	[Token(Token = "0x40010F2")]
	public const byte Properties = 251;

	[Token(Token = "0x40010F3")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x40010F4")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x40010F5")]
	public const byte Cache = 247;

	[Token(Token = "0x40010F6")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x40010F7")]
	public const byte Group = 240;

	[Token(Token = "0x40010F8")]
	public const byte Remove = 239;

	[Token(Token = "0x40010F9")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x40010FA")]
	public const byte Add = 238;

	[Token(Token = "0x40010FB")]
	public const byte Info = 218;

	[Token(Token = "0x40010FC")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x40010FD")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x40010FE")]
	public const byte JoinMode = 215;

	[Token(Token = "0x40010FF")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x4001100")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x4001101")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x4001102")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x4001103")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x4001104")]
	public const byte LobbyName = 213;

	[Token(Token = "0x4001105")]
	public const byte LobbyType = 212;

	[Token(Token = "0x4001106")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x4001107")]
	public const byte Region = 210;

	[Token(Token = "0x4001108")]
	public const byte UriPath = 209;

	[Token(Token = "0x4001109")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x400110A")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x400110B")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x400110C")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x400110D")]
	public const byte Plugins = 204;

	[Token(Token = "0x400110E")]
	public const byte NickName = 202;

	[Token(Token = "0x400110F")]
	public const byte PluginName = 201;

	[Token(Token = "0x4001110")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x4001111")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x4001112")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x4001113")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x4001114")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x4001115")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xF2860C", Offset = "0xF2860C", VA = "0xF2860C")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x2000283")]
public class OperationCode
{
	[Token(Token = "0x4001116")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C984", Offset = "0xB3C984")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x4001117")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C9BC", Offset = "0xB3C9BC")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4001118")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x4001119")]
	public const byte Authenticate = 230;

	[Token(Token = "0x400111A")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x400111B")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x400111C")]
	public const byte CreateGame = 227;

	[Token(Token = "0x400111D")]
	public const byte JoinGame = 226;

	[Token(Token = "0x400111E")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x400111F")]
	public const byte Leave = 254;

	[Token(Token = "0x4001120")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x4001121")]
	public const byte SetProperties = 252;

	[Token(Token = "0x4001122")]
	public const byte GetProperties = 251;

	[Token(Token = "0x4001123")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x4001124")]
	public const byte FindFriends = 222;

	[Token(Token = "0x4001125")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x4001126")]
	public const byte GetRegions = 220;

	[Token(Token = "0x4001127")]
	public const byte WebRpc = 219;

	[Token(Token = "0x4001128")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x4001129")]
	public const byte GetGameList = 217;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xD1652C", Offset = "0xD1652C", VA = "0xD1652C")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x2000284")]
public enum JoinMode : byte
{
	[Token(Token = "0x400112B")]
	Default,
	[Token(Token = "0x400112C")]
	CreateIfNotExists,
	[Token(Token = "0x400112D")]
	JoinOrRejoin,
	[Token(Token = "0x400112E")]
	RejoinOnly
}
[Token(Token = "0x2000285")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x4001130")]
	FillRoom,
	[Token(Token = "0x4001131")]
	SerialMatching,
	[Token(Token = "0x4001132")]
	RandomMatching
}
[Token(Token = "0x2000286")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x4001134")]
	Others,
	[Token(Token = "0x4001135")]
	All,
	[Token(Token = "0x4001136")]
	MasterClient
}
[Token(Token = "0x2000287")]
public enum EventCaching : byte
{
	[Token(Token = "0x4001138")]
	DoNotCache = 0,
	[Token(Token = "0x4001139")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C9CC", Offset = "0xB3C9CC")]
	MergeCache = 1,
	[Token(Token = "0x400113A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C9DC", Offset = "0xB3C9DC")]
	ReplaceCache = 2,
	[Token(Token = "0x400113B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3C9EC", Offset = "0xB3C9EC")]
	RemoveCache = 3,
	[Token(Token = "0x400113C")]
	AddToRoomCache = 4,
	[Token(Token = "0x400113D")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x400113E")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x400113F")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x4001140")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x4001141")]
	SliceSetIndex = 11,
	[Token(Token = "0x4001142")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x4001143")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x2000288")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x4001145")]
	None = 0,
	[Token(Token = "0x4001146")]
	Game = 1,
	[Token(Token = "0x4001147")]
	Actor = 2,
	[Token(Token = "0x4001148")]
	GameAndActor = 3
}
[Token(Token = "0x2000289")]
public class RoomOptions
{
	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isVisibleField;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isOpenField;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte MaxPlayers;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int PlayerTtl;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int EmptyRoomTtl;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] Plugins;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool publishUserIdField;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x1700012F")]
	public bool IsVisible
	{
		[Token(Token = "0x6001173")]
		[Address(RVA = "0xC9A734", Offset = "0xC9A734", VA = "0xC9A734")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001174")]
		[Address(RVA = "0xC9A73C", Offset = "0xC9A73C", VA = "0xC9A73C")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public bool IsOpen
	{
		[Token(Token = "0x6001175")]
		[Address(RVA = "0xC9A748", Offset = "0xC9A748", VA = "0xC9A748")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001176")]
		[Address(RVA = "0xC9A750", Offset = "0xC9A750", VA = "0xC9A750")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x6001177")]
		[Address(RVA = "0xC9A75C", Offset = "0xC9A75C", VA = "0xC9A75C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001178")]
		[Address(RVA = "0xC9A764", Offset = "0xC9A764", VA = "0xC9A764")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x6001179")]
		[Address(RVA = "0xC9A770", Offset = "0xC9A770", VA = "0xC9A770")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	public bool PublishUserId
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0xC9A778", Offset = "0xC9A778", VA = "0xC9A778")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xC9A780", Offset = "0xC9A780", VA = "0xC9A780")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x600117C")]
		[Address(RVA = "0xC9A78C", Offset = "0xC9A78C", VA = "0xC9A78C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xC9A794", Offset = "0xC9A794", VA = "0xC9A794")]
		set
		{
		}
	}

	[Token(Token = "0x17000135")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB55F7C", Offset = "0xB55F7C")]
	public bool isVisible
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xC9A7A0", Offset = "0xC9A7A0", VA = "0xC9A7A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xC9A7A8", Offset = "0xC9A7A8", VA = "0xC9A7A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB55FB4", Offset = "0xB55FB4")]
	public bool isOpen
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC9A7B4", Offset = "0xC9A7B4", VA = "0xC9A7B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001181")]
		[Address(RVA = "0xC9A7BC", Offset = "0xC9A7BC", VA = "0xC9A7BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB55FEC", Offset = "0xB55FEC")]
	public byte maxPlayers
	{
		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC9A7C8", Offset = "0xC9A7C8", VA = "0xC9A7C8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC9A7D0", Offset = "0xC9A7D0", VA = "0xC9A7D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56024", Offset = "0xB56024")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x6001184")]
		[Address(RVA = "0xC9A7D8", Offset = "0xC9A7D8", VA = "0xC9A7D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001185")]
		[Address(RVA = "0xC9A7E0", Offset = "0xC9A7E0", VA = "0xC9A7E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5605C", Offset = "0xB5605C")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x6001186")]
		[Address(RVA = "0xC9A7EC", Offset = "0xC9A7EC", VA = "0xC9A7EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001187")]
		[Address(RVA = "0xC9A7F4", Offset = "0xC9A7F4", VA = "0xC9A7F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56094", Offset = "0xB56094")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x6001188")]
		[Address(RVA = "0xC9A7FC", Offset = "0xC9A7FC", VA = "0xC9A7FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC9A804", Offset = "0xC9A804", VA = "0xC9A804")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB560CC", Offset = "0xB560CC")]
	public string[] plugins
	{
		[Token(Token = "0x600118A")]
		[Address(RVA = "0xC9A80C", Offset = "0xC9A80C", VA = "0xC9A80C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600118B")]
		[Address(RVA = "0xC9A814", Offset = "0xC9A814", VA = "0xC9A814")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56104", Offset = "0xB56104")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x600118C")]
		[Address(RVA = "0xC9A81C", Offset = "0xC9A81C", VA = "0xC9A81C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5613C", Offset = "0xB5613C")]
	public bool publishUserId
	{
		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC9A824", Offset = "0xC9A824", VA = "0xC9A824")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC9A82C", Offset = "0xC9A82C", VA = "0xC9A82C")]
		set
		{
		}
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xC9A838", Offset = "0xC9A838", VA = "0xC9A838")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x200028A")]
public class RaiseEventOptions
{
	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventCaching CachingOption;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte InterestGroup;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TargetActors;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte SequenceChannel;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardToWebhook;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool Encrypt;

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xBE1C80", Offset = "0xBE1C80", VA = "0xBE1C80")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xBDC7F8", Offset = "0xBDC7F8", VA = "0xBDC7F8")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x200028B")]
public enum LobbyType : byte
{
	[Token(Token = "0x400115E")]
	Default = 0,
	[Token(Token = "0x400115F")]
	SqlLobby = 2,
	[Token(Token = "0x4001160")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x200028C")]
public class TypedLobby
{
	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyType Type;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x1700013E")]
	public bool IsDefault
	{
		[Token(Token = "0x6001193")]
		[Address(RVA = "0xCBB528", Offset = "0xCBB528", VA = "0xCBB528")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xCBB544", Offset = "0xCBB544", VA = "0xCBB544")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xCBB5AC", Offset = "0xCBB5AC", VA = "0xCBB5AC")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xCBB5E8", Offset = "0xCBB5E8", VA = "0xCBB5E8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200028D")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayerCount;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RoomCount;

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xCBB6D0", Offset = "0xCBB6D0", VA = "0xCBB6D0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xCBB868", Offset = "0xCBB868", VA = "0xCBB868")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x200028E")]
public enum AuthModeOption
{
	[Token(Token = "0x4001167")]
	Auth,
	[Token(Token = "0x4001168")]
	AuthOnce,
	[Token(Token = "0x4001169")]
	AuthOnceWss
}
[Token(Token = "0x200028F")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x400116B")]
	Custom = 0,
	[Token(Token = "0x400116C")]
	Steam = 1,
	[Token(Token = "0x400116D")]
	Facebook = 2,
	[Token(Token = "0x400116E")]
	Oculus = 3,
	[Token(Token = "0x400116F")]
	PlayStation = 4,
	[Token(Token = "0x4001170")]
	Xbox = 5,
	[Token(Token = "0x4001171")]
	None = byte.MaxValue
}
[Token(Token = "0x2000290")]
public class AuthenticationValues
{
	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C9FC", Offset = "0xB3C9FC")]
	private string <AuthGetParameters>k__BackingField;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA0C", Offset = "0xB3CA0C")]
	private object <AuthPostData>k__BackingField;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA1C", Offset = "0xB3CA1C")]
	private string <Token>k__BackingField;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA2C", Offset = "0xB3CA2C")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x1700013F")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0xE6C1F4", Offset = "0xE6C1F4", VA = "0xE6C1F4")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xE6C1FC", Offset = "0xE6C1FC", VA = "0xE6C1FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public string AuthGetParameters
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xE6C204", Offset = "0xE6C204", VA = "0xE6C204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BFA8", Offset = "0xB4BFA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600119D")]
		[Address(RVA = "0xE6C20C", Offset = "0xE6C20C", VA = "0xE6C20C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BFB8", Offset = "0xB4BFB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public object AuthPostData
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0xE6C214", Offset = "0xE6C214", VA = "0xE6C214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BFC8", Offset = "0xB4BFC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0xE6C21C", Offset = "0xE6C21C", VA = "0xE6C21C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BFD8", Offset = "0xB4BFD8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public string Token
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xE6C224", Offset = "0xE6C224", VA = "0xE6C224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BFE8", Offset = "0xB4BFE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xE6C22C", Offset = "0xE6C22C", VA = "0xE6C22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4BFF8", Offset = "0xB4BFF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public string UserId
	{
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xE6C234", Offset = "0xE6C234", VA = "0xE6C234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C008", Offset = "0xB4C008")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xE6C23C", Offset = "0xE6C23C", VA = "0xE6C23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C018", Offset = "0xB4C018")]
		set
		{
		}
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xE6C244", Offset = "0xE6C244", VA = "0xE6C244")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xE6C254", Offset = "0xE6C254", VA = "0xE6C254")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xE6C288", Offset = "0xE6C288", VA = "0xE6C288", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xE6C2C8", Offset = "0xE6C2C8", VA = "0xE6C2C8", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xE6C2D0", Offset = "0xE6C2D0", VA = "0xE6C2D0", Slot = "6")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xE6C484", Offset = "0xE6C484", VA = "0xE6C484", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000291")]
public enum ClientState
{
	[Token(Token = "0x4001178")]
	Uninitialized,
	[Token(Token = "0x4001179")]
	PeerCreated,
	[Token(Token = "0x400117A")]
	Queued,
	[Token(Token = "0x400117B")]
	Authenticated,
	[Token(Token = "0x400117C")]
	JoinedLobby,
	[Token(Token = "0x400117D")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x400117E")]
	ConnectingToGameserver,
	[Token(Token = "0x400117F")]
	ConnectedToGameserver,
	[Token(Token = "0x4001180")]
	Joining,
	[Token(Token = "0x4001181")]
	Joined,
	[Token(Token = "0x4001182")]
	Leaving,
	[Token(Token = "0x4001183")]
	DisconnectingFromGameserver,
	[Token(Token = "0x4001184")]
	ConnectingToMasterserver,
	[Token(Token = "0x4001185")]
	QueuedComingFromGameserver,
	[Token(Token = "0x4001186")]
	Disconnecting,
	[Token(Token = "0x4001187")]
	Disconnected,
	[Token(Token = "0x4001188")]
	ConnectedToMaster,
	[Token(Token = "0x4001189")]
	ConnectingToNameServer,
	[Token(Token = "0x400118A")]
	ConnectedToNameServer,
	[Token(Token = "0x400118B")]
	DisconnectingFromNameServer,
	[Token(Token = "0x400118C")]
	Authenticating
}
[Token(Token = "0x2000292")]
internal enum JoinType
{
	[Token(Token = "0x400118E")]
	CreateRoom,
	[Token(Token = "0x400118F")]
	JoinRoom,
	[Token(Token = "0x4001190")]
	JoinRandomRoom,
	[Token(Token = "0x4001191")]
	JoinOrCreateRoom
}
[Token(Token = "0x2000293")]
public enum DisconnectCause
{
	[Token(Token = "0x4001193")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x4001194")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x4001195")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x4001196")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x4001197")]
	Exception = 1026,
	[Token(Token = "0x4001198")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x4001199")]
	MaxCcuReached = 32757,
	[Token(Token = "0x400119A")]
	InvalidRegion = 32756,
	[Token(Token = "0x400119B")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x400119C")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x400119D")]
	InternalReceiveException = 1039,
	[Token(Token = "0x400119E")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x2000294")]
public enum ServerConnection
{
	[Token(Token = "0x40011A0")]
	MasterServer,
	[Token(Token = "0x40011A1")]
	GameServer,
	[Token(Token = "0x40011A2")]
	NameServer
}
[Token(Token = "0x2000295")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected internal string AppId;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA3C", Offset = "0xB3CA3C")]
	private AuthenticationValues <AuthValues>k__BackingField;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string tokenCache;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA4C", Offset = "0xB3CA4C")]
	private bool <IsUsingNameServer>k__BackingField;

	[Token(Token = "0x40011A9")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x40011AA")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA5C", Offset = "0xB3CA5C")]
	private string <MasterServerAddress>k__BackingField;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA6C", Offset = "0xB3CA6C")]
	private string <GameServerAddress>k__BackingField;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA7C", Offset = "0xB3CA7C")]
	private ServerConnection <Server>k__BackingField;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA8C", Offset = "0xB3CA8C")]
	private ClientState <State>k__BackingField;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool IsInitialConnect;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	public bool insideLobby;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA9C", Offset = "0xB3CA9C")]
	private TypedLobby <lobby>k__BackingField;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string playername;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Room currentRoom;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CAAC", Offset = "0xB3CAAC")]
	private PhotonPlayer <LocalPlayer>k__BackingField;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CABC", Offset = "0xB3CABC")]
	private int <PlayersOnMasterCount>k__BackingField;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CACC", Offset = "0xB3CACC")]
	private int <PlayersInRoomsCount>k__BackingField;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CADC", Offset = "0xB3CADC")]
	private int <RoomsCount>k__BackingField;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private JoinType lastJoinType;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool didAuthenticate;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] friendListRequested;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int friendListTimestamp;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool isFetchingFriendList;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CAEC", Offset = "0xB3CAEC")]
	private List<Region> <AvailableRegions>k__BackingField;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CAFC", Offset = "0xB3CAFC")]
	private CloudRegionCode <CloudRegion>k__BackingField;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool hasSwitchedMC;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x40011D2")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool UsePrefabCache;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private string cachedServerAddress;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private string cachedApplicationName;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private ServerConnection cachedProtocolType;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private bool _isReconnecting;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private RaiseEventOptions options;

	[Token(Token = "0x40011E0")]
	public const int SyncViewId = 0;

	[Token(Token = "0x40011E1")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x40011E2")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x40011E3")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x17000144")]
	protected internal string AppVersion
	{
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xBC4A90", Offset = "0xBC4A90", VA = "0xBC4A90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000145")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xBC4B50", Offset = "0xBC4B50", VA = "0xBC4B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C028", Offset = "0xB4C028")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xBC4B58", Offset = "0xBC4B58", VA = "0xBC4B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C038", Offset = "0xB4C038")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	private string TokenForInit
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xBC4B60", Offset = "0xBC4B60", VA = "0xBC4B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000147")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xBC4B80", Offset = "0xBC4B80", VA = "0xBC4B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C048", Offset = "0xB4C048")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xBC4B88", Offset = "0xBC4B88", VA = "0xBC4B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C058", Offset = "0xB4C058")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public string NameServerAddress
	{
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xBC4B94", Offset = "0xBC4B94", VA = "0xBC4B94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000149")]
	public string MasterServerAddress
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xBC4CB8", Offset = "0xBC4CB8", VA = "0xBC4CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C068", Offset = "0xB4C068")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xBC4CC0", Offset = "0xBC4CC0", VA = "0xBC4CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C078", Offset = "0xB4C078")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public string GameServerAddress
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xBC4CC8", Offset = "0xBC4CC8", VA = "0xBC4CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C088", Offset = "0xB4C088")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xBC4CD0", Offset = "0xBC4CD0", VA = "0xBC4CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C098", Offset = "0xB4C098")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xBC4CD8", Offset = "0xBC4CD8", VA = "0xBC4CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C0A8", Offset = "0xB4C0A8")]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xBC4CE0", Offset = "0xBC4CE0", VA = "0xBC4CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C0B8", Offset = "0xB4C0B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public ClientState State
	{
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xBC4CE8", Offset = "0xBC4CE8", VA = "0xBC4CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C0C8", Offset = "0xB4C0C8")]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xBC4CF0", Offset = "0xBC4CF0", VA = "0xBC4CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C0D8", Offset = "0xB4C0D8")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public TypedLobby lobby
	{
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xBC4CF8", Offset = "0xBC4CF8", VA = "0xBC4CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C0E8", Offset = "0xB4C0E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xBC4D00", Offset = "0xBC4D00", VA = "0xBC4D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C0F8", Offset = "0xB4C0F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xBC4D08", Offset = "0xBC4D08", VA = "0xBC4D08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014F")]
	public string PlayerName
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xBC4D88", Offset = "0xBC4D88", VA = "0xBC4D88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xBC4D90", Offset = "0xBC4D90", VA = "0xBC4D90")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public Room CurrentRoom
	{
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xBC4E14", Offset = "0xBC4E14", VA = "0xBC4E14")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xBC4F2C", Offset = "0xBC4F2C", VA = "0xBC4F2C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xBC4F34", Offset = "0xBC4F34", VA = "0xBC4F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C108", Offset = "0xB4C108")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xBC4F3C", Offset = "0xBC4F3C", VA = "0xBC4F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C118", Offset = "0xB4C118")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xBC4F44", Offset = "0xBC4F44", VA = "0xBC4F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C128", Offset = "0xB4C128")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xBC4F4C", Offset = "0xBC4F4C", VA = "0xBC4F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C138", Offset = "0xB4C138")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xBC4F54", Offset = "0xBC4F54", VA = "0xBC4F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C148", Offset = "0xB4C148")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xBC4F5C", Offset = "0xBC4F5C", VA = "0xBC4F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C158", Offset = "0xB4C158")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public int RoomsCount
	{
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xBC4F64", Offset = "0xBC4F64", VA = "0xBC4F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C168", Offset = "0xB4C168")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xBC4F6C", Offset = "0xBC4F6C", VA = "0xBC4F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C178", Offset = "0xB4C178")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000155")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xBC4F74", Offset = "0xBC4F74", VA = "0xBC4F74")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000156")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xBC4FB8", Offset = "0xBC4FB8", VA = "0xBC4FB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000157")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xBC4FE4", Offset = "0xBC4FE4", VA = "0xBC4FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C188", Offset = "0xB4C188")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xBC4FEC", Offset = "0xBC4FEC", VA = "0xBC4FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C198", Offset = "0xB4C198")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xBC4FF4", Offset = "0xBC4FF4", VA = "0xBC4FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C1A8", Offset = "0xB4C1A8")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xBC4FFC", Offset = "0xBC4FFC", VA = "0xBC4FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C1B8", Offset = "0xB4C1B8")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public int mMasterClientId
	{
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xBC5004", Offset = "0xBC5004", VA = "0xBC5004")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xBC50E8", Offset = "0xBC50E8", VA = "0xBC50E8")]
		private set
		{
		}
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xBC5100", Offset = "0xBC5100", VA = "0xBC5100")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xBC4B98", Offset = "0xBC4B98", VA = "0xBC4B98")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xBC565C", Offset = "0xBC565C", VA = "0xBC565C", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xBC56D0", Offset = "0xBC56D0", VA = "0xBC56D0")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xBC598C", Offset = "0xBC598C", VA = "0xBC598C")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xBC5788", Offset = "0xBC5788", VA = "0xBC5788")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xBC5FFC", Offset = "0xBC5FFC", VA = "0xBC5FFC")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xBC60F8", Offset = "0xBC60F8", VA = "0xBC60F8")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xBC6238", Offset = "0xBC6238", VA = "0xBC6238")]
	public bool ConnectToRegionMaster(CloudRegionCode region)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xBC5A78", Offset = "0xBC5A78", VA = "0xBC5A78")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xBC6514", Offset = "0xBC6514", VA = "0xBC6514", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xBC6394", Offset = "0xBC6394", VA = "0xBC6394")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xBC662C", Offset = "0xBC662C", VA = "0xBC662C")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xBC6668", Offset = "0xBC6668", VA = "0xBC6668")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xBC66B8", Offset = "0xBC66B8", VA = "0xBC66B8", Slot = "25")]
	public override bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xBC66DC", Offset = "0xBC66DC", VA = "0xBC66DC")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xBC6844", Offset = "0xBC6844", VA = "0xBC6844", Slot = "21")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xBC6888", Offset = "0xBC6888", VA = "0xBC6888", Slot = "22")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xBC692C", Offset = "0xBC692C", VA = "0xBC692C", Slot = "35")]
	public virtual bool OpLeave()
	{
		return default(bool);
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xBC6A1C", Offset = "0xBC6A1C", VA = "0xBC6A1C", Slot = "29")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xBC6B24", Offset = "0xBC6B24", VA = "0xBC6B24")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xBC7134", Offset = "0xBC7134", VA = "0xBC7134")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xBC758C", Offset = "0xBC758C", VA = "0xBC758C")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xBC7868", Offset = "0xBC7868", VA = "0xBC7868")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xBC79B4", Offset = "0xBC79B4", VA = "0xBC79B4")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xBC7CA4", Offset = "0xBC7CA4", VA = "0xBC7CA4")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xBC83A0", Offset = "0xBC83A0", VA = "0xBC83A0")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xBC5540", Offset = "0xBC5540", VA = "0xBC5540")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xBC8E5C", Offset = "0xBC8E5C", VA = "0xBC8E5C")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xBC770C", Offset = "0xBC770C", VA = "0xBC770C")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xBC8EEC", Offset = "0xBC8EEC", VA = "0xBC8EEC")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xBC8FF0", Offset = "0xBC8FF0", VA = "0xBC8FF0")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xBC8C54", Offset = "0xBC8C54", VA = "0xBC8C54")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xBC9668", Offset = "0xBC9668", VA = "0xBC9668")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xBC9B48", Offset = "0xBC9B48", VA = "0xBC9B48")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xBC9BAC", Offset = "0xBC9BAC", VA = "0xBC9BAC")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xBC9D94", Offset = "0xBC9D94", VA = "0xBC9D94")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xBC70BC", Offset = "0xBC70BC", VA = "0xBC70BC")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xBC4E34", Offset = "0xBC4E34", VA = "0xBC4E34")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xBC6740", Offset = "0xBC6740", VA = "0xBC6740")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xBC9EF0", Offset = "0xBC9EF0", VA = "0xBC9EF0", Slot = "31")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xBCA070", Offset = "0xBCA070", VA = "0xBCA070", Slot = "32")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xBCCCAC", Offset = "0xBCCCAC", VA = "0xBCCCAC", Slot = "33")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xBCDBB0", Offset = "0xBCDBB0", VA = "0xBCDBB0", Slot = "34")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xBD2B34", Offset = "0xBD2B34", VA = "0xBD2B34")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xBCC9AC", Offset = "0xBCC9AC", VA = "0xBCC9AC")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xBC8B28", Offset = "0xBC8B28", VA = "0xBC8B28")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xBD2B38", Offset = "0xBD2B38", VA = "0xBD2B38")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xBC7224", Offset = "0xBC7224", VA = "0xBC7224")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xBCFECC", Offset = "0xBCFECC", VA = "0xBCFECC")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xBD2F48", Offset = "0xBD2F48", VA = "0xBD2F48")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xBD310C", Offset = "0xBD310C", VA = "0xBD310C")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xBD1EE4", Offset = "0xBD1EE4", VA = "0xBD1EE4")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xBD3550", Offset = "0xBD3550", VA = "0xBD3550")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xBD3628", Offset = "0xBD3628", VA = "0xBD3628")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xBD35C0", Offset = "0xBD35C0", VA = "0xBD35C0")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xBC9758", Offset = "0xBC9758", VA = "0xBC9758")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xBD2AFC", Offset = "0xBD2AFC", VA = "0xBD2AFC")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xBC7F64", Offset = "0xBC7F64", VA = "0xBC7F64")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xBD3A98", Offset = "0xBD3A98", VA = "0xBD3A98")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xBD3844", Offset = "0xBD3844", VA = "0xBD3844")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xBD39BC", Offset = "0xBD39BC", VA = "0xBD39BC")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xBD36AC", Offset = "0xBD36AC", VA = "0xBD36AC")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xBD3E80", Offset = "0xBD3E80", VA = "0xBD3E80")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xBD3F5C", Offset = "0xBD3F5C", VA = "0xBD3F5C")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xBD3CF8", Offset = "0xBD3CF8", VA = "0xBD3CF8")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xBD2D7C", Offset = "0xBD2D7C", VA = "0xBD2D7C")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xBD4038", Offset = "0xBD4038", VA = "0xBD4038")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xBD3778", Offset = "0xBD3778", VA = "0xBD3778")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xBD429C", Offset = "0xBD429C", VA = "0xBD429C")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xBD3928", Offset = "0xBD3928", VA = "0xBD3928")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xBD4368", Offset = "0xBD4368", VA = "0xBD4368")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xBD4464", Offset = "0xBD4464", VA = "0xBD4464")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xBD3D6C", Offset = "0xBD3D6C", VA = "0xBD3D6C")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xBD464C", Offset = "0xBD464C", VA = "0xBD464C")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xBD4774", Offset = "0xBD4774", VA = "0xBD4774")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xBD477C", Offset = "0xBD477C", VA = "0xBD477C")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xBD51CC", Offset = "0xBD51CC", VA = "0xBD51CC")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xBD5488", Offset = "0xBD5488", VA = "0xBD5488")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xBD5518", Offset = "0xBD5518", VA = "0xBD5518")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xBD5620", Offset = "0xBD5620", VA = "0xBD5620")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xBD5900", Offset = "0xBD5900", VA = "0xBD5900")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xBD65DC", Offset = "0xBD65DC", VA = "0xBD65DC")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xBD1820", Offset = "0xBD1820", VA = "0xBD1820")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xBD6908", Offset = "0xBD6908", VA = "0xBD6908")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xBD6BC0", Offset = "0xBD6BC0", VA = "0xBD6BC0")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xBD6850", Offset = "0xBD6850", VA = "0xBD6850")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xBD6D6C", Offset = "0xBD6D6C", VA = "0xBD6D6C")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xBD7164", Offset = "0xBD7164", VA = "0xBD7164")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xBC72E4", Offset = "0xBC72E4", VA = "0xBC72E4")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xBD72CC", Offset = "0xBD72CC", VA = "0xBD72CC")]
	protected internal void SetLevelInPropsIfSynced(object levelId)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xBD7670", Offset = "0xBD7670", VA = "0xBD7670")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xBD7768", Offset = "0xBD7768", VA = "0xBD7768")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000296")]
public interface IPunObservable
{
	[Token(Token = "0x600122E")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x2000297")]
public interface IPunCallbacks
{
	[Token(Token = "0x600122F")]
	void OnConnectedToPhoton();

	[Token(Token = "0x6001230")]
	void OnLeftRoom();

	[Token(Token = "0x6001231")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x6001232")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6001233")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6001234")]
	void OnCreatedRoom();

	[Token(Token = "0x6001235")]
	void OnJoinedLobby();

	[Token(Token = "0x6001236")]
	void OnLeftLobby();

	[Token(Token = "0x6001237")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x6001238")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x6001239")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x600123A")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x600123B")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x600123C")]
	void OnJoinedRoom();

	[Token(Token = "0x600123D")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x600123E")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x600123F")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x6001240")]
	void OnConnectedToMaster();

	[Token(Token = "0x6001241")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x6001242")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x6001243")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x6001244")]
	void OnUpdatedFriendList();

	[Token(Token = "0x6001245")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x6001246")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x6001247")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x6001248")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x6001249")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x600124A")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x600124B")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x2000298")]
public interface IPunPrefabPool
{
	[Token(Token = "0x600124C")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x600124D")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x2000299")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly PhotonView photonView;

	[Token(Token = "0x1700015A")]
	public double timestamp
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0xD097FC", Offset = "0xD097FC", VA = "0xD097FC")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xD097F0", Offset = "0xD097F0", VA = "0xD097F0")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xD09814", Offset = "0xD09814", VA = "0xD09814", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200029A")]
internal class PunEvent
{
	[Token(Token = "0x40011E7")]
	public const byte RPC = 200;

	[Token(Token = "0x40011E8")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x40011E9")]
	public const byte Instantiation = 202;

	[Token(Token = "0x40011EA")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x40011EB")]
	public const byte Destroy = 204;

	[Token(Token = "0x40011EC")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x40011ED")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x40011EE")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x40011EF")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x40011F0")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x40011F1")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x40011F2")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xBDB7E4", Offset = "0xBDB7E4", VA = "0xBDB7E4")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x200029B")]
public class PhotonStream
{
	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool write;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<object> writeData;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] readData;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal byte currentItem;

	[Token(Token = "0x1700015B")]
	public bool isWriting
	{
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xC44108", Offset = "0xC44108", VA = "0xC44108")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015C")]
	public bool isReading
	{
		[Token(Token = "0x6001256")]
		[Address(RVA = "0xC44110", Offset = "0xC44110", VA = "0xC44110")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	public int Count
	{
		[Token(Token = "0x6001257")]
		[Address(RVA = "0xC44120", Offset = "0xC44120", VA = "0xC44120")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xC44004", Offset = "0xC44004", VA = "0xC44004")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xC440A0", Offset = "0xC440A0", VA = "0xC440A0")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xC440B0", Offset = "0xC440B0", VA = "0xC440B0")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xC4281C", Offset = "0xC4281C", VA = "0xC4281C")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xC44188", Offset = "0xC44188", VA = "0xC44188")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xC4276C", Offset = "0xC4276C", VA = "0xC4276C")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xC4423C", Offset = "0xC4423C", VA = "0xC4423C")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xC442AC", Offset = "0xC442AC", VA = "0xC442AC")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xC443C0", Offset = "0xC443C0", VA = "0xC443C0")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xC444CC", Offset = "0xC444CC", VA = "0xC444CC")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xC445C4", Offset = "0xC445C4", VA = "0xC445C4")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xC446D0", Offset = "0xC446D0", VA = "0xC446D0")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xC447DC", Offset = "0xC447DC", VA = "0xC447DC")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xC448E8", Offset = "0xC448E8", VA = "0xC448E8")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xC44A18", Offset = "0xC44A18", VA = "0xC44A18")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xC44B3C", Offset = "0xC44B3C", VA = "0xC44B3C")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xC44C48", Offset = "0xC44C48", VA = "0xC44C48")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x200029C")]
public class SceneManagerHelper
{
	[Token(Token = "0x1700015E")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x6001266")]
		[Address(RVA = "0xC9CDA0", Offset = "0xC9CDA0", VA = "0xC9CDA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015F")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x6001267")]
		[Address(RVA = "0xC9CE18", Offset = "0xC9CE18", VA = "0xC9CE18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xC9CE90", Offset = "0xC9CE90", VA = "0xC9CE90")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x200029D")]
public class WebRpcResponse
{
	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB0C", Offset = "0xB3CB0C")]
	private string <Name>k__BackingField;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB1C", Offset = "0xB3CB1C")]
	private int <ReturnCode>k__BackingField;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB2C", Offset = "0xB3CB2C")]
	private string <DebugMessage>k__BackingField;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB3C", Offset = "0xB3CB3C")]
	private Dictionary<string, object> <Parameters>k__BackingField;

	[Token(Token = "0x17000160")]
	public string Name
	{
		[Token(Token = "0x6001269")]
		[Address(RVA = "0x13A55DC", Offset = "0x13A55DC", VA = "0x13A55DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C1C8", Offset = "0xB4C1C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600126A")]
		[Address(RVA = "0x13A55E4", Offset = "0x13A55E4", VA = "0x13A55E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C1D8", Offset = "0xB4C1D8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public int ReturnCode
	{
		[Token(Token = "0x600126B")]
		[Address(RVA = "0x13A55EC", Offset = "0x13A55EC", VA = "0x13A55EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C1E8", Offset = "0xB4C1E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600126C")]
		[Address(RVA = "0x13A55F4", Offset = "0x13A55F4", VA = "0x13A55F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C1F8", Offset = "0xB4C1F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public string DebugMessage
	{
		[Token(Token = "0x600126D")]
		[Address(RVA = "0x13A55FC", Offset = "0x13A55FC", VA = "0x13A55FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C208", Offset = "0xB4C208")]
		get
		{
			return null;
		}
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x13A5604", Offset = "0x13A5604", VA = "0x13A5604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C218", Offset = "0xB4C218")]
		private set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x600126F")]
		[Address(RVA = "0x13A560C", Offset = "0x13A560C", VA = "0x13A560C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C228", Offset = "0xB4C228")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001270")]
		[Address(RVA = "0x13A5614", Offset = "0x13A5614", VA = "0x13A5614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C238", Offset = "0xB4C238")]
		private set
		{
		}
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x13A561C", Offset = "0x13A561C", VA = "0x13A561C")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x13A57B8", Offset = "0x13A57B8", VA = "0x13A57B8")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x200029E")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20007DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F38", Offset = "0xB34F38")]
	private sealed class <>c
	{
		[Token(Token = "0x4002EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<Scene, LoadSceneMode> <>9__10_0;

		[Token(Token = "0x600305D")]
		[Address(RVA = "0xD082B4", Offset = "0xD082B4", VA = "0xD082B4")]
		public <>c()
		{
		}

		[Token(Token = "0x600305E")]
		[Address(RVA = "0xD082BC", Offset = "0xD082BC", VA = "0xD082BC")]
		internal void <Start>b__10_0(Scene scene, LoadSceneMode loadingMode)
		{
		}
	}

	[Token(Token = "0x20007DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F48", Offset = "0xB34F48")]
	private sealed class <PingAvailableRegionsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool connectToBest;

		[Token(Token = "0x4002EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x170004A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003062")]
			[Address(RVA = "0xD08BF4", Offset = "0xD08BF4", VA = "0xD08BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003064")]
			[Address(RVA = "0xD08C5C", Offset = "0xD08C5C", VA = "0xD08C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600305F")]
		[Address(RVA = "0xD08218", Offset = "0xD08218", VA = "0xD08218")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6003060")]
		[Address(RVA = "0xD08358", Offset = "0xD08358", VA = "0xD08358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003061")]
		[Address(RVA = "0xD0835C", Offset = "0xD0835C", VA = "0xD0835C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0xD08BFC", Offset = "0xD08BFC", VA = "0xD08BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextSendTickCount;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected internal static bool AppQuits;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x4001204")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x17000164")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0xD080AC", Offset = "0xD080AC", VA = "0xD080AC")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x600127F")]
		[Address(RVA = "0xD0811C", Offset = "0xD0811C", VA = "0xD0811C")]
		set
		{
		}
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xD06E78", Offset = "0xD06E78", VA = "0xD06E78")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xD072C0", Offset = "0xD072C0", VA = "0xD072C0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xD073BC", Offset = "0xD073BC", VA = "0xD073BC")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xD074B4", Offset = "0xD074B4", VA = "0xD074B4")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xD0764C", Offset = "0xD0764C", VA = "0xD0764C")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xD076A8", Offset = "0xD076A8", VA = "0xD076A8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xD07C38", Offset = "0xD07C38", VA = "0xD07C38")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xD07CAC", Offset = "0xD07CAC", VA = "0xD07CAC")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xD071B4", Offset = "0xD071B4", VA = "0xD071B4")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xD0744C", Offset = "0xD0744C", VA = "0xD0744C")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xD07D30", Offset = "0xD07D30", VA = "0xD07D30")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xD08120", Offset = "0xD08120", VA = "0xD08120")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xD081A4", Offset = "0xD081A4", VA = "0xD081A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4C248", Offset = "0xB4C248")]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xD08244", Offset = "0xD08244", VA = "0xD08244")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x200029F")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect WindowRect;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool Visible;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB4C", Offset = "0xB3CB4C")]
	private PhotonPeer <Peer>k__BackingField;

	[Token(Token = "0x17000165")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD08C64", Offset = "0xD08C64", VA = "0xD08C64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C2AC", Offset = "0xB4C2AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD08C6C", Offset = "0xD08C6C", VA = "0xD08C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C2BC", Offset = "0xB4C2BC")]
		set
		{
		}
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xD08C74", Offset = "0xD08C74", VA = "0xD08C74")]
	public void Start()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xD08CE4", Offset = "0xD08CE4", VA = "0xD08CE4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xD08E5C", Offset = "0xD08E5C", VA = "0xD08E5C")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xD08F34", Offset = "0xD08F34", VA = "0xD08F34")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xD09780", Offset = "0xD09780", VA = "0xD09780")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x20002A0")]
public static class PhotonNetwork
{
	[Token(Token = "0x20007DF")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Serializable]
	[Token(Token = "0x20007E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F58", Offset = "0xB34F58")]
	private sealed class <>c
	{
		[Token(Token = "0x4002EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x600306A")]
		[Address(RVA = "0xC40268", Offset = "0xC40268", VA = "0xC40268")]
		public <>c()
		{
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0xC40270", Offset = "0xC40270", VA = "0xC40270")]
		internal int <.cctor>b__147_0()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001209")]
	public const string versionPUN = "1.87";

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB5C", Offset = "0xB3CB5C")]
	private static string <gameVersion>k__BackingField;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x400120E")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB6C", Offset = "0xB3CB6C")]
	private static List<FriendInfo> <Friends>k__BackingField;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private static bool isOfflineMode;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Room offlineModeRoom;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3CB7C", Offset = "0xB3CB7C")]
	public static int maxConnections;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int sendInterval;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private static bool UsePreciseTimer;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float BackgroundTimeout;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static EventCallback OnEventCall;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x17000166")]
	public static string gameVersion
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xD098A8", Offset = "0xD098A8", VA = "0xD098A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C2CC", Offset = "0xB4C2CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600128C")]
		[Address(RVA = "0xD09910", Offset = "0xD09910", VA = "0xD09910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C2DC", Offset = "0xB4C2DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000167")]
	public static string ServerAddress
	{
		[Token(Token = "0x600128D")]
		[Address(RVA = "0xD0997C", Offset = "0xD0997C", VA = "0xD0997C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000168")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x600128E")]
		[Address(RVA = "0xCFF2B0", Offset = "0xCFF2B0", VA = "0xCFF2B0")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x17000169")]
	public static bool connected
	{
		[Token(Token = "0x600128F")]
		[Address(RVA = "0xCFC9E4", Offset = "0xCFC9E4", VA = "0xCFC9E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public static bool connecting
	{
		[Token(Token = "0x6001290")]
		[Address(RVA = "0xD09A30", Offset = "0xD09A30", VA = "0xD09A30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016B")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x6001291")]
		[Address(RVA = "0xD01834", Offset = "0xD01834", VA = "0xD01834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016C")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x6001292")]
		[Address(RVA = "0xD09B14", Offset = "0xD09B14", VA = "0xD09B14")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x1700016D")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x6001293")]
		[Address(RVA = "0xD07AFC", Offset = "0xD07AFC", VA = "0xD07AFC")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x1700016E")]
	public static ServerConnection Server
	{
		[Token(Token = "0x6001294")]
		[Address(RVA = "0xD08B54", Offset = "0xD08B54", VA = "0xD08B54")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x1700016F")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x6001295")]
		[Address(RVA = "0xD09C40", Offset = "0xD09C40", VA = "0xD09C40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD09CE0", Offset = "0xD09CE0", VA = "0xD09CE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public static Room room
	{
		[Token(Token = "0x6001297")]
		[Address(RVA = "0xCFCC18", Offset = "0xCFCC18", VA = "0xCFCC18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000171")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD03BC8", Offset = "0xD03BC8", VA = "0xD03BC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x6001299")]
		[Address(RVA = "0xD09D7C", Offset = "0xD09D7C", VA = "0xD09D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000173")]
	public static string playerName
	{
		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD09EC0", Offset = "0xD09EC0", VA = "0xD09EC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600129B")]
		[Address(RVA = "0xCFF7E4", Offset = "0xCFF7E4", VA = "0xCFF7E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD00908", Offset = "0xD00908", VA = "0xD00908")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000175")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD09F34", Offset = "0xD09F34", VA = "0xD09F34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000176")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD09FE4", Offset = "0xD09FE4", VA = "0xD09FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C2EC", Offset = "0xB4C2EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD0A04C", Offset = "0xD0A04C", VA = "0xD0A04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C2FC", Offset = "0xB4C2FC")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public static int FriendsListAge
	{
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD0A0B8", Offset = "0xD0A0B8", VA = "0xD0A0B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000178")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD0A164", Offset = "0xD0A164", VA = "0xD0A164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD0A1D8", Offset = "0xD0A1D8", VA = "0xD0A1D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public static bool offlineMode
	{
		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD0A250", Offset = "0xD0A250", VA = "0xD0A250")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xCFFAB0", Offset = "0xCFFAB0", VA = "0xCFFAB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD0A2B8", Offset = "0xD0A2B8", VA = "0xD0A2B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xD0A320", Offset = "0xD0A320", VA = "0xD0A320")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xD0A3F4", Offset = "0xD0A3F4", VA = "0xD0A3F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xD0A45C", Offset = "0xD0A45C", VA = "0xD0A45C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xD0A528", Offset = "0xD0A528", VA = "0xD0A528")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xD0A59C", Offset = "0xD0A59C", VA = "0xD0A59C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD0A618", Offset = "0xD0A618", VA = "0xD0A618")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD0A68C", Offset = "0xD0A68C", VA = "0xD0A68C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD0A708", Offset = "0xD0A708", VA = "0xD0A708")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD0A77C", Offset = "0xD0A77C", VA = "0xD0A77C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public static bool insideLobby
	{
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD0A7F4", Offset = "0xD0A7F4", VA = "0xD0A7F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000180")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD0A868", Offset = "0xD0A868", VA = "0xD0A868")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD0A8DC", Offset = "0xD0A8DC", VA = "0xD0A8DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public static int sendRate
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD070D4", Offset = "0xD070D4", VA = "0xD070D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD0A954", Offset = "0xD0A954", VA = "0xD0A954")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD07144", Offset = "0xD07144", VA = "0xD07144")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD0AA98", Offset = "0xD0AA98", VA = "0xD0AA98")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xD0ABF8", Offset = "0xD0ABF8", VA = "0xD0ABF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xD0AC60", Offset = "0xD0AC60", VA = "0xD0AC60")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public static int unreliableCommandsLimit
	{
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xD0AD14", Offset = "0xD0AD14", VA = "0xD0AD14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xD0AD88", Offset = "0xD0AD88", VA = "0xD0AD88")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public static double time
	{
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xD0AE00", Offset = "0xD0AE00", VA = "0xD0AE00")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000186")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xD0AE70", Offset = "0xD0AE70", VA = "0xD0AE70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000187")]
	public static bool isMasterClient
	{
		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xCFE7FC", Offset = "0xCFE7FC", VA = "0xCFE7FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000188")]
	public static bool inRoom
	{
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xCFCBB0", Offset = "0xCFCBB0", VA = "0xCFCBB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD0B00C", Offset = "0xD0B00C", VA = "0xD0B00C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018A")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xD0B09C", Offset = "0xD0B09C", VA = "0xD0B09C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018B")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xD0B110", Offset = "0xD0B110", VA = "0xD0B110")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018C")]
	public static int countOfPlayers
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD0B184", Offset = "0xD0B184", VA = "0xD0B184")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018D")]
	public static int countOfRooms
	{
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD0B200", Offset = "0xD0B200", VA = "0xD0B200")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018E")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD0B274", Offset = "0xD0B274", VA = "0xD0B274")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD0B2E8", Offset = "0xD0B2E8", VA = "0xD0B2E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD0B364", Offset = "0xD0B364", VA = "0xD0B364")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000190")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD0B3D8", Offset = "0xD0B3D8", VA = "0xD0B3D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD0B44C", Offset = "0xD0B44C", VA = "0xD0B44C")]
		set
		{
		}
	}

	[Token(Token = "0x17000191")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD0B5B0", Offset = "0xD0B5B0", VA = "0xD0B5B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000192")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD0B624", Offset = "0xD0B624", VA = "0xD0B624")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD0B698", Offset = "0xD0B698", VA = "0xD0B698")]
		set
		{
		}
	}

	[Token(Token = "0x17000193")]
	public static int QuickResends
	{
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD0B728", Offset = "0xD0B728", VA = "0xD0B728")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD0B7A4", Offset = "0xD0B7A4", VA = "0xD0B7A4")]
		set
		{
		}
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xD0B830", Offset = "0xD0B830", VA = "0xD0B830")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xD0BCC0", Offset = "0xD0BCC0", VA = "0xD0BCC0")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xCFFD60", Offset = "0xCFFD60", VA = "0xCFFD60")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xD0C0B0", Offset = "0xD0C0B0", VA = "0xD0C0B0")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xD0C44C", Offset = "0xD0C44C", VA = "0xD0C44C")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xD0C7C8", Offset = "0xD0C7C8", VA = "0xD0C7C8")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xD0BD38", Offset = "0xD0BD38", VA = "0xD0BD38")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xD0035C", Offset = "0xD0035C", VA = "0xD0035C")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xD0CB74", Offset = "0xD0CB74", VA = "0xD0CB74")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xD0CBD8", Offset = "0xD0CBD8", VA = "0xD0CBD8")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xD0CC44", Offset = "0xD0CC44", VA = "0xD0CC44")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xD0CCB8", Offset = "0xD0CCB8", VA = "0xD0CCB8")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xD0CDCC", Offset = "0xD0CDCC", VA = "0xD0CDCC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C30C", Offset = "0xB4C30C")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xD0CDD0", Offset = "0xD0CDD0", VA = "0xD0CDD0")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xCFE988", Offset = "0xCFE988", VA = "0xCFE988")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xD0CE74", Offset = "0xD0CE74", VA = "0xD0CE74")]
	public static bool FindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xD035BC", Offset = "0xD035BC", VA = "0xD035BC")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xD0D1F8", Offset = "0xD0D1F8", VA = "0xD0D1F8")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xD0CF50", Offset = "0xD0CF50", VA = "0xD0CF50")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xCFF42C", Offset = "0xCFF42C", VA = "0xCFF42C")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xD0D4C4", Offset = "0xD0D4C4", VA = "0xD0D4C4")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xD0362C", Offset = "0xD0362C", VA = "0xD0362C")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xD0D734", Offset = "0xD0D734", VA = "0xD0D734")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xD006DC", Offset = "0xD006DC", VA = "0xD006DC")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xD0DD0C", Offset = "0xD0DD0C", VA = "0xD0DD0C")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xD0DA38", Offset = "0xD0DA38", VA = "0xD0DA38")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xD0DD90", Offset = "0xD0DD90", VA = "0xD0DD90")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xD0D278", Offset = "0xD0D278", VA = "0xD0D278")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xD02644", Offset = "0xD02644", VA = "0xD02644")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xD0DFB4", Offset = "0xD0DFB4", VA = "0xD0DFB4")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xD0E0E8", Offset = "0xD0E0E8", VA = "0xD0E0E8")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xD03F18", Offset = "0xD03F18", VA = "0xD03F18")]
	public static bool LeaveRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xD0E1B4", Offset = "0xD0E1B4", VA = "0xD0E1B4")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xD034AC", Offset = "0xD034AC", VA = "0xD034AC")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xCFF860", Offset = "0xCFF860", VA = "0xCFF860")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xD0E248", Offset = "0xD0E248", VA = "0xD0E248")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xD0E3F0", Offset = "0xD0E3F0", VA = "0xD0E3F0")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xD054C0", Offset = "0xD054C0", VA = "0xD054C0")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xD0E86C", Offset = "0xD0E86C", VA = "0xD0E86C")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xD0E514", Offset = "0xD0E514", VA = "0xD0E514")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xD0E960", Offset = "0xD0E960", VA = "0xD0E960")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xD0EA38", Offset = "0xD0EA38", VA = "0xD0EA38")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xD0EBB0", Offset = "0xD0EBB0", VA = "0xD0EBB0")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xD0EC80", Offset = "0xD0EC80", VA = "0xD0EC80")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xD0F248", Offset = "0xD0F248", VA = "0xD0F248")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xD0F8C4", Offset = "0xD0F8C4", VA = "0xD0F8C4")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xD0F938", Offset = "0xD0F938", VA = "0xD0F938")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xD0F9E4", Offset = "0xD0F9E4", VA = "0xD0F9E4")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xD01624", Offset = "0xD01624", VA = "0xD01624")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xD0FA84", Offset = "0xD0FA84", VA = "0xD0FA84")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xD0FDC4", Offset = "0xD0FDC4", VA = "0xD0FDC4")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xD0FED4", Offset = "0xD0FED4", VA = "0xD0FED4")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xD0FF60", Offset = "0xD0FF60", VA = "0xD0FF60")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xD10024", Offset = "0xD10024", VA = "0xD10024")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xD101B0", Offset = "0xD101B0", VA = "0xD101B0")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xD10284", Offset = "0xD10284", VA = "0xD10284")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xD10394", Offset = "0xD10394", VA = "0xD10394")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xD1043C", Offset = "0xD1043C", VA = "0xD1043C")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xD104E4", Offset = "0xD104E4", VA = "0xD104E4")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xD10768", Offset = "0xD10768", VA = "0xD10768")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xD10998", Offset = "0xD10998", VA = "0xD10998")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xD10AA8", Offset = "0xD10AA8", VA = "0xD10AA8")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xD10B10", Offset = "0xD10B10", VA = "0xD10B10")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C344", Offset = "0xB4C344")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xD10BB4", Offset = "0xD10BB4", VA = "0xD10BB4")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xD10CD4", Offset = "0xD10CD4", VA = "0xD10CD4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C37C", Offset = "0xB4C37C")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xD10E00", Offset = "0xD10E00", VA = "0xD10E00")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xD10EBC", Offset = "0xD10EBC", VA = "0xD10EBC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C3B4", Offset = "0xB4C3B4")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xD10F30", Offset = "0xD10F30", VA = "0xD10F30")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xD10FEC", Offset = "0xD10FEC", VA = "0xD10FEC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C3EC", Offset = "0xB4C3EC")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0xD110D0", Offset = "0xD110D0", VA = "0xD110D0")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xD1118C", Offset = "0xD1118C", VA = "0xD1118C")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xD11224", Offset = "0xD11224", VA = "0xD11224")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xD11314", Offset = "0xD11314", VA = "0xD11314")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xD113DC", Offset = "0xD113DC", VA = "0xD113DC")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A1")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actorID;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nameField;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CBB4", Offset = "0xB3CBB4")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool IsLocal;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CBC4", Offset = "0xB3CBC4")]
	private bool <IsInactive>k__BackingField;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CBD4", Offset = "0xB3CBD4")]
	private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object TagObject;

	[Token(Token = "0x17000194")]
	public int ID
	{
		[Token(Token = "0x6001317")]
		[Address(RVA = "0xC41388", Offset = "0xC41388", VA = "0xC41388")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000195")]
	public string NickName
	{
		[Token(Token = "0x6001318")]
		[Address(RVA = "0xC41390", Offset = "0xC41390", VA = "0xC41390")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC41398", Offset = "0xC41398", VA = "0xC41398")]
		set
		{
		}
	}

	[Token(Token = "0x17000196")]
	public string UserId
	{
		[Token(Token = "0x600131A")]
		[Address(RVA = "0xC41494", Offset = "0xC41494", VA = "0xC41494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C424", Offset = "0xB4C424")]
		get
		{
			return null;
		}
		[Token(Token = "0x600131B")]
		[Address(RVA = "0xC4149C", Offset = "0xC4149C", VA = "0xC4149C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C434", Offset = "0xB4C434")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000197")]
	public bool IsMasterClient
	{
		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC414A4", Offset = "0xC414A4", VA = "0xC414A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000198")]
	public bool IsInactive
	{
		[Token(Token = "0x600131D")]
		[Address(RVA = "0xC4152C", Offset = "0xC4152C", VA = "0xC4152C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C444", Offset = "0xB4C444")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600131E")]
		[Address(RVA = "0xC41534", Offset = "0xC41534", VA = "0xC41534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C454", Offset = "0xB4C454")]
		set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x600131F")]
		[Address(RVA = "0xC41540", Offset = "0xC41540", VA = "0xC41540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C464", Offset = "0xB4C464")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001320")]
		[Address(RVA = "0xC41548", Offset = "0xC41548", VA = "0xC41548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C474", Offset = "0xB4C474")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x6001321")]
		[Address(RVA = "0xC41550", Offset = "0xC41550", VA = "0xC41550")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56174", Offset = "0xB56174")]
	public string name
	{
		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC42534", Offset = "0xC42534", VA = "0xC42534")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC4253C", Offset = "0xC4253C", VA = "0xC4253C")]
		set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB561AC", Offset = "0xB561AC")]
	public string userId
	{
		[Token(Token = "0x6001336")]
		[Address(RVA = "0xC42540", Offset = "0xC42540", VA = "0xC42540")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001337")]
		[Address(RVA = "0xC42548", Offset = "0xC42548", VA = "0xC42548")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB561E4", Offset = "0xB561E4")]
	public bool isLocal
	{
		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC42550", Offset = "0xC42550", VA = "0xC42550")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5621C", Offset = "0xB5621C")]
	public bool isMasterClient
	{
		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC42558", Offset = "0xC42558", VA = "0xC42558")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56254", Offset = "0xB56254")]
	public bool isInactive
	{
		[Token(Token = "0x600133A")]
		[Address(RVA = "0xC4255C", Offset = "0xC4255C", VA = "0xC4255C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC42564", Offset = "0xC42564", VA = "0xC42564")]
		set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5628C", Offset = "0xB5628C")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC42570", Offset = "0xC42570", VA = "0xC42570")]
		get
		{
			return null;
		}
		[Token(Token = "0x600133D")]
		[Address(RVA = "0xC42578", Offset = "0xC42578", VA = "0xC42578")]
		internal set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB562C4", Offset = "0xB562C4")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x600133E")]
		[Address(RVA = "0xC42580", Offset = "0xC42580", VA = "0xC42580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xC41624", Offset = "0xC41624", VA = "0xC41624")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xC416D4", Offset = "0xC416D4", VA = "0xC416D4")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xC419BC", Offset = "0xC419BC", VA = "0xC419BC", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xC41A80", Offset = "0xC41A80", VA = "0xC41A80", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xC41A88", Offset = "0xC41A88", VA = "0xC41A88")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xC41788", Offset = "0xC41788", VA = "0xC41788")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xC41B20", Offset = "0xC41B20", VA = "0xC41B20")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xC41DE0", Offset = "0xC41DE0", VA = "0xC41DE0")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xC41E94", Offset = "0xC41E94", VA = "0xC41E94")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xC41E9C", Offset = "0xC41E9C", VA = "0xC41E9C")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xC420CC", Offset = "0xC420CC", VA = "0xC420CC")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xC41EA4", Offset = "0xC41EA4", VA = "0xC41EA4")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xC420E0", Offset = "0xC420E0", VA = "0xC420E0", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xC4213C", Offset = "0xC4213C", VA = "0xC4213C", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xC4217C", Offset = "0xC4217C", VA = "0xC4217C", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xC421DC", Offset = "0xC421DC", VA = "0xC421DC", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xC42220", Offset = "0xC42220", VA = "0xC42220", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xC4237C", Offset = "0xC4237C", VA = "0xC4237C")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20002A2")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool statsWindowOn;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool statsOn;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool healthStatsVisible;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool trafficStatsOn;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool buttonsOn;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect statsRect;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int WindowId;

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xC42AF0", Offset = "0xC42AF0", VA = "0xC42AF0")]
	public void Start()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xC42B54", Offset = "0xC42B54", VA = "0xC42B54")]
	public void Update()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xC42BA4", Offset = "0xC42BA4", VA = "0xC42BA4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xC42D88", Offset = "0xC42D88", VA = "0xC42D88")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xC43F90", Offset = "0xC43F90", VA = "0xC43F90")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x20002A3")]
public class PhotonStreamQueue
{
	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_SampleRate;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_SampleCount;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_LastSampleTime;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_LastFrameCount;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_NextObjectIndex;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<object> m_Objects;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsWriting;

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xC44D5C", Offset = "0xC44D5C", VA = "0xC44D5C")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xC44DF0", Offset = "0xC44DF0", VA = "0xC44DF0")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xC45144", Offset = "0xC45144", VA = "0xC45144")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xC451AC", Offset = "0xC451AC", VA = "0xC451AC")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0xC45254", Offset = "0xC45254", VA = "0xC45254")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xC45264", Offset = "0xC45264", VA = "0xC45264")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xC4530C", Offset = "0xC4530C", VA = "0xC4530C")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xC45434", Offset = "0xC45434", VA = "0xC45434")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x20002A4")]
public enum ViewSynchronization
{
	[Token(Token = "0x4001242")]
	Off,
	[Token(Token = "0x4001243")]
	ReliableDeltaCompressed,
	[Token(Token = "0x4001244")]
	Unreliable,
	[Token(Token = "0x4001245")]
	UnreliableOnChange
}
[Token(Token = "0x20002A5")]
public enum OnSerializeTransform
{
	[Token(Token = "0x4001247")]
	OnlyPosition,
	[Token(Token = "0x4001248")]
	OnlyRotation,
	[Token(Token = "0x4001249")]
	OnlyScale,
	[Token(Token = "0x400124A")]
	PositionAndRotation,
	[Token(Token = "0x400124B")]
	All
}
[Token(Token = "0x20002A6")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x400124D")]
	OnlyVelocity,
	[Token(Token = "0x400124E")]
	OnlyAngularVelocity,
	[Token(Token = "0x400124F")]
	All
}
[Token(Token = "0x20002A7")]
public enum OwnershipOption
{
	[Token(Token = "0x4001251")]
	Fixed,
	[Token(Token = "0x4001252")]
	Takeover,
	[Token(Token = "0x4001253")]
	Request
}
[Token(Token = "0x20002A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB32324", Offset = "0xB32324")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ownerId;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte group;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prefixBackup;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal object[] instantiationDataField;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Component> ObservedComponents;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int instantiationId;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentMasterID;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected internal bool didAwake;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x170001A2")]
	public int prefix
	{
		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC4732C", Offset = "0xC4732C", VA = "0xC4732C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC473E0", Offset = "0xC473E0", VA = "0xC473E0")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public object[] instantiationData
	{
		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC473E8", Offset = "0xC473E8", VA = "0xC473E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC4747C", Offset = "0xC4747C", VA = "0xC4747C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public int viewID
	{
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC47484", Offset = "0xC47484", VA = "0xC47484")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC4748C", Offset = "0xC4748C", VA = "0xC4748C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public bool isSceneView
	{
		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC47578", Offset = "0xC47578", VA = "0xC47578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A6")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC47608", Offset = "0xC47608", VA = "0xC47608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public int OwnerActorNr
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC47610", Offset = "0xC47610", VA = "0xC47610")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A8")]
	public bool isOwnerActive
	{
		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC47618", Offset = "0xC47618", VA = "0xC47618")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A9")]
	public int CreatorActorNr
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC47594", Offset = "0xC47594", VA = "0xC47594")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AA")]
	public bool isMine
	{
		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC458A4", Offset = "0xC458A4", VA = "0xC458A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xC476BC", Offset = "0xC476BC", VA = "0xC476BC")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xC4776C", Offset = "0xC4776C", VA = "0xC4776C")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xC477EC", Offset = "0xC477EC", VA = "0xC477EC")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xC47804", Offset = "0xC47804", VA = "0xC47804")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xC47898", Offset = "0xC47898", VA = "0xC47898")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xC47900", Offset = "0xC47900", VA = "0xC47900")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xC47A7C", Offset = "0xC47A7C", VA = "0xC47A7C")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xC47FDC", Offset = "0xC47FDC", VA = "0xC47FDC")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xC480AC", Offset = "0xC480AC", VA = "0xC480AC")]
	protected internal void DeserializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xC47B4C", Offset = "0xC47B4C", VA = "0xC47B4C")]
	protected internal void SerializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xC486CC", Offset = "0xC486CC", VA = "0xC486CC")]
	protected internal void ExecuteComponentOnSerialize(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xC48A64", Offset = "0xC48A64", VA = "0xC48A64")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xC48ABC", Offset = "0xC48ABC", VA = "0xC48ABC")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xC48B50", Offset = "0xC48B50", VA = "0xC48B50")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xC48BE8", Offset = "0xC48BE8", VA = "0xC48BE8")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xC48C7C", Offset = "0xC48C7C", VA = "0xC48C7C")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xC48D14", Offset = "0xC48D14", VA = "0xC48D14")]
	public static PhotonView Get(Component component)
	{
		return null;
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xC48D6C", Offset = "0xC48D6C", VA = "0xC48D6C")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xC48DC4", Offset = "0xC48DC4", VA = "0xC48DC4")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xC48E40", Offset = "0xC48E40", VA = "0xC48E40", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xC49064", Offset = "0xC49064", VA = "0xC49064")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x20002A9")]
public class PhotonPingManager
{
	[Token(Token = "0x20007E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F68", Offset = "0xB34F68")]
	private sealed class <PingSocket>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Region region;

		[Token(Token = "0x4002EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x4002EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PhotonPing <ping>5__2;

		[Token(Token = "0x4002EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <rttSum>5__3;

		[Token(Token = "0x4002EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <replyCount>5__4;

		[Token(Token = "0x4002EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <regionAddress>5__5;

		[Token(Token = "0x4002EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x4002EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <overtime>5__7;

		[Token(Token = "0x4002EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x170004A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600306F")]
			[Address(RVA = "0xC41318", Offset = "0xC41318", VA = "0xC41318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003071")]
			[Address(RVA = "0xC41380", Offset = "0xC41380", VA = "0xC41380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0xC40888", Offset = "0xC40888", VA = "0xC40888")]
		[DebuggerHidden]
		public <PingSocket>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0xC40BA4", Offset = "0xC40BA4", VA = "0xC40BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600306E")]
		[Address(RVA = "0xC40BA8", Offset = "0xC40BA8", VA = "0xC40BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0xC41320", Offset = "0xC41320", VA = "0xC41320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseNative;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x400126F")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int PingsRunning;

	[Token(Token = "0x170001AB")]
	public Region BestRegion
	{
		[Token(Token = "0x600136D")]
		[Address(RVA = "0xC40654", Offset = "0xC40654", VA = "0xC40654")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	public bool Done
	{
		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC407FC", Offset = "0xC407FC", VA = "0xC407FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xC4080C", Offset = "0xC4080C", VA = "0xC4080C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4C484", Offset = "0xB4C484")]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xC408B4", Offset = "0xC408B4", VA = "0xC408B4")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xC40B28", Offset = "0xC40B28", VA = "0xC40B28")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x20002AA")]
public class PunRPC : Attribute
{
	[Token(Token = "0x6001373")]
	[Address(RVA = "0xBDB7F4", Offset = "0xBDB7F4", VA = "0xBDB7F4")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x20002AB")]
public class Room : RoomInfo
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CC04", Offset = "0xB3CC04")]
	private string[] <PropertiesListedInLobby>k__BackingField;

	[Token(Token = "0x170001AD")]
	public new string Name
	{
		[Token(Token = "0x6001374")]
		[Address(RVA = "0xBEDF8C", Offset = "0xBEDF8C", VA = "0xBEDF8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001375")]
		[Address(RVA = "0xBEDF94", Offset = "0xBEDF94", VA = "0xBEDF94")]
		internal set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public new bool IsOpen
	{
		[Token(Token = "0x6001376")]
		[Address(RVA = "0xBEDF9C", Offset = "0xBEDF9C", VA = "0xBEDF9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xBEDFA4", Offset = "0xBEDFA4", VA = "0xBEDFA4")]
		set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public new bool IsVisible
	{
		[Token(Token = "0x6001378")]
		[Address(RVA = "0xBEE1A0", Offset = "0xBEE1A0", VA = "0xBEE1A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xBEE1A8", Offset = "0xBEE1A8", VA = "0xBEE1A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x600137A")]
		[Address(RVA = "0xBEE3A4", Offset = "0xBEE3A4", VA = "0xBEE3A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C4E8", Offset = "0xB4C4E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600137B")]
		[Address(RVA = "0xBEE3AC", Offset = "0xBEE3AC", VA = "0xBEE3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C4F8", Offset = "0xB4C4F8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x600137C")]
		[Address(RVA = "0xBEE3B4", Offset = "0xBEE3B4", VA = "0xBEE3B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B2")]
	public new int MaxPlayers
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xBEE3BC", Offset = "0xBEE3BC", VA = "0xBEE3BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600137E")]
		[Address(RVA = "0xBEE3C4", Offset = "0xBEE3C4", VA = "0xBEE3C4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public new int PlayerCount
	{
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xBDC2C8", Offset = "0xBDC2C8", VA = "0xBDC2C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B4")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x6001380")]
		[Address(RVA = "0xBEE634", Offset = "0xBEE634", VA = "0xBEE634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B5")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0xBEE63C", Offset = "0xBEE63C", VA = "0xBEE63C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001382")]
		[Address(RVA = "0xBEE644", Offset = "0xBEE644", VA = "0xBEE644")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB562FC", Offset = "0xB562FC")]
	public new string name
	{
		[Token(Token = "0x600138A")]
		[Address(RVA = "0xBEF7BC", Offset = "0xBEF7BC", VA = "0xBEF7BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600138B")]
		[Address(RVA = "0xBEF7C4", Offset = "0xBEF7C4", VA = "0xBEF7C4")]
		internal set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56334", Offset = "0xB56334")]
	public new bool open
	{
		[Token(Token = "0x600138C")]
		[Address(RVA = "0xBEF7CC", Offset = "0xBEF7CC", VA = "0xBEF7CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600138D")]
		[Address(RVA = "0xBEF7D4", Offset = "0xBEF7D4", VA = "0xBEF7D4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5636C", Offset = "0xB5636C")]
	public new bool visible
	{
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xBEF7DC", Offset = "0xBEF7DC", VA = "0xBEF7DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600138F")]
		[Address(RVA = "0xBEF7E4", Offset = "0xBEF7E4", VA = "0xBEF7E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB563A4", Offset = "0xB563A4")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xBEF7EC", Offset = "0xBEF7EC", VA = "0xBEF7EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001391")]
		[Address(RVA = "0xBEF7F4", Offset = "0xBEF7F4", VA = "0xBEF7F4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB563DC", Offset = "0xB563DC")]
	public bool autoCleanUp
	{
		[Token(Token = "0x6001392")]
		[Address(RVA = "0xBEF7FC", Offset = "0xBEF7FC", VA = "0xBEF7FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56414", Offset = "0xB56414")]
	public new int maxPlayers
	{
		[Token(Token = "0x6001393")]
		[Address(RVA = "0xBEF804", Offset = "0xBEF804", VA = "0xBEF804")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xBEF80C", Offset = "0xBEF80C", VA = "0xBEF80C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5644C", Offset = "0xB5644C")]
	public new int playerCount
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0xBEF810", Offset = "0xBEF810", VA = "0xBEF810")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001BD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56484", Offset = "0xB56484")]
	public string[] expectedUsers
	{
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xBEF814", Offset = "0xBEF814", VA = "0xBEF814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB564BC", Offset = "0xB564BC")]
	protected internal int masterClientId
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0xBEF81C", Offset = "0xBEF81C", VA = "0xBEF81C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001398")]
		[Address(RVA = "0xBEF824", Offset = "0xBEF824", VA = "0xBEF824")]
		set
		{
		}
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xBEE64C", Offset = "0xBEE64C", VA = "0xBEE64C")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xBEECF4", Offset = "0xBEECF4", VA = "0xBEECF4")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xBEF008", Offset = "0xBEF008", VA = "0xBEF008")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xBEF0F8", Offset = "0xBEF0F8", VA = "0xBEF0F8")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xBEF240", Offset = "0xBEF240", VA = "0xBEF240")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xBEF370", Offset = "0xBEF370", VA = "0xBEF370", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xBEF568", Offset = "0xBEF568", VA = "0xBEF568")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20002AC")]
public class RoomInfo
{
	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CC14", Offset = "0xB3CC14")]
	private bool <removedFromList>k__BackingField;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected byte maxPlayersField;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected string[] expectedUsersField;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool openField;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	protected bool visibleField;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	protected bool autoCleanUpField;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected string nameField;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal int masterClientIdField;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CC24", Offset = "0xB3CC24")]
	private bool <serverSideMasterClient>k__BackingField;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CC34", Offset = "0xB3CC34")]
	private int <PlayerCount>k__BackingField;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CC44", Offset = "0xB3CC44")]
	private bool <IsLocalClientInside>k__BackingField;

	[Token(Token = "0x170001BF")]
	public bool removedFromList
	{
		[Token(Token = "0x6001399")]
		[Address(RVA = "0xBEF944", Offset = "0xBEF944", VA = "0xBEF944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C508", Offset = "0xB4C508")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600139A")]
		[Address(RVA = "0xBEF94C", Offset = "0xBEF94C", VA = "0xBEF94C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C518", Offset = "0xB4C518")]
		internal set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x600139B")]
		[Address(RVA = "0xBEF958", Offset = "0xBEF958", VA = "0xBEF958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C528", Offset = "0xB4C528")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xBEF960", Offset = "0xBEF960", VA = "0xBEF960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C538", Offset = "0xB4C538")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x600139D")]
		[Address(RVA = "0xBEF96C", Offset = "0xBEF96C", VA = "0xBEF96C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	public string Name
	{
		[Token(Token = "0x600139E")]
		[Address(RVA = "0xBEF974", Offset = "0xBEF974", VA = "0xBEF974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C3")]
	public int PlayerCount
	{
		[Token(Token = "0x600139F")]
		[Address(RVA = "0xBEF97C", Offset = "0xBEF97C", VA = "0xBEF97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C548", Offset = "0xB4C548")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xBEF984", Offset = "0xBEF984", VA = "0xBEF984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C558", Offset = "0xB4C558")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xBEF98C", Offset = "0xBEF98C", VA = "0xBEF98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C568", Offset = "0xB4C568")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xBEF994", Offset = "0xBEF994", VA = "0xBEF994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C578", Offset = "0xB4C578")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public byte MaxPlayers
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xBEF9A0", Offset = "0xBEF9A0", VA = "0xBEF9A0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001C6")]
	public bool IsOpen
	{
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xBEF9A8", Offset = "0xBEF9A8", VA = "0xBEF9A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C7")]
	public bool IsVisible
	{
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xBEF9B0", Offset = "0xBEF9B0", VA = "0xBEF9B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB564F4", Offset = "0xB564F4")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xBEFED0", Offset = "0xBEFED0", VA = "0xBEFED0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5652C", Offset = "0xB5652C")]
	public string name
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xBEFED8", Offset = "0xBEFED8", VA = "0xBEFED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56564", Offset = "0xB56564")]
	public int playerCount
	{
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xBEFEE0", Offset = "0xBEFEE0", VA = "0xBEFEE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xBEFEE8", Offset = "0xBEFEE8", VA = "0xBEFEE8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5659C", Offset = "0xB5659C")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xBEFEF0", Offset = "0xBEFEF0", VA = "0xBEFEF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xBEFEF8", Offset = "0xBEFEF8", VA = "0xBEFEF8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB565D4", Offset = "0xB565D4")]
	public byte maxPlayers
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xBEFF04", Offset = "0xBEFF04", VA = "0xBEFF04")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001CD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB5660C", Offset = "0xB5660C")]
	public bool open
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xBEFF0C", Offset = "0xBEFF0C", VA = "0xBEFF0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB56644", Offset = "0xB56644")]
	public bool visible
	{
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xBEFF14", Offset = "0xBEFF14", VA = "0xBEFF14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xBEE704", Offset = "0xBEE704", VA = "0xBEE704")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xBEF9B8", Offset = "0xBEF9B8", VA = "0xBEF9B8", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xBEFA6C", Offset = "0xBEFA6C", VA = "0xBEFA6C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xBEFA8C", Offset = "0xBEFA8C", VA = "0xBEFA8C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xBEFC80", Offset = "0xBEFC80", VA = "0xBEFC80")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xBEE80C", Offset = "0xBEE80C", VA = "0xBEE80C")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x20002AD")]
public class Region
{
	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CloudRegionCode Code;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Cluster;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HostAndPort;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Ping;

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xBE5278", Offset = "0xBE5278", VA = "0xBE5278")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xBE5314", Offset = "0xBE5314", VA = "0xBE5314")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xBE5354", Offset = "0xBE5354", VA = "0xBE5354")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xBE54F8", Offset = "0xBE54F8", VA = "0xBE54F8")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xBE56C8", Offset = "0xBE56C8", VA = "0xBE56C8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C588", Offset = "0xB4C588")]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xBE5838", Offset = "0xBE5838", VA = "0xBE5838", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20002AE")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x20007E2")]
	public enum HostingOption
	{
		[Token(Token = "0x4002EF8")]
		NotSet,
		[Token(Token = "0x4002EF9")]
		PhotonCloud,
		[Token(Token = "0x4002EFA")]
		SelfHosted,
		[Token(Token = "0x4002EFB")]
		OfflineMode,
		[Token(Token = "0x4002EFC")]
		BestRegion
	}

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppID;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceAppID;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ChatAppID;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostingOption HostType;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerAddress;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoiceServerPort;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JoinLobby;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunInBackground;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> RpcList;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170001CF")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xCA3D78", Offset = "0xCA3D78", VA = "0xCA3D78")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xCA3BE8", Offset = "0xCA3BE8", VA = "0xCA3BE8")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xCA3BF8", Offset = "0xCA3BF8", VA = "0xCA3BF8")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xCA3C08", Offset = "0xCA3C08", VA = "0xCA3C08")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xCA3C18", Offset = "0xCA3C18", VA = "0xCA3C18")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xCA3CA4", Offset = "0xCA3CA4", VA = "0xCA3CA4")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xCA3DD8", Offset = "0xCA3DD8", VA = "0xCA3DD8")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xCA3E3C", Offset = "0xCA3E3C", VA = "0xCA3E3C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xCA3FA0", Offset = "0xCA3FA0", VA = "0xCA3FA0")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x20002AF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3235C", Offset = "0xB3235C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3235C", Offset = "0xB3235C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB3235C", Offset = "0xB3235C")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x20007E3")]
	public enum ParameterType
	{
		[Token(Token = "0x4002EFE")]
		Float = 1,
		[Token(Token = "0x4002EFF")]
		Int = 3,
		[Token(Token = "0x4002F00")]
		Bool = 4,
		[Token(Token = "0x4002F01")]
		Trigger = 9
	}

	[Token(Token = "0x20007E4")]
	public enum SynchronizeType
	{
		[Token(Token = "0x4002F03")]
		Disabled,
		[Token(Token = "0x4002F04")]
		Discrete,
		[Token(Token = "0x4002F05")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x20007E5")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x4002F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x4002F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4002F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6003072")]
		[Address(RVA = "0xCFDA38", Offset = "0xCFDA38", VA = "0xCFDA38")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20007E6")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x4002F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4002F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x6003073")]
		[Address(RVA = "0xCFD8A8", Offset = "0xCFD8A8", VA = "0xCFD8A8")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x20007E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F78", Offset = "0xB34F78")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4002F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6003074")]
		[Address(RVA = "0xCFD410", Offset = "0xCFD410", VA = "0xCFD410")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0xCFE55C", Offset = "0xCFE55C", VA = "0xCFE55C")]
		internal bool <DoesLayerSynchronizeTypeExist>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F88", Offset = "0xB34F88")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6003076")]
		[Address(RVA = "0xCFD4E8", Offset = "0xCFD4E8", VA = "0xCFD4E8")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0xCFE580", Offset = "0xCFE580", VA = "0xCFE580")]
		internal bool <DoesParameterSynchronizeTypeExist>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F98", Offset = "0xB34F98")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4002F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6003078")]
		[Address(RVA = "0xCFD60C", Offset = "0xCFD60C", VA = "0xCFD60C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0xCFE5A4", Offset = "0xCFE5A4", VA = "0xCFE5A4")]
		internal bool <GetLayerSynchronizeType>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FA8", Offset = "0xB34FA8")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x600307A")]
		[Address(RVA = "0xCFD720", Offset = "0xCFD720", VA = "0xCFD720")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0xCFE5C8", Offset = "0xCFE5C8", VA = "0xCFE5C8")]
		internal bool <GetParameterSynchronizeType>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FB8", Offset = "0xB34FB8")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4002F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x600307C")]
		[Address(RVA = "0xCFD8A0", Offset = "0xCFD8A0", VA = "0xCFD8A0")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0xCFE5EC", Offset = "0xCFE5EC", VA = "0xCFE5EC")]
		internal bool <SetLayerSynchronized>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FC8", Offset = "0xB34FC8")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x600307E")]
		[Address(RVA = "0xCFDA30", Offset = "0xCFDA30", VA = "0xCFDA30")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x600307F")]
		[Address(RVA = "0xCFE610", Offset = "0xCFE610", VA = "0xCFE610")]
		internal bool <SetParameterSynchronized>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	[SerializeField]
	private bool ShowParameterInspector;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xCFC808", Offset = "0xCFC808", VA = "0xCFC808")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xCFC89C", Offset = "0xCFC89C", VA = "0xCFC89C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xCFCF84", Offset = "0xCFCF84", VA = "0xCFCF84")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xCFD340", Offset = "0xCFD340", VA = "0xCFD340")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xCFD418", Offset = "0xCFD418", VA = "0xCFD418")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xCFD4F0", Offset = "0xCFD4F0", VA = "0xCFD4F0")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xCFD4F8", Offset = "0xCFD4F8", VA = "0xCFD4F8")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xCFD500", Offset = "0xCFD500", VA = "0xCFD500")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xCFD614", Offset = "0xCFD614", VA = "0xCFD614")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xCFD728", Offset = "0xCFD728", VA = "0xCFD728")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xCFD8B0", Offset = "0xCFD8B0", VA = "0xCFD8B0")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xCFCCE4", Offset = "0xCFCCE4", VA = "0xCFCCE4")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xCFD07C", Offset = "0xCFD07C", VA = "0xCFD07C")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0xCFDA40", Offset = "0xCFDA40", VA = "0xCFDA40")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0xCFDCC8", Offset = "0xCFDCC8", VA = "0xCFDCC8")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0xCFE054", Offset = "0xCFE054", VA = "0xCFE054")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0xCFE1D0", Offset = "0xCFE1D0", VA = "0xCFE1D0")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xCFE34C", Offset = "0xCFE34C", VA = "0xCFE34C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xCFE48C", Offset = "0xCFE48C", VA = "0xCFE48C")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x20002B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3240C", Offset = "0xB3240C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3240C", Offset = "0xB3240C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB3240C", Offset = "0xB3240C")]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xC42584", Offset = "0xC42584", VA = "0xC42584")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xC425DC", Offset = "0xC425DC", VA = "0xC425DC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xC428D8", Offset = "0xC428D8", VA = "0xC428D8")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x20002B1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB324BC", Offset = "0xB324BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB324BC", Offset = "0xB324BC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB324BC", Offset = "0xB324BC")]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Body;

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xC428E8", Offset = "0xC428E8", VA = "0xC428E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xC42940", Offset = "0xC42940", VA = "0xC42940", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xC42AE0", Offset = "0xC42AE0", VA = "0xC42AE0")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x20002B2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3256C", Offset = "0xB3256C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB3256C", Offset = "0xB3256C")]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_firstTake;

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xC4557C", Offset = "0xC4557C", VA = "0xC4557C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xC457C0", Offset = "0xC457C0", VA = "0xC457C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xC457CC", Offset = "0xC457CC", VA = "0xC457CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0xC45970", Offset = "0xC45970", VA = "0xC45970")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xC45A04", Offset = "0xC45A04", VA = "0xC45A04")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xC45A98", Offset = "0xC45A98", VA = "0xC45A98")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xC46194", Offset = "0xC46194", VA = "0xC46194")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xC461C0", Offset = "0xC461C0", VA = "0xC461C0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xC4668C", Offset = "0xC4668C", VA = "0xC4668C")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xC469AC", Offset = "0xC469AC", VA = "0xC469AC")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x20002B3")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xC4564C", Offset = "0xC4564C", VA = "0xC4564C")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xC46CD0", Offset = "0xC46CD0", VA = "0xC46CD0")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xC461B4", Offset = "0xC461B4", VA = "0xC461B4")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xC45B2C", Offset = "0xC45B2C", VA = "0xC45B2C")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xC47048", Offset = "0xC47048", VA = "0xC47048")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xC46D44", Offset = "0xC46D44", VA = "0xC46D44")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xC4639C", Offset = "0xC4639C", VA = "0xC4639C")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xC47054", Offset = "0xC47054", VA = "0xC47054")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xC4716C", Offset = "0xC4716C", VA = "0xC4716C")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20002B4")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x20007ED")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4002F12")]
		Disabled,
		[Token(Token = "0x4002F13")]
		FixedSpeed,
		[Token(Token = "0x4002F14")]
		EstimatedSpeed,
		[Token(Token = "0x4002F15")]
		SynchronizeValues,
		[Token(Token = "0x4002F16")]
		Lerp
	}

	[Token(Token = "0x20007EE")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x4002F18")]
		Disabled,
		[Token(Token = "0x4002F19")]
		SynchronizeValues,
		[Token(Token = "0x4002F1A")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x4002F1B")]
		FixedSpeed
	}

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xC46A6C", Offset = "0xC46A6C", VA = "0xC46A6C")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x20002B5")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xC45708", Offset = "0xC45708", VA = "0xC45708")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xC47314", Offset = "0xC47314", VA = "0xC47314")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xC45EB8", Offset = "0xC45EB8", VA = "0xC45EB8")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xC4647C", Offset = "0xC4647C", VA = "0xC4647C")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20002B6")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x20007EF")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4002F1D")]
		Disabled,
		[Token(Token = "0x4002F1E")]
		RotateTowards,
		[Token(Token = "0x4002F1F")]
		Lerp
	}

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xC46CA4", Offset = "0xC46CA4", VA = "0xC46CA4")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x20002B7")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xC45734", Offset = "0xC45734", VA = "0xC45734")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xC47320", Offset = "0xC47320", VA = "0xC47320")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xC46040", Offset = "0xC46040", VA = "0xC46040")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xC46584", Offset = "0xC46584", VA = "0xC46584")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20002B8")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x20007F0")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4002F21")]
		Disabled,
		[Token(Token = "0x4002F22")]
		MoveTowards,
		[Token(Token = "0x4002F23")]
		Lerp
	}

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xC46CC0", Offset = "0xC46CC0", VA = "0xC46CC0")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x20002B9")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoConnect;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte Version;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ConnectInUpdate;

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xD83AF8", Offset = "0xD83AF8", VA = "0xD83AF8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xD83B5C", Offset = "0xD83B5C", VA = "0xD83B5C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xD83CA4", Offset = "0xD83CA4", VA = "0xD83CA4", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xD83D38", Offset = "0xD83D38", VA = "0xD83D38", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xD83DCC", Offset = "0xD83DCC", VA = "0xD83DCC", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xD83E98", Offset = "0xD83E98", VA = "0xD83E98", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xD83F48", Offset = "0xD83F48", VA = "0xD83F48")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xD83FB4", Offset = "0xD83FB4", VA = "0xD83FB4")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x20002BA")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40012D2")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x40012D3")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 Center;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 Size;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CDB4", Offset = "0xB3CDB4")]
	private int <CellCount>k__BackingField;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CDC4", Offset = "0xB3CDC4")]
	private CellTree <CellTree>k__BackingField;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CDD4", Offset = "0xB3CDD4")]
	private Dictionary<int, GameObject> <Map>k__BackingField;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool YIsUpAxis;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private byte idCounter;

	[Token(Token = "0x170001D0")]
	public int CellCount
	{
		[Token(Token = "0x6001403")]
		[Address(RVA = "0xD46EFC", Offset = "0xD46EFC", VA = "0xD46EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C598", Offset = "0xB4C598")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001404")]
		[Address(RVA = "0xD46F04", Offset = "0xD46F04", VA = "0xD46F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C5A8", Offset = "0xB4C5A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public CellTree CellTree
	{
		[Token(Token = "0x6001405")]
		[Address(RVA = "0xD46F0C", Offset = "0xD46F0C", VA = "0xD46F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C5B8", Offset = "0xB4C5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD46F14", Offset = "0xD46F14", VA = "0xD46F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C5C8", Offset = "0xB4C5C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x6001407")]
		[Address(RVA = "0xD46F1C", Offset = "0xD46F1C", VA = "0xD46F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C5D8", Offset = "0xB4C5D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001408")]
		[Address(RVA = "0xD46F24", Offset = "0xD46F24", VA = "0xD46F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C5E8", Offset = "0xB4C5E8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xD46F2C", Offset = "0xD46F2C", VA = "0xD46F2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xD474B4", Offset = "0xD474B4", VA = "0xD474B4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xD46F38", Offset = "0xD46F38", VA = "0xD46F38")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xD47604", Offset = "0xD47604", VA = "0xD47604")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xD47510", Offset = "0xD47510", VA = "0xD47510")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xD47538", Offset = "0xD47538", VA = "0xD47538")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0xD479D0", Offset = "0xD479D0", VA = "0xD479D0")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0xD47A88", Offset = "0xD47A88", VA = "0xD47A88")]
	public CullArea()
	{
	}
}
[Token(Token = "0x20002BB")]
public class CellTree
{
	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CDE4", Offset = "0xB3CDE4")]
	private CellTreeNode <RootNode>k__BackingField;

	[Token(Token = "0x170001D3")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0xD7AD74", Offset = "0xD7AD74", VA = "0xD7AD74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C5F8", Offset = "0xB4C5F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001412")]
		[Address(RVA = "0xD7AD7C", Offset = "0xD7AD7C", VA = "0xD7AD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C608", Offset = "0xB4C608")]
		private set
		{
		}
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xD7AD84", Offset = "0xD7AD84", VA = "0xD7AD84")]
	public CellTree()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xD7AD8C", Offset = "0xD7AD8C", VA = "0xD7AD8C")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x20002BC")]
public class CellTreeNode
{
	[Token(Token = "0x20007F1")]
	public enum ENodeType
	{
		[Token(Token = "0x4002F25")]
		Root,
		[Token(Token = "0x4002F26")]
		Node,
		[Token(Token = "0x4002F27")]
		Leaf
	}

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte Id;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Center;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Size;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 TopLeft;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BottomRight;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ENodeType NodeType;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTreeNode Parent;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxDistance;

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xD7ADB8", Offset = "0xD7ADB8", VA = "0xD7ADB8")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xD7ADC0", Offset = "0xD7ADC0", VA = "0xD7ADC0")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xD7AE04", Offset = "0xD7AE04", VA = "0xD7AE04")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xD7AEA0", Offset = "0xD7AEA0", VA = "0xD7AEA0")]
	public void Draw()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xD7AEA4", Offset = "0xD7AEA4", VA = "0xD7AEA4")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xD7B184", Offset = "0xD7B184", VA = "0xD7B184")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xD7B07C", Offset = "0xD7B07C", VA = "0xD7B07C")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB325F4", Offset = "0xB325F4")]
public class HighlightOwnedGameObj : Photon.MonoBehaviour
{
	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PointerPrefab;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform markerTransform;

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xCE4D34", Offset = "0xCE4D34", VA = "0xCE4D34")]
	private void Update()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xCE4F64", Offset = "0xCE4F64", VA = "0xCE4F64")]
	public HighlightOwnedGameObj()
	{
	}
}
[Token(Token = "0x20002BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32658", Offset = "0xB32658")]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AlignBottom;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> messages;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputLine;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 scrollPos;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xCE52D0", Offset = "0xCE52D0", VA = "0xCE52D0")]
	public void Start()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xCE5320", Offset = "0xCE5320", VA = "0xCE5320")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xCE599C", Offset = "0xCE599C", VA = "0xCE599C")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xCE5AA4", Offset = "0xCE5AA4", VA = "0xCE5AA4")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xCE5B0C", Offset = "0xCE5B0C", VA = "0xCE5B0C")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x20002BF")]
public class InRoomRoundTimer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SecondsPerTurn;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double StartTime;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect TextPos;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool startRoundWhenTimeIsSynced;

	[Token(Token = "0x40012FA")]
	private const string StartTimeKey = "st";

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xCE5C58", Offset = "0xCE5C58", VA = "0xCE5C58")]
	private void StartRoundNow()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xCE5D80", Offset = "0xCE5D80", VA = "0xCE5D80")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xCE5EB4", Offset = "0xCE5EB4", VA = "0xCE5EB4")]
	public void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xCE5F70", Offset = "0xCE5F70", VA = "0xCE5F70")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xCE604C", Offset = "0xCE604C", VA = "0xCE604C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xCE605C", Offset = "0xCE605C", VA = "0xCE605C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xCE6448", Offset = "0xCE6448", VA = "0xCE6448")]
	public InRoomRoundTimer()
	{
	}
}
[Token(Token = "0x20002C0")]
public class InRoomTime : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FD8", Offset = "0xB34FD8")]
	private sealed class <SetRoomStartTimestamp>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InRoomTime <>4__this;

		[Token(Token = "0x170004AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003083")]
			[Address(RVA = "0xCE69D8", Offset = "0xCE69D8", VA = "0xCE69D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003085")]
			[Address(RVA = "0xCE6A40", Offset = "0xCE6A40", VA = "0xCE6A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003080")]
		[Address(RVA = "0xCE66A4", Offset = "0xCE66A4", VA = "0xCE66A4")]
		[DebuggerHidden]
		public <SetRoomStartTimestamp>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6003081")]
		[Address(RVA = "0xCE683C", Offset = "0xCE683C", VA = "0xCE683C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003082")]
		[Address(RVA = "0xCE6840", Offset = "0xCE6840", VA = "0xCE6840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003084")]
		[Address(RVA = "0xCE69E0", Offset = "0xCE69E0", VA = "0xCE69E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int roomStartTimestamp;

	[Token(Token = "0x40012FC")]
	private const string StartTimeKey = "#rt";

	[Token(Token = "0x170001D4")]
	public double RoomTime
	{
		[Token(Token = "0x600142B")]
		[Address(RVA = "0xCE64B4", Offset = "0xCE64B4", VA = "0xCE64B4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170001D5")]
	public int RoomTimestamp
	{
		[Token(Token = "0x600142C")]
		[Address(RVA = "0xCE64D8", Offset = "0xCE64D8", VA = "0xCE64D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D6")]
	public bool IsRoomTimeSet
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0xCE6574", Offset = "0xCE6574", VA = "0xCE6574")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xCE6634", Offset = "0xCE6634", VA = "0xCE6634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4C628", Offset = "0xB4C628")]
	internal IEnumerator SetRoomStartTimestamp()
	{
		return null;
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xCE66D0", Offset = "0xCE66D0", VA = "0xCE66D0")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xCE6724", Offset = "0xCE6724", VA = "0xCE6724")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xCE6778", Offset = "0xCE6778", VA = "0xCE6778")]
	public void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xCE6834", Offset = "0xCE6834", VA = "0xCE6834")]
	public InRoomTime()
	{
	}
}
[Token(Token = "0x20002C1")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject lastGo;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CDF4", Offset = "0xB3CDF4")]
	private static GameObject <goPointedAt>k__BackingField;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 pressedPosition;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currentPos;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Dragging;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x170001D7")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x6001433")]
		[Address(RVA = "0xCE7220", Offset = "0xCE7220", VA = "0xCE7220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C68C", Offset = "0xB4C68C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001434")]
		[Address(RVA = "0xCE7270", Offset = "0xCE7270", VA = "0xCE7270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C69C", Offset = "0xB4C69C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public Vector2 DragVector
	{
		[Token(Token = "0x6001435")]
		[Address(RVA = "0xCE72C4", Offset = "0xCE72C4", VA = "0xCE72C4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xCE7390", Offset = "0xCE7390", VA = "0xCE7390")]
	private void Start()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xCE73E8", Offset = "0xCE73E8", VA = "0xCE73E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xCE785C", Offset = "0xCE785C", VA = "0xCE785C")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xCE7934", Offset = "0xCE7934", VA = "0xCE7934")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xCE7738", Offset = "0xCE7738", VA = "0xCE7738")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xCE7A84", Offset = "0xCE7A84", VA = "0xCE7A84")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x20002C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB326BC", Offset = "0xB326BC")]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xD3B604", Offset = "0xD3B604", VA = "0xD3B604")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xD3B7D4", Offset = "0xD3B7D4", VA = "0xD3B7D4")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xD3B9C0", Offset = "0xD3B9C0", VA = "0xD3B9C0")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x20002C3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32720", Offset = "0xB32720")]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JumpForce;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpTimeout;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSprite;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpingTime;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody2D body2d;

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xBB9D2C", Offset = "0xBB9D2C", VA = "0xBB9D2C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xBB9DF0", Offset = "0xBB9DF0", VA = "0xBB9DF0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xBBA260", Offset = "0xBBA260", VA = "0xBBA260")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x20002C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32784", Offset = "0xB32784")]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int orderIndex;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CullArea cullArea;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> activeCells;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView pView;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastPosition;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentPosition;

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xBBEBE0", Offset = "0xBBEBE0", VA = "0xBBEBE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xBBED54", Offset = "0xBBED54", VA = "0xBBED54")]
	private void Start()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xBBEE5C", Offset = "0xBBEE5C", VA = "0xBBEE5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xBBF2DC", Offset = "0xBBF2DC", VA = "0xBBF2DC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xBBEF7C", Offset = "0xBBEF7C", VA = "0xBBEF7C")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xBBF0F8", Offset = "0xBBF0F8", VA = "0xBBF0F8")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xBBF6A4", Offset = "0xBBF6A4", VA = "0xBBF6A4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xBBF820", Offset = "0xBBF820", VA = "0xBBF820")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x20002C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB327E8", Offset = "0xB327E8")]
public class OnAwakeUsePhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x600144A")]
	[Address(RVA = "0xD13DA4", Offset = "0xD13DA4", VA = "0xD13DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xD13ED4", Offset = "0xD13ED4", VA = "0xD13ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xD13FEC", Offset = "0xD13FEC", VA = "0xD13FEC")]
	[PunRPC]
	public void OnAwakeRPC()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xD14084", Offset = "0xD14084", VA = "0xD14084")]
	[PunRPC]
	public void OnAwakeRPC(byte myParameter)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0xD14230", Offset = "0xD14230", VA = "0xD14230")]
	public OnAwakeUsePhotonView()
	{
	}
}
[Token(Token = "0x20002C6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3284C", Offset = "0xB3284C")]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x20007F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FE8", Offset = "0xB34FE8")]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x170004AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003089")]
			[Address(RVA = "0xD14558", Offset = "0xD14558", VA = "0xD14558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600308B")]
			[Address(RVA = "0xD145C0", Offset = "0xD145C0", VA = "0xD145C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003086")]
		[Address(RVA = "0xD14400", Offset = "0xD14400", VA = "0xD14400")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6003087")]
		[Address(RVA = "0xD14434", Offset = "0xD14434", VA = "0xD14434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003088")]
		[Address(RVA = "0xD14438", Offset = "0xD14438", VA = "0xD14438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600308A")]
		[Address(RVA = "0xD14560", Offset = "0xD14560", VA = "0xD14560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DestroyByRpc;

	[Token(Token = "0x600144F")]
	[Address(RVA = "0xD14238", Offset = "0xD14238", VA = "0xD14238")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xD14390", Offset = "0xD14390", VA = "0xD14390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4C6DC", Offset = "0xB4C6DC")]
	[PunRPC]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xD1442C", Offset = "0xD1442C", VA = "0xD1442C")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x20002C7")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InstantiateType;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showGui;

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xD145C8", Offset = "0xD145C8", VA = "0xD145C8")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xD14898", Offset = "0xD14898", VA = "0xD14898")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xD149EC", Offset = "0xD149EC", VA = "0xD149EC")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x20002C8")]
public class OnJoinedInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SpawnPosition;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionOffset;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] PrefabsToInstantiate;

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xD14ADC", Offset = "0xD14ADC", VA = "0xD14ADC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xD14DC8", Offset = "0xD14DC8", VA = "0xD14DC8")]
	public OnJoinedInstantiate()
	{
	}
}
[Token(Token = "0x20002C9")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001457")]
	[Address(RVA = "0xD14DD8", Offset = "0xD14DD8", VA = "0xD14DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xD14E54", Offset = "0xD14E54", VA = "0xD14E54")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x20002CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB328B0", Offset = "0xB328B0")]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnTrigger;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool PickupIsMine;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SentPickup;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double TimeOfRespawn;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170001D9")]
	public int ViewID
	{
		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC496F4", Offset = "0xC496F4", VA = "0xC496F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xC49718", Offset = "0xC49718", VA = "0xC49718")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xC49904", Offset = "0xC49904", VA = "0xC49904", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xC497E4", Offset = "0xC497E4", VA = "0xC497E4")]
	public void Pickup()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xC49A54", Offset = "0xC49A54", VA = "0xC49A54")]
	public void Drop()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0xC49B6C", Offset = "0xC49B6C", VA = "0xC49B6C")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0xC49C90", Offset = "0xC49C90", VA = "0xC49C90")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xC4A074", Offset = "0xC4A074", VA = "0xC4A074")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xC4A18C", Offset = "0xC4A18C", VA = "0xC4A18C")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xC4A254", Offset = "0xC4A254", VA = "0xC4A254")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xC4A350", Offset = "0xC4A350", VA = "0xC4A350")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x20002CB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32914", Offset = "0xB32914")]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnCollide;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool SentPickup;

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xC4A3D4", Offset = "0xC4A3D4", VA = "0xC4A3D4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xC4A4A0", Offset = "0xC4A4A0", VA = "0xC4A4A0")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xC4A5C0", Offset = "0xC4A5C0", VA = "0xC4A5C0")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xC4A764", Offset = "0xC4A764", VA = "0xC4A764")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xC4A814", Offset = "0xC4A814", VA = "0xC4A814")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x20002CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32978", Offset = "0xB32978")]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x4001327")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xC4A824", Offset = "0xC4A824", VA = "0xC4A824")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xC4B034", Offset = "0xC4B034", VA = "0xC4B034")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xC4B260", Offset = "0xC4B260", VA = "0xC4B260")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xC4B4DC", Offset = "0xC4B4DC", VA = "0xC4B4DC")]
	[PunRPC]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4C790", Offset = "0xB4C790")]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xC4B50C", Offset = "0xC4B50C", VA = "0xC4B50C")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xC4A8B4", Offset = "0xC4A8B4", VA = "0xC4A8B4")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xC4B5A4", Offset = "0xC4B5A4", VA = "0xC4B5A4")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xC4B944", Offset = "0xC4B944", VA = "0xC4B944")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x20002CD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB329DC", Offset = "0xB329DC")]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001472")]
	[Address(RVA = "0xC528BC", Offset = "0xC528BC", VA = "0xC528BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xC52B74", Offset = "0xC52B74", VA = "0xC52B74")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x20002CE")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001328")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xBDB7EC", Offset = "0xBDB7EC", VA = "0xBDB7EC")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x20002CF")]
public static class ScoreExtensions
{
	[Token(Token = "0x6001475")]
	[Address(RVA = "0xC9CECC", Offset = "0xC9CECC", VA = "0xC9CECC")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xC9CF8C", Offset = "0xC9CF8C", VA = "0xC9CF8C")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xC9D05C", Offset = "0xC9D05C", VA = "0xC9D05C")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}
}
[Token(Token = "0x20002D0")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007F4")]
	public enum Team : byte
	{
		[Token(Token = "0x4002F2F")]
		none,
		[Token(Token = "0x4002F30")]
		red,
		[Token(Token = "0x4002F31")]
		blue
	}

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x400132A")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xBDB7FC", Offset = "0xBDB7FC", VA = "0xBDB7FC")]
	public void Start()
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xBDBB38", Offset = "0xBDBB38", VA = "0xBDBB38")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xBDBBAC", Offset = "0xBDBBAC", VA = "0xBDBBAC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xBDBF74", Offset = "0xBDBF74", VA = "0xBDBF74")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xBDBF78", Offset = "0xBDBF78", VA = "0xBDBF78")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xBDBF7C", Offset = "0xBDBF7C", VA = "0xBDBF7C")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0xBDBF80", Offset = "0xBDBF80", VA = "0xBDBF80")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0xBDBBB0", Offset = "0xBDBBB0", VA = "0xBDBBB0")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0xBDBF84", Offset = "0xBDBF84", VA = "0xBDBF84")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x20002D1")]
public static class TeamExtensions
{
	[Token(Token = "0x6001481")]
	[Address(RVA = "0xCACA80", Offset = "0xCACA80", VA = "0xCACA80")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0xCACB3C", Offset = "0xCACB3C", VA = "0xCACB3C")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x20002D2")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnDuration;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x400132E")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x400132F")]
	public const byte EvMove = 1;

	[Token(Token = "0x4001330")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170001DA")]
	public int Turn
	{
		[Token(Token = "0x6001483")]
		[Address(RVA = "0xBDBF8C", Offset = "0xBDBF8C", VA = "0xBDBF8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001484")]
		[Address(RVA = "0xBDC020", Offset = "0xBDC020", VA = "0xBDC020")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x6001485")]
		[Address(RVA = "0xBDC0D0", Offset = "0xBDC0D0", VA = "0xBDC0D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001DC")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x6001486")]
		[Address(RVA = "0xBDC188", Offset = "0xBDC188", VA = "0xBDC188")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001DD")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x6001487")]
		[Address(RVA = "0xBDC208", Offset = "0xBDC208", VA = "0xBDC208")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001DE")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x6001488")]
		[Address(RVA = "0xBDC35C", Offset = "0xBDC35C", VA = "0xBDC35C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001DF")]
	public bool IsOver
	{
		[Token(Token = "0x6001489")]
		[Address(RVA = "0xBDC3E4", Offset = "0xBDC3E4", VA = "0xBDC3E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xBDC400", Offset = "0xBDC400", VA = "0xBDC400")]
	private void Start()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xBDC498", Offset = "0xBDC498", VA = "0xBDC498")]
	private void Update()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xBDC590", Offset = "0xBDC590", VA = "0xBDC590")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xBDC5B8", Offset = "0xBDC5B8", VA = "0xBDC5B8")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xBDCB8C", Offset = "0xBDCB8C", VA = "0xBDCB8C")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xBDC800", Offset = "0xBDC800", VA = "0xBDC800")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xBDCC08", Offset = "0xBDCC08", VA = "0xBDCC08", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xBDCD24", Offset = "0xBDCD24", VA = "0xBDCD24")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x20002D3")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x6001492")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x6001493")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x6001494")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6001495")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6001496")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x20002D4")]
public static class TurnExtensions
{
	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xCB661C", Offset = "0xCB661C", VA = "0xCB661C")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xCB6798", Offset = "0xCB6798", VA = "0xCB6798")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xCB68A4", Offset = "0xCB68A4", VA = "0xCB68A4")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xCB69B0", Offset = "0xCB69B0", VA = "0xCB69B0")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0xCB6B1C", Offset = "0xCB6B1C", VA = "0xCB6B1C")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x20002D5")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600149D")]
	[Address(RVA = "0xBDE2D0", Offset = "0xBDE2D0", VA = "0xBDE2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0xBDE2FC", Offset = "0xBDE2FC", VA = "0xBDE2FC")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x20002D6")]
public class ServerTime : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600149F")]
	[Address(RVA = "0xCA4044", Offset = "0xCA4044", VA = "0xCA4044")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0xCA42B4", Offset = "0xCA42B4", VA = "0xCA42B4")]
	public ServerTime()
	{
	}
}
[Token(Token = "0x20002D7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32A70", Offset = "0xB32A70")]
public class ShowInfoOfPlayer : Photon.MonoBehaviour
{
	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject textGo;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMesh tm;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float CharacterSize;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Font font;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool DisableOnOwnObjects;

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0xCA50E4", Offset = "0xCA50E4", VA = "0xCA50E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0xCA53D0", Offset = "0xCA53D0", VA = "0xCA53D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0xCA5578", Offset = "0xCA5578", VA = "0xCA5578")]
	public ShowInfoOfPlayer()
	{
	}
}
[Token(Token = "0x20002D8")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0xCA5580", Offset = "0xCA5580", VA = "0xCA5580")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0xCA58F0", Offset = "0xCA58F0", VA = "0xCA58F0")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0xCA59C0", Offset = "0xCA59C0", VA = "0xCA59C0")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x20002D9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32AD4", Offset = "0xB32AD4")]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothingDelay;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0xDAACC8", Offset = "0xDAACC8", VA = "0xDAACC8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0xDAAE5C", Offset = "0xDAAE5C", VA = "0xDAAE5C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0xDAAFD4", Offset = "0xDAAFD4", VA = "0xDAAFD4")]
	public void Update()
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0xDAB1C0", Offset = "0xDAB1C0", VA = "0xDAB1C0")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x20002DA")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0xDEF244", Offset = "0xDEF244", VA = "0xDEF244")]
	public void Start()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xDEF348", Offset = "0xDEF348", VA = "0xDEF348")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x20002DB")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xDEF358", Offset = "0xDEF358", VA = "0xDEF358")]
	public void Start()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xDEF3C8", Offset = "0xDEF3C8", VA = "0xDEF3C8")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xDEF4C0", Offset = "0xDEF4C0", VA = "0xDEF4C0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xDEF4C8", Offset = "0xDEF4C8", VA = "0xDEF4C8")]
	public void LogStats()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xDEF590", Offset = "0xDEF590", VA = "0xDEF590")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xDEF7B4", Offset = "0xDEF7B4", VA = "0xDEF7B4")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xDEF868", Offset = "0xDEF868", VA = "0xDEF868")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xDEF928", Offset = "0xDEF928", VA = "0xDEF928")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xDEF9E4", Offset = "0xDEF9E4", VA = "0xDEF9E4")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xDEFBE8", Offset = "0xDEFBE8", VA = "0xDEFBE8")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xDEFDEC", Offset = "0xDEFDEC", VA = "0xDEFDEC")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xDEFE58", Offset = "0xDEFE58", VA = "0xDEFE58")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xDEFEC4", Offset = "0xDEFEC4", VA = "0xDEFEC4")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x20002DC")]
public class STAGING_AREA_FOR_RESOURCES : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xC9CA64", Offset = "0xC9CA64", VA = "0xC9CA64")]
	private void Start()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xC9CA68", Offset = "0xC9CA68", VA = "0xC9CA68")]
	private void Update()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xC9CA6C", Offset = "0xC9CA6C", VA = "0xC9CA6C")]
	public STAGING_AREA_FOR_RESOURCES()
	{
	}
}
[Token(Token = "0x20002DD")]
public class PlayerIndicator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _id;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _cameraTransform;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _distanceText;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Renderer _pointerMaterial;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _pointerRotateTransform;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _textParentTransform;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AnimationCurve _textPositionOverAngle;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 _preJumpBaseOffset;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Vector3 _preJumpPerSlotOffset;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _order;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _show;

	[Token(Token = "0x400134D")]
	private const bool DISPLAY_DISTANCE = false;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _target;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _nameToPrepend;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DateTime _lastUpdate;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TimeSpan _betweenUpdate;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _lastDistText;

	[Token(Token = "0x14000091")]
	private static event Action<Transform, Transform> OnTransformOverride
	{
		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC4E328", Offset = "0xC4E328", VA = "0xC4E328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C89C", Offset = "0xB4C89C")]
		add
		{
		}
		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC4E3DC", Offset = "0xC4E3DC", VA = "0xC4E3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4C8AC", Offset = "0xB4C8AC")]
		remove
		{
		}
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xC4E490", Offset = "0xC4E490", VA = "0xC4E490")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4C8BC", Offset = "0xB4C8BC")]
	private void AssignReferences()
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xC4E5D0", Offset = "0xC4E5D0", VA = "0xC4E5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xC4E5F8", Offset = "0xC4E5F8", VA = "0xC4E5F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xC4E82C", Offset = "0xC4E82C", VA = "0xC4E82C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xC4E97C", Offset = "0xC4E97C", VA = "0xC4E97C")]
	private void Reset()
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xC4EA20", Offset = "0xC4EA20", VA = "0xC4EA20")]
	private void UserFinished(ScoreData score)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xC4EA48", Offset = "0xC4EA48", VA = "0xC4EA48")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xC4F044", Offset = "0xC4F044", VA = "0xC4F044")]
	private void PlayerInstantiated(Multiplayer.Player.User user, Transform userTransform)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xC4EA58", Offset = "0xC4EA58", VA = "0xC4EA58")]
	private void UpdatePointer()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xC4F204", Offset = "0xC4F204", VA = "0xC4F204")]
	private void RotatePointer(float angle, string dist, string username)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xC4F44C", Offset = "0xC4F44C", VA = "0xC4F44C")]
	public static void TransformOverride(Transform from, Transform to)
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xC4F4D4", Offset = "0xC4F4D4", VA = "0xC4F4D4")]
	private void _OnTransformOverride(Transform from, Transform to)
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xC4F560", Offset = "0xC4F560", VA = "0xC4F560")]
	public PlayerIndicator()
	{
	}
}
[Token(Token = "0x20002DE")]
public class ExampleWheelController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007F5")]
	private static class Uniforms
	{
		[Token(Token = "0x4002F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xD58D70", Offset = "0xD58D70", VA = "0xD58D70")]
	private void Start()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xD58DDC", Offset = "0xD58DDC", VA = "0xD58DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xD58F98", Offset = "0xD58F98", VA = "0xD58F98")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x20002DF")]
public class RingDirectionArrow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] ringList;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _gliderTF;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _ringTF;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _indicatorPitch;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _ringIndex;

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xBEC124", Offset = "0xBEC124", VA = "0xBEC124")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xBEC1E4", Offset = "0xBEC1E4", VA = "0xBEC1E4")]
	public void SetMarkerToNextRing(Transform thisRingTF)
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xBEC2BC", Offset = "0xBEC2BC", VA = "0xBEC2BC")]
	public void ResetRings()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xBEC390", Offset = "0xBEC390", VA = "0xBEC390")]
	public RingDirectionArrow()
	{
	}
}
[Token(Token = "0x20002E0")]
public class RingMiniMapMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _gliderTF;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _ringTF;

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xBEC398", Offset = "0xBEC398", VA = "0xBEC398")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xBEC400", Offset = "0xBEC400", VA = "0xBEC400")]
	private void Update()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xBEC510", Offset = "0xBEC510", VA = "0xBEC510")]
	public void SetMarkerToRing(GameObject ring)
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xBEC5A8", Offset = "0xBEC5A8", VA = "0xBEC5A8")]
	public RingMiniMapMarker()
	{
	}
}
[Token(Token = "0x20002E1")]
public class RingPathManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _pathID;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] _nodes;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] _ringList;

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0xBEC5B0", Offset = "0xBEC5B0", VA = "0xBEC5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0xBEC650", Offset = "0xBEC650", VA = "0xBEC650")]
	private void InitNodes()
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0xBEC770", Offset = "0xBEC770", VA = "0xBEC770")]
	private void InitRings()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0xBECA3C", Offset = "0xBECA3C", VA = "0xBECA3C")]
	public void ResetRings()
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0xBECBC4", Offset = "0xBECBC4", VA = "0xBECBC4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0xBED0EC", Offset = "0xBED0EC", VA = "0xBED0EC")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0xBED2B4", Offset = "0xBED2B4", VA = "0xBED2B4")]
	public RingPathManager()
	{
	}
}
[Token(Token = "0x20002E2")]
public class RingTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prevNode;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject nextNode;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RingMiniMapMarker minimapMarker;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RingDirectionArrow hudArrow;

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0xBEDC7C", Offset = "0xBEDC7C", VA = "0xBEDC7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0xBEDC80", Offset = "0xBEDC80", VA = "0xBEDC80")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0xBEDD38", Offset = "0xBEDD38", VA = "0xBEDD38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0xBEDDC8", Offset = "0xBEDDC8", VA = "0xBEDDC8")]
	public RingTrigger()
	{
	}
}
[Token(Token = "0x20002E3")]
public class RingTriggerNew : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nextRing;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ringTwoAhead;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation nextRingOpen;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AircraftControl _aircraftControl;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _nextRingTrigger;

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0xBEDDD0", Offset = "0xBEDDD0", VA = "0xBEDDD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xBEDE94", Offset = "0xBEDE94", VA = "0xBEDE94")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xBEDE98", Offset = "0xBEDE98", VA = "0xBEDE98")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xBEDF84", Offset = "0xBEDF84", VA = "0xBEDF84")]
	public RingTriggerNew()
	{
	}
}
[Token(Token = "0x20002E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32B38", Offset = "0xB32B38")]
public class RamSpline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter meshfilter;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLooping;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> points;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<float> widths;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Quaternion> orientations;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Vector3> tangents;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Vector3> normalsList;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color[] colors;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float width;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int vertsInShape;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float traingleDensity;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float uvScale;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material oldMaterial;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool showVertexColors;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool showAdditionalOptions;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool drawOnMesh;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color drawColor;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float opacity;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float drawSize;

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xBE1DD8", Offset = "0xBE1DD8", VA = "0xBE1DD8")]
	public void Start()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xBE1DDC", Offset = "0xBE1DDC", VA = "0xBE1DDC")]
	public void GenerateSpline()
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xBE251C", Offset = "0xBE251C", VA = "0xBE251C")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xBE2138", Offset = "0xBE2138", VA = "0xBE2138")]
	private void CalculateCatmullRomSpline(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xBE2D60", Offset = "0xBE2D60", VA = "0xBE2D60")]
	private void CalculatePoint(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0xBE2CD4", Offset = "0xBE2CD4", VA = "0xBE2CD4")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xBE30FC", Offset = "0xBE30FC", VA = "0xBE30FC")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xBE348C", Offset = "0xBE348C", VA = "0xBE348C")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xBE37B4", Offset = "0xBE37B4", VA = "0xBE37B4")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xBE387C", Offset = "0xBE387C", VA = "0xBE387C")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x20002E5")]
public class SceneChangeDisable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xC9CBF4", Offset = "0xC9CBF4", VA = "0xC9CBF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xC9CC88", Offset = "0xC9CC88", VA = "0xC9CC88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xC9CD1C", Offset = "0xC9CD1C", VA = "0xC9CD1C")]
	private void Disable()
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xC9CD98", Offset = "0xC9CD98", VA = "0xC9CD98")]
	public SceneChangeDisable()
	{
	}
}
[Token(Token = "0x20002E6")]
public class ScrollingMaterialManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 movement;

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xCA2F64", Offset = "0xCA2F64", VA = "0xCA2F64")]
	private void Update()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xCA3054", Offset = "0xCA3054", VA = "0xCA3054")]
	public ScrollingMaterialManager()
	{
	}
}
[Token(Token = "0x20002E7")]
public class BlobShadowCaster : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform blobShadowTF;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _castDir;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _showing;

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xE71BF4", Offset = "0xE71BF4", VA = "0xE71BF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xE71CAC", Offset = "0xE71CAC", VA = "0xE71CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xE71CCC", Offset = "0xE71CCC", VA = "0xE71CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xE71F6C", Offset = "0xE71F6C", VA = "0xE71F6C")]
	public BlobShadowCaster()
	{
	}
}
[Token(Token = "0x20002E8")]
public class DynamicMassMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MassMaterialList[] _materialLists;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _useFakeSky;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Cubemap _fakeSky;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Cubemap _fakeSkyMask;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture2D _fakeGradient;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color _fakeTint;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isInit;

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xD56A8C", Offset = "0xD56A8C", VA = "0xD56A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0xD56BAC", Offset = "0xD56BAC", VA = "0xD56BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xD56DE4", Offset = "0xD56DE4", VA = "0xD56DE4")]
	public DynamicMassMaterial()
	{
	}
}
[Token(Token = "0x20002E9")]
public class DynamicMaterialUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material _target;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isInit;

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xD56E44", Offset = "0xD56E44", VA = "0xD56E44")]
	private void Reset()
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xD56F24", Offset = "0xD56F24", VA = "0xD56F24")]
	private void Update()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xD5712C", Offset = "0xD5712C", VA = "0xD5712C")]
	public DynamicMaterialUpdate()
	{
	}
}
[Token(Token = "0x20002EA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB32B9C", Offset = "0xB32B9C")]
public class MassMaterialList : ScriptableObject
{
	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xD3BE80", Offset = "0xD3BE80", VA = "0xD3BE80")]
	public void UpdateSkyCube(Texture cube, Texture mask)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xD3BFDC", Offset = "0xD3BFDC", VA = "0xD3BFDC")]
	public void UpdateSkyColor(Texture gradient, Color average, Color diffuse, Color tint)
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xD3C200", Offset = "0xD3C200", VA = "0xD3C200")]
	public MassMaterialList()
	{
	}
}
[Token(Token = "0x20002EB")]
public class PostProcessSelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PostProcessingBehaviour _postProcessing;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PostProcessingProfile[] _profiles;

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xC536A0", Offset = "0xC536A0", VA = "0xC536A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xC536A4", Offset = "0xC536A4", VA = "0xC536A4")]
	private void SelectProfile()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xC537B8", Offset = "0xC537B8", VA = "0xC537B8")]
	public PostProcessSelector()
	{
	}
}
[Token(Token = "0x20002EC")]
[ExecuteInEditMode]
public class SkyManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20007F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FF8", Offset = "0xB34FF8")]
	private sealed class <>c
	{
		[Token(Token = "0x4002F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__67_0;

		[Token(Token = "0x600308E")]
		[Address(RVA = "0xDAA728", Offset = "0xDAA728", VA = "0xDAA728")]
		public <>c()
		{
		}

		[Token(Token = "0x600308F")]
		[Address(RVA = "0xDAA730", Offset = "0xDAA730", VA = "0xDAA730")]
		internal void <Update>b__67_0()
		{
		}
	}

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeOfDay;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeScale;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform skySphereTF;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform skySunTF;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light skySunLight;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3CF44", Offset = "0xB3CF44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3CF44", Offset = "0xB3CF44")]
	public Gradient gradMidnight;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient gradPreDawn;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient gradDawn;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gradient gradEarlyMorning;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Gradient gradNoon;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Gradient gradLateAfternoon;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Gradient gradDusk;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Gradient gradEvening;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3CF94", Offset = "0xB3CF94")]
	public Color skyAverage;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3CFA8", Offset = "0xB3CFA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3CFA8", Offset = "0xB3CFA8")]
	public Color sunMidnight;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color sunPreDawn;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color sunDawn;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color sunEarlyMorning;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color sunNoon;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color sunLateAfternoon;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color sunDusk;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Color sunEvening;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3CFF8", Offset = "0xB3CFF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3CFF8", Offset = "0xB3CFF8")]
	public Color fogMidnight;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color fogPreDawn;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color fogDawn;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color fogEarlyMorning;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color fogNoon;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Color fogLateAfternoon;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Color fogDusk;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Color fogEvening;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3D048", Offset = "0xB3D048")]
	public Material skyboxMat;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3D05C", Offset = "0xB3D05C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D05C", Offset = "0xB3D05C")]
	public LobbyLevelInfo levelInfo;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3D0AC", Offset = "0xB3D0AC")]
	private Material _sunMat;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Texture2D _gradientTex;

	[Token(Token = "0x40013B0")]
	private const float _sunrise = 5.1f;

	[Token(Token = "0x40013B1")]
	private const float _sunset = 18.9f;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Color _diffuseColor;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Color _skyCubeTint;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3D0C0", Offset = "0xB3D0C0")]
	public float cloudCover;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3D0D8", Offset = "0xB3D0D8")]
	public float weatherIntensity;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float lightningIntensity;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float _timeToNextStrike;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool _strikeInProgress;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float _strikeStartTime;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float _strikeAnim;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Color[] _strikeMask;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int _strikeLastID;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector3 _sunLightRotation;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Color _sunLightColor;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float _sunLightIntensity;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private AircraftControl _player;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int _mapIndex;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int _courseIndex;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SkyManager _instance;

	[Token(Token = "0x170001E0")]
	public static SkyManager Instance
	{
		[Token(Token = "0x6001506")]
		[Address(RVA = "0xDA8C5C", Offset = "0xDA8C5C", VA = "0xDA8C5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xDA8D28", Offset = "0xDA8D28", VA = "0xDA8D28")]
	public Texture2D GetAmbientTex()
	{
		return null;
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xDA8D30", Offset = "0xDA8D30", VA = "0xDA8D30")]
	public Color GetDiffuseColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xDA8D44", Offset = "0xDA8D44", VA = "0xDA8D44")]
	public Color GetSkyCubeTint()
	{
		return default(Color);
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xDA8D58", Offset = "0xDA8D58", VA = "0xDA8D58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xDA8E20", Offset = "0xDA8E20", VA = "0xDA8E20")]
	private void PlayerSpawned(AircraftControl obj)
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0xDA8EA4", Offset = "0xDA8EA4", VA = "0xDA8EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0xDA9140", Offset = "0xDA9140", VA = "0xDA9140")]
	private void PullMapIndex()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xDA91DC", Offset = "0xDA91DC", VA = "0xDA91DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xDA92E8", Offset = "0xDA92E8", VA = "0xDA92E8")]
	private void HandleGameReset()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xDA92F0", Offset = "0xDA92F0", VA = "0xDA92F0")]
	private void HandleLocalUserStart()
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xDA9008", Offset = "0xDA9008", VA = "0xDA9008")]
	public void ResetCourseTime(bool frozen = true)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xDA92F8", Offset = "0xDA92F8", VA = "0xDA92F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xDAA28C", Offset = "0xDAA28C", VA = "0xDAA28C")]
	private void UpdateFromCurves()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xDAA484", Offset = "0xDAA484", VA = "0xDAA484")]
	public SkyManager()
	{
	}
}
[Token(Token = "0x20002ED")]
public class ValleyLakeLighter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material _target;

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x10F5D00", Offset = "0x10F5D00", VA = "0x10F5D00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x10F5DF4", Offset = "0x10F5DF4", VA = "0x10F5DF4")]
	public ValleyLakeLighter()
	{
	}
}
[Token(Token = "0x20002EE")]
public class SonicBoomEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35008", Offset = "0xB35008")]
	private sealed class <TurnOffAfterAmount>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float amount;

		[Token(Token = "0x4002F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SonicBoomEffect <>4__this;

		[Token(Token = "0x170004AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0xDAE9FC", Offset = "0xDAE9FC", VA = "0xDAE9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003095")]
			[Address(RVA = "0xDAEA64", Offset = "0xDAEA64", VA = "0xDAEA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003090")]
		[Address(RVA = "0xDAE5F0", Offset = "0xDAE5F0", VA = "0xDAE5F0")]
		[DebuggerHidden]
		public <TurnOffAfterAmount>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6003091")]
		[Address(RVA = "0xDAE95C", Offset = "0xDAE95C", VA = "0xDAE95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003092")]
		[Address(RVA = "0xDAE960", Offset = "0xDAE960", VA = "0xDAE960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003094")]
		[Address(RVA = "0xDAEA04", Offset = "0xDAEA04", VA = "0xDAEA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013C5")]
	private const float _FADE_DURATION = 1f;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _time;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _mat;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _startDist;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _dist;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _ending;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _endTime;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isGhost;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer renderer;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject boostRing;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator _toPlay;

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xDAE344", Offset = "0xDAE344", VA = "0xDAE344")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xDAE380", Offset = "0xDAE380", VA = "0xDAE380")]
	public void ShowObjects(bool isShow)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0xDAE444", Offset = "0xDAE444", VA = "0xDAE444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0xDAE474", Offset = "0xDAE474", VA = "0xDAE474")]
	public void StartBoosting()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xDAE534", Offset = "0xDAE534", VA = "0xDAE534")]
	public void StartBoosting(float barAmount)
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0xDAE570", Offset = "0xDAE570", VA = "0xDAE570")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4C8F4", Offset = "0xB4C8F4")]
	private IEnumerator TurnOffAfterAmount(float amount)
	{
		return null;
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0xDAE61C", Offset = "0xDAE61C", VA = "0xDAE61C")]
	public void StopBoosting()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xDAE630", Offset = "0xDAE630", VA = "0xDAE630")]
	public void Reset()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xDAE638", Offset = "0xDAE638", VA = "0xDAE638")]
	private void Update()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xDAE948", Offset = "0xDAE948", VA = "0xDAE948")]
	public SonicBoomEffect()
	{
	}
}
[Token(Token = "0x20002EF")]
public class PathSelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int course;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mode;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int CheckpointAmount;

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xCFA8D0", Offset = "0xCFA8D0", VA = "0xCFA8D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xCFACD4", Offset = "0xCFACD4", VA = "0xCFACD4")]
	public PathSelector()
	{
	}
}
[Token(Token = "0x20002F0")]
public class SampleAllPaths : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001524")]
	[Address(RVA = "0xC9CA74", Offset = "0xC9CA74", VA = "0xC9CA74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4C958", Offset = "0xB4C958")]
	public void Sample()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xC9CBEC", Offset = "0xC9CBEC", VA = "0xC9CBEC")]
	public SampleAllPaths()
	{
	}
}
[Token(Token = "0x20002F1")]
public class SplineAIPath : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineSample[] samples;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> checkpointDepths;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> checkpointSampleIndexes;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject marker;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool drawWithGizmos;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float totalDist;

	[Token(Token = "0x40013D9")]
	private const int PATH_RADIUS = 20;

	[Token(Token = "0x40013DA")]
	private const int PATH_MAX_RADIUS = 100;

	[Token(Token = "0x40013DB")]
	public const int PATH_SAMPLE_FREQ = 20;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SplineAIPath activePath;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<float> cpSplineDepths;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<WayPoint> wpCache;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> indexCache;

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xDB325C", Offset = "0xDB325C", VA = "0xDB325C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xDB32B0", Offset = "0xDB32B0", VA = "0xDB32B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4C990", Offset = "0xB4C990")]
	public void CheckSpline()
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xDB3A0C", Offset = "0xDB3A0C", VA = "0xDB3A0C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4C9C8", Offset = "0xB4C9C8")]
	public void SampleSpline()
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xDB4814", Offset = "0xDB4814", VA = "0xDB4814")]
	private void SmoothTunnelExterior(ref List<SplineSample> sampleList)
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xDB3634", Offset = "0xDB3634", VA = "0xDB3634")]
	private float GetSplineNormAtDist(float lastNormPos, float targetDist, SplineTestA spline)
	{
		return default(float);
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xDB40C4", Offset = "0xDB40C4", VA = "0xDB40C4")]
	private SplineSample CreateSampleAtPoint(Vector3 pos, Vector3 forwardDir, float betweenCpLerp)
	{
		return null;
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xDB4B60", Offset = "0xDB4B60", VA = "0xDB4B60")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xDB500C", Offset = "0xDB500C", VA = "0xDB500C")]
	public List<WayPoint> GetWayPoints(int seed, BotSkill skill, bool precious, out List<float> cpDepths, out List<float> wpDepths, out float distance)
	{
		return null;
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xDB5AE4", Offset = "0xDB5AE4", VA = "0xDB5AE4")]
	private bool IsCollisionBetweenPoints(WayPoint wp1, WayPoint wp2)
	{
		return default(bool);
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xDB5804", Offset = "0xDB5804", VA = "0xDB5804")]
	private Vector3 GetOffset(SplineSample sample, BotSkill skill, out float boostGained)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xDB5C08", Offset = "0xDB5C08", VA = "0xDB5C08")]
	private float GetDistance(List<WayPoint> waypoints)
	{
		return default(float);
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xDB5E48", Offset = "0xDB5E48", VA = "0xDB5E48")]
	private void CheckForCollisions(List<WayPoint> wayPoints)
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xDB6358", Offset = "0xDB6358", VA = "0xDB6358")]
	private void CheckForCollisions1(List<WayPoint> wayPoints)
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xDB6210", Offset = "0xDB6210", VA = "0xDB6210")]
	private void RandomSelectOffset(WayPoint wp)
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xDB6734", Offset = "0xDB6734", VA = "0xDB6734")]
	private int CheckForCollisions2(List<WayPoint> wayPoints)
	{
		return default(int);
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xDB6A2C", Offset = "0xDB6A2C", VA = "0xDB6A2C")]
	private void ReduceWPOffset(WayPoint wp, float radiusScale)
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xDB6B3C", Offset = "0xDB6B3C", VA = "0xDB6B3C")]
	public SplineAIPath()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F2")]
public class SplineSample : BezierPoint
{
	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float radius;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 boostDir;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float boostAvailable;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 splineOffset;

	[Token(Token = "0x6001537")]
	[Address(RVA = "0xDB4B58", Offset = "0xDB4B58", VA = "0xDB4B58")]
	public SplineSample()
	{
	}
}
[Token(Token = "0x20002F3")]
public class BotFlyingAI
{
	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _boostSeek;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _positioningSkill;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _boostCollectRatio;

	[Token(Token = "0x6001538")]
	[Address(RVA = "0xD732B0", Offset = "0xD732B0", VA = "0xD732B0")]
	public BotFlyingAI()
	{
	}
}
[Token(Token = "0x20002F4")]
public class SplineTestA : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007F8")]
	public delegate void PastCheckpoint(int playerId, int checkpoint, bool inside, int pointsToAdd, bool finalRing, int ringType);

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] tangents;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] distances;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] sizes;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] aspects;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] rotations;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float length;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] checkpoints;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _length;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RingBuilder[] _ringPrefabs;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int[] types;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _playerId;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _player;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Transform> _checkPoints;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> _checkPointTypes;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _checkpointsPassed;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 _lastPlayerPos;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly float[] RING_RADIUS;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _loadedResources;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _loadedMaterial;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Light> pathLights;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] _ringResources;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform[] _ringplaceTF;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Animation[] _ringplaceAnim;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Material[] _ringplaceMat;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] _ringplaceResources;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform[] _playerTF;

	[Token(Token = "0x4001403")]
	private const string _MAT_RESOURCE = "RingMaterial_Map{0}";

	[Token(Token = "0x14000092")]
	public static event PastCheckpoint OnCheckpointPassed
	{
		[Token(Token = "0x6001539")]
		[Address(RVA = "0xDB6C40", Offset = "0xDB6C40", VA = "0xDB6C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA00", Offset = "0xB4CA00")]
		add
		{
		}
		[Token(Token = "0x600153A")]
		[Address(RVA = "0xDB6D2C", Offset = "0xDB6D2C", VA = "0xDB6D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA10", Offset = "0xB4CA10")]
		remove
		{
		}
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0xDB6E18", Offset = "0xDB6E18", VA = "0xDB6E18")]
	private void LoadRingResources()
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xDB73CC", Offset = "0xDB73CC", VA = "0xDB73CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xDB7520", Offset = "0xDB7520", VA = "0xDB7520")]
	private void CheckpointHit(int position, List<UserPair<float>> userPairs)
	{
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0xDB792C", Offset = "0xDB792C", VA = "0xDB792C")]
	private void OnBasecampSwitch()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xDB7934", Offset = "0xDB7934", VA = "0xDB7934")]
	private void SetPathLights(bool on)
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xDB79D8", Offset = "0xDB79D8", VA = "0xDB79D8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xDB79E4", Offset = "0xDB79E4", VA = "0xDB79E4")]
	private void CachePlayer(Multiplayer.Player.User user, Transform playerTransform)
	{
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0xDB7AA4", Offset = "0xDB7AA4", VA = "0xDB7AA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xDB7BF0", Offset = "0xDB7BF0", VA = "0xDB7BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0xDB7BF4", Offset = "0xDB7BF4", VA = "0xDB7BF4")]
	public void SpawnPath()
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0xDBA240", Offset = "0xDBA240", VA = "0xDBA240")]
	private void Update()
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0xDBA52C", Offset = "0xDBA52C", VA = "0xDBA52C")]
	private void ReportCheckPoint(int playerId, int checkPoint, bool inside, int ringType, Vector3 relPos)
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0xDBACF0", Offset = "0xDBACF0", VA = "0xDBACF0")]
	private void PlayScoreSound(int scorePoints)
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0xDB37A8", Offset = "0xDB37A8", VA = "0xDB37A8")]
	public Vector3 GetPointAtNormPos(float normPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0xDBB034", Offset = "0xDBB034", VA = "0xDBB034")]
	private GameObject CreateRing(int type, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xDB7CA4", Offset = "0xDB7CA4", VA = "0xDB7CA4")]
	private void SpawnRings(bool isScoreMode)
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xDBB154", Offset = "0xDBB154", VA = "0xDBB154")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xDC1814", Offset = "0xDC1814", VA = "0xDC1814")]
	private Vector3 CalculateCatmullRomPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0xDC1B58", Offset = "0xDC1B58", VA = "0xDC1B58")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xDBAE34", Offset = "0xDBAE34", VA = "0xDBAE34")]
	private Vector3 CalculateCubicPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xDC0F0C", Offset = "0xDC0F0C", VA = "0xDC0F0C")]
	private void InitPoints()
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xDC107C", Offset = "0xDC107C", VA = "0xDC107C")]
	private void InitTangents()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xDC13C4", Offset = "0xDC13C4", VA = "0xDC13C4")]
	private void InitCheckpoints()
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xDC175C", Offset = "0xDC175C", VA = "0xDC175C")]
	private void InitCheckpointTypes()
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xDC14B4", Offset = "0xDC14B4", VA = "0xDC14B4")]
	private void InitCheckpointSizes()
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xDC1598", Offset = "0xDC1598", VA = "0xDC1598")]
	private void InitCheckpointAspects()
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xDC167C", Offset = "0xDC167C", VA = "0xDC167C")]
	private void InitCheckpointRotations()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0xDC1D20", Offset = "0xDC1D20", VA = "0xDC1D20")]
	public Vector3[] ExportSpline()
	{
		return null;
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xDC2040", Offset = "0xDC2040", VA = "0xDC2040")]
	public int GetCheckpointAmount(bool scoreMode)
	{
		return default(int);
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xDC2154", Offset = "0xDC2154", VA = "0xDC2154")]
	public SplineTestA()
	{
	}
}
[Token(Token = "0x20002F5")]
public struct GazeEventArgs
{
	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;
}
[Token(Token = "0x20002F6")]
public delegate void GazeEventHandler(object sender, GazeEventArgs e);
[Token(Token = "0x20002F7")]
public class SteamVR_GazeTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInGaze;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gazeInCutoff;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float gazeOutCutoff;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hmdTrackedObject;

	[Token(Token = "0x14000093")]
	public event GazeEventHandler GazeOn
	{
		[Token(Token = "0x600155E")]
		[Address(RVA = "0xD68D64", Offset = "0xD68D64", VA = "0xD68D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA20", Offset = "0xB4CA20")]
		add
		{
		}
		[Token(Token = "0x600155F")]
		[Address(RVA = "0xD68E08", Offset = "0xD68E08", VA = "0xD68E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA30", Offset = "0xB4CA30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000094")]
	public event GazeEventHandler GazeOff
	{
		[Token(Token = "0x6001560")]
		[Address(RVA = "0xD68EAC", Offset = "0xD68EAC", VA = "0xD68EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA40", Offset = "0xB4CA40")]
		add
		{
		}
		[Token(Token = "0x6001561")]
		[Address(RVA = "0xD68F50", Offset = "0xD68F50", VA = "0xD68F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA50", Offset = "0xB4CA50")]
		remove
		{
		}
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xD68FF4", Offset = "0xD68FF4", VA = "0xD68FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0xD68FF8", Offset = "0xD68FF8", VA = "0xD68FF8", Slot = "4")]
	public virtual void OnGazeOn(GazeEventArgs e)
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0xD69010", Offset = "0xD69010", VA = "0xD69010", Slot = "5")]
	public virtual void OnGazeOff(GazeEventArgs e)
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0xD69028", Offset = "0xD69028", VA = "0xD69028")]
	private void Update()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xD69390", Offset = "0xD69390", VA = "0xD69390")]
	public SteamVR_GazeTracker()
	{
	}
}
[Token(Token = "0x20002F8")]
public struct PointerEventArgs
{
	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float distance;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;
}
[Token(Token = "0x20002F9")]
public delegate void PointerEventHandler(object sender, PointerEventArgs e);
[Token(Token = "0x20002FA")]
public class SteamVR_LaserPointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject holder;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointer;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addRigidBody;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform reference;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform previousContact;

	[Token(Token = "0x14000095")]
	public event PointerEventHandler PointerIn
	{
		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD6A274", Offset = "0xD6A274", VA = "0xD6A274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA60", Offset = "0xB4CA60")]
		add
		{
		}
		[Token(Token = "0x600156C")]
		[Address(RVA = "0xD6A318", Offset = "0xD6A318", VA = "0xD6A318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA70", Offset = "0xB4CA70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000096")]
	public event PointerEventHandler PointerOut
	{
		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD6A3BC", Offset = "0xD6A3BC", VA = "0xD6A3BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA80", Offset = "0xB4CA80")]
		add
		{
		}
		[Token(Token = "0x600156E")]
		[Address(RVA = "0xD6A460", Offset = "0xD6A460", VA = "0xD6A460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CA90", Offset = "0xB4CA90")]
		remove
		{
		}
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xD6A504", Offset = "0xD6A504", VA = "0xD6A504")]
	private void Start()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xD6A8C8", Offset = "0xD6A8C8", VA = "0xD6A8C8", Slot = "4")]
	public virtual void OnPointerIn(PointerEventArgs e)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xD6A90C", Offset = "0xD6A90C", VA = "0xD6A90C", Slot = "5")]
	public virtual void OnPointerOut(PointerEventArgs e)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xD6A950", Offset = "0xD6A950", VA = "0xD6A950")]
	private void Update()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xD6ADC8", Offset = "0xD6ADC8", VA = "0xD6ADC8")]
	public SteamVR_LaserPointer()
	{
	}
}
[Token(Token = "0x20002FB")]
public class SteamVR_Teleporter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20007F9")]
	public enum TeleportType
	{
		[Token(Token = "0x4002F3A")]
		TeleportTypeUseTerrain,
		[Token(Token = "0x4002F3B")]
		TeleportTypeUseCollider,
		[Token(Token = "0x4002F3C")]
		TeleportTypeUseZeroY
	}

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnClick;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TeleportType teleportType;

	[Token(Token = "0x170001E1")]
	private Transform reference
	{
		[Token(Token = "0x6001574")]
		[Address(RVA = "0xDE7148", Offset = "0xDE7148", VA = "0xDE7148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xDE71E4", Offset = "0xDE71E4", VA = "0xDE71E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xDE7450", Offset = "0xDE7450", VA = "0xDE7450")]
	private void DoClick(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xDE77EC", Offset = "0xDE77EC", VA = "0xDE77EC")]
	public SteamVR_Teleporter()
	{
	}
}
[Token(Token = "0x20002FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32C00", Offset = "0xB32C00")]
public class SteamVR_TestThrow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint joint;

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xDE8904", Offset = "0xDE8904", VA = "0xDE8904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xDE895C", Offset = "0xDE895C", VA = "0xDE895C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xDE8C90", Offset = "0xDE8C90", VA = "0xDE8C90")]
	public SteamVR_TestThrow()
	{
	}
}
[Token(Token = "0x20002FD")]
public class SteamVR_TestTrackedCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool undistorted;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool cropped;

	[Token(Token = "0x600157B")]
	[Address(RVA = "0xDE8C98", Offset = "0xDE8C98", VA = "0xDE8C98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0xDE8D58", Offset = "0xDE8D58", VA = "0xDE8D58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0xDE8E50", Offset = "0xDE8E50", VA = "0xDE8E50")]
	private void Update()
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0xDE91DC", Offset = "0xDE91DC", VA = "0xDE91DC")]
	public SteamVR_TestTrackedCamera()
	{
	}
}
[Token(Token = "0x20002FE")]
public struct ClickedEventArgs
{
	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float padX;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float padY;
}
[Token(Token = "0x20002FF")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x2000300")]
public class SteamVR_TrackedController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint controllerIndex;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool triggerPressed;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool steamPressed;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool menuPressed;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool padPressed;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool padTouched;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool gripped;

	[Token(Token = "0x14000097")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x6001583")]
		[Address(RVA = "0xDE9CC4", Offset = "0xDE9CC4", VA = "0xDE9CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CAA0", Offset = "0xB4CAA0")]
		add
		{
		}
		[Token(Token = "0x6001584")]
		[Address(RVA = "0xDE9D68", Offset = "0xDE9D68", VA = "0xDE9D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CAB0", Offset = "0xB4CAB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000098")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x6001585")]
		[Address(RVA = "0xDE9E0C", Offset = "0xDE9E0C", VA = "0xDE9E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CAC0", Offset = "0xB4CAC0")]
		add
		{
		}
		[Token(Token = "0x6001586")]
		[Address(RVA = "0xDE9EB0", Offset = "0xDE9EB0", VA = "0xDE9EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CAD0", Offset = "0xB4CAD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000099")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x6001587")]
		[Address(RVA = "0xDE73AC", Offset = "0xDE73AC", VA = "0xDE73AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CAE0", Offset = "0xB4CAE0")]
		add
		{
		}
		[Token(Token = "0x6001588")]
		[Address(RVA = "0xDE9F54", Offset = "0xDE9F54", VA = "0xDE9F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CAF0", Offset = "0xB4CAF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400009A")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x6001589")]
		[Address(RVA = "0xDE9FF8", Offset = "0xDE9FF8", VA = "0xDE9FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB00", Offset = "0xB4CB00")]
		add
		{
		}
		[Token(Token = "0x600158A")]
		[Address(RVA = "0xDEA09C", Offset = "0xDEA09C", VA = "0xDEA09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB10", Offset = "0xB4CB10")]
		remove
		{
		}
	}

	[Token(Token = "0x1400009B")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x600158B")]
		[Address(RVA = "0xDEA140", Offset = "0xDEA140", VA = "0xDEA140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB20", Offset = "0xB4CB20")]
		add
		{
		}
		[Token(Token = "0x600158C")]
		[Address(RVA = "0xDEA1E4", Offset = "0xDEA1E4", VA = "0xDEA1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB30", Offset = "0xB4CB30")]
		remove
		{
		}
	}

	[Token(Token = "0x1400009C")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x600158D")]
		[Address(RVA = "0xDEA288", Offset = "0xDEA288", VA = "0xDEA288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB40", Offset = "0xB4CB40")]
		add
		{
		}
		[Token(Token = "0x600158E")]
		[Address(RVA = "0xDEA32C", Offset = "0xDEA32C", VA = "0xDEA32C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB50", Offset = "0xB4CB50")]
		remove
		{
		}
	}

	[Token(Token = "0x1400009D")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x600158F")]
		[Address(RVA = "0xDEA3D0", Offset = "0xDEA3D0", VA = "0xDEA3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB60", Offset = "0xB4CB60")]
		add
		{
		}
		[Token(Token = "0x6001590")]
		[Address(RVA = "0xDEA474", Offset = "0xDEA474", VA = "0xDEA474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB70", Offset = "0xB4CB70")]
		remove
		{
		}
	}

	[Token(Token = "0x1400009E")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x6001591")]
		[Address(RVA = "0xDEA518", Offset = "0xDEA518", VA = "0xDEA518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB80", Offset = "0xB4CB80")]
		add
		{
		}
		[Token(Token = "0x6001592")]
		[Address(RVA = "0xDEA5BC", Offset = "0xDEA5BC", VA = "0xDEA5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CB90", Offset = "0xB4CB90")]
		remove
		{
		}
	}

	[Token(Token = "0x1400009F")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0xDEA660", Offset = "0xDEA660", VA = "0xDEA660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CBA0", Offset = "0xB4CBA0")]
		add
		{
		}
		[Token(Token = "0x6001594")]
		[Address(RVA = "0xDEA704", Offset = "0xDEA704", VA = "0xDEA704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CBB0", Offset = "0xB4CBB0")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A0")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x6001595")]
		[Address(RVA = "0xDEA7A8", Offset = "0xDEA7A8", VA = "0xDEA7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CBC0", Offset = "0xB4CBC0")]
		add
		{
		}
		[Token(Token = "0x6001596")]
		[Address(RVA = "0xDEA84C", Offset = "0xDEA84C", VA = "0xDEA84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CBD0", Offset = "0xB4CBD0")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A1")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x6001597")]
		[Address(RVA = "0xDEA8F0", Offset = "0xDEA8F0", VA = "0xDEA8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CBE0", Offset = "0xB4CBE0")]
		add
		{
		}
		[Token(Token = "0x6001598")]
		[Address(RVA = "0xDEA994", Offset = "0xDEA994", VA = "0xDEA994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CBF0", Offset = "0xB4CBF0")]
		remove
		{
		}
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xDEAA38", Offset = "0xDEAA38", VA = "0xDEAA38", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xDEAB84", Offset = "0xDEAB84", VA = "0xDEAB84")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xDEAB8C", Offset = "0xDEAB8C", VA = "0xDEAB8C", Slot = "5")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xDEABB0", Offset = "0xDEABB0", VA = "0xDEABB0", Slot = "6")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xDEABD4", Offset = "0xDEABD4", VA = "0xDEABD4", Slot = "7")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xDEABF8", Offset = "0xDEABF8", VA = "0xDEABF8", Slot = "8")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xDEAC1C", Offset = "0xDEAC1C", VA = "0xDEAC1C", Slot = "9")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0xDEAC40", Offset = "0xDEAC40", VA = "0xDEAC40", Slot = "10")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0xDEAC64", Offset = "0xDEAC64", VA = "0xDEAC64", Slot = "11")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xDEAC88", Offset = "0xDEAC88", VA = "0xDEAC88", Slot = "12")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xDEACAC", Offset = "0xDEACAC", VA = "0xDEACAC", Slot = "13")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xDEACD0", Offset = "0xDEACD0", VA = "0xDEACD0", Slot = "14")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xDEACF4", Offset = "0xDEACF4", VA = "0xDEACF4", Slot = "15")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xDEAD18", Offset = "0xDEAD18", VA = "0xDEAD18", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xDEB010", Offset = "0xDEB010", VA = "0xDEB010")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x2000301")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D200", Offset = "0xB3D200")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D210", Offset = "0xB3D210")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D220", Offset = "0xB3D220")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D230", Offset = "0xB3D230")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D240", Offset = "0xB3D240")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D250", Offset = "0xB3D250")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D260", Offset = "0xB3D260")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D270", Offset = "0xB3D270")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D280", Offset = "0xB3D280")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D290", Offset = "0xB3D290")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2A0", Offset = "0xB3D2A0")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2B0", Offset = "0xB3D2B0")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2C0", Offset = "0xB3D2C0")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x170001E2")]
	public static bool active
	{
		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xD5EF90", Offset = "0xD5EF90", VA = "0xD5EF90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E3")]
	public static bool enabled
	{
		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xD5F000", Offset = "0xD5F000", VA = "0xD5F000")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xD5F09C", Offset = "0xD5F09C", VA = "0xD5F09C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public static SteamVR instance
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xD5F1E0", Offset = "0xD5F1E0", VA = "0xD5F1E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E5")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xD5F520", Offset = "0xD5F520", VA = "0xD5F520")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E6")]
	public CVRSystem hmd
	{
		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xD5FEF0", Offset = "0xD5FEF0", VA = "0xD5FEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC00", Offset = "0xB4CC00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xD5FEF8", Offset = "0xD5FEF8", VA = "0xD5FEF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC10", Offset = "0xB4CC10")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xD5FF00", Offset = "0xD5FF00", VA = "0xD5FF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC20", Offset = "0xB4CC20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xD5FF08", Offset = "0xD5FF08", VA = "0xD5FF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC30", Offset = "0xB4CC30")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public CVROverlay overlay
	{
		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xD5FF10", Offset = "0xD5FF10", VA = "0xD5FF10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC40", Offset = "0xB4CC40")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xD5FF18", Offset = "0xD5FF18", VA = "0xD5FF18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC50", Offset = "0xB4CC50")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public static bool initializing
	{
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xD5FF20", Offset = "0xD5FF20", VA = "0xD5FF20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC60", Offset = "0xB4CC60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xD5FF88", Offset = "0xD5FF88", VA = "0xD5FF88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC70", Offset = "0xB4CC70")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public static bool calibrating
	{
		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xD5FFF8", Offset = "0xD5FFF8", VA = "0xD5FFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC80", Offset = "0xB4CC80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xD60060", Offset = "0xD60060", VA = "0xD60060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CC90", Offset = "0xB4CC90")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public static bool outOfRange
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xD600D0", Offset = "0xD600D0", VA = "0xD600D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CCA0", Offset = "0xB4CCA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xD60138", Offset = "0xD60138", VA = "0xD60138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CCB0", Offset = "0xB4CCB0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public float sceneWidth
	{
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xD601A8", Offset = "0xD601A8", VA = "0xD601A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CCC0", Offset = "0xB4CCC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xD601B0", Offset = "0xD601B0", VA = "0xD601B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CCD0", Offset = "0xB4CCD0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public float sceneHeight
	{
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xD601B8", Offset = "0xD601B8", VA = "0xD601B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CCE0", Offset = "0xB4CCE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xD601C0", Offset = "0xD601C0", VA = "0xD601C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CCF0", Offset = "0xB4CCF0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public float aspect
	{
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xD601C8", Offset = "0xD601C8", VA = "0xD601C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD00", Offset = "0xB4CD00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xD601D0", Offset = "0xD601D0", VA = "0xD601D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD10", Offset = "0xB4CD10")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public float fieldOfView
	{
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xD601D8", Offset = "0xD601D8", VA = "0xD601D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD20", Offset = "0xB4CD20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xD601E0", Offset = "0xD601E0", VA = "0xD601E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD30", Offset = "0xB4CD30")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xD601E8", Offset = "0xD601E8", VA = "0xD601E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD40", Offset = "0xB4CD40")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xD601F0", Offset = "0xD601F0", VA = "0xD601F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD50", Offset = "0xB4CD50")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xD601F8", Offset = "0xD601F8", VA = "0xD601F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD60", Offset = "0xB4CD60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xD60200", Offset = "0xD60200", VA = "0xD60200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD70", Offset = "0xB4CD70")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xD60208", Offset = "0xD60208", VA = "0xD60208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD80", Offset = "0xB4CD80")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xD60210", Offset = "0xD60210", VA = "0xD60210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CD90", Offset = "0xB4CD90")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xD60218", Offset = "0xD60218", VA = "0xD60218")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xD6036C", Offset = "0xD6036C", VA = "0xD6036C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F5")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xD60378", Offset = "0xD60378", VA = "0xD60378")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F6")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xD60384", Offset = "0xD60384", VA = "0xD60384")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F7")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xD603D0", Offset = "0xD603D0", VA = "0xD603D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xD5F2F8", Offset = "0xD5F2F8", VA = "0xD5F2F8")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xD5F58C", Offset = "0xD5F58C", VA = "0xD5F58C")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xD603DC", Offset = "0xD603DC", VA = "0xD603DC")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xD60224", Offset = "0xD60224", VA = "0xD60224")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xD60390", Offset = "0xD60390", VA = "0xD60390")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xD604C4", Offset = "0xD604C4", VA = "0xD604C4")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xD60578", Offset = "0xD60578", VA = "0xD60578")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xD6062C", Offset = "0xD6062C", VA = "0xD6062C")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xD606E0", Offset = "0xD606E0", VA = "0xD606E0")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xD60784", Offset = "0xD60784", VA = "0xD60784")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xD5F6E0", Offset = "0xD5F6E0", VA = "0xD5F6E0")]
	private SteamVR()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xD60C30", Offset = "0xD60C30", VA = "0xD60C30", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xD60EE0", Offset = "0xD60EE0", VA = "0xD60EE0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xD60C9C", Offset = "0xD60C9C", VA = "0xD60C9C")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xD5F13C", Offset = "0xD5F13C", VA = "0xD5F13C")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000302")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32C64", Offset = "0xB32C64")]
public class SteamVR_Camera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2E0", Offset = "0xB3D2E0")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Collections.Hashtable values;

	[Token(Token = "0x4001451")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x4001452")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x4001453")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x4001454")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x170001F8")]
	public Transform head
	{
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xD60FC8", Offset = "0xD60FC8", VA = "0xD60FC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public Transform offset
	{
		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xD60FD0", Offset = "0xD60FD0", VA = "0xD60FD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FA")]
	public Transform origin
	{
		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xD60FD8", Offset = "0xD60FD8", VA = "0xD60FD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FB")]
	public Camera camera
	{
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xD60FF4", Offset = "0xD60FF4", VA = "0xD60FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CDA0", Offset = "0xB4CDA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xD60FFC", Offset = "0xD60FFC", VA = "0xD60FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CDB0", Offset = "0xB4CDB0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public Transform ears
	{
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xD61004", Offset = "0xD61004", VA = "0xD61004")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FD")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xD61094", Offset = "0xD61094", VA = "0xD61094")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xD6109C", Offset = "0xD6109C", VA = "0xD6109C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public string baseName
	{
		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD62188", Offset = "0xD62188", VA = "0xD62188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xD6100C", Offset = "0xD6100C", VA = "0xD6100C")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xD610A4", Offset = "0xD610A4", VA = "0xD610A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xD610AC", Offset = "0xD610AC", VA = "0xD610AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xD61B34", Offset = "0xD61B34", VA = "0xD61B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xD61B90", Offset = "0xD61B90", VA = "0xD61B90")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xD61408", Offset = "0xD61408", VA = "0xD61408")]
	public void Expand()
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xD62258", Offset = "0xD62258", VA = "0xD62258")]
	public void Collapse()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xD62658", Offset = "0xD62658", VA = "0xD62658")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000303")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xD62660", Offset = "0xD62660", VA = "0xD62660")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xD626FC", Offset = "0xD626FC", VA = "0xD626FC")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x2000304")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xD62704", Offset = "0xD62704", VA = "0xD62704")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xD627A0", Offset = "0xD627A0", VA = "0xD627A0")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x2000305")]
public class SteamVR_Controller
{
	[Token(Token = "0x20007FA")]
	public class ButtonMask
	{
		[Token(Token = "0x4002F3D")]
		public const ulong System = 1uL;

		[Token(Token = "0x4002F3E")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4002F3F")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4002F40")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4002F41")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4002F42")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4002F43")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4002F44")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4002F45")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4002F46")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x600309A")]
		[Address(RVA = "0xD62ED8", Offset = "0xD62ED8", VA = "0xD62ED8")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20007FB")]
	public class Device
	{
		[Token(Token = "0x4002F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB423C8", Offset = "0xB423C8")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4002F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB423D8", Offset = "0xB423D8")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4002F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4002F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4002F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4002F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4002F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4002F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4002F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4002F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x170004B1")]
		public uint index
		{
			[Token(Token = "0x600309C")]
			[Address(RVA = "0xD62EE0", Offset = "0xD62EE0", VA = "0xD62EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB537D8", Offset = "0xB537D8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600309D")]
			[Address(RVA = "0xD62EE8", Offset = "0xD62EE8", VA = "0xD62EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB537E8", Offset = "0xB537E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		public bool valid
		{
			[Token(Token = "0x600309E")]
			[Address(RVA = "0xD62EF0", Offset = "0xD62EF0", VA = "0xD62EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB537F8", Offset = "0xB537F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600309F")]
			[Address(RVA = "0xD62EF8", Offset = "0xD62EF8", VA = "0xD62EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53808", Offset = "0xB53808")]
			private set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		public bool connected
		{
			[Token(Token = "0x60030A0")]
			[Address(RVA = "0xD62EAC", Offset = "0xD62EAC", VA = "0xD62EAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B4")]
		public bool hasTracking
		{
			[Token(Token = "0x60030A1")]
			[Address(RVA = "0xD62F04", Offset = "0xD62F04", VA = "0xD62F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B5")]
		public bool outOfRange
		{
			[Token(Token = "0x60030A2")]
			[Address(RVA = "0xD62F28", Offset = "0xD62F28", VA = "0xD62F28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public bool calibrating
		{
			[Token(Token = "0x60030A3")]
			[Address(RVA = "0xD62F60", Offset = "0xD62F60", VA = "0xD62F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B7")]
		public bool uninitialized
		{
			[Token(Token = "0x60030A4")]
			[Address(RVA = "0xD62F90", Offset = "0xD62F90", VA = "0xD62F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60030A5")]
			[Address(RVA = "0xD62E50", Offset = "0xD62E50", VA = "0xD62E50")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170004B9")]
		public Vector3 velocity
		{
			[Token(Token = "0x60030A6")]
			[Address(RVA = "0xD62FBC", Offset = "0xD62FBC", VA = "0xD62FBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004BA")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x60030A7")]
			[Address(RVA = "0xD6300C", Offset = "0xD6300C", VA = "0xD6300C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0xD628F4", Offset = "0xD628F4", VA = "0xD628F4")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0xD63060", Offset = "0xD63060", VA = "0xD63060")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0xD6309C", Offset = "0xD6309C", VA = "0xD6309C")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0xD630D8", Offset = "0xD630D8", VA = "0xD630D8")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0xD62968", Offset = "0xD62968", VA = "0xD62968")]
		public void Update()
		{
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0xD63208", Offset = "0xD63208", VA = "0xD63208")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0xD63238", Offset = "0xD63238", VA = "0xD63238")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0xD6327C", Offset = "0xD6327C", VA = "0xD6327C")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0xD632C0", Offset = "0xD632C0", VA = "0xD632C0")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0xD632F4", Offset = "0xD632F4", VA = "0xD632F4")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B1")]
		[Address(RVA = "0xD6333C", Offset = "0xD6333C", VA = "0xD6333C")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0xD63384", Offset = "0xD63384", VA = "0xD63384")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0xD633B4", Offset = "0xD633B4", VA = "0xD633B4")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0xD633F8", Offset = "0xD633F8", VA = "0xD633F8")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0xD6343C", Offset = "0xD6343C", VA = "0xD6343C")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0xD63470", Offset = "0xD63470", VA = "0xD63470")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0xD634B8", Offset = "0xD634B8", VA = "0xD634B8")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0xD63500", Offset = "0xD63500", VA = "0xD63500")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0xD635DC", Offset = "0xD635DC", VA = "0xD635DC")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0xD63108", Offset = "0xD63108", VA = "0xD63108")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0xD63678", Offset = "0xD63678", VA = "0xD63678")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0xD6369C", Offset = "0xD6369C", VA = "0xD6369C")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0xD636D8", Offset = "0xD636D8", VA = "0xD636D8")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20007FC")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4002F52")]
		First,
		[Token(Token = "0x4002F53")]
		Leftmost,
		[Token(Token = "0x4002F54")]
		Rightmost,
		[Token(Token = "0x4002F55")]
		FarthestLeft,
		[Token(Token = "0x4002F56")]
		FarthestRight
	}

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xD627A8", Offset = "0xD627A8", VA = "0xD627A8")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xD6292C", Offset = "0xD6292C", VA = "0xD6292C")]
	public static void Update()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xD62AF4", Offset = "0xD62AF4", VA = "0xD62AF4")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xD62ED0", Offset = "0xD62ED0", VA = "0xD62ED0")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x2000306")]
public class SteamVR_ControllerManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D300", Offset = "0xB3D300")]
	public GameObject[] objects;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D338", Offset = "0xB3D338")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xD63714", Offset = "0xD63714", VA = "0xD63714")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xD63828", Offset = "0xD63828", VA = "0xD63828")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xD63964", Offset = "0xD63964", VA = "0xD63964")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xD63968", Offset = "0xD63968", VA = "0xD63968")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0xD63CAC", Offset = "0xD63CAC", VA = "0xD63CAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0xD6424C", Offset = "0xD6424C", VA = "0xD6424C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0xD642B0", Offset = "0xD642B0", VA = "0xD642B0")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xD64660", Offset = "0xD64660", VA = "0xD64660")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xD6456C", Offset = "0xD6456C", VA = "0xD6456C")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0xD647D0", Offset = "0xD647D0", VA = "0xD647D0")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xD64A1C", Offset = "0xD64A1C", VA = "0xD64A1C")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xD64128", Offset = "0xD64128", VA = "0xD64128")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xD63E8C", Offset = "0xD63E8C", VA = "0xD63E8C")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x2000307")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32CE8", Offset = "0xB32CE8")]
public class SteamVR_Ears : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xD64B44", Offset = "0xD64B44", VA = "0xD64B44")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xD64CB8", Offset = "0xD64CB8", VA = "0xD64CB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xD64E5C", Offset = "0xD64E5C", VA = "0xD64E5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xD64F30", Offset = "0xD64F30", VA = "0xD64F30")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x2000308")]
public static class SteamVR_Events
{
	[Token(Token = "0x20007FD")]
	public abstract class Action
	{
		[Token(Token = "0x170004BB")]
		public bool enabled
		{
			[Token(Token = "0x60030BF")]
			[Address(RVA = "0xD6423C", Offset = "0xD6423C", VA = "0xD6423C")]
			set
			{
			}
		}

		[Token(Token = "0x60030BE")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0xD65ACC", Offset = "0xD65ACC", VA = "0xD65ACC")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20007FE")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4002F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4002F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0xD65118", Offset = "0xD65118", VA = "0xD65118")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0xD65AD4", Offset = "0xD65AD4", VA = "0xD65AD4", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20007FF")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4002F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4002F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x60030C3")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x60030C4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000800")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4002F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4002F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x60030C5")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60030C6")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000801")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4002F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4002F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x60030C7")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60030C8")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x2000802")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x60030C9")]
		[Address(RVA = "0xD64E54", Offset = "0xD64E54", VA = "0xD64E54")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x60030CA")]
		[Address(RVA = "0xD64F28", Offset = "0xD64F28", VA = "0xD64F28")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x60030CB")]
		[Address(RVA = "0xD65B04", Offset = "0xD65B04", VA = "0xD65B04")]
		public void Send()
		{
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0xD65AC4", Offset = "0xD65AC4", VA = "0xD65AC4")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000803")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x60030CD")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x60030CE")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x60030CF")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x60030D0")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000804")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x60030D1")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60030D2")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60030D3")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x60030D4")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000805")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x60030D5")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60030D6")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60030D7")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60030D8")]
		public Event()
		{
		}
	}

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xD64F38", Offset = "0xD64F38", VA = "0xD64F38")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xD63B5C", Offset = "0xD63B5C", VA = "0xD63B5C")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xD64FDC", Offset = "0xD64FDC", VA = "0xD64FDC")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xD65080", Offset = "0xD65080", VA = "0xD65080")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xD65150", Offset = "0xD65150", VA = "0xD65150")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xD651F4", Offset = "0xD651F4", VA = "0xD651F4")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xD63AB8", Offset = "0xD63AB8", VA = "0xD63AB8")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xD65298", Offset = "0xD65298", VA = "0xD65298")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xD6533C", Offset = "0xD6533C", VA = "0xD6533C")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xD653E0", Offset = "0xD653E0", VA = "0xD653E0")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0xD65484", Offset = "0xD65484", VA = "0xD65484")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xD65528", Offset = "0xD65528", VA = "0xD65528")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xD655C0", Offset = "0xD655C0", VA = "0xD655C0")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xD65664", Offset = "0xD65664", VA = "0xD65664")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xD65708", Offset = "0xD65708", VA = "0xD65708")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xD63C00", Offset = "0xD63C00", VA = "0xD63C00")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x2000309")]
public class SteamVR_ExternalCamera : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000806")]
	public struct Config
	{
		[Token(Token = "0x4002F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4002F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4002F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4002F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4002F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4002F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4002F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4002F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4002F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4002F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4002F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4002F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4002F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4002F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4002F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4002F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4002F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xD65B0C", Offset = "0xD65B0C", VA = "0xD65B0C")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xD66414", Offset = "0xD66414", VA = "0xD66414")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xD66418", Offset = "0xD66418", VA = "0xD66418")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xD669C8", Offset = "0xD669C8", VA = "0xD669C8")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xD66C74", Offset = "0xD66C74", VA = "0xD66C74")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xD673CC", Offset = "0xD673CC", VA = "0xD673CC")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xD674EC", Offset = "0xD674EC", VA = "0xD674EC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xD674F0", Offset = "0xD674F0", VA = "0xD674F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xD67740", Offset = "0xD67740", VA = "0xD67740")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xD6787C", Offset = "0xD6787C", VA = "0xD6787C")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x200030A")]
public class SteamVR_Fade : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xD67884", Offset = "0xD67884", VA = "0xD67884")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0xD67948", Offset = "0xD67948", VA = "0xD67948")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0xD67A10", Offset = "0xD67A10", VA = "0xD67A10")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xD67A78", Offset = "0xD67A78", VA = "0xD67A78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xD67C38", Offset = "0xD67C38", VA = "0xD67C38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xD67CFC", Offset = "0xD67CFC", VA = "0xD67CFC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xD68024", Offset = "0xD68024", VA = "0xD68024")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x200030B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32D4C", Offset = "0xB32D4C")]
public class SteamVR_Frustum : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xD6812C", Offset = "0xD6812C", VA = "0xD6812C")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0xD68914", Offset = "0xD68914", VA = "0xD68914")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xD68AD0", Offset = "0xD68AD0", VA = "0xD68AD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xD68BB8", Offset = "0xD68BB8", VA = "0xD68BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xD68CA0", Offset = "0xD68CA0", VA = "0xD68CA0")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x200030C")]
[ExecuteInEditMode]
public class SteamVR_GameView : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600162F")]
	[Address(RVA = "0xD68CC0", Offset = "0xD68CC0", VA = "0xD68CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0xD68D5C", Offset = "0xD68D5C", VA = "0xD68D5C")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x200030D")]
public class SteamVR_IK : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6001631")]
	[Address(RVA = "0xD693A4", Offset = "0xD693A4", VA = "0xD693A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0xD69D4C", Offset = "0xD69D4C", VA = "0xD69D4C")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0xD6A264", Offset = "0xD6A264", VA = "0xD6A264")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x200030E")]
public class SteamVR_LoadLevel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000807")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35018", Offset = "0xB35018")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4002F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4002F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4002F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4002F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x170004BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030DC")]
			[Address(RVA = "0xD6CAC0", Offset = "0xD6CAC0", VA = "0xD6CAC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030DE")]
			[Address(RVA = "0xD6CB28", Offset = "0xD6CB28", VA = "0xD6CB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0xD6BBE0", Offset = "0xD6BBE0", VA = "0xD6BBE0")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0xD6BCEC", Offset = "0xD6BCEC", VA = "0xD6BCEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030DB")]
		[Address(RVA = "0xD6BCF0", Offset = "0xD6BCF0", VA = "0xD6BCF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0xD6CAC8", Offset = "0xD6CAC8", VA = "0xD6CAC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x170001FF")]
	public static bool loading
	{
		[Token(Token = "0x6001634")]
		[Address(RVA = "0xD6ADE4", Offset = "0xD6ADE4", VA = "0xD6ADE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000200")]
	public static float progress
	{
		[Token(Token = "0x6001635")]
		[Address(RVA = "0xD6AE7C", Offset = "0xD6AE7C", VA = "0xD6AE7C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000201")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6001636")]
		[Address(RVA = "0xD6AF90", Offset = "0xD6AF90", VA = "0xD6AF90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0xD6B068", Offset = "0xD6B068", VA = "0xD6B068")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0xD6B078", Offset = "0xD6B078", VA = "0xD6B078")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0xD6B180", Offset = "0xD6B180", VA = "0xD6B180")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0xD6B28C", Offset = "0xD6B28C", VA = "0xD6B28C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0xD6BA78", Offset = "0xD6BA78", VA = "0xD6BA78")]
	private void Update()
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0xD6B110", Offset = "0xD6B110", VA = "0xD6B110")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4CDC0", Offset = "0xB4CDC0")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0xD6B6D0", Offset = "0xD6B6D0", VA = "0xD6B6D0")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0xD6BC84", Offset = "0xD6BC84", VA = "0xD6BC84")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x200030F")]
public class SteamVR_Menu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3A0", Offset = "0xB3D3A0")]
	private float <scale>k__BackingField;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x17000202")]
	public RenderTexture texture
	{
		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD6CB30", Offset = "0xD6CB30", VA = "0xD6CB30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000203")]
	public float scale
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD6CBFC", Offset = "0xD6CBFC", VA = "0xD6CBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CE24", Offset = "0xB4CE24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD6CC04", Offset = "0xD6CC04", VA = "0xD6CC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CE34", Offset = "0xB4CE34")]
		private set
		{
		}
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0xD6CC0C", Offset = "0xD6CC0C", VA = "0xD6CC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xD6CD74", Offset = "0xD6CD74", VA = "0xD6CD74")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0xD6E93C", Offset = "0xD6E93C", VA = "0xD6E93C")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0xD6E838", Offset = "0xD6E838", VA = "0xD6E838")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0xD6ECF8", Offset = "0xD6ECF8", VA = "0xD6ECF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0xD6E748", Offset = "0xD6E748", VA = "0xD6E748")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0xD6EC90", Offset = "0xD6EC90", VA = "0xD6EC90")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0xD6ECC8", Offset = "0xD6ECC8", VA = "0xD6ECC8")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0xD6EEC8", Offset = "0xD6EEC8", VA = "0xD6EEC8")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000310")]
public class SteamVR_Overlay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000808")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4002F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4002F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4002F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4002F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D3B0", Offset = "0xB3D3B0")]
	public float scale;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D3E8", Offset = "0xB3D3E8")]
	public float distance;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D420", Offset = "0xB3D420")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3D420", Offset = "0xB3D420")]
	public float alpha;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D474", Offset = "0xB3D474")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x17000204")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD6EF1C", Offset = "0xD6EF1C", VA = "0xD6EF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CE44", Offset = "0xB4CE44")]
		get
		{
			return null;
		}
		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD6EF6C", Offset = "0xD6EF6C", VA = "0xD6EF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CE54", Offset = "0xB4CE54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000205")]
	public static string key
	{
		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD6BC0C", Offset = "0xD6BC0C", VA = "0xD6BC0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0xD6EFC0", Offset = "0xD6EFC0", VA = "0xD6EFC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0xD6F110", Offset = "0xD6F110", VA = "0xD6F110")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0xD6F1CC", Offset = "0xD6F1CC", VA = "0xD6F1CC")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0xD6F610", Offset = "0xD6F610", VA = "0xD6F610")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0xD6F71C", Offset = "0xD6F71C", VA = "0xD6F71C")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0xD6F8DC", Offset = "0xD6F8DC", VA = "0xD6F8DC")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x2000311")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32DEC", Offset = "0xB32DEC")]
public class SteamVR_PlayArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000809")]
	public enum Size
	{
		[Token(Token = "0x4002F7E")]
		Calibrated,
		[Token(Token = "0x4002F7F")]
		_400x300,
		[Token(Token = "0x4002F80")]
		_300x225,
		[Token(Token = "0x4002F81")]
		_200x150
	}

	[Token(Token = "0x200080A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35028", Offset = "0xB35028")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4002F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x170004BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030E2")]
			[Address(RVA = "0xDDFF8C", Offset = "0xDDFF8C", VA = "0xDDFF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030E4")]
			[Address(RVA = "0xDDFFF4", Offset = "0xDDFFF4", VA = "0xDDFFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0xDDFE5C", Offset = "0xDDFE5C", VA = "0xDDFE5C")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0xDDFE88", Offset = "0xDDFE88", VA = "0xDDFE88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0xDDFE8C", Offset = "0xDDFE8C", VA = "0xDDFE8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0xDDFF94", Offset = "0xDDFF94", VA = "0xDDFF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6001655")]
	[Address(RVA = "0xD6F9A4", Offset = "0xD6F9A4", VA = "0xD6F9A4")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0xD6FD28", Offset = "0xD6FD28", VA = "0xD6FD28")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0xD70570", Offset = "0xD70570", VA = "0xD70570")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0xD70804", Offset = "0xD70804", VA = "0xD70804")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0xD70580", Offset = "0xD70580", VA = "0xD70580")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0xD70814", Offset = "0xD70814", VA = "0xD70814")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0xD708C8", Offset = "0xD708C8", VA = "0xD708C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4CE64", Offset = "0xB4CE64")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0xD70938", Offset = "0xD70938", VA = "0xD70938")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000312")]
public class SteamVR_Render : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200080B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35038", Offset = "0xB35038")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x170004C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030E8")]
			[Address(RVA = "0xDE2D3C", Offset = "0xDE2D3C", VA = "0xDE2D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030EA")]
			[Address(RVA = "0xDE2DA4", Offset = "0xDE2DA4", VA = "0xDE2DA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0xDE0988", Offset = "0xDE0988", VA = "0xDE0988")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0xDE2B88", Offset = "0xDE2B88", VA = "0xDE2B88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030E7")]
		[Address(RVA = "0xDE2B8C", Offset = "0xDE2B8C", VA = "0xDE2B8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0xDE2D44", Offset = "0xDE2D44", VA = "0xDE2D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D494", Offset = "0xB3D494")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x17000206")]
	public static EVREye eye
	{
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xDDFFFC", Offset = "0xDDFFFC", VA = "0xDDFFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CEC8", Offset = "0xB4CEC8")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x600165E")]
		[Address(RVA = "0xDE004C", Offset = "0xDE004C", VA = "0xDE004C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CED8", Offset = "0xB4CED8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xDE00A0", Offset = "0xDE00A0", VA = "0xDE00A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000208")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6001668")]
		[Address(RVA = "0xDE0830", Offset = "0xDE0830", VA = "0xDE0830")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001669")]
		[Address(RVA = "0xDE0880", Offset = "0xDE0880", VA = "0xDE0880")]
		set
		{
		}
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0xDE01D4", Offset = "0xDE01D4", VA = "0xDE01D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0xDE0224", Offset = "0xDE0224", VA = "0xDE0224")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0xDE029C", Offset = "0xDE029C", VA = "0xDE029C")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0xDE0514", Offset = "0xDE0514", VA = "0xDE0514")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0xDE0774", Offset = "0xDE0774", VA = "0xDE0774")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0xDE0310", Offset = "0xDE0310", VA = "0xDE0310")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0xDE05C0", Offset = "0xDE05C0", VA = "0xDE05C0")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xDE07E4", Offset = "0xDE07E4", VA = "0xDE07E4")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xDE0918", Offset = "0xDE0918", VA = "0xDE0918")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4CEE8", Offset = "0xB4CEE8")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0xDE09B4", Offset = "0xDE09B4", VA = "0xDE09B4")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0xDE0B14", Offset = "0xDE0B14", VA = "0xDE0B14")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0xDE0B84", Offset = "0xDE0B84", VA = "0xDE0B84")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0xDE0B8C", Offset = "0xDE0B8C", VA = "0xDE0B8C")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0xDE0CD8", Offset = "0xDE0CD8", VA = "0xDE0CD8")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xDE2018", Offset = "0xDE2018", VA = "0xDE2018")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xDE22A0", Offset = "0xDE22A0", VA = "0xDE22A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0xDE2460", Offset = "0xDE2460", VA = "0xDE2460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0xDE25C8", Offset = "0xDE25C8", VA = "0xDE25C8")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0xDE26A8", Offset = "0xDE26A8", VA = "0xDE26A8")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0xDE26AC", Offset = "0xDE26AC", VA = "0xDE26AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0xDE2AB8", Offset = "0xDE2AB8", VA = "0xDE2AB8")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x2000313")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200080C")]
	public class RenderModel
	{
		[Token(Token = "0x4002F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB423E8", Offset = "0xB423E8")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4002F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB423F8", Offset = "0xB423F8")]
		private Material <material>k__BackingField;

		[Token(Token = "0x170004C2")]
		public Mesh mesh
		{
			[Token(Token = "0x60030EC")]
			[Address(RVA = "0xDE66E8", Offset = "0xDE66E8", VA = "0xDE66E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53908", Offset = "0xB53908")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030ED")]
			[Address(RVA = "0xDE66F0", Offset = "0xDE66F0", VA = "0xDE66F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53918", Offset = "0xB53918")]
			private set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public Material material
		{
			[Token(Token = "0x60030EE")]
			[Address(RVA = "0xDE66F8", Offset = "0xDE66F8", VA = "0xDE66F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53928", Offset = "0xB53928")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030EF")]
			[Address(RVA = "0xDE6700", Offset = "0xDE6700", VA = "0xDE6700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53938", Offset = "0xB53938")]
			private set
			{
			}
		}

		[Token(Token = "0x60030EB")]
		[Address(RVA = "0xDE5394", Offset = "0xDE5394", VA = "0xDE5394")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x200080D")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4002F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4002F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4002F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x170004C4")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x60030F0")]
			[Address(RVA = "0xDE3E8C", Offset = "0xDE3E8C", VA = "0xDE3E8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0xDE6708", Offset = "0xDE6708", VA = "0xDE6708", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60030F2")]
		[Address(RVA = "0xDE37C8", Offset = "0xDE37C8", VA = "0xDE37C8")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x200080E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35048", Offset = "0xB35048")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4002F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4002F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4002F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4002F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x170004C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030F7")]
			[Address(RVA = "0xDE6678", Offset = "0xDE6678", VA = "0xDE6678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030F9")]
			[Address(RVA = "0xDE66E0", Offset = "0xDE66E0", VA = "0xDE66E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0xDE31A8", Offset = "0xDE31A8", VA = "0xDE31A8")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60030F4")]
		[Address(RVA = "0xDE5CF8", Offset = "0xDE5CF8", VA = "0xDE5CF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030F5")]
		[Address(RVA = "0xDE5DD4", Offset = "0xDE5DD4", VA = "0xDE5DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0xDE5D14", Offset = "0xDE5D14", VA = "0xDE5D14")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60030F8")]
		[Address(RVA = "0xDE6680", Offset = "0xDE6680", VA = "0xDE6680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200080F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35058", Offset = "0xB35058")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x170004C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030FD")]
			[Address(RVA = "0xDE5C88", Offset = "0xDE5C88", VA = "0xDE5C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030FF")]
			[Address(RVA = "0xDE5CF0", Offset = "0xDE5CF0", VA = "0xDE5CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030FA")]
		[Address(RVA = "0xDE53CC", Offset = "0xDE53CC", VA = "0xDE53CC")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0xDE5B0C", Offset = "0xDE5B0C", VA = "0xDE5B0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030FC")]
		[Address(RVA = "0xDE5B10", Offset = "0xDE5B10", VA = "0xDE5B10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0xDE5C90", Offset = "0xDE5C90", VA = "0xDE5C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40014F0")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D4A4", Offset = "0xB3D4A4")]
	public string modelOverride;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D4DC", Offset = "0xB3D4DC")]
	public Shader shader;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D514", Offset = "0xB3D514")]
	public bool verbose;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D54C", Offset = "0xB3D54C")]
	public bool createComponents;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D584", Offset = "0xB3D584")]
	public bool updateDynamically;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x40014F7")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D5BC", Offset = "0xB3D5BC")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static System.Collections.Hashtable models;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static System.Collections.Hashtable materials;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x17000209")]
	public string renderModelName
	{
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xDE2DAC", Offset = "0xDE2DAC", VA = "0xDE2DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CF4C", Offset = "0xB4CF4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xDE2DB4", Offset = "0xDE2DB4", VA = "0xDE2DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4CF5C", Offset = "0xB4CF5C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0xDE2DBC", Offset = "0xDE2DBC", VA = "0xDE2DBC")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0xDE2FE0", Offset = "0xDE2FE0", VA = "0xDE2FE0")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0xDE3114", Offset = "0xDE3114", VA = "0xDE3114")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0xDE2E2C", Offset = "0xDE2E2C", VA = "0xDE2E2C")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0xDE312C", Offset = "0xDE312C", VA = "0xDE312C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4CF6C", Offset = "0xB4CF6C")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0xDE31D4", Offset = "0xDE31D4", VA = "0xDE31D4")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0xDE4430", Offset = "0xDE4430", VA = "0xDE4430")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0xDE5324", Offset = "0xDE5324", VA = "0xDE5324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4CFD0", Offset = "0xB4CFD0")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0xDE53F8", Offset = "0xDE53F8", VA = "0xDE53F8")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0xDE368C", Offset = "0xDE368C", VA = "0xDE368C")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0xDE37D0", Offset = "0xDE37D0", VA = "0xDE37D0")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0xDE5494", Offset = "0xDE5494", VA = "0xDE5494")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0xDE55E0", Offset = "0xDE55E0", VA = "0xDE55E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0xDE56FC", Offset = "0xDE56FC", VA = "0xDE56FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0xDE5754", Offset = "0xDE5754", VA = "0xDE5754")]
	private void Update()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0xDE3FEC", Offset = "0xDE3FEC", VA = "0xDE3FEC")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0xDE59F4", Offset = "0xDE59F4", VA = "0xDE59F4")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0xDE4F14", Offset = "0xDE4F14", VA = "0xDE4F14")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0xDE4F20", Offset = "0xDE4F20", VA = "0xDE4F20")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0xDE5128", Offset = "0xDE5128", VA = "0xDE5128")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x2000314")]
public class SteamVR_Skybox : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000810")]
	public enum CellSize
	{
		[Token(Token = "0x4002F99")]
		x1024,
		[Token(Token = "0x4002F9A")]
		x64,
		[Token(Token = "0x4002F9B")]
		x32,
		[Token(Token = "0x4002F9C")]
		x16,
		[Token(Token = "0x4002F9D")]
		x8
	}

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x600168E")]
	[Address(RVA = "0xDE6780", Offset = "0xDE6780", VA = "0xDE6780")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0xDE67D4", Offset = "0xDE67D4", VA = "0xDE67D4")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0xDE6830", Offset = "0xDE6830", VA = "0xDE6830")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0xDE6BC8", Offset = "0xDE6BC8", VA = "0xDE6BC8")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0xDE6C40", Offset = "0xDE6C40", VA = "0xDE6C40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0xDE6C54", Offset = "0xDE6C54", VA = "0xDE6C54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0xDE6C58", Offset = "0xDE6C58", VA = "0xDE6C58")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x2000315")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6001695")]
	[Address(RVA = "0xDE6C6C", Offset = "0xDE6C6C", VA = "0xDE6C6C")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0xDE700C", Offset = "0xDE700C", VA = "0xDE700C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0xDE709C", Offset = "0xDE709C", VA = "0xDE709C")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x2000316")]
[ExecuteInEditMode]
public class SteamVR_Stats : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001698")]
	[Address(RVA = "0xDE70A4", Offset = "0xDE70A4", VA = "0xDE70A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0xDE7140", Offset = "0xDE7140", VA = "0xDE7140")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000317")]
public class SteamVR_TestController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x600169A")]
	[Address(RVA = "0xDE77FC", Offset = "0xDE77FC", VA = "0xDE77FC")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0xDE7DB0", Offset = "0xDE7DB0", VA = "0xDE7DB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0xDE7E74", Offset = "0xDE7E74", VA = "0xDE7E74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0xDE79B0", Offset = "0xDE79B0", VA = "0xDE79B0")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0xDE7F38", Offset = "0xDE7F38", VA = "0xDE7F38")]
	private void Update()
	{
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0xDE8818", Offset = "0xDE8818", VA = "0xDE8818")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000318")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x2000811")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4002F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42408", Offset = "0xB42408")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4002F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42418", Offset = "0xB42418")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4002FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4002FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4002FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4002FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x4002FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x170004C9")]
		public bool undistorted
		{
			[Token(Token = "0x6003101")]
			[Address(RVA = "0xDE9820", Offset = "0xDE9820", VA = "0xDE9820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB539E8", Offset = "0xB539E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003102")]
			[Address(RVA = "0xDE9828", Offset = "0xDE9828", VA = "0xDE9828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB539F8", Offset = "0xB539F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public uint deviceIndex
		{
			[Token(Token = "0x6003103")]
			[Address(RVA = "0xDE9834", Offset = "0xDE9834", VA = "0xDE9834")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170004CB")]
		public bool hasCamera
		{
			[Token(Token = "0x6003104")]
			[Address(RVA = "0xDE8D3C", Offset = "0xDE8D3C", VA = "0xDE8D3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CC")]
		public bool hasTracking
		{
			[Token(Token = "0x6003105")]
			[Address(RVA = "0xDE9160", Offset = "0xDE9160", VA = "0xDE9160")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CD")]
		public uint frameId
		{
			[Token(Token = "0x6003106")]
			[Address(RVA = "0xDE9BAC", Offset = "0xDE9BAC", VA = "0xDE9BAC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170004CE")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6003107")]
			[Address(RVA = "0xDE9BD0", Offset = "0xDE9BD0", VA = "0xDE9BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53A08", Offset = "0xB53A08")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6003108")]
			[Address(RVA = "0xDE9BDC", Offset = "0xDE9BDC", VA = "0xDE9BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53A18", Offset = "0xB53A18")]
			private set
			{
			}
		}

		[Token(Token = "0x170004CF")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x6003109")]
			[Address(RVA = "0xDE9BE8", Offset = "0xDE9BE8", VA = "0xDE9BE8")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x170004D0")]
		public Texture2D texture
		{
			[Token(Token = "0x600310A")]
			[Address(RVA = "0xDE913C", Offset = "0xDE913C", VA = "0xDE913C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D1")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600310B")]
			[Address(RVA = "0xDE9184", Offset = "0xDE9184", VA = "0xDE9184")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170004D2")]
		public Vector3 velocity
		{
			[Token(Token = "0x600310C")]
			[Address(RVA = "0xDE9BF0", Offset = "0xDE9BF0", VA = "0xDE9BF0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004D3")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x600310D")]
			[Address(RVA = "0xDE9C40", Offset = "0xDE9C40", VA = "0xDE9C40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6003100")]
		[Address(RVA = "0xDE933C", Offset = "0xDE933C", VA = "0xDE933C")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x600310E")]
		[Address(RVA = "0xDE9C94", Offset = "0xDE9C94", VA = "0xDE9C94")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x600310F")]
		[Address(RVA = "0xDE8D24", Offset = "0xDE8D24", VA = "0xDE8D24")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6003110")]
		[Address(RVA = "0xDE8DAC", Offset = "0xDE8DAC", VA = "0xDE8DAC")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6003111")]
		[Address(RVA = "0xDE9850", Offset = "0xDE9850", VA = "0xDE9850")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x2000812")]
	private class VideoStream
	{
		[Token(Token = "0x4002FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42428", Offset = "0xB42428")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4002FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4002FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4002FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x170004D4")]
		public uint deviceIndex
		{
			[Token(Token = "0x6003113")]
			[Address(RVA = "0xDE96BC", Offset = "0xDE96BC", VA = "0xDE96BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53A28", Offset = "0xB53A28")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6003114")]
			[Address(RVA = "0xDE96C4", Offset = "0xDE96C4", VA = "0xDE96C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB53A38", Offset = "0xB53A38")]
			private set
			{
			}
		}

		[Token(Token = "0x170004D5")]
		public ulong handle
		{
			[Token(Token = "0x6003115")]
			[Address(RVA = "0xDE96CC", Offset = "0xDE96CC", VA = "0xDE96CC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170004D6")]
		public bool hasCamera
		{
			[Token(Token = "0x6003116")]
			[Address(RVA = "0xDE96D4", Offset = "0xDE96D4", VA = "0xDE96D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003112")]
		[Address(RVA = "0xDE9610", Offset = "0xDE9610", VA = "0xDE9610")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6003117")]
		[Address(RVA = "0xDE96DC", Offset = "0xDE96DC", VA = "0xDE96DC")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6003118")]
		[Address(RVA = "0xDE977C", Offset = "0xDE977C", VA = "0xDE977C")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xDE91EC", Offset = "0xDE91EC", VA = "0xDE91EC")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xDE938C", Offset = "0xDE938C", VA = "0xDE938C")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xDE8D10", Offset = "0xDE8D10", VA = "0xDE8D10")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xDE94DC", Offset = "0xDE94DC", VA = "0xDE94DC")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xDE96B4", Offset = "0xDE96B4", VA = "0xDE96B4")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x2000319")]
public class SteamVR_TrackedObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000813")]
	public enum EIndex
	{
		[Token(Token = "0x4002FAA")]
		None = -1,
		[Token(Token = "0x4002FAB")]
		Hmd,
		[Token(Token = "0x4002FAC")]
		Device1,
		[Token(Token = "0x4002FAD")]
		Device2,
		[Token(Token = "0x4002FAE")]
		Device3,
		[Token(Token = "0x4002FAF")]
		Device4,
		[Token(Token = "0x4002FB0")]
		Device5,
		[Token(Token = "0x4002FB1")]
		Device6,
		[Token(Token = "0x4002FB2")]
		Device7,
		[Token(Token = "0x4002FB3")]
		Device8,
		[Token(Token = "0x4002FB4")]
		Device9,
		[Token(Token = "0x4002FB5")]
		Device10,
		[Token(Token = "0x4002FB6")]
		Device11,
		[Token(Token = "0x4002FB7")]
		Device12,
		[Token(Token = "0x4002FB8")]
		Device13,
		[Token(Token = "0x4002FB9")]
		Device14,
		[Token(Token = "0x4002FBA")]
		Device15
	}

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3D5CC", Offset = "0xB3D5CC")]
	public Transform origin;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D604", Offset = "0xB3D604")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x1700020A")]
	public bool isValid
	{
		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xDEB018", Offset = "0xDEB018", VA = "0xDEB018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D034", Offset = "0xB4D034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xDEB020", Offset = "0xDEB020", VA = "0xDEB020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D044", Offset = "0xB4D044")]
		private set
		{
		}
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xDEB02C", Offset = "0xDEB02C", VA = "0xDEB02C")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xDEB288", Offset = "0xDEB288", VA = "0xDEB288")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xDEB338", Offset = "0xDEB338", VA = "0xDEB338")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xDEB3E4", Offset = "0xDEB3E4", VA = "0xDEB3E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0xDEB41C", Offset = "0xDEB41C", VA = "0xDEB41C")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x200031A")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60016AC")]
	[Address(RVA = "0xDEB504", Offset = "0xDEB504", VA = "0xDEB504")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0xDEB5A0", Offset = "0xDEB5A0", VA = "0xDEB5A0")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x200031B")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x2000814")]
	public struct RigidTransform
	{
		[Token(Token = "0x4002FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4002FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170004D7")]
		public static RigidTransform identity
		{
			[Token(Token = "0x6003119")]
			[Address(RVA = "0xDEC318", Offset = "0xDEC318", VA = "0xDEC318")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x600311A")]
		[Address(RVA = "0xDEC3E8", Offset = "0xDEC3E8", VA = "0xDEC3E8")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0xDEC3D4", Offset = "0xDEC3D4", VA = "0xDEC3D4")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0xDEC450", Offset = "0xDEC450", VA = "0xDEC450")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x600311D")]
		[Address(RVA = "0xDEC4A0", Offset = "0xDEC4A0", VA = "0xDEC4A0")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x600311E")]
		[Address(RVA = "0xDE57D8", Offset = "0xDE57D8", VA = "0xDE57D8")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x600311F")]
		[Address(RVA = "0xDEC660", Offset = "0xDEC660", VA = "0xDEC660")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x6003120")]
		[Address(RVA = "0xDEC8E0", Offset = "0xDEC8E0", VA = "0xDEC8E0")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6003121")]
		[Address(RVA = "0xDECBD4", Offset = "0xDECBD4", VA = "0xDECBD4")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6003122")]
		[Address(RVA = "0xDECE48", Offset = "0xDECE48", VA = "0xDECE48", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0xDECFAC", Offset = "0xDECFAC", VA = "0xDECFAC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003124")]
		[Address(RVA = "0xDECFE4", Offset = "0xDECFE4", VA = "0xDECFE4")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003125")]
		[Address(RVA = "0xDED11C", Offset = "0xDED11C", VA = "0xDED11C")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003126")]
		[Address(RVA = "0xDED254", Offset = "0xDED254", VA = "0xDED254")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6003127")]
		[Address(RVA = "0xDED3B8", Offset = "0xDED3B8", VA = "0xDED3B8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6003128")]
		[Address(RVA = "0xDED4A8", Offset = "0xDED4A8", VA = "0xDED4A8")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6003129")]
		[Address(RVA = "0xDED4FC", Offset = "0xDED4FC", VA = "0xDED4FC")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x600312A")]
		[Address(RVA = "0xDED640", Offset = "0xDED640", VA = "0xDED640")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600312B")]
		[Address(RVA = "0xDED764", Offset = "0xDED764", VA = "0xDED764")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600312C")]
		[Address(RVA = "0xDED878", Offset = "0xDED878", VA = "0xDED878")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600312D")]
		[Address(RVA = "0xDED87C", Offset = "0xDED87C", VA = "0xDED87C")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600312E")]
		[Address(RVA = "0xDED9D8", Offset = "0xDED9D8", VA = "0xDED9D8")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x2000815")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0xDEB5A8", Offset = "0xDEB5A8", VA = "0xDEB5A8")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0xDEB770", Offset = "0xDEB770", VA = "0xDEB770")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0xDEB7C8", Offset = "0xDEB7C8", VA = "0xDEB7C8")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0xDEB7D8", Offset = "0xDEB7D8", VA = "0xDEB7D8")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0xDEB7E8", Offset = "0xDEB7E8", VA = "0xDEB7E8")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0xDEB8EC", Offset = "0xDEB8EC", VA = "0xDEB8EC")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0xDEB8FC", Offset = "0xDEB8FC", VA = "0xDEB8FC")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0xDEB90C", Offset = "0xDEB90C", VA = "0xDEB90C")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0xDEB928", Offset = "0xDEB928", VA = "0xDEB928")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0xDEB974", Offset = "0xDEB974", VA = "0xDEB974")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0xDEB984", Offset = "0xDEB984", VA = "0xDEB984")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0xDEB9C8", Offset = "0xDEB9C8", VA = "0xDEB9C8")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0xDEBA84", Offset = "0xDEBA84", VA = "0xDEBA84")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0xDEBC50", Offset = "0xDEBC50", VA = "0xDEBC50")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0xDEBC8C", Offset = "0xDEBC8C", VA = "0xDEBC8C")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0xDEBDC4", Offset = "0xDEBDC4", VA = "0xDEBDC4")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0xDE0EB4", Offset = "0xDE0EB4", VA = "0xDE0EB4")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x200031C")]
public class StateAudio : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000816")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35068", Offset = "0xB35068")]
	private sealed class <ClipCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string clipName;

		[Token(Token = "0x4002FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioOptions options;

		[Token(Token = "0x4002FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x170004D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003136")]
			[Address(RVA = "0xD5C844", Offset = "0xD5C844", VA = "0xD5C844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003138")]
			[Address(RVA = "0xD5C8AC", Offset = "0xD5C8AC", VA = "0xD5C8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003133")]
		[Address(RVA = "0xD5C754", Offset = "0xD5C754", VA = "0xD5C754")]
		[DebuggerHidden]
		public <ClipCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6003134")]
		[Address(RVA = "0xD5C78C", Offset = "0xD5C78C", VA = "0xD5C78C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003135")]
		[Address(RVA = "0xD5C790", Offset = "0xD5C790", VA = "0xD5C790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003137")]
		[Address(RVA = "0xD5C84C", Offset = "0xD5C84C", VA = "0xD5C84C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer mixer;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot[] snapshots;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource[] sources;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool initialized;

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0xD5C2C4", Offset = "0xD5C2C4", VA = "0xD5C2C4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0xD5C318", Offset = "0xD5C318", VA = "0xD5C318", Slot = "5")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0xD5C3D0", Offset = "0xD5C3D0", VA = "0xD5C3D0")]
	private void InitSources()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0xD5C4FC", Offset = "0xD5C4FC", VA = "0xD5C4FC", Slot = "6")]
	protected virtual AudioClip GetAudio(string audioGroup)
	{
		return null;
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0xD5C55C", Offset = "0xD5C55C", VA = "0xD5C55C", Slot = "7")]
	protected virtual AudioSource GetSource(string audioGroup)
	{
		return null;
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0xD5C5BC", Offset = "0xD5C5BC", VA = "0xD5C5BC")]
	public void ToggleMusic(bool toggle)
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0xD5C5F0", Offset = "0xD5C5F0", VA = "0xD5C5F0", Slot = "8")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xD5C5F4", Offset = "0xD5C5F4", VA = "0xD5C5F4")]
	public void CoroutineLoop(string clipName, float delay, out Coroutine coroutine)
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xD5C690", Offset = "0xD5C690", VA = "0xD5C690")]
	public void CoroutineLoop(string clipName, float delay, AudioOptions options, out Coroutine coroutine)
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0xD5C6C8", Offset = "0xD5C6C8", VA = "0xD5C6C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D084", Offset = "0xB4D084")]
	private IEnumerator ClipCoroutine(string clipName, float delay, AudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0xD5C780", Offset = "0xD5C780", VA = "0xD5C780")]
	public new void StopCoroutine(Coroutine coroutine)
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0xD5C784", Offset = "0xD5C784", VA = "0xD5C784")]
	public StateAudio()
	{
	}
}
[Token(Token = "0x200031D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32ECC", Offset = "0xB32ECC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32ECC", Offset = "0xB32ECC")]
public class CanAudio : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidbody;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string audioClip_01;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float velocityThreshold;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D614", Offset = "0xB3D614")]
	public AudioRolloffMode rollOffMode;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxDistance;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int spatialBlend;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int layer;

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0xD78624", Offset = "0xD78624", VA = "0xD78624")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0xD786C0", Offset = "0xD786C0", VA = "0xD786C0")]
	private void Play()
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0xD787B8", Offset = "0xD787B8", VA = "0xD787B8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0xD78838", Offset = "0xD78838", VA = "0xD78838")]
	public CanAudio()
	{
	}
}
[Token(Token = "0x200031E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32F58", Offset = "0xB32F58")]
public class DartAudio : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string audioClip_01;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string audioClip_02;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D64C", Offset = "0xB3D64C")]
	public AudioRolloffMode rollOffMode;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxDistance;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spatialBlend;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int layer;

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0xD4CFD8", Offset = "0xD4CFD8", VA = "0xD4CFD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0xD4D074", Offset = "0xD4D074", VA = "0xD4D074")]
	public void Play(bool alternateClip = false)
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xD4D1A8", Offset = "0xD4D1A8", VA = "0xD4D1A8")]
	public DartAudio()
	{
	}
}
[Token(Token = "0x200031F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB32FBC", Offset = "0xB32FBC")]
public class GrabbableAudio : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000817")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35078", Offset = "0xB35078")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableAudio <>4__this;

		[Token(Token = "0x170004DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600313C")]
			[Address(RVA = "0xCDA91C", Offset = "0xCDA91C", VA = "0xCDA91C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600313E")]
			[Address(RVA = "0xCDA984", Offset = "0xCDA984", VA = "0xCDA984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0xCDA3AC", Offset = "0xCDA3AC", VA = "0xCDA3AC")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600313A")]
		[Address(RVA = "0xCDA820", Offset = "0xCDA820", VA = "0xCDA820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600313B")]
		[Address(RVA = "0xCDA824", Offset = "0xCDA824", VA = "0xCDA824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0xCDA924", Offset = "0xCDA924", VA = "0xCDA924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000818")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35088", Offset = "0xB35088")]
	private sealed class <OnSoundComplete>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSourceHelper audioSourceHelper;

		[Token(Token = "0x170004DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003142")]
			[Address(RVA = "0xCDA7B0", Offset = "0xCDA7B0", VA = "0xCDA7B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003144")]
			[Address(RVA = "0xCDA818", Offset = "0xCDA818", VA = "0xCDA818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600313F")]
		[Address(RVA = "0xCDA5D8", Offset = "0xCDA5D8", VA = "0xCDA5D8")]
		[DebuggerHidden]
		public <OnSoundComplete>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6003140")]
		[Address(RVA = "0xCDA6EC", Offset = "0xCDA6EC", VA = "0xCDA6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003141")]
		[Address(RVA = "0xCDA6F0", Offset = "0xCDA6F0", VA = "0xCDA6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003143")]
		[Address(RVA = "0xCDA7B8", Offset = "0xCDA7B8", VA = "0xCDA7B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidbody;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string grabClip;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string velocityClip;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float velocityThreshold;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int audioThreshold;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _audioThresholdLimit;

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xCDA2E4", Offset = "0xCDA2E4", VA = "0xCDA2E4")]
	public void Grab()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xCDA33C", Offset = "0xCDA33C", VA = "0xCDA33C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D0E8", Offset = "0xB4D0E8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0xCDA3D8", Offset = "0xCDA3D8", VA = "0xCDA3D8")]
	private void Play()
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xCDA568", Offset = "0xCDA568", VA = "0xCDA568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D14C", Offset = "0xB4D14C")]
	private IEnumerator OnSoundComplete(AudioSourceHelper audioSourceHelper)
	{
		return null;
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0xCDA604", Offset = "0xCDA604", VA = "0xCDA604")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0xCDA6D8", Offset = "0xCDA6D8", VA = "0xCDA6D8")]
	public GrabbableAudio()
	{
	}
}
[Token(Token = "0x2000320")]
public class PlayerAudio : StateAudio
{
	[Token(Token = "0x2000819")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35098", Offset = "0xB35098")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerAudio <>4__this;

		[Token(Token = "0x170004DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003148")]
			[Address(RVA = "0xC4DC50", Offset = "0xC4DC50", VA = "0xC4DC50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600314A")]
			[Address(RVA = "0xC4DCB8", Offset = "0xC4DCB8", VA = "0xC4DCB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003145")]
		[Address(RVA = "0xC4D058", Offset = "0xC4D058", VA = "0xC4D058")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6003146")]
		[Address(RVA = "0xC4DB10", Offset = "0xC4DB10", VA = "0xC4DB10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003147")]
		[Address(RVA = "0xC4DB14", Offset = "0xC4DB14", VA = "0xC4DB14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003149")]
		[Address(RVA = "0xC4DC58", Offset = "0xC4DC58", VA = "0xC4DC58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AircraftControl aircraftControl;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _raceEnded;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private GameSnapshots _currentSnapshot;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _highWind;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _highAltitude;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool _speedFlutter;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _highSpeedThreshold;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _flutterSpeedThreshold;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _highAltitudeThreshhold;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameState _gameState;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly float[] _speedLevel;

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0xC4CFE8", Offset = "0xC4CFE8", VA = "0xC4CFE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D1B0", Offset = "0xB4D1B0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0xC4D084", Offset = "0xC4D084", VA = "0xC4D084", Slot = "5")]
	protected override void Init()
	{
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0xC4D1F8", Offset = "0xC4D1F8", VA = "0xC4D1F8")]
	private void InitGame(AircraftControl control)
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0xC4D200", Offset = "0xC4D200", VA = "0xC4D200", Slot = "6")]
	protected override AudioClip GetAudio(string audioGroup)
	{
		return null;
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0xC4D678", Offset = "0xC4D678", VA = "0xC4D678", Slot = "7")]
	protected override AudioSource GetSource(string group)
	{
		return null;
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0xC4D72C", Offset = "0xC4D72C", VA = "0xC4D72C", Slot = "8")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0xC4D7B4", Offset = "0xC4D7B4", VA = "0xC4D7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0xC4DA84", Offset = "0xC4DA84", VA = "0xC4DA84")]
	public PlayerAudio()
	{
	}
}
[Token(Token = "0x2000321")]
public class ProceduralWind : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AircraftControl player;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource[] proxSources;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] smoothedSamples;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] sampleVelocities;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] volumes;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float wooshVolX;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float wooshSmoothUp;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float wooshSmoothDown;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] finalVolumes;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float finalSmoothingUp;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float finalSmoothingDown;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float combinedProxSmoothing;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D684", Offset = "0xB3D684")]
	private float <CombinedProx>k__BackingField;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float pitchA;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float pitchB;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float pitchBase;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float pitchDifX;

	[Token(Token = "0x4001549")]
	private const int _UP = 0;

	[Token(Token = "0x400154A")]
	private const int _UP_RIGHT = 1;

	[Token(Token = "0x400154B")]
	private const int _RIGHT = 2;

	[Token(Token = "0x400154C")]
	private const int _DOWN_RIGHT = 3;

	[Token(Token = "0x400154D")]
	private const int _DOWN = 4;

	[Token(Token = "0x400154E")]
	private const int _DOWN_LEFT = 5;

	[Token(Token = "0x400154F")]
	private const int _LEFT = 6;

	[Token(Token = "0x4001550")]
	private const int _UP_LEFT = 7;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] sorter;

	[Token(Token = "0x1700020B")]
	public float CombinedProx
	{
		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xC538C0", Offset = "0xC538C0", VA = "0xC538C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D214", Offset = "0xB4D214")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xC538C8", Offset = "0xC538C8", VA = "0xC538C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D224", Offset = "0xB4D224")]
		private set
		{
		}
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0xC538D0", Offset = "0xC538D0", VA = "0xC538D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0xC5396C", Offset = "0xC5396C", VA = "0xC5396C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0xC53A08", Offset = "0xC53A08", VA = "0xC53A08")]
	private void ClearArrays(ScoreData obj)
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xC53A48", Offset = "0xC53A48", VA = "0xC53A48")]
	private void ClearArray(ref float[] array)
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xC53A9C", Offset = "0xC53A9C", VA = "0xC53A9C")]
	private void ZeroSourceVolume()
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xC53B0C", Offset = "0xC53B0C", VA = "0xC53B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xC53EF4", Offset = "0xC53EF4", VA = "0xC53EF4")]
	private void SetSourceValues(int index, float adj1, float center, float adj2)
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xC540F4", Offset = "0xC540F4", VA = "0xC540F4")]
	private void CheapSort()
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0xC541BC", Offset = "0xC541BC", VA = "0xC541BC")]
	public ProceduralWind()
	{
	}
}
[Token(Token = "0x2000322")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33020", Offset = "0xB33020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33020", Offset = "0xB33020")]
public class PropAudio : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string audioClip;

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0xC55288", Offset = "0xC55288", VA = "0xC55288")]
	private void OnTriggerEnter(Collider trigger)
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0xC553BC", Offset = "0xC553BC", VA = "0xC553BC")]
	public PropAudio()
	{
	}
}
[Serializable]
[Token(Token = "0x2000323")]
public class GhostData
{
	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int map;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Dictionary<string, byte[]> data;

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x1175CB8", Offset = "0x1175CB8", VA = "0x1175CB8")]
	public GhostData()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x1175CC0", Offset = "0x1175CC0", VA = "0x1175CC0")]
	public void Merge(GhostData altData)
	{
	}
}
[Token(Token = "0x2000324")]
public class SkinData
{
	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool unlocked;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool seen;

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0xDA6FA0", Offset = "0xDA6FA0", VA = "0xDA6FA0")]
	public SkinData(bool vUnlocked, bool vSeen)
	{
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0xDA6FE4", Offset = "0xDA6FE4", VA = "0xDA6FE4")]
	public void Merge(SkinData altData)
	{
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0xDA7018", Offset = "0xDA7018", VA = "0xDA7018")]
	public SkinData()
	{
	}
}
[Token(Token = "0x2000325")]
public class CloudStorageTransfer
{
	[Token(Token = "0x200081A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350A8", Offset = "0xB350A8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x4002FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Result<byte[]>> <>9__1;

		[Token(Token = "0x600314B")]
		[Address(RVA = "0xD82CD8", Offset = "0xD82CD8", VA = "0xD82CD8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600314C")]
		[Address(RVA = "0xD82ECC", Offset = "0xD82ECC", VA = "0xD82ECC")]
		internal void <LoadUserData>b__0(Result existsResult)
		{
		}

		[Token(Token = "0x600314D")]
		[Address(RVA = "0xD83078", Offset = "0xD83078", VA = "0xD83078")]
		internal void <LoadUserData>b__1(Result<byte[]> loadResult)
		{
		}
	}

	[Token(Token = "0x200081B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350B8", Offset = "0xB350B8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x4002FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Result<byte[]>> <>9__1;

		[Token(Token = "0x600314E")]
		[Address(RVA = "0xD82E50", Offset = "0xD82E50", VA = "0xD82E50")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600314F")]
		[Address(RVA = "0xD8318C", Offset = "0xD8318C", VA = "0xD8318C")]
		internal void <LoadBackupUserData>b__0(Result existsResult)
		{
		}

		[Token(Token = "0x6003150")]
		[Address(RVA = "0xD83350", Offset = "0xD83350", VA = "0xD83350")]
		internal void <LoadBackupUserData>b__1(Result<byte[]> loadResult)
		{
		}
	}

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IServer remoteInterface;

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0xD82B74", Offset = "0xD82B74", VA = "0xD82B74")]
	public static void TransferCloudData(Action callback)
	{
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0xD82B84", Offset = "0xD82B84", VA = "0xD82B84")]
	private static void LoadUserData(Action callback)
	{
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0xD82CE0", Offset = "0xD82CE0", VA = "0xD82CE0")]
	private static void LoadBackupUserData(Action callback)
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0xD82E58", Offset = "0xD82E58", VA = "0xD82E58")]
	public CloudStorageTransfer()
	{
	}
}
[Token(Token = "0x2000326")]
public class DataStoreManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static DataStoreManager _instance;

	[Token(Token = "0x1700020C")]
	public static DataStoreManager Instance
	{
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xD4D1D8", Offset = "0xD4D1D8", VA = "0xD4D1D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xD4D760", Offset = "0xD4D760", VA = "0xD4D760")]
		private set
		{
		}
	}

	[Token(Token = "0x140000A2")]
	public static event Action PreLoginInitiate
	{
		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD4D318", Offset = "0xD4D318", VA = "0xD4D318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D234", Offset = "0xB4D234")]
		add
		{
		}
		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xD4D3CC", Offset = "0xD4D3CC", VA = "0xD4D3CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D244", Offset = "0xB4D244")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A3")]
	public static event Action<Action> LoginValidation
	{
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xD4D480", Offset = "0xD4D480", VA = "0xD4D480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D254", Offset = "0xB4D254")]
		add
		{
		}
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xD4D538", Offset = "0xD4D538", VA = "0xD4D538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D264", Offset = "0xB4D264")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A4")]
	public static event Action OnLoginComplete
	{
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xD4D5F0", Offset = "0xD4D5F0", VA = "0xD4D5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D274", Offset = "0xB4D274")]
		add
		{
		}
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xD4D6A8", Offset = "0xD4D6A8", VA = "0xD4D6A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D284", Offset = "0xB4D284")]
		remove
		{
		}
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0xD4D29C", Offset = "0xD4D29C", VA = "0xD4D29C")]
	public bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0xD4D7B4", Offset = "0xD4D7B4", VA = "0xD4D7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0xD4D7B8", Offset = "0xD4D7B8", VA = "0xD4D7B8")]
	private void Init()
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0xD4D878", Offset = "0xD4D878", VA = "0xD4D878")]
	private void Login()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0xD4D8F4", Offset = "0xD4D8F4", VA = "0xD4D8F4")]
	private static void OnFocusChange(bool isFocused)
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0xD4D90C", Offset = "0xD4D90C", VA = "0xD4D90C")]
	private static void OnUserScoreUpdated(ScoreData data)
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0xD4DA0C", Offset = "0xD4DA0C", VA = "0xD4DA0C")]
	private static void OnUserSkinUpdated(SkinPair skinPair)
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0xD4DA14", Offset = "0xD4DA14", VA = "0xD4DA14")]
	private void OnUserAdventureUpdated(List<bool> obtained)
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0xD4DAC8", Offset = "0xD4DAC8", VA = "0xD4DAC8")]
	public DataStoreManager()
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0xD4DAD0", Offset = "0xD4DAD0", VA = "0xD4DAD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D294", Offset = "0xB4D294")]
	private void <Login>b__16_0(Result result)
	{
	}
}
[Token(Token = "0x2000327")]
public static class GhostDataAssistant
{
	[Token(Token = "0x200081C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350C8", Offset = "0xB350C8")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4002FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool backupData;

		[Token(Token = "0x4002FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result> callback;

		[Token(Token = "0x6003151")]
		[Address(RVA = "0x1176654", Offset = "0x1176654", VA = "0x1176654")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6003152")]
		[Address(RVA = "0x1176E4C", Offset = "0x1176E4C", VA = "0x1176E4C")]
		internal void <SaveData>b__0(Result saveResult)
		{
		}
	}

	[Token(Token = "0x200081D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350D8", Offset = "0xB350D8")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4002FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Result> callback;

		[Token(Token = "0x6003153")]
		[Address(RVA = "0x117681C", Offset = "0x117681C", VA = "0x117681C")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6003154")]
		[Address(RVA = "0x1176F4C", Offset = "0x1176F4C", VA = "0x1176F4C")]
		internal void <SaveLocalData>b__0(Result saveResult)
		{
		}
	}

	[Token(Token = "0x200081E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350E8", Offset = "0xB350E8")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4002FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4002FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int map;

		[Token(Token = "0x6003155")]
		[Address(RVA = "0x1176978", Offset = "0x1176978", VA = "0x1176978")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6003156")]
		[Address(RVA = "0x1176FC0", Offset = "0x1176FC0", VA = "0x1176FC0")]
		internal void <LoadData>b__0(Result loadResult)
		{
		}
	}

	[Token(Token = "0x200081F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350F8", Offset = "0xB350F8")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4002FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4002FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int map;

		[Token(Token = "0x4002FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result> callback;

		[Token(Token = "0x6003157")]
		[Address(RVA = "0x1176BE0", Offset = "0x1176BE0", VA = "0x1176BE0")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6003158")]
		[Address(RVA = "0x1177048", Offset = "0x1177048", VA = "0x1177048")]
		internal void <LoadLocalData>b__0(Result<byte[]> loadResult)
		{
		}
	}

	[Token(Token = "0x2000820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35108", Offset = "0xB35108")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int map;

		[Token(Token = "0x4002FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fileName;

		[Token(Token = "0x4002FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Result<GhostData>> <>9__1;

		[Token(Token = "0x6003159")]
		[Address(RVA = "0x1176CAC", Offset = "0x1176CAC", VA = "0x1176CAC")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x600315A")]
		[Address(RVA = "0x1177238", Offset = "0x1177238", VA = "0x1177238")]
		internal void <LoadRemoteData>b__0(Result<GhostData> fetchResult)
		{
		}

		[Token(Token = "0x600315B")]
		[Address(RVA = "0x117735C", Offset = "0x117735C", VA = "0x117735C")]
		internal void <LoadRemoteData>b__1(Result<GhostData> backupResult)
		{
		}
	}

	[Token(Token = "0x2000821")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35118", Offset = "0xB35118")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4002FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int map;

		[Token(Token = "0x4002FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Result result;

		[Token(Token = "0x4002FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Result> callback;

		[Token(Token = "0x4002FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<Result<byte[]>> <>9__1;

		[Token(Token = "0x600315C")]
		[Address(RVA = "0x1176E40", Offset = "0x1176E40", VA = "0x1176E40")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600315D")]
		[Address(RVA = "0x11774DC", Offset = "0x11774DC", VA = "0x11774DC")]
		internal void <LoadBackupData>b__0(Result backupExistsResult)
		{
		}

		[Token(Token = "0x600315E")]
		[Address(RVA = "0x1177710", Offset = "0x1177710", VA = "0x1177710")]
		internal void <LoadBackupData>b__1(Result<byte[]> backupResult)
		{
		}
	}

	[Token(Token = "0x400155D")]
	private const int _MAP_AMOUNT = 5;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool init;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, GhostData> _ghostData;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ILocal _localInterface;

	[Token(Token = "0x1700020D")]
	public static ILocal LocalInterface
	{
		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1175E18", Offset = "0x1175E18", VA = "0x1175E18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x1175EA4", Offset = "0x1175EA4", VA = "0x1175EA4")]
	public static void Init()
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x11760E4", Offset = "0x11760E4", VA = "0x11760E4")]
	public static byte[] Load(string dataName, int map)
	{
		return null;
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x11762AC", Offset = "0x11762AC", VA = "0x11762AC")]
	public static void Save(string dataName, byte[] data, int map)
	{
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x11763F4", Offset = "0x11763F4", VA = "0x11763F4")]
	public static void SaveData()
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x11764E8", Offset = "0x11764E8", VA = "0x11764E8")]
	public static void SaveData(string fileName, int map, bool backupData = false, [Optional] Action<Result> callback)
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x117665C", Offset = "0x117665C", VA = "0x117665C")]
	private static void SaveLocalData(string fileName, int map, bool backupData, Action<Result> callback)
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x1176020", Offset = "0x1176020", VA = "0x1176020")]
	public static void LoadData()
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x1176824", Offset = "0x1176824", VA = "0x1176824")]
	public static void LoadData(string fileName, int map)
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x1176980", Offset = "0x1176980", VA = "0x1176980")]
	private static void LoadLocalData(string fileName, int map, Action<Result> callback)
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x1176BE8", Offset = "0x1176BE8", VA = "0x1176BE8")]
	private static void LoadRemoteData(string fileName, int map)
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x1176CB4", Offset = "0x1176CB4", VA = "0x1176CB4")]
	private static void LoadBackupData(string fileName, int map, Action<Result> callback)
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x11761D4", Offset = "0x11761D4", VA = "0x11761D4")]
	public static bool ContainsData(string key)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000328")]
public class DataStoreInitializer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001717")]
	[Address(RVA = "0xD4D1BC", Offset = "0xD4D1BC", VA = "0xD4D1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0xD4D310", Offset = "0xD4D310", VA = "0xD4D310")]
	public DataStoreInitializer()
	{
	}
}
[Token(Token = "0x2000329")]
public class DataValidation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000822")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35128", Offset = "0xB35128")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DataValidation <>4__this;

		[Token(Token = "0x4002FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x600315F")]
		[Address(RVA = "0xD4E28C", Offset = "0xD4E28C", VA = "0xD4E28C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6003160")]
		[Address(RVA = "0xD4F4BC", Offset = "0xD4F4BC", VA = "0xD4F4BC")]
		internal void <PostLoginValidate>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000823")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35138", Offset = "0xB35138")]
	private sealed class <>c
	{
		[Token(Token = "0x4002FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Result<string>> <>9__11_0;

		[Token(Token = "0x6003162")]
		[Address(RVA = "0xD4F420", Offset = "0xD4F420", VA = "0xD4F420")]
		public <>c()
		{
		}

		[Token(Token = "0x6003163")]
		[Address(RVA = "0xD4F428", Offset = "0xD4F428", VA = "0xD4F428")]
		internal void <ValidatePlayerData>b__11_0(Result<string> result)
		{
		}
	}

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwatchInfo swatchInfo;

	[Token(Token = "0x140000A5")]
	public static event Action PreValidateInitiate
	{
		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD4DD70", Offset = "0xD4DD70", VA = "0xD4DD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D2A4", Offset = "0xB4D2A4")]
		add
		{
		}
		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD4DE24", Offset = "0xD4DE24", VA = "0xD4DE24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D2B4", Offset = "0xB4D2B4")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A6")]
	public static event Action OnValidateComplete
	{
		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD4DED8", Offset = "0xD4DED8", VA = "0xD4DED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D2C4", Offset = "0xB4D2C4")]
		add
		{
		}
		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD4DF90", Offset = "0xD4DF90", VA = "0xD4DF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D2D4", Offset = "0xB4D2D4")]
		remove
		{
		}
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0xD4E048", Offset = "0xD4E048", VA = "0xD4E048")]
	private void Awake()
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0xD4E0F4", Offset = "0xD4E0F4", VA = "0xD4E0F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600171F")]
	[Address(RVA = "0xD4E1A0", Offset = "0xD4E1A0", VA = "0xD4E1A0")]
	private void PreLoginValidate()
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0xD4E1A4", Offset = "0xD4E1A4", VA = "0xD4E1A4")]
	private void PostLoginValidate(Action callback)
	{
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0xD4E294", Offset = "0xD4E294", VA = "0xD4E294")]
	private void ValidatePlayerData()
	{
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0xD4E854", Offset = "0xD4E854", VA = "0xD4E854")]
	private void ValidateDataPrefs()
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0xD4F2D8", Offset = "0xD4F2D8", VA = "0xD4F2D8")]
	private void ValidateFixes()
	{
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0xD4F2DC", Offset = "0xD4F2DC", VA = "0xD4F2DC")]
	private void ValidateSkinsFromPrefs()
	{
	}

	[Token(Token = "0x6001725")]
	[Address(RVA = "0xD4F2E0", Offset = "0xD4F2E0", VA = "0xD4F2E0")]
	public void TransferSkinFromPref(int skin, int swatch, bool seen, bool owned)
	{
	}

	[Token(Token = "0x6001726")]
	[Address(RVA = "0xD4F330", Offset = "0xD4F330", VA = "0xD4F330")]
	public void LeaderboardTest()
	{
	}

	[Token(Token = "0x6001727")]
	[Address(RVA = "0xD4F3B4", Offset = "0xD4F3B4", VA = "0xD4F3B4")]
	public DataValidation()
	{
	}
}
[Token(Token = "0x200032A")]
public class FPSCounter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fpsParent;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string fpsCounterName;

	[Token(Token = "0x6001728")]
	[Address(RVA = "0xE8DB50", Offset = "0xE8DB50", VA = "0xE8DB50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0xE8DB54", Offset = "0xE8DB54", VA = "0xE8DB54")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x200032B")]
public class FocusDetector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000824")]
	public delegate void FocusChange(bool isFocused);

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _debug;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _useAlternateFocusHandling;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _hasInputFocus;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool _hasVrFocus;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime? _inputFocusLost;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DateTime? _vrFocusLost;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _focusState;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool _hasXrFocus;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DateTime? _xrFocusLost;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _init;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime? _focusLost;

	[Token(Token = "0x1700020E")]
	public static bool hasFocus
	{
		[Token(Token = "0x6001730")]
		[Address(RVA = "0xDCA26C", Offset = "0xDCA26C", VA = "0xDCA26C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x140000A7")]
	public static event FocusChange OnFocusChanged
	{
		[Token(Token = "0x600172A")]
		[Address(RVA = "0xDC9CD4", Offset = "0xDC9CD4", VA = "0xDC9CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D2E4", Offset = "0xB4D2E4")]
		add
		{
		}
		[Token(Token = "0x600172B")]
		[Address(RVA = "0xDC9DC0", Offset = "0xDC9DC0", VA = "0xDC9DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D2F4", Offset = "0xB4D2F4")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A8")]
	public static event Action<bool> OnInputFocusChange
	{
		[Token(Token = "0x600172C")]
		[Address(RVA = "0xDC9EAC", Offset = "0xDC9EAC", VA = "0xDC9EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D304", Offset = "0xB4D304")]
		add
		{
		}
		[Token(Token = "0x600172D")]
		[Address(RVA = "0xDC9F9C", Offset = "0xDC9F9C", VA = "0xDC9F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D314", Offset = "0xB4D314")]
		remove
		{
		}
	}

	[Token(Token = "0x140000A9")]
	public static event Action<bool> OnVrFocusChange
	{
		[Token(Token = "0x600172E")]
		[Address(RVA = "0xDCA08C", Offset = "0xDCA08C", VA = "0xDCA08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D324", Offset = "0xB4D324")]
		add
		{
		}
		[Token(Token = "0x600172F")]
		[Address(RVA = "0xDCA17C", Offset = "0xDCA17C", VA = "0xDCA17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D334", Offset = "0xB4D334")]
		remove
		{
		}
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0xDCA2D4", Offset = "0xDCA2D4", VA = "0xDCA2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0xDCA348", Offset = "0xDCA348", VA = "0xDCA348")]
	private void Update()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0xDCA6CC", Offset = "0xDCA6CC", VA = "0xDCA6CC")]
	public void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xDCAB08", Offset = "0xDCAB08", VA = "0xDCAB08")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xDCA798", Offset = "0xDCA798", VA = "0xDCA798")]
	private void FocusLost()
	{
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xDCA924", Offset = "0xDCA924", VA = "0xDCA924")]
	private void FocusGained()
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xDCADFC", Offset = "0xDCADFC", VA = "0xDCADFC")]
	public FocusDetector()
	{
	}
}
[Serializable]
[Token(Token = "0x200032C")]
public class TextureMipInfo
{
	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D texture;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mipBias;

	[Token(Token = "0x6001739")]
	[Address(RVA = "0xCB2290", Offset = "0xCB2290", VA = "0xCB2290")]
	public TextureMipInfo()
	{
	}
}
[Token(Token = "0x200032D")]
public class TextureMipSetter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TextureMipInfo> textures;

	[Token(Token = "0x600173A")]
	[Address(RVA = "0xCB2298", Offset = "0xCB2298", VA = "0xCB2298")]
	private void Awake()
	{
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0xCB229C", Offset = "0xCB229C", VA = "0xCB229C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4D344", Offset = "0xB4D344")]
	private void Apply()
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0xCB2374", Offset = "0xCB2374", VA = "0xCB2374")]
	public TextureMipSetter()
	{
	}
}
[Token(Token = "0x200032E")]
public class Obfuscator
{
	[Token(Token = "0x4001577")]
	private const int _SEED = 1313;

	[Token(Token = "0x4001578")]
	private const int _SHIFT = 13;

	[Token(Token = "0x600173D")]
	[Address(RVA = "0x1053288", Offset = "0x1053288", VA = "0x1053288")]
	public static string Obfuscate(string str)
	{
		return null;
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0x105340C", Offset = "0x105340C", VA = "0x105340C")]
	public static string DeObfuscate(string str)
	{
		return null;
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x1053290", Offset = "0x1053290", VA = "0x1053290")]
	private static string ShiftString(string str, bool toObfuscate)
	{
		return null;
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x1053414", Offset = "0x1053414", VA = "0x1053414")]
	public static byte[] Obfuscate(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x105355C", Offset = "0x105355C", VA = "0x105355C")]
	public static byte[] DeObfuscate(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x105341C", Offset = "0x105341C", VA = "0x105341C")]
	private static byte[] ShiftBytes(byte[] bytes, bool toObfuscate)
	{
		return null;
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x1053564", Offset = "0x1053564", VA = "0x1053564")]
	public Obfuscator()
	{
	}
}
[Token(Token = "0x200032F")]
public static class PatchNotesHandler
{
	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _init;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<PatchNotesInfo> _patchNotes;

	[Token(Token = "0x6001744")]
	[Address(RVA = "0xCF9558", Offset = "0xCF9558", VA = "0xCF9558")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0xCF977C", Offset = "0xCF977C", VA = "0xCF977C")]
	public static bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xCF9904", Offset = "0xCF9904", VA = "0xCF9904")]
	public static bool Validate(string patchNotesVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xCF99BC", Offset = "0xCF99BC", VA = "0xCF99BC")]
	public static PatchNotesInfo Fetch()
	{
		return null;
	}
}
[Token(Token = "0x2000330")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB330AC", Offset = "0xB330AC")]
public class PatchNotesInfo : ScriptableObject
{
	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D734", Offset = "0xB3D734")]
	public PlatformTarget platform;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D76C", Offset = "0xB3D76C")]
	public string compactVersion;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D7A4", Offset = "0xB3D7A4")]
	public string title;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D7DC", Offset = "0xB3D7DC")]
	public string blurb;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3D814", Offset = "0xB3D814")]
	public string[] points;

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xCF9B64", Offset = "0xCF9B64", VA = "0xCF9B64")]
	public PatchNotesInfo()
	{
	}
}
[Token(Token = "0x2000331")]
public class EmptyPlatform : IPlatformTarget
{
	[Token(Token = "0x600174A")]
	[Address(RVA = "0xD57E98", Offset = "0xD57E98", VA = "0xD57E98", Slot = "4")]
	public PlatformTarget GetPlatformTarget()
	{
		return default(PlatformTarget);
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xD57EA0", Offset = "0xD57EA0", VA = "0xD57EA0", Slot = "5")]
	public ActiveDevice GetDevice()
	{
		return default(ActiveDevice);
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xD57F00", Offset = "0xD57F00", VA = "0xD57F00", Slot = "6")]
	public string GetTitleTag()
	{
		return null;
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xD57F60", Offset = "0xD57F60", VA = "0xD57F60", Slot = "7")]
	public string GetTutorialTag()
	{
		return null;
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xD57FC0", Offset = "0xD57FC0", VA = "0xD57FC0", Slot = "8")]
	public string GetMapTag()
	{
		return null;
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0xD58020", Offset = "0xD58020", VA = "0xD58020", Slot = "9")]
	public string GetLobbyTag()
	{
		return null;
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0xD58080", Offset = "0xD58080", VA = "0xD58080", Slot = "10")]
	public string GetShortString()
	{
		return null;
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0xD580E0", Offset = "0xD580E0", VA = "0xD580E0", Slot = "11")]
	public string[] GetSceneList()
	{
		return null;
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0xD58188", Offset = "0xD58188", VA = "0xD58188", Slot = "12")]
	public IBasicInput GetBasicInput()
	{
		return null;
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0xD581E8", Offset = "0xD581E8", VA = "0xD581E8", Slot = "13")]
	public void GetInputs(out IVRHand left, out IVRHand right, out IVRHead head)
	{
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0xD58248", Offset = "0xD58248", VA = "0xD58248", Slot = "14")]
	public void GetInputs(out IVRNub nub)
	{
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0xD582A8", Offset = "0xD582A8", VA = "0xD582A8", Slot = "15")]
	public bool IsConnected(string deviceModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0xD58308", Offset = "0xD58308", VA = "0xD58308", Slot = "16")]
	public bool UseGroupMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0xD58368", Offset = "0xD58368", VA = "0xD58368", Slot = "17")]
	public string PlayerTag()
	{
		return null;
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0xD583C8", Offset = "0xD583C8", VA = "0xD583C8", Slot = "18")]
	public string FriendTag()
	{
		return null;
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0xD58428", Offset = "0xD58428", VA = "0xD58428", Slot = "19")]
	public bool HandsSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0xD58488", Offset = "0xD58488", VA = "0xD58488", Slot = "20")]
	public bool NubSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0xD584E8", Offset = "0xD584E8", VA = "0xD584E8")]
	public EmptyPlatform()
	{
	}
}
[Token(Token = "0x2000332")]
public class GearPlatform : IPlatformTarget
{
	[Token(Token = "0x600175C")]
	[Address(RVA = "0x11752AC", Offset = "0x11752AC", VA = "0x11752AC", Slot = "4")]
	public PlatformTarget GetPlatformTarget()
	{
		return default(PlatformTarget);
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x11752B4", Offset = "0x11752B4", VA = "0x11752B4", Slot = "12")]
	public IBasicInput GetBasicInput()
	{
		return null;
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x1175310", Offset = "0x1175310", VA = "0x1175310", Slot = "13")]
	public void GetInputs(out IVRHand left, out IVRHand right, out IVRHead head)
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x1175320", Offset = "0x1175320", VA = "0x1175320", Slot = "14")]
	public void GetInputs(out IVRNub nub)
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x1175380", Offset = "0x1175380", VA = "0x1175380", Slot = "15")]
	public bool IsConnected(string deviceModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x11753DC", Offset = "0x11753DC", VA = "0x11753DC", Slot = "16")]
	public bool UseGroupMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x11753E4", Offset = "0x11753E4", VA = "0x11753E4", Slot = "17")]
	public string PlayerTag()
	{
		return null;
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x117542C", Offset = "0x117542C", VA = "0x117542C", Slot = "18")]
	public string FriendTag()
	{
		return null;
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x1175474", Offset = "0x1175474", VA = "0x1175474", Slot = "19")]
	public bool HandsSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x117547C", Offset = "0x117547C", VA = "0x117547C", Slot = "20")]
	public bool NubSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x1175484", Offset = "0x1175484", VA = "0x1175484", Slot = "5")]
	public ActiveDevice GetDevice()
	{
		return default(ActiveDevice);
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x117548C", Offset = "0x117548C", VA = "0x117548C", Slot = "6")]
	public string GetTitleTag()
	{
		return null;
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x11754D4", Offset = "0x11754D4", VA = "0x11754D4", Slot = "7")]
	public string GetTutorialTag()
	{
		return null;
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x117551C", Offset = "0x117551C", VA = "0x117551C", Slot = "8")]
	public string GetMapTag()
	{
		return null;
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x1175564", Offset = "0x1175564", VA = "0x1175564", Slot = "9")]
	public string GetLobbyTag()
	{
		return null;
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x11755AC", Offset = "0x11755AC", VA = "0x11755AC", Slot = "10")]
	public string GetShortString()
	{
		return null;
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x11755F4", Offset = "0x11755F4", VA = "0x11755F4", Slot = "11")]
	public string[] GetSceneList()
	{
		return null;
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x11757A0", Offset = "0x11757A0", VA = "0x11757A0")]
	public GearPlatform()
	{
	}
}
[Token(Token = "0x2000333")]
public class GoPlatform : IPlatformTarget
{
	[Token(Token = "0x600176E")]
	[Address(RVA = "0xCD84DC", Offset = "0xCD84DC", VA = "0xCD84DC", Slot = "4")]
	public PlatformTarget GetPlatformTarget()
	{
		return default(PlatformTarget);
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0xCD84E4", Offset = "0xCD84E4", VA = "0xCD84E4", Slot = "12")]
	public IBasicInput GetBasicInput()
	{
		return null;
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0xCD8540", Offset = "0xCD8540", VA = "0xCD8540", Slot = "13")]
	public void GetInputs(out IVRHand left, out IVRHand right, out IVRHead head)
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xCD8550", Offset = "0xCD8550", VA = "0xCD8550", Slot = "14")]
	public void GetInputs(out IVRNub nub)
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xCD85B0", Offset = "0xCD85B0", VA = "0xCD85B0", Slot = "15")]
	public bool IsConnected(string deviceModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xCD860C", Offset = "0xCD860C", VA = "0xCD860C", Slot = "16")]
	public bool UseGroupMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xCD8614", Offset = "0xCD8614", VA = "0xCD8614", Slot = "17")]
	public string PlayerTag()
	{
		return null;
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xCD865C", Offset = "0xCD865C", VA = "0xCD865C", Slot = "18")]
	public string FriendTag()
	{
		return null;
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xCD86A4", Offset = "0xCD86A4", VA = "0xCD86A4", Slot = "19")]
	public bool HandsSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0xCD86AC", Offset = "0xCD86AC", VA = "0xCD86AC", Slot = "20")]
	public bool NubSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0xCD86B4", Offset = "0xCD86B4", VA = "0xCD86B4", Slot = "5")]
	public ActiveDevice GetDevice()
	{
		return default(ActiveDevice);
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0xCD86BC", Offset = "0xCD86BC", VA = "0xCD86BC", Slot = "6")]
	public string GetTitleTag()
	{
		return null;
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0xCD8704", Offset = "0xCD8704", VA = "0xCD8704", Slot = "7")]
	public string GetTutorialTag()
	{
		return null;
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0xCD874C", Offset = "0xCD874C", VA = "0xCD874C", Slot = "8")]
	public string GetMapTag()
	{
		return null;
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0xCD8794", Offset = "0xCD8794", VA = "0xCD8794", Slot = "9")]
	public string GetLobbyTag()
	{
		return null;
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0xCD87DC", Offset = "0xCD87DC", VA = "0xCD87DC", Slot = "10")]
	public string GetShortString()
	{
		return null;
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0xCD8824", Offset = "0xCD8824", VA = "0xCD8824", Slot = "11")]
	public string[] GetSceneList()
	{
		return null;
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0xCD89D0", Offset = "0xCD89D0", VA = "0xCD89D0")]
	public GoPlatform()
	{
	}
}
[Token(Token = "0x2000334")]
public interface IPlatformTarget
{
	[Token(Token = "0x6001780")]
	PlatformTarget GetPlatformTarget();

	[Token(Token = "0x6001781")]
	ActiveDevice GetDevice();

	[Token(Token = "0x6001782")]
	string GetTitleTag();

	[Token(Token = "0x6001783")]
	string GetTutorialTag();

	[Token(Token = "0x6001784")]
	string GetMapTag();

	[Token(Token = "0x6001785")]
	string GetLobbyTag();

	[Token(Token = "0x6001786")]
	string GetShortString();

	[Token(Token = "0x6001787")]
	string[] GetSceneList();

	[Token(Token = "0x6001788")]
	IBasicInput GetBasicInput();

	[Token(Token = "0x6001789")]
	void GetInputs(out IVRHand left, out IVRHand right, out IVRHead head);

	[Token(Token = "0x600178A")]
	void GetInputs(out IVRNub nub);

	[Token(Token = "0x600178B")]
	bool IsConnected(string deviceModel);

	[Token(Token = "0x600178C")]
	bool UseGroupMode();

	[Token(Token = "0x600178D")]
	string PlayerTag();

	[Token(Token = "0x600178E")]
	string FriendTag();

	[Token(Token = "0x600178F")]
	bool HandsSupported();

	[Token(Token = "0x6001790")]
	bool NubSupported();
}
[Token(Token = "0x2000335")]
public class RiftPlatform : IPlatformTarget
{
	[Token(Token = "0x6001791")]
	[Address(RVA = "0xBEAC28", Offset = "0xBEAC28", VA = "0xBEAC28", Slot = "4")]
	public PlatformTarget GetPlatformTarget()
	{
		return default(PlatformTarget);
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0xBEAC30", Offset = "0xBEAC30", VA = "0xBEAC30", Slot = "12")]
	public IBasicInput GetBasicInput()
	{
		return null;
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0xBEAC8C", Offset = "0xBEAC8C", VA = "0xBEAC8C", Slot = "13")]
	public void GetInputs(out IVRHand left, out IVRHand right, out IVRHead head)
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0xBEAD48", Offset = "0xBEAD48", VA = "0xBEAD48", Slot = "14")]
	public void GetInputs(out IVRNub nub)
	{
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0xBEAD50", Offset = "0xBEAD50", VA = "0xBEAD50", Slot = "15")]
	public bool IsConnected(string deviceModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0xBEADAC", Offset = "0xBEADAC", VA = "0xBEADAC", Slot = "16")]
	public bool UseGroupMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0xBEADB4", Offset = "0xBEADB4", VA = "0xBEADB4", Slot = "17")]
	public string PlayerTag()
	{
		return null;
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xBEADFC", Offset = "0xBEADFC", VA = "0xBEADFC", Slot = "18")]
	public string FriendTag()
	{
		return null;
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0xBEAE44", Offset = "0xBEAE44", VA = "0xBEAE44", Slot = "19")]
	public bool HandsSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0xBEAE4C", Offset = "0xBEAE4C", VA = "0xBEAE4C", Slot = "20")]
	public bool NubSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0xBEAE54", Offset = "0xBEAE54", VA = "0xBEAE54", Slot = "5")]
	public ActiveDevice GetDevice()
	{
		return default(ActiveDevice);
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0xBEAE5C", Offset = "0xBEAE5C", VA = "0xBEAE5C", Slot = "6")]
	public string GetTitleTag()
	{
		return null;
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0xBEAEA4", Offset = "0xBEAEA4", VA = "0xBEAEA4", Slot = "7")]
	public string GetTutorialTag()
	{
		return null;
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0xBEAEEC", Offset = "0xBEAEEC", VA = "0xBEAEEC", Slot = "8")]
	public string GetMapTag()
	{
		return null;
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xBEAF34", Offset = "0xBEAF34", VA = "0xBEAF34", Slot = "9")]
	public string GetLobbyTag()
	{
		return null;
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xBEAF7C", Offset = "0xBEAF7C", VA = "0xBEAF7C", Slot = "10")]
	public string GetShortString()
	{
		return null;
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xBEAFC4", Offset = "0xBEAFC4", VA = "0xBEAFC4", Slot = "11")]
	public string[] GetSceneList()
	{
		return null;
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xBEB1A4", Offset = "0xBEB1A4", VA = "0xBEB1A4")]
	public RiftPlatform()
	{
	}
}
[Token(Token = "0x2000336")]
public class VivePlatform : IPlatformTarget
{
	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ViveHand leftHand;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ViveHand rightHand;

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xF5E39C", Offset = "0xF5E39C", VA = "0xF5E39C", Slot = "4")]
	public PlatformTarget GetPlatformTarget()
	{
		return default(PlatformTarget);
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0xF5E3A4", Offset = "0xF5E3A4", VA = "0xF5E3A4", Slot = "12")]
	public IBasicInput GetBasicInput()
	{
		return null;
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0xF5E3AC", Offset = "0xF5E3AC", VA = "0xF5E3AC", Slot = "13")]
	public void GetInputs(out IVRHand left, out IVRHand right, out IVRHead head)
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0xF5E438", Offset = "0xF5E438", VA = "0xF5E438", Slot = "14")]
	public void GetInputs(out IVRNub nub)
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0xF5E440", Offset = "0xF5E440", VA = "0xF5E440", Slot = "15")]
	public bool IsConnected(string deviceModel)
	{
		return default(bool);
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0xF5E49C", Offset = "0xF5E49C", VA = "0xF5E49C", Slot = "16")]
	public bool UseGroupMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0xF5E4A4", Offset = "0xF5E4A4", VA = "0xF5E4A4", Slot = "17")]
	public string PlayerTag()
	{
		return null;
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0xF5E4EC", Offset = "0xF5E4EC", VA = "0xF5E4EC", Slot = "18")]
	public string FriendTag()
	{
		return null;
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0xF5E534", Offset = "0xF5E534", VA = "0xF5E534", Slot = "19")]
	public bool HandsSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0xF5E53C", Offset = "0xF5E53C", VA = "0xF5E53C", Slot = "20")]
	public bool NubSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0xF5E544", Offset = "0xF5E544", VA = "0xF5E544", Slot = "5")]
	public ActiveDevice GetDevice()
	{
		return default(ActiveDevice);
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0xF5E54C", Offset = "0xF5E54C", VA = "0xF5E54C", Slot = "6")]
	public string GetTitleTag()
	{
		return null;
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0xF5E594", Offset = "0xF5E594", VA = "0xF5E594", Slot = "7")]
	public string GetTutorialTag()
	{
		return null;
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0xF5E5DC", Offset = "0xF5E5DC", VA = "0xF5E5DC", Slot = "8")]
	public string GetMapTag()
	{
		return null;
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0xF5E624", Offset = "0xF5E624", VA = "0xF5E624", Slot = "9")]
	public string GetLobbyTag()
	{
		return null;
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0xF5E66C", Offset = "0xF5E66C", VA = "0xF5E66C", Slot = "10")]
	public string GetShortString()
	{
		return null;
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0xF5E6B4", Offset = "0xF5E6B4", VA = "0xF5E6B4", Slot = "11")]
	public string[] GetSceneList()
	{
		return null;
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0xF5E894", Offset = "0xF5E894", VA = "0xF5E894")]
	public VivePlatform()
	{
	}
}
[Token(Token = "0x2000337")]
public class CameraSwitchToggle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cameraTransformToEnable;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string cameraTransformToDisable;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableOnStart;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _child;

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0xD780A8", Offset = "0xD780A8", VA = "0xD780A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0xD7815C", Offset = "0xD7815C", VA = "0xD7815C")]
	private void Start()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0xD78270", Offset = "0xD78270", VA = "0xD78270")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0xD78324", Offset = "0xD78324", VA = "0xD78324")]
	private void Enable(Transform cameraTransform, Transform parentTransform)
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0xD784A0", Offset = "0xD784A0", VA = "0xD784A0")]
	private void Disable(Transform cameraTransform, Transform parentTransform)
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0xD7861C", Offset = "0xD7861C", VA = "0xD7861C")]
	public CameraSwitchToggle()
	{
	}
}
[Token(Token = "0x2000338")]
public class QualityOverrides
{
	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static QualityLevel _cachedQualityLevel;

	[Token(Token = "0x1700020F")]
	public static QualityLevel CachedQualityLevel
	{
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xBDD594", Offset = "0xBDD594", VA = "0xBDD594")]
		get
		{
			return default(QualityLevel);
		}
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0xBDD0C8", Offset = "0xBDD0C8", VA = "0xBDD0C8")]
	public static void Initiate(string overrideTag)
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0xBDD22C", Offset = "0xBDD22C", VA = "0xBDD22C")]
	private static void Check(string overrideTag)
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0xBDD49C", Offset = "0xBDD49C", VA = "0xBDD49C")]
	private static void UpdateRenderScale(float scale)
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0xBDD51C", Offset = "0xBDD51C", VA = "0xBDD51C")]
	private static void UpdateViewDistance(ViewDistanceLevel level)
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0xBDD2CC", Offset = "0xBDD2CC", VA = "0xBDD2CC")]
	private static void UpdateAntiAliasing(AntiAliasingLevel level)
	{
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0xBDD344", Offset = "0xBDD344", VA = "0xBDD344")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0xBDD5E4", Offset = "0xBDD5E4", VA = "0xBDD5E4")]
	public static void ResetToCustom()
	{
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0xBDD664", Offset = "0xBDD664", VA = "0xBDD664")]
	public QualityOverrides()
	{
	}
}
[Token(Token = "0x2000339")]
public static class FastJson
{
	[Token(Token = "0x2000825")]
	public enum EnumSerializationMethod
	{
		[Token(Token = "0x4002FE5")]
		Name,
		[Token(Token = "0x4002FE6")]
		UnderlyingValue
	}

	[Token(Token = "0x2000826")]
	public delegate void Serializer(StringBuilder sb, object obj);

	[Token(Token = "0x2000827")]
	public delegate object Deserializer(Type type, JsonParser parser);

	[Token(Token = "0x2000828")]
	private class FieldSerializer
	{
		[Token(Token = "0x4002FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameAndColon;

		[Token(Token = "0x4002FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FieldInfo fieldInfo;

		[Token(Token = "0x4002FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Serializer serializer;

		[Token(Token = "0x6003170")]
		[Address(RVA = "0xE9116C", Offset = "0xE9116C", VA = "0xE9116C")]
		public FieldSerializer(string nameAndColon, FieldInfo fieldInfo, Serializer serializer)
		{
		}
	}

	[Token(Token = "0x2000829")]
	public class JsonParser
	{
		[Token(Token = "0x4002FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int count;

		[Token(Token = "0x4002FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int textLength;

		[Token(Token = "0x4002FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string jsonText;

		[Token(Token = "0x4002FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder subStringBuilder;

		[Token(Token = "0x170004E0")]
		public bool End
		{
			[Token(Token = "0x600317E")]
			[Address(RVA = "0xE99A3C", Offset = "0xE99A3C", VA = "0xE99A3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003171")]
		[Address(RVA = "0xE94C34", Offset = "0xE94C34", VA = "0xE94C34")]
		public JsonParser(string jsonText)
		{
		}

		[Token(Token = "0x6003172")]
		[Address(RVA = "0xE998A4", Offset = "0xE998A4", VA = "0xE998A4")]
		public char Peek()
		{
			return default(char);
		}

		[Token(Token = "0x6003173")]
		[Address(RVA = "0xE95F2C", Offset = "0xE95F2C", VA = "0xE95F2C")]
		public char Read()
		{
			return default(char);
		}

		[Token(Token = "0x6003174")]
		[Address(RVA = "0xE95EE0", Offset = "0xE95EE0", VA = "0xE95EE0")]
		public char PeekWithTrim()
		{
			return default(char);
		}

		[Token(Token = "0x6003175")]
		[Address(RVA = "0xE95F58", Offset = "0xE95F58", VA = "0xE95F58")]
		public char ReadWithTrim()
		{
			return default(char);
		}

		[Token(Token = "0x6003176")]
		[Address(RVA = "0xE9812C", Offset = "0xE9812C", VA = "0xE9812C")]
		public void Trim()
		{
		}

		[Token(Token = "0x6003177")]
		[Address(RVA = "0xE998C8", Offset = "0xE998C8", VA = "0xE998C8")]
		private void _Skip()
		{
		}

		[Token(Token = "0x6003178")]
		[Address(RVA = "0xE981F4", Offset = "0xE981F4", VA = "0xE981F4")]
		public string ReadToken()
		{
			return null;
		}

		[Token(Token = "0x6003179")]
		[Address(RVA = "0xE959B8", Offset = "0xE959B8", VA = "0xE959B8")]
		public bool ReadIfNull()
		{
			return default(bool);
		}

		[Token(Token = "0x600317A")]
		[Address(RVA = "0xE9996C", Offset = "0xE9996C", VA = "0xE9996C")]
		private bool _ReadIfNull()
		{
			return default(bool);
		}

		[Token(Token = "0x600317B")]
		[Address(RVA = "0xE95C40", Offset = "0xE95C40", VA = "0xE95C40")]
		public void ReadSpecifyChar(char spec)
		{
		}

		[Token(Token = "0x600317C")]
		[Address(RVA = "0xE96B48", Offset = "0xE96B48", VA = "0xE96B48")]
		public string ReadString()
		{
			return null;
		}

		[Token(Token = "0x600317D")]
		[Address(RVA = "0xE959DC", Offset = "0xE959DC", VA = "0xE959DC")]
		public void SkipValue()
		{
		}

		[Token(Token = "0x600317F")]
		[Address(RVA = "0xE96368", Offset = "0xE96368", VA = "0xE96368")]
		public FormatException CreateFormatException()
		{
			return null;
		}

		[Token(Token = "0x6003180")]
		[Address(RVA = "0xE99C58", Offset = "0xE99C58", VA = "0xE99C58")]
		public OverflowException CreateOverflowException()
		{
			return null;
		}

		[Token(Token = "0x6003181")]
		[Address(RVA = "0xE99A4C", Offset = "0xE99A4C", VA = "0xE99A4C")]
		private string _GetExceptionText()
		{
			return null;
		}

		[Token(Token = "0x6003182")]
		[Address(RVA = "0xE988F8", Offset = "0xE988F8", VA = "0xE988F8")]
		public bool ReadBool()
		{
			return default(bool);
		}

		[Token(Token = "0x6003183")]
		[Address(RVA = "0xE99CCC", Offset = "0xE99CCC", VA = "0xE99CCC")]
		private bool _ReadNegativeSign()
		{
			return default(bool);
		}

		[Token(Token = "0x6003184")]
		[Address(RVA = "0xE98608", Offset = "0xE98608", VA = "0xE98608")]
		public sbyte ReadInt8()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6003185")]
		[Address(RVA = "0xE97018", Offset = "0xE97018", VA = "0xE97018")]
		public short ReadInt16()
		{
			return default(short);
		}

		[Token(Token = "0x6003186")]
		[Address(RVA = "0xE97308", Offset = "0xE97308", VA = "0xE97308")]
		public int ReadInt32()
		{
			return default(int);
		}

		[Token(Token = "0x6003187")]
		[Address(RVA = "0xE97610", Offset = "0xE97610", VA = "0xE97610")]
		public long ReadInt64()
		{
			return default(long);
		}

		[Token(Token = "0x6003188")]
		[Address(RVA = "0xE9834C", Offset = "0xE9834C", VA = "0xE9834C")]
		public byte ReadUInt8()
		{
			return default(byte);
		}

		[Token(Token = "0x6003189")]
		[Address(RVA = "0xE97920", Offset = "0xE97920", VA = "0xE97920")]
		public ushort ReadUInt16()
		{
			return default(ushort);
		}

		[Token(Token = "0x600318A")]
		[Address(RVA = "0xE97BE0", Offset = "0xE97BE0", VA = "0xE97BE0")]
		public uint ReadUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x600318B")]
		[Address(RVA = "0xE97EA4", Offset = "0xE97EA4", VA = "0xE97EA4")]
		public ulong ReadUInt64()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x200082A")]
	public class DeserializeEnumerator<T> : IEnumerator<T>, IEnumerator, IDisposable, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4002FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T current;

		[Token(Token = "0x4002FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Deserializer deserializer;

		[Token(Token = "0x4002FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private JsonParser parser;

		[Token(Token = "0x4002FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type type;

		[Token(Token = "0x170004E1")]
		public T Current
		{
			[Token(Token = "0x600318E")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170004E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600318F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600318C")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600318D")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6003190")]
		public DeserializeEnumerator(JsonParser parser, Type type)
		{
		}

		[Token(Token = "0x6003191")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003192")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6003193")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnumSerializationMethod enumSerializationMethod;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Type[] serializerrArgs;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Type[] deserializerArgs;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<Type, List<FieldSerializer>> fieldSerializerCache;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<Type, Serializer> serializerCache;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<Type, Deserializer> deserializerCache;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static byte[] encodeCharaTable;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static byte[] decodeCharaTable;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static byte[] hexDecodeTable;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool[] jsonSeparator;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static char[] hexBuff;

	[Token(Token = "0x4001592")]
	public const string DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";

	[Token(Token = "0x4001593")]
	public const BindingFlags BINDING_FLAGS = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static char[] numberBuff;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static FieldInfo[] hash128Fields;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static char[] hash128Buff;

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0xE8EECC", Offset = "0xE8EECC", VA = "0xE8EECC")]
	public static void RegisterSerializer(Type type, Serializer serializer)
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0xE8EFA8", Offset = "0xE8EFA8", VA = "0xE8EFA8")]
	public static void RegisterDeserializer(Type type, Deserializer deserializer)
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0xE8F084", Offset = "0xE8F084", VA = "0xE8F084")]
	public static string Serialize(object obj)
	{
		return null;
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xE8F120", Offset = "0xE8F120", VA = "0xE8F120")]
	private static void _Serialize(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xE8F270", Offset = "0xE8F270", VA = "0xE8F270")]
	private static Serializer _GetSerializer(Type type)
	{
		return null;
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xE8FC34", Offset = "0xE8FC34", VA = "0xE8FC34")]
	private static void _SerializeArray(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xE9010C", Offset = "0xE9010C", VA = "0xE9010C")]
	private static void _SerializeList(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xE90474", Offset = "0xE90474", VA = "0xE90474")]
	private static void _SerializeDictionary(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0xE909B8", Offset = "0xE909B8", VA = "0xE909B8")]
	private static void _SerializeHashSet(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0xE90D74", Offset = "0xE90D74", VA = "0xE90D74")]
	private static void _SerializeObject(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0xE8F1F4", Offset = "0xE8F1F4", VA = "0xE8F1F4")]
	private static bool _SerializeIfNull(StringBuilder sb, object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0xE911AC", Offset = "0xE911AC", VA = "0xE911AC")]
	private static void _Register(Type type, Serializer serializer, Deserializer deserializer)
	{
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0xE9126C", Offset = "0xE9126C", VA = "0xE9126C")]
	static FastJson()
	{
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0xE926F8", Offset = "0xE926F8", VA = "0xE926F8")]
	public static int HexToInt(char ch)
	{
		return default(int);
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0xE927D0", Offset = "0xE927D0", VA = "0xE927D0")]
	public static char IntToHex(int i)
	{
		return default(char);
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0xE927E8", Offset = "0xE927E8", VA = "0xE927E8")]
	public static char IntToHex(uint i)
	{
		return default(char);
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0xE92800", Offset = "0xE92800", VA = "0xE92800")]
	public static bool IsDigit(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0xE92814", Offset = "0xE92814", VA = "0xE92814")]
	public static bool IsSpace(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0xE92824", Offset = "0xE92824", VA = "0xE92824")]
	public static bool IsJsonSeparator(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0xE92904", Offset = "0xE92904", VA = "0xE92904")]
	public static char ToUpper(char ch)
	{
		return default(char);
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0xE9290C", Offset = "0xE9290C", VA = "0xE9290C")]
	private static void _ToString(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0xE92954", Offset = "0xE92954", VA = "0xE92954")]
	private static void _SerializeSByte(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0xE92BC0", Offset = "0xE92BC0", VA = "0xE92BC0")]
	private static void _SerializeInt16(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0xE92E2C", Offset = "0xE92E2C", VA = "0xE92E2C")]
	private static void _SerializeInt32(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0xE93098", Offset = "0xE93098", VA = "0xE93098")]
	private static void _SerializeInt64(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0xE932FC", Offset = "0xE932FC", VA = "0xE932FC")]
	private static void _SerializeByte(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0xE934A0", Offset = "0xE934A0", VA = "0xE934A0")]
	private static void _SerializeUInt16(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0xE93640", Offset = "0xE93640", VA = "0xE93640")]
	private static void _SerializeUInt32(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0xE937D8", Offset = "0xE937D8", VA = "0xE937D8")]
	private static void _SerializeUInt64(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0xE93970", Offset = "0xE93970", VA = "0xE93970")]
	private static void _SerializeBool(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0xE93A1C", Offset = "0xE93A1C", VA = "0xE93A1C")]
	private static void _SerializeChar(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0xE93AC8", Offset = "0xE93AC8", VA = "0xE93AC8")]
	private static void _SerializeString(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0xE93DD8", Offset = "0xE93DD8", VA = "0xE93DD8")]
	private static void _SerializeEnumName(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0xE93E3C", Offset = "0xE93E3C", VA = "0xE93E3C")]
	private static void _SerializeVector2(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0xE93F18", Offset = "0xE93F18", VA = "0xE93F18")]
	private static void _SerializeVector3(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0xE94020", Offset = "0xE94020", VA = "0xE94020")]
	private static void _SerializeVector4(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xE94148", Offset = "0xE94148", VA = "0xE94148")]
	private static void _SerializeQuaternion(StringBuilder sb, object q)
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xE94270", Offset = "0xE94270", VA = "0xE94270")]
	private static void _SerializeRect(StringBuilder sb, object rect)
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xE943B8", Offset = "0xE943B8", VA = "0xE943B8")]
	private static void _SerializeColor(StringBuilder sb, object color)
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xE944E0", Offset = "0xE944E0", VA = "0xE944E0")]
	private static void _SerializeColor32(StringBuilder sb, object color)
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xE946F0", Offset = "0xE946F0", VA = "0xE946F0")]
	public static string Hash128ToString(Hash128 hash)
	{
		return null;
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0xE94918", Offset = "0xE94918", VA = "0xE94918")]
	private static void _SerializeHash128(StringBuilder sb, object hash)
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0xE94ACC", Offset = "0xE94ACC", VA = "0xE94ACC")]
	private static void _SerializeDate(StringBuilder sb, object date)
	{
	}

	[Token(Token = "0x60017EF")]
	public static T Deserialize<T>(string jsonText)
	{
		return (T)null;
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xE94BA4", Offset = "0xE94BA4", VA = "0xE94BA4")]
	public static object Deserialize(string jsonText, Type type)
	{
		return null;
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xE94CC4", Offset = "0xE94CC4", VA = "0xE94CC4")]
	private static object _Deserialize(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xE956A4", Offset = "0xE956A4", VA = "0xE956A4")]
	private static object _GetDefault(Type type)
	{
		return null;
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xE94D70", Offset = "0xE94D70", VA = "0xE94D70")]
	private static Deserializer _GetDeserializer(Type type)
	{
		return null;
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xE956EC", Offset = "0xE956EC", VA = "0xE956EC")]
	private static object _DeserializeArray(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xE95F88", Offset = "0xE95F88", VA = "0xE95F88")]
	private static List<object> _ParseArray(JsonParser parser, Type elementType, Deserializer deserializer, int nest, ref int[] length)
	{
		return null;
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xE96184", Offset = "0xE96184", VA = "0xE96184")]
	private static void _SetArray(Array array, int[] indices, List<object> listList, int nest)
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xE963DC", Offset = "0xE963DC", VA = "0xE963DC")]
	private static object _DeserializeList(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xE965F0", Offset = "0xE965F0", VA = "0xE965F0")]
	private static object _DeserializeHashSet(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0xE967D8", Offset = "0xE967D8", VA = "0xE967D8")]
	private static object _DeserializeDictionary(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0xE96A38", Offset = "0xE96A38", VA = "0xE96A38")]
	private static object _DeserializeEnum(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xE96DEC", Offset = "0xE96DEC", VA = "0xE96DEC")]
	private static object _DeserializeObject(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xE96FA4", Offset = "0xE96FA4", VA = "0xE96FA4")]
	private static object _DeserializeInt16(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0xE97294", Offset = "0xE97294", VA = "0xE97294")]
	private static object _DeserializeInt32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xE9759C", Offset = "0xE9759C", VA = "0xE9759C")]
	private static object _DeserializeInt64(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xE978AC", Offset = "0xE978AC", VA = "0xE978AC")]
	private static object _DeserializeUInt16(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0xE97B6C", Offset = "0xE97B6C", VA = "0xE97B6C")]
	private static object _DeserializeUInt32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0xE97E30", Offset = "0xE97E30", VA = "0xE97E30")]
	private static object _DeserializeUInt64(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0xE980FC", Offset = "0xE980FC", VA = "0xE980FC")]
	private static object _DeserializeString(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0xE9817C", Offset = "0xE9817C", VA = "0xE9817C")]
	private static object _DeserializeFloat(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0xE9823C", Offset = "0xE9823C", VA = "0xE9823C")]
	private static object _DeserializeDouble(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xE982D8", Offset = "0xE982D8", VA = "0xE982D8")]
	private static object _DeserializeByte(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xE98594", Offset = "0xE98594", VA = "0xE98594")]
	private static object _DeserializeSByte(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xE98880", Offset = "0xE98880", VA = "0xE98880")]
	private static object _DeserializeBoolean(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0xE98A94", Offset = "0xE98A94", VA = "0xE98A94")]
	private static object _DeserializeDecimal(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xE98B34", Offset = "0xE98B34", VA = "0xE98B34")]
	private static object _DeserializeChar(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xE98BA8", Offset = "0xE98BA8", VA = "0xE98BA8")]
	private static object _DeserializeVector2(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xE98C80", Offset = "0xE98C80", VA = "0xE98C80")]
	private static object _DeserializeVector3(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0xE98D90", Offset = "0xE98D90", VA = "0xE98D90")]
	private static object _DeserializeVector4(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0xE98EB8", Offset = "0xE98EB8", VA = "0xE98EB8")]
	private static object _DeserializeQuaternion(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0xE98FE0", Offset = "0xE98FE0", VA = "0xE98FE0")]
	private static object _DeserializeRect(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xE99108", Offset = "0xE99108", VA = "0xE99108")]
	private static object _DeserializeColor(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xE99230", Offset = "0xE99230", VA = "0xE99230")]
	private static object _DeserializeColor32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xE993C0", Offset = "0xE993C0", VA = "0xE993C0")]
	public static Hash128 ParseHash128(string hex)
	{
		return default(Hash128);
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xE995B4", Offset = "0xE995B4", VA = "0xE995B4")]
	private static object _DeserializeHash128(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xE99784", Offset = "0xE99784", VA = "0xE99784")]
	private static object _DeserializeDate(Type type, JsonParser parser)
	{
		return null;
	}
}
[Token(Token = "0x200033A")]
public class InternetCheck : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsOffline;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject errorPopup;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform clientSpawn;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leadSpawn;

	[Token(Token = "0x17000210")]
	private bool _isMultiplayer
	{
		[Token(Token = "0x6001816")]
		[Address(RVA = "0xCE7FC0", Offset = "0xCE7FC0", VA = "0xCE7FC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xCE7B68", Offset = "0xCE7B68", VA = "0xCE7B68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xCE7D04", Offset = "0xCE7D04", VA = "0xCE7D04")]
	private void StatusChange(InternetReachabilityVerifier.Status newStatus)
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xCE7DE8", Offset = "0xCE7DE8", VA = "0xCE7DE8")]
	private void TogglePopup(bool isOffline)
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0xCE806C", Offset = "0xCE806C", VA = "0xCE806C")]
	public InternetCheck()
	{
	}
}
[Token(Token = "0x200033B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB330F8", Offset = "0xB330F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB330F8", Offset = "0xB330F8")]
public class MeshMerger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001819")]
	[Address(RVA = "0xD3E118", Offset = "0xD3E118", VA = "0xD3E118")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4D37C", Offset = "0xB4D37C")]
	private void MeshMerge()
	{
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0xD3E380", Offset = "0xD3E380", VA = "0xD3E380")]
	public MeshMerger()
	{
	}
}
[Token(Token = "0x200033C")]
public class OVREntitlements : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200082B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35148", Offset = "0xB35148")]
	private sealed class <GameQuit>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVREntitlements <>4__this;

		[Token(Token = "0x170004E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003197")]
			[Address(RVA = "0x104B2E8", Offset = "0x104B2E8", VA = "0x104B2E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003199")]
			[Address(RVA = "0x104B350", Offset = "0x104B350", VA = "0x104B350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003194")]
		[Address(RVA = "0x104B170", Offset = "0x104B170", VA = "0x104B170")]
		[DebuggerHidden]
		public <GameQuit>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6003195")]
		[Address(RVA = "0x104B1FC", Offset = "0x104B1FC", VA = "0x104B1FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003196")]
		[Address(RVA = "0x104B200", Offset = "0x104B200", VA = "0x104B200", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003198")]
		[Address(RVA = "0x104B2F0", Offset = "0x104B2F0", VA = "0x104B2F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OVREntitlements instance;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformSetup platformSetup;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject errorMessagePanel;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int quitTime;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isEntitling;

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x104AF0C", Offset = "0x104AF0C", VA = "0x104AF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x104AF9C", Offset = "0x104AF9C", VA = "0x104AF9C")]
	public void Check()
	{
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x104AFA0", Offset = "0x104AFA0", VA = "0x104AFA0")]
	private void Success()
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x104B034", Offset = "0x104B034", VA = "0x104B034")]
	private void Error()
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x104B100", Offset = "0x104B100", VA = "0x104B100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D3B4", Offset = "0xB4D3B4")]
	private IEnumerator GameQuit()
	{
		return null;
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x104B19C", Offset = "0x104B19C", VA = "0x104B19C")]
	public OVREntitlements()
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x104B1B4", Offset = "0x104B1B4", VA = "0x104B1B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D418", Offset = "0xB4D418")]
	private void <Check>b__6_0(Oculus.Platform.Message msg)
	{
	}
}
[Token(Token = "0x200033D")]
public class PS4PlatformClient : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformSetup platformSetup;

	[Token(Token = "0x6001822")]
	[Address(RVA = "0xF21148", Offset = "0xF21148", VA = "0xF21148")]
	public PS4PlatformClient()
	{
	}
}
[Token(Token = "0x200033E")]
public class PlatformSetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] platformsObjs;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int callbacksExpected;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int callbacksReceived;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _init;

	[Token(Token = "0x6001823")]
	[Address(RVA = "0xC4C488", Offset = "0xC4C488", VA = "0xC4C488")]
	private void Start()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xC4C668", Offset = "0xC4C668", VA = "0xC4C668")]
	private void Update()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xC4C724", Offset = "0xC4C724", VA = "0xC4C724")]
	public void Receive()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0xC4C684", Offset = "0xC4C684", VA = "0xC4C684")]
	private void Progress()
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0xC4C7A4", Offset = "0xC4C7A4", VA = "0xC4C7A4")]
	public PlatformSetup()
	{
	}
}
[Token(Token = "0x200033F")]
public class ShadowSceneOverride : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShadowQualityLevel _shadowQualityLevel;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private ShadowQualityLevel _cachedShadowlevel;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ShadowSceneOverride instance;

	[Token(Token = "0x17000211")]
	public ShadowQualityLevel CachedShadowLevel
	{
		[Token(Token = "0x6001828")]
		[Address(RVA = "0xCA4D04", Offset = "0xCA4D04", VA = "0xCA4D04")]
		get
		{
			return default(ShadowQualityLevel);
		}
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0xCA4D0C", Offset = "0xCA4D0C", VA = "0xCA4D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0xCA4DB4", Offset = "0xCA4DB4", VA = "0xCA4DB4")]
	public void Set()
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0xCA4E48", Offset = "0xCA4E48", VA = "0xCA4E48")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0xCA4ED4", Offset = "0xCA4ED4", VA = "0xCA4ED4")]
	public ShadowSceneOverride()
	{
	}
}
[Token(Token = "0x2000340")]
public class SteamPlatformClient : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint AppId;

	[Token(Token = "0x600182D")]
	[Address(RVA = "0xD5EF80", Offset = "0xD5EF80", VA = "0xD5EF80")]
	public SteamPlatformClient()
	{
	}
}
[Token(Token = "0x2000341")]
public class SteamSetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformSetup platformSetup;

	[Token(Token = "0x600182E")]
	[Address(RVA = "0xD5EF88", Offset = "0xD5EF88", VA = "0xD5EF88")]
	public SteamSetup()
	{
	}
}
[Token(Token = "0x2000342")]
public class TextureScroller : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 scrollDir;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 scrollOffset;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _scrollSpeed;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _rend;

	[Token(Token = "0x600182F")]
	[Address(RVA = "0xCB237C", Offset = "0xCB237C", VA = "0xCB237C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0xCB23D4", Offset = "0xCB23D4", VA = "0xCB23D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0xCB24BC", Offset = "0xCB24BC", VA = "0xCB24BC")]
	public TextureScroller()
	{
	}
}
[Token(Token = "0x2000343")]
[ExecuteInEditMode]
public class SpecularRoughnessLUTGenerator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int size;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool GO;

	[Token(Token = "0x6001832")]
	[Address(RVA = "0xDB2CC8", Offset = "0xDB2CC8", VA = "0xDB2CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0xDB2CCC", Offset = "0xDB2CCC", VA = "0xDB2CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0xDB324C", Offset = "0xDB324C", VA = "0xDB324C")]
	public SpecularRoughnessLUTGenerator()
	{
	}
}
[Token(Token = "0x2000344")]
public class ThermalTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AircraftControl _glider;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _entryCount;

	[Token(Token = "0x6001835")]
	[Address(RVA = "0xCB2548", Offset = "0xCB2548", VA = "0xCB2548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0xCB25B8", Offset = "0xCB25B8", VA = "0xCB25B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0xCB25F8", Offset = "0xCB25F8", VA = "0xCB25F8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001838")]
	[Address(RVA = "0xCB262C", Offset = "0xCB262C", VA = "0xCB262C")]
	public ThermalTrigger()
	{
	}
}
[Token(Token = "0x2000345")]
public class TutorialPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _gliderHud;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _gazeTF;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _lastGazedAt;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _gazeGaugeTF;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _gazeCount;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _highlight;

	[Token(Token = "0x6001839")]
	[Address(RVA = "0xCBA7A0", Offset = "0xCBA7A0", VA = "0xCBA7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600183A")]
	[Address(RVA = "0xCBA850", Offset = "0xCBA850", VA = "0xCBA850")]
	private void Start()
	{
	}

	[Token(Token = "0x600183B")]
	[Address(RVA = "0xCBA854", Offset = "0xCBA854", VA = "0xCBA854")]
	private void Update()
	{
	}

	[Token(Token = "0x600183C")]
	[Address(RVA = "0xCBAC7C", Offset = "0xCBAC7C", VA = "0xCBAC7C")]
	public TutorialPanel()
	{
	}
}
[Token(Token = "0x2000346")]
public class AttachCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600183D")]
	[Address(RVA = "0xE6BCE0", Offset = "0xE6BCE0", VA = "0xE6BCE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0xE6BCE4", Offset = "0xE6BCE4", VA = "0xE6BCE4")]
	public AttachCamera()
	{
	}
}
[Token(Token = "0x2000347")]
public class AutoRotater : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationMultiplier;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x600183F")]
	[Address(RVA = "0xE6C518", Offset = "0xE6C518", VA = "0xE6C518")]
	private void Update()
	{
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0xE6C5D8", Offset = "0xE6C5D8", VA = "0xE6C5D8")]
	public AutoRotater()
	{
	}
}
[Token(Token = "0x2000348")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33194", Offset = "0xB33194")]
public class BoostMeshGenerator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _segments;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _innerRadius;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _outerRadius;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _innerDepth;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _outerDepth;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _innerUvWarp;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _outerUvWarp;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _meshPath;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh _mesh;

	[Token(Token = "0x6001841")]
	[Address(RVA = "0xD72330", Offset = "0xD72330", VA = "0xD72330")]
	private void Generate()
	{
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0xD7288C", Offset = "0xD7288C", VA = "0xD7288C")]
	private float ConvertUvPosition(float cPos, float warp = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0xD728A4", Offset = "0xD728A4", VA = "0xD728A4")]
	public BoostMeshGenerator()
	{
	}
}
[Token(Token = "0x2000349")]
public class BoostFillColor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color[] _colors;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float[] _intervals;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _lastIndex;

	[Token(Token = "0x6001844")]
	[Address(RVA = "0xD71DC8", Offset = "0xD71DC8", VA = "0xD71DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0xD71EC8", Offset = "0xD71EC8", VA = "0xD71EC8")]
	private void SetColor(int i)
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0xD71F38", Offset = "0xD71F38", VA = "0xD71F38")]
	public BoostFillColor()
	{
	}
}
[Token(Token = "0x200034A")]
public class BoostGaugeUi : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LerpImageFill[] _fillBars;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LerpImageFill[] _underBars;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LerpCanvasGroup _helper;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LerpCanvasGroup _matchmaking;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _helperShown;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _matchmakingShown;

	[Token(Token = "0x6001847")]
	[Address(RVA = "0xD71F48", Offset = "0xD71F48", VA = "0xD71F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0xD720B0", Offset = "0xD720B0", VA = "0xD720B0")]
	public void SetFill(float fillAmount, float fillTotal, bool instant)
	{
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0xD721A4", Offset = "0xD721A4", VA = "0xD721A4")]
	public bool HasHelper()
	{
		return default(bool);
	}

	[Token(Token = "0x600184A")]
	[Address(RVA = "0xD72214", Offset = "0xD72214", VA = "0xD72214")]
	public void ShowHelper(bool show, bool instant)
	{
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0xD71FD0", Offset = "0xD71FD0", VA = "0xD71FD0")]
	public void ShowMatchmaking(bool show, bool instant)
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0xD72328", Offset = "0xD72328", VA = "0xD72328")]
	public BoostGaugeUi()
	{
	}
}
[Token(Token = "0x200034B")]
public class ScoreModeHudDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _displayText;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _displayObject;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Multiline]
	private string _displayFormat;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _localizeTag;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _init;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lastScore;

	[Token(Token = "0x600184D")]
	[Address(RVA = "0xC9DCBC", Offset = "0xC9DCBC", VA = "0xC9DCBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0xC9DE14", Offset = "0xC9DE14", VA = "0xC9DE14")]
	private void Init()
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0xC9DEC8", Offset = "0xC9DEC8", VA = "0xC9DEC8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4D428", Offset = "0xB4D428")]
	private void FindReferences()
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0xC9DF30", Offset = "0xC9DF30", VA = "0xC9DF30")]
	public ScoreModeHudDisplay()
	{
	}
}
[Token(Token = "0x200034C")]
public class CorrectShadowRotation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 _baseShadowRotation;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Shadow _targetShadow;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _targetTransform;

	[Token(Token = "0x6001851")]
	[Address(RVA = "0xD439A8", Offset = "0xD439A8", VA = "0xD439A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4D460", Offset = "0xB4D460")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0xD43A9C", Offset = "0xD43A9C", VA = "0xD43A9C")]
	private void CorrectShadowVector(float degrees)
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0xD43B78", Offset = "0xD43B78", VA = "0xD43B78")]
	public CorrectShadowRotation()
	{
	}
}
[Serializable]
[Token(Token = "0x200034D")]
public struct MapSplat
{
	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite[] _splats;

	[Token(Token = "0x6001854")]
	[Address(RVA = "0xD3BB74", Offset = "0xD3BB74", VA = "0xD3BB74")]
	public Sprite GetRandomSplat()
	{
		return null;
	}
}
[Token(Token = "0x200034E")]
public class MapSplatData : ScriptableObject
{
	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapSplat[] _maps;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite _whiteSplat;

	[Token(Token = "0x6001855")]
	[Address(RVA = "0xD3BBD4", Offset = "0xD3BBD4", VA = "0xD3BBD4")]
	public Sprite GetSplat(int mapIndex)
	{
		return null;
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0xD3BCA8", Offset = "0xD3BCA8", VA = "0xD3BCA8")]
	public Sprite GetWhiteSplat()
	{
		return null;
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0xD3BCB0", Offset = "0xD3BCB0", VA = "0xD3BCB0")]
	public MapSplatData()
	{
	}
}
[Token(Token = "0x200034F")]
public class DeparentToOrigin : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001858")]
	[Address(RVA = "0xD53884", Offset = "0xD53884", VA = "0xD53884")]
	private void Start()
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0xD5392C", Offset = "0xD5392C", VA = "0xD5392C")]
	public DeparentToOrigin()
	{
	}
}
[Token(Token = "0x2000350")]
public class GamepadUiControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _doubleClickTime;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRInteractiveItem _focus;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _camera;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRInteractiveItem _clickInitiate;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _clickTime;

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x11741AC", Offset = "0x11741AC", VA = "0x11741AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x1174440", Offset = "0x1174440", VA = "0x1174440")]
	private void SetFocus(VRInteractiveItem newFocus)
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0x1174524", Offset = "0x1174524", VA = "0x1174524")]
	private void InitiateInput()
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x11745BC", Offset = "0x11745BC", VA = "0x11745BC")]
	private void FinishInput()
	{
	}

	[Token(Token = "0x600185E")]
	[Address(RVA = "0x11746CC", Offset = "0x11746CC", VA = "0x11746CC")]
	private void MoveDirection(Vector3 dir)
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0x1174704", Offset = "0x1174704", VA = "0x1174704")]
	public GamepadUiControl()
	{
	}
}
[Token(Token = "0x2000351")]
public abstract class LerpBehaviour : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3DA04", Offset = "0xB3DA04")]
	[SerializeField]
	private AnimationCurve _lerpCurve;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _lerpTime;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _useUnscaledTime;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _active;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lerpProgress;

	[Token(Token = "0x6001860")]
	[Address(RVA = "0xCECCC8", Offset = "0xCECCC8", VA = "0xCECCC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001861")]
	[Address(RVA = "0xCECCD4", Offset = "0xCECCD4", VA = "0xCECCD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0xCECD78", Offset = "0xCECD78", VA = "0xCECD78", Slot = "4")]
	protected virtual void LerpUpdate(float progress)
	{
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0xCECD7C", Offset = "0xCECD7C", VA = "0xCECD7C", Slot = "5")]
	protected virtual void LerpReset()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0xCECD88", Offset = "0xCECD88", VA = "0xCECD88")]
	protected void LerpStart(float initialProgress = 0f)
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0xCECD98", Offset = "0xCECD98", VA = "0xCECD98")]
	public void SetLerpTime(float time)
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0xCECDA0", Offset = "0xCECDA0", VA = "0xCECDA0")]
	public float GetLerpTime()
	{
		return default(float);
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0xCECDA8", Offset = "0xCECDA8", VA = "0xCECDA8")]
	protected LerpBehaviour()
	{
	}
}
[Token(Token = "0x2000352")]
public class LerpCanvasGroup : LerpBehaviour
{
	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CanvasGroup _applyTo;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _neverInteract;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool _alwaysInteract;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _disableObject;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _show;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _preset;

	[Token(Token = "0x40015E9")]
	private const float _DISABLE_THRESHOLD = 0.99f;

	[Token(Token = "0x40015EA")]
	private const float _OBJECT_DISABLE_THRESHOLD = 0.01f;

	[Token(Token = "0x6001868")]
	[Address(RVA = "0xCECDBC", Offset = "0xCECDBC", VA = "0xCECDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0xCECEC4", Offset = "0xCECEC4", VA = "0xCECEC4", Slot = "4")]
	protected override void LerpUpdate(float progress)
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0xCECEEC", Offset = "0xCECEEC", VA = "0xCECEEC")]
	private void SetAlpha(float amount)
	{
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0xCED0F8", Offset = "0xCED0F8", VA = "0xCED0F8")]
	public bool GetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0xCED100", Offset = "0xCED100", VA = "0xCED100")]
	public void SetVisible(bool show)
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0xCED13C", Offset = "0xCED13C", VA = "0xCED13C")]
	public void SetVisibleInstant(bool show)
	{
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0xCED170", Offset = "0xCED170", VA = "0xCED170")]
	public CanvasGroup GetCanvasGroup()
	{
		return null;
	}

	[Token(Token = "0x600186F")]
	[Address(RVA = "0xCED178", Offset = "0xCED178", VA = "0xCED178")]
	public LerpCanvasGroup()
	{
	}
}
[Token(Token = "0x2000353")]
public class LerpImageFill : LerpBehaviour
{
	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3DAB0", Offset = "0xB3DAB0")]
	[SerializeField]
	private Image _imageTarget;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AnimationCurve _fillCurve;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lerpOrigin;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lerpTarget;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _previousValue;

	[Token(Token = "0x17000212")]
	protected Image ImageTarget
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0xCED18C", Offset = "0xCED18C", VA = "0xCED18C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000213")]
	protected float PreviousValue
	{
		[Token(Token = "0x6001871")]
		[Address(RVA = "0xCED234", Offset = "0xCED234", VA = "0xCED234")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0xCED23C", Offset = "0xCED23C", VA = "0xCED23C", Slot = "4")]
	protected override void LerpUpdate(float progress)
	{
	}

	[Token(Token = "0x6001873")]
	[Address(RVA = "0xCED300", Offset = "0xCED300", VA = "0xCED300", Slot = "6")]
	public virtual float SetTarget(float newTarget)
	{
		return default(float);
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0xCED3A0", Offset = "0xCED3A0", VA = "0xCED3A0", Slot = "7")]
	public virtual float SetTargetInstant(float newTarget)
	{
		return default(float);
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0xCED47C", Offset = "0xCED47C", VA = "0xCED47C")]
	public LerpImageFill()
	{
	}
}
[Token(Token = "0x2000354")]
public class PingPongScale : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _lerpTime;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve _lerpCurve;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _minScale;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _maxScale;

	[Token(Token = "0x6001876")]
	[Address(RVA = "0xC4C0E4", Offset = "0xC4C0E4", VA = "0xC4C0E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0xC4C264", Offset = "0xC4C264", VA = "0xC4C264")]
	public PingPongScale()
	{
	}
}
[Token(Token = "0x2000355")]
public class LoadingArea : Photon.MonoBehaviour
{
	[Token(Token = "0x200082C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35158", Offset = "0xB35158")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x600319A")]
		[Address(RVA = "0xE0D5F8", Offset = "0xE0D5F8", VA = "0xE0D5F8")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600319B")]
		[Address(RVA = "0xE0DA38", Offset = "0xE0DA38", VA = "0xE0DA38")]
		internal void <Hide>b__0()
		{
		}
	}

	[Token(Token = "0x200082D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35168", Offset = "0xB35168")]
	private sealed class <FadeInRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingArea <>4__this;

		[Token(Token = "0x4002FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x4002FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tick>5__2;

		[Token(Token = "0x170004E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600319F")]
			[Address(RVA = "0xE0DC04", Offset = "0xE0DC04", VA = "0xE0DC04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031A1")]
			[Address(RVA = "0xE0DC6C", Offset = "0xE0DC6C", VA = "0xE0DC6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600319C")]
		[Address(RVA = "0xE0D908", Offset = "0xE0D908", VA = "0xE0D908")]
		[DebuggerHidden]
		public <FadeInRoutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600319D")]
		[Address(RVA = "0xE0DA8C", Offset = "0xE0DA8C", VA = "0xE0DA8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600319E")]
		[Address(RVA = "0xE0DA90", Offset = "0xE0DA90", VA = "0xE0DA90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031A0")]
		[Address(RVA = "0xE0DC0C", Offset = "0xE0DC0C", VA = "0xE0DC0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200082E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35178", Offset = "0xB35178")]
	private sealed class <FadeOutRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingArea <>4__this;

		[Token(Token = "0x4002FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x4002FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tick>5__2;

		[Token(Token = "0x170004E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031A5")]
			[Address(RVA = "0xE0DDE8", Offset = "0xE0DDE8", VA = "0xE0DDE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031A7")]
			[Address(RVA = "0xE0DE50", Offset = "0xE0DE50", VA = "0xE0DE50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031A2")]
		[Address(RVA = "0xE0D934", Offset = "0xE0D934", VA = "0xE0D934")]
		[DebuggerHidden]
		public <FadeOutRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60031A3")]
		[Address(RVA = "0xE0DC74", Offset = "0xE0DC74", VA = "0xE0DC74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031A4")]
		[Address(RVA = "0xE0DC78", Offset = "0xE0DC78", VA = "0xE0DC78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031A6")]
		[Address(RVA = "0xE0DDF0", Offset = "0xE0DDF0", VA = "0xE0DDF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _container;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _fadeCover;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text _loadText;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _loadFill;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _fadeTime;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _fillLerpTime;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector3 _spawnPosition;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioListener _fadeListener;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private VRPostReprojection _postReprojection;

	[Token(Token = "0x40015FF")]
	private const string _RESOURCE_NAME = "LoadingArea";

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadingArea _instance;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine _fadeRoutine;

	[Token(Token = "0x17000214")]
	private static LoadingArea Instance
	{
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xE0D164", Offset = "0xE0D164", VA = "0xE0D164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0xE0D30C", Offset = "0xE0D30C", VA = "0xE0D30C")]
	public static void Show(bool fadeIn = true, [Optional] Action callback)
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0xE0D4CC", Offset = "0xE0D4CC", VA = "0xE0D4CC")]
	public static void Hide(bool fadeOut = true, [Optional] Action callback)
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xE0D6FC", Offset = "0xE0D6FC", VA = "0xE0D6FC")]
	public static bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xE0D3D0", Offset = "0xE0D3D0", VA = "0xE0D3D0")]
	public static void FadeIn([Optional] Action callback)
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xE0D600", Offset = "0xE0D600", VA = "0xE0D600")]
	public static void FadeOut([Optional] Action callback)
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xE0D8A0", Offset = "0xE0D8A0", VA = "0xE0D8A0")]
	private void SetFade(float value)
	{
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0xE0D7A8", Offset = "0xE0D7A8", VA = "0xE0D7A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D498", Offset = "0xB4D498")]
	private IEnumerator FadeInRoutine([Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0xE0D824", Offset = "0xE0D824", VA = "0xE0D824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D4FC", Offset = "0xB4D4FC")]
	private IEnumerator FadeOutRoutine([Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0xE0D960", Offset = "0xE0D960", VA = "0xE0D960")]
	private void SetFill(float fill)
	{
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0xE0D97C", Offset = "0xE0D97C", VA = "0xE0D97C")]
	public static void SetProgress(float progress)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xE0DA30", Offset = "0xE0DA30", VA = "0xE0DA30")]
	public LoadingArea()
	{
	}
}
[Token(Token = "0x2000356")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB33214", Offset = "0xB33214")]
public class MapSplineContainer : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200082F")]
	public struct SingleSpline
	{
		[Token(Token = "0x4003000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] points;
	}

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uiDivision;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 uiOffset;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SingleSpline[] splines;

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xD3BCB8", Offset = "0xD3BCB8", VA = "0xD3BCB8")]
	public MapSplineContainer()
	{
	}
}
[Token(Token = "0x2000357")]
public class ButtonSound : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x6001885")]
	[Address(RVA = "0xD74898", Offset = "0xD74898", VA = "0xD74898")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001886")]
	[Address(RVA = "0xD74928", Offset = "0xD74928", VA = "0xD74928")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001887")]
	[Address(RVA = "0xD74A48", Offset = "0xD74A48", VA = "0xD74A48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001888")]
	[Address(RVA = "0xD74B58", Offset = "0xD74B58", VA = "0xD74B58")]
	private void HandleClick()
	{
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0xD74C88", Offset = "0xD74C88", VA = "0xD74C88")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0xD74DB8", Offset = "0xD74DB8", VA = "0xD74DB8")]
	public ButtonSound()
	{
	}
}
[Token(Token = "0x2000358")]
public class GameStartCircle : UiPanel
{
	[Token(Token = "0x2000830")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35188", Offset = "0xB35188")]
	private sealed class <LateLaunch>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStartCircle <>4__this;

		[Token(Token = "0x170004E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x1173270", Offset = "0x1173270", VA = "0x1173270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031AD")]
			[Address(RVA = "0x11732D8", Offset = "0x11732D8", VA = "0x11732D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031A8")]
		[Address(RVA = "0x1172E28", Offset = "0x1172E28", VA = "0x1172E28")]
		[DebuggerHidden]
		public <LateLaunch>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60031A9")]
		[Address(RVA = "0x11731A0", Offset = "0x11731A0", VA = "0x11731A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031AA")]
		[Address(RVA = "0x11731A4", Offset = "0x11731A4", VA = "0x11731A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031AC")]
		[Address(RVA = "0x1173278", Offset = "0x1173278", VA = "0x1173278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000831")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35198", Offset = "0xB35198")]
	private sealed class <TempCountdown>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPaused;

		[Token(Token = "0x4003007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameStartCircle <>4__this;

		[Token(Token = "0x4003008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameEventMediator.ReportCountdown reportCountdown;

		[Token(Token = "0x4003009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action callback;

		[Token(Token = "0x400300A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400300B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <splat>5__3;

		[Token(Token = "0x170004EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x1173A08", Offset = "0x1173A08", VA = "0x1173A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031B3")]
			[Address(RVA = "0x1173A70", Offset = "0x1173A70", VA = "0x1173A70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031AE")]
		[Address(RVA = "0x1172E54", Offset = "0x1172E54", VA = "0x1172E54")]
		[DebuggerHidden]
		public <TempCountdown>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60031AF")]
		[Address(RVA = "0x1173524", Offset = "0x1173524", VA = "0x1173524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031B0")]
		[Address(RVA = "0x1173528", Offset = "0x1173528", VA = "0x1173528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031B2")]
		[Address(RVA = "0x1173A10", Offset = "0x1173A10", VA = "0x1173A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000832")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351A8", Offset = "0xB351A8")]
	private sealed class <LockInWorldSpace>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400300C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400300D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400300E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStartCircle <>4__this;

		[Token(Token = "0x400300F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4003010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4003011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <worldPos>5__3;

		[Token(Token = "0x4003012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <worldRot>5__4;

		[Token(Token = "0x4003013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <localPos>5__5;

		[Token(Token = "0x4003014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion <localRot>5__6;

		[Token(Token = "0x170004ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x11734B4", Offset = "0x11734B4", VA = "0x11734B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x117351C", Offset = "0x117351C", VA = "0x117351C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031B4")]
		[Address(RVA = "0x1172F00", Offset = "0x1172F00", VA = "0x1172F00")]
		[DebuggerHidden]
		public <LockInWorldSpace>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60031B5")]
		[Address(RVA = "0x11732E0", Offset = "0x11732E0", VA = "0x11732E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031B6")]
		[Address(RVA = "0x11732E4", Offset = "0x11732E4", VA = "0x11732E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031B8")]
		[Address(RVA = "0x11734BC", Offset = "0x11734BC", VA = "0x11734BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000833")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351B8", Offset = "0xB351B8")]
	private sealed class <TooSoonRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStartCircle <>4__this;

		[Token(Token = "0x170004EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031BD")]
			[Address(RVA = "0x1173B88", Offset = "0x1173B88", VA = "0x1173B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031BF")]
			[Address(RVA = "0x1173BF0", Offset = "0x1173BF0", VA = "0x1173BF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031BA")]
		[Address(RVA = "0x117316C", Offset = "0x117316C", VA = "0x117316C")]
		[DebuggerHidden]
		public <TooSoonRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60031BB")]
		[Address(RVA = "0x1173A78", Offset = "0x1173A78", VA = "0x1173A78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031BC")]
		[Address(RVA = "0x1173A7C", Offset = "0x1173A7C", VA = "0x1173A7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031BE")]
		[Address(RVA = "0x1173B90", Offset = "0x1173B90", VA = "0x1173B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRInteractiveItem _interactiveItem;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator[] _arrowAnimators;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image[] _arrowImages;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _pulseImage;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _pulseTransform;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator _pulseAnimator;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image _fillImage;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LerpImageFill _fillCircle;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TMP_Text _descTest;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private LerpCanvasGroup _descLerp;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextSplatter _splat;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite _warmSplat;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Sprite _coolSplat;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _mainGroup;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _tooSoon;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine _countdown;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine _tooSoonRoutine;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _meLastReady;

	[Token(Token = "0x600188B")]
	[Address(RVA = "0x1171F88", Offset = "0x1171F88", VA = "0x1171F88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0x1172530", Offset = "0x1172530", VA = "0x1172530")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x11726FC", Offset = "0x11726FC", VA = "0x11726FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x1172744", Offset = "0x1172744", VA = "0x1172744")]
	private void CheckPlayerCount()
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x1172900", Offset = "0x1172900", VA = "0x1172900")]
	private void PauseStartCountdown(Action callback)
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x1172ADC", Offset = "0x1172ADC", VA = "0x1172ADC")]
	private void StartCoundown(GameEventMediator.ReportCountdown reportCountdown)
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x11729F4", Offset = "0x11729F4", VA = "0x11729F4")]
	private void StartCoundown(GameEventMediator.ReportCountdown reportCountdown, bool isPaused, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0x1172B80", Offset = "0x1172B80", VA = "0x1172B80")]
	private void PauseStopCountdown(Action callback, bool playerLaunched)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0x1172D60", Offset = "0x1172D60", VA = "0x1172D60")]
	private void StopCountdown()
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x1172C88", Offset = "0x1172C88", VA = "0x1172C88")]
	private void StopCountdown(bool isPaused, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x1172D6C", Offset = "0x1172D6C", VA = "0x1172D6C")]
	private void HandleLateLaunch()
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x1172DB8", Offset = "0x1172DB8", VA = "0x1172DB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D560", Offset = "0xB4D560")]
	private IEnumerator LateLaunch()
	{
		return null;
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x1172AE8", Offset = "0x1172AE8", VA = "0x1172AE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D5C4", Offset = "0xB4D5C4")]
	private IEnumerator TempCountdown(GameEventMediator.ReportCountdown reportCountdown, bool isPaused, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0x1172E80", Offset = "0x1172E80", VA = "0x1172E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D628", Offset = "0xB4D628")]
	private IEnumerator LockInWorldSpace(float duration)
	{
		return null;
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0x1172F2C", Offset = "0x1172F2C", VA = "0x1172F2C")]
	private void UpdateFill(float fill)
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0x1172F4C", Offset = "0x1172F4C", VA = "0x1172F4C")]
	private void RemoveSelf()
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0x1172F74", Offset = "0x1172F74", VA = "0x1172F74")]
	private void ShowSplat(string text)
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0x1172168", Offset = "0x1172168", VA = "0x1172168")]
	private void ReadyStatusUpdate(List<UserReadyPair> userReadyPairs)
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0x1173060", Offset = "0x1173060", VA = "0x1173060")]
	private void PlayTooSoon()
	{
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x11730FC", Offset = "0x11730FC", VA = "0x11730FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D68C", Offset = "0xB4D68C")]
	private IEnumerator TooSoonRoutine()
	{
		return null;
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0x1173198", Offset = "0x1173198", VA = "0x1173198")]
	public GameStartCircle()
	{
	}
}
[Token(Token = "0x2000359")]
public class SpawnGameStartCircle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UiPanel _startCircle;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UiPanel _startCircleGroup;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UiPanel _spawnedPanel;

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0xDAF4C8", Offset = "0xDAF4C8", VA = "0xDAF4C8")]
	public void Spawn()
	{
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0xDAF744", Offset = "0xDAF744", VA = "0xDAF744")]
	public void Activate()
	{
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0xDAF678", Offset = "0xDAF678", VA = "0xDAF678")]
	public void Remove()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0xDAF8A8", Offset = "0xDAF8A8", VA = "0xDAF8A8")]
	public bool IsSpawned()
	{
		return default(bool);
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0xDAF918", Offset = "0xDAF918", VA = "0xDAF918")]
	public UiPanel GetSpawnedPanel()
	{
		return null;
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0xDAF920", Offset = "0xDAF920", VA = "0xDAF920")]
	public SpawnGameStartCircle()
	{
	}
}
[Token(Token = "0x200035A")]
public class CheckpointTimepass : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351C8", Offset = "0xB351C8")]
	private sealed class <DisplayRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400301A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointTimepass <>4__this;

		[Token(Token = "0x400301B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <ticker>5__2;

		[Token(Token = "0x400301C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x400301D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x170004F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031C3")]
			[Address(RVA = "0xD80EEC", Offset = "0xD80EEC", VA = "0xD80EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031C5")]
			[Address(RVA = "0xD80F54", Offset = "0xD80F54", VA = "0xD80F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031C0")]
		[Address(RVA = "0xD80964", Offset = "0xD80964", VA = "0xD80964")]
		[DebuggerHidden]
		public <DisplayRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60031C1")]
		[Address(RVA = "0xD80C98", Offset = "0xD80C98", VA = "0xD80C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031C2")]
		[Address(RVA = "0xD80C9C", Offset = "0xD80C9C", VA = "0xD80C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031C4")]
		[Address(RVA = "0xD80EF4", Offset = "0xD80EF4", VA = "0xD80EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000835")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351D8", Offset = "0xB351D8")]
	private sealed class <DisplayTimeRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400301E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400301F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointTimepass <>4__this;

		[Token(Token = "0x170004F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031C9")]
			[Address(RVA = "0xD81078", Offset = "0xD81078", VA = "0xD81078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031CB")]
			[Address(RVA = "0xD810E0", Offset = "0xD810E0", VA = "0xD810E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031C6")]
		[Address(RVA = "0xD80990", Offset = "0xD80990", VA = "0xD80990")]
		[DebuggerHidden]
		public <DisplayTimeRoutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60031C7")]
		[Address(RVA = "0xD80F5C", Offset = "0xD80F5C", VA = "0xD80F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031C8")]
		[Address(RVA = "0xD80F60", Offset = "0xD80F60", VA = "0xD80F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031CA")]
		[Address(RVA = "0xD81080", Offset = "0xD81080", VA = "0xD81080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000836")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351E8", Offset = "0xB351E8")]
	private sealed class <DisplayMissRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointTimepass <>4__this;

		[Token(Token = "0x170004F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031CF")]
			[Address(RVA = "0xD80C28", Offset = "0xD80C28", VA = "0xD80C28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031D1")]
			[Address(RVA = "0xD80C90", Offset = "0xD80C90", VA = "0xD80C90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031CC")]
		[Address(RVA = "0xD80AE0", Offset = "0xD80AE0", VA = "0xD80AE0")]
		[DebuggerHidden]
		public <DisplayMissRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60031CD")]
		[Address(RVA = "0xD80B14", Offset = "0xD80B14", VA = "0xD80B14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031CE")]
		[Address(RVA = "0xD80B18", Offset = "0xD80B18", VA = "0xD80B18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031D0")]
		[Address(RVA = "0xD80C30", Offset = "0xD80C30", VA = "0xD80C30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextSplatter[] _splats;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextSplatter _timeSplat;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color _positive;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color _negative;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _missObject;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _missText;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Animator _missAnimator;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<UserPair<float>> _pairs;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine _routine;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine _missRoutine;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _timeWhenPassed;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _lastCheckpointAnnounced;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _lastCheckpoint;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _missCheckSubbed;

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0xD7FC0C", Offset = "0xD7FC0C", VA = "0xD7FC0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0xD7FD9C", Offset = "0xD7FD9C", VA = "0xD7FD9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0xD7FF48", Offset = "0xD7FF48", VA = "0xD7FF48")]
	private void PastCheckpoint(int position, List<UserPair<float>> userPairs)
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0xD808A0", Offset = "0xD808A0", VA = "0xD808A0")]
	private void TimesUpdated(int position, List<UserPair<float>> userPairs)
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0xD800FC", Offset = "0xD800FC", VA = "0xD800FC")]
	private void UpdateText(List<UserPair<float>> userPairs)
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0xD803A0", Offset = "0xD803A0", VA = "0xD803A0")]
	private void UpdateTimeText(List<UserPair<float>> userPairs)
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0xD80830", Offset = "0xD80830", VA = "0xD80830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D6F0", Offset = "0xB4D6F0")]
	private IEnumerator DisplayRoutine()
	{
		return null;
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0xD807C0", Offset = "0xD807C0", VA = "0xD807C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D754", Offset = "0xB4D754")]
	private IEnumerator DisplayTimeRoutine()
	{
		return null;
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0xD809BC", Offset = "0xD809BC", VA = "0xD809BC")]
	private void CheckpointMissCheck(int playerId, int checkpoint, bool inside, int pointsToAdd, bool finalRing, int ringType)
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0xD80A70", Offset = "0xD80A70", VA = "0xD80A70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D7B8", Offset = "0xB4D7B8")]
	private IEnumerator DisplayMissRoutine()
	{
		return null;
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0xD80B0C", Offset = "0xD80B0C", VA = "0xD80B0C")]
	public CheckpointTimepass()
	{
	}
}
[Token(Token = "0x200035B")]
public class GameSplatFactory : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000837")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351F8", Offset = "0xB351F8")]
	private sealed class <SplatPlay>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameSplatFactory <>4__this;

		[Token(Token = "0x4003027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x170004F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031D5")]
			[Address(RVA = "0x1171CB0", Offset = "0x1171CB0", VA = "0x1171CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031D7")]
			[Address(RVA = "0x1171D18", Offset = "0x1171D18", VA = "0x1171D18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031D2")]
		[Address(RVA = "0x1171890", Offset = "0x1171890", VA = "0x1171890")]
		[DebuggerHidden]
		public <SplatPlay>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60031D3")]
		[Address(RVA = "0x1171B88", Offset = "0x1171B88", VA = "0x1171B88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031D4")]
		[Address(RVA = "0x1171B8C", Offset = "0x1171B8C", VA = "0x1171B8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x1171CB8", Offset = "0x1171CB8", VA = "0x1171CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000838")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35208", Offset = "0xB35208")]
	private sealed class <TickPlay>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400302A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameSplatFactory <>4__this;

		[Token(Token = "0x170004F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031DB")]
			[Address(RVA = "0x1171F18", Offset = "0x1171F18", VA = "0x1171F18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031DD")]
			[Address(RVA = "0x1171F80", Offset = "0x1171F80", VA = "0x1171F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031D8")]
		[Address(RVA = "0x1171A58", Offset = "0x1171A58", VA = "0x1171A58")]
		[DebuggerHidden]
		public <TickPlay>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60031D9")]
		[Address(RVA = "0x1171D20", Offset = "0x1171D20", VA = "0x1171D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x1171D24", Offset = "0x1171D24", VA = "0x1171D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x1171F20", Offset = "0x1171F20", VA = "0x1171F20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextSplatter _mainSplat;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MapSplatData _splatData;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _routine;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _tickRoutine;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _ticker;

	[Token(Token = "0x400162E")]
	private const float _TICKER_TARGET = 1f;

	[Token(Token = "0x400162F")]
	private const int _TICKER_MIN = 40;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _tickStartScore;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _tickAmount;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _lastTickAmount;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _minScoreTicker;

	[Token(Token = "0x4001634")]
	private const float _TICKER_TEST_TARGET = 1f;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _scoreMode;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _subbed;

	[Token(Token = "0x60018B1")]
	[Address(RVA = "0x11715F8", Offset = "0x11715F8", VA = "0x11715F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x117170C", Offset = "0x117170C", VA = "0x117170C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x11717B0", Offset = "0x11717B0", VA = "0x11717B0")]
	public void ShowSplat(string text)
	{
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0x1171814", Offset = "0x1171814", VA = "0x1171814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D81C", Offset = "0xB4D81C")]
	private IEnumerator SplatPlay(string text)
	{
		return null;
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0x11718BC", Offset = "0x11718BC", VA = "0x11718BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0x11719E8", Offset = "0x11719E8", VA = "0x11719E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D880", Offset = "0xB4D880")]
	private IEnumerator TickPlay()
	{
		return null;
	}

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0x1171A84", Offset = "0x1171A84", VA = "0x1171A84")]
	private Sprite GetSplat()
	{
		return null;
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0x1171B20", Offset = "0x1171B20", VA = "0x1171B20")]
	private void GameReset()
	{
	}

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0x1171B78", Offset = "0x1171B78", VA = "0x1171B78")]
	public GameSplatFactory()
	{
	}
}
[Token(Token = "0x200035C")]
public class PlaySplatOnEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextSplatter _splat;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _ignoreFirst;

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0xC4C7AC", Offset = "0xC4C7AC", VA = "0xC4C7AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0xC4C850", Offset = "0xC4C850", VA = "0xC4C850")]
	public PlaySplatOnEnable()
	{
	}
}
[Token(Token = "0x200035D")]
public class TextSplatter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _text;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _timepassPosition;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text _timepassTime;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text _timepassSplit;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color _timepassWhite;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color _timepassYellow;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color _timepassTransparentBg;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color _timepassTransparentBgMe;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Sprite _timepassSprite;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _disableTimer;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _ticker;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _hold;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _gameObject;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _PLAY;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int _OPEN;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int _CLOSE;

	[Token(Token = "0x17000215")]
	private GameObject GameObject
	{
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xCB0FCC", Offset = "0xCB0FCC", VA = "0xCB0FCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xCB1000", Offset = "0xCB1000", VA = "0xCB1000")]
		set
		{
		}
	}

	[Token(Token = "0x60018BE")]
	[Address(RVA = "0xCB1008", Offset = "0xCB1008", VA = "0xCB1008")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0xCB105C", Offset = "0xCB105C", VA = "0xCB105C")]
	public void Play()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0xCB1108", Offset = "0xCB1108", VA = "0xCB1108")]
	public void Play(Sprite sprite)
	{
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0xCB11D4", Offset = "0xCB11D4", VA = "0xCB11D4")]
	public void Play(string text, Sprite sprite)
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0xCB12C0", Offset = "0xCB12C0", VA = "0xCB12C0")]
	public void PreloadSprite(Sprite sprite)
	{
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0xCB1344", Offset = "0xCB1344", VA = "0xCB1344")]
	public void SetTimepass(string userName, Color userColor, int position, string time, bool isMe)
	{
	}

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0xCB15AC", Offset = "0xCB15AC", VA = "0xCB15AC")]
	public void SetTimepass(string userName, Color userColor, int position, string time, string timeSplit, Color splitColor)
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0xCB17DC", Offset = "0xCB17DC", VA = "0xCB17DC")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0xCB1800", Offset = "0xCB1800", VA = "0xCB1800")]
	public void Open()
	{
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0xCB18C0", Offset = "0xCB18C0", VA = "0xCB18C0")]
	public void Open(Sprite sprite)
	{
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0xCB1998", Offset = "0xCB1998", VA = "0xCB1998")]
	public void Close()
	{
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0xCB1A54", Offset = "0xCB1A54", VA = "0xCB1A54")]
	private void Update()
	{
	}

	[Token(Token = "0x60018CA")]
	[Address(RVA = "0xCB1ADC", Offset = "0xCB1ADC", VA = "0xCB1ADC")]
	public TextSplatter()
	{
	}
}
[Token(Token = "0x200035E")]
public static class UnlockTracker
{
	[Token(Token = "0x2000839")]
	public enum Type
	{
		[Token(Token = "0x400302C")]
		Map,
		[Token(Token = "0x400302D")]
		Mode,
		[Token(Token = "0x400302E")]
		Skin,
		[Token(Token = "0x400302F")]
		SkinPopup
	}

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] _typePrefs;

	[Token(Token = "0x400164C")]
	private const string _COURSE_PREF = "PPULC_COURSE_";

	[Token(Token = "0x400164D")]
	private const string _SWATCH_PREF = "PPULC_SWATCH_{0}_{1}";

	[Token(Token = "0x400164E")]
	private const string _SWATCH_UL_PREF = "PPULCP_SWATCH_{0}_{1}";

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0xF9BC34", Offset = "0xF9BC34", VA = "0xF9BC34")]
	public static bool HasBeenSeen(Type type, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0xF9BDB8", Offset = "0xF9BDB8", VA = "0xF9BDB8")]
	public static void SetSeen(Type type, int index)
	{
	}

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0xF9BEA8", Offset = "0xF9BEA8", VA = "0xF9BEA8")]
	public static bool HasSeenCourse(int map, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0xF9BFA0", Offset = "0xF9BFA0", VA = "0xF9BFA0")]
	public static void SetSeenCourse(int map, int index)
	{
	}

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0xF9C0C0", Offset = "0xF9C0C0", VA = "0xF9C0C0")]
	public static bool HasSeenSwatch(int skin, int swatch, bool popup = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60018D1")]
	[Address(RVA = "0xF9C1A8", Offset = "0xF9C1A8", VA = "0xF9C1A8")]
	public static void SetSeenSwatch(int skin, int swatch, bool popup = false)
	{
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0xF9BD40", Offset = "0xF9BD40", VA = "0xF9BD40")]
	private static bool HasBeenSeen(string type, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0xF9BE30", Offset = "0xF9BE30", VA = "0xF9BE30")]
	private static void SetSeen(string type, int index)
	{
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0xF9BCAC", Offset = "0xF9BCAC", VA = "0xF9BCAC")]
	private static string GetKeyByType(Type type)
	{
		return null;
	}

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0xF9C288", Offset = "0xF9C288", VA = "0xF9C288")]
	private static string GetKey(string type, int index)
	{
		return null;
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0xF9C2FC", Offset = "0xF9C2FC", VA = "0xF9C2FC")]
	private static bool CheckPref(string pref)
	{
		return default(bool);
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0xF9C348", Offset = "0xF9C348", VA = "0xF9C348")]
	private static void SetPref(string pref)
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0xF9BF60", Offset = "0xF9BF60", VA = "0xF9BF60")]
	private static int CheckIntPref(string pref)
	{
		return default(int);
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0xF9C07C", Offset = "0xF9C07C", VA = "0xF9C07C")]
	private static void SetIntPref(string pref, int amount)
	{
	}
}
[Token(Token = "0x200035F")]
public class CalibrationAccessor : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200083A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35218", Offset = "0xB35218")]
	private sealed class <>c
	{
		[Token(Token = "0x4003030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4003031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__8_1;

		[Token(Token = "0x60031DF")]
		[Address(RVA = "0xD754F8", Offset = "0xD754F8", VA = "0xD754F8")]
		public <>c()
		{
		}

		[Token(Token = "0x60031E0")]
		[Address(RVA = "0xD75500", Offset = "0xD75500", VA = "0xD75500")]
		internal void <GoToCalibration>b__8_1()
		{
		}
	}

	[Token(Token = "0x200083B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35228", Offset = "0xB35228")]
	private sealed class <WaitForSceneUnload>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AsyncOperation async;

		[Token(Token = "0x4003035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CalibrationAccessor <>4__this;

		[Token(Token = "0x170004FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031E4")]
			[Address(RVA = "0xD75720", Offset = "0xD75720", VA = "0xD75720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031E6")]
			[Address(RVA = "0xD75788", Offset = "0xD75788", VA = "0xD75788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031E1")]
		[Address(RVA = "0xD75134", Offset = "0xD75134", VA = "0xD75134")]
		[DebuggerHidden]
		public <WaitForSceneUnload>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60031E2")]
		[Address(RVA = "0xD755E8", Offset = "0xD755E8", VA = "0xD755E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031E3")]
		[Address(RVA = "0xD755EC", Offset = "0xD755EC", VA = "0xD755EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031E5")]
		[Address(RVA = "0xD75728", Offset = "0xD75728", VA = "0xD75728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRCameraFade _sourceCam;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Scene _sourceScene;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> _disabledLights;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _calibrating;

	[Token(Token = "0x4001653")]
	private const string CALIBRATION_SCENE = "Calibration";

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CalibrationAccessor Instance;

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0xD74DC0", Offset = "0xD74DC0", VA = "0xD74DC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0xD74E40", Offset = "0xD74E40", VA = "0xD74E40")]
	private void Update()
	{
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xD74E94", Offset = "0xD74E94", VA = "0xD74E94")]
	public void GoToCalibration()
	{
	}

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0xD74FD4", Offset = "0xD74FD4", VA = "0xD74FD4")]
	public void ExitCalibration()
	{
	}

	[Token(Token = "0x60018DF")]
	[Address(RVA = "0xD750B8", Offset = "0xD750B8", VA = "0xD750B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D8E4", Offset = "0xB4D8E4")]
	private IEnumerator WaitForSceneUnload(AsyncOperation async)
	{
		return null;
	}

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0xD75160", Offset = "0xD75160", VA = "0xD75160")]
	public CalibrationAccessor()
	{
	}

	[Token(Token = "0x60018E1")]
	[Address(RVA = "0xD75168", Offset = "0xD75168", VA = "0xD75168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D948", Offset = "0xB4D948")]
	private void <GoToCalibration>b__8_0()
	{
	}

	[Token(Token = "0x60018E2")]
	[Address(RVA = "0xD7539C", Offset = "0xD7539C", VA = "0xD7539C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D958", Offset = "0xB4D958")]
	private void <ExitCalibration>b__9_0()
	{
	}
}
[Token(Token = "0x2000360")]
public class CalibrationHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rig _rig;

	[Token(Token = "0x4001656")]
	private const float CalibrationDuration = 2f;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timer;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image poseFiller;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _calibrated;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRModelSizer sizer;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ModelArmScaler armSizer;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text feedbackText;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject recalibrateBtn;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject sitBtn;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fogDensity;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color fogColor;

	[Token(Token = "0x60018E3")]
	[Address(RVA = "0xD75790", Offset = "0xD75790", VA = "0xD75790")]
	private void Start()
	{
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0xD75844", Offset = "0xD75844", VA = "0xD75844")]
	private void Update()
	{
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0xD75F48", Offset = "0xD75F48", VA = "0xD75F48")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0xD75798", Offset = "0xD75798", VA = "0xD75798")]
	public void SetUI(bool isComplete)
	{
	}

	[Token(Token = "0x60018E7")]
	[Address(RVA = "0xD75F7C", Offset = "0xD75F7C", VA = "0xD75F7C")]
	public void Recalibrate()
	{
	}

	[Token(Token = "0x60018E8")]
	[Address(RVA = "0xD75E38", Offset = "0xD75E38", VA = "0xD75E38")]
	private void Calibrate()
	{
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0xD75FA4", Offset = "0xD75FA4", VA = "0xD75FA4")]
	public void Exit()
	{
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0xD75958", Offset = "0xD75958", VA = "0xD75958")]
	private bool InTPose()
	{
		return default(bool);
	}

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0xD75FFC", Offset = "0xD75FFC", VA = "0xD75FFC")]
	public void IdRatherSit()
	{
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0xD760A4", Offset = "0xD760A4", VA = "0xD760A4")]
	public CalibrationHandler()
	{
	}
}
[Token(Token = "0x2000361")]
public class CalibrationInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rig modelRig;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CalibrationInfo Instance;

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0xD760AC", Offset = "0xD760AC", VA = "0xD760AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0xD76100", Offset = "0xD76100", VA = "0xD76100")]
	public CalibrationInfo()
	{
	}
}
[Token(Token = "0x2000362")]
public class CalibrationPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image poseFillerStanding;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image poseFillerSitting;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject choosePanel;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject standingPanel;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject sittingPanel;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject completePanel;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject standingWarningPanel;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject backButton;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LerpCanvasGroup _canvasGroup;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rig _rig;

	[Token(Token = "0x400166D")]
	private const float CalibrationDuration = 2f;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _timer;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _calibrating;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LobbyPanel _mainPanel;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _allowExit;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _calibratingSitting;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Image _poseFiller;

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0xD76108", Offset = "0xD76108", VA = "0xD76108")]
	public void Setup(LobbyPanel mainPanel, bool allowExit)
	{
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0xD761DC", Offset = "0xD761DC", VA = "0xD761DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0xD76480", Offset = "0xD76480", VA = "0xD76480")]
	private bool CheckForRig()
	{
		return default(bool);
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xD7611C", Offset = "0xD7611C", VA = "0xD7611C")]
	private void SetPanel(int panel)
	{
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0xD76C20", Offset = "0xD76C20", VA = "0xD76C20")]
	public void CalibrateStanding()
	{
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0xD76E40", Offset = "0xD76E40", VA = "0xD76E40")]
	public void CalibrateStandingFromWarning()
	{
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0xD76EF4", Offset = "0xD76EF4", VA = "0xD76EF4")]
	public void CalibrateSitting()
	{
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0xD76D10", Offset = "0xD76D10", VA = "0xD76D10")]
	private void SetFakeHeight(bool sitting)
	{
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xD76560", Offset = "0xD76560", VA = "0xD76560")]
	private void Calibrate(float headHeight)
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0xD7701C", Offset = "0xD7701C", VA = "0xD7701C")]
	public void Exit()
	{
	}

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0xD7686C", Offset = "0xD7686C", VA = "0xD7686C")]
	private bool InTPose(float approxHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0xD770F4", Offset = "0xD770F4", VA = "0xD770F4")]
	public CalibrationPanel()
	{
	}
}
[Token(Token = "0x2000363")]
public class ModelArmScaler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BodyIK bodyIk;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float modelSpan;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _leftHand;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _rightHand;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _handScale;

	[Token(Token = "0x4001679")]
	public const float Default_Hand_Size = 1.107595f;

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0xBB9248", Offset = "0xBB9248", VA = "0xBB9248")]
	public void CalibrateArms(float span, float heightScale)
	{
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0xBB92D4", Offset = "0xBB92D4", VA = "0xBB92D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0xBB9404", Offset = "0xBB9404", VA = "0xBB9404")]
	public ModelArmScaler()
	{
	}
}
[Token(Token = "0x2000364")]
public class ModelArmScalerManual : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftShoulder;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftForearm;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHand;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightShoulder;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightForearm;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightHand;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform model;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3DE8C", Offset = "0xB3DE8C")]
	public float scale;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float modelSpan;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _targetScale;

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0xBB9420", Offset = "0xBB9420", VA = "0xBB9420")]
	private void Start()
	{
	}

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0xBB9490", Offset = "0xBB9490", VA = "0xBB9490")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0xBB96B0", Offset = "0xBB96B0", VA = "0xBB96B0")]
	private void SetGlobalScale(Transform tform, Vector3 targetLossy)
	{
	}

	[Token(Token = "0x6001901")]
	[Address(RVA = "0xBB97B8", Offset = "0xBB97B8", VA = "0xBB97B8")]
	public void CalibrateArms(float span)
	{
	}

	[Token(Token = "0x6001902")]
	[Address(RVA = "0xBB97C0", Offset = "0xBB97C0", VA = "0xBB97C0")]
	public ModelArmScalerManual()
	{
	}
}
[Token(Token = "0x2000365")]
public class VRModelSizer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float modelEyeHeight;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool calibrateOnStart;

	[Token(Token = "0x6001903")]
	[Address(RVA = "0x10EB18C", Offset = "0x10EB18C", VA = "0x10EB18C")]
	public void CalibrateModelSize(float height)
	{
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0x10EB254", Offset = "0x10EB254", VA = "0x10EB254")]
	private void AutoResize()
	{
	}

	[Token(Token = "0x6001905")]
	[Address(RVA = "0x10EB2DC", Offset = "0x10EB2DC", VA = "0x10EB2DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0x10EB360", Offset = "0x10EB360", VA = "0x10EB360")]
	public VRModelSizer()
	{
	}
}
[Token(Token = "0x2000366")]
public class VRSizeTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRModelSizer sizer;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ModelArmScaler armScaler;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _userId;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DEA4", Offset = "0xB3DEA4")]
	private float <Height>k__BackingField;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _initialised;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _editorScale;

	[Token(Token = "0x17000216")]
	public float Height
	{
		[Token(Token = "0x6001907")]
		[Address(RVA = "0x10EC604", Offset = "0x10EC604", VA = "0x10EC604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D968", Offset = "0xB4D968")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001908")]
		[Address(RVA = "0x10EC60C", Offset = "0x10EC60C", VA = "0x10EC60C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4D978", Offset = "0xB4D978")]
		private set
		{
		}
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0x10EC614", Offset = "0x10EC614", VA = "0x10EC614")]
	private void Start()
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0x10EC618", Offset = "0x10EC618", VA = "0x10EC618")]
	public void Setup()
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0x10EC758", Offset = "0x10EC758", VA = "0x10EC758")]
	private void OnArmsUpdated(float span, float height)
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0x10EC880", Offset = "0x10EC880", VA = "0x10EC880")]
	private void OnHeightRecalibrated(int user, float height, float span)
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0x10EC8DC", Offset = "0x10EC8DC", VA = "0x10EC8DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0x10EC978", Offset = "0x10EC978", VA = "0x10EC978")]
	public VRSizeTracker()
	{
	}
}
[Token(Token = "0x2000367")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33268", Offset = "0xB33268")]
public class CameraDepthRemover : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _onlyOnPs4;

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xD77208", Offset = "0xD77208", VA = "0xD77208")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0xD77298", Offset = "0xD77298", VA = "0xD77298")]
	private void Start()
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0xD772A8", Offset = "0xD772A8", VA = "0xD772A8")]
	public void RemoveDepth()
	{
	}

	[Token(Token = "0x6001912")]
	[Address(RVA = "0xD772C8", Offset = "0xD772C8", VA = "0xD772C8")]
	public CameraDepthRemover()
	{
	}
}
[Token(Token = "0x2000368")]
public class DQCountdownDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200083C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35238", Offset = "0xB35238")]
	private sealed class <OnDisqualified>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DQCountdownDisplay <>4__this;

		[Token(Token = "0x170004FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031EA")]
			[Address(RVA = "0xD4AB24", Offset = "0xD4AB24", VA = "0xD4AB24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031EC")]
			[Address(RVA = "0xD4AB8C", Offset = "0xD4AB8C", VA = "0xD4AB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031E7")]
		[Address(RVA = "0xD4A9EC", Offset = "0xD4A9EC", VA = "0xD4A9EC")]
		[DebuggerHidden]
		public <OnDisqualified>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60031E8")]
		[Address(RVA = "0xD4AA20", Offset = "0xD4AA20", VA = "0xD4AA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031E9")]
		[Address(RVA = "0xD4AA24", Offset = "0xD4AA24", VA = "0xD4AA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031EB")]
		[Address(RVA = "0xD4AB2C", Offset = "0xD4AB2C", VA = "0xD4AB2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text countdownText;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject disqualText;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _visible;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DQCountdownDisplay Instance;

	[Token(Token = "0x6001913")]
	[Address(RVA = "0xD4A7E4", Offset = "0xD4A7E4", VA = "0xD4A7E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001914")]
	[Address(RVA = "0xD4A838", Offset = "0xD4A838", VA = "0xD4A838")]
	private void Update()
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0xD4A968", Offset = "0xD4A968", VA = "0xD4A968")]
	public void ShowDCMessage()
	{
	}

	[Token(Token = "0x6001916")]
	[Address(RVA = "0xD4A97C", Offset = "0xD4A97C", VA = "0xD4A97C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D988", Offset = "0xB4D988")]
	private IEnumerator OnDisqualified()
	{
		return null;
	}

	[Token(Token = "0x6001917")]
	[Address(RVA = "0xD4AA18", Offset = "0xD4AA18", VA = "0xD4AA18")]
	public DQCountdownDisplay()
	{
	}
}
[Token(Token = "0x2000369")]
public class DeactivateOnVrPlatform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool vive;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool rift;

	[Token(Token = "0x6001918")]
	[Address(RVA = "0xD4F558", Offset = "0xD4F558", VA = "0xD4F558")]
	private void Start()
	{
	}

	[Token(Token = "0x6001919")]
	[Address(RVA = "0xD4F644", Offset = "0xD4F644", VA = "0xD4F644")]
	public DeactivateOnVrPlatform()
	{
	}
}
[Token(Token = "0x200036A")]
public class FallPastEdge : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200083D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35248", Offset = "0xB35248")]
	private sealed class <Fall>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400303A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400303B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FallPastEdge <>4__this;

		[Token(Token = "0x400303C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x400303D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <dropSpeed>5__3;

		[Token(Token = "0x400303E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <reset>5__4;

		[Token(Token = "0x170004FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031F0")]
			[Address(RVA = "0xE8EE5C", Offset = "0xE8EE5C", VA = "0xE8EE5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031F2")]
			[Address(RVA = "0xE8EEC4", Offset = "0xE8EEC4", VA = "0xE8EEC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031ED")]
		[Address(RVA = "0xE8E9E4", Offset = "0xE8E9E4", VA = "0xE8E9E4")]
		[DebuggerHidden]
		public <Fall>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60031EE")]
		[Address(RVA = "0xE8EBC8", Offset = "0xE8EBC8", VA = "0xE8EBC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031EF")]
		[Address(RVA = "0xE8EBCC", Offset = "0xE8EBCC", VA = "0xE8EBCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031F1")]
		[Address(RVA = "0xE8EE64", Offset = "0xE8EE64", VA = "0xE8EE64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float edgeZ;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tracker;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _canFall;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BodyIK bodyIk;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Falling;

	[Token(Token = "0x400169A")]
	private const float ResetBufferDist = 0.2f;

	[Token(Token = "0x600191A")]
	[Address(RVA = "0xE8E7F4", Offset = "0xE8E7F4", VA = "0xE8E7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0xE8E844", Offset = "0xE8E844", VA = "0xE8E844")]
	private void Update()
	{
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0xE8E974", Offset = "0xE8E974", VA = "0xE8E974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4D9EC", Offset = "0xB4D9EC")]
	private IEnumerator Fall()
	{
		return null;
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0xE8EA10", Offset = "0xE8EA10", VA = "0xE8EA10")]
	private void Reset()
	{
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0xE8EAD8", Offset = "0xE8EAD8", VA = "0xE8EAD8")]
	public FallPastEdge()
	{
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0xE8EAEC", Offset = "0xE8EAEC", VA = "0xE8EAEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DA50", Offset = "0xB4DA50")]
	private void <Reset>b__9_0()
	{
	}
}
[Token(Token = "0x200036B")]
public class GameHandRayOnPause : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandObjectTracker tracker;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _usingBeam;

	[Token(Token = "0x6001920")]
	[Address(RVA = "0x11711C4", Offset = "0x11711C4", VA = "0x11711C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0x11712B4", Offset = "0x11712B4", VA = "0x11712B4")]
	private void OnReset()
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0x11712D0", Offset = "0x11712D0", VA = "0x11712D0")]
	private void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0x1171300", Offset = "0x1171300", VA = "0x1171300")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0x117139C", Offset = "0x117139C", VA = "0x117139C")]
	public GameHandRayOnPause()
	{
	}
}
[Token(Token = "0x200036C")]
public class HeightOffsetFixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool additive;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ActiveDevice[] onDevice;

	[Token(Token = "0x6001925")]
	[Address(RVA = "0xCE4AAC", Offset = "0xCE4AAC", VA = "0xCE4AAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0xCE4BC0", Offset = "0xCE4BC0", VA = "0xCE4BC0")]
	private void SetHeight()
	{
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0xCE4D24", Offset = "0xCE4D24", VA = "0xCE4D24")]
	public HeightOffsetFixer()
	{
	}
}
[Token(Token = "0x200036D")]
public class LoadingHeightFixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camera;

	[Token(Token = "0x6001928")]
	[Address(RVA = "0xE0DE58", Offset = "0xE0DE58", VA = "0xE0DE58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0xE0DE5C", Offset = "0xE0DE5C", VA = "0xE0DE5C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4DA60", Offset = "0xB4DA60")]
	private void SetHeight()
	{
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0xE0DF68", Offset = "0xE0DF68", VA = "0xE0DF68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0xE0DF6C", Offset = "0xE0DF6C", VA = "0xE0DF6C")]
	public LoadingHeightFixer()
	{
	}
}
[Token(Token = "0x200036E")]
public class MirrorOffsetTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform gun1;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gun2;

	[Token(Token = "0x600192C")]
	[Address(RVA = "0xD3E818", Offset = "0xD3E818", VA = "0xD3E818")]
	private void Update()
	{
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0xD3E8F0", Offset = "0xD3E8F0", VA = "0xD3E8F0")]
	private Pose MirrorOffset(Vector3 pos, Quaternion rot)
	{
		return default(Pose);
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0xD3E97C", Offset = "0xD3E97C", VA = "0xD3E97C")]
	public MirrorOffsetTest()
	{
	}
}
[Token(Token = "0x200036F")]
public class RaceUiInRangeChecker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float edgeZ;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tracker;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpawnGameStartCircle spawnPanel;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LerpCanvasGroup _uiGroup;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LerpCanvasGroup approachTextGroup;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool inRange;

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xBDE304", Offset = "0xBDE304", VA = "0xBDE304")]
	private void Update()
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xBDE5A4", Offset = "0xBDE5A4", VA = "0xBDE5A4")]
	public RaceUiInRangeChecker()
	{
	}
}
[Token(Token = "0x2000370")]
public class RemoveBounceOnGrab : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicMaterial noBounce;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhysicMaterial _returnMat;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRGrabbable grabbable;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider col;

	[Token(Token = "0x6001932")]
	[Address(RVA = "0xBE6454", Offset = "0xBE6454", VA = "0xBE6454")]
	private void Start()
	{
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xBE65A4", Offset = "0xBE65A4", VA = "0xBE65A4")]
	private void Begin(VRGrabber obj)
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0xBE65C8", Offset = "0xBE65C8", VA = "0xBE65C8")]
	private void End(VRGrabber obj)
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0xBE65EC", Offset = "0xBE65EC", VA = "0xBE65EC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0xBE665C", Offset = "0xBE665C", VA = "0xBE665C")]
	public RemoveBounceOnGrab()
	{
	}
}
[Token(Token = "0x2000371")]
public class RoomScaleFixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200083E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35258", Offset = "0xB35258")]
	private sealed class <LowerBody>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400303F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScaleFixer <>4__this;

		[Token(Token = "0x4003042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <duration>5__2;

		[Token(Token = "0x4003043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x4003044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <meshPos>5__4;

		[Token(Token = "0x17000501")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031F6")]
			[Address(RVA = "0xC9B6C4", Offset = "0xC9B6C4", VA = "0xC9B6C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031F8")]
			[Address(RVA = "0xC9B72C", Offset = "0xC9B72C", VA = "0xC9B72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031F3")]
		[Address(RVA = "0xC9B090", Offset = "0xC9B090", VA = "0xC9B090")]
		[DebuggerHidden]
		public <LowerBody>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60031F4")]
		[Address(RVA = "0xC9B548", Offset = "0xC9B548", VA = "0xC9B548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031F5")]
		[Address(RVA = "0xC9B54C", Offset = "0xC9B54C", VA = "0xC9B54C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031F7")]
		[Address(RVA = "0xC9B6CC", Offset = "0xC9B6CC", VA = "0xC9B6CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200083F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35268", Offset = "0xB35268")]
	private sealed class <StraightenBody>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScaleFixer <>4__this;

		[Token(Token = "0x4003048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float endY;

		[Token(Token = "0x4003049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__2;

		[Token(Token = "0x400304A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x400304B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <initPos>5__4;

		[Token(Token = "0x400304C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <finalPos>5__5;

		[Token(Token = "0x17000503")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60031FC")]
			[Address(RVA = "0xC9B8E8", Offset = "0xC9B8E8", VA = "0xC9B8E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000504")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60031FE")]
			[Address(RVA = "0xC9B950", Offset = "0xC9B950", VA = "0xC9B950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031F9")]
		[Address(RVA = "0xC9B13C", Offset = "0xC9B13C", VA = "0xC9B13C")]
		[DebuggerHidden]
		public <StraightenBody>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60031FA")]
		[Address(RVA = "0xC9B734", Offset = "0xC9B734", VA = "0xC9B734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60031FB")]
		[Address(RVA = "0xC9B738", Offset = "0xC9B738", VA = "0xC9B738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60031FD")]
		[Address(RVA = "0xC9B8F0", Offset = "0xC9B8F0", VA = "0xC9B8F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform gamePlayer;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform headCam;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform model;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform modelParent;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _initCamParent;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _initOffset;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _initFloorPos;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BodyIK bodyIk;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRParentCenterer centerer;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SittingTracker sittingTracker;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CheapFinalIk cheapFlyingIk;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _mesh;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _switchIk;

	[Token(Token = "0x6001937")]
	[Address(RVA = "0xC9A914", Offset = "0xC9A914", VA = "0xC9A914")]
	private void Start()
	{
	}

	[Token(Token = "0x6001938")]
	[Address(RVA = "0xC9AB84", Offset = "0xC9AB84", VA = "0xC9AB84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0xC9AC90", Offset = "0xC9AC90", VA = "0xC9AC90")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0xC9AF34", Offset = "0xC9AF34", VA = "0xC9AF34")]
	private void Update()
	{
	}

	[Token(Token = "0x600193B")]
	[Address(RVA = "0xC9AA94", Offset = "0xC9AA94", VA = "0xC9AA94")]
	private void DetachCamera()
	{
	}

	[Token(Token = "0x600193C")]
	[Address(RVA = "0xC9AE10", Offset = "0xC9AE10", VA = "0xC9AE10")]
	private void StraightenBodyInstant(float endY)
	{
	}

	[Token(Token = "0x600193D")]
	[Address(RVA = "0xC9AEC4", Offset = "0xC9AEC4", VA = "0xC9AEC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4DA98", Offset = "0xB4DA98")]
	private IEnumerator LowerBody()
	{
		return null;
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0xC9B0BC", Offset = "0xC9B0BC", VA = "0xC9B0BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4DAFC", Offset = "0xB4DAFC")]
	private IEnumerator StraightenBody(float endY)
	{
		return null;
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0xC9B168", Offset = "0xC9B168", VA = "0xC9B168")]
	private void OnGameReset()
	{
	}

	[Token(Token = "0x6001940")]
	[Address(RVA = "0xC9B3A8", Offset = "0xC9B3A8", VA = "0xC9B3A8")]
	private void OnGameFinished(ScoreData obj)
	{
	}

	[Token(Token = "0x6001941")]
	[Address(RVA = "0xC9B4E0", Offset = "0xC9B4E0", VA = "0xC9B4E0")]
	public RoomScaleFixer()
	{
	}
}
[Token(Token = "0x2000372")]
public class RoomScaleFixerTutorial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35278", Offset = "0xB35278")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400304D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400304E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400304F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScaleFixerTutorial <>4__this;

		[Token(Token = "0x17000505")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003202")]
			[Address(RVA = "0xC9BAE0", Offset = "0xC9BAE0", VA = "0xC9BAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003204")]
			[Address(RVA = "0xC9BB48", Offset = "0xC9BB48", VA = "0xC9BB48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60031FF")]
		[Address(RVA = "0xC9B9C8", Offset = "0xC9B9C8", VA = "0xC9B9C8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6003200")]
		[Address(RVA = "0xC9B9FC", Offset = "0xC9B9FC", VA = "0xC9B9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003201")]
		[Address(RVA = "0xC9BA00", Offset = "0xC9BA00", VA = "0xC9BA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003203")]
		[Address(RVA = "0xC9BAE8", Offset = "0xC9BAE8", VA = "0xC9BAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRParentCenterer centerer;

	[Token(Token = "0x6001942")]
	[Address(RVA = "0xC9B958", Offset = "0xC9B958", VA = "0xC9B958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4DB60", Offset = "0xB4DB60")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001943")]
	[Address(RVA = "0xC9B9F4", Offset = "0xC9B9F4", VA = "0xC9B9F4")]
	public RoomScaleFixerTutorial()
	{
	}
}
[Token(Token = "0x2000373")]
public class SetWhenNonRS : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion rot;

	[Token(Token = "0x6001944")]
	[Address(RVA = "0xCA4B28", Offset = "0xCA4B28", VA = "0xCA4B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0xCA4BE4", Offset = "0xCA4BE4", VA = "0xCA4BE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4DBC4", Offset = "0xB4DBC4")]
	private void SetCurrentAndZero()
	{
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0xCA4CFC", Offset = "0xCA4CFC", VA = "0xCA4CFC")]
	public SetWhenNonRS()
	{
	}
}
[Token(Token = "0x2000374")]
public class VRHeadCam : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setHeight;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRHeadCam Instance;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _recenteredOnce;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackedPoseDriver poseDriver;

	[Token(Token = "0x6001947")]
	[Address(RVA = "0x10E76C0", Offset = "0x10E76C0", VA = "0x10E76C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0x10E7CD0", Offset = "0x10E7CD0", VA = "0x10E7CD0")]
	private void ChangeHeight(float height)
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0x10E79DC", Offset = "0x10E79DC", VA = "0x10E79DC")]
	private void AddRotOffset()
	{
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0x10E7F2C", Offset = "0x10E7F2C", VA = "0x10E7F2C")]
	public void UpdateHeight()
	{
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0x10E7FC4", Offset = "0x10E7FC4", VA = "0x10E7FC4")]
	public VRHeadCam()
	{
	}
}
[Token(Token = "0x2000375")]
public class VRInitialiser : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject riftPrefab;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject vivePrefab;

	[Token(Token = "0x600194D")]
	[Address(RVA = "0x10E7FD8", Offset = "0x10E7FD8", VA = "0x10E7FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0x10E85BC", Offset = "0x10E85BC", VA = "0x10E85BC")]
	public VRInitialiser()
	{
	}
}
[Token(Token = "0x2000376")]
public class VRRecenterer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 _posOffset;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Quaternion _rotOffsetInv;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Vector3 _rotateAroundPosMovement;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool recentered;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _handDownTime;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _leftTriggered;

	[Token(Token = "0x40016C8")]
	private const float OVERLAP_WINDOW = 0.1f;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private static bool _recenteredOnce;

	[Token(Token = "0x600194F")]
	[Address(RVA = "0x10EBA70", Offset = "0x10EBA70", VA = "0x10EBA70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0x10EBB68", Offset = "0x10EBB68", VA = "0x10EBB68")]
	private void Update()
	{
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0x10EBB08", Offset = "0x10EBB08", VA = "0x10EBB08")]
	private void Recenter()
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0x10EBCE0", Offset = "0x10EBCE0", VA = "0x10EBCE0")]
	public VRRecenterer()
	{
	}
}
[Token(Token = "0x2000377")]
public class CameraHandMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform handTarget;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _handParent;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VREyeRaycaster rayCaster;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cam;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandOffset offset;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _initLocalPos;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _initCamRelPos;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion _initCamRelRot;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DED4", Offset = "0xB3DED4")]
	private bool <UseCamMovement>k__BackingField;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _wasUsingCamMovement;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RayGrabbable _pickup;

	[Token(Token = "0x17000217")]
	public bool UseCamMovement
	{
		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD772D8", Offset = "0xD772D8", VA = "0xD772D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DBFC", Offset = "0xB4DBFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD772E0", Offset = "0xD772E0", VA = "0xD772E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DC0C", Offset = "0xB4DC0C")]
		set
		{
		}
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0xD772EC", Offset = "0xD772EC", VA = "0xD772EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0xD77370", Offset = "0xD77370", VA = "0xD77370")]
	public void RegisterPickup(RayGrabbable pickup)
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0xD77378", Offset = "0xD77378", VA = "0xD77378")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0xD775B4", Offset = "0xD775B4", VA = "0xD775B4")]
	private void RotateHandToCenter()
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0xD779D4", Offset = "0xD779D4", VA = "0xD779D4")]
	public CameraHandMovement()
	{
	}
}
[Token(Token = "0x2000378")]
public class FlippedObjectTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform refObj;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform toFlip;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axisMult;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int angleMul;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 globalMult;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float globalAng;

	[Token(Token = "0x600195B")]
	[Address(RVA = "0xDC4D10", Offset = "0xDC4D10", VA = "0xDC4D10")]
	private void Update()
	{
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0xDC4DB8", Offset = "0xDC4DB8", VA = "0xDC4DB8")]
	public Vector3 GetPosOffset(Vector3 offset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0xDC4DF0", Offset = "0xDC4DF0", VA = "0xDC4DF0")]
	public Quaternion GetRotOffset(Quaternion rot)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0xDC4F20", Offset = "0xDC4F20", VA = "0xDC4F20")]
	public FlippedObjectTest()
	{
	}
}
[Token(Token = "0x2000379")]
public class GrabRay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000841")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35288", Offset = "0xB35288")]
	private sealed class <AttractItem>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabRay <>4__this;

		[Token(Token = "0x4003053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4003054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lerp>5__3;

		[Token(Token = "0x4003055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <heldTf>5__4;

		[Token(Token = "0x4003056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <initPos>5__5;

		[Token(Token = "0x4003057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion <initRot>5__6;

		[Token(Token = "0x4003058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 <destPosOffset>5__7;

		[Token(Token = "0x4003059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion <destRotOffset>5__8;

		[Token(Token = "0x17000507")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003208")]
			[Address(RVA = "0xCDA274", Offset = "0xCDA274", VA = "0xCDA274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000508")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600320A")]
			[Address(RVA = "0xCDA2DC", Offset = "0xCDA2DC", VA = "0xCDA2DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003205")]
		[Address(RVA = "0xCD9B9C", Offset = "0xCD9B9C", VA = "0xCD9B9C")]
		[DebuggerHidden]
		public <AttractItem>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6003206")]
		[Address(RVA = "0xCD9BD4", Offset = "0xCD9BD4", VA = "0xCD9BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003207")]
		[Address(RVA = "0xCD9BD8", Offset = "0xCD9BD8", VA = "0xCD9BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003209")]
		[Address(RVA = "0xCDA27C", Offset = "0xCDA27C", VA = "0xCDA27C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform palm;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer grabBeam;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient grabBeamNormal;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient grabBeamHit;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RayGrabbable _selected;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RayGrabbable _held;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLeft;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HandNubTracker handTracker;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject uiBeam;

	[Token(Token = "0x17000218")]
	public bool ItemGrabbed
	{
		[Token(Token = "0x600195F")]
		[Address(RVA = "0xCD94D8", Offset = "0xCD94D8", VA = "0xCD94D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0xCD9548", Offset = "0xCD9548", VA = "0xCD9548")]
	private void Update()
	{
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0xCD98FC", Offset = "0xCD98FC", VA = "0xCD98FC")]
	private void SetBeamColour()
	{
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0xCD9830", Offset = "0xCD9830", VA = "0xCD9830")]
	private void GrabItem()
	{
	}

	[Token(Token = "0x6001963")]
	[Address(RVA = "0xCD9A9C", Offset = "0xCD9A9C", VA = "0xCD9A9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4DC1C", Offset = "0xB4DC1C")]
	private IEnumerator AttractItem()
	{
		return null;
	}

	[Token(Token = "0x6001964")]
	[Address(RVA = "0xCD9A80", Offset = "0xCD9A80", VA = "0xCD9A80")]
	private void SetHandPose(HandPose pose)
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0xCD9638", Offset = "0xCD9638", VA = "0xCD9638")]
	private void ScanForHit()
	{
	}

	[Token(Token = "0x6001966")]
	[Address(RVA = "0xCD9BC8", Offset = "0xCD9BC8", VA = "0xCD9BC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001967")]
	[Address(RVA = "0xCD9B0C", Offset = "0xCD9B0C", VA = "0xCD9B0C")]
	private void Deselect()
	{
	}

	[Token(Token = "0x6001968")]
	[Address(RVA = "0xCD9BCC", Offset = "0xCD9BCC", VA = "0xCD9BCC")]
	public GrabRay()
	{
	}
}
[Token(Token = "0x200037A")]
public class HandItemController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001969")]
	[Address(RVA = "0xCDD728", Offset = "0xCDD728", VA = "0xCDD728")]
	private void Start()
	{
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0xCDD72C", Offset = "0xCDD72C", VA = "0xCDD72C")]
	private void Update()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0xCDD730", Offset = "0xCDD730", VA = "0xCDD730")]
	public HandItemController()
	{
	}
}
[Token(Token = "0x200037B")]
public class RayGrabbable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Selectable selectable;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPose pose;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rayParent;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandOffset handOffset;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onPickup;

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isPickup;

	[Token(Token = "0x600196C")]
	[Address(RVA = "0xBE434C", Offset = "0xBE434C", VA = "0xBE434C")]
	public void Highlight(bool on)
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xBE43F4", Offset = "0xBE43F4", VA = "0xBE43F4")]
	public void OnPickup()
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0xBE4408", Offset = "0xBE4408", VA = "0xBE4408")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4DC80", Offset = "0xB4DC80")]
	private void GenerateOffsetObject()
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0xBE4424", Offset = "0xBE4424", VA = "0xBE4424")]
	public RayGrabbable()
	{
	}
}
[Token(Token = "0x200037C")]
public class SpawnController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RayGrabbable controllerGo;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RayGrabbable controllerGear;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform uiBeam;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform palm;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLeft;

	[Token(Token = "0x6001970")]
	[Address(RVA = "0xDAF09C", Offset = "0xDAF09C", VA = "0xDAF09C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0xDAF15C", Offset = "0xDAF15C", VA = "0xDAF15C")]
	public void SetHeldObject(bool isLeft, RayGrabbable obj)
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0xDAF4C0", Offset = "0xDAF4C0", VA = "0xDAF4C0")]
	public SpawnController()
	{
	}
}
[Serializable]
[Token(Token = "0x200037D")]
public class AttachInfo
{
	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AttachMethod attachMethod;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool snapPosition;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool snapOrientation;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandOffset snapOffset;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Axis snapObjectAxis;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Axis toHandAxis;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool eitherDirection;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float snapDistFromPalm;

	[Token(Token = "0x6001973")]
	[Address(RVA = "0xE6BCEC", Offset = "0xE6BCEC", VA = "0xE6BCEC")]
	public AttachInfo()
	{
	}
}
[Token(Token = "0x200037E")]
public class EditorHand : IVRHand, IVRTrack
{
	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DEE4", Offset = "0xB3DEE4")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x17000219")]
	public bool IsLeft
	{
		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD573C0", Offset = "0xD573C0", VA = "0xD573C0", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DCB8", Offset = "0xB4DCB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD573C8", Offset = "0xD573C8", VA = "0xD573C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DCC8", Offset = "0xB4DCC8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xD57290", Offset = "0xD57290", VA = "0xD57290")]
	public EditorHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xD572C0", Offset = "0xD572C0", VA = "0xD572C0", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xD57320", Offset = "0xD57320", VA = "0xD57320", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0xD57380", Offset = "0xD57380", VA = "0xD57380", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0xD573B8", Offset = "0xD573B8", VA = "0xD573B8", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0xD573D4", Offset = "0xD573D4", VA = "0xD573D4", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0xD5743C", Offset = "0xD5743C", VA = "0xD5743C", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0xD57468", Offset = "0xD57468", VA = "0xD57468", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0xD57494", Offset = "0xD57494", VA = "0xD57494", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0xD574F4", Offset = "0xD574F4", VA = "0xD574F4", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0xD57554", Offset = "0xD57554", VA = "0xD57554", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0xD573FC", Offset = "0xD573FC", VA = "0xD573FC")]
	private bool IsKeyEngaged(KeyCode key, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0xD57580", Offset = "0xD57580", VA = "0xD57580")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0xD575E0", Offset = "0xD575E0", VA = "0xD575E0")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0xD57640", Offset = "0xD57640", VA = "0xD57640", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0xD57668", Offset = "0xD57668", VA = "0xD57668", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0xD57690", Offset = "0xD57690", VA = "0xD57690", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0xD57698", Offset = "0xD57698", VA = "0xD57698", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0xD576A0", Offset = "0xD576A0", VA = "0xD576A0", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0xD57700", Offset = "0xD57700", VA = "0xD57700", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0xD57708", Offset = "0xD57708", VA = "0xD57708", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x200037F")]
public class EditorNub : IVRNub
{
	[Token(Token = "0x600198B")]
	[Address(RVA = "0xD57A18", Offset = "0xD57A18", VA = "0xD57A18", Slot = "4")]
	public bool IsLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0xD57A24", Offset = "0xD57A24", VA = "0xD57A24", Slot = "5")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0xD57A58", Offset = "0xD57A58", VA = "0xD57A58", Slot = "6")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0xD57B38", Offset = "0xD57B38", VA = "0xD57B38", Slot = "7")]
	public bool IsPrimaryButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0xD57B44", Offset = "0xD57B44", VA = "0xD57B44", Slot = "8")]
	public bool IsSecondaryButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0xD57B50", Offset = "0xD57B50", VA = "0xD57B50", Slot = "9")]
	public Vector2 GetAxis()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0xD57BE4", Offset = "0xD57BE4", VA = "0xD57BE4")]
	public EditorNub()
	{
	}
}
[Token(Token = "0x2000380")]
public class EditorNubLook : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform nub;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorNubLook NubLook;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static EditorNubLook _instance;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _active;

	[Token(Token = "0x1700021A")]
	public static bool IsActive
	{
		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD57BEC", Offset = "0xD57BEC", VA = "0xD57BEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021B")]
	private bool NubSupported
	{
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD57C98", Offset = "0xD57C98", VA = "0xD57C98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0xD57CFC", Offset = "0xD57CFC", VA = "0xD57CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0xD57D04", Offset = "0xD57D04", VA = "0xD57D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0xD57D58", Offset = "0xD57D58", VA = "0xD57D58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0xD57DAC", Offset = "0xD57DAC", VA = "0xD57DAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0xD57E48", Offset = "0xD57E48", VA = "0xD57E48")]
	private static float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0xD57E88", Offset = "0xD57E88", VA = "0xD57E88")]
	public EditorNubLook()
	{
	}
}
[Token(Token = "0x2000381")]
public class HandAnimator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF14", Offset = "0xB3DF14")]
	private HandPose <LeftPose>k__BackingField;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF24", Offset = "0xB3DF24")]
	private HandPose <RightPose>k__BackingField;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF34", Offset = "0xB3DF34")]
	private int <LeftPriority>k__BackingField;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF44", Offset = "0xB3DF44")]
	private int <RightPriority>k__BackingField;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FingerSyncInfo leftFingerSync;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FingerSyncInfo rightFingerSync;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF54", Offset = "0xB3DF54")]
	private bool <LeftGesturing>k__BackingField;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF64", Offset = "0xB3DF64")]
	private bool <RightGesturing>k__BackingField;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _leftGestureTimer;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _rightGestureTimer;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] _animLayerConvert;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] _animParamConvert;

	[Token(Token = "0x1700021C")]
	public HandPose LeftPose
	{
		[Token(Token = "0x600199A")]
		[Address(RVA = "0xCDBE74", Offset = "0xCDBE74", VA = "0xCDBE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DCD8", Offset = "0xB4DCD8")]
		get
		{
			return default(HandPose);
		}
		[Token(Token = "0x600199B")]
		[Address(RVA = "0xCDBE7C", Offset = "0xCDBE7C", VA = "0xCDBE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DCE8", Offset = "0xB4DCE8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public HandPose RightPose
	{
		[Token(Token = "0x600199C")]
		[Address(RVA = "0xCDBE84", Offset = "0xCDBE84", VA = "0xCDBE84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DCF8", Offset = "0xB4DCF8")]
		get
		{
			return default(HandPose);
		}
		[Token(Token = "0x600199D")]
		[Address(RVA = "0xCDBE8C", Offset = "0xCDBE8C", VA = "0xCDBE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD08", Offset = "0xB4DD08")]
		private set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public int LeftPriority
	{
		[Token(Token = "0x600199E")]
		[Address(RVA = "0xCDBE94", Offset = "0xCDBE94", VA = "0xCDBE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD18", Offset = "0xB4DD18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600199F")]
		[Address(RVA = "0xCDBE9C", Offset = "0xCDBE9C", VA = "0xCDBE9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD28", Offset = "0xB4DD28")]
		private set
		{
		}
	}

	[Token(Token = "0x1700021F")]
	public int RightPriority
	{
		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xCDBEA4", Offset = "0xCDBEA4", VA = "0xCDBEA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD38", Offset = "0xB4DD38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xCDBEAC", Offset = "0xCDBEAC", VA = "0xCDBEAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD48", Offset = "0xB4DD48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000220")]
	public bool LeftGesturing
	{
		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xCDBEB4", Offset = "0xCDBEB4", VA = "0xCDBEB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD58", Offset = "0xB4DD58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xCDBEBC", Offset = "0xCDBEBC", VA = "0xCDBEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD68", Offset = "0xB4DD68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000221")]
	public bool RightGesturing
	{
		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xCDBEC8", Offset = "0xCDBEC8", VA = "0xCDBEC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD78", Offset = "0xB4DD78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xCDBED0", Offset = "0xCDBED0", VA = "0xCDBED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD88", Offset = "0xB4DD88")]
		private set
		{
		}
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0xCDBEDC", Offset = "0xCDBEDC", VA = "0xCDBEDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0xCDC228", Offset = "0xCDC228", VA = "0xCDC228")]
	public void SetLeftHandPose(HandPose pose, int priority)
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0xCDC304", Offset = "0xCDC304", VA = "0xCDC304")]
	public void SetRightHandPose(HandPose pose, int priority)
	{
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0xCDC394", Offset = "0xCDC394", VA = "0xCDC394")]
	public void SetLayerWeight(AnimLayer layer, float weight)
	{
	}

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0xCDC424", Offset = "0xCDC424", VA = "0xCDC424")]
	public void SetLeftFingers(float flex, float pinch, float thumbOff, float indexOff)
	{
	}

	[Token(Token = "0x60019AB")]
	[Address(RVA = "0xCDC600", Offset = "0xCDC600", VA = "0xCDC600")]
	public void SetRightFingers(float flex, float pinch, float thumbOff, float indexOff)
	{
	}

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0xCDC5C4", Offset = "0xCDC5C4", VA = "0xCDC5C4")]
	private bool UseFingerLayers(bool left)
	{
		return default(bool);
	}

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0xCDC7A0", Offset = "0xCDC7A0", VA = "0xCDC7A0")]
	public void SetLeftGesture(Vector2 axis)
	{
	}

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0xCDCAFC", Offset = "0xCDCAFC", VA = "0xCDCAFC")]
	public void SetRightGesture(Vector2 axis)
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0xCDC884", Offset = "0xCDC884", VA = "0xCDC884")]
	private bool IsGesturing(Vector2 axis, ref float timer)
	{
		return default(bool);
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0xCDC9A4", Offset = "0xCDC9A4", VA = "0xCDC9A4")]
	private Vector2 ApplyCurvesToAxis(Vector2 input)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0xCDC2B8", Offset = "0xCDC2B8", VA = "0xCDC2B8")]
	private int GetParamIndex(AnimParam param)
	{
		return default(int);
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0xCDC3D8", Offset = "0xCDC3D8", VA = "0xCDC3D8")]
	private int GetLayerIndex(AnimLayer layer)
	{
		return default(int);
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0xCDBEE0", Offset = "0xCDBEE0", VA = "0xCDBEE0")]
	private void SetupAnimDicts()
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0xCDCC2C", Offset = "0xCDCC2C", VA = "0xCDCC2C")]
	public HandAnimator()
	{
	}
}
[Token(Token = "0x2000382")]
public enum AnimLayer
{
	[Token(Token = "0x400170C")]
	LeftHand,
	[Token(Token = "0x400170D")]
	LeftThumb,
	[Token(Token = "0x400170E")]
	LeftIndex,
	[Token(Token = "0x400170F")]
	RightHand,
	[Token(Token = "0x4001710")]
	RightThumb,
	[Token(Token = "0x4001711")]
	RightIndex
}
[Token(Token = "0x2000383")]
internal enum AnimParam
{
	[Token(Token = "0x4001713")]
	LeftFlex,
	[Token(Token = "0x4001714")]
	LeftPinch,
	[Token(Token = "0x4001715")]
	LeftPose,
	[Token(Token = "0x4001716")]
	RightFlex,
	[Token(Token = "0x4001717")]
	RightPinch,
	[Token(Token = "0x4001718")]
	RightPose,
	[Token(Token = "0x4001719")]
	LeftGestureX,
	[Token(Token = "0x400171A")]
	LeftGestureY,
	[Token(Token = "0x400171B")]
	RightGestureX,
	[Token(Token = "0x400171C")]
	RightGestureY,
	[Token(Token = "0x400171D")]
	GesturingLeft,
	[Token(Token = "0x400171E")]
	GesturingRight
}
[Token(Token = "0x2000384")]
public enum HandPose
{
	[Token(Token = "0x4001720")]
	None,
	[Token(Token = "0x4001721")]
	Open,
	[Token(Token = "0x4001722")]
	Fist,
	[Token(Token = "0x4001723")]
	Gesture,
	[Token(Token = "0x4001724")]
	Nub,
	[Token(Token = "0x4001725")]
	Gun,
	[Token(Token = "0x4001726")]
	PreGrab,
	[Token(Token = "0x4001727")]
	InRange,
	[Token(Token = "0x4001728")]
	LooseGrab,
	[Token(Token = "0x4001729")]
	Can,
	[Token(Token = "0x400172A")]
	Parachute
}
[Token(Token = "0x2000385")]
public struct FingerSyncInfo
{
	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float flex;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float pinch;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float thumbOff;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float indexOff;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 gesture;
}
[Token(Token = "0x2000386")]
public class HandInputAnimMapper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000842")]
	private class HandInput
	{
		[Token(Token = "0x400305A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isPointing;

		[Token(Token = "0x400305B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isGivingThumbsUp;

		[Token(Token = "0x400305C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float pointBlend;

		[Token(Token = "0x400305D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float thumbsUpBlend;

		[Token(Token = "0x400305E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float flexBlend;

		[Token(Token = "0x400305F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pinchBlend;

		[Token(Token = "0x4003060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isLeft;

		[Token(Token = "0x4003061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRHand hand;

		[Token(Token = "0x4003062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandPose gesture;

		[Token(Token = "0x4003063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float geatureTimer;

		[Token(Token = "0x600320B")]
		[Address(RVA = "0xCDD674", Offset = "0xCDD674", VA = "0xCDD674")]
		public HandInput(bool isLeft)
		{
		}
	}

	[Token(Token = "0x4001730")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandAnimator handAnimater;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandInput _leftInput;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HandInput _rightInput;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DF74", Offset = "0xB3DF74")]
	private static bool <ByPass>k__BackingField;

	[Token(Token = "0x17000222")]
	public static bool ByPass
	{
		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xCDD0F4", Offset = "0xCDD0F4", VA = "0xCDD0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DD98", Offset = "0xB4DD98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xCDD144", Offset = "0xCDD144", VA = "0xCDD144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DDA8", Offset = "0xB4DDA8")]
		set
		{
		}
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0xCDD19C", Offset = "0xCDD19C", VA = "0xCDD19C")]
	private void Update()
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xCDD264", Offset = "0xCDD264", VA = "0xCDD264")]
	private void UpdateHand(HandInput hand)
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xCDD43C", Offset = "0xCDD43C", VA = "0xCDD43C")]
	private void UpdateCapTouchStates(HandInput hand)
	{
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xCDD4B8", Offset = "0xCDD4B8", VA = "0xCDD4B8")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xCDD558", Offset = "0xCDD558", VA = "0xCDD558")]
	private void UpdateAnimStates(HandInput hand)
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xCDD5EC", Offset = "0xCDD5EC", VA = "0xCDD5EC")]
	public HandInputAnimMapper()
	{
	}
}
[Token(Token = "0x2000387")]
public class HandNubTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000843")]
	private enum Hand
	{
		[Token(Token = "0x4003065")]
		None,
		[Token(Token = "0x4003066")]
		Left,
		[Token(Token = "0x4003067")]
		Right
	}

	[Token(Token = "0x2000844")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35298", Offset = "0xB35298")]
	private sealed class <AttractItem>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400306A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandNubTracker <>4__this;

		[Token(Token = "0x400306B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isLeft;

		[Token(Token = "0x400306C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400306D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <lerp>5__3;

		[Token(Token = "0x400306E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <heldTf>5__4;

		[Token(Token = "0x400306F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <initPos>5__5;

		[Token(Token = "0x4003070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <initRot>5__6;

		[Token(Token = "0x4003071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform <palm>5__7;

		[Token(Token = "0x4003072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <destPosOffset>5__8;

		[Token(Token = "0x4003073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion <destRotOffset>5__9;

		[Token(Token = "0x4003074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool <playingAttractSound>5__10;

		[Token(Token = "0x17000509")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600320F")]
			[Address(RVA = "0xCDEBDC", Offset = "0xCDEBDC", VA = "0xCDEBDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003211")]
			[Address(RVA = "0xCDEC44", Offset = "0xCDEC44", VA = "0xCDEC44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600320C")]
		[Address(RVA = "0xCDE574", Offset = "0xCDE574", VA = "0xCDE574")]
		[DebuggerHidden]
		public <AttractItem>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600320D")]
		[Address(RVA = "0xCDE724", Offset = "0xCDE724", VA = "0xCDE724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600320E")]
		[Address(RVA = "0xCDE728", Offset = "0xCDE728", VA = "0xCDE728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003210")]
		[Address(RVA = "0xCDEBE4", Offset = "0xCDEBE4", VA = "0xCDEBE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPoseAnimator poseAnim;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controllerGear;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controllerGo;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandPose _activePose;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RayGrabbable _controller;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RayGrabbable _heldObj;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RayGrabbable _hoverObj;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Hand _activeHand;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Hand _cameraHand;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftPalm;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rightPalm;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VREyeRaycaster eyeCaster;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject uiBeam;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CameraHandMovement camHand;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _lastRCHitFrame;

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xCDD738", Offset = "0xCDD738", VA = "0xCDD738")]
	private void Start()
	{
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0xCDDD24", Offset = "0xCDDD24", VA = "0xCDDD24")]
	private void OnRaycastHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0xCDDED0", Offset = "0xCDDED0", VA = "0xCDDED0")]
	private void Update()
	{
	}

	[Token(Token = "0x60019C0")]
	[Address(RVA = "0xCDE27C", Offset = "0xCDE27C", VA = "0xCDE27C")]
	private void GrabItem()
	{
	}

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0xCDE458", Offset = "0xCDE458", VA = "0xCDE458")]
	private void UnhoverObj()
	{
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0xCDE56C", Offset = "0xCDE56C", VA = "0xCDE56C")]
	public void SetHandPose(HandPose pose)
	{
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0xCDD88C", Offset = "0xCDD88C", VA = "0xCDD88C")]
	public void SetHeldObject(bool isLeft)
	{
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0xCDE4E8", Offset = "0xCDE4E8", VA = "0xCDE4E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4DDB8", Offset = "0xB4DDB8")]
	private IEnumerator AttractItem(bool isLeft)
	{
		return null;
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0xCDE5A0", Offset = "0xCDE5A0", VA = "0xCDE5A0")]
	private void ResetToController()
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0xCDE5B8", Offset = "0xCDE5B8", VA = "0xCDE5B8")]
	private bool ClaimedSuccessfully(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0xCDE668", Offset = "0xCDE668", VA = "0xCDE668")]
	private void ClaimOverNetwork(GameObject obj)
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0xCDE714", Offset = "0xCDE714", VA = "0xCDE714")]
	public HandNubTracker()
	{
	}
}
[Token(Token = "0x2000388")]
public class HandObjectTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000845")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352A8", Offset = "0xB352A8")]
	private sealed class <AttractItem>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandObjectTracker <>4__this;

		[Token(Token = "0x4003078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRGrabbable obj;

		[Token(Token = "0x4003079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRGrabber hand;

		[Token(Token = "0x400307A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x400307B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <lerp>5__3;

		[Token(Token = "0x400307C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <heldTf>5__4;

		[Token(Token = "0x400307D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody <heldRb>5__5;

		[Token(Token = "0x400307E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <initPos>5__6;

		[Token(Token = "0x400307F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion <initRot>5__7;

		[Token(Token = "0x4003080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform <palm>5__8;

		[Token(Token = "0x4003081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 <destPosOffset>5__9;

		[Token(Token = "0x4003082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion <destRotOffset>5__10;

		[Token(Token = "0x4003083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool <playingAttractSound>5__11;

		[Token(Token = "0x4003084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool <hapticPlayed>5__12;

		[Token(Token = "0x1700050B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003215")]
			[Address(RVA = "0xCE0D80", Offset = "0xCE0D80", VA = "0xCE0D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003217")]
			[Address(RVA = "0xCE0DE8", Offset = "0xCE0DE8", VA = "0xCE0DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003212")]
		[Address(RVA = "0xCE0010", Offset = "0xCE0010", VA = "0xCE0010")]
		[DebuggerHidden]
		public <AttractItem>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6003213")]
		[Address(RVA = "0xCE0684", Offset = "0xCE0684", VA = "0xCE0684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003214")]
		[Address(RVA = "0xCE0688", Offset = "0xCE0688", VA = "0xCE0688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003216")]
		[Address(RVA = "0xCE0D88", Offset = "0xCE0D88", VA = "0xCE0D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPoseAnimator poseAnim;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRRig rig;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRGrabbable _hoverObj;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _beamHandWasLeft;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRGrabber leftGrabber;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRGrabber rightGrabber;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRGrabbable _leftHeld;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRGrabbable _rightHeld;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VREyeRaycaster eyeCaster;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject uiBeam;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform defaultBeamParentL;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform defaultBeamParentR;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _lastRCHitFrame;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRGrabbable _beamingObject;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFA4", Offset = "0xB3DFA4")]
	private bool <UseBeam>k__BackingField;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _showBeam;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool correctLaserDir;

	[Token(Token = "0x17000223")]
	private bool _beamHandIsLeft
	{
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xCDEC4C", Offset = "0xCDEC4C", VA = "0xCDEC4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000224")]
	public bool UseBeam
	{
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xCDEF3C", Offset = "0xCDEF3C", VA = "0xCDEF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DE5C", Offset = "0xB4DE5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xCDEF44", Offset = "0xCDEF44", VA = "0xCDEF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DE6C", Offset = "0xB4DE6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000225")]
	private VRGrabbable PrimaryHeld
	{
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xCDEF50", Offset = "0xCDEF50", VA = "0xCDEF50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000226")]
	private VRGrabber PrimaryGrabber
	{
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xCDEF8C", Offset = "0xCDEF8C", VA = "0xCDEF8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x140000AA")]
	public event Action<VRGrabbable, VRGrabber> OnObjectHeld
	{
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xCDECAC", Offset = "0xCDECAC", VA = "0xCDECAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DE1C", Offset = "0xB4DE1C")]
		add
		{
		}
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xCDED50", Offset = "0xCDED50", VA = "0xCDED50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DE2C", Offset = "0xB4DE2C")]
		remove
		{
		}
	}

	[Token(Token = "0x140000AB")]
	public event Action<VRGrabbable, VRGrabber> OnObjectDropped
	{
		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xCDEDF4", Offset = "0xCDEDF4", VA = "0xCDEDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DE3C", Offset = "0xB4DE3C")]
		add
		{
		}
		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xCDEE98", Offset = "0xCDEE98", VA = "0xCDEE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DE4C", Offset = "0xB4DE4C")]
		remove
		{
		}
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xCDEFC0", Offset = "0xCDEFC0", VA = "0xCDEFC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xCDF03C", Offset = "0xCDF03C", VA = "0xCDF03C")]
	private void Start()
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xCDF2E8", Offset = "0xCDF2E8", VA = "0xCDF2E8")]
	private void CheckBeamHand()
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xCDF340", Offset = "0xCDF340", VA = "0xCDF340")]
	private void OnHandChanged(bool isLeft)
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xCDF494", Offset = "0xCDF494", VA = "0xCDF494")]
	private void OnRaycastHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0xCDF8D4", Offset = "0xCDF8D4", VA = "0xCDF8D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0xCDFC9C", Offset = "0xCDFC9C", VA = "0xCDFC9C")]
	private void CheckForHold()
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0xCDFD10", Offset = "0xCDFD10", VA = "0xCDFD10")]
	private void CheckForHold(VRGrabber grabber, ref VRGrabbable prevHeld, ref Transform defaultBeamParent, bool isBeamHand)
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0xCDFA38", Offset = "0xCDFA38", VA = "0xCDFA38")]
	private HandPose GetHandPose(bool tracking, VRGrabber grabber)
	{
		return default(HandPose);
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0xCDFA8C", Offset = "0xCDFA8C", VA = "0xCDFA8C")]
	private void CheckForGrab()
	{
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0xCDFF34", Offset = "0xCDFF34", VA = "0xCDFF34")]
	private void GrabItem()
	{
	}

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0xCDFF8C", Offset = "0xCDFF8C", VA = "0xCDFF8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4DE7C", Offset = "0xB4DE7C")]
	private IEnumerator AttractItem(VRGrabbable obj, VRGrabber hand)
	{
		return null;
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0xCE003C", Offset = "0xCE003C", VA = "0xCE003C")]
	private void PreRemoteGrab(VRGrabbable obj, VRGrabber hand)
	{
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0xCE009C", Offset = "0xCE009C", VA = "0xCE009C")]
	private void PostRemoteGrab(VRGrabbable obj, VRGrabber hand, Vector3 posOffset, Quaternion rotOffset)
	{
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0xCE01FC", Offset = "0xCE01FC", VA = "0xCE01FC")]
	private void CancelRemoteGrab(VRGrabbable obj, VRGrabber hand)
	{
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0xCE0260", Offset = "0xCE0260", VA = "0xCE0260")]
	private bool ClaimedSuccessfully(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0xCE0310", Offset = "0xCE0310", VA = "0xCE0310")]
	private void ClaimOverNetwork(GameObject obj)
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0xCDF6B8", Offset = "0xCDF6B8", VA = "0xCDF6B8")]
	private void UnhoverObj()
	{
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0xCDF1D0", Offset = "0xCDF1D0", VA = "0xCDF1D0")]
	private void ParentBeam(Transform parent)
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0xCE03D0", Offset = "0xCE03D0", VA = "0xCE03D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0xCE05F0", Offset = "0xCE05F0", VA = "0xCE05F0")]
	public HandObjectTracker()
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0xCE0600", Offset = "0xCE0600", VA = "0xCE0600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DEE0", Offset = "0xB4DEE0")]
	private void <Start>b__33_0()
	{
	}
}
[Token(Token = "0x2000389")]
public class HandOffset : ScriptableObject
{
	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 _posOffset;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Quaternion _rotOffset;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool _createdOnLeft;

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0xCDA09C", Offset = "0xCDA09C", VA = "0xCDA09C")]
	public Vector3 GetPosOffset(bool forLeft)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0xCDA110", Offset = "0xCDA110", VA = "0xCDA110")]
	public Quaternion GetRotOffset(bool forLeft)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0xCE0DF0", Offset = "0xCE0DF0", VA = "0xCE0DF0")]
	public void SetData(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0xCE0E04", Offset = "0xCE0E04", VA = "0xCE0E04")]
	public static void GenerateOffsetObject(Transform child)
	{
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0xCE0E08", Offset = "0xCE0E08", VA = "0xCE0E08")]
	public static void UpdateOffsetObject(Transform child, HandOffset offset)
	{
	}

	[Token(Token = "0x60019ED")]
	[Address(RVA = "0xCE0E74", Offset = "0xCE0E74", VA = "0xCE0E74")]
	public HandOffset()
	{
	}
}
[Token(Token = "0x200038A")]
public class HandPoseAnimator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandAnimator handAnimator;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftIkOutput;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightIkOutput;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BodyIK bodyIk;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _leftHandLerp;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _rightHandLerp;

	[Token(Token = "0x4001760")]
	private const float _TRANITION_SPEED = 5f;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftObjectParent;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightObjectParent;

	[Token(Token = "0x60019EE")]
	[Address(RVA = "0xCDE360", Offset = "0xCDE360", VA = "0xCDE360")]
	public void UpdateArms(HandPose poseLeft, HandPose poseRight)
	{
	}

	[Token(Token = "0x60019EF")]
	[Address(RVA = "0xCE0E7C", Offset = "0xCE0E7C", VA = "0xCE0E7C")]
	private void SetLerp(HandPose pose, GameObject objParent, ref float lerp)
	{
	}

	[Token(Token = "0x60019F0")]
	[Address(RVA = "0xCE0FB0", Offset = "0xCE0FB0", VA = "0xCE0FB0")]
	private void SetWrist(bool isLeft, HandPose pose, Transform wrist)
	{
	}

	[Token(Token = "0x60019F1")]
	[Address(RVA = "0xCE10D0", Offset = "0xCE10D0", VA = "0xCE10D0")]
	private Quaternion GetWristRotation(bool isLeft, HandPose pose)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60019F2")]
	[Address(RVA = "0xCE11C0", Offset = "0xCE11C0", VA = "0xCE11C0")]
	public HandPoseAnimator()
	{
	}
}
[Token(Token = "0x200038B")]
public class LinkGunTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandObjectTracker tracker;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandAnimator handAnim;

	[Token(Token = "0x60019F3")]
	[Address(RVA = "0xDF7058", Offset = "0xDF7058", VA = "0xDF7058")]
	private void Start()
	{
	}

	[Token(Token = "0x60019F4")]
	[Address(RVA = "0xDF7130", Offset = "0xDF7130", VA = "0xDF7130")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60019F5")]
	[Address(RVA = "0xDF7208", Offset = "0xDF7208", VA = "0xDF7208")]
	private void OnDropped(VRGrabbable obj, VRGrabber hand)
	{
	}

	[Token(Token = "0x60019F6")]
	[Address(RVA = "0xDF72CC", Offset = "0xDF72CC", VA = "0xDF72CC")]
	private void OnHeld(VRGrabbable obj, VRGrabber hand)
	{
	}

	[Token(Token = "0x60019F7")]
	[Address(RVA = "0xDF73E8", Offset = "0xDF73E8", VA = "0xDF73E8")]
	public LinkGunTrigger()
	{
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0xDF73F0", Offset = "0xDF73F0", VA = "0xDF73F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DEF0", Offset = "0xB4DEF0")]
	private float <OnHeld>b__5_0()
	{
		return default(float);
	}

	[Token(Token = "0x60019F9")]
	[Address(RVA = "0xDF740C", Offset = "0xDF740C", VA = "0xDF740C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DF00", Offset = "0xB4DF00")]
	private float <OnHeld>b__5_1()
	{
		return default(float);
	}
}
[Token(Token = "0x200038C")]
public class MeshOutline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> meshObjects;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material outlineMat;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> outlineRenderers;

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0xD3E388", Offset = "0xD3E388", VA = "0xD3E388")]
	private void Start()
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0xD3E3FC", Offset = "0xD3E3FC", VA = "0xD3E3FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4DF10", Offset = "0xB4DF10")]
	public void CreateOutline()
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0xD3E76C", Offset = "0xD3E76C", VA = "0xD3E76C")]
	public void SetVisible(bool on)
	{
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0xD3E810", Offset = "0xD3E810", VA = "0xD3E810")]
	public MeshOutline()
	{
	}
}
[Token(Token = "0x200038D")]
public class OutlineSelect : Selectable
{
	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material outlineMat;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> renderers;

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0xD1CEEC", Offset = "0xD1CEEC", VA = "0xD1CEEC", Slot = "4")]
	public override void Highlight(bool on)
	{
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0xD1CF9C", Offset = "0xD1CF9C", VA = "0xD1CF9C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4DF48", Offset = "0xB4DF48")]
	private void FillChildRenderers()
	{
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0xD1D004", Offset = "0xD1D004", VA = "0xD1D004")]
	public OutlineSelect()
	{
	}
}
[Token(Token = "0x200038E")]
public abstract class Selectable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001A01")]
	public abstract void Highlight(bool on);

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0xCA305C", Offset = "0xCA305C", VA = "0xCA305C")]
	protected Selectable()
	{
	}
}
[Token(Token = "0x200038F")]
public class SyncHandPose : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandAnimator handAnim;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NetworkRig networkSender;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isClient;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int priority;

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0xDF0564", Offset = "0xDF0564", VA = "0xDF0564")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0xDF0718", Offset = "0xDF0718", VA = "0xDF0718")]
	public SyncHandPose()
	{
	}
}
[Token(Token = "0x2000390")]
public class SyncNubPose : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPoseAnimator poseAnim;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NetworkRig networkSender;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0xDF072C", Offset = "0xDF072C", VA = "0xDF072C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0xDF0808", Offset = "0xDF0808", VA = "0xDF0808")]
	public SyncNubPose()
	{
	}
}
[Token(Token = "0x2000391")]
public class VRGrabbable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowOffhandGrab;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AttachTransition attachTransition;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UpdateMethod updateMethod;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private UpdateMethod _activeUpdateMethod;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool _startsKinematic;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float _startsMaxAngVel;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AttachInfo attachInfo;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFE4", Offset = "0xB3DFE4")]
	private VRGrabber <grabbedBy>k__BackingField;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFF4", Offset = "0xB3DFF4")]
	private bool <Locked>k__BackingField;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _grabTime;

	[Token(Token = "0x400177C")]
	private const float AttachTime = 0.25f;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _positionalVelocity;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _lastPos;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion _lastRot;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _lastHapticAmp;

	[Token(Token = "0x4001782")]
	private const int VelFrames = 5;

	[Token(Token = "0x4001783")]
	private const int RotVelFrames = 11;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _sampleCount;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] _posVelFrames;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] _rotVelFrames;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _lastCollisionTime;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _colliding;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool skipIntermediary;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Selectable selectable;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HandPose pose;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform rayParent;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool canRemote;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HandOffset remoteOffset;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent onPickup;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody _rbody;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 _lastFollowPos;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float _hapticDampVel;

	[Token(Token = "0x17000227")]
	public VRGrabber grabbedBy
	{
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x10E194C", Offset = "0x10E194C", VA = "0x10E194C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DF80", Offset = "0xB4DF80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x10E1954", Offset = "0x10E1954", VA = "0x10E1954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DF90", Offset = "0xB4DF90")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public bool Locked
	{
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x10E195C", Offset = "0x10E195C", VA = "0x10E195C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DFA0", Offset = "0xB4DFA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x10E1964", Offset = "0x10E1964", VA = "0x10E1964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DFB0", Offset = "0xB4DFB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public bool IsGrabbed
	{
		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x10E1970", Offset = "0x10E1970", VA = "0x10E1970")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x140000AC")]
	public event Action<VRGrabber> OnGrabBegin
	{
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x10E19E0", Offset = "0x10E19E0", VA = "0x10E19E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DFC0", Offset = "0xB4DFC0")]
		add
		{
		}
		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x10E1A84", Offset = "0x10E1A84", VA = "0x10E1A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DFD0", Offset = "0xB4DFD0")]
		remove
		{
		}
	}

	[Token(Token = "0x140000AD")]
	public event Action<VRGrabber> OnGrabEnd
	{
		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x10E1B28", Offset = "0x10E1B28", VA = "0x10E1B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DFE0", Offset = "0xB4DFE0")]
		add
		{
		}
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x10E1BCC", Offset = "0x10E1BCC", VA = "0x10E1BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4DFF0", Offset = "0xB4DFF0")]
		remove
		{
		}
	}

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0x10E1C70", Offset = "0x10E1C70", VA = "0x10E1C70")]
	public void GrabBegin(VRGrabber hand)
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0x10E1DB4", Offset = "0x10E1DB4", VA = "0x10E1DB4")]
	public void UpdatePosition(Vector3 pos, Quaternion rot, bool firstUpdate)
	{
	}

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0x10E2548", Offset = "0x10E2548", VA = "0x10E2548")]
	public void SetIntermediaryPosition(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0x10E264C", Offset = "0x10E264C", VA = "0x10E264C")]
	private void UpdateVelocityLegacy(float deltaTime)
	{
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0x10E2244", Offset = "0x10E2244", VA = "0x10E2244")]
	private void UpdateVelocity(float deltaTime)
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0x10E28EC", Offset = "0x10E28EC", VA = "0x10E28EC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0x10E2B38", Offset = "0x10E2B38", VA = "0x10E2B38")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0x10E2B74", Offset = "0x10E2B74", VA = "0x10E2B74")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0x10E2B9C", Offset = "0x10E2B9C", VA = "0x10E2B9C")]
	private void CalculateVelocity()
	{
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0x10E2F30", Offset = "0x10E2F30", VA = "0x10E2F30")]
	public Vector3 GetVelocityEstimate(int sampleCount, Vector3[] samples)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0x10E2510", Offset = "0x10E2510", VA = "0x10E2510")]
	private Vector3 EulerFix(Vector3 input)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0x10E30E8", Offset = "0x10E30E8", VA = "0x10E30E8")]
	public void GrabEnd(bool addVelocity)
	{
	}

	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0x10E34B8", Offset = "0x10E34B8", VA = "0x10E34B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x10E3540", Offset = "0x10E3540", VA = "0x10E3540")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x10E365C", Offset = "0x10E365C", VA = "0x10E365C")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x10E1DB0", Offset = "0x10E1DB0", VA = "0x10E1DB0")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x10E3660", Offset = "0x10E3660", VA = "0x10E3660")]
	public void OnRemoteHoverStart()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x10E36F8", Offset = "0x10E36F8", VA = "0x10E36F8")]
	public void OnRemoteHoverEnd()
	{
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0x10E3790", Offset = "0x10E3790", VA = "0x10E3790")]
	public void SetKinematic(bool on)
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0x10E37B0", Offset = "0x10E37B0", VA = "0x10E37B0")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0x10E37B8", Offset = "0x10E37B8", VA = "0x10E37B8")]
	public VRGrabbable()
	{
	}
}
[Token(Token = "0x2000392")]
public enum UpdateMethod
{
	[Token(Token = "0x4001796")]
	Default,
	[Token(Token = "0x4001797")]
	FixedUpdate,
	[Token(Token = "0x4001798")]
	FixedUpdateFollow,
	[Token(Token = "0x4001799")]
	Update
}
[Token(Token = "0x2000393")]
public enum AttachMethod
{
	[Token(Token = "0x400179B")]
	Overlap,
	[Token(Token = "0x400179C")]
	Snap,
	[Token(Token = "0x400179D")]
	SnapAxis,
	[Token(Token = "0x400179E")]
	ClosestPoint,
	[Token(Token = "0x400179F")]
	None
}
[Token(Token = "0x2000394")]
public enum AttachTransition
{
	[Token(Token = "0x40017A1")]
	Instant,
	[Token(Token = "0x40017A2")]
	Interpolated
}
[Token(Token = "0x2000395")]
public enum Axis
{
	[Token(Token = "0x40017A4")]
	X,
	[Token(Token = "0x40017A5")]
	Y,
	[Token(Token = "0x40017A6")]
	Z
}
[Token(Token = "0x2000396")]
public class VRGrabber : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000846")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352B8", Offset = "0xB352B8")]
	private sealed class <EnablePalmCollAfterDelay>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRGrabber <>4__this;

		[Token(Token = "0x1700050D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600321B")]
			[Address(RVA = "0x10E58CC", Offset = "0x10E58CC", VA = "0x10E58CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600321D")]
			[Address(RVA = "0x10E5934", Offset = "0x10E5934", VA = "0x10E5934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003218")]
		[Address(RVA = "0x10E572C", Offset = "0x10E572C", VA = "0x10E572C")]
		[DebuggerHidden]
		public <EnablePalmCollAfterDelay>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6003219")]
		[Address(RVA = "0x10E57D8", Offset = "0x10E57D8", VA = "0x10E57D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600321A")]
		[Address(RVA = "0x10E57DC", Offset = "0x10E57DC", VA = "0x10E57DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600321C")]
		[Address(RVA = "0x10E58D4", Offset = "0x10E58D4", VA = "0x10E58D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLeft;

	[Token(Token = "0x40017A8")]
	private const float grabBegin = 0.4f;

	[Token(Token = "0x40017A9")]
	private const float grabEnd = 0.85f;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UpdateMethod defaultUpdateMethod;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debugEditorControls;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _palm;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider _palmCollider;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider[] _grabVolumes;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _grabVolumeEnabled;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _prevGripRaw;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRGrabbable _grabbedObj;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _grabbedPosOffset;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _grabbedRotOffset;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Collider> _grabCandidates;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _editorHeld;

	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E054", Offset = "0xB3E054")]
	private HandPose <Pose>k__BackingField;

	[Token(Token = "0x1700022A")]
	public VRHand Hand
	{
		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x10E2AA4", Offset = "0x10E2AA4", VA = "0x10E2AA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022B")]
	public VRGrabbable GrabbedObject
	{
		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x10E3840", Offset = "0x10E3840", VA = "0x10E3840")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022C")]
	public bool InRange
	{
		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x10E3848", Offset = "0x10E3848", VA = "0x10E3848")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022D")]
	public HandPose Pose
	{
		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x10E38A0", Offset = "0x10E38A0", VA = "0x10E38A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E000", Offset = "0xB4E000")]
		get
		{
			return default(HandPose);
		}
		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x10E38A8", Offset = "0x10E38A8", VA = "0x10E38A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E010", Offset = "0xB4E010")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public Transform Palm
	{
		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x10E38B0", Offset = "0x10E38B0", VA = "0x10E38B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x10E38B8", Offset = "0x10E38B8", VA = "0x10E38B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x10E38C4", Offset = "0x10E38C4", VA = "0x10E38C4")]
	private bool UseFixedUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x10E395C", Offset = "0x10E395C", VA = "0x10E395C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0x10E3A38", Offset = "0x10E3A38", VA = "0x10E3A38")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0x10E3C70", Offset = "0x10E3C70", VA = "0x10E3C70")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0x10E3990", Offset = "0x10E3990", VA = "0x10E3990")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0x10E3F3C", Offset = "0x10E3F3C", VA = "0x10E3F3C")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6001A32")]
	[Address(RVA = "0x10E4044", Offset = "0x10E4044", VA = "0x10E4044")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6001A33")]
	[Address(RVA = "0x10E3D14", Offset = "0x10E3D14", VA = "0x10E3D14")]
	private void CheckForGrabOrRelease(float currentGripRaw)
	{
	}

	[Token(Token = "0x6001A34")]
	[Address(RVA = "0x10E414C", Offset = "0x10E414C", VA = "0x10E414C")]
	private void GrabBegin()
	{
	}

	[Token(Token = "0x6001A35")]
	[Address(RVA = "0x10E46AC", Offset = "0x10E46AC", VA = "0x10E46AC")]
	public void GrabObject(VRGrabbable grabObj, Vector3 posOffset, Quaternion targetRot, HandPose pose)
	{
	}

	[Token(Token = "0x6001A36")]
	[Address(RVA = "0x10E44EC", Offset = "0x10E44EC", VA = "0x10E44EC")]
	private void FindGrabOffset(VRGrabbable obj, Collider coll, VRGripPoint grip, out Vector3 posOffset, out Quaternion rotOffset)
	{
	}

	[Token(Token = "0x6001A37")]
	[Address(RVA = "0x10E4ABC", Offset = "0x10E4ABC", VA = "0x10E4ABC")]
	private void FindOverlapOffset(VRGrabbable obj, out Vector3 posOffset, out Quaternion rotOffset)
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0x10E4BE0", Offset = "0x10E4BE0", VA = "0x10E4BE0")]
	private void FindSnapOffset(VRGrabbable obj, AttachInfo info, out Vector3 posOffset, out Quaternion rotOffset)
	{
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0x10E4D50", Offset = "0x10E4D50", VA = "0x10E4D50")]
	private void FindSnapOffsetAxis(VRGrabbable obj, AttachInfo info, Transform point, out Vector3 posOffset, out Quaternion rotOffset)
	{
	}

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0x10E55A4", Offset = "0x10E55A4", VA = "0x10E55A4")]
	private Vector3 GetDirFromAxis(Axis axis, Transform tform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0x10E5158", Offset = "0x10E5158", VA = "0x10E5158")]
	private void FindClosestPointOffset(VRGrabbable obj, Collider coll, out Vector3 posOffset, out Quaternion rotOffset)
	{
	}

	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0x10E3D5C", Offset = "0x10E3D5C", VA = "0x10E3D5C")]
	private void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0x10E444C", Offset = "0x10E444C", VA = "0x10E444C")]
	private void GrabEnd(bool force = false)
	{
	}

	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0x10E5680", Offset = "0x10E5680", VA = "0x10E5680")]
	private void GrabbableRelease(bool addVelocity)
	{
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0x10E48EC", Offset = "0x10E48EC", VA = "0x10E48EC")]
	public void GrabVolumeEnable(bool enable, bool instant = false)
	{
	}

	[Token(Token = "0x6001A40")]
	[Address(RVA = "0x10E35D0", Offset = "0x10E35D0", VA = "0x10E35D0")]
	public void ForceRelease()
	{
	}

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0x10E56BC", Offset = "0x10E56BC", VA = "0x10E56BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E020", Offset = "0xB4E020")]
	private IEnumerator EnablePalmCollAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6001A42")]
	[Address(RVA = "0x10E4A20", Offset = "0x10E4A20", VA = "0x10E4A20")]
	private void OffhandGrabbed(VRGrabbable grabbable)
	{
	}

	[Token(Token = "0x6001A43")]
	[Address(RVA = "0x10E5758", Offset = "0x10E5758", VA = "0x10E5758")]
	public VRGrabber()
	{
	}
}
[Token(Token = "0x2000397")]
public class VRGripPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRGrabbable grabbable;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AttachInfo attachInfo;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandPose pose;

	[Token(Token = "0x6001A44")]
	[Address(RVA = "0x10E593C", Offset = "0x10E593C", VA = "0x10E593C")]
	public VRGripPoint()
	{
	}
}
[Token(Token = "0x2000398")]
public class VRKnocker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _lastPos;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _sampleCount;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] _posVelFrames;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isLeft;

	[Token(Token = "0x40017BE")]
	private const int VelFrames = 5;

	[Token(Token = "0x6001A45")]
	[Address(RVA = "0x10E85C4", Offset = "0x10E85C4", VA = "0x10E85C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0x10E85EC", Offset = "0x10E85EC", VA = "0x10E85EC")]
	private void UpdateVelocity(float deltaTime)
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0x10E873C", Offset = "0x10E873C", VA = "0x10E873C")]
	private Vector3 EulerFix(Vector3 input)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A48")]
	[Address(RVA = "0x10E8774", Offset = "0x10E8774", VA = "0x10E8774")]
	private Vector3 CalculateVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0x10E8780", Offset = "0x10E8780", VA = "0x10E8780")]
	public Vector3 GetVelocityEstimate(int sampleCount, Vector3[] samples)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0x10E8938", Offset = "0x10E8938", VA = "0x10E8938")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0x10E8BC0", Offset = "0x10E8BC0", VA = "0x10E8BC0")]
	public VRKnocker()
	{
	}
}
[Token(Token = "0x2000399")]
public class Haptics : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<HapticCurve> curves;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, HapticCurve> _curveLookup;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _initialised;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IHandHaptics _handHaptics;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Haptics _instance;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float _pulseCancelTimeLeft;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float _pulseCancelTimeRight;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float _lockTime;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool _usesDuration;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _allowPlayEditting;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _init;

	[Token(Token = "0x1700022F")]
	private static IHandHaptics HandHaptics
	{
		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xCE2F4C", Offset = "0xCE2F4C", VA = "0xCE2F4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000230")]
	private static Haptics Instance
	{
		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xCE3084", Offset = "0xCE3084", VA = "0xCE3084")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000231")]
	private static bool IsLocked
	{
		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xCE33B4", Offset = "0xCE33B4", VA = "0xCE33B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000232")]
	private static float AmpMultiplier
	{
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xCE3424", Offset = "0xCE3424", VA = "0xCE3424")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000233")]
	private static bool UseHaptics
	{
		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xCE34C8", Offset = "0xCE34C8", VA = "0xCE34C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0xCE0BDC", Offset = "0xCE0BDC", VA = "0xCE0BDC")]
	public static void PlayCurve(string name, bool onLeft)
	{
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0xCE380C", Offset = "0xCE380C", VA = "0xCE380C")]
	public static void CancelCurrentCurve(bool onLeft)
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0xCE3914", Offset = "0xCE3914", VA = "0xCE3914")]
	public static void PulseUpdate(float amp, float freq, bool onLeft)
	{
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0xCE3C30", Offset = "0xCE3C30", VA = "0xCE3C30")]
	public static void PulseOneShot(float amp, float freq, float dur, bool onLeft)
	{
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0xCDF744", Offset = "0xCDF744", VA = "0xCDF744")]
	public static void Pulse(PulseType type, bool onLeft)
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0xCE3A18", Offset = "0xCE3A18", VA = "0xCE3A18")]
	public static void Pulse(HapticPulse pulse, bool onLeft)
	{
	}

	[Token(Token = "0x6001A57")]
	[Address(RVA = "0xCE3594", Offset = "0xCE3594", VA = "0xCE3594")]
	private static bool GetCurve(string name, out HapticCurve curve)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A58")]
	[Address(RVA = "0xCE3CF8", Offset = "0xCE3CF8", VA = "0xCE3CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A59")]
	[Address(RVA = "0xCE3D94", Offset = "0xCE3D94", VA = "0xCE3D94")]
	private void Initialise()
	{
	}

	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0xCE3FE8", Offset = "0xCE3FE8", VA = "0xCE3FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0xCE379C", Offset = "0xCE379C", VA = "0xCE379C")]
	private static void ClearPulseCancels()
	{
	}

	[Token(Token = "0x6001A5C")]
	[Address(RVA = "0xCE4344", Offset = "0xCE4344", VA = "0xCE4344")]
	public Haptics()
	{
	}
}
[Serializable]
[Token(Token = "0x200039A")]
public struct HapticCurve
{
	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AnimationCurve amplitude;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve frequency;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float frequencyMul;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ampMul;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;
}
[Token(Token = "0x200039B")]
public struct HapticPulse
{
	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float amplitude;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float frequency;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float duration;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool oneShot;

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0xCE2F38", Offset = "0xCE2F38", VA = "0xCE2F38")]
	public HapticPulse(float amp, float freq, float dur, bool oneShot)
	{
	}
}
[Token(Token = "0x200039C")]
public enum PulseType
{
	[Token(Token = "0x40017D5")]
	Light,
	[Token(Token = "0x40017D6")]
	Medium
}
[Token(Token = "0x200039D")]
public interface IHandHaptics
{
	[Token(Token = "0x6001A5F")]
	void PlayPulse(HapticPulse pulse, bool onLeft);

	[Token(Token = "0x6001A60")]
	void PlayCurve(HapticCurve curve, bool onLeft);

	[Token(Token = "0x6001A61")]
	void Clear(bool onLeft);

	[Token(Token = "0x6001A62")]
	bool UsesDuration();

	[Token(Token = "0x6001A63")]
	bool OverridePulse(PulseType type, bool onLeft);
}
[Token(Token = "0x200039E")]
public class OculusHandHaptics : IHandHaptics
{
	[Token(Token = "0x6001A64")]
	[Address(RVA = "0x105C554", Offset = "0x105C554", VA = "0x105C554", Slot = "4")]
	public void PlayPulse(HapticPulse pulse, bool onLeft)
	{
	}

	[Token(Token = "0x6001A65")]
	[Address(RVA = "0x105C600", Offset = "0x105C600", VA = "0x105C600", Slot = "5")]
	public void PlayCurve(HapticCurve curve, bool onLeft)
	{
	}

	[Token(Token = "0x6001A66")]
	[Address(RVA = "0x105C758", Offset = "0x105C758", VA = "0x105C758", Slot = "6")]
	public void Clear(bool onLeft)
	{
	}

	[Token(Token = "0x6001A67")]
	[Address(RVA = "0x105CA90", Offset = "0x105CA90", VA = "0x105CA90", Slot = "7")]
	public bool UsesDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A68")]
	[Address(RVA = "0x105CA98", Offset = "0x105CA98", VA = "0x105CA98", Slot = "8")]
	public bool OverridePulse(PulseType type, bool onLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A69")]
	[Address(RVA = "0x105C7F8", Offset = "0x105C7F8", VA = "0x105C7F8")]
	private void BufferClip(HapticCurve curve, OVRHaptics.OVRHapticsChannel channel)
	{
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0x105C5F0", Offset = "0x105C5F0", VA = "0x105C5F0")]
	private OVRInput.Controller Controller(bool left)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x105CAA0", Offset = "0x105CAA0", VA = "0x105CAA0")]
	public OculusHandHaptics()
	{
	}
}
[Token(Token = "0x200039F")]
public class PicoHandHaptics : IHandHaptics
{
	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0xC4B94C", Offset = "0xC4B94C", VA = "0xC4B94C", Slot = "4")]
	public void PlayPulse(HapticPulse pulse, bool onLeft)
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0xC4B990", Offset = "0xC4B990", VA = "0xC4B990", Slot = "5")]
	public void PlayCurve(HapticCurve curve, bool onLeft)
	{
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0xC4B994", Offset = "0xC4B994", VA = "0xC4B994", Slot = "6")]
	public void Clear(bool onLeft)
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0xC4B998", Offset = "0xC4B998", VA = "0xC4B998", Slot = "7")]
	public bool UsesDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0xC4B9A0", Offset = "0xC4B9A0", VA = "0xC4B9A0", Slot = "8")]
	public bool OverridePulse(PulseType type, bool onLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0xC4B9A8", Offset = "0xC4B9A8", VA = "0xC4B9A8")]
	public PicoHandHaptics()
	{
	}
}
[Token(Token = "0x20003A0")]
public class QuestHandHaptics : UnityEngine.MonoBehaviour, IHandHaptics
{
	[Token(Token = "0x2000847")]
	private class HapticState
	{
		[Token(Token = "0x4003088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float freq;

		[Token(Token = "0x4003089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float amp;

		[Token(Token = "0x400308A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x400308B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticCurve curve;

		[Token(Token = "0x600321E")]
		[Address(RVA = "0xBDE2C8", Offset = "0xBDE2C8", VA = "0xBDE2C8")]
		public HapticState()
		{
		}
	}

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static QuestHandHaptics _instance;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly HapticState _leftState;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HapticState _rightState;

	[Token(Token = "0x17000234")]
	public static QuestHandHaptics Instance
	{
		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xBDDD84", Offset = "0xBDDD84", VA = "0xBDDD84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0xBDDE64", Offset = "0xBDDE64", VA = "0xBDDE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0xBDDECC", Offset = "0xBDDECC", VA = "0xBDDECC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0xBDDF00", Offset = "0xBDDF00", VA = "0xBDDF00")]
	private void HandleState(HapticState state, bool isLeft)
	{
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0xBDE14C", Offset = "0xBDE14C", VA = "0xBDE14C", Slot = "4")]
	public void PlayPulse(HapticPulse pulse, bool onLeft)
	{
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0xBDE180", Offset = "0xBDE180", VA = "0xBDE180", Slot = "5")]
	public void PlayCurve(HapticCurve curve, bool onLeft)
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0xBDE078", Offset = "0xBDE078", VA = "0xBDE078", Slot = "6")]
	public void Clear(bool onLeft)
	{
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0xBDE1DC", Offset = "0xBDE1DC", VA = "0xBDE1DC", Slot = "7")]
	public bool UsesDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0xBDE1E4", Offset = "0xBDE1E4", VA = "0xBDE1E4", Slot = "8")]
	public bool OverridePulse(PulseType type, bool onLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0xBDE13C", Offset = "0xBDE13C", VA = "0xBDE13C")]
	private OVRInput.Controller Controller(bool left)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0xBDE240", Offset = "0xBDE240", VA = "0xBDE240")]
	public QuestHandHaptics()
	{
	}
}
[Token(Token = "0x20003A1")]
public class UnityHandHaptics : UnityEngine.MonoBehaviour, IHandHaptics
{
	[Token(Token = "0x2000848")]
	private class HapticState
	{
		[Token(Token = "0x400308C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float freq;

		[Token(Token = "0x400308D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float amp;

		[Token(Token = "0x400308E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x400308F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticCurve curve;

		[Token(Token = "0x600321F")]
		[Address(RVA = "0xF9A518", Offset = "0xF9A518", VA = "0xF9A518")]
		public HapticState()
		{
		}
	}

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityHandHaptics _instance;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly HapticState _leftState;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HapticState _rightState;

	[Token(Token = "0x40017DD")]
	private const uint _CHANNEL = 0u;

	[Token(Token = "0x17000235")]
	public static UnityHandHaptics Instance
	{
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xF9A01C", Offset = "0xF9A01C", VA = "0xF9A01C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0xF9A0FC", Offset = "0xF9A0FC", VA = "0xF9A0FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0xF9A164", Offset = "0xF9A164", VA = "0xF9A164")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0xF9A198", Offset = "0xF9A198", VA = "0xF9A198")]
	private void HandleState(HapticState state, bool isLeft)
	{
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0xF9A300", Offset = "0xF9A300", VA = "0xF9A300")]
	private static void SendState(HapticState state, bool isLeft)
	{
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0xF9A39C", Offset = "0xF9A39C", VA = "0xF9A39C", Slot = "4")]
	public void PlayPulse(HapticPulse pulse, bool onLeft)
	{
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0xF9A3D0", Offset = "0xF9A3D0", VA = "0xF9A3D0", Slot = "5")]
	public void PlayCurve(HapticCurve curve, bool onLeft)
	{
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0xF9A2B4", Offset = "0xF9A2B4", VA = "0xF9A2B4", Slot = "6")]
	public void Clear(bool onLeft)
	{
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0xF9A42C", Offset = "0xF9A42C", VA = "0xF9A42C", Slot = "7")]
	public bool UsesDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A86")]
	[Address(RVA = "0xF9A434", Offset = "0xF9A434", VA = "0xF9A434", Slot = "8")]
	public bool OverridePulse(PulseType type, bool onLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A87")]
	[Address(RVA = "0xF9A388", Offset = "0xF9A388", VA = "0xF9A388")]
	private static InputDevice GetController(bool left)
	{
		return default(InputDevice);
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0xF9A490", Offset = "0xF9A490", VA = "0xF9A490")]
	public UnityHandHaptics()
	{
	}
}
[Token(Token = "0x20003A2")]
public class ViveHandHaptics : UnityEngine.MonoBehaviour, IHandHaptics
{
	[Token(Token = "0x2000849")]
	private class HapticState
	{
		[Token(Token = "0x4003090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float spacing;

		[Token(Token = "0x4003091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ushort intensity;

		[Token(Token = "0x4003092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4003093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacingMax;

		[Token(Token = "0x4003094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticCurve curve;

		[Token(Token = "0x6003220")]
		[Address(RVA = "0xF5DD3C", Offset = "0xF5DD3C", VA = "0xF5DD3C")]
		public HapticState()
		{
		}
	}

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ViveHandHaptics _instance;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_Controller.Device _left;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamVR_Controller.Device _right;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly HapticState _leftState;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HapticState _rightState;

	[Token(Token = "0x17000236")]
	public static ViveHandHaptics Instance
	{
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xF5D6CC", Offset = "0xF5D6CC", VA = "0xF5D6CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0xF5D7AC", Offset = "0xF5D7AC", VA = "0xF5D7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0xF5D814", Offset = "0xF5D814", VA = "0xF5D814")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0xF5D848", Offset = "0xF5D848", VA = "0xF5D848")]
	private void HandleState(HapticState state, bool isLeft)
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0xF5DB9C", Offset = "0xF5DB9C", VA = "0xF5DB9C", Slot = "4")]
	public void PlayPulse(HapticPulse pulse, bool onLeft)
	{
	}

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0xF5DA60", Offset = "0xF5DA60", VA = "0xF5DA60")]
	private void ConvertHaptics(float amp, float freq, out ushort intensity, out float spacing)
	{
	}

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0xF5DBF0", Offset = "0xF5DBF0", VA = "0xF5DBF0", Slot = "5")]
	public void PlayCurve(HapticCurve curve, bool onLeft)
	{
	}

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0xF5DC4C", Offset = "0xF5DC4C", VA = "0xF5DC4C", Slot = "6")]
	public void Clear(bool onLeft)
	{
	}

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0xF5DCA4", Offset = "0xF5DCA4", VA = "0xF5DCA4", Slot = "7")]
	public bool UsesDuration()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0xF5DCAC", Offset = "0xF5DCAC", VA = "0xF5DCAC", Slot = "8")]
	public bool OverridePulse(PulseType type, bool onLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0xF5D9C8", Offset = "0xF5D9C8", VA = "0xF5D9C8")]
	public SteamVR_Controller.Device GetDevice(bool isLeft)
	{
		return null;
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0xF5DCB4", Offset = "0xF5DCB4", VA = "0xF5DCB4")]
	public ViveHandHaptics()
	{
	}
}
[Token(Token = "0x20003A3")]
public class ViveHapticsTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pulseDuration;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gapDuration;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _delay;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_Controller.Device _hand;

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0xF5DD44", Offset = "0xF5DD44", VA = "0xF5DD44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A96")]
	[Address(RVA = "0xF5DE98", Offset = "0xF5DE98", VA = "0xF5DE98")]
	public SteamVR_Controller.Device GetDevice(bool isLeft)
	{
		return null;
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0xF5DF6C", Offset = "0xF5DF6C", VA = "0xF5DF6C")]
	public ViveHapticsTest()
	{
	}
}
[Token(Token = "0x20003A4")]
public class BasicInputGeneral : IBasicInput
{
	[Token(Token = "0x6001A98")]
	[Address(RVA = "0xE6DB58", Offset = "0xE6DB58", VA = "0xE6DB58", Slot = "4")]
	public bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A99")]
	[Address(RVA = "0xE6DCA8", Offset = "0xE6DCA8", VA = "0xE6DCA8")]
	public BasicInputGeneral()
	{
	}
}
[Token(Token = "0x20003A5")]
public class BasicInputOpenVR : IBasicInput
{
	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VRHand _left;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRHand _right;

	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0xE6DCB0", Offset = "0xE6DCB0", VA = "0xE6DCB0")]
	public BasicInputOpenVR(VRHand left, VRHand right)
	{
	}

	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0xE6DCE8", Offset = "0xE6DCE8", VA = "0xE6DCE8", Slot = "4")]
	public bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003A6")]
public class BasicInputPs4Move : IBasicInput
{
	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VRHand _left;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRHand _right;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _menuPressTime;

	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0xE6DDC8", Offset = "0xE6DDC8", VA = "0xE6DDC8")]
	public BasicInputPs4Move(VRHand left, VRHand right)
	{
	}

	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0xE6DE00", Offset = "0xE6DE00", VA = "0xE6DE00", Slot = "4")]
	public bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0xE6DFE8", Offset = "0xE6DFE8", VA = "0xE6DFE8")]
	private bool GetMenuButton(InputStatus status)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0xE6E090", Offset = "0xE6E090", VA = "0xE6E090")]
	private bool GetUnityInput(InputStatus status, KeyCode code)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003A7")]
public class BasicInputRift : IBasicInput
{
	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VRHand _left;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRHand _right;

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0xE6E0D0", Offset = "0xE6E0D0", VA = "0xE6E0D0")]
	public BasicInputRift(VRHand left, VRHand right)
	{
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0xE6E108", Offset = "0xE6E108", VA = "0xE6E108", Slot = "4")]
	public bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003A8")]
public class BasicInputUnityVR : IBasicInput
{
	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IVRHand _left;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IVRHand _right;

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0xE6E2D0", Offset = "0xE6E2D0", VA = "0xE6E2D0")]
	public BasicInputUnityVR(IVRHand left, IVRHand right)
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0xE6E308", Offset = "0xE6E308", VA = "0xE6E308", Slot = "4")]
	public bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003A9")]
public class BasicInputVive : IBasicInput
{
	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VRHand _left;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRHand _right;

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0xE6E854", Offset = "0xE6E854", VA = "0xE6E854")]
	public BasicInputVive(VRHand left, VRHand right)
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0xE6E88C", Offset = "0xE6E88C", VA = "0xE6E88C", Slot = "4")]
	public bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003AA")]
public interface IBasicInput
{
	[Token(Token = "0x6001AA6")]
	bool GetInput(InputType type, InputStatus status);
}
[Token(Token = "0x20003AB")]
public enum InputType
{
	[Token(Token = "0x40017F3")]
	Select,
	[Token(Token = "0x40017F4")]
	Cancel,
	[Token(Token = "0x40017F5")]
	Menu,
	[Token(Token = "0x40017F6")]
	SelectTrigger
}
[Token(Token = "0x20003AC")]
public enum InputStatus
{
	[Token(Token = "0x40017F8")]
	Up,
	[Token(Token = "0x40017F9")]
	Down,
	[Token(Token = "0x40017FA")]
	Held
}
[Token(Token = "0x20003AD")]
public class GoHand : IVRHand, IVRTrack
{
	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E064", Offset = "0xB3E064")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 _elbowPos;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 _forearm;

	[Token(Token = "0x17000237")]
	public bool IsLeft
	{
		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x11840F0", Offset = "0x11840F0", VA = "0x11840F0", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E084", Offset = "0xB4E084")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x11840F8", Offset = "0x11840F8", VA = "0x11840F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E094", Offset = "0xB4E094")]
		private set
		{
		}
	}

	[Token(Token = "0x17000238")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x1184204", Offset = "0x1184204", VA = "0x1184204")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x1184104", Offset = "0x1184104", VA = "0x1184104")]
	public GoHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x11842A8", Offset = "0x11842A8", VA = "0x11842A8", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x11844FC", Offset = "0x11844FC", VA = "0x11844FC", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x118456C", Offset = "0x118456C", VA = "0x118456C", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x11845A4", Offset = "0x11845A4", VA = "0x11845A4", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x11845C0", Offset = "0x11845C0", VA = "0x11845C0", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0x1184708", Offset = "0x1184708", VA = "0x1184708", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0x1184714", Offset = "0x1184714", VA = "0x1184714", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0x118471C", Offset = "0x118471C", VA = "0x118471C", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0x1184724", Offset = "0x1184724", VA = "0x1184724", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0x118472C", Offset = "0x118472C", VA = "0x118472C", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0x1184734", Offset = "0x1184734", VA = "0x1184734", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0x1184760", Offset = "0x1184760", VA = "0x1184760", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0x118478C", Offset = "0x118478C", VA = "0x118478C", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x1184834", Offset = "0x1184834", VA = "0x1184834", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x118483C", Offset = "0x118483C", VA = "0x118483C", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x1184844", Offset = "0x1184844", VA = "0x1184844", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x1184850", Offset = "0x1184850", VA = "0x1184850", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x11845CC", Offset = "0x11845CC", VA = "0x11845CC")]
	private bool CheckInput(OVRInput.Button button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0x1184900", Offset = "0x1184900", VA = "0x1184900")]
	public static bool UseLeft()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003AE")]
public class GoHead : IVRHead, IVRTrack
{
	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 heightOffset;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool VirtualHead;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Pose VirtualHeadPose;

	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0xCD814C", Offset = "0xCD814C", VA = "0xCD814C")]
	public GoHead()
	{
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0xCD81B8", Offset = "0xCD81B8", VA = "0xCD81B8", Slot = "6")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0xCD8384", Offset = "0xCD8384", VA = "0xCD8384", Slot = "7")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0xCD82E4", Offset = "0xCD82E4", VA = "0xCD82E4")]
	public static Vector3 GetHeadPosRaw()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0xCD8410", Offset = "0xCD8410", VA = "0xCD8410", Slot = "8")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0xCD8448", Offset = "0xCD8448", VA = "0xCD8448", Slot = "9")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0xCD84D4", Offset = "0xCD84D4", VA = "0xCD84D4", Slot = "4")]
	public void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0xCD84D8", Offset = "0xCD84D8", VA = "0xCD84D8", Slot = "5")]
	public void SetTrackingToFloor(bool on)
	{
	}
}
[Token(Token = "0x20003AF")]
public class GoTracking : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0xCD89D8", Offset = "0xCD89D8", VA = "0xCD89D8")]
	public GoTracking()
	{
	}
}
[Token(Token = "0x20003B0")]
public class HandSmartGripOverlay : IVRHand, IVRTrack
{
	[Token(Token = "0x200084A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352C8", Offset = "0xB352C8")]
	private sealed class <UpdateRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4003095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4003096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4003097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandSmartGripOverlay <>4__this;

		[Token(Token = "0x1700050F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003224")]
			[Address(RVA = "0xCE23AC", Offset = "0xCE23AC", VA = "0xCE23AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003226")]
			[Address(RVA = "0xCE2414", Offset = "0xCE2414", VA = "0xCE2414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003221")]
		[Address(RVA = "0xCE16E4", Offset = "0xCE16E4", VA = "0xCE16E4")]
		[DebuggerHidden]
		public <UpdateRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6003222")]
		[Address(RVA = "0xCE2354", Offset = "0xCE2354", VA = "0xCE2354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003223")]
		[Address(RVA = "0xCE2358", Offset = "0xCE2358", VA = "0xCE2358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003225")]
		[Address(RVA = "0xCE23B4", Offset = "0xCE23B4", VA = "0xCE23B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IVRHand _base;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GripMode _mode;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _gripPressTime;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _overridingHeld;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _wasOverridingHeld;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _lastUpdateFrame;

	[Token(Token = "0x4001807")]
	private const float TapHoldThreshold = 0.2f;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E074", Offset = "0xB3E074")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x17000239")]
	public bool IsLeft
	{
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xCE160C", Offset = "0xCE160C", VA = "0xCE160C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E0A4", Offset = "0xB4E0A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xCE1614", Offset = "0xCE1614", VA = "0xCE1614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E0B4", Offset = "0xB4E0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0xCE11C8", Offset = "0xCE11C8", VA = "0xCE11C8")]
	public void SetMode(GripMode mode)
	{
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0xCE11D0", Offset = "0xCE11D0", VA = "0xCE11D0")]
	public HandSmartGripOverlay(IVRHand baseHand, GripMode mode)
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0xCE1328", Offset = "0xCE1328", VA = "0xCE1328", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0xCE13D8", Offset = "0xCE13D8", VA = "0xCE13D8", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0xCE148C", Offset = "0xCE148C", VA = "0xCE148C", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0xCE1558", Offset = "0xCE1558", VA = "0xCE1558", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0xCE1620", Offset = "0xCE1620", VA = "0xCE1620", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0xCE12B8", Offset = "0xCE12B8", VA = "0xCE12B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E0C4", Offset = "0xB4E0C4")]
	private IEnumerator UpdateRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0xCE1710", Offset = "0xCE1710", VA = "0xCE1710")]
	private void UpdateGripState()
	{
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0xCE18CC", Offset = "0xCE18CC", VA = "0xCE18CC", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0xCE1BE4", Offset = "0xCE1BE4", VA = "0xCE1BE4", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0xCE1CA8", Offset = "0xCE1CA8", VA = "0xCE1CA8", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0xCE1D6C", Offset = "0xCE1D6C", VA = "0xCE1D6C", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0xCE1E30", Offset = "0xCE1E30", VA = "0xCE1E30", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0xCE1EF4", Offset = "0xCE1EF4", VA = "0xCE1EF4", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0xCE1F1C", Offset = "0xCE1F1C", VA = "0xCE1F1C", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0xCE1FD0", Offset = "0xCE1FD0", VA = "0xCE1FD0", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0xCE2084", Offset = "0xCE2084", VA = "0xCE2084", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0xCE2138", Offset = "0xCE2138", VA = "0xCE2138", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0xCE21EC", Offset = "0xCE21EC", VA = "0xCE21EC", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0xCE22A0", Offset = "0xCE22A0", VA = "0xCE22A0", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003B1")]
public interface IVRHand : IVRTrack
{
	[Token(Token = "0x1700023A")]
	bool IsLeft
	{
		[Token(Token = "0x6001ADE")]
		get;
	}

	[Token(Token = "0x6001ADF")]
	bool IsTriggerEngaged(InputStatus state);

	[Token(Token = "0x6001AE0")]
	bool IsGripEngaged(InputStatus state);

	[Token(Token = "0x6001AE1")]
	bool IsStartEngaged(InputStatus state);

	[Token(Token = "0x6001AE2")]
	bool IsMajorButton1Engaged(InputStatus state);

	[Token(Token = "0x6001AE3")]
	bool IsMajorButton2Engaged(InputStatus state);

	[Token(Token = "0x6001AE4")]
	bool IsMinorButtonEngaged(InputStatus state);

	[Token(Token = "0x6001AE5")]
	float GripInputRaw();

	[Token(Token = "0x6001AE6")]
	float TriggerInputRaw();

	[Token(Token = "0x6001AE7")]
	Vector2 GetAxis2D();

	[Token(Token = "0x6001AE8")]
	bool HasAnalogueGrip();

	[Token(Token = "0x6001AE9")]
	bool HasAnalogueTrigger();

	[Token(Token = "0x6001AEA")]
	bool IsNearTrigger();

	[Token(Token = "0x6001AEB")]
	bool IsNearThumbBtns();
}
[Token(Token = "0x20003B2")]
public interface IVRHead : IVRTrack
{
	[Token(Token = "0x6001AEC")]
	void SetPositionTracking(bool on);

	[Token(Token = "0x6001AED")]
	void SetTrackingToFloor(bool on);
}
[Token(Token = "0x20003B3")]
public interface IVRNub
{
	[Token(Token = "0x6001AEE")]
	bool IsLeft();

	[Token(Token = "0x6001AEF")]
	bool IsTracking();

	[Token(Token = "0x6001AF0")]
	Quaternion GetLocalRotation();

	[Token(Token = "0x6001AF1")]
	bool IsPrimaryButtonEngaged(InputStatus state);

	[Token(Token = "0x6001AF2")]
	bool IsSecondaryButtonEngaged(InputStatus state);

	[Token(Token = "0x6001AF3")]
	Vector2 GetAxis();
}
[Token(Token = "0x20003B4")]
public interface IVRTrack
{
	[Token(Token = "0x6001AF4")]
	Vector3 GetLocalPosition();

	[Token(Token = "0x6001AF5")]
	Quaternion GetLocalRotation();

	[Token(Token = "0x6001AF6")]
	void GetLocalPose(out Vector3 pos, out Quaternion rot);

	[Token(Token = "0x6001AF7")]
	bool IsTracking();
}
[Token(Token = "0x20003B5")]
public class OculusNub : IVRNub
{
	[Token(Token = "0x1700023B")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x105EDB8", Offset = "0x105EDB8", VA = "0x105EDB8")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x105EE5C", Offset = "0x105EE5C", VA = "0x105EE5C", Slot = "4")]
	public bool IsLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0x105EF08", Offset = "0x105EF08", VA = "0x105EF08", Slot = "5")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x105EF24", Offset = "0x105EF24", VA = "0x105EF24", Slot = "6")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x105EF94", Offset = "0x105EF94", VA = "0x105EF94", Slot = "7")]
	public bool IsPrimaryButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x105F0DC", Offset = "0x105F0DC", VA = "0x105F0DC", Slot = "8")]
	public bool IsSecondaryButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x105F13C", Offset = "0x105F13C", VA = "0x105F13C", Slot = "9")]
	public Vector2 GetAxis()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0x105EFA0", Offset = "0x105EFA0", VA = "0x105EFA0")]
	private bool CheckInput(OVRInput.Button button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x105F1B0", Offset = "0x105F1B0", VA = "0x105F1B0")]
	public OculusNub()
	{
	}
}
[Token(Token = "0x20003B6")]
public class OpenVRHand : IVRHand, IVRTrack
{
	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E084", Offset = "0xB3E084")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_Controller.Device _controller;

	[Token(Token = "0x400180B")]
	public const ulong buttonA = 128uL;

	[Token(Token = "0x1700023C")]
	public bool IsLeft
	{
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xD156A4", Offset = "0xD156A4", VA = "0xD156A4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E128", Offset = "0xB4E128")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD156AC", Offset = "0xD156AC", VA = "0xD156AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E138", Offset = "0xB4E138")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023D")]
	private SteamVR_Controller.Device Controller
	{
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD156B8", Offset = "0xD156B8", VA = "0xD156B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0xD15760", Offset = "0xD15760", VA = "0xD15760")]
	public OpenVRHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0xD15790", Offset = "0xD15790", VA = "0xD15790", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0xD15858", Offset = "0xD15858", VA = "0xD15858", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0xD15864", Offset = "0xD15864", VA = "0xD15864", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0xD15870", Offset = "0xD15870", VA = "0xD15870", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0xD1587C", Offset = "0xD1587C", VA = "0xD1587C", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0xD15888", Offset = "0xD15888", VA = "0xD15888", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0xD15894", Offset = "0xD15894", VA = "0xD15894")]
	private bool CheckInput(EVRButtonId button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0xD1579C", Offset = "0xD1579C", VA = "0xD1579C")]
	private bool CheckInput(ulong button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0xD15950", Offset = "0xD15950", VA = "0xD15950")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0xD159E0", Offset = "0xD159E0", VA = "0xD159E0")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0xD15A70", Offset = "0xD15A70", VA = "0xD15A70", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0xD15AB8", Offset = "0xD15AB8", VA = "0xD15AB8", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0xD15B00", Offset = "0xD15B00", VA = "0xD15B00", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B12")]
	[Address(RVA = "0xD15CF0", Offset = "0xD15CF0", VA = "0xD15CF0", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B13")]
	[Address(RVA = "0xD15E10", Offset = "0xD15E10", VA = "0xD15E10", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0xD15BB4", Offset = "0xD15BB4", VA = "0xD15BB4")]
	private bool GetDevicePose(uint index, out SteamVR_Utils.RigidTransform devicePose)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B15")]
	[Address(RVA = "0xD15F84", Offset = "0xD15F84", VA = "0xD15F84", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B16")]
	[Address(RVA = "0xD15FA0", Offset = "0xD15FA0", VA = "0xD15FA0", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B17")]
	[Address(RVA = "0xD15FE8", Offset = "0xD15FE8", VA = "0xD15FE8", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B18")]
	[Address(RVA = "0xD1606C", Offset = "0xD1606C", VA = "0xD1606C", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0xD16100", Offset = "0xD16100", VA = "0xD16100", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0xD16108", Offset = "0xD16108", VA = "0xD16108", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003B7")]
public class OpenVRHead : IVRHead, IVRTrack
{
	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0xD16110", Offset = "0xD16110", VA = "0xD16110", Slot = "6")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0xD162E0", Offset = "0xD162E0", VA = "0xD162E0", Slot = "7")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0xD16374", Offset = "0xD16374", VA = "0xD16374", Slot = "8")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0xD161A4", Offset = "0xD161A4", VA = "0xD161A4")]
	private bool GetDevicePose(uint index, out SteamVR_Utils.RigidTransform devicePose)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0xD1645C", Offset = "0xD1645C", VA = "0xD1645C", Slot = "9")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0xD164C0", Offset = "0xD164C0", VA = "0xD164C0", Slot = "4")]
	public void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0xD16520", Offset = "0xD16520", VA = "0xD16520", Slot = "5")]
	public void SetTrackingToFloor(bool on)
	{
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0xD16524", Offset = "0xD16524", VA = "0xD16524")]
	public OpenVRHead()
	{
	}
}
[Token(Token = "0x20003B8")]
public class Ps4HmdHead : IVRHead, IVRTrack
{
	[Token(Token = "0x6001B23")]
	[Address(RVA = "0xC5623C", Offset = "0xC5623C", VA = "0xC5623C", Slot = "6")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0xC56330", Offset = "0xC56330", VA = "0xC56330", Slot = "7")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0xC56398", Offset = "0xC56398", VA = "0xC56398", Slot = "8")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0xC563D0", Offset = "0xC563D0", VA = "0xC563D0", Slot = "9")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0xC56434", Offset = "0xC56434", VA = "0xC56434", Slot = "4")]
	public void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0xC56438", Offset = "0xC56438", VA = "0xC56438", Slot = "5")]
	public void SetTrackingToFloor(bool on)
	{
	}

	[Token(Token = "0x6001B29")]
	[Address(RVA = "0xC5643C", Offset = "0xC5643C", VA = "0xC5643C")]
	public Ps4HmdHead()
	{
	}
}
[Token(Token = "0x20003B9")]
public class QuestHand : IVRHand, IVRTrack
{
	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E094", Offset = "0xB3E094")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x1700023E")]
	public bool IsLeft
	{
		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xBDD66C", Offset = "0xBDD66C", VA = "0xBDD66C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E148", Offset = "0xB4E148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xBDD674", Offset = "0xBDD674", VA = "0xBDD674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E158", Offset = "0xB4E158")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xBDD6B0", Offset = "0xBDD6B0", VA = "0xBDD6B0")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0xBDD680", Offset = "0xBDD680", VA = "0xBDD680")]
	public QuestHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0xBDD6C4", Offset = "0xBDD6C4", VA = "0xBDD6C4", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0xBDD81C", Offset = "0xBDD81C", VA = "0xBDD81C", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0xBDD828", Offset = "0xBDD828", VA = "0xBDD828", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0xBDD834", Offset = "0xBDD834", VA = "0xBDD834", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0xBDD840", Offset = "0xBDD840", VA = "0xBDD840", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0xBDD84C", Offset = "0xBDD84C", VA = "0xBDD84C", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0xBDD858", Offset = "0xBDD858", VA = "0xBDD858", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0xBDD8D4", Offset = "0xBDD8D4", VA = "0xBDD8D4", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0xBDD6D0", Offset = "0xBDD6D0", VA = "0xBDD6D0")]
	private bool CheckInput(OVRInput.Button button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0xBDD950", Offset = "0xBDD950", VA = "0xBDD950", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0xBDD9C8", Offset = "0xBDD9C8", VA = "0xBDD9C8", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0xBDDA40", Offset = "0xBDDA40", VA = "0xBDDA40", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0xBDDA88", Offset = "0xBDDA88", VA = "0xBDDA88", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0xBDDB00", Offset = "0xBDDB00", VA = "0xBDDB00")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0xBDDB78", Offset = "0xBDDB78", VA = "0xBDDB78")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0xBDDBF0", Offset = "0xBDDBF0", VA = "0xBDDBF0", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0xBDDC38", Offset = "0xBDDC38", VA = "0xBDDC38", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0xBDDCF8", Offset = "0xBDDCF8", VA = "0xBDDCF8", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0xBDDD74", Offset = "0xBDDD74", VA = "0xBDDD74", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0xBDDD7C", Offset = "0xBDDD7C", VA = "0xBDDD7C", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003BA")]
public class RiftHand : IVRHand, IVRTrack
{
	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0A4", Offset = "0xB3E0A4")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _lastPos;

	[Token(Token = "0x17000240")]
	public bool IsLeft
	{
		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xBEA0DC", Offset = "0xBEA0DC", VA = "0xBEA0DC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E168", Offset = "0xB4E168")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xBEA0E4", Offset = "0xBEA0E4", VA = "0xBEA0E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E178", Offset = "0xB4E178")]
		private set
		{
		}
	}

	[Token(Token = "0x17000241")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xBEA120", Offset = "0xBEA120", VA = "0xBEA120")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0xBEA0F0", Offset = "0xBEA0F0", VA = "0xBEA0F0")]
	public RiftHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0xBEA134", Offset = "0xBEA134", VA = "0xBEA134", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0xBEA28C", Offset = "0xBEA28C", VA = "0xBEA28C", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0xBEA298", Offset = "0xBEA298", VA = "0xBEA298", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0xBEA2A4", Offset = "0xBEA2A4", VA = "0xBEA2A4", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0xBEA2B0", Offset = "0xBEA2B0", VA = "0xBEA2B0", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0xBEA2BC", Offset = "0xBEA2BC", VA = "0xBEA2BC", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B4C")]
	[Address(RVA = "0xBEA2C8", Offset = "0xBEA2C8", VA = "0xBEA2C8", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0xBEA344", Offset = "0xBEA344", VA = "0xBEA344", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0xBEA140", Offset = "0xBEA140", VA = "0xBEA140")]
	private bool CheckInput(OVRInput.Button button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0xBEA3C0", Offset = "0xBEA3C0", VA = "0xBEA3C0", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0xBEA4C4", Offset = "0xBEA4C4", VA = "0xBEA4C4", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0xBEA53C", Offset = "0xBEA53C", VA = "0xBEA53C", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B52")]
	[Address(RVA = "0xBEA584", Offset = "0xBEA584", VA = "0xBEA584", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0xBEA5FC", Offset = "0xBEA5FC", VA = "0xBEA5FC")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0xBEA674", Offset = "0xBEA674", VA = "0xBEA674")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0xBEA6EC", Offset = "0xBEA6EC", VA = "0xBEA6EC", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0xBEA768", Offset = "0xBEA768", VA = "0xBEA768", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0xBEA7E4", Offset = "0xBEA7E4", VA = "0xBEA7E4", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0xBEA860", Offset = "0xBEA860", VA = "0xBEA860", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0xBEA868", Offset = "0xBEA868", VA = "0xBEA868", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003BB")]
public class RiftHead : IVRHead, IVRTrack
{
	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0xBEA870", Offset = "0xBEA870", VA = "0xBEA870", Slot = "6")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0xBEA910", Offset = "0xBEA910", VA = "0xBEA910", Slot = "7")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0xBEA974", Offset = "0xBEA974", VA = "0xBEA974", Slot = "8")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0xBEA9AC", Offset = "0xBEA9AC", VA = "0xBEA9AC", Slot = "9")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0xBEAA10", Offset = "0xBEAA10", VA = "0xBEAA10", Slot = "4")]
	public void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0xBEAB60", Offset = "0xBEAB60", VA = "0xBEAB60", Slot = "5")]
	public void SetTrackingToFloor(bool on)
	{
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0xBEAC20", Offset = "0xBEAC20", VA = "0xBEAC20")]
	public RiftHead()
	{
	}
}
[Token(Token = "0x20003BC")]
public static class UnityTracking
{
	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRNodeState> states;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _lastFrame;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<NodeType, XRNodeState> _trackedNodes;

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0xF9A688", Offset = "0xF9A688", VA = "0xF9A688")]
	public static void GetStates()
	{
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0xF9AB48", Offset = "0xF9AB48", VA = "0xF9AB48")]
	public static Vector3 GetPos(NodeType node)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0xF9AF28", Offset = "0xF9AF28", VA = "0xF9AF28")]
	public static Quaternion GetRot(NodeType node)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0xF9B04C", Offset = "0xF9B04C", VA = "0xF9B04C")]
	public static void GetPose(NodeType node, out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0xF9AD9C", Offset = "0xF9AD9C", VA = "0xF9AD9C")]
	public static bool HasNode(NodeType node)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003BD")]
public enum NodeType
{
	[Token(Token = "0x4001813")]
	Head,
	[Token(Token = "0x4001814")]
	HeadRaw,
	[Token(Token = "0x4001815")]
	HandLeft,
	[Token(Token = "0x4001816")]
	HandRight
}
[Token(Token = "0x20003BE")]
public class UnityVRHand : IVRHand, IVRTrack
{
	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0B4", Offset = "0xB3E0B4")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRNodeState _nodeState;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<XRNodeState> _nodeStates;

	[Token(Token = "0x17000242")]
	public bool IsLeft
	{
		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xF9B180", Offset = "0xF9B180", VA = "0xF9B180", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E188", Offset = "0xB4E188")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xF9B188", Offset = "0xF9B188", VA = "0xF9B188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E198", Offset = "0xB4E198")]
		private set
		{
		}
	}

	[Token(Token = "0x17000243")]
	private XRNode Controller
	{
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xF9B358", Offset = "0xF9B358", VA = "0xF9B358")]
		get
		{
			return default(XRNode);
		}
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0xF9B194", Offset = "0xF9B194", VA = "0xF9B194")]
	public UnityVRHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0xF9B36C", Offset = "0xF9B36C", VA = "0xF9B36C")]
	private void NodeAdded(XRNodeState node)
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0xF9B3C0", Offset = "0xF9B3C0", VA = "0xF9B3C0", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0xF9B53C", Offset = "0xF9B53C", VA = "0xF9B53C", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0xF9B5AC", Offset = "0xF9B5AC", VA = "0xF9B5AC", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0xF9B5FC", Offset = "0xF9B5FC", VA = "0xF9B5FC", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0xF9B64C", Offset = "0xF9B64C", VA = "0xF9B64C", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0xF9B69C", Offset = "0xF9B69C", VA = "0xF9B69C", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0xF9B70C", Offset = "0xF9B70C", VA = "0xF9B70C", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0xF9B804", Offset = "0xF9B804", VA = "0xF9B804", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0xF9B430", Offset = "0xF9B430", VA = "0xF9B430")]
	private bool CheckInput(string button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0xF9B8FC", Offset = "0xF9B8FC", VA = "0xF9B8FC", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0xF9B974", Offset = "0xF9B974", VA = "0xF9B974", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0xF9B9EC", Offset = "0xF9B9EC", VA = "0xF9B9EC", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0xF9BA34", Offset = "0xF9BA34", VA = "0xF9BA34", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0xF9BA3C", Offset = "0xF9BA3C", VA = "0xF9BA3C")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0xF9BA9C", Offset = "0xF9BA9C", VA = "0xF9BA9C")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0xF9BAFC", Offset = "0xF9BAFC", VA = "0xF9BAFC", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0xF9BB60", Offset = "0xF9BB60", VA = "0xF9BB60", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0xF9BBC4", Offset = "0xF9BBC4", VA = "0xF9BBC4", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0xF9BC24", Offset = "0xF9BC24", VA = "0xF9BC24", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0xF9BC2C", Offset = "0xF9BC2C", VA = "0xF9BC2C", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003BF")]
public enum SimOption
{
	[Token(Token = "0x400181B")]
	Auto,
	[Token(Token = "0x400181C")]
	On,
	[Token(Token = "0x400181D")]
	Off
}
[Token(Token = "0x20003C0")]
public struct VREditorOptions
{
	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ActiveDevice device;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public SimOption hasRoomscale;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SimOption handsConnected;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SimOption nubConnected;
}
[Token(Token = "0x20003C1")]
public class VREditor
{
	[Token(Token = "0x4001822")]
	private const string _FILE_NAME = "VREditorOptions";

	[Token(Token = "0x4001823")]
	private const string _SAVE_PATH = "/Resources/EditorSim/";

	[Token(Token = "0x17000244")]
	private static string Path
	{
		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x10E0BCC", Offset = "0x10E0BCC", VA = "0x10E0BCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0x10E0C20", Offset = "0x10E0C20", VA = "0x10E0C20")]
	public static VREditorOptions LoadConfig()
	{
		return default(VREditorOptions);
	}

	[Token(Token = "0x6001B82")]
	[Address(RVA = "0x10E0CFC", Offset = "0x10E0CFC", VA = "0x10E0CFC")]
	public static void SaveConfig(VREditorOptions config)
	{
	}

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0x10E0D00", Offset = "0x10E0D00", VA = "0x10E0D00")]
	public VREditor()
	{
	}
}
[Token(Token = "0x20003C2")]
public class VRGhostHand : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200084B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352D8", Offset = "0xB352D8")]
	private sealed class <>c
	{
		[Token(Token = "0x4003098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4003099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__27_0;

		[Token(Token = "0x6003228")]
		[Address(RVA = "0x10E1918", Offset = "0x10E1918", VA = "0x10E1918")]
		public <>c()
		{
		}

		[Token(Token = "0x6003229")]
		[Address(RVA = "0x10E1920", Offset = "0x10E1920", VA = "0x10E1920")]
		internal bool <Start>b__27_0(Collider childCollider)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001824")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x4001825")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x4001826")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x4001827")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x4001828")]
	public const float THRESH_COLLISION_FLEX = 0.9f;

	[Token(Token = "0x4001829")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x400182A")]
	public const float COLLIDER_SCALE_MIN = 0.01f;

	[Token(Token = "0x400182B")]
	public const float COLLIDER_SCALE_MAX = 1f;

	[Token(Token = "0x400182C")]
	public const float COLLIDER_SCALE_PER_SECOND = 1f;

	[Token(Token = "0x400182D")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x400182E")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLeft;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRHand _hand;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] m_colliders;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_collisionEnabled;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_animParamIndexPose;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_isPointing;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_pointBlend;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Quaternion m_anchorOffsetRotation;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3 m_anchorOffsetPosition;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool positionFromHead;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_collisionScaleCurrent;

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0x10E0D08", Offset = "0x10E0D08", VA = "0x10E0D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x10E10FC", Offset = "0x10E10FC", VA = "0x10E10FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x10E1370", Offset = "0x10E1370", VA = "0x10E1370")]
	private void UpdateTransform()
	{
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0x10E159C", Offset = "0x10E159C", VA = "0x10E159C")]
	private Vector3 GetHeadPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0x10E1194", Offset = "0x10E1194", VA = "0x10E1194")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0x10E172C", Offset = "0x10E172C", VA = "0x10E172C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0x10E1200", Offset = "0x10E1200", VA = "0x10E1200")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0x10E12A0", Offset = "0x10E12A0", VA = "0x10E12A0")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0x10E0F50", Offset = "0x10E0F50", VA = "0x10E0F50")]
	private void CollisionEnable(bool enabled)
	{
	}

	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0x10E1894", Offset = "0x10E1894", VA = "0x10E1894")]
	public VRGhostHand()
	{
	}
}
[Token(Token = "0x20003C3")]
public abstract class VRHand : VRTrackable
{
	[Token(Token = "0x17000245")]
	public abstract bool IsLeft
	{
		[Token(Token = "0x6001B8E")]
		get;
	}

	[Token(Token = "0x6001B8F")]
	public abstract bool IsTriggerEngaged(InputStatus state);

	[Token(Token = "0x6001B90")]
	public abstract bool IsGripEngaged(InputStatus state);

	[Token(Token = "0x6001B91")]
	public abstract bool IsStartEngaged(InputStatus state);

	[Token(Token = "0x6001B92")]
	public abstract bool IsMajorButton1Engaged(InputStatus state);

	[Token(Token = "0x6001B93")]
	public abstract bool IsMajorButton2Engaged(InputStatus state);

	[Token(Token = "0x6001B94")]
	public abstract bool IsMinorButtonEngaged(InputStatus state);

	[Token(Token = "0x6001B95")]
	public abstract float GripInputRaw();

	[Token(Token = "0x6001B96")]
	public abstract float TriggerInputRaw();

	[Token(Token = "0x6001B97")]
	public abstract Vector2 GetAxis2D();

	[Token(Token = "0x6001B98")]
	public abstract bool HasAnalogueGrip();

	[Token(Token = "0x6001B99")]
	public abstract bool HasAnalogueTrigger();

	[Token(Token = "0x6001B9A")]
	public abstract bool IsNearTrigger();

	[Token(Token = "0x6001B9B")]
	public abstract bool IsNearThumbBtns();

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x10E5944", Offset = "0x10E5944", VA = "0x10E5944")]
	protected VRHand()
	{
	}
}
[Token(Token = "0x20003C4")]
public class VRHand3Dof : VRHandBasic
{
	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Mirror;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _useVirtual;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IVRHand _altHand;

	[Token(Token = "0x17000246")]
	private bool IsMain
	{
		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x10E5954", Offset = "0x10E5954", VA = "0x10E5954")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x10E5A0C", Offset = "0x10E5A0C", VA = "0x10E5A0C")]
	public VRHand3Dof(IVRHand wrapper, IVRHand altHand)
	{
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x10E5A70", Offset = "0x10E5A70", VA = "0x10E5A70", Slot = "7")]
	public override bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x10E5BBC", Offset = "0x10E5BBC", VA = "0x10E5BBC", Slot = "4")]
	public override Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x10E5F08", Offset = "0x10E5F08", VA = "0x10E5F08", Slot = "5")]
	public override Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BA2")]
	[Address(RVA = "0x10E613C", Offset = "0x10E613C", VA = "0x10E613C", Slot = "6")]
	public override void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0x10E63EC", Offset = "0x10E63EC", VA = "0x10E63EC", Slot = "15")]
	public override float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0x10E6558", Offset = "0x10E6558", VA = "0x10E6558")]
	public static void NotifyGrab(bool begun)
	{
	}

	[Token(Token = "0x6001BA5")]
	[Address(RVA = "0x10E65C8", Offset = "0x10E65C8", VA = "0x10E65C8", Slot = "16")]
	public override float TriggerInputRaw()
	{
		return default(float);
	}
}
[Token(Token = "0x20003C5")]
public class VRHandBasic : VRHand
{
	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IVRHand _wrapper;

	[Token(Token = "0x17000247")]
	public override bool IsLeft
	{
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x10E6724", Offset = "0x10E6724", VA = "0x10E6724", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BA8")]
	[Address(RVA = "0x10E5A44", Offset = "0x10E5A44", VA = "0x10E5A44")]
	public VRHandBasic(IVRHand wrapper)
	{
	}

	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0x10E5D5C", Offset = "0x10E5D5C", VA = "0x10E5D5C", Slot = "4")]
	public override Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BAA")]
	[Address(RVA = "0x10E6088", Offset = "0x10E6088", VA = "0x10E6088", Slot = "5")]
	public override Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BAB")]
	[Address(RVA = "0x10E6238", Offset = "0x10E6238", VA = "0x10E6238", Slot = "6")]
	public override void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0x10E67D4", Offset = "0x10E67D4", VA = "0x10E67D4")]
	private Vector3 HeadRawPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x10E5958", Offset = "0x10E5958", VA = "0x10E5958", Slot = "7")]
	public override bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0x10E6838", Offset = "0x10E6838", VA = "0x10E6838", Slot = "9")]
	public override bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x10E68FC", Offset = "0x10E68FC", VA = "0x10E68FC", Slot = "10")]
	public override bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x10E69C0", Offset = "0x10E69C0", VA = "0x10E69C0", Slot = "11")]
	public override bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x10E6A84", Offset = "0x10E6A84", VA = "0x10E6A84", Slot = "12")]
	public override bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x10E6B48", Offset = "0x10E6B48", VA = "0x10E6B48", Slot = "13")]
	public override bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x10E6C0C", Offset = "0x10E6C0C", VA = "0x10E6C0C", Slot = "14")]
	public override bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x10E64A4", Offset = "0x10E64A4", VA = "0x10E64A4", Slot = "15")]
	public override float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x10E666C", Offset = "0x10E666C", VA = "0x10E666C", Slot = "16")]
	public override float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x10E6CD0", Offset = "0x10E6CD0", VA = "0x10E6CD0", Slot = "17")]
	public override Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0x10E6D84", Offset = "0x10E6D84", VA = "0x10E6D84", Slot = "18")]
	public override bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0x10E6E38", Offset = "0x10E6E38", VA = "0x10E6E38", Slot = "19")]
	public override bool HasAnalogueTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x10E6EEC", Offset = "0x10E6EEC", VA = "0x10E6EEC", Slot = "20")]
	public override bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0x10E6FA0", Offset = "0x10E6FA0", VA = "0x10E6FA0", Slot = "21")]
	public override bool IsNearThumbBtns()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003C6")]
public class VRHandSmartGrip : VRHandBasic
{
	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GripMode Mode;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _gripPressTime;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _overridingHeld;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _wasOverridingHeld;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _lastUpdateFrame;

	[Token(Token = "0x4001849")]
	private const float TapHoldThreshold = 0.2f;

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x10E7054", Offset = "0x10E7054", VA = "0x10E7054")]
	public VRHandSmartGrip(IVRHand wrapper)
	{
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x10E7084", Offset = "0x10E7084", VA = "0x10E7084")]
	private void SetUpdater()
	{
	}

	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0x10E716C", Offset = "0x10E716C", VA = "0x10E716C")]
	public void UpdateGrip()
	{
	}

	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0x10E725C", Offset = "0x10E725C", VA = "0x10E725C", Slot = "10")]
	public override bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0x10E7378", Offset = "0x10E7378", VA = "0x10E7378", Slot = "15")]
	public override float GripInputRaw()
	{
		return default(float);
	}
}
[Token(Token = "0x20003C7")]
public enum GripMode
{
	[Token(Token = "0x400184B")]
	Hybrid,
	[Token(Token = "0x400184C")]
	Hold,
	[Token(Token = "0x400184D")]
	Toggle
}
[Token(Token = "0x20003C8")]
public class SmartGripUpdater : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SmartGripUpdater Instance;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<VRHandSmartGrip> hands;

	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0xDAA8A0", Offset = "0xDAA8A0", VA = "0xDAA8A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0xDAA920", Offset = "0xDAA920", VA = "0xDAA920")]
	public void AddController(VRHandSmartGrip hand)
	{
	}

	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0xDAA988", Offset = "0xDAA988", VA = "0xDAA988")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0xDAAA20", Offset = "0xDAAA20", VA = "0xDAAA20")]
	public SmartGripUpdater()
	{
	}
}
[Token(Token = "0x20003C9")]
public abstract class VRHead : VRTrackable
{
	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x10E73A8", Offset = "0x10E73A8", VA = "0x10E73A8")]
	protected VRHead()
	{
	}
}
[Token(Token = "0x20003CA")]
public class VRHeadBasic : VRHead
{
	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IVRHead _wrapper;

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x10E73B0", Offset = "0x10E73B0", VA = "0x10E73B0")]
	public VRHeadBasic(IVRHead wrapper)
	{
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x10E73DC", Offset = "0x10E73DC", VA = "0x10E73DC", Slot = "4")]
	public override Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x10E748C", Offset = "0x10E748C", VA = "0x10E748C", Slot = "5")]
	public override Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0x10E7540", Offset = "0x10E7540", VA = "0x10E7540", Slot = "6")]
	public override void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0x10E760C", Offset = "0x10E760C", VA = "0x10E760C", Slot = "7")]
	public override bool IsTracking()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003CB")]
public class VRNetworkNub : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetworkRig networkSender;

	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0x10EB370", Offset = "0x10EB370", VA = "0x10EB370")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0x10EB374", Offset = "0x10EB374", VA = "0x10EB374")]
	public VRNetworkNub()
	{
	}
}
[Token(Token = "0x20003CC")]
public abstract class VRNub
{
	[Token(Token = "0x6001BCC")]
	public abstract bool IsLeft();

	[Token(Token = "0x6001BCD")]
	public abstract bool IsTracking();

	[Token(Token = "0x6001BCE")]
	public abstract Quaternion GetLocalRotation();

	[Token(Token = "0x6001BCF")]
	public abstract bool IsPrimaryButtonEngaged(InputStatus state);

	[Token(Token = "0x6001BD0")]
	public abstract bool IsSecondaryButtonEngaged(InputStatus state);

	[Token(Token = "0x6001BD1")]
	public abstract Vector2 GetAxis();

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0x10EB37C", Offset = "0x10EB37C", VA = "0x10EB37C")]
	protected VRNub()
	{
	}
}
[Token(Token = "0x20003CD")]
public class VRNubBasic : VRNub
{
	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IVRNub _wrapper;

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x10E946C", Offset = "0x10E946C", VA = "0x10E946C")]
	public VRNubBasic(IVRNub wrapper)
	{
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x10EB384", Offset = "0x10EB384", VA = "0x10EB384", Slot = "4")]
	public override bool IsLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x10EB434", Offset = "0x10EB434", VA = "0x10EB434", Slot = "5")]
	public override bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x10EB4E8", Offset = "0x10EB4E8", VA = "0x10EB4E8", Slot = "6")]
	public override Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x10EB59C", Offset = "0x10EB59C", VA = "0x10EB59C", Slot = "7")]
	public override bool IsPrimaryButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0x10EB660", Offset = "0x10EB660", VA = "0x10EB660", Slot = "8")]
	public override bool IsSecondaryButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x10EB724", Offset = "0x10EB724", VA = "0x10EB724", Slot = "9")]
	public override Vector2 GetAxis()
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20003CE")]
public abstract class VRTrackable
{
	[Token(Token = "0x6001BDA")]
	public abstract Vector3 GetLocalPosition();

	[Token(Token = "0x6001BDB")]
	public abstract Quaternion GetLocalRotation();

	[Token(Token = "0x6001BDC")]
	public abstract void GetLocalPose(out Vector3 pos, out Quaternion rot);

	[Token(Token = "0x6001BDD")]
	public abstract bool IsTracking();

	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0x10E594C", Offset = "0x10E594C", VA = "0x10E594C")]
	protected VRTrackable()
	{
	}
}
[Token(Token = "0x20003CF")]
public static class VirtualHand
{
	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 _handHeadOffset;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IVRHead _head;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool _grabbing;

	[Token(Token = "0x6001BDF")]
	[Address(RVA = "0xF5C3CC", Offset = "0xF5C3CC", VA = "0xF5C3CC")]
	public static void Init(IVRHead head)
	{
	}

	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0xF5C438", Offset = "0xF5C438", VA = "0xF5C438")]
	public static Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0xF5C664", Offset = "0xF5C664", VA = "0xF5C664")]
	public static Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0xF5C73C", Offset = "0xF5C73C", VA = "0xF5C73C")]
	public static bool IsGrabbing()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0xF5C8A4", Offset = "0xF5C8A4", VA = "0xF5C8A4")]
	public static float TriggerRaw()
	{
		return default(float);
	}
}
[Token(Token = "0x20003D0")]
public class ViveHand : IVRHand, IVRTrack
{
	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0D4", Offset = "0xB3E0D4")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_Controller.Device _controller;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ranOnce;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isUsingWands;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastCheck;

	[Token(Token = "0x17000248")]
	public bool IsLeft
	{
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xF5C9BC", Offset = "0xF5C9BC", VA = "0xF5C9BC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E1A8", Offset = "0xB4E1A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xF5C9C4", Offset = "0xF5C9C4", VA = "0xF5C9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E1B8", Offset = "0xB4E1B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000249")]
	private SteamVR_Controller.Device Controller
	{
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xF5C9D0", Offset = "0xF5C9D0", VA = "0xF5C9D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0xF5CA74", Offset = "0xF5CA74", VA = "0xF5CA74")]
	public ViveHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0xF5CAAC", Offset = "0xF5CAAC", VA = "0xF5CAAC", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0xF5CB74", Offset = "0xF5CB74", VA = "0xF5CB74", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0xF5CB80", Offset = "0xF5CB80", VA = "0xF5CB80", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0xF5CB8C", Offset = "0xF5CB8C", VA = "0xF5CB8C", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BED")]
	[Address(RVA = "0xF5CBEC", Offset = "0xF5CBEC", VA = "0xF5CBEC", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0xF5CC4C", Offset = "0xF5CC4C", VA = "0xF5CC4C", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0xF5CC58", Offset = "0xF5CC58", VA = "0xF5CC58")]
	private bool CheckInput(EVRButtonId button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0xF5CAB8", Offset = "0xF5CAB8", VA = "0xF5CAB8")]
	private bool CheckInput(ulong button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0xF5CD14", Offset = "0xF5CD14", VA = "0xF5CD14")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0xF5CDA4", Offset = "0xF5CDA4", VA = "0xF5CDA4")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BF3")]
	[Address(RVA = "0xF5CE34", Offset = "0xF5CE34", VA = "0xF5CE34", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0xF5CE60", Offset = "0xF5CE60", VA = "0xF5CE60", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0xF5CEA8", Offset = "0xF5CEA8", VA = "0xF5CEA8", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0xF5D098", Offset = "0xF5D098", VA = "0xF5D098", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BF7")]
	[Address(RVA = "0xF5D3A0", Offset = "0xF5D3A0", VA = "0xF5D3A0", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001BF8")]
	[Address(RVA = "0xF5CF5C", Offset = "0xF5CF5C", VA = "0xF5CF5C")]
	private bool GetDevicePose(uint index, out SteamVR_Utils.RigidTransform devicePose)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0xF5D1FC", Offset = "0xF5D1FC", VA = "0xF5D1FC")]
	private bool UsingWands()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0xF5D544", Offset = "0xF5D544", VA = "0xF5D544", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0xF5D560", Offset = "0xF5D560", VA = "0xF5D560", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0xF5D5A8", Offset = "0xF5D5A8", VA = "0xF5D5A8", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0xF5D628", Offset = "0xF5D628", VA = "0xF5D628", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0xF5D6BC", Offset = "0xF5D6BC", VA = "0xF5D6BC", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0xF5D6C4", Offset = "0xF5D6C4", VA = "0xF5D6C4", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003D1")]
public class ViveHead : IVRHead, IVRTrack
{
	[Token(Token = "0x6001C00")]
	[Address(RVA = "0xF5DF80", Offset = "0xF5DF80", VA = "0xF5DF80", Slot = "6")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0xF5E150", Offset = "0xF5E150", VA = "0xF5E150", Slot = "7")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0xF5E1E4", Offset = "0xF5E1E4", VA = "0xF5E1E4", Slot = "8")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0xF5E014", Offset = "0xF5E014", VA = "0xF5E014")]
	private bool GetDevicePose(uint index, out SteamVR_Utils.RigidTransform devicePose)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0xF5E2CC", Offset = "0xF5E2CC", VA = "0xF5E2CC", Slot = "9")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C05")]
	[Address(RVA = "0xF5E330", Offset = "0xF5E330", VA = "0xF5E330", Slot = "4")]
	public void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0xF5E390", Offset = "0xF5E390", VA = "0xF5E390", Slot = "5")]
	public void SetTrackingToFloor(bool on)
	{
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0xF5E394", Offset = "0xF5E394", VA = "0xF5E394")]
	public ViveHead()
	{
	}
}
[Token(Token = "0x20003D2")]
public class XRHand : IVRHand, IVRTrack
{
	[Token(Token = "0x200084C")]
	private class InputSplit
	{
		[Token(Token = "0x400309A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputFeatureUsage<bool> btn;

		[Token(Token = "0x400309B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lastCheckFrame;

		[Token(Token = "0x400309C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int lastDownFrame;

		[Token(Token = "0x400309D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lastUpFrame;

		[Token(Token = "0x600322A")]
		[Address(RVA = "0x13A7E28", Offset = "0x13A7E28", VA = "0x13A7E28")]
		public InputSplit(InputFeatureUsage<bool> btn)
		{
		}

		[Token(Token = "0x600322B")]
		[Address(RVA = "0x13A815C", Offset = "0x13A815C", VA = "0x13A815C")]
		public void Check(int frame, XRNode hand)
		{
		}

		[Token(Token = "0x600322C")]
		[Address(RVA = "0x13A8550", Offset = "0x13A8550", VA = "0x13A8550")]
		public bool IsHeld(int frame, XRNode hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600322D")]
		[Address(RVA = "0x13A8580", Offset = "0x13A8580", VA = "0x13A8580")]
		public bool IsUp(int frame, XRNode hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600322E")]
		[Address(RVA = "0x13A8508", Offset = "0x13A8508", VA = "0x13A8508")]
		public bool IsDown(int frame, XRNode hand)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0E4", Offset = "0xB3E0E4")]
	private bool <IsLeft>k__BackingField;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputSplit ABtn;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputSplit BBtn;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputSplit minorBtn;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputSplit menuBtn;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputSplit triggerBtn;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputSplit gripBtn;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InputSplit> toUpdate;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 _lastAxis;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 _lastLastAxis;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _lastAxisFrom;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 _lastExtend;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _lastExtendTime;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _clearExtend;

	[Token(Token = "0x1700024A")]
	public bool IsLeft
	{
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x13A7B30", Offset = "0x13A7B30", VA = "0x13A7B30", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E1C8", Offset = "0xB4E1C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x13A7B38", Offset = "0x13A7B38", VA = "0x13A7B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E1D8", Offset = "0xB4E1D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700024B")]
	private XRNode Hand
	{
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x13A7B44", Offset = "0x13A7B44", VA = "0x13A7B44")]
		get
		{
			return default(XRNode);
		}
	}

	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0x13A7B58", Offset = "0x13A7B58", VA = "0x13A7B58")]
	public XRHand(bool isLeft)
	{
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x13A7E64", Offset = "0x13A7E64", VA = "0x13A7E64", Slot = "5")]
	public bool IsTriggerEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0x13A7F7C", Offset = "0x13A7F7C", VA = "0x13A7F7C", Slot = "6")]
	public bool IsGripEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0x13A7F8C", Offset = "0x13A7F8C", VA = "0x13A7F8C", Slot = "7")]
	public bool IsStartEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0x13A7F9C", Offset = "0x13A7F9C", VA = "0x13A7F9C", Slot = "8")]
	public bool IsMajorButton1Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0x13A7FAC", Offset = "0x13A7FAC", VA = "0x13A7FAC", Slot = "9")]
	public bool IsMajorButton2Engaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0x13A7FBC", Offset = "0x13A7FBC", VA = "0x13A7FBC", Slot = "10")]
	public bool IsMinorButtonEngaged(InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x13A7FCC", Offset = "0x13A7FCC", VA = "0x13A7FCC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0x13A81D0", Offset = "0x13A81D0", VA = "0x13A81D0")]
	public bool IsAxisEnganged(InputStatus state, out Vector2 axis)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0x13A82FC", Offset = "0x13A82FC", VA = "0x13A82FC")]
	private void GetAxisValues(Vector2 axis, out bool extended, out bool zeroed)
	{
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0x13A83B0", Offset = "0x13A83B0", VA = "0x13A83B0", Slot = "11")]
	public float GripInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0x13A845C", Offset = "0x13A845C", VA = "0x13A845C", Slot = "12")]
	public float TriggerInputRaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0x13A7E74", Offset = "0x13A7E74", VA = "0x13A7E74")]
	private bool CheckInput(InputSplit button, InputStatus state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0x13A85C8", Offset = "0x13A85C8", VA = "0x13A85C8", Slot = "18")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0x13A867C", Offset = "0x13A867C", VA = "0x13A867C", Slot = "19")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0x13A872C", Offset = "0x13A872C", VA = "0x13A872C", Slot = "20")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0x13A8774", Offset = "0x13A8774", VA = "0x13A8774", Slot = "21")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0x13A87B8", Offset = "0x13A87B8", VA = "0x13A87B8")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0x13A87C8", Offset = "0x13A87C8", VA = "0x13A87C8")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0x13A87D8", Offset = "0x13A87D8", VA = "0x13A87D8", Slot = "16")]
	public bool IsNearTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C1F")]
	[Address(RVA = "0x13A87E0", Offset = "0x13A87E0", VA = "0x13A87E0", Slot = "17")]
	public bool IsNearThumbBtns()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C20")]
	[Address(RVA = "0x13A80B0", Offset = "0x13A80B0", VA = "0x13A80B0", Slot = "13")]
	public Vector2 GetAxis2D()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0x13A888C", Offset = "0x13A888C", VA = "0x13A888C", Slot = "14")]
	public bool HasAnalogueGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0x13A8894", Offset = "0x13A8894", VA = "0x13A8894", Slot = "15")]
	public bool HasAnalogueTrigger()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003D3")]
public class XRHead : IVRHead, IVRTrack
{
	[Token(Token = "0x6001C23")]
	[Address(RVA = "0x13A889C", Offset = "0x13A889C", VA = "0x13A889C", Slot = "6")]
	public Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0x13A8940", Offset = "0x13A8940", VA = "0x13A8940", Slot = "7")]
	public Quaternion GetLocalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001C25")]
	[Address(RVA = "0x13A89E0", Offset = "0x13A89E0", VA = "0x13A89E0", Slot = "8")]
	public void GetLocalPose(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x6001C26")]
	[Address(RVA = "0x13A8A18", Offset = "0x13A8A18", VA = "0x13A8A18", Slot = "9")]
	public bool IsTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C27")]
	[Address(RVA = "0x13A8A20", Offset = "0x13A8A20", VA = "0x13A8A20", Slot = "4")]
	public void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001C28")]
	[Address(RVA = "0x13A8A24", Offset = "0x13A8A24", VA = "0x13A8A24", Slot = "5")]
	public void SetTrackingToFloor(bool on)
	{
	}

	[Token(Token = "0x6001C29")]
	[Address(RVA = "0x13A8A28", Offset = "0x13A8A28", VA = "0x13A8A28")]
	public XRHead()
	{
	}
}
[Token(Token = "0x20003D4")]
public abstract class BodyIK : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IKRig rig;

	[Token(Token = "0x6001C2A")]
	[Address(RVA = "0xE722DC", Offset = "0xE722DC", VA = "0xE722DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0xE7236C", Offset = "0xE7236C", VA = "0xE7236C", Slot = "4")]
	public virtual void SetRig(IKRig rig)
	{
	}

	[Token(Token = "0x6001C2C")]
	public abstract void SetHandTracking(bool isLeft, bool track);

	[Token(Token = "0x6001C2D")]
	public abstract void SetHandWeight(bool isLeft, float value);

	[Token(Token = "0x6001C2E")]
	public abstract void SetLocomotion(float value);

	[Token(Token = "0x6001C2F")]
	public abstract float GetLocomotion();

	[Token(Token = "0x6001C30")]
	public abstract void SetPelvisWeight(float value);

	[Token(Token = "0x6001C31")]
	public abstract void SetFeetWeight(float value);

	[Token(Token = "0x6001C32")]
	public abstract void BodyStiffness(float value);

	[Token(Token = "0x6001C33")]
	public abstract void SetArmScale(float scale);

	[Token(Token = "0x6001C34")]
	public abstract void GetHandTransforms(out Transform left, out Transform right);

	[Token(Token = "0x6001C35")]
	public abstract void SetLocomotionOffset(Vector3 offset);

	[Token(Token = "0x6001C36")]
	public abstract void Enable(bool on);

	[Token(Token = "0x6001C37")]
	[Address(RVA = "0xE72374", Offset = "0xE72374", VA = "0xE72374")]
	protected BodyIK()
	{
	}
}
[Token(Token = "0x20003D5")]
public class BodyMapper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRRig vrRig;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IKRig ikRig;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BodyIK bodyIK;

	[Token(Token = "0x6001C38")]
	[Address(RVA = "0xE7237C", Offset = "0xE7237C", VA = "0xE7237C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C39")]
	[Address(RVA = "0xE7249C", Offset = "0xE7249C", VA = "0xE7249C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0xE7247C", Offset = "0xE7247C", VA = "0xE7247C")]
	private void SetIKRig(IKRig rig)
	{
	}

	[Token(Token = "0x6001C3B")]
	[Address(RVA = "0xE72528", Offset = "0xE72528", VA = "0xE72528")]
	private void Sync()
	{
	}

	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0xE72680", Offset = "0xE72680", VA = "0xE72680")]
	private void SyncTarget(Transform vrRig, Transform ikRig)
	{
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0xE727C8", Offset = "0xE727C8", VA = "0xE727C8")]
	public BodyMapper()
	{
	}
}
[Token(Token = "0x20003D6")]
public class BodyMapperSimple : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRRig vrRig;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IKRig ikRig;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BodyIK bodyIK;

	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0xD71980", Offset = "0xD71980", VA = "0xD71980")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C3F")]
	[Address(RVA = "0xD71AA0", Offset = "0xD71AA0", VA = "0xD71AA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0xD71A80", Offset = "0xD71A80", VA = "0xD71A80")]
	private void SetIKRig(IKRig rig)
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0xD71B2C", Offset = "0xD71B2C", VA = "0xD71B2C")]
	private void Sync()
	{
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0xD71C84", Offset = "0xD71C84", VA = "0xD71C84")]
	private void SyncTarget(Transform vrRig, Transform ikRig)
	{
	}

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0xD71D8C", Offset = "0xD71D8C", VA = "0xD71D8C")]
	public BodyMapperSimple()
	{
	}
}
[Token(Token = "0x20003D7")]
public class CameraNeck : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xDist;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float zDist;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float yDist;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform camera;

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0xD779DC", Offset = "0xD779DC", VA = "0xD779DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0xD77C80", Offset = "0xD77C80", VA = "0xD77C80")]
	public CameraNeck()
	{
	}
}
[Token(Token = "0x20003D8")]
public class CheapFinalIk : BodyIK
{
	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> leftArm;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> rightArm;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform head;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LimbIK leftIk;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LimbIK rightIk;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _headRef;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _enabled;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ang;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 axis;

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0xD7EFD4", Offset = "0xD7EFD4", VA = "0xD7EFD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0xD7F014", Offset = "0xD7F014", VA = "0xD7F014", Slot = "4")]
	public override void SetRig(IKRig rig)
	{
	}

	[Token(Token = "0x6001C48")]
	[Address(RVA = "0xD7F1E8", Offset = "0xD7F1E8", VA = "0xD7F1E8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4E1E8", Offset = "0xB4E1E8")]
	private void SetupRig()
	{
	}

	[Token(Token = "0x6001C49")]
	[Address(RVA = "0xD7F7CC", Offset = "0xD7F7CC", VA = "0xD7F7CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0xD7F67C", Offset = "0xD7F67C", VA = "0xD7F67C")]
	private Vector3 GetLeftBend()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0xD7F9B0", Offset = "0xD7F9B0", VA = "0xD7F9B0", Slot = "5")]
	public override void SetHandTracking(bool isLeft, bool track)
	{
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0xD7FA30", Offset = "0xD7FA30", VA = "0xD7FA30", Slot = "6")]
	public override void SetHandWeight(bool isLeft, float value)
	{
	}

	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0xD7FA90", Offset = "0xD7FA90", VA = "0xD7FA90", Slot = "7")]
	public override void SetLocomotion(float value)
	{
	}

	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0xD7FA94", Offset = "0xD7FA94", VA = "0xD7FA94", Slot = "8")]
	public override float GetLocomotion()
	{
		return default(float);
	}

	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0xD7FA9C", Offset = "0xD7FA9C", VA = "0xD7FA9C", Slot = "9")]
	public override void SetPelvisWeight(float value)
	{
	}

	[Token(Token = "0x6001C50")]
	[Address(RVA = "0xD7FAA0", Offset = "0xD7FAA0", VA = "0xD7FAA0", Slot = "10")]
	public override void SetFeetWeight(float value)
	{
	}

	[Token(Token = "0x6001C51")]
	[Address(RVA = "0xD7FAA4", Offset = "0xD7FAA4", VA = "0xD7FAA4", Slot = "11")]
	public override void BodyStiffness(float value)
	{
	}

	[Token(Token = "0x6001C52")]
	[Address(RVA = "0xD7FAA8", Offset = "0xD7FAA8", VA = "0xD7FAA8", Slot = "12")]
	public override void SetArmScale(float scale)
	{
	}

	[Token(Token = "0x6001C53")]
	[Address(RVA = "0xD7FAAC", Offset = "0xD7FAAC", VA = "0xD7FAAC", Slot = "13")]
	public override void GetHandTransforms(out Transform left, out Transform right)
	{
	}

	[Token(Token = "0x6001C54")]
	[Address(RVA = "0xD7FB0C", Offset = "0xD7FB0C", VA = "0xD7FB0C", Slot = "14")]
	public override void SetLocomotionOffset(Vector3 offset)
	{
	}

	[Token(Token = "0x6001C55")]
	[Address(RVA = "0xD7FB10", Offset = "0xD7FB10", VA = "0xD7FB10", Slot = "15")]
	public override void Enable(bool on)
	{
	}

	[Token(Token = "0x6001C56")]
	[Address(RVA = "0xD7FBA4", Offset = "0xD7FBA4", VA = "0xD7FBA4")]
	public CheapFinalIk()
	{
	}
}
[Token(Token = "0x20003D9")]
public class FinalIKBodyWrapper : BodyIK
{
	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRIK finalIk;

	[Token(Token = "0x6001C57")]
	[Address(RVA = "0xE99D5C", Offset = "0xE99D5C", VA = "0xE99D5C", Slot = "4")]
	public override void SetRig(IKRig rig)
	{
	}

	[Token(Token = "0x6001C58")]
	[Address(RVA = "0xE9A278", Offset = "0xE9A278", VA = "0xE9A278", Slot = "5")]
	public override void SetHandTracking(bool isLeft, bool track)
	{
	}

	[Token(Token = "0x6001C59")]
	[Address(RVA = "0xE9A310", Offset = "0xE9A310", VA = "0xE9A310", Slot = "6")]
	public override void SetHandWeight(bool isLeft, float value)
	{
	}

	[Token(Token = "0x6001C5A")]
	[Address(RVA = "0xE9A388", Offset = "0xE9A388", VA = "0xE9A388", Slot = "7")]
	public override void SetLocomotion(float value)
	{
	}

	[Token(Token = "0x6001C5B")]
	[Address(RVA = "0xE9A3B8", Offset = "0xE9A3B8", VA = "0xE9A3B8", Slot = "8")]
	public override float GetLocomotion()
	{
		return default(float);
	}

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0xE9A3E8", Offset = "0xE9A3E8", VA = "0xE9A3E8", Slot = "9")]
	public override void SetPelvisWeight(float value)
	{
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0xE9A434", Offset = "0xE9A434", VA = "0xE9A434", Slot = "10")]
	public override void SetFeetWeight(float value)
	{
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0xE9A4B8", Offset = "0xE9A4B8", VA = "0xE9A4B8", Slot = "11")]
	public override void BodyStiffness(float value)
	{
	}

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0xE9A580", Offset = "0xE9A580", VA = "0xE9A580", Slot = "12")]
	public override void SetArmScale(float scale)
	{
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0xE9A5CC", Offset = "0xE9A5CC", VA = "0xE9A5CC", Slot = "13")]
	public override void GetHandTransforms(out Transform left, out Transform right)
	{
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0xE9A610", Offset = "0xE9A610", VA = "0xE9A610", Slot = "14")]
	public override void SetLocomotionOffset(Vector3 offset)
	{
	}

	[Token(Token = "0x6001C62")]
	[Address(RVA = "0xE9A640", Offset = "0xE9A640", VA = "0xE9A640", Slot = "15")]
	public override void Enable(bool on)
	{
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0xE9A6A0", Offset = "0xE9A6A0", VA = "0xE9A6A0")]
	public FinalIKBodyWrapper()
	{
	}
}
[Token(Token = "0x20003DA")]
public class IKRig : Rig
{
	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ignoreLowerBody;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E0F4", Offset = "0xB3E0F4")]
	public float pelvisWeight;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E10C", Offset = "0xB3E10C")]
	public float feetWeight;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform outputLeftFoot;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform outputRightFoot;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform outputPelvisHint;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E124", Offset = "0xB3E124")]
	public float deafultLocomotion;

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0xCE4F74", Offset = "0xCE4F74", VA = "0xCE4F74")]
	public IKRig()
	{
	}
}
[Token(Token = "0x20003DB")]
public class IkInputToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _trackingLeftHand;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _trackingRightHand;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BodyIK bodyIk;

	[Token(Token = "0x6001C65")]
	[Address(RVA = "0xCE5138", Offset = "0xCE5138", VA = "0xCE5138")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0xCE513C", Offset = "0xCE513C", VA = "0xCE513C")]
	private void CheckHandTracking()
	{
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0xCE52B0", Offset = "0xCE52B0", VA = "0xCE52B0")]
	public IkInputToggler()
	{
	}
}
[Token(Token = "0x20003DC")]
public class Rig : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E13C", Offset = "0xB3E13C")]
	public Transform inputHead;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform inputHandLeft;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform inputHandRight;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E174", Offset = "0xB3E174")]
	public RigOffset predefinedOffset;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E1AC", Offset = "0xB3E1AC")]
	public Transform outputHead;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform outputHandLeft;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform outputHandRight;

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0xBEBAB8", Offset = "0xBEBAB8", VA = "0xBEBAB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0xBEBAC0", Offset = "0xBEBAC0", VA = "0xBEBAC0")]
	public void SetOffsets(RigOffset offset)
	{
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0xBEBC10", Offset = "0xBEBC10", VA = "0xBEBC10")]
	public Rig()
	{
	}
}
[Token(Token = "0x20003DD")]
public class RigOffset : ScriptableObject
{
	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 headPosOffset;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion headRotOffset;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 handLeftPosOffset;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion handLeftRotOffset;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 handRightPosOffset;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Quaternion handRightRotOffset;

	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0xBEBC18", Offset = "0xBEBC18", VA = "0xBEBC18")]
	public RigOffset()
	{
	}
}
[Token(Token = "0x20003DE")]
public class RigOffsetPerPlatform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rig rig;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _ranOnce;

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0xBEBC20", Offset = "0xBEBC20", VA = "0xBEBC20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0xBEBC24", Offset = "0xBEBC24", VA = "0xBEBC24")]
	private void SetPlatformOffset()
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0xBEBCFC", Offset = "0xBEBCFC", VA = "0xBEBCFC")]
	public RigOffsetPerPlatform()
	{
	}
}
[Token(Token = "0x20003DF")]
public class VRRig : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rig rig;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool editorOverride;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useFixedUpdate;

	[Token(Token = "0x140000AE")]
	public event Action OnRigUpdated
	{
		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x10EBD6C", Offset = "0x10EBD6C", VA = "0x10EBD6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E220", Offset = "0xB4E220")]
		add
		{
		}
		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x10EBE10", Offset = "0x10EBE10", VA = "0x10EBE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E230", Offset = "0xB4E230")]
		remove
		{
		}
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x10EBEB4", Offset = "0x10EBEB4", VA = "0x10EBEB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x10EBF10", Offset = "0x10EBF10", VA = "0x10EBF10")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x10EBEC4", Offset = "0x10EBEC4", VA = "0x10EBEC4")]
	private void Sync()
	{
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x10EBF20", Offset = "0x10EBF20", VA = "0x10EBF20", Slot = "4")]
	protected virtual void SyncTransforms()
	{
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x10EBFE0", Offset = "0x10EBFE0", VA = "0x10EBFE0")]
	protected void SyncTransform(Transform tform, VRTrackable trackable)
	{
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x10EC0CC", Offset = "0x10EC0CC", VA = "0x10EC0CC")]
	public bool HeadTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0x10EC1BC", Offset = "0x10EC1BC", VA = "0x10EC1BC")]
	public bool HandLeftTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0x10EC2AC", Offset = "0x10EC2AC", VA = "0x10EC2AC")]
	public bool HandRightTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x10EC39C", Offset = "0x10EC39C", VA = "0x10EC39C")]
	public VRRig()
	{
	}
}
[Token(Token = "0x20003E0")]
public class VRRigNub : VRRig
{
	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x10EC3AC", Offset = "0x10EC3AC", VA = "0x10EC3AC", Slot = "4")]
	protected override void SyncTransforms()
	{
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x10EC458", Offset = "0x10EC458", VA = "0x10EC458")]
	private void SyncNub(Transform tform, VRNub nub, bool isLeft)
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x10EC534", Offset = "0x10EC534", VA = "0x10EC534")]
	private void SyncHead(Transform tform, VRTrackable trackable)
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x10EC5F4", Offset = "0x10EC5F4", VA = "0x10EC5F4")]
	public VRRigNub()
	{
	}
}
[Token(Token = "0x20003E1")]
public class Chair : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform top;

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0xD7B1E4", Offset = "0xD7B1E4", VA = "0xD7B1E4")]
	public void SetSize(float size)
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0xD7B24C", Offset = "0xD7B24C", VA = "0xD7B24C")]
	public Chair()
	{
	}
}
[Token(Token = "0x20003E2")]
public class SittingTracker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chair chair;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pollTime;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BodyIK body;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IKRig ikRig;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRSizeTracker sizeTracker;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool editorOverride;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pushInfront;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isSitting;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _confirmTime;

	[Token(Token = "0x40018A5")]
	private const float SITTING_CONFIRM_TIME = 0.5f;

	[Token(Token = "0x40018A6")]
	private const float STANDING_CONFIRM_TIME = 0.05f;

	[Token(Token = "0x40018A7")]
	private const float CHAIR_MIN_HEIGHT = 0.35f;

	[Token(Token = "0x40018A8")]
	private const float CHAIR_MAX_HEIGHT = 0.5f;

	[Token(Token = "0x40018A9")]
	private const float UPPERBODY_PERCENT = 0.55f;

	[Token(Token = "0x40018AA")]
	private const float WORLD_MIN_SIT_HEIGHT = 0.3f;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _lastSample;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _sittingLerp;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lastChairHeight;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool standingOverride;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool hideSitTransition;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool LastReportedSittingState;

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0xCA9294", Offset = "0xCA9294", VA = "0xCA9294")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0xCA94BC", Offset = "0xCA94BC", VA = "0xCA94BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0xCA92CC", Offset = "0xCA92CC", VA = "0xCA92CC")]
	public void UpdateStance(bool force)
	{
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0xCA94C4", Offset = "0xCA94C4", VA = "0xCA94C4")]
	private void SwitchPosition(bool isSitting, float upperBodyHeight)
	{
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0xCA9F04", Offset = "0xCA9F04", VA = "0xCA9F04")]
	private float GetAngleAmount(Quaternion q)
	{
		return default(float);
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0xCA9F84", Offset = "0xCA9F84", VA = "0xCA9F84")]
	private Quaternion SetAngleAmount(Quaternion q, float amount)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0xCAA044", Offset = "0xCAA044", VA = "0xCAA044")]
	public static float ExtrapolateApproxStandingHeight(float sittingHeight)
	{
		return default(float);
	}

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0xCAA0D4", Offset = "0xCAA0D4", VA = "0xCAA0D4")]
	public SittingTracker()
	{
	}
}
[Token(Token = "0x20003E3")]
public class ActivateOnPause : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0xE5C798", Offset = "0xE5C798", VA = "0xE5C798")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0xE5C88C", Offset = "0xE5C88C", VA = "0xE5C88C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0xE5C960", Offset = "0xE5C960", VA = "0xE5C960")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0xE5C988", Offset = "0xE5C988", VA = "0xE5C988")]
	private void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0xE5C9BC", Offset = "0xE5C9BC", VA = "0xE5C9BC")]
	public ActivateOnPause()
	{
	}
}
[Token(Token = "0x20003E4")]
public class GenerateHandOffset : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x11757A8", Offset = "0x11757A8", VA = "0x11757A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x11757AC", Offset = "0x11757AC", VA = "0x11757AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x11757B0", Offset = "0x11757B0", VA = "0x11757B0")]
	public GenerateHandOffset()
	{
	}
}
[Token(Token = "0x20003E5")]
public class MassAddPhotonViewSO : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001C92")]
	[Address(RVA = "0xD3BCC0", Offset = "0xD3BCC0", VA = "0xD3BCC0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4E240", Offset = "0xB4E240")]
	private void AddPhotonViews()
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0xD3BE78", Offset = "0xD3BE78", VA = "0xD3BE78")]
	public MassAddPhotonViewSO()
	{
	}
}
[Token(Token = "0x20003E6")]
public class PauseOnMinorBtn : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001C94")]
	[Address(RVA = "0xCFB830", Offset = "0xCFB830", VA = "0xCFB830")]
	public PauseOnMinorBtn()
	{
	}
}
[Token(Token = "0x20003E7")]
public static class VREditorSettings
{
	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VREditorOptions simOptions;
}
[Token(Token = "0x20003E8")]
public class VRParentCenterer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform root;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform camera;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform counter;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startCamOffset;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool syncY;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeAlive;

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0x10EB7D8", Offset = "0x10EB7D8", VA = "0x10EB7D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0x10EB7DC", Offset = "0x10EB7DC", VA = "0x10EB7DC")]
	public void SetOffset()
	{
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0x10EB828", Offset = "0x10EB828", VA = "0x10EB828")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0x10EB864", Offset = "0x10EB864", VA = "0x10EB864")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0x10EBA00", Offset = "0x10EBA00", VA = "0x10EBA00")]
	public VRParentCenterer()
	{
	}
}
[Token(Token = "0x20003E9")]
public class ManualParent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parent;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _offset;

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0xD3B414", Offset = "0xD3B414", VA = "0xD3B414")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C9B")]
	[Address(RVA = "0xD3B4F8", Offset = "0xD3B4F8", VA = "0xD3B4F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0xD3B5FC", Offset = "0xD3B5FC", VA = "0xD3B5FC")]
	public ManualParent()
	{
	}
}
[Token(Token = "0x20003EA")]
public class MovingForward : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0xBBCF40", Offset = "0xBBCF40", VA = "0xBBCF40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0xBBD04C", Offset = "0xBBD04C", VA = "0xBBD04C")]
	public MovingForward()
	{
	}
}
[Token(Token = "0x20003EB")]
public static class VRMapping
{
	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRHand leftHand;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static VRHand rightHand;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static VRHead head;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VRNub nub;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static IBasicInput _basicInput;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool IsInitialised;

	[Token(Token = "0x40018C0")]
	private const string _PLAYER_HEIGHT_KEY = "PlayerHeight";

	[Token(Token = "0x40018C1")]
	private const string _PLAYER_ARM_SPAN_KEY = "PlayerArmSpan";

	[Token(Token = "0x40018C2")]
	private const float PLAYER_DEFAULT_HEIGHT = 1.75f;

	[Token(Token = "0x40018C3")]
	private const float MODEL_DEFAULT_HEIGHT = 1.58f;

	[Token(Token = "0x40018C4")]
	private const float PLAYER_DEFAULT_ARM_SPAN = 1.65f;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float PlayerHeight;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float PlayerArmSpan;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static VREditorOptions _editorVR;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E204", Offset = "0xB3E204")]
	private static bool <NeedsCalibration>k__BackingField;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E214", Offset = "0xB3E214")]
	private static bool <LoadedCalibration>k__BackingField;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E224", Offset = "0xB3E224")]
	private static bool <UsingPositionalTracking>k__BackingField;

	[Token(Token = "0x40018CC")]
	public const float STANDING_HEIGHT = 1.7f;

	[Token(Token = "0x40018CD")]
	public const float SITTING_HEIGHT = 1.3f;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float FAUX_HEIGHT;

	[Token(Token = "0x1700024C")]
	public static float PlayerHeightScale
	{
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x10E8C20", Offset = "0x10E8C20", VA = "0x10E8C20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024D")]
	public static bool NeedsCalibration
	{
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x10E90E4", Offset = "0x10E90E4", VA = "0x10E90E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E298", Offset = "0xB4E298")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x10E914C", Offset = "0x10E914C", VA = "0x10E914C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E2A8", Offset = "0xB4E2A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700024E")]
	public static bool LoadedCalibration
	{
		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x10E91BC", Offset = "0x10E91BC", VA = "0x10E91BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E2B8", Offset = "0xB4E2B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x10E9224", Offset = "0x10E9224", VA = "0x10E9224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E2C8", Offset = "0xB4E2C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public static bool UsingPositionalTracking
	{
		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x10E9294", Offset = "0x10E9294", VA = "0x10E9294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E2D8", Offset = "0xB4E2D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x10E92FC", Offset = "0x10E92FC", VA = "0x10E92FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E2E8", Offset = "0xB4E2E8")]
		set
		{
		}
	}

	[Token(Token = "0x140000AF")]
	public static event Action OnTrackingChanged
	{
		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x10E8F04", Offset = "0x10E8F04", VA = "0x10E8F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E278", Offset = "0xB4E278")]
		add
		{
		}
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x10E8FF4", Offset = "0x10E8FF4", VA = "0x10E8FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E288", Offset = "0xB4E288")]
		remove
		{
		}
	}

	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0x10E8064", Offset = "0x10E8064", VA = "0x10E8064")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001CA9")]
	[Address(RVA = "0x10E9748", Offset = "0x10E9748", VA = "0x10E9748")]
	private static void OnUserLoaded()
	{
	}

	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0x10E9A98", Offset = "0x10E9A98", VA = "0x10E9A98")]
	private static void CheckHandOverlays()
	{
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0x10E9B5C", Offset = "0x10E9B5C", VA = "0x10E9B5C")]
	private static void UpdateHandOverlays(int index)
	{
	}

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x10E97A8", Offset = "0x10E97A8", VA = "0x10E97A8")]
	private static void CacheHeight()
	{
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0x10E9BB0", Offset = "0x10E9BB0", VA = "0x10E9BB0")]
	private static void SaveHeight()
	{
	}

	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0x10E9D28", Offset = "0x10E9D28", VA = "0x10E9D28")]
	public static bool GetInput(InputType type, InputStatus status)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0x10E78E8", Offset = "0x10E78E8", VA = "0x10E78E8")]
	public static bool DevicePresent(bool useEditorSettings = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0x10E936C", Offset = "0x10E936C", VA = "0x10E936C")]
	public static string DeviceModel(bool useEditorSettings = true)
	{
		return null;
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0x10E9FB8", Offset = "0x10E9FB8", VA = "0x10E9FB8")]
	public static bool IsRift(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x10EA0C4", Offset = "0x10EA0C4", VA = "0x10EA0C4")]
	public static bool IsVive(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0x10E8CEC", Offset = "0x10E8CEC", VA = "0x10E8CEC")]
	public static bool IsGo(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0x10E8DF8", Offset = "0x10E8DF8", VA = "0x10E8DF8")]
	public static bool IsGear(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0x10E2CC0", Offset = "0x10E2CC0", VA = "0x10E2CC0")]
	public static bool IsPSVR(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x10EA1D0", Offset = "0x10EA1D0", VA = "0x10EA1D0")]
	public static bool IsChinaVR()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0x10EA234", Offset = "0x10EA234", VA = "0x10EA234")]
	public static bool IsQiyu()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB8")]
	[Address(RVA = "0x10EA26C", Offset = "0x10EA26C", VA = "0x10EA26C")]
	public static bool HandsSupported(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CB9")]
	[Address(RVA = "0x10EA318", Offset = "0x10EA318", VA = "0x10EA318")]
	public static bool HandsConnected(bool useEditorSettings = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBA")]
	[Address(RVA = "0x10EA478", Offset = "0x10EA478", VA = "0x10EA478")]
	public static bool HandConnected(bool useEditorSettings = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBB")]
	[Address(RVA = "0x10EA5E0", Offset = "0x10EA5E0", VA = "0x10EA5E0")]
	public static bool PrimaryHandConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBC")]
	[Address(RVA = "0x10EA6B4", Offset = "0x10EA6B4", VA = "0x10EA6B4")]
	public static bool ShowHands()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBD")]
	[Address(RVA = "0x10EA758", Offset = "0x10EA758", VA = "0x10EA758")]
	public static bool NubSupported(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBE")]
	[Address(RVA = "0x10EA804", Offset = "0x10EA804", VA = "0x10EA804")]
	public static bool NubConnected(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0x10EA90C", Offset = "0x10EA90C", VA = "0x10EA90C")]
	public static bool HasRoomScale(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0x10EA9D4", Offset = "0x10EA9D4", VA = "0x10EA9D4")]
	public static float GetPlayerObservedHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x10EAB8C", Offset = "0x10EAB8C", VA = "0x10EAB8C")]
	public static void SetPlayerObservedHeight()
	{
	}

	[Token(Token = "0x6001CC2")]
	[Address(RVA = "0x10EAEC8", Offset = "0x10EAEC8", VA = "0x10EAEC8")]
	public static void SkippedCalibration()
	{
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x10EAD80", Offset = "0x10EAD80", VA = "0x10EAD80")]
	public static void SetPlayerCalibratedHeight(float height, float armSpan, bool save = true)
	{
	}

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x10E9498", Offset = "0x10E9498", VA = "0x10E9498")]
	public static void SetPositionTracking(bool on)
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x10E95C8", Offset = "0x10E95C8", VA = "0x10E95C8")]
	private static void SetPlatformPhysics()
	{
	}

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x10E2DCC", Offset = "0x10E2DCC", VA = "0x10E2DCC")]
	public static bool IsQuest(bool useEditorSettings = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x10EAFC4", Offset = "0x10EAFC4", VA = "0x10EAFC4")]
	public static bool IsMobile()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0x10E7C80", Offset = "0x10E7C80", VA = "0x10E7C80")]
	public static bool Is3Dof()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0x10EB018", Offset = "0x10EB018", VA = "0x10EB018")]
	public static void ReducePhysicsStep(bool on)
	{
	}

	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0x10EB0A8", Offset = "0x10EB0A8", VA = "0x10EB0A8")]
	public static float FlyzerSensitivity()
	{
		return default(float);
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x10E79D4", Offset = "0x10E79D4", VA = "0x10E79D4")]
	public static bool IsFlyzer()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003EC")]
public enum Direction
{
	[Token(Token = "0x40018D0")]
	None,
	[Token(Token = "0x40018D1")]
	Up,
	[Token(Token = "0x40018D2")]
	Down,
	[Token(Token = "0x40018D3")]
	Left,
	[Token(Token = "0x40018D4")]
	Right
}
[Token(Token = "0x20003ED")]
public class XRTrackingOriginSetter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackingOriginModeFlags _trackingOrigin;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _setOnAwake;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool _setOnStart;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<XRInputSubsystem> _subsystems;

	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0x13A8A30", Offset = "0x13A8A30", VA = "0x13A8A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x13A8B74", Offset = "0x13A8B74", VA = "0x13A8B74")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x13A8A40", Offset = "0x13A8A40", VA = "0x13A8A40")]
	private void RefreshSubsystems()
	{
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x13A8B84", Offset = "0x13A8B84", VA = "0x13A8B84")]
	public XRTrackingOriginSetter()
	{
	}
}
[Token(Token = "0x20003EE")]
public class CameraPlaneChanger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float nearPlane;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float farPlane;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CameraClearFlags clearFlags;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int cullingMask;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera _cam;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _defaultCullingMask;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh _mesh;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _mat;

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0xD77CA0", Offset = "0xD77CA0", VA = "0xD77CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0xD77D10", Offset = "0xD77D10", VA = "0xD77D10")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0xD77D7C", Offset = "0xD77D7C", VA = "0xD77D7C")]
	public CameraPlaneChanger()
	{
	}
}
[Token(Token = "0x20003EF")]
public class CameraPlaneRestorer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _cam;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _layerEverything;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _meshGO;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _meshTF;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh _mesh;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _mat;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Matrix4x4 _defaultMatrix;

	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0xD77D98", Offset = "0xD77D98", VA = "0xD77D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0xD77ECC", Offset = "0xD77ECC", VA = "0xD77ECC")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0xD77F84", Offset = "0xD77F84", VA = "0xD77F84")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0xD780A0", Offset = "0xD780A0", VA = "0xD780A0")]
	public CameraPlaneRestorer()
	{
	}
}
[Token(Token = "0x20003F0")]
public class ViveportDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200084D")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x600322F")]
		[Address(RVA = "0x139D170", Offset = "0x139D170", VA = "0x139D170", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6003230")]
		[Address(RVA = "0x139D2D8", Offset = "0x139D2D8", VA = "0x139D2D8", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0x139C0B0", Offset = "0x139C0B0", VA = "0x139C0B0")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x1399714", Offset = "0x1399714", VA = "0x1399714")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x13997CC", Offset = "0x13997CC", VA = "0x13997CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x1399890", Offset = "0x1399890", VA = "0x1399890")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x1399894", Offset = "0x1399894", VA = "0x1399894")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0x139C0B8", Offset = "0x139C0B8", VA = "0x139C0B8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0x139C210", Offset = "0x139C210", VA = "0x139C210")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x139C35C", Offset = "0x139C35C", VA = "0x139C35C")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x139C49C", Offset = "0x139C49C", VA = "0x139C49C")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x139C588", Offset = "0x139C588", VA = "0x139C588")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x139C7C4", Offset = "0x139C7C4", VA = "0x139C7C4")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x139C9B0", Offset = "0x139C9B0", VA = "0x139C9B0")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x139CAFC", Offset = "0x139CAFC", VA = "0x139CAFC")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x139CC28", Offset = "0x139CC28", VA = "0x139CC28")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x139CD1C", Offset = "0x139CD1C", VA = "0x139CD1C")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x139CE10", Offset = "0x139CE10", VA = "0x139CE10")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0x139CF04", Offset = "0x139CF04", VA = "0x139CF04")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0x139CFF8", Offset = "0x139CFF8", VA = "0x139CFF8")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x20003F1")]
public class ViveportDemo_ArcadeSession : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x139D3AC", Offset = "0x139D3AC", VA = "0x139D3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x139D474", Offset = "0x139D474", VA = "0x139D474")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0x139D478", Offset = "0x139D478", VA = "0x139D478")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x139D574", Offset = "0x139D574", VA = "0x139D574")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x20003F2")]
public class ViveportDemo_DLC : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x139D5E4", Offset = "0x139D5E4", VA = "0x139D5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x139D6A8", Offset = "0x139D6A8", VA = "0x139D6A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0x139DA90", Offset = "0x139DA90", VA = "0x139DA90")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0x139DA94", Offset = "0x139DA94", VA = "0x139DA94")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0x139DA98", Offset = "0x139DA98", VA = "0x139DA98")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0x139DA9C", Offset = "0x139DA9C", VA = "0x139DA9C")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x20003F3")]
public class ViveportDemo_IAP : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200084E")]
	public class Item
	{
		[Token(Token = "0x400309E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x400309F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x40030A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x6003232")]
		[Address(RVA = "0x139EB38", Offset = "0x139EB38", VA = "0x139EB38")]
		public Item()
		{
		}
	}

	[Token(Token = "0x200084F")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x40030A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x6003233")]
		[Address(RVA = "0x139EBA0", Offset = "0x139EBA0", VA = "0x139EBA0", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6003234")]
		[Address(RVA = "0x139EC58", Offset = "0x139EC58", VA = "0x139EC58", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6003235")]
		[Address(RVA = "0x139ED14", Offset = "0x139ED14", VA = "0x139ED14", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6003236")]
		[Address(RVA = "0x139EE04", Offset = "0x139EE04", VA = "0x139EE04", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x6003237")]
		[Address(RVA = "0x139EEA0", Offset = "0x139EEA0", VA = "0x139EEA0", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6003238")]
		[Address(RVA = "0x139F538", Offset = "0x139F538", VA = "0x139F538", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6003239")]
		[Address(RVA = "0x139F5C0", Offset = "0x139F5C0", VA = "0x139F5C0", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600323A")]
		[Address(RVA = "0x139F67C", Offset = "0x139F67C", VA = "0x139F67C", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600323B")]
		[Address(RVA = "0x139F738", Offset = "0x139F738", VA = "0x139F738", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600323C")]
		[Address(RVA = "0x139F828", Offset = "0x139F828", VA = "0x139F828", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x600323D")]
		[Address(RVA = "0x139FC00", Offset = "0x139FC00", VA = "0x139FC00", Slot = "15")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x600323E")]
		[Address(RVA = "0x139FCA0", Offset = "0x139FCA0", VA = "0x139FCA0", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x600323F")]
		[Address(RVA = "0x139DC6C", Offset = "0x139DC6C", VA = "0x139DC6C")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x139DB1C", Offset = "0x139DB1C", VA = "0x139DB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x139DCD0", Offset = "0x139DCD0", VA = "0x139DCD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x139DCD4", Offset = "0x139DCD4", VA = "0x139DCD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x139E8B8", Offset = "0x139E8B8", VA = "0x139E8B8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x139E9A0", Offset = "0x139E9A0", VA = "0x139E9A0")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x139EA90", Offset = "0x139EA90", VA = "0x139EA90")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x20003F4")]
public class ViveportDemo_MainThreadDispatcher : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000850")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6003240")]
		[Address(RVA = "0x13A0038", Offset = "0x13A0038", VA = "0x13A0038", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6003241")]
		[Address(RVA = "0x13A00D8", Offset = "0x13A00D8", VA = "0x13A00D8")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x2000851")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB370D0", Offset = "0xB370D0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40034EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x60039FE")]
			[Address(RVA = "0x13A01A8", Offset = "0x13A01A8", VA = "0x13A01A8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60039FF")]
			[Address(RVA = "0x13A01B0", Offset = "0x13A01B0", VA = "0x13A01B0")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6003242")]
		[Address(RVA = "0x13A00E0", Offset = "0x13A00E0", VA = "0x13A00E0", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6003243")]
		[Address(RVA = "0x139FFB8", Offset = "0x139FFB8", VA = "0x139FFB8")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x2000852")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000A7D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB370E0", Offset = "0xB370E0")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40034EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40034ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40034EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x170005E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003A03")]
				[Address(RVA = "0x13A0458", Offset = "0x13A0458", VA = "0x13A0458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003A05")]
				[Address(RVA = "0x13A04C0", Offset = "0x13A04C0", VA = "0x13A04C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003A00")]
			[Address(RVA = "0x13A0348", Offset = "0x13A0348", VA = "0x13A0348")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6003A01")]
			[Address(RVA = "0x13A037C", Offset = "0x13A037C", VA = "0x13A037C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003A02")]
			[Address(RVA = "0x13A0380", Offset = "0x13A0380", VA = "0x13A0380", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003A04")]
			[Address(RVA = "0x13A0460", Offset = "0x13A0460", VA = "0x13A0460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6003244")]
		[Address(RVA = "0x13A0250", Offset = "0x13A0250", VA = "0x13A0250", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6003245")]
		[Address(RVA = "0x13A02D8", Offset = "0x13A02D8", VA = "0x13A02D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB542B8", Offset = "0xB542B8")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6003246")]
		[Address(RVA = "0x13A0374", Offset = "0x13A0374", VA = "0x13A0374")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x6001CFD")]
	[Address(RVA = "0x139FE3C", Offset = "0x139FE3C", VA = "0x139FE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0x139FF18", Offset = "0x139FF18", VA = "0x139FF18")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0x139FFC0", Offset = "0x139FFC0", VA = "0x139FFC0")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x20003F5")]
public class ViveportDemo_Subscription : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0x13A04C8", Offset = "0x13A04C8", VA = "0x13A04C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D02")]
	[Address(RVA = "0x13A058C", Offset = "0x13A058C", VA = "0x13A058C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0x13A0974", Offset = "0x13A0974", VA = "0x13A0974")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001D04")]
	[Address(RVA = "0x13A0978", Offset = "0x13A0978", VA = "0x13A0978")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001D05")]
	[Address(RVA = "0x13A097C", Offset = "0x13A097C", VA = "0x13A097C")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001D06")]
	[Address(RVA = "0x13A0980", Offset = "0x13A0980", VA = "0x13A0980")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x20003F6")]
public class CollisionTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AircraftControl _aircraftControl;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _lastPos;

	[Token(Token = "0x6001D08")]
	[Address(RVA = "0xD834E0", Offset = "0xD834E0", VA = "0xD834E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0xD835B4", Offset = "0xD835B4", VA = "0xD835B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0xD83630", Offset = "0xD83630", VA = "0xD83630")]
	private void OnOriginMove(Vector3 delta)
	{
	}

	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0xD836E4", Offset = "0xD836E4", VA = "0xD836E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0xD838B8", Offset = "0xD838B8", VA = "0xD838B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0xD83AF0", Offset = "0xD83AF0", VA = "0xD83AF0")]
	public CollisionTest()
	{
	}
}
[Token(Token = "0x20003F7")]
public class DrawOrderController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001D0E")]
	[Address(RVA = "0xD55244", Offset = "0xD55244", VA = "0xD55244")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0xD55300", Offset = "0xD55300", VA = "0xD55300")]
	public DrawOrderController()
	{
	}
}
[Token(Token = "0x20003F8")]
public class FinishLine : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000853")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352E8", Offset = "0xB352E8")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40030A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40030A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40030A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FinishLine <>4__this;

		[Token(Token = "0x17000511")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600324A")]
			[Address(RVA = "0xE9A8B4", Offset = "0xE9A8B4", VA = "0xE9A8B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000512")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600324C")]
			[Address(RVA = "0xE9A91C", Offset = "0xE9A91C", VA = "0xE9A91C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003247")]
		[Address(RVA = "0xE9A718", Offset = "0xE9A718", VA = "0xE9A718")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6003248")]
		[Address(RVA = "0xE9A768", Offset = "0xE9A768", VA = "0xE9A768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003249")]
		[Address(RVA = "0xE9A76C", Offset = "0xE9A76C", VA = "0xE9A76C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600324B")]
		[Address(RVA = "0xE9A8BC", Offset = "0xE9A8BC", VA = "0xE9A8BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AircraftControl _aircraftControl;

	[Token(Token = "0x6001D10")]
	[Address(RVA = "0xE9A6A8", Offset = "0xE9A6A8", VA = "0xE9A6A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E2F8", Offset = "0xB4E2F8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0xE9A744", Offset = "0xE9A744", VA = "0xE9A744")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0xE9A760", Offset = "0xE9A760", VA = "0xE9A760")]
	public FinishLine()
	{
	}
}
[Token(Token = "0x20003F9")]
public class ProximityGroundParticles : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] _particles;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.EmissionModule[] _emitters;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _emissionMultiplier;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _speedThreshold;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _activeIndex;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _intensity;

	[Token(Token = "0x6001D13")]
	[Address(RVA = "0xC559A4", Offset = "0xC559A4", VA = "0xC559A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0xC55AE8", Offset = "0xC55AE8", VA = "0xC55AE8")]
	public void SetActiveEmitter(int index)
	{
	}

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0xC55D04", Offset = "0xC55D04", VA = "0xC55D04")]
	public void SetIntensity(float intensity, float threshold)
	{
	}

	[Token(Token = "0x6001D16")]
	[Address(RVA = "0xC55C2C", Offset = "0xC55C2C", VA = "0xC55C2C")]
	private void UpdateIntensity()
	{
	}

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0xC55D2C", Offset = "0xC55D2C", VA = "0xC55D2C")]
	public ProximityGroundParticles()
	{
	}
}
[Token(Token = "0x20003FA")]
public class TempSelectMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _gazeTF;

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0xCB0DA4", Offset = "0xCB0DA4", VA = "0xCB0DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0xCB0E0C", Offset = "0xCB0E0C", VA = "0xCB0E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0xCB0E10", Offset = "0xCB0E10", VA = "0xCB0E10")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0xCB0FC4", Offset = "0xCB0FC4", VA = "0xCB0FC4")]
	public TempSelectMenu()
	{
	}
}
[Token(Token = "0x20003FB")]
public class WingSuitControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh _debugSpeed;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh _debugAltitude;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _hudHorizonAngleTF;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hudStallWarning;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hudThermalWarning;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform launchPivotTF;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh launchCountTM;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject pauseMenuGO;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem windStreaksPS;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject lookToStartGO;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform seaLevel;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _rootTF;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _pitchTF;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _rollTF;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _cameraTF;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform _gazeTF;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _startPos;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 _startLEA;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform _pitchActuatorTF;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _pitch;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _speed;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _drop;

	[Token(Token = "0x400193D")]
	private const float _STALLSPEED = 8f;

	[Token(Token = "0x400193E")]
	private const float _STALLDROP = 18f;

	[Token(Token = "0x400193F")]
	private const float _MINSINKSPEED = 18f;

	[Token(Token = "0x4001940")]
	private const float _MINSINKDROP = 5.7f;

	[Token(Token = "0x4001941")]
	private const float _MAXSPEED = 42f;

	[Token(Token = "0x4001942")]
	private const float _MAXDROP = 15.5f;

	[Token(Token = "0x4001943")]
	private const float _MAXDOWNWARDACCELERATION = 5f;

	[Token(Token = "0x4001944")]
	private const float _MAXUPWARDDECELERATION = 4f;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool _inThermal;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _thermalLift;

	[Token(Token = "0x4001947")]
	private const float _MAXTHERMALLIFT = 5.2f;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _preLaunch;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _lookToStartDirection;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _launchCountDown;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool _launching;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _launchCount;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject _HUDgroup;

	[Token(Token = "0x400194E")]
	private const float _DEADZONE = 2f;

	[Token(Token = "0x400194F")]
	private const float _ROTSPEED_MAX = 70f;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _controllerEnabled;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _joystickSensitivity;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _backButtonTime;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool _pauseMenuActive;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ParticleSystem.EmissionModule _windStreaksPSEM;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject pathMarker;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool enablePathMarkers;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float _pathMarkerCountdown;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float _startTime;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _goalText;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _crosshair;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject _fadeToBlack;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject _courseCompletedManager;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject _splashdownText;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _splashdown;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform _viewRestrictorTF;

	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0x13A5AAC", Offset = "0x13A5AAC", VA = "0x13A5AAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0x13A5DF4", Offset = "0x13A5DF4", VA = "0x13A5DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D1E")]
	[Address(RVA = "0x13A5F24", Offset = "0x13A5F24", VA = "0x13A5F24")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0x13A7520", Offset = "0x13A7520", VA = "0x13A7520")]
	public void SetInThermal(bool inThermal)
	{
	}

	[Token(Token = "0x6001D20")]
	[Address(RVA = "0x13A752C", Offset = "0x13A752C", VA = "0x13A752C")]
	public void Restart()
	{
	}

	[Token(Token = "0x6001D21")]
	[Address(RVA = "0x13A793C", Offset = "0x13A793C", VA = "0x13A793C")]
	public void GoalReached()
	{
	}

	[Token(Token = "0x6001D22")]
	[Address(RVA = "0x13A73A0", Offset = "0x13A73A0", VA = "0x13A73A0")]
	private void Splashdown()
	{
	}

	[Token(Token = "0x6001D23")]
	[Address(RVA = "0x13A7AAC", Offset = "0x13A7AAC", VA = "0x13A7AAC")]
	public float ReturnSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6001D24")]
	[Address(RVA = "0x13A7AC0", Offset = "0x13A7AC0", VA = "0x13A7AC0")]
	public float ReturnAltitude()
	{
		return default(float);
	}

	[Token(Token = "0x6001D25")]
	[Address(RVA = "0x13A7AE8", Offset = "0x13A7AE8", VA = "0x13A7AE8")]
	public bool HasLaunched()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D26")]
	[Address(RVA = "0x13A7B08", Offset = "0x13A7B08", VA = "0x13A7B08")]
	public WingSuitControl()
	{
	}
}
[Token(Token = "0x20003FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB332CC", Offset = "0xB332CC")]
public class AnimationMixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000854")]
	public delegate PoolableAnim AnimationSupplier();

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableGraph playableGraph;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimationMixerPlayable mixerPlayable;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timer;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _transitioning;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _nextTimer;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _testIndex;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationSupplier _clipSupplier;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _initialised;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool primaryInputActive;

	[Token(Token = "0x4001969")]
	private const float Transition_Time = 1f;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _fader;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _fadeOutTime;

	[Token(Token = "0x400196C")]
	private const float Fade_Time = 0.25f;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _paused;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _initLocalPos;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion _initLocalRot;

	[Token(Token = "0x17000250")]
	public int CurrentInput
	{
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xE6A790", Offset = "0xE6A790", VA = "0xE6A790")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000251")]
	public int NextInput
	{
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xE6A79C", Offset = "0xE6A79C", VA = "0xE6A79C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001D29")]
	[Address(RVA = "0xE6A7A4", Offset = "0xE6A7A4", VA = "0xE6A7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0xE6A800", Offset = "0xE6A800", VA = "0xE6A800")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D2B")]
	[Address(RVA = "0xE6AA54", Offset = "0xE6AA54", VA = "0xE6AA54")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001D2C")]
	[Address(RVA = "0xE6ACA8", Offset = "0xE6ACA8", VA = "0xE6ACA8")]
	public void Initialise(PoolableAnim current, AnimationSupplier supplier)
	{
	}

	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0xE6A968", Offset = "0xE6A968", VA = "0xE6A968")]
	public void SetNextAnim()
	{
	}

	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0xE6B0B8", Offset = "0xE6B0B8", VA = "0xE6B0B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0xE6B0BC", Offset = "0xE6B0BC", VA = "0xE6B0BC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6001D30")]
	[Address(RVA = "0xE6B164", Offset = "0xE6B164", VA = "0xE6B164")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001D31")]
	[Address(RVA = "0xE6B234", Offset = "0xE6B234", VA = "0xE6B234")]
	public AnimationMixer()
	{
	}
}
[Token(Token = "0x20003FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33330", Offset = "0xB33330")]
public class AnimationMixerDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip clip0;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip clip1;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E294", Offset = "0xB3E294")]
	public float weight;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableGraph playableGraph;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationMixerPlayable mixerPlayable;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool enable;

	[Token(Token = "0x6001D32")]
	[Address(RVA = "0xE6B298", Offset = "0xE6B298", VA = "0xE6B298")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D33")]
	[Address(RVA = "0xE6B484", Offset = "0xE6B484", VA = "0xE6B484")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D34")]
	[Address(RVA = "0xE6B598", Offset = "0xE6B598", VA = "0xE6B598")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D35")]
	[Address(RVA = "0xE6B5A4", Offset = "0xE6B5A4", VA = "0xE6B5A4")]
	public AnimationMixerDemo()
	{
	}
}
[Token(Token = "0x20003FE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB33394", Offset = "0xB33394")]
public class AnimationPool : ScriptableObject
{
	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E2AC", Offset = "0xB3E2AC")]
	public float poolWeight;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PoolableAnim> animations;

	[Token(Token = "0x6001D36")]
	[Address(RVA = "0xE6B5B4", Offset = "0xE6B5B4", VA = "0xE6B5B4")]
	public AnimationPool()
	{
	}
}
[Serializable]
[Token(Token = "0x20003FF")]
public class PoolableAnim
{
	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationClip clip;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E2C4", Offset = "0xB3E2C4")]
	public float frequency;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x6001D37")]
	[Address(RVA = "0xC531A0", Offset = "0xC531A0", VA = "0xC531A0")]
	public PoolableAnim CloneWithFreq(float freq)
	{
		return null;
	}

	[Token(Token = "0x6001D38")]
	[Address(RVA = "0xC53230", Offset = "0xC53230", VA = "0xC53230")]
	public PoolableAnim()
	{
	}
}
[Token(Token = "0x2000400")]
public class RichIdle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000855")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352F8", Offset = "0xB352F8")]
	private sealed class <AddChickenAfterDelay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40030A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40030A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40030A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RichIdle <>4__this;

		[Token(Token = "0x17000513")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003254")]
			[Address(RVA = "0xBEA06C", Offset = "0xBEA06C", VA = "0xBEA06C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000514")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003256")]
			[Address(RVA = "0xBEA0D4", Offset = "0xBEA0D4", VA = "0xBEA0D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003251")]
		[Address(RVA = "0xBE9ED0", Offset = "0xBE9ED0", VA = "0xBE9ED0")]
		[DebuggerHidden]
		public <AddChickenAfterDelay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6003252")]
		[Address(RVA = "0xBE9F84", Offset = "0xBE9F84", VA = "0xBE9F84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003253")]
		[Address(RVA = "0xBE9F88", Offset = "0xBE9F88", VA = "0xBE9F88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003255")]
		[Address(RVA = "0xBEA074", Offset = "0xBEA074", VA = "0xBEA074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationMixer animMixer;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E2DC", Offset = "0xB3E2DC")]
	public AnimationPool idleBasic;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationPool idleFlair;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationPool reactions;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationPool stepFeign;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationPool stretching;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationPool cold;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationPool coldFire;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationPool chicken;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E314", Offset = "0xB3E314")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E314", Offset = "0xB3E314")]
	public float reactionFreq;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E368", Offset = "0xB3E368")]
	public float stepFeignFreq;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E380", Offset = "0xB3E380")]
	public float stretchingFreq;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Location location;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationSelector _idleSelector;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationSelector _reactionSelector;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine _chickenCountdown;

	[Token(Token = "0x6001D39")]
	[Address(RVA = "0xBE9990", Offset = "0xBE9990", VA = "0xBE9990")]
	public void Start()
	{
	}

	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0xBE9DE8", Offset = "0xBE9DE8", VA = "0xBE9DE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0xBE9D78", Offset = "0xBE9D78", VA = "0xBE9D78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E35C", Offset = "0xB4E35C")]
	private IEnumerator AddChickenAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0xBE9BC0", Offset = "0xBE9BC0", VA = "0xBE9BC0")]
	private void AddColdIfNeeded()
	{
	}

	[Token(Token = "0x6001D3D")]
	[Address(RVA = "0xBE9D28", Offset = "0xBE9D28", VA = "0xBE9D28")]
	private void AddStrechesIfNeeded()
	{
	}

	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0xBE9EFC", Offset = "0xBE9EFC", VA = "0xBE9EFC")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0xBE9F48", Offset = "0xBE9F48", VA = "0xBE9F48")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0xBE9F64", Offset = "0xBE9F64", VA = "0xBE9F64")]
	public RichIdle()
	{
	}
}
[Token(Token = "0x2000401")]
internal class AnimationSelector
{
	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<PoolableAnim> anims;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _lastSelected;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float totalFreq;

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0xE6B5C4", Offset = "0xE6B5C4", VA = "0xE6B5C4")]
	public void AddAnimations(List<PoolableAnim> toAdd, float weight)
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0xE6B6D0", Offset = "0xE6B6D0", VA = "0xE6B6D0")]
	public PoolableAnim SelectAnim()
	{
		return null;
	}

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0xE6B7F0", Offset = "0xE6B7F0", VA = "0xE6B7F0")]
	public AnimationSelector()
	{
	}
}
[Token(Token = "0x2000402")]
public enum Location
{
	[Token(Token = "0x400198F")]
	Lobby,
	[Token(Token = "0x4001990")]
	Platform,
	[Token(Token = "0x4001991")]
	Basecamp
}
[Token(Token = "0x2000403")]
[ExecuteInEditMode]
public class TreeMeshCombiner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int childCount;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _outputPrefix;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool go;

	[Token(Token = "0x6001D44")]
	[Address(RVA = "0xCB63A4", Offset = "0xCB63A4", VA = "0xCB63A4")]
	public TreeMeshCombiner()
	{
	}
}
namespace WeatherSystem
{
	[Token(Token = "0x2000404")]
	public class WeatherManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000856")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35308", Offset = "0xB35308")]
		private sealed class <InitWeather>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeatherManager <>4__this;

			[Token(Token = "0x40030AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float intensity;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600325A")]
				[Address(RVA = "0x13A5400", Offset = "0x13A5400", VA = "0x13A5400", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600325C")]
				[Address(RVA = "0x13A5468", Offset = "0x13A5468", VA = "0x13A5468", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003257")]
			[Address(RVA = "0x13A4F40", Offset = "0x13A4F40", VA = "0x13A4F40")]
			[DebuggerHidden]
			public <InitWeather>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003258")]
			[Address(RVA = "0x13A537C", Offset = "0x13A537C", VA = "0x13A537C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003259")]
			[Address(RVA = "0x13A5380", Offset = "0x13A5380", VA = "0x13A5380", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600325B")]
			[Address(RVA = "0x13A5408", Offset = "0x13A5408", VA = "0x13A5408", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static WeatherManager _instance;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transformParent;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public WeatherType weatherType;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _intensity;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool initialized;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E3E8", Offset = "0xB3E3E8")]
		[SerializeField]
		private RainEffectsHandler _rainEffects;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RainIntensity rainIntensity;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float rainLevel;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E434", Offset = "0xB3E434")]
		[SerializeField]
		private SnowEffectsHandler _snowEffects;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SnowIntensity _snowIntensity;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E490", Offset = "0xB3E490")]
		[SerializeField]
		private FogIntensity _fogIntensity;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _basecampAudioActive;

		[Token(Token = "0x17000252")]
		public static WeatherManager Instance
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x13A3284", Offset = "0x13A3284", VA = "0x13A3284")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x13A4A80", Offset = "0x13A4A80", VA = "0x13A4A80")]
			private set
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public static event Action EnableBasecampAudio
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x13A2D64", Offset = "0x13A2D64", VA = "0x13A2D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E3C0", Offset = "0xB4E3C0")]
			add
			{
			}
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x13A2F74", Offset = "0x13A2F74", VA = "0x13A2F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E3D0", Offset = "0xB4E3D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B1")]
		public static event Action DisableBasecampAudio
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x13A2E18", Offset = "0x13A2E18", VA = "0x13A2E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E3E0", Offset = "0xB4E3E0")]
			add
			{
			}
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x13A4858", Offset = "0x13A4858", VA = "0x13A4858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E3F0", Offset = "0xB4E3F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public static event Action<WeatherAudioLevel> UpdateAudioLevel
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x13A4910", Offset = "0x13A4910", VA = "0x13A4910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E400", Offset = "0xB4E400")]
			add
			{
			}
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x13A49C8", Offset = "0x13A49C8", VA = "0x13A49C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E410", Offset = "0xB4E410")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x13A4AD4", Offset = "0x13A4AD4", VA = "0x13A4AD4")]
		public void DefaultAudioLevel()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x13A3FE0", Offset = "0x13A3FE0", VA = "0x13A3FE0")]
		public void SetAudioLevel(WeatherAudioLevel newAudioLevel)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x13A4B98", Offset = "0x13A4B98", VA = "0x13A4B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x13A4C14", Offset = "0x13A4C14", VA = "0x13A4C14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x13A4C90", Offset = "0x13A4C90", VA = "0x13A4C90")]
		private void AttachEffects(Transform cameraTransform, Transform parentTransform)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x13A4E5C", Offset = "0x13A4E5C", VA = "0x13A4E5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4E420", Offset = "0xB4E420")]
		private void Init()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x13A4E8C", Offset = "0x13A4E8C", VA = "0x13A4E8C")]
		public void Initialize(WeatherType weatherType, float intensity)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x13A4EC0", Offset = "0x13A4EC0", VA = "0x13A4EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E458", Offset = "0xB4E458")]
		private IEnumerator InitWeather(float intensity)
		{
			return null;
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x13A4F6C", Offset = "0x13A4F6C", VA = "0x13A4F6C")]
		public void UpdateIntensity(float intensity)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x13A4F7C", Offset = "0x13A4F7C", VA = "0x13A4F7C")]
		private void SetIntensity(float intensity)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x13A508C", Offset = "0x13A508C", VA = "0x13A508C")]
		private void Rain(float intensity)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x13A5178", Offset = "0x13A5178", VA = "0x13A5178")]
		private void Snow(float intensity)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x13A525C", Offset = "0x13A525C", VA = "0x13A525C")]
		private void Fog(FogIntensity intensity)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x13A52A8", Offset = "0x13A52A8", VA = "0x13A52A8")]
		public void ToggleBasecampAudio(bool enable)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x13A5374", Offset = "0x13A5374", VA = "0x13A5374")]
		public WeatherManager()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public enum RainIntensity
	{
		[Token(Token = "0x40019A5")]
		None,
		[Token(Token = "0x40019A6")]
		Sprinkle,
		[Token(Token = "0x40019A7")]
		Light,
		[Token(Token = "0x40019A8")]
		Heavy
	}
	[Token(Token = "0x2000406")]
	public enum WeatherAudioLevel
	{
		[Token(Token = "0x40019AA")]
		Cruising = -5,
		[Token(Token = "0x40019AB")]
		Launching = -3,
		[Token(Token = "0x40019AC")]
		Light = -2,
		[Token(Token = "0x40019AD")]
		Medium = 0,
		[Token(Token = "0x40019AE")]
		Heavy = 5
	}
	[Token(Token = "0x2000407")]
	public enum SnowIntensity
	{
		[Token(Token = "0x40019B0")]
		None,
		[Token(Token = "0x40019B1")]
		Light,
		[Token(Token = "0x40019B2")]
		Heavy
	}
	[Token(Token = "0x2000408")]
	public enum FogIntensity
	{
		[Token(Token = "0x40019B4")]
		None,
		[Token(Token = "0x40019B5")]
		Light,
		[Token(Token = "0x40019B6")]
		Heavy
	}
}
namespace WeatherSystem.SnowEffects
{
	[Token(Token = "0x2000409")]
	public class SnowEffectsHandler : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem snow;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem snowStatic;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem snowDynamic;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.EmissionModule _emissionModule;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.VelocityOverLifetimeModule _velocityModule;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SnowIntensity currentIntensity;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] snowIntensityLevels;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool init;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _intensity;

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x13A4380", Offset = "0x13A4380", VA = "0x13A4380")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4E4BC", Offset = "0xB4E4BC")]
		public void Init(float intensity)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x13A44E8", Offset = "0x13A44E8", VA = "0x13A44E8")]
		public void UpdateIntensity(float newIntensity)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x13A4690", Offset = "0x13A4690", VA = "0x13A4690")]
		private void SetIntensity(SnowIntensity intensity)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x13A4720", Offset = "0x13A4720", VA = "0x13A4720")]
		public void Attach(Transform parent, Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x13A47B8", Offset = "0x13A47B8", VA = "0x13A47B8")]
		public SnowEffectsHandler()
		{
		}
	}
}
namespace WeatherSystem.RainEffects
{
	[Token(Token = "0x200040A")]
	public class RainEffectsHandler : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem rain;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem mist;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem staticRain;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem dynamicRain;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem dynamicMist;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.MainModule _mainModule;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.EmissionModule _emissionModule;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem.VelocityOverLifetimeModule _velocityModule;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RainIntensity currentIntensity;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public WeatherAudioLevel audioLevel;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rainLevel;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] rainIntensityLevels;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] rainGoggleLevels;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WeatherAudioLevel[] rainAudioLevels;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int maxRate;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int maxParticles;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource rainSource;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioSource secondaryRainSource;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource windSource;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioSource basecampSource;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool init;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public RainIntensity debugIntensity;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x13A2CC0", Offset = "0x13A2CC0", VA = "0x13A2CC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x13A2ED0", Offset = "0x13A2ED0", VA = "0x13A2ED0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x13A3028", Offset = "0x13A3028", VA = "0x13A3028")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4E4F4", Offset = "0xB4E4F4")]
		public void Init(float intensity)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x13A35F0", Offset = "0x13A35F0", VA = "0x13A35F0")]
		private void SetIntensity(RainIntensity intensity)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x13A3934", Offset = "0x13A3934", VA = "0x13A3934")]
		private ParticleSystem.MinMaxCurve SetMinMax(float min, float max, ParticleSystem.MinMaxCurve minMax)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x13A3E60", Offset = "0x13A3E60", VA = "0x13A3E60")]
		private void SetIntensityOld(RainIntensity intensity)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x13A33D0", Offset = "0x13A33D0", VA = "0x13A33D0")]
		public void UpdateIntensity(float newIntensity)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x13A3984", Offset = "0x13A3984", VA = "0x13A3984")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x13A4050", Offset = "0x13A4050", VA = "0x13A4050")]
		private void EnableBasecampAudio()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x13A4200", Offset = "0x13A4200", VA = "0x13A4200")]
		private void DisableBasecampAudio()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x13A33B4", Offset = "0x13A33B4", VA = "0x13A33B4")]
		public void Attach(Transform parent, Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x13A4294", Offset = "0x13A4294", VA = "0x13A4294")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4E52C", Offset = "0xB4E52C")]
		private void SetToDebugLevel()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x13A429C", Offset = "0x13A429C", VA = "0x13A429C")]
		public RainEffectsHandler()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x200040B")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xBDB0FC", Offset = "0xBDB0FC", VA = "0xBDB0FC")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xBDB178", Offset = "0xBDB178", VA = "0xBDB178")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xBDB64C", Offset = "0xBDB64C", VA = "0xBDB64C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xBDB760", Offset = "0xBDB760", VA = "0xBDB760")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x200040C")]
	public class MainThreadDispatcher : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000857")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35318", Offset = "0xB35318")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40030AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x40030AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x600325D")]
			[Address(RVA = "0xF6A624", Offset = "0xF6A624", VA = "0xF6A624")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600325E")]
			[Address(RVA = "0xF6A778", Offset = "0xF6A778", VA = "0xF6A778")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35328", Offset = "0xB35328")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003262")]
				[Address(RVA = "0xF6A804", Offset = "0xF6A804", VA = "0xF6A804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003264")]
				[Address(RVA = "0xF6A86C", Offset = "0xF6A86C", VA = "0xF6A86C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600325F")]
			[Address(RVA = "0xF6A6C4", Offset = "0xF6A6C4", VA = "0xF6A6C4")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003260")]
			[Address(RVA = "0xF6A79C", Offset = "0xF6A79C", VA = "0xF6A79C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003261")]
			[Address(RVA = "0xF6A7A0", Offset = "0xF6A7A0", VA = "0xF6A7A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003263")]
			[Address(RVA = "0xF6A80C", Offset = "0xF6A80C", VA = "0xF6A80C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000859")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35338", Offset = "0xB35338")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40030B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x40030B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003268")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600326A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003265")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003266")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003267")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003269")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200085A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35348", Offset = "0xB35348")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40030B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x40030B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40030B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700051B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600326E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003270")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600326B")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600326C")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600326D")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600326F")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200085B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35358", Offset = "0xB35358")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40030BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x40030BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40030BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40030BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003274")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003276")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003271")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003272")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003273")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003275")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200085C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35368", Offset = "0xB35368")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40030C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x40030C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x40030C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x40030C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x40030C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600327A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600327C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003277")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003278")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003279")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600327B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xF6A0C8", Offset = "0xF6A0C8", VA = "0xF6A0C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xF6A1DC", Offset = "0xF6A1DC", VA = "0xF6A1DC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xF6A344", Offset = "0xF6A344", VA = "0xF6A344")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xF6A444", Offset = "0xF6A444", VA = "0xF6A444")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xF6A4AC", Offset = "0xF6A4AC", VA = "0xF6A4AC")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xF6A62C", Offset = "0xF6A62C", VA = "0xF6A62C")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001D79")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001D7A")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001D7B")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6001D7C")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xF6A654", Offset = "0xF6A654", VA = "0xF6A654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E564", Offset = "0xB4E564")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001D7E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E5C8", Offset = "0xB4E5C8")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6001D7F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E62C", Offset = "0xB4E62C")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6001D80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E690", Offset = "0xB4E690")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6001D81")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4E6F4", Offset = "0xB4E6F4")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xF6A6F0", Offset = "0xF6A6F0", VA = "0xF6A6F0")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public enum Locale
	{
		[Token(Token = "0x40019DA")]
		US,
		[Token(Token = "0x40019DB")]
		DE,
		[Token(Token = "0x40019DC")]
		JP,
		[Token(Token = "0x40019DD")]
		KR,
		[Token(Token = "0x40019DE")]
		RU,
		[Token(Token = "0x40019DF")]
		CN,
		[Token(Token = "0x40019E0")]
		TW,
		[Token(Token = "0x40019E1")]
		FR
	}
	[Token(Token = "0x200040E")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x200040F")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000410")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000411")]
	public class Leaderboard
	{
		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E51C", Offset = "0xB3E51C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E52C", Offset = "0xB3E52C")]
		private int <Score>k__BackingField;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E53C", Offset = "0xB3E53C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000253")]
		public int Rank
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xF6A098", Offset = "0xF6A098", VA = "0xF6A098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E758", Offset = "0xB4E758")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xF6A0A0", Offset = "0xF6A0A0", VA = "0xF6A0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E768", Offset = "0xB4E768")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public int Score
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xF6A0A8", Offset = "0xF6A0A8", VA = "0xF6A0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E778", Offset = "0xB4E778")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xF6A0B0", Offset = "0xF6A0B0", VA = "0xF6A0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E788", Offset = "0xB4E788")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public string UserName
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xF6A0B8", Offset = "0xF6A0B8", VA = "0xF6A0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E798", Offset = "0xB4E798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xF6A0C0", Offset = "0xF6A0C0", VA = "0xF6A0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4E7A8", Offset = "0xB4E7A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xF69D94", Offset = "0xF69D94", VA = "0xF69D94")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class Api
	{
		[Token(Token = "0x200085D")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x600327D")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x600327E")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600327F")]
			[Address(RVA = "0xF5F6D8", Offset = "0xF5F6D8", VA = "0xF5F6D8")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xF5EA24", Offset = "0xF5EA24", VA = "0xF5EA24")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xF5E934", Offset = "0xF5E934", VA = "0xF5E934")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4E7B8", Offset = "0xB4E7B8")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xF5EEEC", Offset = "0xF5EEEC", VA = "0xF5EEEC")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xF5E9AC", Offset = "0xF5E9AC", VA = "0xF5E9AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4E81C", Offset = "0xB4E81C")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xF5F1A8", Offset = "0xF5F1A8", VA = "0xF5F1A8")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xF5F3DC", Offset = "0xF5F3DC", VA = "0xF5F3DC")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xF5F56C", Offset = "0xF5F56C", VA = "0xF5F56C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class User
	{
		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xF6B1F4", Offset = "0xF6B1F4", VA = "0xF6B1F4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4E880", Offset = "0xB4E880")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xF6B254", Offset = "0xF6B254", VA = "0xF6B254")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xF6B39C", Offset = "0xF6B39C", VA = "0xF6B39C")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xF6B3C0", Offset = "0xF6B3C0", VA = "0xF6B3C0")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xF6B3E4", Offset = "0xF6B3E4", VA = "0xF6B3E4")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xF6B408", Offset = "0xF6B408", VA = "0xF6B408")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class UserStats
	{
		[Token(Token = "0x200085E")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x40030C8")]
			GlobalData,
			[Token(Token = "0x40030C9")]
			GlobalDataAroundUser,
			[Token(Token = "0x40030CA")]
			LocalData,
			[Token(Token = "0x40030CB")]
			LocalDataAroundUser
		}

		[Token(Token = "0x200085F")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x40030CD")]
			AllTime,
			[Token(Token = "0x40030CE")]
			Daily,
			[Token(Token = "0x40030CF")]
			Weekly,
			[Token(Token = "0x40030D0")]
			Monthly
		}

		[Token(Token = "0x2000860")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x40030D2")]
			None,
			[Token(Token = "0x40030D3")]
			Ascending,
			[Token(Token = "0x40030D4")]
			Descending
		}

		[Token(Token = "0x2000861")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x40030D6")]
			None,
			[Token(Token = "0x40030D7")]
			Numeric,
			[Token(Token = "0x40030D8")]
			TimeSeconds,
			[Token(Token = "0x40030D9")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000862")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x40030DB")]
			None,
			[Token(Token = "0x40030DC")]
			KeepBest,
			[Token(Token = "0x40030DD")]
			ForceUpdate
		}

		[Token(Token = "0x2000863")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x40030DF")]
			Name,
			[Token(Token = "0x40030E0")]
			Desc,
			[Token(Token = "0x40030E1")]
			Hidden
		}

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xF6B410", Offset = "0xF6B410", VA = "0xF6B410")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4E8E4", Offset = "0xB4E8E4")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xF6B5F0", Offset = "0xF6B5F0", VA = "0xF6B5F0")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xF6B470", Offset = "0xF6B470", VA = "0xF6B470")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4E948", Offset = "0xB4E948")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xF6B738", Offset = "0xF6B738", VA = "0xF6B738")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xF6B880", Offset = "0xF6B880", VA = "0xF6B880")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xF6B884", Offset = "0xF6B884", VA = "0xF6B884")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xF6B888", Offset = "0xF6B888", VA = "0xF6B888")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xF6B88C", Offset = "0xF6B88C", VA = "0xF6B88C")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xF6B4D0", Offset = "0xF6B4D0", VA = "0xF6B4D0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4E9AC", Offset = "0xB4E9AC")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xF6B890", Offset = "0xF6B890", VA = "0xF6B890")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xF6B9D8", Offset = "0xF6B9D8", VA = "0xF6B9D8")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xF6B9DC", Offset = "0xF6B9DC", VA = "0xF6B9DC")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xF6B9E0", Offset = "0xF6B9E0", VA = "0xF6B9E0")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xF6B9E4", Offset = "0xF6B9E4", VA = "0xF6B9E4")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xF6B9E8", Offset = "0xF6B9E8", VA = "0xF6B9E8")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xF6B9EC", Offset = "0xF6B9EC", VA = "0xF6B9EC")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xF6B9F0", Offset = "0xF6B9F0", VA = "0xF6B9F0")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xF6B530", Offset = "0xF6B530", VA = "0xF6B530")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EA10", Offset = "0xB4EA10")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xF6B9F4", Offset = "0xF6B9F4", VA = "0xF6B9F4")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xF6B590", Offset = "0xF6B590", VA = "0xF6B590")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EA74", Offset = "0xB4EA74")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xF6BB74", Offset = "0xF6BB74", VA = "0xF6BB74")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xF6BCD4", Offset = "0xF6BCD4", VA = "0xF6BCD4")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xF6BCD8", Offset = "0xF6BCD8", VA = "0xF6BCD8")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xF6BCDC", Offset = "0xF6BCDC", VA = "0xF6BCDC")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xF6BCE0", Offset = "0xF6BCE0", VA = "0xF6BCE0")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xF6BCE4", Offset = "0xF6BCE4", VA = "0xF6BCE4")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xF5F6E8", Offset = "0xF5F6E8", VA = "0xF5F6E8")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class IAPurchase
	{
		[Token(Token = "0x2000864")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x40030E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6003280")]
			[Address(RVA = "0xF605C8", Offset = "0xF605C8", VA = "0xF605C8")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6003281")]
			[Address(RVA = "0xF60634", Offset = "0xF60634", VA = "0xF60634")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6003282")]
			[Address(RVA = "0xF623D0", Offset = "0xF623D0", VA = "0xF623D0", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003283")]
			[Address(RVA = "0xF608B4", Offset = "0xF608B4", VA = "0xF608B4")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6003284")]
			[Address(RVA = "0xF628A0", Offset = "0xF628A0", VA = "0xF628A0", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003285")]
			[Address(RVA = "0xF60D5C", Offset = "0xF60D5C", VA = "0xF60D5C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6003286")]
			[Address(RVA = "0xF62D70", Offset = "0xF62D70", VA = "0xF62D70", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003287")]
			[Address(RVA = "0xF60FCC", Offset = "0xF60FCC", VA = "0xF60FCC")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6003288")]
			[Address(RVA = "0xF63358", Offset = "0xF63358", VA = "0xF63358", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003289")]
			[Address(RVA = "0xF6122C", Offset = "0xF6122C", VA = "0xF6122C")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x600328A")]
			[Address(RVA = "0xF63C44", Offset = "0xF63C44", VA = "0xF63C44", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600328B")]
			[Address(RVA = "0xF61458", Offset = "0xF61458", VA = "0xF61458")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x600328C")]
			[Address(RVA = "0xF64AAC", Offset = "0xF64AAC", VA = "0xF64AAC", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x600328D")]
			[Address(RVA = "0xF616DC", Offset = "0xF616DC", VA = "0xF616DC")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600328E")]
			[Address(RVA = "0xF65098", Offset = "0xF65098", VA = "0xF65098", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600328F")]
			[Address(RVA = "0xF61AB8", Offset = "0xF61AB8", VA = "0xF61AB8")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6003290")]
			[Address(RVA = "0xF65550", Offset = "0xF65550", VA = "0xF65550", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003291")]
			[Address(RVA = "0xF61D28", Offset = "0xF61D28", VA = "0xF61D28")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6003292")]
			[Address(RVA = "0xF65A08", Offset = "0xF65A08", VA = "0xF65A08", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003293")]
			[Address(RVA = "0xF61F98", Offset = "0xF61F98", VA = "0xF61F98")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6003294")]
			[Address(RVA = "0xF66098", Offset = "0xF66098", VA = "0xF66098", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6003295")]
			[Address(RVA = "0xF62208", Offset = "0xF62208", VA = "0xF62208")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6003296")]
			[Address(RVA = "0xF6656C", Offset = "0xF6656C", VA = "0xF6656C", Slot = "14")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000865")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6003297")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6003298")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6003299")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x600329A")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x600329B")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x600329C")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x600329D")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x600329E")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x600329F")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60032A0")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60032A1")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60032A2")]
			[Address(RVA = "0xF623C8", Offset = "0xF623C8", VA = "0xF623C8")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000866")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60032A3")]
			[Address(RVA = "0xF66970", Offset = "0xF66970", VA = "0xF66970", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60032A4")]
			[Address(RVA = "0xF66974", Offset = "0xF66974", VA = "0xF66974", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0xF66978", Offset = "0xF66978", VA = "0xF66978", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60032A6")]
			[Address(RVA = "0xF6697C", Offset = "0xF6697C", VA = "0xF6697C", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60032A7")]
			[Address(RVA = "0xF66980", Offset = "0xF66980", VA = "0xF66980", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60032A8")]
			[Address(RVA = "0xF66984", Offset = "0xF66984", VA = "0xF66984", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60032A9")]
			[Address(RVA = "0xF66988", Offset = "0xF66988", VA = "0xF66988", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60032AA")]
			[Address(RVA = "0xF6698C", Offset = "0xF6698C", VA = "0xF6698C", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60032AB")]
			[Address(RVA = "0xF66990", Offset = "0xF66990", VA = "0xF66990", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0xF66994", Offset = "0xF66994", VA = "0xF66994", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60032AD")]
			[Address(RVA = "0xF66998", Offset = "0xF66998", VA = "0xF66998", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60032AE")]
			[Address(RVA = "0xF6699C", Offset = "0xF6699C", VA = "0xF6699C", Slot = "15")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60032AF")]
			[Address(RVA = "0xF669A0", Offset = "0xF669A0", VA = "0xF669A0")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000867")]
		public class QueryResponse
		{
			[Token(Token = "0x40030E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42438", Offset = "0xB42438")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40030E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42448", Offset = "0xB42448")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40030E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42458", Offset = "0xB42458")]
			private string <status>k__BackingField;

			[Token(Token = "0x40030E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42468", Offset = "0xB42468")]
			private string <price>k__BackingField;

			[Token(Token = "0x40030E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42478", Offset = "0xB42478")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40030E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42488", Offset = "0xB42488")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000521")]
			public string order_id
			{
				[Token(Token = "0x60032B0")]
				[Address(RVA = "0xF669D8", Offset = "0xF669D8", VA = "0xF669D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5459C", Offset = "0xB5459C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032B1")]
				[Address(RVA = "0xF669E0", Offset = "0xF669E0", VA = "0xF669E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB545AC", Offset = "0xB545AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000522")]
			public string purchase_id
			{
				[Token(Token = "0x60032B2")]
				[Address(RVA = "0xF669E8", Offset = "0xF669E8", VA = "0xF669E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB545BC", Offset = "0xB545BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032B3")]
				[Address(RVA = "0xF669F0", Offset = "0xF669F0", VA = "0xF669F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB545CC", Offset = "0xB545CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000523")]
			public string status
			{
				[Token(Token = "0x60032B4")]
				[Address(RVA = "0xF669F8", Offset = "0xF669F8", VA = "0xF669F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB545DC", Offset = "0xB545DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032B5")]
				[Address(RVA = "0xF66A00", Offset = "0xF66A00", VA = "0xF66A00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB545EC", Offset = "0xB545EC")]
				set
				{
				}
			}

			[Token(Token = "0x17000524")]
			public string price
			{
				[Token(Token = "0x60032B6")]
				[Address(RVA = "0xF66A08", Offset = "0xF66A08", VA = "0xF66A08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB545FC", Offset = "0xB545FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032B7")]
				[Address(RVA = "0xF66A10", Offset = "0xF66A10", VA = "0xF66A10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5460C", Offset = "0xB5460C")]
				set
				{
				}
			}

			[Token(Token = "0x17000525")]
			public string currency
			{
				[Token(Token = "0x60032B8")]
				[Address(RVA = "0xF66A18", Offset = "0xF66A18", VA = "0xF66A18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5461C", Offset = "0xB5461C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032B9")]
				[Address(RVA = "0xF66A20", Offset = "0xF66A20", VA = "0xF66A20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5462C", Offset = "0xB5462C")]
				set
				{
				}
			}

			[Token(Token = "0x17000526")]
			public long paid_timestamp
			{
				[Token(Token = "0x60032BA")]
				[Address(RVA = "0xF66A28", Offset = "0xF66A28", VA = "0xF66A28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5463C", Offset = "0xB5463C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60032BB")]
				[Address(RVA = "0xF66A30", Offset = "0xF66A30", VA = "0xF66A30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5464C", Offset = "0xB5464C")]
				set
				{
				}
			}

			[Token(Token = "0x60032BC")]
			[Address(RVA = "0xF63C3C", Offset = "0xF63C3C", VA = "0xF63C3C")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000868")]
		public class QueryResponse2
		{
			[Token(Token = "0x40030E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42498", Offset = "0xB42498")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40030EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB424A8", Offset = "0xB424A8")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40030EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB424B8", Offset = "0xB424B8")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40030EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB424C8", Offset = "0xB424C8")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x40030ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB424D8", Offset = "0xB424D8")]
			private string <price>k__BackingField;

			[Token(Token = "0x40030EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB424E8", Offset = "0xB424E8")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40030EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB424F8", Offset = "0xB424F8")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000527")]
			public string order_id
			{
				[Token(Token = "0x60032BD")]
				[Address(RVA = "0xF66A38", Offset = "0xF66A38", VA = "0xF66A38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5465C", Offset = "0xB5465C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032BE")]
				[Address(RVA = "0xF66A40", Offset = "0xF66A40", VA = "0xF66A40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5466C", Offset = "0xB5466C")]
				set
				{
				}
			}

			[Token(Token = "0x17000528")]
			public string app_id
			{
				[Token(Token = "0x60032BF")]
				[Address(RVA = "0xF66A48", Offset = "0xF66A48", VA = "0xF66A48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5467C", Offset = "0xB5467C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032C0")]
				[Address(RVA = "0xF66A50", Offset = "0xF66A50", VA = "0xF66A50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5468C", Offset = "0xB5468C")]
				set
				{
				}
			}

			[Token(Token = "0x17000529")]
			public string purchase_id
			{
				[Token(Token = "0x60032C1")]
				[Address(RVA = "0xF66A58", Offset = "0xF66A58", VA = "0xF66A58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5469C", Offset = "0xB5469C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032C2")]
				[Address(RVA = "0xF66A60", Offset = "0xF66A60", VA = "0xF66A60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB546AC", Offset = "0xB546AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700052A")]
			public string user_data
			{
				[Token(Token = "0x60032C3")]
				[Address(RVA = "0xF66A68", Offset = "0xF66A68", VA = "0xF66A68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB546BC", Offset = "0xB546BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032C4")]
				[Address(RVA = "0xF66A70", Offset = "0xF66A70", VA = "0xF66A70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB546CC", Offset = "0xB546CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700052B")]
			public string price
			{
				[Token(Token = "0x60032C5")]
				[Address(RVA = "0xF66A78", Offset = "0xF66A78", VA = "0xF66A78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB546DC", Offset = "0xB546DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032C6")]
				[Address(RVA = "0xF66A80", Offset = "0xF66A80", VA = "0xF66A80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB546EC", Offset = "0xB546EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700052C")]
			public string currency
			{
				[Token(Token = "0x60032C7")]
				[Address(RVA = "0xF66A88", Offset = "0xF66A88", VA = "0xF66A88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB546FC", Offset = "0xB546FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032C8")]
				[Address(RVA = "0xF66A90", Offset = "0xF66A90", VA = "0xF66A90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5470C", Offset = "0xB5470C")]
				set
				{
				}
			}

			[Token(Token = "0x1700052D")]
			public long paid_timestamp
			{
				[Token(Token = "0x60032C9")]
				[Address(RVA = "0xF66A98", Offset = "0xF66A98", VA = "0xF66A98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5471C", Offset = "0xB5471C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60032CA")]
				[Address(RVA = "0xF66AA0", Offset = "0xF66AA0", VA = "0xF66AA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5472C", Offset = "0xB5472C")]
				set
				{
				}
			}

			[Token(Token = "0x60032CB")]
			[Address(RVA = "0xF64A9C", Offset = "0xF64A9C", VA = "0xF64A9C")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000869")]
		public class QueryListResponse
		{
			[Token(Token = "0x40030F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42508", Offset = "0xB42508")]
			private int <total>k__BackingField;

			[Token(Token = "0x40030F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42518", Offset = "0xB42518")]
			private int <from>k__BackingField;

			[Token(Token = "0x40030F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42528", Offset = "0xB42528")]
			private int <to>k__BackingField;

			[Token(Token = "0x40030F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x1700052E")]
			public int total
			{
				[Token(Token = "0x60032CC")]
				[Address(RVA = "0xF669A8", Offset = "0xF669A8", VA = "0xF669A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5473C", Offset = "0xB5473C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032CD")]
				[Address(RVA = "0xF669B0", Offset = "0xF669B0", VA = "0xF669B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5474C", Offset = "0xB5474C")]
				set
				{
				}
			}

			[Token(Token = "0x1700052F")]
			public int from
			{
				[Token(Token = "0x60032CE")]
				[Address(RVA = "0xF669B8", Offset = "0xF669B8", VA = "0xF669B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5475C", Offset = "0xB5475C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032CF")]
				[Address(RVA = "0xF669C0", Offset = "0xF669C0", VA = "0xF669C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5476C", Offset = "0xB5476C")]
				set
				{
				}
			}

			[Token(Token = "0x17000530")]
			public int to
			{
				[Token(Token = "0x60032D0")]
				[Address(RVA = "0xF669C8", Offset = "0xF669C8", VA = "0xF669C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5477C", Offset = "0xB5477C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032D1")]
				[Address(RVA = "0xF669D0", Offset = "0xF669D0", VA = "0xF669D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5478C", Offset = "0xB5478C")]
				set
				{
				}
			}

			[Token(Token = "0x60032D2")]
			[Address(RVA = "0xF64AA4", Offset = "0xF64AA4", VA = "0xF64AA4")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x200086A")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x40030F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42538", Offset = "0xB42538")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x40030F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42548", Offset = "0xB42548")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x40030F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42558", Offset = "0xB42558")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000531")]
			public long create_time
			{
				[Token(Token = "0x60032D3")]
				[Address(RVA = "0xF66B18", Offset = "0xF66B18", VA = "0xF66B18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5479C", Offset = "0xB5479C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60032D4")]
				[Address(RVA = "0xF66B20", Offset = "0xF66B20", VA = "0xF66B20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB547AC", Offset = "0xB547AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000532")]
			public string payment_method
			{
				[Token(Token = "0x60032D5")]
				[Address(RVA = "0xF66B28", Offset = "0xF66B28", VA = "0xF66B28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB547BC", Offset = "0xB547BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032D6")]
				[Address(RVA = "0xF66B30", Offset = "0xF66B30", VA = "0xF66B30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB547CC", Offset = "0xB547CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000533")]
			public string status
			{
				[Token(Token = "0x60032D7")]
				[Address(RVA = "0xF66B38", Offset = "0xF66B38", VA = "0xF66B38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB547DC", Offset = "0xB547DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032D8")]
				[Address(RVA = "0xF66B40", Offset = "0xF66B40", VA = "0xF66B40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB547EC", Offset = "0xB547EC")]
				set
				{
				}
			}

			[Token(Token = "0x60032D9")]
			[Address(RVA = "0xF66B48", Offset = "0xF66B48", VA = "0xF66B48")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x200086B")]
		public class StatusDetail
		{
			[Token(Token = "0x40030F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42568", Offset = "0xB42568")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x40030F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42578", Offset = "0xB42578")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x40030F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42588", Offset = "0xB42588")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000534")]
			public long date_next_charge
			{
				[Token(Token = "0x60032DA")]
				[Address(RVA = "0xF66AE0", Offset = "0xF66AE0", VA = "0xF66AE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB547FC", Offset = "0xB547FC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60032DB")]
				[Address(RVA = "0xF66AE8", Offset = "0xF66AE8", VA = "0xF66AE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5480C", Offset = "0xB5480C")]
				set
				{
				}
			}

			[Token(Token = "0x17000535")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60032DC")]
				[Address(RVA = "0xF66AF0", Offset = "0xF66AF0", VA = "0xF66AF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5481C", Offset = "0xB5481C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032DD")]
				[Address(RVA = "0xF66AF8", Offset = "0xF66AF8", VA = "0xF66AF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5482C", Offset = "0xB5482C")]
				set
				{
				}
			}

			[Token(Token = "0x17000536")]
			public string cancel_reason
			{
				[Token(Token = "0x60032DE")]
				[Address(RVA = "0xF66B00", Offset = "0xF66B00", VA = "0xF66B00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5483C", Offset = "0xB5483C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032DF")]
				[Address(RVA = "0xF66B08", Offset = "0xF66B08", VA = "0xF66B08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5484C", Offset = "0xB5484C")]
				set
				{
				}
			}

			[Token(Token = "0x60032E0")]
			[Address(RVA = "0xF66B10", Offset = "0xF66B10", VA = "0xF66B10")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x200086C")]
		public class TimePeriod
		{
			[Token(Token = "0x40030FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42598", Offset = "0xB42598")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x40030FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB425A8", Offset = "0xB425A8")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000537")]
			public string time_type
			{
				[Token(Token = "0x60032E1")]
				[Address(RVA = "0xF66C28", Offset = "0xF66C28", VA = "0xF66C28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5485C", Offset = "0xB5485C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032E2")]
				[Address(RVA = "0xF66C30", Offset = "0xF66C30", VA = "0xF66C30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5486C", Offset = "0xB5486C")]
				set
				{
				}
			}

			[Token(Token = "0x17000538")]
			public int value
			{
				[Token(Token = "0x60032E3")]
				[Address(RVA = "0xF66C38", Offset = "0xF66C38", VA = "0xF66C38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5487C", Offset = "0xB5487C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032E4")]
				[Address(RVA = "0xF66C40", Offset = "0xF66C40", VA = "0xF66C40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5488C", Offset = "0xB5488C")]
				set
				{
				}
			}

			[Token(Token = "0x60032E5")]
			[Address(RVA = "0xF66C48", Offset = "0xF66C48", VA = "0xF66C48")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x200086D")]
		public class Subscription
		{
			[Token(Token = "0x40030FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB425B8", Offset = "0xB425B8")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40030FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB425C8", Offset = "0xB425C8")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40030FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB425D8", Offset = "0xB425D8")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x40030FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB425E8", Offset = "0xB425E8")]
			private string <price>k__BackingField;

			[Token(Token = "0x4003100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB425F8", Offset = "0xB425F8")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4003101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42608", Offset = "0xB42608")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4003102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42618", Offset = "0xB42618")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4003103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42628", Offset = "0xB42628")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4003104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42638", Offset = "0xB42638")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4003105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42648", Offset = "0xB42648")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4003106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42658", Offset = "0xB42658")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4003107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42668", Offset = "0xB42668")]
			private string <status>k__BackingField;

			[Token(Token = "0x4003108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42678", Offset = "0xB42678")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000539")]
			public string app_id
			{
				[Token(Token = "0x60032E6")]
				[Address(RVA = "0xF66B50", Offset = "0xF66B50", VA = "0xF66B50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5489C", Offset = "0xB5489C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032E7")]
				[Address(RVA = "0xF66B58", Offset = "0xF66B58", VA = "0xF66B58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB548AC", Offset = "0xB548AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700053A")]
			public string order_id
			{
				[Token(Token = "0x60032E8")]
				[Address(RVA = "0xF66B60", Offset = "0xF66B60", VA = "0xF66B60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB548BC", Offset = "0xB548BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032E9")]
				[Address(RVA = "0xF66B68", Offset = "0xF66B68", VA = "0xF66B68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB548CC", Offset = "0xB548CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700053B")]
			public string subscription_id
			{
				[Token(Token = "0x60032EA")]
				[Address(RVA = "0xF66B70", Offset = "0xF66B70", VA = "0xF66B70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB548DC", Offset = "0xB548DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032EB")]
				[Address(RVA = "0xF66B78", Offset = "0xF66B78", VA = "0xF66B78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB548EC", Offset = "0xB548EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700053C")]
			public string price
			{
				[Token(Token = "0x60032EC")]
				[Address(RVA = "0xF66B80", Offset = "0xF66B80", VA = "0xF66B80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB548FC", Offset = "0xB548FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032ED")]
				[Address(RVA = "0xF66B88", Offset = "0xF66B88", VA = "0xF66B88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5490C", Offset = "0xB5490C")]
				set
				{
				}
			}

			[Token(Token = "0x1700053D")]
			public string currency
			{
				[Token(Token = "0x60032EE")]
				[Address(RVA = "0xF66B90", Offset = "0xF66B90", VA = "0xF66B90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5491C", Offset = "0xB5491C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032EF")]
				[Address(RVA = "0xF66B98", Offset = "0xF66B98", VA = "0xF66B98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5492C", Offset = "0xB5492C")]
				set
				{
				}
			}

			[Token(Token = "0x1700053E")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x60032F0")]
				[Address(RVA = "0xF66BA0", Offset = "0xF66BA0", VA = "0xF66BA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5493C", Offset = "0xB5493C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60032F1")]
				[Address(RVA = "0xF66BA8", Offset = "0xF66BA8", VA = "0xF66BA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5494C", Offset = "0xB5494C")]
				set
				{
				}
			}

			[Token(Token = "0x1700053F")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x60032F2")]
				[Address(RVA = "0xF66BB0", Offset = "0xF66BB0", VA = "0xF66BB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5495C", Offset = "0xB5495C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032F3")]
				[Address(RVA = "0xF66BB8", Offset = "0xF66BB8", VA = "0xF66BB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5496C", Offset = "0xB5496C")]
				set
				{
				}
			}

			[Token(Token = "0x17000540")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x60032F4")]
				[Address(RVA = "0xF66BC0", Offset = "0xF66BC0", VA = "0xF66BC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5497C", Offset = "0xB5497C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032F5")]
				[Address(RVA = "0xF66BC8", Offset = "0xF66BC8", VA = "0xF66BC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5498C", Offset = "0xB5498C")]
				set
				{
				}
			}

			[Token(Token = "0x17000541")]
			public int number_of_charge_period
			{
				[Token(Token = "0x60032F6")]
				[Address(RVA = "0xF66BD0", Offset = "0xF66BD0", VA = "0xF66BD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5499C", Offset = "0xB5499C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032F7")]
				[Address(RVA = "0xF66BD8", Offset = "0xF66BD8", VA = "0xF66BD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB549AC", Offset = "0xB549AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000542")]
			public string plan_id
			{
				[Token(Token = "0x60032F8")]
				[Address(RVA = "0xF66BE0", Offset = "0xF66BE0", VA = "0xF66BE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB549BC", Offset = "0xB549BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032F9")]
				[Address(RVA = "0xF66BE8", Offset = "0xF66BE8", VA = "0xF66BE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB549CC", Offset = "0xB549CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000543")]
			public string plan_name
			{
				[Token(Token = "0x60032FA")]
				[Address(RVA = "0xF66BF0", Offset = "0xF66BF0", VA = "0xF66BF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB549DC", Offset = "0xB549DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032FB")]
				[Address(RVA = "0xF66BF8", Offset = "0xF66BF8", VA = "0xF66BF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB549EC", Offset = "0xB549EC")]
				set
				{
				}
			}

			[Token(Token = "0x17000544")]
			public string status
			{
				[Token(Token = "0x60032FC")]
				[Address(RVA = "0xF66C00", Offset = "0xF66C00", VA = "0xF66C00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB549FC", Offset = "0xB549FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032FD")]
				[Address(RVA = "0xF66C08", Offset = "0xF66C08", VA = "0xF66C08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A0C", Offset = "0xB54A0C")]
				set
				{
				}
			}

			[Token(Token = "0x17000545")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x60032FE")]
				[Address(RVA = "0xF66C10", Offset = "0xF66C10", VA = "0xF66C10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A1C", Offset = "0xB54A1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032FF")]
				[Address(RVA = "0xF66C18", Offset = "0xF66C18", VA = "0xF66C18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A2C", Offset = "0xB54A2C")]
				set
				{
				}
			}

			[Token(Token = "0x6003300")]
			[Address(RVA = "0xF66C20", Offset = "0xF66C20", VA = "0xF66C20")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x200086E")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4003109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42688", Offset = "0xB42688")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x400310A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42698", Offset = "0xB42698")]
			private string <message>k__BackingField;

			[Token(Token = "0x400310B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB426A8", Offset = "0xB426A8")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000546")]
			public int statusCode
			{
				[Token(Token = "0x6003301")]
				[Address(RVA = "0xF66AA8", Offset = "0xF66AA8", VA = "0xF66AA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A3C", Offset = "0xB54A3C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003302")]
				[Address(RVA = "0xF66AB0", Offset = "0xF66AB0", VA = "0xF66AB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A4C", Offset = "0xB54A4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000547")]
			public string message
			{
				[Token(Token = "0x6003303")]
				[Address(RVA = "0xF66AB8", Offset = "0xF66AB8", VA = "0xF66AB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A5C", Offset = "0xB54A5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003304")]
				[Address(RVA = "0xF66AC0", Offset = "0xF66AC0", VA = "0xF66AC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A6C", Offset = "0xB54A6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000548")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6003305")]
				[Address(RVA = "0xF66AC8", Offset = "0xF66AC8", VA = "0xF66AC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A7C", Offset = "0xB54A7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003306")]
				[Address(RVA = "0xF66AD0", Offset = "0xF66AD0", VA = "0xF66AD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB54A8C", Offset = "0xB54A8C")]
				set
				{
				}
			}

			[Token(Token = "0x6003307")]
			[Address(RVA = "0xF66AD8", Offset = "0xF66AD8", VA = "0xF66AD8")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xF5FD54", Offset = "0xF5FD54", VA = "0xF5FD54")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EAD8", Offset = "0xB4EAD8")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xF60510", Offset = "0xF60510", VA = "0xF60510")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xF5FDC4", Offset = "0xF5FDC4", VA = "0xF5FDC4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EB3C", Offset = "0xB4EB3C")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xF607FC", Offset = "0xF607FC", VA = "0xF607FC")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xF5FE34", Offset = "0xF5FE34", VA = "0xF5FE34")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EBA0", Offset = "0xB4EBA0")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xF60A6C", Offset = "0xF60A6C", VA = "0xF60A6C")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xF5FEA4", Offset = "0xF5FEA4", VA = "0xF5FEA4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EC04", Offset = "0xB4EC04")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xF60CA4", Offset = "0xF60CA4", VA = "0xF60CA4")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xF5FF14", Offset = "0xF5FF14", VA = "0xF5FF14")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EC68", Offset = "0xB4EC68")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xF60F14", Offset = "0xF60F14", VA = "0xF60F14")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xF5FF84", Offset = "0xF5FF84", VA = "0xF5FF84")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4ECCC", Offset = "0xB4ECCC")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xF61184", Offset = "0xF61184", VA = "0xF61184")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xF5FFF4", Offset = "0xF5FFF4", VA = "0xF5FFF4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4ED30", Offset = "0xB4ED30")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xF613B0", Offset = "0xF613B0", VA = "0xF613B0")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xF60064", Offset = "0xF60064", VA = "0xF60064")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4ED94", Offset = "0xB4ED94")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xF615DC", Offset = "0xF615DC", VA = "0xF615DC")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xF600D4", Offset = "0xF600D4", VA = "0xF600D4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EDF8", Offset = "0xB4EDF8")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xF61A00", Offset = "0xF61A00", VA = "0xF61A00")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xF60144", Offset = "0xF60144", VA = "0xF60144")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EE5C", Offset = "0xB4EE5C")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xF61C70", Offset = "0xF61C70", VA = "0xF61C70")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xF601B4", Offset = "0xF601B4", VA = "0xF601B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EEC0", Offset = "0xB4EEC0")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xF61EE0", Offset = "0xF61EE0", VA = "0xF61EE0")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xF60224", Offset = "0xF60224", VA = "0xF60224")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB4EF24", Offset = "0xB4EF24")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xF62150", Offset = "0xF62150", VA = "0xF62150")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xF623C0", Offset = "0xF623C0", VA = "0xF623C0")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class DLC
	{
		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xF5FD4C", Offset = "0xF5FD4C", VA = "0xF5FD4C")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class Subscription
	{
		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xF6B1E4", Offset = "0xF6B1E4", VA = "0xF6B1E4")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000419")]
	internal class Token
	{
		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xF6B1EC", Offset = "0xF6B1EC", VA = "0xF6B1EC")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB333F8", Offset = "0xB333F8")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3340C", Offset = "0xB3340C")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB33420", Offset = "0xB33420")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB33434", Offset = "0xB33434")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200041E")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001A03")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001A04")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001A05")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001A06")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200041F")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001A08")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001A09")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001A0A")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001A0B")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000420")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001A0D")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001A0E")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001A0F")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000421")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001A11")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001A12")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001A13")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001A14")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000422")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001A16")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001A17")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4001A18")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000423")]
	internal enum ELocale
	{
		[Token(Token = "0x4001A1A")]
		k_ELocaleUS,
		[Token(Token = "0x4001A1B")]
		k_ELocaleDE,
		[Token(Token = "0x4001A1C")]
		k_ELocaleJP,
		[Token(Token = "0x4001A1D")]
		k_ELocaleKR,
		[Token(Token = "0x4001A1E")]
		k_ELocaleRU,
		[Token(Token = "0x4001A1F")]
		k_ELocaleCN,
		[Token(Token = "0x4001A20")]
		k_ELocaleTW,
		[Token(Token = "0x4001A21")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000424")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4001A23")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4001A24")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4001A25")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000425")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB33448", Offset = "0xB33448")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000427")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000428")]
	internal class Api
	{
		[Token(Token = "0x200086F")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x400310C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6003308")]
			[Address(RVA = "0xF674C0", Offset = "0xF674C0", VA = "0xF674C0")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6003309")]
			[Address(RVA = "0xF67550", Offset = "0xF67550", VA = "0xF67550")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x600330A")]
			[Address(RVA = "0xF67734", Offset = "0xF67734", VA = "0xF67734")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xF5F054", Offset = "0xF5F054", VA = "0xF5F054")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xF5F2E8", Offset = "0xF5F2E8", VA = "0xF5F2E8")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xF5F470", Offset = "0xF5F470", VA = "0xF5F470")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xF5EB14", Offset = "0xF5EB14", VA = "0xF5EB14")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xF67548", Offset = "0xF67548", VA = "0xF67548")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000429")]
	internal class User
	{
		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xF684CC", Offset = "0xF684CC", VA = "0xF684CC")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xF685EC", Offset = "0xF685EC", VA = "0xF685EC")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xF686C4", Offset = "0xF686C4", VA = "0xF686C4")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xF6879C", Offset = "0xF6879C", VA = "0xF6879C")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xF68874", Offset = "0xF68874", VA = "0xF68874")]
		public User()
		{
		}
	}
	[Token(Token = "0x200042A")]
	internal class UserStats
	{
		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xF6887C", Offset = "0xF6887C", VA = "0xF6887C")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xF6899C", Offset = "0xF6899C", VA = "0xF6899C")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xF68ABC", Offset = "0xF68ABC", VA = "0xF68ABC")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xF68BDC", Offset = "0xF68BDC", VA = "0xF68BDC")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xF68D04", Offset = "0xF68D04", VA = "0xF68D04")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xF68E34", Offset = "0xF68E34", VA = "0xF68E34")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xF68F5C", Offset = "0xF68F5C", VA = "0xF68F5C")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xF6908C", Offset = "0xF6908C", VA = "0xF6908C")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xF69160", Offset = "0xF69160", VA = "0xF69160")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xF69234", Offset = "0xF69234", VA = "0xF69234")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xF69308", Offset = "0xF69308", VA = "0xF69308")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xF693DC", Offset = "0xF693DC", VA = "0xF693DC")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xF69504", Offset = "0xF69504", VA = "0xF69504")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xF6966C", Offset = "0xF6966C", VA = "0xF6966C")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xF69740", Offset = "0xF69740", VA = "0xF69740")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xF699B8", Offset = "0xF699B8", VA = "0xF699B8")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xF69B60", Offset = "0xF69B60", VA = "0xF69B60")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xF69D9C", Offset = "0xF69D9C", VA = "0xF69D9C")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xF69E98", Offset = "0xF69E98", VA = "0xF69E98")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xF69F94", Offset = "0xF69F94", VA = "0xF69F94")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xF6A090", Offset = "0xF6A090", VA = "0xF6A090")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200042B")]
	internal class IAPurchase
	{
		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xF606B0", Offset = "0xF606B0", VA = "0xF606B0")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xF60920", Offset = "0xF60920", VA = "0xF60920")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xF60B2C", Offset = "0xF60B2C", VA = "0xF60B2C")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xF60DC8", Offset = "0xF60DC8", VA = "0xF60DC8")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xF61038", Offset = "0xF61038", VA = "0xF61038")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xF61298", Offset = "0xF61298", VA = "0xF61298")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xF614C4", Offset = "0xF614C4", VA = "0xF614C4")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xF61748", Offset = "0xF61748", VA = "0xF61748")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xF61B24", Offset = "0xF61B24", VA = "0xF61B24")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xF61D94", Offset = "0xF61D94", VA = "0xF61D94")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xF62004", Offset = "0xF62004", VA = "0xF62004")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xF62274", Offset = "0xF62274", VA = "0xF62274")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xF67D20", Offset = "0xF67D20", VA = "0xF67D20")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200042C")]
	internal class Android
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x17000256")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xF670F4", Offset = "0xF670F4", VA = "0xF670F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xF67184", Offset = "0xF67184", VA = "0xF67184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xF671E4", Offset = "0xF671E4", VA = "0xF671E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xF66C50", Offset = "0xF66C50", VA = "0xF66C50")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xF66D7C", Offset = "0xF66D7C", VA = "0xF66D7C")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xF66EA4", Offset = "0xF66EA4", VA = "0xF66EA4")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xF66FCC", Offset = "0xF66FCC", VA = "0xF66FCC")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xF671E8", Offset = "0xF671E8", VA = "0xF671E8")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200042D")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xF671F0", Offset = "0xF671F0", VA = "0xF671F0")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xF67278", Offset = "0xF67278", VA = "0xF67278")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xF67300", Offset = "0xF67300", VA = "0xF67300")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200042E")]
	internal class Session
	{
		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xF5F6E0", Offset = "0xF5F6E0", VA = "0xF5F6E0")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200042F")]
	public class Logger
	{
		[Token(Token = "0x4001A32")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xF5F6F0", Offset = "0xF5F6F0", VA = "0xF5F6F0")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xF5FAF0", Offset = "0xF5FAF0", VA = "0xF5FAF0")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xF5F7C0", Offset = "0xF5F7C0", VA = "0xF5F7C0")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xF5FB8C", Offset = "0xF5FB8C", VA = "0xF5FB8C")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xF5FCF0", Offset = "0xF5FCF0", VA = "0xF5FCF0")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000430")]
	public enum JsonType
	{
		[Token(Token = "0x4001A37")]
		None,
		[Token(Token = "0x4001A38")]
		Object,
		[Token(Token = "0x4001A39")]
		Array,
		[Token(Token = "0x4001A3A")]
		String,
		[Token(Token = "0x4001A3B")]
		Int,
		[Token(Token = "0x4001A3C")]
		Long,
		[Token(Token = "0x4001A3D")]
		Double,
		[Token(Token = "0x4001A3E")]
		Boolean
	}
	[Token(Token = "0x2000431")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000259")]
		bool IsArray
		{
			[Token(Token = "0x6001E2E")]
			get;
		}

		[Token(Token = "0x1700025A")]
		bool IsBoolean
		{
			[Token(Token = "0x6001E2F")]
			get;
		}

		[Token(Token = "0x1700025B")]
		bool IsDouble
		{
			[Token(Token = "0x6001E30")]
			get;
		}

		[Token(Token = "0x1700025C")]
		bool IsInt
		{
			[Token(Token = "0x6001E31")]
			get;
		}

		[Token(Token = "0x1700025D")]
		bool IsLong
		{
			[Token(Token = "0x6001E32")]
			get;
		}

		[Token(Token = "0x1700025E")]
		bool IsObject
		{
			[Token(Token = "0x6001E33")]
			get;
		}

		[Token(Token = "0x1700025F")]
		bool IsString
		{
			[Token(Token = "0x6001E34")]
			get;
		}

		[Token(Token = "0x6001E35")]
		bool GetBoolean();

		[Token(Token = "0x6001E36")]
		double GetDouble();

		[Token(Token = "0x6001E37")]
		int GetInt();

		[Token(Token = "0x6001E38")]
		JsonType GetJsonType();

		[Token(Token = "0x6001E39")]
		long GetLong();

		[Token(Token = "0x6001E3A")]
		string GetString();

		[Token(Token = "0x6001E3B")]
		void SetBoolean(bool val);

		[Token(Token = "0x6001E3C")]
		void SetDouble(double val);

		[Token(Token = "0x6001E3D")]
		void SetInt(int val);

		[Token(Token = "0x6001E3E")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6001E3F")]
		void SetLong(long val);

		[Token(Token = "0x6001E40")]
		void SetString(string val);

		[Token(Token = "0x6001E41")]
		string ToJson();

		[Token(Token = "0x6001E42")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB3345C", Offset = "0xB3345C")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000260")]
		public int Count
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xDF86D4", Offset = "0xDF86D4", VA = "0xDF86D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000261")]
		public bool IsArray
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xDF885C", Offset = "0xDF885C", VA = "0xDF885C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xDF886C", Offset = "0xDF886C", VA = "0xDF886C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public bool IsDouble
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xDF887C", Offset = "0xDF887C", VA = "0xDF887C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000264")]
		public bool IsInt
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xDF888C", Offset = "0xDF888C", VA = "0xDF888C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000265")]
		public bool IsLong
		{
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xDF889C", Offset = "0xDF889C", VA = "0xDF889C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public bool IsObject
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xDF88AC", Offset = "0xDF88AC", VA = "0xDF88AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000267")]
		public bool IsString
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xDF88BC", Offset = "0xDF88BC", VA = "0xDF88BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000268")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xDF88CC", Offset = "0xDF88CC", VA = "0xDF88CC", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000269")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xDF88D0", Offset = "0xDF88D0", VA = "0xDF88D0", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xDF898C", Offset = "0xDF898C", VA = "0xDF898C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xDF8A48", Offset = "0xDF8A48", VA = "0xDF8A48", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026C")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xDF8C54", Offset = "0xDF8C54", VA = "0xDF8C54", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026D")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xDF8D10", Offset = "0xDF8D10", VA = "0xDF8D10", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xDF9040", Offset = "0xDF9040", VA = "0xDF9040", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xDF9370", Offset = "0xDF9370", VA = "0xDF9370", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xDF9380", Offset = "0xDF9380", VA = "0xDF9380", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xDF9390", Offset = "0xDF9390", VA = "0xDF9390", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xDF93A0", Offset = "0xDF93A0", VA = "0xDF93A0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000273")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xDF93B0", Offset = "0xDF93B0", VA = "0xDF93B0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xDF93C0", Offset = "0xDF93C0", VA = "0xDF93C0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000275")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xDF93D0", Offset = "0xDF93D0", VA = "0xDF93D0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000276")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xDF93E0", Offset = "0xDF93E0", VA = "0xDF93E0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xDF95B8", Offset = "0xDF95B8", VA = "0xDF95B8", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xDF9674", Offset = "0xDF9674", VA = "0xDF9674", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xDF973C", Offset = "0xDF973C", VA = "0xDF973C", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xDF9C48", Offset = "0xDF9C48", VA = "0xDF9C48", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xDF9D18", Offset = "0xDF9D18", VA = "0xDF9D18", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xDF9F20", Offset = "0xDF9F20", VA = "0xDF9F20", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0xDF9FE8", Offset = "0xDF9FE8", VA = "0xDF9FE8", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public JsonData Item
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xDFA2C0", Offset = "0xDFA2C0", VA = "0xDFA2C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xDF98AC", Offset = "0xDF98AC", VA = "0xDF98AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public JsonData Item
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xDFA388", Offset = "0xDFA388", VA = "0xDFA388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xDFA02C", Offset = "0xDFA02C", VA = "0xDFA02C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xDFA4E4", Offset = "0xDFA4E4", VA = "0xDFA4E4")]
		public JsonData()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xDFA4EC", Offset = "0xDFA4EC", VA = "0xDFA4EC")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xDFA524", Offset = "0xDFA524", VA = "0xDFA524")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xDFA560", Offset = "0xDFA560", VA = "0xDFA560")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xDFA594", Offset = "0xDFA594", VA = "0xDFA594")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xDFA5C8", Offset = "0xDFA5C8", VA = "0xDFA5C8")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xDFA7B0", Offset = "0xDFA7B0", VA = "0xDFA7B0")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xDFA7E4", Offset = "0xDFA7E4", VA = "0xDFA7E4")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xDFA854", Offset = "0xDFA854", VA = "0xDFA854")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xDFA8C8", Offset = "0xDFA8C8", VA = "0xDFA8C8")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xDFA934", Offset = "0xDFA934", VA = "0xDFA934")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xDFA9A0", Offset = "0xDFA9A0", VA = "0xDFA9A0")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xDFAA0C", Offset = "0xDFAA0C", VA = "0xDFAA0C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xDFAAA0", Offset = "0xDFAAA0", VA = "0xDFAAA0")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xDFAB34", Offset = "0xDFAB34", VA = "0xDFAB34")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xDFABC8", Offset = "0xDFABC8", VA = "0xDFABC8")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xDFAC5C", Offset = "0xDFAC5C", VA = "0xDFAC5C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xDFACF0", Offset = "0xDFACF0", VA = "0xDFACF0", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xDFADC0", Offset = "0xDFADC0", VA = "0xDFADC0", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xDFAF74", Offset = "0xDFAF74", VA = "0xDFAF74", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xDFB0AC", Offset = "0xDFB0AC", VA = "0xDFB0AC", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xDFB178", Offset = "0xDFB178", VA = "0xDFB178", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xDFB220", Offset = "0xDFB220", VA = "0xDFB220", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xDFB4A4", Offset = "0xDFB4A4", VA = "0xDFB4A4", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xDFB55C", Offset = "0xDFB55C", VA = "0xDFB55C", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xDFB5E8", Offset = "0xDFB5E8", VA = "0xDFB5E8", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xDFB674", Offset = "0xDFB674", VA = "0xDFB674", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xDFB700", Offset = "0xDFB700", VA = "0xDFB700", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xDFB78C", Offset = "0xDFB78C", VA = "0xDFB78C", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xDFB818", Offset = "0xDFB818", VA = "0xDFB818", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xDFB830", Offset = "0xDFB830", VA = "0xDFB830", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xDFB844", Offset = "0xDFB844", VA = "0xDFB844", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xDFB858", Offset = "0xDFB858", VA = "0xDFB858", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xDFB86C", Offset = "0xDFB86C", VA = "0xDFB86C", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xDFB87C", Offset = "0xDFB87C", VA = "0xDFB87C", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xDFB938", Offset = "0xDFB938", VA = "0xDFB938", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xDFB970", Offset = "0xDFB970", VA = "0xDFB970", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xDFBA50", Offset = "0xDFBA50", VA = "0xDFBA50", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xDFBB14", Offset = "0xDFBB14", VA = "0xDFBB14", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xDFBBE0", Offset = "0xDFBBE0", VA = "0xDFBBE0", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xDFBCAC", Offset = "0xDFBCAC", VA = "0xDFBCAC", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xDFBD88", Offset = "0xDFBD88", VA = "0xDFBD88", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xDFBE5C", Offset = "0xDFBE5C", VA = "0xDFBE5C", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xDFBF30", Offset = "0xDFBF30", VA = "0xDFBF30", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xDFC044", Offset = "0xDFC044", VA = "0xDFC044", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xDFC190", Offset = "0xDFC190", VA = "0xDFC190", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xDF8790", Offset = "0xDF8790", VA = "0xDF8790")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xDF8B04", Offset = "0xDF8B04", VA = "0xDF8B04")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xDF949C", Offset = "0xDF949C", VA = "0xDF949C")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xDF9810", Offset = "0xDF9810", VA = "0xDF9810")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xDFC34C", Offset = "0xDFC34C", VA = "0xDFC34C")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xDFB974", Offset = "0xDFB974", VA = "0xDFB974")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xDFD6E8", Offset = "0xDFD6E8", VA = "0xDFD6E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xDFD804", Offset = "0xDFD804", VA = "0xDFD804", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xDFD8F0", Offset = "0xDFD8F0", VA = "0xDFD8F0", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xDFD8F8", Offset = "0xDFD8F8", VA = "0xDFD8F8", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xDFB880", Offset = "0xDFB880", VA = "0xDFB880")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xDFB93C", Offset = "0xDFB93C", VA = "0xDFB93C")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xDFDAB8", Offset = "0xDFDAB8", VA = "0xDFDAB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000433")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x1700027D")]
		public object Current
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xE0A384", Offset = "0xE0A384", VA = "0xE0A384", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xE0A3F0", Offset = "0xE0A3F0", VA = "0xE0A3F0", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700027F")]
		public object Key
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xE0A4D0", Offset = "0xE0A4D0", VA = "0xE0A4D0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public object Value
		{
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xE0A580", Offset = "0xE0A580", VA = "0xE0A580", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xDFC018", Offset = "0xDFC018", VA = "0xDFC018")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xE0A638", Offset = "0xE0A638", VA = "0xE0A638", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xE0A6E8", Offset = "0xE0A6E8", VA = "0xE0A6E8", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xDFDB98", Offset = "0xDFDB98", VA = "0xDFDB98")]
		public JsonException()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xDFDBA0", Offset = "0xDFDBA0", VA = "0xDFDBA0")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xDFDC30", Offset = "0xDFDC30", VA = "0xDFDC30")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xDFDCD0", Offset = "0xDFDCD0", VA = "0xDFDCD0")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xDFDD60", Offset = "0xDFDD60", VA = "0xDFDD60")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xDFDE00", Offset = "0xDFDE00", VA = "0xDFDE00")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xDFDE08", Offset = "0xDFDE08", VA = "0xDFDE08")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000435")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000436")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000281")]
		public Type ElementType
		{
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xDF7DCC", Offset = "0xDF7DCC", VA = "0xDF7DCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xDF7E8C", Offset = "0xDF7E8C", VA = "0xDF7E8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public bool IsArray
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xDF7E94", Offset = "0xDF7E94", VA = "0xDF7E94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xDF7E9C", Offset = "0xDF7E9C", VA = "0xDF7E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool IsList
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xDF7EA8", Offset = "0xDF7EA8", VA = "0xDF7EA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xDF7EB0", Offset = "0xDF7EB0", VA = "0xDF7EB0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000437")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000284")]
		public Type ElementType
		{
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xE02938", Offset = "0xE02938", VA = "0xE02938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xE0A358", Offset = "0xE0A358", VA = "0xE0A358")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool IsDictionary
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xE0A360", Offset = "0xE0A360", VA = "0xE0A360")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xE0A368", Offset = "0xE0A368", VA = "0xE0A368")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xE0A374", Offset = "0xE0A374", VA = "0xE0A374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xE0A37C", Offset = "0xE0A37C", VA = "0xE0A37C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000438")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000439")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x200043A")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200043B")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200043C")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200043D")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35378", Offset = "0xB35378")]
		private sealed class <>c
		{
			[Token(Token = "0x400310D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400310E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x400310F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4003114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4003115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4003116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4003117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4003118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4003119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x400311A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x400311B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x400311C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x400311D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x400311E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x400311F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4003120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4003121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4003122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4003123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4003124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4003125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4003126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4003127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x600330C")]
			[Address(RVA = "0xE0541C", Offset = "0xE0541C", VA = "0xE0541C")]
			public <>c()
			{
			}

			[Token(Token = "0x600330D")]
			[Address(RVA = "0xE05424", Offset = "0xE05424", VA = "0xE05424")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600330E")]
			[Address(RVA = "0xE054DC", Offset = "0xE054DC", VA = "0xE054DC")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600330F")]
			[Address(RVA = "0xE05594", Offset = "0xE05594", VA = "0xE05594")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003310")]
			[Address(RVA = "0xE05680", Offset = "0xE05680", VA = "0xE05680")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003311")]
			[Address(RVA = "0xE057F4", Offset = "0xE057F4", VA = "0xE057F4")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003312")]
			[Address(RVA = "0xE058AC", Offset = "0xE058AC", VA = "0xE058AC")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003313")]
			[Address(RVA = "0xE05964", Offset = "0xE05964", VA = "0xE05964")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003314")]
			[Address(RVA = "0xE05A1C", Offset = "0xE05A1C", VA = "0xE05A1C")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003315")]
			[Address(RVA = "0xE05AD4", Offset = "0xE05AD4", VA = "0xE05AD4")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003316")]
			[Address(RVA = "0xE05B60", Offset = "0xE05B60", VA = "0xE05B60")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6003317")]
			[Address(RVA = "0xE05BF0", Offset = "0xE05BF0", VA = "0xE05BF0")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6003318")]
			[Address(RVA = "0xE05CB4", Offset = "0xE05CB4", VA = "0xE05CB4")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6003319")]
			[Address(RVA = "0xE05D78", Offset = "0xE05D78", VA = "0xE05D78")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x600331A")]
			[Address(RVA = "0xE05E3C", Offset = "0xE05E3C", VA = "0xE05E3C")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x600331B")]
			[Address(RVA = "0xE05F00", Offset = "0xE05F00", VA = "0xE05F00")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x600331C")]
			[Address(RVA = "0xE05FC4", Offset = "0xE05FC4", VA = "0xE05FC4")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x600331D")]
			[Address(RVA = "0xE06088", Offset = "0xE06088", VA = "0xE06088")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x600331E")]
			[Address(RVA = "0xE06148", Offset = "0xE06148", VA = "0xE06148")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x600331F")]
			[Address(RVA = "0xE0620C", Offset = "0xE0620C", VA = "0xE0620C")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6003320")]
			[Address(RVA = "0xE062CC", Offset = "0xE062CC", VA = "0xE062CC")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6003321")]
			[Address(RVA = "0xE06390", Offset = "0xE06390", VA = "0xE06390")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6003322")]
			[Address(RVA = "0xE06454", Offset = "0xE06454", VA = "0xE06454")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6003323")]
			[Address(RVA = "0xE06510", Offset = "0xE06510", VA = "0xE06510")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6003324")]
			[Address(RVA = "0xE06600", Offset = "0xE06600", VA = "0xE06600")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6003325")]
			[Address(RVA = "0xE0665C", Offset = "0xE0665C", VA = "0xE0665C")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6003326")]
			[Address(RVA = "0xE066B8", Offset = "0xE066B8", VA = "0xE066B8")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000871")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35388", Offset = "0xB35388")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4003128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6003327")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6003328")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000872")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35398", Offset = "0xB35398")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4003129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6003329")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600332A")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xDFDE10", Offset = "0xDFDE10", VA = "0xDFDE10")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xDFFC40", Offset = "0xDFFC40", VA = "0xDFFC40")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xE000AC", Offset = "0xE000AC", VA = "0xE000AC")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xE007BC", Offset = "0xE007BC", VA = "0xE007BC")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xE00CCC", Offset = "0xE00CCC", VA = "0xE00CCC")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xE015A0", Offset = "0xE015A0", VA = "0xE015A0")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xE029F8", Offset = "0xE029F8", VA = "0xE029F8")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xDFE168", Offset = "0xDFE168", VA = "0xDFE168")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xDFEEFC", Offset = "0xDFEEFC", VA = "0xDFEEFC")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xE0329C", Offset = "0xE0329C", VA = "0xE0329C")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xE034E0", Offset = "0xE034E0", VA = "0xE034E0")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xE04A04", Offset = "0xE04A04", VA = "0xE04A04")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xE04C28", Offset = "0xE04C28", VA = "0xE04C28")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xE04CA4", Offset = "0xE04CA4", VA = "0xE04CA4")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xE04E60", Offset = "0xE04E60", VA = "0xE04E60")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xE04FC0", Offset = "0xE04FC0", VA = "0xE04FC0")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6001EDE")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001EDF")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001EE0")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xE04DEC", Offset = "0xE04DEC", VA = "0xE04DEC")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xE050F8", Offset = "0xE050F8", VA = "0xE050F8")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6001EE4")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xE05200", Offset = "0xE05200", VA = "0xE05200")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xE052D8", Offset = "0xE052D8", VA = "0xE052D8")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xE053B0", Offset = "0xE053B0", VA = "0xE053B0")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public enum JsonToken
	{
		[Token(Token = "0x4001A64")]
		None,
		[Token(Token = "0x4001A65")]
		ObjectStart,
		[Token(Token = "0x4001A66")]
		PropertyName,
		[Token(Token = "0x4001A67")]
		ObjectEnd,
		[Token(Token = "0x4001A68")]
		ArrayStart,
		[Token(Token = "0x4001A69")]
		ArrayEnd,
		[Token(Token = "0x4001A6A")]
		Int,
		[Token(Token = "0x4001A6B")]
		Long,
		[Token(Token = "0x4001A6C")]
		Double,
		[Token(Token = "0x4001A6D")]
		String,
		[Token(Token = "0x4001A6E")]
		Boolean,
		[Token(Token = "0x4001A6F")]
		Null
	}
	[Token(Token = "0x200043F")]
	public class JsonReader
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000287")]
		public bool AllowComments
		{
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xE06714", Offset = "0xE06714", VA = "0xE06714")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xE06730", Offset = "0xE06730", VA = "0xE06730")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xE06750", Offset = "0xE06750", VA = "0xE06750")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xE0676C", Offset = "0xE0676C", VA = "0xE0676C")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xE0678C", Offset = "0xE0678C", VA = "0xE0678C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028A")]
		public bool EndOfJson
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xE06794", Offset = "0xE06794", VA = "0xE06794")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028B")]
		public JsonToken Token
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xE0679C", Offset = "0xE0679C", VA = "0xE0679C")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x1700028C")]
		public object Value
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xE067A4", Offset = "0xE067A4", VA = "0xE067A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xE067AC", Offset = "0xE067AC", VA = "0xE067AC")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xE05188", Offset = "0xE05188", VA = "0xE05188")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xE04FB8", Offset = "0xE04FB8", VA = "0xE04FB8")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xE06E24", Offset = "0xE06E24", VA = "0xE06E24")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xE067B0", Offset = "0xE067B0", VA = "0xE067B0")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xE0713C", Offset = "0xE0713C", VA = "0xE0713C")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xE0702C", Offset = "0xE0702C", VA = "0xE0702C")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xE072A4", Offset = "0xE072A4", VA = "0xE072A4")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xE07424", Offset = "0xE07424", VA = "0xE07424")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xE075C4", Offset = "0xE075C4", VA = "0xE075C4")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xE077F8", Offset = "0xE077F8", VA = "0xE077F8")]
		public void Close()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xE0250C", Offset = "0xE0250C", VA = "0xE0250C")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000440")]
	internal enum Condition
	{
		[Token(Token = "0x4001A7F")]
		InArray,
		[Token(Token = "0x4001A80")]
		InObject,
		[Token(Token = "0x4001A81")]
		NotAProperty,
		[Token(Token = "0x4001A82")]
		Property,
		[Token(Token = "0x4001A83")]
		Value
	}
	[Token(Token = "0x2000441")]
	internal class WriterContext
	{
		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xE07C0C", Offset = "0xE07C0C", VA = "0xE07C0C")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class JsonWriter
	{
		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x1700028D")]
		public int IndentValue
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xE07848", Offset = "0xE07848", VA = "0xE07848")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xE07850", Offset = "0xE07850", VA = "0xE07850")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xE07864", Offset = "0xE07864", VA = "0xE07864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xE0786C", Offset = "0xE0786C", VA = "0xE0786C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xE07878", Offset = "0xE07878", VA = "0xE07878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public bool Validate
		{
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xE07880", Offset = "0xE07880", VA = "0xE07880")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xE07888", Offset = "0xE07888", VA = "0xE07888")]
			set
			{
			}
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xE07894", Offset = "0xE07894", VA = "0xE07894")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xDFE0CC", Offset = "0xDFE0CC", VA = "0xDFE0CC")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xE079C0", Offset = "0xE079C0", VA = "0xE079C0")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xDFDA18", Offset = "0xDFDA18", VA = "0xDFDA18")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xE07A34", Offset = "0xE07A34", VA = "0xE07A34")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xE078EC", Offset = "0xE078EC", VA = "0xE078EC")]
		private void Init()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xE07C14", Offset = "0xE07C14", VA = "0xE07C14")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xE07C9C", Offset = "0xE07C9C", VA = "0xE07C9C")]
		private void Indent()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xE07CB4", Offset = "0xE07CB4", VA = "0xE07CB4")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xE07D48", Offset = "0xE07D48", VA = "0xE07D48")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xE07D50", Offset = "0xE07D50", VA = "0xE07D50")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xE07DE0", Offset = "0xE07DE0", VA = "0xE07DE0")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xE08088", Offset = "0xE08088", VA = "0xE08088")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xE080A0", Offset = "0xE080A0", VA = "0xE080A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xE04B5C", Offset = "0xE04B5C", VA = "0xE04B5C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xDFCEDC", Offset = "0xDFCEDC", VA = "0xDFCEDC")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xE0570C", Offset = "0xE0570C", VA = "0xE0570C")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xDFCF78", Offset = "0xDFCF78", VA = "0xDFCF78")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xDFD0B4", Offset = "0xDFD0B4", VA = "0xDFD0B4")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xDFD194", Offset = "0xDFD194", VA = "0xDFD194")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xDFCE40", Offset = "0xDFCE40", VA = "0xDFCE40")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xE04924", Offset = "0xE04924", VA = "0xE04924")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xDFD348", Offset = "0xDFD348", VA = "0xDFD348")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xDFD274", Offset = "0xDFD274", VA = "0xDFD274")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xDFD618", Offset = "0xDFD618", VA = "0xDFD618")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xDFD418", Offset = "0xDFD418", VA = "0xDFD418")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xDFD4EC", Offset = "0xDFD4EC", VA = "0xDFD4EC")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000443")]
	internal class FsmContext
	{
		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xDF82F0", Offset = "0xDF82F0", VA = "0xDF82F0")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000444")]
	internal class Lexer
	{
		[Token(Token = "0x2000873")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x17000291")]
		public bool AllowComments
		{
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xE08110", Offset = "0xE08110", VA = "0xE08110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xE08118", Offset = "0xE08118", VA = "0xE08118")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xE08124", Offset = "0xE08124", VA = "0xE08124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xE0812C", Offset = "0xE0812C", VA = "0xE0812C")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xE08138", Offset = "0xE08138", VA = "0xE08138")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		public int Token
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xE08140", Offset = "0xE08140", VA = "0xE08140")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000295")]
		public string StringValue
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xE08148", Offset = "0xE08148", VA = "0xE08148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xE08150", Offset = "0xE08150", VA = "0xE08150")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xE06F68", Offset = "0xE06F68", VA = "0xE06F68")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xE08A90", Offset = "0xE08A90", VA = "0xE08A90")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xE08154", Offset = "0xE08154", VA = "0xE08154")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xE08B1C", Offset = "0xE08B1C", VA = "0xE08B1C")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xE08C1C", Offset = "0xE08C1C", VA = "0xE08C1C")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xE08E2C", Offset = "0xE08E2C", VA = "0xE08E2C")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xE08ED8", Offset = "0xE08ED8", VA = "0xE08ED8")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xE09018", Offset = "0xE09018", VA = "0xE09018")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xE09118", Offset = "0xE09118", VA = "0xE09118")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xE0919C", Offset = "0xE0919C", VA = "0xE0919C")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xE09298", Offset = "0xE09298", VA = "0xE09298")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xE09330", Offset = "0xE09330", VA = "0xE09330")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xE093F0", Offset = "0xE093F0", VA = "0xE093F0")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xE09460", Offset = "0xE09460", VA = "0xE09460")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xE094D0", Offset = "0xE094D0", VA = "0xE094D0")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xE09540", Offset = "0xE09540", VA = "0xE09540")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xE095B0", Offset = "0xE095B0", VA = "0xE095B0")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xE09620", Offset = "0xE09620", VA = "0xE09620")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xE09690", Offset = "0xE09690", VA = "0xE09690")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xE09700", Offset = "0xE09700", VA = "0xE09700")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xE09770", Offset = "0xE09770", VA = "0xE09770")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xE097E0", Offset = "0xE097E0", VA = "0xE097E0")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xE09850", Offset = "0xE09850", VA = "0xE09850")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xE098FC", Offset = "0xE098FC", VA = "0xE098FC")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xE0996C", Offset = "0xE0996C", VA = "0xE0996C")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xE09AB8", Offset = "0xE09AB8", VA = "0xE09AB8")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xE09C3C", Offset = "0xE09C3C", VA = "0xE09C3C")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xE09CE8", Offset = "0xE09CE8", VA = "0xE09CE8")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xE09D60", Offset = "0xE09D60", VA = "0xE09D60")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xE09DE0", Offset = "0xE09DE0", VA = "0xE09DE0")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xE09E4C", Offset = "0xE09E4C", VA = "0xE09E4C")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xE09EB8", Offset = "0xE09EB8", VA = "0xE09EB8")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xE08DF4", Offset = "0xE08DF4", VA = "0xE08DF4")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xE09F34", Offset = "0xE09F34", VA = "0xE09F34")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xE07624", Offset = "0xE07624", VA = "0xE07624")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xE0900C", Offset = "0xE0900C", VA = "0xE0900C")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000445")]
	internal enum ParserToken
	{
		[Token(Token = "0x4001AA7")]
		None = 65536,
		[Token(Token = "0x4001AA8")]
		Number,
		[Token(Token = "0x4001AA9")]
		True,
		[Token(Token = "0x4001AAA")]
		False,
		[Token(Token = "0x4001AAB")]
		Null,
		[Token(Token = "0x4001AAC")]
		CharSeq,
		[Token(Token = "0x4001AAD")]
		Char,
		[Token(Token = "0x4001AAE")]
		Text,
		[Token(Token = "0x4001AAF")]
		Object,
		[Token(Token = "0x4001AB0")]
		ObjectPrime,
		[Token(Token = "0x4001AB1")]
		Pair,
		[Token(Token = "0x4001AB2")]
		PairRest,
		[Token(Token = "0x4001AB3")]
		Array,
		[Token(Token = "0x4001AB4")]
		ArrayPrime,
		[Token(Token = "0x4001AB5")]
		Value,
		[Token(Token = "0x4001AB6")]
		ValueRest,
		[Token(Token = "0x4001AB7")]
		String,
		[Token(Token = "0x4001AB8")]
		End,
		[Token(Token = "0x4001AB9")]
		Epsilon
	}
}
namespace UI.TimeOfDay
{
	[Serializable]
	[Token(Token = "0x2000446")]
	public class TimeOfDayCriteria
	{
		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float sunrise;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float midday;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float sunset;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float night;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xCBB918", Offset = "0xCBB918", VA = "0xCBB918")]
		public TimePeriod GetPeriod(float time)
		{
			return default(TimePeriod);
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xCBB96C", Offset = "0xCBB96C", VA = "0xCBB96C")]
		public TimeOfDayCriteria()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000447")]
	public class TimeIconSet
	{
		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Sprite sunrise;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite midday;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite sunset;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite night;

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xCBB8CC", Offset = "0xCBB8CC", VA = "0xCBB8CC")]
		public Sprite GetSprite(TimePeriod period)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xCBB910", Offset = "0xCBB910", VA = "0xCBB910")]
		public TimeIconSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	public class WeatherIconCriteria
	{
		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private WeatherType weather;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TimeIconSet icons;

		[Token(Token = "0x17000296")]
		public WeatherType Weather
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0xCBB974", Offset = "0xCBB974", VA = "0xCBB974")]
			get
			{
				return default(WeatherType);
			}
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xCBB97C", Offset = "0xCBB97C", VA = "0xCBB97C")]
		public Sprite GetIcon(TimePeriod period)
		{
			return null;
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xCBB9D4", Offset = "0xCBB9D4", VA = "0xCBB9D4")]
		public bool IsValid(WeatherType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xCBB9E4", Offset = "0xCBB9E4", VA = "0xCBB9E4")]
		public WeatherIconCriteria()
		{
		}
	}
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB33494", Offset = "0xB33494")]
	public class WeatherIconData : ScriptableObject
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TimeOfDayCriteria _timePeriods;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WeatherIconCriteria[] _weathers;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WeatherIconCriteria _fallback;

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xCBB9EC", Offset = "0xCBB9EC", VA = "0xCBB9EC")]
		public Sprite GetIcon(float time, WeatherType weather)
		{
			return null;
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xCBBAB8", Offset = "0xCBBAB8", VA = "0xCBBAB8")]
		public WeatherIconData()
		{
		}
	}
}
namespace LerpUtil
{
	[Token(Token = "0x200044A")]
	public static class Easings
	{
		[Token(Token = "0x2000874")]
		public enum Functions
		{
			[Token(Token = "0x400312B")]
			Linear,
			[Token(Token = "0x400312C")]
			QuadraticEaseIn,
			[Token(Token = "0x400312D")]
			QuadraticEaseOut,
			[Token(Token = "0x400312E")]
			QuadraticEaseInOut,
			[Token(Token = "0x400312F")]
			CubicEaseIn,
			[Token(Token = "0x4003130")]
			CubicEaseOut,
			[Token(Token = "0x4003131")]
			CubicEaseInOut,
			[Token(Token = "0x4003132")]
			QuarticEaseIn,
			[Token(Token = "0x4003133")]
			QuarticEaseOut,
			[Token(Token = "0x4003134")]
			QuarticEaseInOut,
			[Token(Token = "0x4003135")]
			QuinticEaseIn,
			[Token(Token = "0x4003136")]
			QuinticEaseOut,
			[Token(Token = "0x4003137")]
			QuinticEaseInOut,
			[Token(Token = "0x4003138")]
			SineEaseIn,
			[Token(Token = "0x4003139")]
			SineEaseOut,
			[Token(Token = "0x400313A")]
			SineEaseInOut,
			[Token(Token = "0x400313B")]
			CircularEaseIn,
			[Token(Token = "0x400313C")]
			CircularEaseOut,
			[Token(Token = "0x400313D")]
			CircularEaseInOut,
			[Token(Token = "0x400313E")]
			ExponentialEaseIn,
			[Token(Token = "0x400313F")]
			ExponentialEaseOut,
			[Token(Token = "0x4003140")]
			ExponentialEaseInOut,
			[Token(Token = "0x4003141")]
			ElasticEaseIn,
			[Token(Token = "0x4003142")]
			ElasticEaseOut,
			[Token(Token = "0x4003143")]
			ElasticEaseInOut,
			[Token(Token = "0x4003144")]
			BackEaseIn,
			[Token(Token = "0x4003145")]
			BackEaseOut,
			[Token(Token = "0x4003146")]
			BackEaseInOut,
			[Token(Token = "0x4003147")]
			BounceEaseIn,
			[Token(Token = "0x4003148")]
			BounceEaseOut,
			[Token(Token = "0x4003149")]
			BounceEaseInOut
		}

		[Token(Token = "0x4001AC7")]
		private const float _PI = (float)Math.PI;

		[Token(Token = "0x4001AC8")]
		private const float _HALF_PI = (float)Math.PI / 2f;

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xCE2750", Offset = "0xCE2750", VA = "0xCE2750")]
		public static float Interpolate(float p, Functions function)
		{
			return default(float);
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xCED490", Offset = "0xCED490", VA = "0xCED490")]
		public static float Linear(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xCED4A4", Offset = "0xCED4A4", VA = "0xCED4A4")]
		public static float QuadraticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xCED494", Offset = "0xCED494", VA = "0xCED494")]
		public static float QuadraticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xCED4AC", Offset = "0xCED4AC", VA = "0xCED4AC")]
		public static float QuadraticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xCED4E8", Offset = "0xCED4E8", VA = "0xCED4E8")]
		public static float CubicEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xCED4F4", Offset = "0xCED4F4", VA = "0xCED4F4")]
		public static float CubicEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xCED510", Offset = "0xCED510", VA = "0xCED510")]
		public static float CubicEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xCED554", Offset = "0xCED554", VA = "0xCED554")]
		public static float QuarticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xCED564", Offset = "0xCED564", VA = "0xCED564")]
		public static float QuarticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xCDCBE0", Offset = "0xCDCBE0", VA = "0xCDCBE0")]
		public static float QuarticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xCED588", Offset = "0xCED588", VA = "0xCED588")]
		public static float QuinticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xCED59C", Offset = "0xCED59C", VA = "0xCED59C")]
		public static float QuinticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xCED5C0", Offset = "0xCED5C0", VA = "0xCED5C0")]
		public static float QuinticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xCED614", Offset = "0xCED614", VA = "0xCED614")]
		public static float SineEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xCED69C", Offset = "0xCED69C", VA = "0xCED69C")]
		public static float SineEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xCED710", Offset = "0xCED710", VA = "0xCED710")]
		public static float SineEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xCED798", Offset = "0xCED798", VA = "0xCED798")]
		public static float CircularEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xCED824", Offset = "0xCED824", VA = "0xCED824")]
		public static float CircularEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xCDA188", Offset = "0xCDA188", VA = "0xCDA188")]
		public static float CircularEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xCED8B8", Offset = "0xCED8B8", VA = "0xCED8B8")]
		public static float ExponentialEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xCED94C", Offset = "0xCED94C", VA = "0xCED94C")]
		public static float ExponentialEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xCED9D4", Offset = "0xCED9D4", VA = "0xCED9D4")]
		public static float ExponentialEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xCEDAB4", Offset = "0xCEDAB4", VA = "0xCEDAB4")]
		public static float ElasticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xCEDB48", Offset = "0xCEDB48", VA = "0xCEDB48")]
		public static float ElasticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xCEDBE8", Offset = "0xCEDBE8", VA = "0xCEDBE8")]
		public static float ElasticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xCEDCF0", Offset = "0xCEDCF0", VA = "0xCEDCF0")]
		public static float BackEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xCEDD78", Offset = "0xCEDD78", VA = "0xCEDD78")]
		public static float BackEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xCEDE0C", Offset = "0xCEDE0C", VA = "0xCEDE0C")]
		public static float BackEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xCEDF08", Offset = "0xCEDF08", VA = "0xCEDF08")]
		public static float BounceEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xCEDF30", Offset = "0xCEDF30", VA = "0xCEDF30")]
		public static float BounceEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xCEDFE8", Offset = "0xCEDFE8", VA = "0xCEDFE8")]
		public static float BounceEaseInOut(float p)
		{
			return default(float);
		}
	}
}
namespace Assets.TBM.Utilities.Shared
{
	[Token(Token = "0x200044B")]
	public class Result
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isSuccessful;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int statusCode;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string error;

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xE6B868", Offset = "0xE6B868", VA = "0xE6B868")]
		public Result()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xE6B870", Offset = "0xE6B870", VA = "0xE6B870")]
		public Result(bool rIsSuccessful, int rStatusCode = 0, string rError = "")
		{
		}

		[Token(Token = "0x6001F78")]
		public void Translate<T>(Result<T> result)
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class Result<T>
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isSuccessful;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T payload;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int statusCode;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string error;

		[Token(Token = "0x6001F79")]
		public Result()
		{
		}

		[Token(Token = "0x6001F7A")]
		public Result(bool rIsSuccessful, T rPayload, int rStatusCode = 0, string rError = "")
		{
		}

		[Token(Token = "0x6001F7B")]
		public Result(Result result, [Optional] T rPayload)
		{
		}

		[Token(Token = "0x6001F7C")]
		public void Translate(Result result)
		{
		}
	}
}
namespace TBM.Services.Shared
{
	[Token(Token = "0x200044D")]
	public class PicoPlatformClient : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PicoPlatformClient instance;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformSetup platformSetup;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FoveationLevel foveationLevel;

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x12A4294", Offset = "0x12A4294", VA = "0x12A4294")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x12A4460", Offset = "0x12A4460", VA = "0x12A4460")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x12A4524", Offset = "0x12A4524", VA = "0x12A4524")]
		private void CheckEntitlements()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x12A4838", Offset = "0x12A4838", VA = "0x12A4838")]
		private void InitializeServices()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x12A4A58", Offset = "0x12A4A58", VA = "0x12A4A58")]
		private void OnSetupComplete()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x12A4BB8", Offset = "0x12A4BB8", VA = "0x12A4BB8")]
		public PicoPlatformClient()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x12A4BC8", Offset = "0x12A4BC8", VA = "0x12A4BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4EF88", Offset = "0xB4EF88")]
		private void <InitializeServices>b__6_0(Pico.Platform.Message<Pico.Platform.PlatformInitializeResult> m)
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class QiyuPlatformClient : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static QiyuPlatformClient instance;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformSetup platformSetup;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x12A4CF0", Offset = "0x12A4CF0", VA = "0x12A4CF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x12A4DB4", Offset = "0x12A4DB4", VA = "0x12A4DB4")]
		private void OnSetupComplete()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x12A4EE8", Offset = "0x12A4EE8", VA = "0x12A4EE8")]
		public QiyuPlatformClient()
		{
		}
	}
}
namespace TBM.Utilities
{
	[Token(Token = "0x200044F")]
	public class PS4FileIOWrapper : ISerialize
	{
		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x12A6420", Offset = "0x12A6420", VA = "0x12A6420", Slot = "4")]
		public string SerializeToString(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x12A6488", Offset = "0x12A6488", VA = "0x12A6488", Slot = "5")]
		public byte[] SerializeToBytes(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001F89")]
		public T Deserialize<T>(string str)
		{
			return (T)null;
		}

		[Token(Token = "0x6001F8A")]
		public T Deserialize<T>(byte[] bytes)
		{
			return (T)null;
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x12A64DC", Offset = "0x12A64DC", VA = "0x12A64DC")]
		public LocalUser DeserializeUser(byte[] user)
		{
			return null;
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x12A6530", Offset = "0x12A6530", VA = "0x12A6530")]
		public LocalUser DeserializeUser(string user)
		{
			return null;
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x12A64A0", Offset = "0x12A64A0", VA = "0x12A64A0")]
		private byte[] StringToBytes(string input)
		{
			return null;
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x12A64F4", Offset = "0x12A64F4", VA = "0x12A64F4")]
		private string BytesToString(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x12A65A0", Offset = "0x12A65A0", VA = "0x12A65A0")]
		public PS4FileIOWrapper()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public static class VersionAssistant
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VersionInfo _version;

		[Token(Token = "0x17000297")]
		public static VersionInfo Version
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xCAC1A0", Offset = "0xCAC1A0", VA = "0xCAC1A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xCAC314", Offset = "0xCAC314", VA = "0xCAC314")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000451")]
	public class VersionInfo
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string compact;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string time;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mode;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlatformTarget platformTarget;

		[Token(Token = "0x17000298")]
		public string extended
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xCAC368", Offset = "0xCAC368", VA = "0xCAC368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xCAC3BC", Offset = "0xCAC3BC", VA = "0xCAC3BC")]
		public string GetMode()
		{
			return null;
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xCAC30C", Offset = "0xCAC30C", VA = "0xCAC30C")]
		public VersionInfo()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class AotCompilation
	{
		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x12A4EF0", Offset = "0x12A4EF0", VA = "0x12A4EF0")]
		public void AotCompilationRequired()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x12A5064", Offset = "0x12A5064", VA = "0x12A5064")]
		public AotCompilation()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public static class FileIO
	{
		[Serializable]
		[Token(Token = "0x2000875")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353A8", Offset = "0xB353A8")]
		private sealed class <>c__11<T>
		{
			[Token(Token = "0x400314A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__11<T> <>9;

			[Token(Token = "0x400314B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<char, bool> <>9__11_0;

			[Token(Token = "0x6003330")]
			public <>c__11()
			{
			}

			[Token(Token = "0x6003331")]
			internal bool <Deserialize>b__11_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ISerialize _serializerInterface;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFile _fileInterface;

		[Token(Token = "0x17000299")]
		private static ISerialize SerializerInterface
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x12A5920", Offset = "0x12A5920", VA = "0x12A5920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private static IFile FileInterface
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x12A59A0", Offset = "0x12A59A0", VA = "0x12A59A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x12A5A20", Offset = "0x12A5A20", VA = "0x12A5A20")]
		public static string SerializeToString(object obj, bool secure = false)
		{
			return null;
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x12A1864", Offset = "0x12A1864", VA = "0x12A1864")]
		public static byte[] SerializeToBytes(object obj, bool secure = false)
		{
			return null;
		}

		[Token(Token = "0x6001F9B")]
		public static List<string> SerializeListToString<T>(List<T> objs)
		{
			return null;
		}

		[Token(Token = "0x6001F9C")]
		public static List<byte[]> SerializeListToBytes<T>(List<T> objs)
		{
			return null;
		}

		[Token(Token = "0x6001F9D")]
		public static T Deserialize<T>(string file, bool isSecure = false)
		{
			return (T)null;
		}

		[Token(Token = "0x6001F9E")]
		public static T Deserialize<T>(byte[] bytes, bool isSecure = false)
		{
			return (T)null;
		}

		[Token(Token = "0x6001F9F")]
		public static Result<T> DeserializeWithResult<T>(byte[] bytes, bool isSecure = false)
		{
			return null;
		}

		[Token(Token = "0x6001FA0")]
		public static List<T> DeserializeList<T>(List<string> files)
		{
			return null;
		}

		[Token(Token = "0x6001FA1")]
		public static List<T> DeserializeList<T>(List<byte[]> bytes)
		{
			return null;
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x129EE6C", Offset = "0x129EE6C", VA = "0x129EE6C")]
		public static void WriteToDisk(string file, string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1299D5C", Offset = "0x1299D5C", VA = "0x1299D5C")]
		public static void WriteToDisk(byte[] file, string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FA4")]
		public static T ReadFromDisk<T>(string fileName, string customPath = "") where T : class
		{
			return null;
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x12A5B00", Offset = "0x12A5B00", VA = "0x12A5B00")]
		public static byte[] ReadBytesFromDisk(string fileName, string customPath = "")
		{
			return null;
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x12A5BCC", Offset = "0x12A5BCC", VA = "0x12A5BCC")]
		public static string GetSaveLocationPrefix()
		{
			return null;
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x129A1EC", Offset = "0x129A1EC", VA = "0x129A1EC")]
		public static bool FileExists(string fileName, string customPath = "")
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x129A3D8", Offset = "0x129A3D8", VA = "0x129A3D8")]
		public static void DeleteFile(string fileName, string customPath = "")
		{
		}
	}
	[Token(Token = "0x2000454")]
	public interface IFile
	{
		[Token(Token = "0x6001FA9")]
		void WriteToDisk(string file, string fileName, string customPath = "");

		[Token(Token = "0x6001FAA")]
		void WriteToDisk(byte[] file, string fileName, string customPath = "");

		[Token(Token = "0x6001FAB")]
		T ReadFromDisk<T>(string fileName, string customPath = "") where T : class;

		[Token(Token = "0x6001FAC")]
		byte[] ReadBytesFromDisk(string fileName, string customPath = "");

		[Token(Token = "0x6001FAD")]
		string ReadStringFromDisk(string fileName, string customPath = "");

		[Token(Token = "0x6001FAE")]
		string GetSaveLocationPrefix();

		[Token(Token = "0x6001FAF")]
		bool CheckFileExists(string fileName, string customPath = "");

		[Token(Token = "0x6001FB0")]
		void DeleteFile(string fileName, string customPath = "");
	}
	[Token(Token = "0x2000455")]
	public interface ISerialize
	{
		[Token(Token = "0x6001FB1")]
		string SerializeToString(object obj);

		[Token(Token = "0x6001FB2")]
		byte[] SerializeToBytes(object obj);

		[Token(Token = "0x6001FB3")]
		T Deserialize<T>(string str);

		[Token(Token = "0x6001FB4")]
		T Deserialize<T>(byte[] bytes);
	}
	[Token(Token = "0x2000456")]
	public class FastJsonWrapper : ISerialize
	{
		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x12A5828", Offset = "0x12A5828", VA = "0x12A5828", Slot = "4")]
		public string SerializeToString(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x12A5890", Offset = "0x12A5890", VA = "0x12A5890", Slot = "5")]
		public byte[] SerializeToBytes(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001FB7")]
		public T Deserialize<T>(string str)
		{
			return (T)null;
		}

		[Token(Token = "0x6001FB8")]
		public T Deserialize<T>(byte[] bytes)
		{
			return (T)null;
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x12A58A8", Offset = "0x12A58A8", VA = "0x12A58A8")]
		private byte[] StringToBytes(string input)
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x12A58E4", Offset = "0x12A58E4", VA = "0x12A58E4")]
		private string BytesToString(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x12A505C", Offset = "0x12A505C", VA = "0x12A505C")]
		public FastJsonWrapper()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class PlayerPrefsWrapper : IFile
	{
		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x12A7DA0", Offset = "0x12A7DA0", VA = "0x12A7DA0", Slot = "4")]
		public void WriteToDisk(string file, string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x12A7DAC", Offset = "0x12A7DAC", VA = "0x12A7DAC", Slot = "5")]
		public void WriteToDisk(byte[] file, string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FBE")]
		public T ReadFromDisk<T>(string fileName, string customPath = "") where T : class
		{
			return null;
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x12A7E14", Offset = "0x12A7E14", VA = "0x12A7E14", Slot = "7")]
		public byte[] ReadBytesFromDisk(string fileName, string customPath = "")
		{
			return null;
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x12A7E74", Offset = "0x12A7E74", VA = "0x12A7E74", Slot = "8")]
		public string ReadStringFromDisk(string fileName, string customPath = "")
		{
			return null;
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x12A7ED4", Offset = "0x12A7ED4", VA = "0x12A7ED4", Slot = "9")]
		public string GetSaveLocationPrefix()
		{
			return null;
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x12A7F1C", Offset = "0x12A7F1C", VA = "0x12A7F1C", Slot = "10")]
		public bool CheckFileExists(string fileName, string customPath = "")
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x12A7F28", Offset = "0x12A7F28", VA = "0x12A7F28", Slot = "11")]
		public void DeleteFile(string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x12A7F68", Offset = "0x12A7F68", VA = "0x12A7F68")]
		private byte[] ByteFromString(string input)
		{
			return null;
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x12A7DD8", Offset = "0x12A7DD8", VA = "0x12A7DD8")]
		private string StringFromBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x12A7FA4", Offset = "0x12A7FA4", VA = "0x12A7FA4")]
		public PlayerPrefsWrapper()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class SystemIoWrapper : IFile
	{
		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _saveLocationPrefix;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xCABD08", Offset = "0xCABD08", VA = "0xCABD08", Slot = "5")]
		public void WriteToDisk(byte[] bytes, string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xCABE60", Offset = "0xCABE60", VA = "0xCABE60", Slot = "4")]
		public void WriteToDisk(string str, string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FC9")]
		public T ReadFromDisk<T>(string fileName, string customPath = "") where T : class
		{
			return null;
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xCABF28", Offset = "0xCABF28", VA = "0xCABF28", Slot = "8")]
		public string ReadStringFromDisk(string fileName, string customPath = "")
		{
			return null;
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xCABFB8", Offset = "0xCABFB8", VA = "0xCABFB8", Slot = "7")]
		public byte[] ReadBytesFromDisk(string fileName, string customPath = "")
		{
			return null;
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xCABDD0", Offset = "0xCABDD0", VA = "0xCABDD0", Slot = "9")]
		public string GetSaveLocationPrefix()
		{
			return null;
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xCAC048", Offset = "0xCAC048", VA = "0xCAC048", Slot = "10")]
		public bool CheckFileExists(string fileName, string customPath = "")
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xCAC0D8", Offset = "0xCAC0D8", VA = "0xCAC0D8", Slot = "11")]
		public void DeleteFile(string fileName, string customPath = "")
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xCAC198", Offset = "0xCAC198", VA = "0xCAC198")]
		public SystemIoWrapper()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class MainThreadDispatcher : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000876")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353B8", Offset = "0xB353B8")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400314C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x400314D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6003332")]
			[Address(RVA = "0x12A61DC", Offset = "0x12A61DC", VA = "0x12A61DC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003333")]
			[Address(RVA = "0x12A6324", Offset = "0x12A6324", VA = "0x12A6324")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000877")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353C8", Offset = "0xB353C8")]
		private sealed class <ActionWrapper>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400314E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400314F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000549")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003337")]
				[Address(RVA = "0x12A63B0", Offset = "0x12A63B0", VA = "0x12A63B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003339")]
				[Address(RVA = "0x12A6418", Offset = "0x12A6418", VA = "0x12A6418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003334")]
			[Address(RVA = "0x12A627C", Offset = "0x12A627C", VA = "0x12A627C")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003335")]
			[Address(RVA = "0x12A6348", Offset = "0x12A6348", VA = "0x12A6348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003336")]
			[Address(RVA = "0x12A634C", Offset = "0x12A634C", VA = "0x12A634C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003338")]
			[Address(RVA = "0x12A63B8", Offset = "0x12A63B8", VA = "0x12A63B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353D8", Offset = "0xB353D8")]
		private sealed class <ActionWrapper>d__14<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4003152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4003153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4003154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600333D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600333F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600333A")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600333B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600333C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600333E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000879")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353E8", Offset = "0xB353E8")]
		private sealed class <ActionWrapper>d__15<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4003156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4003157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4003158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4003159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003343")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003345")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003340")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003341")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003342")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003344")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353F8", Offset = "0xB353F8")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400315A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400315B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400315C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x400315D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x400315E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x400315F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003349")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600334B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003346")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003347")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003348")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600334A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35408", Offset = "0xB35408")]
		private sealed class <ActionWrapper>d__17<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4003161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4003162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4003163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4003164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4003165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4003166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600334F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003351")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600334C")]
			[DebuggerHidden]
			public <ActionWrapper>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600334D")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600334E")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003350")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> _ACTIONS;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MainThreadDispatcher instance;

		[Token(Token = "0x1700029B")]
		public static MainThreadDispatcher Instance
		{
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x12A5C80", Offset = "0x12A5C80", VA = "0x12A5C80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x12A5D80", Offset = "0x12A5D80", VA = "0x12A5D80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x12A5E94", Offset = "0x12A5E94", VA = "0x12A5E94")]
		public void Update()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x12A5FFC", Offset = "0x12A5FFC", VA = "0x12A5FFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x12A6064", Offset = "0x12A6064", VA = "0x12A6064")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x12A61E4", Offset = "0x12A61E4", VA = "0x12A61E4")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001FD6")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001FD7")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001FD8")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6001FD9")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x12A620C", Offset = "0x12A620C", VA = "0x12A620C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4EF98", Offset = "0xB4EF98")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001FDB")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4EFFC", Offset = "0xB4EFFC")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6001FDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F060", Offset = "0xB4F060")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6001FDD")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F0C4", Offset = "0xB4F0C4")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6001FDE")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F128", Offset = "0xB4F128")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x12A62A8", Offset = "0x12A62A8", VA = "0x12A62A8")]
		public MainThreadDispatcher()
		{
		}
	}
}
namespace TBM.Utilities.Shared
{
	[Token(Token = "0x200045A")]
	public class SystemInfoCheck : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xCABC2C", Offset = "0xCABC2C", VA = "0xCABC2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xCABCEC", Offset = "0xCABCEC", VA = "0xCABCEC")]
		public SystemInfoCheck()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public static class UtilityConstants
	{
		[Token(Token = "0x4001ADF")]
		public const int MINIMUM_VRAM = 3072;

		[Token(Token = "0x4001AE0")]
		public const TextureResolution DEFAULT_LOW_MEM_RES = TextureResolution.Half;

		[Token(Token = "0x4001AE1")]
		public const string PLATFORM_PACKAGE_PREFIX = "PlatformPackage_";

		[Token(Token = "0x4001AE2")]
		public const string DEVICE_PACKAGE_PREFIX = "DevicePackage_";

		[Token(Token = "0x4001AE3")]
		public const string QUALITY_PACKAGE_PREFIX = "QualityLevelPackage_";

		[Token(Token = "0x4001AE4")]
		public const string CUSTOM_QUALITY_PACKAGE = "QualityLevelPackage_Custom";

		[Token(Token = "0x4001AE5")]
		public const string SHADOW_PRESET_PACKAGE_PREFIX = "ShadowPresetPackage_";

		[Token(Token = "0x4001AE6")]
		public const string PATCH_NOTES_PACKAGE_PREFIX = "PatchNotesInfo_";

		[Token(Token = "0x4001AE7")]
		public const string PATCH_NOTES_SEEN = "PatchNotes_Seen";
	}
	[Token(Token = "0x200045C")]
	public enum ReleaseType
	{
		[Token(Token = "0x4001AE9")]
		Experimental,
		[Token(Token = "0x4001AEA")]
		Progress,
		[Token(Token = "0x4001AEB")]
		Alpha,
		[Token(Token = "0x4001AEC")]
		Beta,
		[Token(Token = "0x4001AED")]
		ReleaseCandidate,
		[Token(Token = "0x4001AEE")]
		Production
	}
	[Token(Token = "0x200045D")]
	public enum PlatformTarget
	{
		[Token(Token = "0x4001AF0")]
		Standard,
		[Token(Token = "0x4001AF1")]
		Oculus_Mobile,
		[Token(Token = "0x4001AF2")]
		Oculus_PC,
		[Token(Token = "0x4001AF3")]
		Steam,
		[Token(Token = "0x4001AF4")]
		Daydream_Mobile,
		[Token(Token = "0x4001AF5")]
		Oculus_Mobile_Demo,
		[Token(Token = "0x4001AF6")]
		PS4,
		[Token(Token = "0x4001AF7")]
		Xiaomi,
		[Token(Token = "0x4001AF8")]
		Oculus_Standalone,
		[Token(Token = "0x4001AF9")]
		Viveport,
		[Token(Token = "0x4001AFA")]
		Pico,
		[Token(Token = "0x4001AFB")]
		Qiyu
	}
	[Token(Token = "0x200045E")]
	public enum ActiveDevice
	{
		[Token(Token = "0x4001AFD")]
		None,
		[Token(Token = "0x4001AFE")]
		Gear,
		[Token(Token = "0x4001AFF")]
		Go,
		[Token(Token = "0x4001B00")]
		Rift,
		[Token(Token = "0x4001B01")]
		Vive,
		[Token(Token = "0x4001B02")]
		PSVR,
		[Token(Token = "0x4001B03")]
		Quest,
		[Token(Token = "0x4001B04")]
		Quest_2,
		[Token(Token = "0x4001B05")]
		Pico,
		[Token(Token = "0x4001B06")]
		Qiyu
	}
	[Token(Token = "0x200045F")]
	public enum BasicInputType
	{
		[Token(Token = "0x4001B08")]
		General,
		[Token(Token = "0x4001B09")]
		Vive
	}
	[Token(Token = "0x2000460")]
	public enum ResourcesPrefix
	{
		[Token(Token = "0x4001B0B")]
		Mobile,
		[Token(Token = "0x4001B0C")]
		PC
	}
	[Token(Token = "0x2000461")]
	public class ViveportClient : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ViveportClient instance;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _viveportId;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _viveportKey;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlatformSetup platformSetup;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool isInit;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool isReady;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject errorMessagePanel;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int quitTime;

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xCABCF4", Offset = "0xCABCF4", VA = "0xCABCF4")]
		public ViveportClient()
		{
		}
	}
}
namespace TBM.Utilities.Quality.Public
{
	[Token(Token = "0x2000462")]
	public static class QualityConstants
	{
		[Token(Token = "0x4001B15")]
		public const float MIN_EYE_BUFFER = 0.8f;

		[Token(Token = "0x4001B16")]
		public const float MAX_EYE_BUFFER = 2f;

		[Token(Token = "0x1700029C")]
		public static QualityLevel DEFAULT_QUALITY_LEVEL
		{
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x129C0C0", Offset = "0x129C0C0", VA = "0x129C0C0")]
			get
			{
				return default(QualityLevel);
			}
		}
	}
	[Token(Token = "0x2000463")]
	public class SupportedResolution
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int width;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int height;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xCABA4C", Offset = "0xCABA4C", VA = "0xCABA4C")]
		public SupportedResolution(int w, int h)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xCABA84", Offset = "0xCABA84", VA = "0xCABA84")]
		public bool IsSameAs(SupportedResolution other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xCABAC0", Offset = "0xCABAC0", VA = "0xCABAC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000464")]
	public enum QualityLevel
	{
		[Token(Token = "0x4001B1A")]
		Mobile,
		[Token(Token = "0x4001B1B")]
		Low,
		[Token(Token = "0x4001B1C")]
		Medium,
		[Token(Token = "0x4001B1D")]
		High,
		[Token(Token = "0x4001B1E")]
		Ultra,
		[Token(Token = "0x4001B1F")]
		Custom,
		[Token(Token = "0x4001B20")]
		Preset,
		[Token(Token = "0x4001B21")]
		Override
	}
	[Token(Token = "0x2000465")]
	public enum ShadowQualityLevel
	{
		[Token(Token = "0x4001B23")]
		Off,
		[Token(Token = "0x4001B24")]
		Low,
		[Token(Token = "0x4001B25")]
		Medium,
		[Token(Token = "0x4001B26")]
		High,
		[Token(Token = "0x4001B27")]
		Ultra,
		[Token(Token = "0x4001B28")]
		Lobby
	}
	[Token(Token = "0x2000466")]
	public enum ViewDistanceLevel
	{
		[Token(Token = "0x4001B2A")]
		Low = 1500,
		[Token(Token = "0x4001B2B")]
		Medium = 2500,
		[Token(Token = "0x4001B2C")]
		High = 3000,
		[Token(Token = "0x4001B2D")]
		Ultra = 4000,
		[Token(Token = "0x4001B2E")]
		Lowish = 2000,
		[Token(Token = "0x4001B2F")]
		Lower = 1400
	}
	[Token(Token = "0x2000467")]
	public enum TextureResolution
	{
		[Token(Token = "0x4001B31")]
		Full,
		[Token(Token = "0x4001B32")]
		Half,
		[Token(Token = "0x4001B33")]
		Quarter
	}
	[Token(Token = "0x2000468")]
	public enum AntiAliasingLevel
	{
		[Token(Token = "0x4001B35")]
		Disabled = 0,
		[Token(Token = "0x4001B36")]
		FXAA = 1,
		[Token(Token = "0x4001B37")]
		MS2x = 2,
		[Token(Token = "0x4001B38")]
		MS4x = 4,
		[Token(Token = "0x4001B39")]
		MS8x = 8,
		[Token(Token = "0x4001B3A")]
		TAA = 5
	}
	[Token(Token = "0x2000469")]
	public enum ShadowCascades
	{
		[Token(Token = "0x4001B3C")]
		None = 0,
		[Token(Token = "0x4001B3D")]
		Two = 2,
		[Token(Token = "0x4001B3E")]
		Four = 4
	}
	[Token(Token = "0x200046A")]
	public enum Vsync
	{
		[Token(Token = "0x4001B40")]
		Disabled,
		[Token(Token = "0x4001B41")]
		Enabled,
		[Token(Token = "0x4001B42")]
		Half
	}
	[Token(Token = "0x200046B")]
	public enum FoveatedRendering
	{
		[Token(Token = "0x4001B44")]
		Disabled,
		[Token(Token = "0x4001B45")]
		Low,
		[Token(Token = "0x4001B46")]
		Medium,
		[Token(Token = "0x4001B47")]
		High
	}
	[Token(Token = "0x200046C")]
	public enum LightingSystem
	{
		[Token(Token = "0x4001B49")]
		Static,
		[Token(Token = "0x4001B4A")]
		Dynamic
	}
	[Token(Token = "0x200046D")]
	public class QualityManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _exists;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static QualityManager _instance;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private QualityLevelPackage[] _qualityPackages;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ShadowPresetPackage[] _shadowPresetPackages;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QualityLevelPackage _defaultQualityPackage;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private QualityLevelPackage _currentQualityPackage;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private QualityLevelPackage _customQualityPackage;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool lowMemDevice;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool _init;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[SerializeField]
		private bool overridingSettings;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[SerializeField]
		private bool overrideState;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool updatingSettings;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SupportedResolution _currentResolution;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SupportedResolution[] _supportedResolutions;

		[Token(Token = "0x1700029D")]
		public static QualityManager Instance
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x12A7A60", Offset = "0x12A7A60", VA = "0x12A7A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x12A802C", Offset = "0x12A802C", VA = "0x12A802C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		private QualityLevelPackage CurrentQualityPackage
		{
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x12A8098", Offset = "0x12A8098", VA = "0x12A8098")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x12A80A0", Offset = "0x12A80A0", VA = "0x12A80A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public static QualityLevelPackage Settings
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x12A80A8", Offset = "0x12A80A8", VA = "0x12A80A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		public QualityLevelPackage[] QualityPackages
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x12A9218", Offset = "0x12A9218", VA = "0x12A9218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public bool OverrideSettings
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x12A9340", Offset = "0x12A9340", VA = "0x12A9340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x12A9348", Offset = "0x12A9348", VA = "0x12A9348")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public bool OverrideState
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x12A9354", Offset = "0x12A9354", VA = "0x12A9354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x12A935C", Offset = "0x12A935C", VA = "0x12A935C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public SupportedResolution CurrentResolution
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x12AA3B0", Offset = "0x12AA3B0", VA = "0x12AA3B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x12AA494", Offset = "0x12AA494", VA = "0x12AA494")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public SupportedResolution[] SupportedResolutions
		{
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x12AA4D8", Offset = "0x12AA4D8", VA = "0x12AA4D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x12AA6F4", Offset = "0x12AA6F4", VA = "0x12AA6F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x12A8114", Offset = "0x12A8114", VA = "0x12A8114")]
		public void Init(Action<Result> callback)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x12A8C10", Offset = "0x12A8C10", VA = "0x12A8C10")]
		private void PostInit(Action<Result> callback)
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x12A8964", Offset = "0x12A8964", VA = "0x12A8964")]
		private bool CheckModel(string profileName = "")
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x12A8E08", Offset = "0x12A8E08", VA = "0x12A8E08")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x12A8A78", Offset = "0x12A8A78", VA = "0x12A8A78")]
		public QualityLevelPackage LoadQualityPackage(QualityLevel packageLevel)
		{
			return null;
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x12A8FCC", Offset = "0x12A8FCC", VA = "0x12A8FCC")]
		private QualityLevelPackage CreateQualityPackage(QualityLevel packageLevel, QualityLevelPackage packageData)
		{
			return null;
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x12A90CC", Offset = "0x12A90CC", VA = "0x12A90CC")]
		private void SaveQualityPackage(QualityLevelPackage package)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x12A9220", Offset = "0x12A9220", VA = "0x12A9220")]
		public QualityLevel GetQualityLevel()
		{
			return default(QualityLevel);
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x12A8EC0", Offset = "0x12A8EC0", VA = "0x12A8EC0")]
		public void SetQualityLevel(QualityLevel qLevel, bool attemptCustomRevert = false)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x12A923C", Offset = "0x12A923C", VA = "0x12A923C")]
		private bool CheckQualityLevelSwitch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x12A8D20", Offset = "0x12A8D20", VA = "0x12A8D20")]
		private QualityLevelPackage GetCustomQualityPackage(bool attemptRevert = false)
		{
			return null;
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x12A9368", Offset = "0x12A9368", VA = "0x12A9368")]
		public void QualityOverride()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x12A91F8", Offset = "0x12A91F8", VA = "0x12A91F8")]
		private bool CacheSetting()
		{
			return default(bool);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x12A937C", Offset = "0x12A937C", VA = "0x12A937C")]
		public void RevertToCustom()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x12A8E00", Offset = "0x12A8E00", VA = "0x12A8E00")]
		private void UpdateUnitySettings()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x12A93B4", Offset = "0x12A93B4", VA = "0x12A93B4")]
		public void SetTextureResolution(TextureResolution newResolution)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x12A94B8", Offset = "0x12A94B8", VA = "0x12A94B8")]
		public void SetAnisotropicFiltering(AnisotropicFiltering filteringMode)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x12A9544", Offset = "0x12A9544", VA = "0x12A9544")]
		public void SetAntiAliasingLevel(AntiAliasingLevel aal)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x12A95D4", Offset = "0x12A95D4", VA = "0x12A95D4")]
		public void SetShadowQuality(ShadowQualityLevel shadowQuality, bool checkLobby = true)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x12A9870", Offset = "0x12A9870", VA = "0x12A9870")]
		public void OverrideShadowQuality(ShadowQualityLevel shadowQuality)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x12A9994", Offset = "0x12A9994", VA = "0x12A9994")]
		public void SetBlendWeights(SkinWeights blendWeights)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x12A99F4", Offset = "0x12A99F4", VA = "0x12A99F4")]
		public void SetVsyncCount(Vsync count)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x12A9A84", Offset = "0x12A9A84", VA = "0x12A9A84")]
		private void SetRealtimeProbes(LightingSystem lightingSystem)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x12A8E04", Offset = "0x12A8E04", VA = "0x12A8E04")]
		private void UpdateCustomSettings()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x12A9AA4", Offset = "0x12A9AA4", VA = "0x12A9AA4")]
		public void SetTextureResScale(float newScale)
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x12A9BCC", Offset = "0x12A9BCC", VA = "0x12A9BCC")]
		public void SetGrass(bool isEnabled)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x12A9C54", Offset = "0x12A9C54", VA = "0x12A9C54")]
		public void SetGrassShadows(bool isEnabled)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x12A9CDC", Offset = "0x12A9CDC", VA = "0x12A9CDC")]
		public void SetGrassDensity(float density)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x12A9DF0", Offset = "0x12A9DF0", VA = "0x12A9DF0")]
		public void SetGrassDistance(float distance)
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x12A9E74", Offset = "0x12A9E74", VA = "0x12A9E74")]
		public void SetPlayerIndicators(bool isEnabled)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x12A9EFC", Offset = "0x12A9EFC", VA = "0x12A9EFC")]
		public void SetPlayerTrails(bool isEnabled)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x12A9F84", Offset = "0x12A9F84", VA = "0x12A9F84")]
		public void SetGoggleEffects(bool isEnabled)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x12AA00C", Offset = "0x12AA00C", VA = "0x12AA00C")]
		public void SetViewDistanceDithering(bool isEnabled)
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x12AA0DC", Offset = "0x12AA0DC", VA = "0x12AA0DC")]
		public void SetViewDistance(int viewDistance)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x12AA160", Offset = "0x12AA160", VA = "0x12AA160")]
		public void SetRefreshRate(float refreshRate)
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x12AA27C", Offset = "0x12AA27C", VA = "0x12AA27C")]
		public void SetFoveatedRendering(int foveation)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x12A7C10", Offset = "0x12A7C10", VA = "0x12A7C10")]
		public string CheckSceneOverrides(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x12AA39C", Offset = "0x12AA39C", VA = "0x12AA39C")]
		private bool GetIsFullScreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x12AA3A4", Offset = "0x12AA3A4", VA = "0x12AA3A4")]
		public void SetFullScreen(bool enable)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x12AA3DC", Offset = "0x12AA3DC", VA = "0x12AA3DC")]
		private SupportedResolution GetScreenResolution()
		{
			return null;
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x12AA49C", Offset = "0x12AA49C", VA = "0x12AA49C")]
		public void SetScreenResolution(SupportedResolution newResolution)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x12AA508", Offset = "0x12AA508", VA = "0x12AA508")]
		private void ConstructResolutionArray()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x12AA6FC", Offset = "0x12AA6FC", VA = "0x12AA6FC")]
		public QualityManager()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class QualityToggle : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200087C")]
		public enum QualityToggleable
		{
			[Token(Token = "0x4003168")]
			Grass,
			[Token(Token = "0x4003169")]
			Trails,
			[Token(Token = "0x400316A")]
			Helmet
		}

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QualityToggleable toggleable;

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x12AA708", Offset = "0x12AA708", VA = "0x12AA708")]
		private void Start()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x12AA84C", Offset = "0x12AA84C", VA = "0x12AA84C")]
		public QualityToggle()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public static class QualityValidation
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static QualityLevelPackage _customObj;

		[Token(Token = "0x170002A5")]
		private static QualityLevelPackage Cache
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0xCAB728", Offset = "0xCAB728", VA = "0xCAB728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xCAB800", Offset = "0xCAB800", VA = "0xCAB800")]
		public static void Validate(Action<Result> callback)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xCAB91C", Offset = "0xCAB91C", VA = "0xCAB91C")]
		private static void ValidateQualitySettings()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class ViewDistance : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Camera mainCamera;

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xCABB58", Offset = "0xCABB58", VA = "0xCABB58")]
		private void Start()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xCABC24", Offset = "0xCABC24", VA = "0xCABC24")]
		public ViewDistance()
		{
		}
	}
}
namespace TBM.Utilities.Quality.Core
{
	[Token(Token = "0x2000471")]
	public class QualityLevelPackage : ScriptableObject
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QualityLevel qualityLevel;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int versionNumber;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E6AC", Offset = "0xB3E6AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3E6AC", Offset = "0xB3E6AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E6AC", Offset = "0xB3E6AC")]
		public float eyeBufferRes;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool grass;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool grassShadows;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E718", Offset = "0xB3E718")]
		public float grassDensity;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E730", Offset = "0xB3E730")]
		public float grassDistance;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playerIndicators;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool playerTrails;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool goggleEffects;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool viewDistanceDithering;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ViewDistanceLevel viewDistance;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E748", Offset = "0xB3E748")]
		public float refreshRate;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FoveatedRendering foveatedRendering;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3E780", Offset = "0xB3E780")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E780", Offset = "0xB3E780")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3E780", Offset = "0xB3E780")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E780", Offset = "0xB3E780")]
		public TextureResolution textureResolution;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AnisotropicFiltering anisotropicFiltering;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AntiAliasingLevel antiAliasing;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3E814", Offset = "0xB3E814")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E814", Offset = "0xB3E814")]
		public ShadowPresetPackage shadowPreset;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3E864", Offset = "0xB3E864")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E864", Offset = "0xB3E864")]
		public LightingSystem lightingSystem;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB3E8B4", Offset = "0xB3E8B4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E8B4", Offset = "0xB3E8B4")]
		public SkinWeights blendWeights;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vsync vsync;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lodBias;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int maxLODLevel;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int particleRaycastBudget;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SceneOverride[] sceneOverrides;

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x12A7FAC", Offset = "0x12A7FAC", VA = "0x12A7FAC")]
		public QualityLevelPackage Clone()
		{
			return null;
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x12A801C", Offset = "0x12A801C", VA = "0x12A801C")]
		public QualityLevelPackage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000472")]
	public struct SceneOverride
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string originalScene;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string overrideScene;
	}
	[Token(Token = "0x2000473")]
	public class ShadowPresetPackage : ScriptableObject
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShadowQualityLevel qualityLevel;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ShadowQuality quality;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShadowResolution resolution;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ShadowProjection projection;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int distance;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ShadowmaskMode maskMode;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int nearPlaneOffset;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ShadowCascades cascades;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E904", Offset = "0xB3E904")]
		public float[] cascadeSplit;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x12A8024", Offset = "0x12A8024", VA = "0x12A8024")]
		public ShadowPresetPackage()
		{
		}
	}
}
namespace TBM.Utilities.Platform.Public
{
	[Token(Token = "0x2000474")]
	public class PlatformManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager _instance;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlatformPackage _buildPlatform;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformPackage _activePlatform;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<PlatformPackage> platformPackages;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<DevicePackage> devicePackages;

		[Token(Token = "0x170002A6")]
		public static PlatformManager instance
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x12A6CF8", Offset = "0x12A6CF8", VA = "0x12A6CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202E")]
			[Address(RVA = "0x12A736C", Offset = "0x12A736C", VA = "0x12A736C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public PlatformPackage activePlatform
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x12A73C0", Offset = "0x12A73C0", VA = "0x12A73C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002030")]
			[Address(RVA = "0x12A747C", Offset = "0x12A747C", VA = "0x12A747C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x12A72B4", Offset = "0x12A72B4", VA = "0x12A72B4")]
		private void Init()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x12A7484", Offset = "0x12A7484", VA = "0x12A7484")]
		public void SetPackage()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x12A6E38", Offset = "0x12A6E38", VA = "0x12A6E38")]
		public DevicePackage GetDevicePackage()
		{
			return null;
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x12A7894", Offset = "0x12A7894", VA = "0x12A7894")]
		public string GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x12A7904", Offset = "0x12A7904", VA = "0x12A7904")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public static class PlatformSceneManager
	{
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x12A790C", Offset = "0x12A790C", VA = "0x12A790C")]
		public static string GetSceneName(string sceneToLoad, int version = -1, string suffix = "")
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x12A79F0", Offset = "0x12A79F0", VA = "0x12A79F0")]
		private static string CheckOverride(string sceneToLoad)
		{
			return null;
		}
	}
}
namespace TBM.Utilities.Platform.Core
{
	[Token(Token = "0x2000476")]
	public class DevicePackage : ScriptableObject
	{
		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ActiveDevice target;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QualityLevelPackage defaultQuality;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] model;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool handsSupported;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool nubSupported;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BasicInputType basicInputType;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRHand leftHand;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRHand rightHand;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IVRHead head;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IBasicInput basicInput;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IHandHaptics haptics;

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x12A65A8", Offset = "0x12A65A8", VA = "0x12A65A8")]
		public void Init()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x12A6AA4", Offset = "0x12A6AA4", VA = "0x12A6AA4")]
		public IBasicInput GetBasicInput()
		{
			return null;
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x12A6AAC", Offset = "0x12A6AAC", VA = "0x12A6AAC")]
		public void GetInputs(out VRHand vLeft, out VRHand vRight, out IVRHead vHead)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x12A6AC8", Offset = "0x12A6AC8", VA = "0x12A6AC8")]
		public void GetInputs(out IVRNub vNub)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x12A6B44", Offset = "0x12A6B44", VA = "0x12A6B44")]
		public bool CheckModelExplicit(string modelName)
		{
			return default(bool);
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x12A6BD0", Offset = "0x12A6BD0", VA = "0x12A6BD0")]
		public bool CheckModel(string modelName)
		{
			return default(bool);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x12A6C5C", Offset = "0x12A6C5C", VA = "0x12A6C5C")]
		public DevicePackage()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class PlatformPackage : ScriptableObject
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformTarget target;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string define;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DevicePackage _activeDevice;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DevicePackage defaultDevice;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3E940", Offset = "0xB3E940")]
		public QualityLevelPackage defaultQuality;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LightingSystem lightingSystem;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ResourcesPrefix resourcesSuffix;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool lowMemoryDetection;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string titleTag;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string tutorialTag;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string lobbyTag;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string mapTag;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string shortString;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string playerTag;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string friendTag;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int playerCount;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool hasRoomScale;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IRoomControl roomControl;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IRoomMatchmake roomMatchmake;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IRoomInvite roomInviter;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ILaunchChecker launchChecker;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public IVOIP voipWrapper;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3E978", Offset = "0xB3E978")]
		public string[] sceneList;

		[Token(Token = "0x170002A8")]
		public DevicePackage activeDevice
		{
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x12A6C64", Offset = "0x12A6C64", VA = "0x12A6C64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x12A7058", Offset = "0x12A7058", VA = "0x12A7058")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public string ResourcesSuffix
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x12A7060", Offset = "0x12A7060", VA = "0x12A7060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x12A70E0", Offset = "0x12A70E0", VA = "0x12A70E0")]
		public void Init()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x12A7164", Offset = "0x12A7164", VA = "0x12A7164")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x12A7218", Offset = "0x12A7218", VA = "0x12A7218")]
		public PlatformPackage()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class QualityPackage : ScriptableObject
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] model;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QualityLevel defaultQualityLevel;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float textureResScale;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool grassEnabled;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool grassShadows;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3E9B0", Offset = "0xB3E9B0")]
		public float grassDensity;

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x12A7220", Offset = "0x12A7220", VA = "0x12A7220")]
		public bool CheckModel(string modelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x12A72AC", Offset = "0x12A72AC", VA = "0x12A72AC")]
		public QualityPackage()
		{
		}
	}
}
namespace TBM.Utilities.Camera
{
	[Token(Token = "0x2000479")]
	public class CameraManager
	{
		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Transform currentGameCamera;

		[Token(Token = "0x140000B3")]
		public static event Action<Transform, Transform> OnGameCameraEnable
		{
			[Token(Token = "0x6002047")]
			[Address(RVA = "0x12A506C", Offset = "0x12A506C", VA = "0x12A506C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F18C", Offset = "0xB4F18C")]
			add
			{
			}
			[Token(Token = "0x6002048")]
			[Address(RVA = "0x12A5120", Offset = "0x12A5120", VA = "0x12A5120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F19C", Offset = "0xB4F19C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B4")]
		public static event Action<Transform, Transform> OnGameCameraDisable
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x12A51D4", Offset = "0x12A51D4", VA = "0x12A51D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F1AC", Offset = "0xB4F1AC")]
			add
			{
			}
			[Token(Token = "0x600204A")]
			[Address(RVA = "0x12A528C", Offset = "0x12A528C", VA = "0x12A528C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F1BC", Offset = "0xB4F1BC")]
			remove
			{
			}
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x12A5344", Offset = "0x12A5344", VA = "0x12A5344")]
		public static void GameCameraEnabled(Transform cameraTransform, [Optional] Transform parentTransform)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x12A54CC", Offset = "0x12A54CC", VA = "0x12A54CC")]
		public static void GameCameraDisabled(Transform cameraTransform, [Optional] Transform parentTransform)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x12A564C", Offset = "0x12A564C", VA = "0x12A564C")]
		public CameraManager()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class GameCamera : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200087D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35418", Offset = "0xB35418")]
		private sealed class <Enable>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400316B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400316C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400316D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameCamera <>4__this;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003355")]
				[Address(RVA = "0x12A57B8", Offset = "0x12A57B8", VA = "0x12A57B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003357")]
				[Address(RVA = "0x12A5820", Offset = "0x12A5820", VA = "0x12A5820", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003352")]
			[Address(RVA = "0x12A56F0", Offset = "0x12A56F0", VA = "0x12A56F0")]
			[DebuggerHidden]
			public <Enable>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6003353")]
			[Address(RVA = "0x12A574C", Offset = "0x12A574C", VA = "0x12A574C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003354")]
			[Address(RVA = "0x12A5750", Offset = "0x12A5750", VA = "0x12A5750", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003356")]
			[Address(RVA = "0x12A57C0", Offset = "0x12A57C0", VA = "0x12A57C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _parent;

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x12A5654", Offset = "0x12A5654", VA = "0x12A5654")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x12A5680", Offset = "0x12A5680", VA = "0x12A5680")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F1CC", Offset = "0xB4F1CC")]
		private IEnumerator Enable()
		{
			return null;
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x12A571C", Offset = "0x12A571C", VA = "0x12A571C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x12A5744", Offset = "0x12A5744", VA = "0x12A5744")]
		public GameCamera()
		{
		}
	}
}
namespace TBM.DataStore
{
	[Token(Token = "0x200047B")]
	public static class DataConstants
	{
		[Token(Token = "0x200087E")]
		public enum ErrorCode
		{
			[Token(Token = "0x400316F")]
			UNKNOWN = 0,
			[Token(Token = "0x4003170")]
			NOT_INITIALIZED = 7,
			[Token(Token = "0x4003171")]
			FILE_CORRUPTED = 400,
			[Token(Token = "0x4003172")]
			FILE_NOT_FOUND = 404,
			[Token(Token = "0x4003173")]
			REQUEST_NULL = 500,
			[Token(Token = "0x4003174")]
			TIMEOUT = 408,
			[Token(Token = "0x4003175")]
			OVERFLOW = 469
		}

		[Token(Token = "0x4001BB1")]
		public const string DEFAULT_USER_FILE = "LocalUser";

		[Token(Token = "0x4001BB2")]
		public const string LOCAL_BACKUP_FILE = "LocalUser_BACKUP";

		[Token(Token = "0x4001BB3")]
		public const string REMOTE_BACKUP_FILE = "_BACKUP";

		[Token(Token = "0x4001BB4")]
		public const string LOCAL_DIRECTORY = "SavedData";

		[Token(Token = "0x4001BB5")]
		public const string BACKUP_DIRECTORY = "SavedData_Backup";

		[Token(Token = "0x4001BB6")]
		public const string DEFAULT_USERNAME = "User";

		[Token(Token = "0x4001BB7")]
		public const string DEFAULT_USER_ID = "UNSET";

		[Token(Token = "0x4001BB8")]
		public const int DEFAULT_TOTAL_POINTS = 0;

		[Token(Token = "0x4001BB9")]
		public const string MOLTEN_TROPICS_LABEL_EU = "RUSHVREU0120MDLC";

		[Token(Token = "0x4001BBA")]
		public const string MOLTEN_TROPICS_LABEL_US = "RUSHVRUS0120MDLC";

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<MapData> DEFAULT_SCORES;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<MapData> DEBUG_SCORES;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly List<MapPoints> DEFAULT_POINTS;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly List<MapCollectables> DEFAULT_COLLECTABLES;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly List<MapCollectables> DEBUG_COLLECTABLES;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly List<int> DEFAULT_COLLECTABLES_BEST_RUN;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly List<int> DEBUG_COLLECTABLES_BEST_RUN;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly List<MapPoints> DEBUG_POINTS;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly List<List<SkinData>> DEFAULT_SKINS;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly List<List<SkinData>> DEBUG_SKINS;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly SkinPair DEFAULT_SKIN;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly List<int> GHOST_MODES;

		[Token(Token = "0x4001BC7")]
		public const int MAP_COUNT = 5;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static float STATIC_RAIN_INTENSITY;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static float STATIC_SNOW_INTENSITY;

		[Token(Token = "0x4001BCA")]
		public const string DISCONNECT_ROOM_FULL = "Room Full";

		[Token(Token = "0x4001BCB")]
		public const string WATER_COLLISION_TAG = "Water";

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static List<Vector2> adventureIndexes;

		[Token(Token = "0x4001BCD")]
		public const string OVR_USER_SAVE_BUCKET_NAME = "RUSH_RIFT_PLAYER_DATA";

		[Token(Token = "0x4001BCE")]
		public const string SERVER_URL = "https://tbm-rush-assets.s3.amazonaws.com/ai-paths/";

		[Token(Token = "0x4001BCF")]
		public const string USER_POOL_ID = "ap-southeast-2:fe423f3e-4620-4f86-b3e1-0e9d31499ef3";

		[Token(Token = "0x4001BD0")]
		public const string DATA_BUCKET_NAME = "tbm-rush-assets";

		[Token(Token = "0x170002AA")]
		public static UserPrefs DEFAULT_PREFS
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x1299058", Offset = "0x1299058", VA = "0x1299058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public static LocalUser DEFAULT_USER
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x129BE9C", Offset = "0x129BE9C", VA = "0x129BE9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		public static int MAX_PLAYER_COUNT
		{
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x129C0F8", Offset = "0x129C0F8", VA = "0x129C0F8")]
			get
			{
				return default(int);
			}
		}
	}
	[Token(Token = "0x200047C")]
	public enum GameMode
	{
		[Token(Token = "0x4001BD2")]
		Race,
		[Token(Token = "0x4001BD3")]
		TimeAttack,
		[Token(Token = "0x4001BD4")]
		ScoreChallenge,
		[Token(Token = "0x4001BD5")]
		Adventure
	}
	[Token(Token = "0x200047D")]
	public class MapData
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<GameMode, List<float>> Data;

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1298ED8", Offset = "0x1298ED8", VA = "0x1298ED8")]
		public MapData()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x129ECE8", Offset = "0x129ECE8", VA = "0x129ECE8")]
		public MapData(Dictionary<GameMode, List<float>> mapData)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1298050", Offset = "0x1298050", VA = "0x1298050")]
		public void Merge(MapData remoteMapData)
		{
		}
	}
	[Token(Token = "0x200047E")]
	public struct MapPoints
	{
		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int mapIndex;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<int> course;

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1299040", Offset = "0x1299040", VA = "0x1299040")]
		public MapPoints(int mpMap, List<int> mpCoursePoints)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x12984F0", Offset = "0x12984F0", VA = "0x12984F0")]
		public void Merge(MapPoints remoteMapPoints)
		{
		}
	}
	[Token(Token = "0x200047F")]
	public struct MapCollectables
	{
		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int mapIndex;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<bool> collectables;

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x129904C", Offset = "0x129904C", VA = "0x129904C")]
		public MapCollectables(int mcMap, List<bool> mcCollectables)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x129864C", Offset = "0x129864C", VA = "0x129864C")]
		public void Merge(MapCollectables remoteMapCollectables)
		{
		}
	}
	[Token(Token = "0x2000480")]
	public static class PlayerDataCSV
	{
		[Token(Token = "0x4001BDB")]
		private const string _CSV_TITLES = "Mode,Map,Course,Crashed,RawScore,ClearedCheckpoints,TotalPenilisation,TotalScore";

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _playerData;

		[Token(Token = "0x170002AD")]
		private static string PlayerData
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x129ED14", Offset = "0x129ED14", VA = "0x129ED14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x129EDF4", Offset = "0x129EDF4", VA = "0x129EDF4")]
			set
			{
			}
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x129EF3C", Offset = "0x129EF3C", VA = "0x129EF3C")]
		public static void Init()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x129EFD4", Offset = "0x129EFD4", VA = "0x129EFD4")]
		public static void Update(ScoreData score)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x129F1B4", Offset = "0x129F1B4", VA = "0x129F1B4")]
		private static void Save(string newData)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x129F268", Offset = "0x129F268", VA = "0x129F268")]
		public static string Load()
		{
			return null;
		}
	}
	[Token(Token = "0x2000481")]
	public class SerializedUser : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002063")]
		[Address(RVA = "0x12A428C", Offset = "0x12A428C", VA = "0x12A428C")]
		public SerializedUser()
		{
		}
	}
}
namespace TBM.DataStore.Public
{
	[Token(Token = "0x2000482")]
	public class GameStateAssistant
	{
		[Token(Token = "0x6002064")]
		[Address(RVA = "0x129F26C", Offset = "0x129F26C", VA = "0x129F26C")]
		public static void UpdateSelectedSkin(SkinPair newSkin)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x129F2A8", Offset = "0x129F2A8", VA = "0x129F2A8")]
		public static void UpdateScore(int map, GameMode mode, int course, float score)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x129F5B8", Offset = "0x129F5B8", VA = "0x129F5B8")]
		private static long ValidateScore(int modeIndex, float score)
		{
			return default(long);
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x129F660", Offset = "0x129F660", VA = "0x129F660")]
		private static void UpdateExistingScore(int map, GameMode mode, List<float> scores)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x129F718", Offset = "0x129F718", VA = "0x129F718")]
		public static float RetrieveUserScore(int map, GameMode mode, int course)
		{
			return default(float);
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x129F820", Offset = "0x129F820", VA = "0x129F820")]
		public static List<float> RetrieveUserScores(int map, GameMode mode)
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x129F918", Offset = "0x129F918", VA = "0x129F918")]
		public static float RetrieveUserScoreTotal(GameMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x129FA18", Offset = "0x129FA18", VA = "0x129FA18")]
		public static int RetrieveUserPoints(int map, int course)
		{
			return default(int);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x129FB24", Offset = "0x129FB24", VA = "0x129FB24")]
		public static int RetrieveTotalUserPoints()
		{
			return default(int);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x129FB44", Offset = "0x129FB44", VA = "0x129FB44")]
		public static int RetrieveUserPointsLevel()
		{
			return default(int);
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x129FE54", Offset = "0x129FE54", VA = "0x129FE54")]
		public static int RetrieveHighestMapLevel(int map = 0)
		{
			return default(int);
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x12A00CC", Offset = "0x12A00CC", VA = "0x12A00CC")]
		public static int RetrieveUserPointsGoldOnly()
		{
			return default(int);
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x12A023C", Offset = "0x12A023C", VA = "0x12A023C")]
		public static void UpdateUserPoints(int mapIndex, int courseIndex, int newPoints)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x12A04DC", Offset = "0x12A04DC", VA = "0x12A04DC")]
		private static void UpdateExistingPoints(MapPoints mapPoints)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x12A0568", Offset = "0x12A0568", VA = "0x12A0568")]
		public static bool CheckTotalProgress()
		{
			return default(bool);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x12A05B0", Offset = "0x12A05B0", VA = "0x12A05B0")]
		public static bool CheckFinalProgress(int mode, int map = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x12A088C", Offset = "0x12A088C", VA = "0x12A088C")]
		public static int CheckModeProgress(int mode)
		{
			return default(int);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x12A0670", Offset = "0x12A0670", VA = "0x12A0670")]
		public static int CheckCurrentProgress(int mode, int map)
		{
			return default(int);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x12A0A44", Offset = "0x12A0A44", VA = "0x12A0A44")]
		public static List<bool> RetrieveCollectables(int map)
		{
			return null;
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x12A0B00", Offset = "0x12A0B00", VA = "0x12A0B00")]
		public static int RetrieveCollectablesBestRun(int map)
		{
			return default(int);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x12A0B98", Offset = "0x12A0B98", VA = "0x12A0B98")]
		public static void UpdateAdventure(int map, List<bool> obtained)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x12A08D8", Offset = "0x12A08D8", VA = "0x12A08D8")]
		public static int RetrieveTotalCollectablesMap(int map)
		{
			return default(int);
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x12A0D58", Offset = "0x12A0D58", VA = "0x12A0D58")]
		public static void SetSkinUnlock(int skin, int swatch, bool unlocked)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x12A1020", Offset = "0x12A1020", VA = "0x12A1020")]
		public static void SetSkinSeen(int skin, int swatch, bool seen)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x12A10F0", Offset = "0x12A10F0", VA = "0x12A10F0")]
		public static SkinData GetSkinData(int skin, int swatch)
		{
			return null;
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x12A0E28", Offset = "0x12A0E28", VA = "0x12A0E28")]
		private static void ValidateSkinList(int skin, int swatch)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x12A11A0", Offset = "0x12A11A0", VA = "0x12A11A0")]
		public static void SetSelectedSkin(SkinPair skin)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x12A11F0", Offset = "0x12A11F0", VA = "0x12A11F0")]
		public GameStateAssistant()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public static class RemoteAssistant
	{
		[Token(Token = "0x200087F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35428", Offset = "0xB35428")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4003176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result<string>> callback;

			[Token(Token = "0x6003358")]
			[Address(RVA = "0x12A16C0", Offset = "0x12A16C0", VA = "0x12A16C0")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003359")]
			[Address(RVA = "0x12A1D38", Offset = "0x12A1D38", VA = "0x12A1D38")]
			internal void <GetUserId>b__0(Result<string> result)
			{
			}
		}

		[Token(Token = "0x2000880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35438", Offset = "0xB35438")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4003177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result saveResult;

			[Token(Token = "0x4003178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result> callback;

			[Token(Token = "0x600335A")]
			[Address(RVA = "0x12A185C", Offset = "0x12A185C", VA = "0x12A185C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0x12A1DAC", Offset = "0x12A1DAC", VA = "0x12A1DAC")]
			internal void <Save>b__0(Result result)
			{
			}
		}

		[Token(Token = "0x2000881")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35448", Offset = "0xB35448")]
		private sealed class <>c__DisplayClass9_0<T>
		{
			[Token(Token = "0x4003179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string fileName;

			[Token(Token = "0x400317A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool backupData;

			[Token(Token = "0x400317B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Result<T> loadResult;

			[Token(Token = "0x400317C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Result<T>> callback;

			[Token(Token = "0x400317D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Result<byte[]>> <>9__1;

			[Token(Token = "0x600335C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600335D")]
			internal void <Load>b__0(Result existsResult)
			{
			}

			[Token(Token = "0x600335E")]
			internal void <Load>b__1(Result<byte[]> result)
			{
			}
		}

		[Token(Token = "0x2000882")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35458", Offset = "0xB35458")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400317E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x600335F")]
			[Address(RVA = "0x12A1AA4", Offset = "0x12A1AA4", VA = "0x12A1AA4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6003360")]
			[Address(RVA = "0x12A1C14", Offset = "0x12A1C14", VA = "0x12A1C14")]
			internal void <Exists>b__0(Result result)
			{
			}
		}

		[Token(Token = "0x2000883")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35468", Offset = "0xB35468")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400317F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result deleteResult;

			[Token(Token = "0x4003180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result> callback;

			[Token(Token = "0x6003361")]
			[Address(RVA = "0x12A1C0C", Offset = "0x12A1C0C", VA = "0x12A1C0C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6003362")]
			[Address(RVA = "0x12A1C88", Offset = "0x12A1C88", VA = "0x12A1C88")]
			internal void <Delete>b__0(Result result)
			{
			}
		}

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IServer _remoteInterface;

		[Token(Token = "0x170002AE")]
		private static IServer Interface
		{
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x12A11F8", Offset = "0x12A11F8", VA = "0x12A11F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x12A1278", Offset = "0x12A1278", VA = "0x12A1278")]
		public static void Init(Action callback)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x12A1368", Offset = "0x12A1368", VA = "0x12A1368")]
		public static void SetAuthenticated(bool isAuthenticated)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x12A1424", Offset = "0x12A1424", VA = "0x12A1424")]
		public static bool IsAuthenticated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x12A14EC", Offset = "0x12A14EC", VA = "0x12A14EC")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x12A15A0", Offset = "0x12A15A0", VA = "0x12A15A0")]
		public static void GetUserId(Action<Result<string>> callback)
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x12A16C8", Offset = "0x12A16C8", VA = "0x12A16C8")]
		public static void Save(string fileName, bool backupData, [Optional] Action<Result> callback)
		{
		}

		[Token(Token = "0x6002087")]
		public static void Load<T>(string fileName, bool backupData, Action<Result<T>> callback)
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x12A1948", Offset = "0x12A1948", VA = "0x12A1948")]
		private static void Exists(bool backupData, Action<Result> callback)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x12A1AAC", Offset = "0x12A1AAC", VA = "0x12A1AAC")]
		public static void Delete(Action<Result> callback)
		{
		}
	}
	[Token(Token = "0x2000484")]
	public static class UserAssistant
	{
		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35478", Offset = "0xB35478")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4003181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x6003363")]
			[Address(RVA = "0x12A2154", Offset = "0x12A2154", VA = "0x12A2154")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6003364")]
			[Address(RVA = "0x12A3218", Offset = "0x12A3218", VA = "0x12A3218")]
			internal void <SessionExists>b__0(Result result)
			{
			}
		}

		[Token(Token = "0x2000885")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35488", Offset = "0xB35488")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4003182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x6003365")]
			[Address(RVA = "0x12A228C", Offset = "0x12A228C", VA = "0x12A228C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6003366")]
			[Address(RVA = "0x12A328C", Offset = "0x12A328C", VA = "0x12A328C")]
			internal void <BackupSessionExists>b__0(Result result)
			{
			}
		}

		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35498", Offset = "0xB35498")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4003183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalUser userToValidate;

			[Token(Token = "0x4003184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result validateResult;

			[Token(Token = "0x4003185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Result> callback;

			[Token(Token = "0x4003186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Result<string>> <>9__1;

			[Token(Token = "0x6003367")]
			[Address(RVA = "0x12A23F0", Offset = "0x12A23F0", VA = "0x12A23F0")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6003368")]
			[Address(RVA = "0x12A3300", Offset = "0x12A3300", VA = "0x12A3300")]
			internal void <ValidateUser>b__0(Result<byte[]> loadResult)
			{
			}

			[Token(Token = "0x6003369")]
			[Address(RVA = "0x12A33F8", Offset = "0x12A33F8", VA = "0x12A33F8")]
			internal void <ValidateUser>b__1(Result<string> result)
			{
			}
		}

		[Token(Token = "0x2000887")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB354A8", Offset = "0xB354A8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4003187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x600336A")]
			[Address(RVA = "0x12A2558", Offset = "0x12A2558", VA = "0x12A2558")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600336B")]
			[Address(RVA = "0x12A34C4", Offset = "0x12A34C4", VA = "0x12A34C4")]
			internal void <Init>b__0()
			{
			}
		}

		[Token(Token = "0x2000888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB354B8", Offset = "0xB354B8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4003188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result validateResult;

			[Token(Token = "0x600336C")]
			[Address(RVA = "0x12A26BC", Offset = "0x12A26BC", VA = "0x12A26BC")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600336D")]
			[Address(RVA = "0x12A34CC", Offset = "0x12A34CC", VA = "0x12A34CC")]
			internal void <OnValidate>b__0(Result existsResult)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000889")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB354C8", Offset = "0xB354C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4003189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400318A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Result> <>9__20_1;

			[Token(Token = "0x600336F")]
			[Address(RVA = "0x12A3140", Offset = "0x12A3140", VA = "0x12A3140")]
			public <>c()
			{
			}

			[Token(Token = "0x6003370")]
			[Address(RVA = "0x12A3148", Offset = "0x12A3148", VA = "0x12A3148")]
			internal void <OnValidate>b__20_1(Result result)
			{
			}
		}

		[Token(Token = "0x200088A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB354D8", Offset = "0xB354D8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x400318B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool backupData;

			[Token(Token = "0x400318C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result> callback;

			[Token(Token = "0x6003371")]
			[Address(RVA = "0x12A2A64", Offset = "0x12A2A64", VA = "0x12A2A64")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0x12A3614", Offset = "0x12A3614", VA = "0x12A3614")]
			internal void <Save>b__0(Result saveResult)
			{
			}
		}

		[Token(Token = "0x200088B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB354E8", Offset = "0xB354E8")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400318D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x6003373")]
			[Address(RVA = "0x12A2BE8", Offset = "0x12A2BE8", VA = "0x12A2BE8")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6003374")]
			[Address(RVA = "0x12A3714", Offset = "0x12A3714", VA = "0x12A3714")]
			internal void <SaveToDisk>b__0(Result saveResult)
			{
			}
		}

		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB354F8", Offset = "0xB354F8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400318E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x400318F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result callbackResult;

			[Token(Token = "0x4003190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Result> <>9__1;

			[Token(Token = "0x6003375")]
			[Address(RVA = "0x12A2CF8", Offset = "0x12A2CF8", VA = "0x12A2CF8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6003376")]
			[Address(RVA = "0x12A37A4", Offset = "0x12A37A4", VA = "0x12A37A4")]
			internal void <Load>b__0(Result existsResult)
			{
			}

			[Token(Token = "0x6003377")]
			[Address(RVA = "0x12A38FC", Offset = "0x12A38FC", VA = "0x12A38FC")]
			internal void <Load>b__1(Result loadResult)
			{
			}
		}

		[Token(Token = "0x200088D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35508", Offset = "0xB35508")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4003191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x4003192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result loadResult;

			[Token(Token = "0x6003378")]
			[Address(RVA = "0x12A2DFC", Offset = "0x12A2DFC", VA = "0x12A2DFC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6003379")]
			[Address(RVA = "0x12A39F4", Offset = "0x12A39F4", VA = "0x12A39F4")]
			internal void <LoadFromServer>b__0(Result<LocalUser> fetchResult)
			{
			}
		}

		[Token(Token = "0x200088E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35518", Offset = "0xB35518")]
		private sealed class <>c__DisplayClass27_1
		{
			[Token(Token = "0x4003193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result<LocalUser> fetchResult;

			[Token(Token = "0x4003194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass27_0 CS$<>8__locals1;

			[Token(Token = "0x600337A")]
			[Address(RVA = "0x12A3B90", Offset = "0x12A3B90", VA = "0x12A3B90")]
			public <>c__DisplayClass27_1()
			{
			}

			[Token(Token = "0x600337B")]
			[Address(RVA = "0x12A3B98", Offset = "0x12A3B98", VA = "0x12A3B98")]
			internal void <LoadFromServer>b__1(Result<LocalUser> backupResult)
			{
			}
		}

		[Token(Token = "0x200088F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35528", Offset = "0xB35528")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4003195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x600337C")]
			[Address(RVA = "0x12A2F34", Offset = "0x12A2F34", VA = "0x12A2F34")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600337D")]
			[Address(RVA = "0x12A3D30", Offset = "0x12A3D30", VA = "0x12A3D30")]
			internal void <LoadFromDisk>b__0(Result<byte[]> loadResult)
			{
			}
		}

		[Token(Token = "0x2000890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35538", Offset = "0xB35538")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4003196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result result;

			[Token(Token = "0x4003197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result> callback;

			[Token(Token = "0x4003198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Result<byte[]>> <>9__1;

			[Token(Token = "0x600337E")]
			[Address(RVA = "0x12A3010", Offset = "0x12A3010", VA = "0x12A3010")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x600337F")]
			[Address(RVA = "0x12A3E9C", Offset = "0x12A3E9C", VA = "0x12A3E9C")]
			internal void <LoadBackupSession>b__0(Result backupExistsResult)
			{
			}

			[Token(Token = "0x6003380")]
			[Address(RVA = "0x12A409C", Offset = "0x12A409C", VA = "0x12A409C")]
			internal void <LoadBackupSession>b__1(Result<byte[]> backupResult)
			{
			}
		}

		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35548", Offset = "0xB35548")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4003199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Result> callback;

			[Token(Token = "0x6003381")]
			[Address(RVA = "0x12A30D4", Offset = "0x12A30D4", VA = "0x12A30D4")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6003382")]
			[Address(RVA = "0x12A41DC", Offset = "0x12A41DC", VA = "0x12A41DC")]
			internal void <Delete>b__0(Result deleteResult)
			{
			}
		}

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9F8", Offset = "0xB3E9F8")]
		private static bool <Initialized>k__BackingField;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ILocal _localInterface;

		[Token(Token = "0x4001BE0")]
		private const bool _DEBUG = true;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static LocalUser _user;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Action<Result> loginCallback;

		[Token(Token = "0x170002AF")]
		public static bool Initialized
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x12A1EA4", Offset = "0x12A1EA4", VA = "0x12A1EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F230", Offset = "0xB4F230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x12A1EF4", Offset = "0x12A1EF4", VA = "0x12A1EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F240", Offset = "0xB4F240")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public static ILocal Interface
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x12A1F4C", Offset = "0x12A1F4C", VA = "0x12A1F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public static LocalUser User
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x129927C", Offset = "0x129927C", VA = "0x129927C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x12A1FC0", Offset = "0x12A1FC0", VA = "0x12A1FC0")]
			private set
			{
			}
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x12A2024", Offset = "0x12A2024", VA = "0x12A2024")]
		private static void SessionExists(Action<Result> callback)
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x12A215C", Offset = "0x12A215C", VA = "0x12A215C")]
		private static void BackupSessionExists(Action<Result> callback)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x12A2294", Offset = "0x12A2294", VA = "0x12A2294")]
		public static void SetAuthenticated(bool isAuthenticated)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x12A229C", Offset = "0x12A229C", VA = "0x12A229C")]
		public static bool IsAuthenticated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x12A22A0", Offset = "0x12A22A0", VA = "0x12A22A0")]
		private static void ValidateUser(Action<Result> callback)
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x12A23F8", Offset = "0x12A23F8", VA = "0x12A23F8")]
		public static void Init(Action callback)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x12A2560", Offset = "0x12A2560", VA = "0x12A2560")]
		public static void Login(Action<Result> callback)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x12A261C", Offset = "0x12A261C", VA = "0x12A261C")]
		private static void OnValidate(Result validateResult)
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x12A26C4", Offset = "0x12A26C4", VA = "0x12A26C4")]
		private static void LoadComplete(Result result)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x12A2750", Offset = "0x12A2750", VA = "0x12A2750")]
		private static void LoginComplete(Result result, Action<Result> callback)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x12A2974", Offset = "0x12A2974", VA = "0x12A2974")]
		private static void Create(Action<Result> callback)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x12A2808", Offset = "0x12A2808", VA = "0x12A2808")]
		public static void Save(bool backupData = false, [Optional] Action<Result> callback)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x12A2A6C", Offset = "0x12A2A6C", VA = "0x12A2A6C")]
		private static void SaveToDisk(bool backupData, Action<Result> callback)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x12A2BF0", Offset = "0x12A2BF0", VA = "0x12A2BF0")]
		private static void Load([Optional] Action<Result> callback)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x12A2D00", Offset = "0x12A2D00", VA = "0x12A2D00")]
		private static void LoadFromServer(Action<Result> callback)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x12A2E04", Offset = "0x12A2E04", VA = "0x12A2E04")]
		private static void LoadFromDisk(Action<Result> callback)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x12A2F3C", Offset = "0x12A2F3C", VA = "0x12A2F3C")]
		private static void LoadBackupSession(Action<Result> callback)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x12A3018", Offset = "0x12A3018", VA = "0x12A3018")]
		public static void Delete([Optional] Action<Result> callback)
		{
		}
	}
}
namespace TBM.DataStore.Core
{
	[Token(Token = "0x2000485")]
	public interface IUser
	{
		[Token(Token = "0x170002B2")]
		string Username
		{
			[Token(Token = "0x60020A1")]
			get;
			[Token(Token = "0x60020A2")]
			set;
		}

		[Token(Token = "0x170002B3")]
		string UserId
		{
			[Token(Token = "0x60020A3")]
			get;
			[Token(Token = "0x60020A4")]
			set;
		}

		[Token(Token = "0x170002B4")]
		List<MapData> Scores
		{
			[Token(Token = "0x60020A5")]
			get;
			[Token(Token = "0x60020A6")]
			set;
		}

		[Token(Token = "0x170002B5")]
		List<MapPoints> Points
		{
			[Token(Token = "0x60020A7")]
			get;
			[Token(Token = "0x60020A8")]
			set;
		}

		[Token(Token = "0x170002B6")]
		List<List<SkinData>> UnlockedSkins
		{
			[Token(Token = "0x60020A9")]
			get;
			[Token(Token = "0x60020AA")]
			set;
		}

		[Token(Token = "0x170002B7")]
		SkinPair SelectedSkin
		{
			[Token(Token = "0x60020AB")]
			get;
			[Token(Token = "0x60020AC")]
			set;
		}

		[Token(Token = "0x170002B8")]
		UserPrefs Prefs
		{
			[Token(Token = "0x60020AD")]
			get;
			[Token(Token = "0x60020AE")]
			set;
		}

		[Token(Token = "0x170002B9")]
		bool IsChanged
		{
			[Token(Token = "0x60020AF")]
			get;
			[Token(Token = "0x60020B0")]
			set;
		}

		[Token(Token = "0x60020B1")]
		void AcceptChanges();

		[Token(Token = "0x60020B2")]
		void NewChanges();
	}
}
namespace TBM.DataStore.Core.Remote
{
	[Token(Token = "0x2000486")]
	public interface IServer
	{
		[Token(Token = "0x170002BA")]
		bool _authenticated
		{
			[Token(Token = "0x60020B3")]
			get;
			[Token(Token = "0x60020B4")]
			set;
		}

		[Token(Token = "0x60020B5")]
		void Init([Optional] Action callback);

		[Token(Token = "0x60020B6")]
		void SetAuthenticated(bool authenticated);

		[Token(Token = "0x60020B7")]
		bool IsAuthenticated();

		[Token(Token = "0x60020B8")]
		string GetUserId();

		[Token(Token = "0x60020B9")]
		void GetUserId(Action<Result<string>> callback);

		[Token(Token = "0x60020BA")]
		void Save(string fileName, byte[] data, Action<Result> callback);

		[Token(Token = "0x60020BB")]
		void Load(string fileName, Action<Result<byte[]>> callback);

		[Token(Token = "0x60020BC")]
		void Exists(string fileName, Action<Result> callback);

		[Token(Token = "0x60020BD")]
		void Delete(string fileName, Action<Result> callback);
	}
	[Token(Token = "0x2000487")]
	public class MockRemoteWrapper : IServer
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA08", Offset = "0xB3EA08")]
		private bool <_authenticated>k__BackingField;

		[Token(Token = "0x170002BB")]
		public bool _authenticated
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x1299B6C", Offset = "0x1299B6C", VA = "0x1299B6C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F250", Offset = "0xB4F250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x1299B74", Offset = "0x1299B74", VA = "0x1299B74", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F260", Offset = "0xB4F260")]
			set
			{
			}
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1299B80", Offset = "0x1299B80", VA = "0x1299B80", Slot = "6")]
		public void Init([Optional] Action callback)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x1299B94", Offset = "0x1299B94", VA = "0x1299B94", Slot = "7")]
		public void SetAuthenticated(bool authenticated)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1299BA0", Offset = "0x1299BA0", VA = "0x1299BA0", Slot = "8")]
		public bool IsAuthenticated()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1299BA8", Offset = "0x1299BA8", VA = "0x1299BA8", Slot = "9")]
		public string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1299BF0", Offset = "0x1299BF0", VA = "0x1299BF0", Slot = "10")]
		public void GetUserId(Action<Result<string>> callback)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1299C98", Offset = "0x1299C98", VA = "0x1299C98", Slot = "11")]
		public void Save(string fileName, byte[] data, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1299E30", Offset = "0x1299E30", VA = "0x1299E30")]
		public Result<byte[]> Load(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1299F74", Offset = "0x1299F74", VA = "0x1299F74", Slot = "12")]
		public void Load(string fileName, Action<Result<byte[]>> callback)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x129A0E0", Offset = "0x129A0E0", VA = "0x129A0E0", Slot = "13")]
		public void Exists(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x129A2B8", Offset = "0x129A2B8", VA = "0x129A2B8", Slot = "14")]
		public void Delete(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x129A4A4", Offset = "0x129A4A4", VA = "0x129A4A4")]
		public MockRemoteWrapper()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class NoRemoteWrapper : IServer
	{
		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA18", Offset = "0xB3EA18")]
		private bool <_authenticated>k__BackingField;

		[Token(Token = "0x170002BC")]
		public bool _authenticated
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x129A4AC", Offset = "0x129A4AC", VA = "0x129A4AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F270", Offset = "0xB4F270")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x129A4B4", Offset = "0x129A4B4", VA = "0x129A4B4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F280", Offset = "0xB4F280")]
			set
			{
			}
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x129A4C0", Offset = "0x129A4C0", VA = "0x129A4C0", Slot = "6")]
		public void Init([Optional] Action callback)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x129A4D4", Offset = "0x129A4D4", VA = "0x129A4D4", Slot = "7")]
		public void SetAuthenticated(bool authenticated)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x129A4E0", Offset = "0x129A4E0", VA = "0x129A4E0", Slot = "8")]
		public bool IsAuthenticated()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x129A4E8", Offset = "0x129A4E8", VA = "0x129A4E8", Slot = "9")]
		public string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x129A530", Offset = "0x129A530", VA = "0x129A530", Slot = "10")]
		public void GetUserId(Action<Result<string>> callback)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x129A5D8", Offset = "0x129A5D8", VA = "0x129A5D8", Slot = "11")]
		public void Save(string fileName, byte[] data, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x129A66C", Offset = "0x129A66C", VA = "0x129A66C")]
		public Result<byte[]> Load(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x129A6E8", Offset = "0x129A6E8", VA = "0x129A6E8", Slot = "12")]
		public void Load(string fileName, Action<Result<byte[]>> callback)
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x129A788", Offset = "0x129A788", VA = "0x129A788", Slot = "13")]
		public void Exists(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x129A880", Offset = "0x129A880", VA = "0x129A880", Slot = "14")]
		public void Delete(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x129A914", Offset = "0x129A914", VA = "0x129A914")]
		public NoRemoteWrapper()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class OculusDataWrapper_OLD : IServer
	{
		[Token(Token = "0x2000892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35558", Offset = "0xB35558")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400319A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result<string> fetchResult;

			[Token(Token = "0x400319B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result<string>> callback;

			[Token(Token = "0x6003383")]
			[Address(RVA = "0x129AAAC", Offset = "0x129AAAC", VA = "0x129AAAC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6003384")]
			[Address(RVA = "0x129B400", Offset = "0x129B400", VA = "0x129B400")]
			internal void <GetUserId>b__0(Oculus.Platform.Message<Oculus.Platform.Models.User> request)
			{
			}
		}

		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35568", Offset = "0xB35568")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400319C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result saveResult;

			[Token(Token = "0x400319D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result> callback;

			[Token(Token = "0x6003385")]
			[Address(RVA = "0x129AC34", Offset = "0x129AC34", VA = "0x129AC34")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6003386")]
			[Address(RVA = "0x129B554", Offset = "0x129B554", VA = "0x129B554")]
			internal void <Save>b__0(Oculus.Platform.Message<CloudStorageUpdateResponse> request)
			{
			}
		}

		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35578", Offset = "0xB35578")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400319E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result<byte[]> loadResult;

			[Token(Token = "0x400319F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result<byte[]>> callback;

			[Token(Token = "0x6003387")]
			[Address(RVA = "0x129AD44", Offset = "0x129AD44", VA = "0x129AD44")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0x129AF88", Offset = "0x129AF88", VA = "0x129AF88")]
			internal void <Load>b__0(Oculus.Platform.Message<CloudStorageData> request)
			{
			}
		}

		[Token(Token = "0x2000895")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35588", Offset = "0xB35588")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40031A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result existsResult;

			[Token(Token = "0x40031A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string fileName;

			[Token(Token = "0x40031A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Result> callback;

			[Token(Token = "0x6003389")]
			[Address(RVA = "0x129AE5C", Offset = "0x129AE5C", VA = "0x129AE5C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0x129B0CC", Offset = "0x129B0CC", VA = "0x129B0CC")]
			internal void <Exists>b__0(Oculus.Platform.Message<CloudStorageMetadataList> request)
			{
			}
		}

		[Token(Token = "0x2000896")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35598", Offset = "0xB35598")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40031A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Result deleteResult;

			[Token(Token = "0x40031A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Result> callback;

			[Token(Token = "0x600338B")]
			[Address(RVA = "0x129AF78", Offset = "0x129AF78", VA = "0x129AF78")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0x129B29C", Offset = "0x129B29C", VA = "0x129B29C")]
			internal void <Delete>b__0(Oculus.Platform.Message<CloudStorageUpdateResponse> request)
			{
			}
		}

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA28", Offset = "0xB3EA28")]
		private bool <_authenticated>k__BackingField;

		[Token(Token = "0x170002BD")]
		public bool _authenticated
		{
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x129A91C", Offset = "0x129A91C", VA = "0x129A91C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F290", Offset = "0xB4F290")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x129A924", Offset = "0x129A924", VA = "0x129A924", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F2A0", Offset = "0xB4F2A0")]
			set
			{
			}
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x129A930", Offset = "0x129A930", VA = "0x129A930", Slot = "6")]
		public void Init([Optional] Action callback)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x129A944", Offset = "0x129A944", VA = "0x129A944", Slot = "7")]
		public void SetAuthenticated(bool authenticated)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x129A950", Offset = "0x129A950", VA = "0x129A950", Slot = "8")]
		public bool IsAuthenticated()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x129A958", Offset = "0x129A958", VA = "0x129A958", Slot = "9")]
		public string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x129A9B8", Offset = "0x129A9B8", VA = "0x129A9B8", Slot = "10")]
		public void GetUserId(Action<Result<string>> callback)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x129AAB4", Offset = "0x129AAB4", VA = "0x129AAB4", Slot = "11")]
		public void Save(string fileName, byte[] data, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x129AC3C", Offset = "0x129AC3C", VA = "0x129AC3C", Slot = "12")]
		public void Load(string fileName, Action<Result<byte[]>> callback)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x129AD4C", Offset = "0x129AD4C", VA = "0x129AD4C", Slot = "13")]
		public void Exists(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x129AE64", Offset = "0x129AE64", VA = "0x129AE64", Slot = "14")]
		public void Delete(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x129AF80", Offset = "0x129AF80", VA = "0x129AF80")]
		public OculusDataWrapper_OLD()
		{
		}
	}
}
namespace TBM.DataStore.Core.Remote.PS4
{
	[Token(Token = "0x200048A")]
	public class WriteFilesRequest : FileOps.FileOperationRequest
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] data;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fileName;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte[] largeData;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x129BCF8", Offset = "0x129BCF8", VA = "0x129BCF8", Slot = "4")]
		public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x129BE34", Offset = "0x129BE34", VA = "0x129BE34")]
		public WriteFilesRequest()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class WriteFilesResponse : FileOps.FileOperationResponse
	{
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime lastWriteTime;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long totalFileSizeWritten;

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x129BE94", Offset = "0x129BE94", VA = "0x129BE94")]
		public WriteFilesResponse()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class EnumerateFilesRequest : FileOps.FileOperationRequest
	{
		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x129B6B8", Offset = "0x129B6B8", VA = "0x129B6B8", Slot = "4")]
		public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x129B790", Offset = "0x129B790", VA = "0x129B790")]
		public EnumerateFilesRequest()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class EnumerateFilesResponse : FileOps.FileOperationResponse
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] files;

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x129B798", Offset = "0x129B798", VA = "0x129B798")]
		public EnumerateFilesResponse()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class ReadFilesRequest : FileOps.FileOperationRequest
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fileName;

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x129BBFC", Offset = "0x129BBFC", VA = "0x129BBFC", Slot = "4")]
		public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x129BCE8", Offset = "0x129BCE8", VA = "0x129BCE8")]
		public ReadFilesRequest()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class ReadFilesResponse : FileOps.FileOperationResponse
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] data;

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x129BCF0", Offset = "0x129BCF0", VA = "0x129BCF0")]
		public ReadFilesResponse()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class PS4RemoteWrapper : IServer
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA38", Offset = "0xB3EA38")]
		private bool <_authenticated>k__BackingField;

		[Token(Token = "0x170002BE")]
		public bool _authenticated
		{
			[Token(Token = "0x60020ED")]
			[Address(RVA = "0x129B7A0", Offset = "0x129B7A0", VA = "0x129B7A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F2B0", Offset = "0xB4F2B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0x129B7A8", Offset = "0x129B7A8", VA = "0x129B7A8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F2C0", Offset = "0xB4F2C0")]
			set
			{
			}
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x129B7B4", Offset = "0x129B7B4", VA = "0x129B7B4", Slot = "6")]
		public void Init([Optional] Action callback)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x129B7B8", Offset = "0x129B7B8", VA = "0x129B7B8", Slot = "7")]
		public void SetAuthenticated(bool authenticated)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x129B7C4", Offset = "0x129B7C4", VA = "0x129B7C4", Slot = "8")]
		public bool IsAuthenticated()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x129B7CC", Offset = "0x129B7CC", VA = "0x129B7CC", Slot = "9")]
		public string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x129B884", Offset = "0x129B884", VA = "0x129B884", Slot = "10")]
		public void GetUserId(Action<Result<string>> callback)
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x129B998", Offset = "0x129B998", VA = "0x129B998", Slot = "11")]
		public void Save(string fileName, byte[] data, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x129BA2C", Offset = "0x129BA2C", VA = "0x129BA2C", Slot = "12")]
		public void Load(string fileName, Action<Result<byte[]>> callback)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x129BACC", Offset = "0x129BACC", VA = "0x129BACC", Slot = "13")]
		public void Exists(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x129BB60", Offset = "0x129BB60", VA = "0x129BB60", Slot = "14")]
		public void Delete(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x129BBF4", Offset = "0x129BBF4", VA = "0x129BBF4")]
		public PS4RemoteWrapper()
		{
		}
	}
}
namespace TBM.DataStore.Core.Local
{
	[Token(Token = "0x2000491")]
	public interface ILocal
	{
		[Token(Token = "0x60020F9")]
		void Init(Action callback);

		[Token(Token = "0x60020FA")]
		void Save(byte[] data, string fileName = "");

		[Token(Token = "0x60020FB")]
		void Save(string data, string fileName = "");

		[Token(Token = "0x60020FC")]
		void Save(byte[] data, string fileName, Action<Result> callback);

		[Token(Token = "0x60020FD")]
		void Save(string data, string fileName, Action<Result> callback);

		[Token(Token = "0x60020FE")]
		T Load<T>(string fileName) where T : class;

		[Token(Token = "0x60020FF")]
		byte[] LoadBytes(string fileName);

		[Token(Token = "0x6002100")]
		string LoadString(string fileName);

		[Token(Token = "0x6002101")]
		void Load(string fileName, Action<Result<string>> callback);

		[Token(Token = "0x6002102")]
		void Load(string fileName, Action<Result<byte[]>> callback);

		[Token(Token = "0x6002103")]
		void Exists(string fileName, Action<Result> callback);

		[Token(Token = "0x6002104")]
		bool Exists(string fileName);

		[Token(Token = "0x6002105")]
		void Delete(string fileName, [Optional] Action callback);
	}
	[Token(Token = "0x2000492")]
	public class LocalSaveDataWrapper : ILocal
	{
		[Token(Token = "0x6002106")]
		[Address(RVA = "0xDF4C38", Offset = "0xDF4C38", VA = "0xDF4C38", Slot = "4")]
		public void Init(Action callback)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xDF4C4C", Offset = "0xDF4C4C", VA = "0xDF4C4C", Slot = "5")]
		public void Save(byte[] data, string fileName)
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xDF4CB0", Offset = "0xDF4CB0", VA = "0xDF4CB0", Slot = "6")]
		public void Save(string data, string fileName = "")
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xDF4D14", Offset = "0xDF4D14", VA = "0xDF4D14", Slot = "7")]
		public void Save(byte[] data, string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xDF4E84", Offset = "0xDF4E84", VA = "0xDF4E84", Slot = "8")]
		public void Save(string data, string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x600210B")]
		private T TBM.DataStore.Core.Local.ILocal.Load<T>(string fileName) where T : class
		{
			return null;
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xDF4FF4", Offset = "0xDF4FF4", VA = "0xDF4FF4", Slot = "10")]
		public byte[] LoadBytes(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xDF5050", Offset = "0xDF5050", VA = "0xDF5050", Slot = "11")]
		public string LoadString(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xDF50AC", Offset = "0xDF50AC", VA = "0xDF50AC", Slot = "12")]
		public void Load(string fileName, Action<Result<string>> callback)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xDF5224", Offset = "0xDF5224", VA = "0xDF5224", Slot = "13")]
		public void Load(string fileName, Action<Result<byte[]>> callback)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xDF539C", Offset = "0xDF539C", VA = "0xDF539C", Slot = "14")]
		public void Exists(string fileName, Action<Result> callback)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xDF5464", Offset = "0xDF5464", VA = "0xDF5464", Slot = "15")]
		public bool Exists(string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xDF54B8", Offset = "0xDF54B8", VA = "0xDF54B8", Slot = "16")]
		public void Delete(string fileName, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xDF5518", Offset = "0xDF5518", VA = "0xDF5518")]
		public LocalSaveDataWrapper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public class LocalUser : IUser
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _username;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _userId;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<MapData> _scores;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _totalPoints;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<MapPoints> _points;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<MapCollectables> _collectables;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<int> _collectableBestRun;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<List<SkinData>> _unlockedSkins;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SkinPair _selectedSkin;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UserPrefs _prefs;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EAE8", Offset = "0xB3EAE8")]
		private bool <IsChanged>k__BackingField;

		[Token(Token = "0x170002BF")]
		public string Username
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x12978BC", Offset = "0x12978BC", VA = "0x12978BC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x12978C4", Offset = "0x12978C4", VA = "0x12978C4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public string UserId
		{
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x12978CC", Offset = "0x12978CC", VA = "0x12978CC", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x12978D4", Offset = "0x12978D4", VA = "0x12978D4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public List<MapData> Scores
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x12978DC", Offset = "0x12978DC", VA = "0x12978DC", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x12978E4", Offset = "0x12978E4", VA = "0x12978E4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public int TotalPoints
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x12978EC", Offset = "0x12978EC", VA = "0x12978EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x12978F4", Offset = "0x12978F4", VA = "0x12978F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public List<MapPoints> Points
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x12978FC", Offset = "0x12978FC", VA = "0x12978FC", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x1297904", Offset = "0x1297904", VA = "0x1297904", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public List<MapCollectables> Collectables
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x129790C", Offset = "0x129790C", VA = "0x129790C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1297914", Offset = "0x1297914", VA = "0x1297914")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public List<int> CollectableBestRun
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x129791C", Offset = "0x129791C", VA = "0x129791C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x1297924", Offset = "0x1297924", VA = "0x1297924")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public List<List<SkinData>> UnlockedSkins
		{
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x129792C", Offset = "0x129792C", VA = "0x129792C", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x1297934", Offset = "0x1297934", VA = "0x1297934", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public SkinPair SelectedSkin
		{
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x129793C", Offset = "0x129793C", VA = "0x129793C", Slot = "14")]
			get
			{
				return default(SkinPair);
			}
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x1297944", Offset = "0x1297944", VA = "0x1297944", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public UserPrefs Prefs
		{
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x129794C", Offset = "0x129794C", VA = "0x129794C", Slot = "16")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x1297954", Offset = "0x1297954", VA = "0x1297954", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public bool IsChanged
		{
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x129795C", Offset = "0x129795C", VA = "0x129795C", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F2D0", Offset = "0xB4F2D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x1297964", Offset = "0x1297964", VA = "0x1297964", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F2E0", Offset = "0xB4F2E0")]
			set
			{
			}
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1297970", Offset = "0x1297970", VA = "0x1297970", Slot = "20")]
		public void AcceptChanges()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1297978", Offset = "0x1297978", VA = "0x1297978", Slot = "21")]
		public void NewChanges()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1297984", Offset = "0x1297984", VA = "0x1297984")]
		public LocalUser()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x129798C", Offset = "0x129798C", VA = "0x129798C")]
		public LocalUser(string username, string userId, List<MapData> scores, int totalPoints, List<MapPoints> points, List<MapCollectables> collectables, List<int> bestRun, List<List<SkinData>> unlockedSkins, SkinPair selectedSkin, UserPrefs prefs, QualityLevel qualityLevel)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1297A28", Offset = "0x1297A28", VA = "0x1297A28")]
		public LocalUser(LocalUser altUser)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1297AA8", Offset = "0x1297AA8", VA = "0x1297AA8")]
		public void Merge(LocalUser remoteUser)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1298C08", Offset = "0x1298C08", VA = "0x1298C08")]
		public void Validate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000494")]
	public class UserPrefs
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Dictionary<string, int> _intPrefs;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dictionary<string, float> _floatPrefs;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dictionary<string, string> _stringPrefs;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dictionary<string, byte[]> _bytePrefs;

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x12991B4", Offset = "0x12991B4", VA = "0x12991B4")]
		public void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1299308", Offset = "0x1299308", VA = "0x1299308")]
		public void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x12993D8", Offset = "0x12993D8", VA = "0x12993D8")]
		public void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x12994A0", Offset = "0x12994A0", VA = "0x12994A0")]
		public void SetBytes(string key, byte[] value)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1299568", Offset = "0x1299568", VA = "0x1299568")]
		public int GetInt(string key, int defeaultVal = 0)
		{
			return default(int);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x1299608", Offset = "0x1299608", VA = "0x1299608")]
		public float GetFloat(string key, float defaultVal = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x12996B4", Offset = "0x12996B4", VA = "0x12996B4")]
		public string GetString(string key, string defaultVal = "")
		{
			return null;
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x129974C", Offset = "0x129974C", VA = "0x129974C")]
		public byte[] GetBytes(string key, [Optional] byte[] defaultVal)
		{
			return null;
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x12997E4", Offset = "0x12997E4", VA = "0x12997E4")]
		public bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x12998C0", Offset = "0x12998C0", VA = "0x12998C0")]
		public void DeleteKey(string key)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x1299A0C", Offset = "0x1299A0C", VA = "0x1299A0C")]
		public UserPrefs()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1299A14", Offset = "0x1299A14", VA = "0x1299A14")]
		public UserPrefs(bool init)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x12990B4", Offset = "0x12990B4", VA = "0x12990B4")]
		public void Validate()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x129878C", Offset = "0x129878C", VA = "0x129878C")]
		public void Merge(UserPrefs altPrefs)
		{
		}
	}
}
namespace TBM.Audio
{
	[Token(Token = "0x2000495")]
	public enum MasterSnapshots
	{
		[Token(Token = "0x4001BFF")]
		Base,
		[Token(Token = "0x4001C00")]
		MuteMusic,
		[Token(Token = "0x4001C01")]
		MuteSound,
		[Token(Token = "0x4001C02")]
		MuteAll,
		[Token(Token = "0x4001C03")]
		Paused
	}
	[Token(Token = "0x2000496")]
	public enum MusicSnapshots
	{
		[Token(Token = "0x4001C05")]
		Base,
		[Token(Token = "0x4001C06")]
		Mute,
		[Token(Token = "0x4001C07")]
		SeventyFive,
		[Token(Token = "0x4001C08")]
		Fifty,
		[Token(Token = "0x4001C09")]
		TwentyFive,
		[Token(Token = "0x4001C0A")]
		Lobby,
		[Token(Token = "0x4001C0B")]
		Game
	}
	[Token(Token = "0x2000497")]
	public enum SoundSnapshots
	{
		[Token(Token = "0x4001C0D")]
		Base,
		[Token(Token = "0x4001C0E")]
		VOActive,
		[Token(Token = "0x4001C0F")]
		Pause,
		[Token(Token = "0x4001C10")]
		Mute
	}
	[Token(Token = "0x2000498")]
	public enum GameSnapshots
	{
		[Token(Token = "0x4001C12")]
		Start,
		[Token(Token = "0x4001C13")]
		Launch,
		[Token(Token = "0x4001C14")]
		Cruise,
		[Token(Token = "0x4001C15")]
		HighSpeed,
		[Token(Token = "0x4001C16")]
		MaxSpeed,
		[Token(Token = "0x4001C17")]
		BaseCamp
	}
	[Token(Token = "0x2000499")]
	public enum Mixer
	{
		[Token(Token = "0x4001C19")]
		MasterMixer,
		[Token(Token = "0x4001C1A")]
		MusicMixer,
		[Token(Token = "0x4001C1B")]
		SoundMixer,
		[Token(Token = "0x4001C1C")]
		GameMixer,
		[Token(Token = "0x4001C1D")]
		LobbyMixer,
		[Token(Token = "0x4001C1E")]
		TitleMixer
	}
	[Token(Token = "0x200049A")]
	public enum AudioState
	{
		[Token(Token = "0x4001C20")]
		All,
		[Token(Token = "0x4001C21")]
		Music,
		[Token(Token = "0x4001C22")]
		Sound,
		[Token(Token = "0x4001C23")]
		Voice
	}
	[Token(Token = "0x200049B")]
	public enum LobbySnapshots
	{
		[Token(Token = "0x4001C25")]
		Base
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public class AudioGroup
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] audio;

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xDF0818", Offset = "0xDF0818", VA = "0xDF0818")]
		public AudioClip GetClip(string clip)
		{
			return null;
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xDF08C0", Offset = "0xDF08C0", VA = "0xDF08C0")]
		public AudioGroup(string groupName, AudioClip[] clips)
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class AudioOptions
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int priority;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float pitch;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float volume;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool loop;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startSample;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioType type;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<AudioSourceHelper> sourceCallback;

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xDF08F8", Offset = "0xDF08F8", VA = "0xDF08F8")]
		public AudioOptions()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class AudioSourceHelper
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource source;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gameObject;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLocked;

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xDF0914", Offset = "0xDF0914", VA = "0xDF0914")]
		public AudioSourceHelper()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xDF091C", Offset = "0xDF091C", VA = "0xDF091C")]
		public AudioSourceHelper(AudioSource newSource)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xDF0948", Offset = "0xDF0948", VA = "0xDF0948")]
		public AudioSourceHelper(AudioSource newSource, GameObject newObject)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public enum AudioType
	{
		[Token(Token = "0x4001C34")]
		Sound,
		[Token(Token = "0x4001C35")]
		Music,
		[Token(Token = "0x4001C36")]
		VO,
		[Token(Token = "0x4001C37")]
		Tutorial,
		[Token(Token = "0x4001C38")]
		Spatial
	}
	[Token(Token = "0x20004A0")]
	public class SoundPackage : ScriptableObject
	{
		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundPackageType type;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject sceneObject;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3EB38", Offset = "0xB3EB38")]
		public AudioClip[] music;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3EB70", Offset = "0xB3EB70")]
		public AudioClip[] clips;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3EBA8", Offset = "0xB3EBA8")]
		public AudioGroup[] groups;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, int> _clipReference;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, int> _musicReference;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, int> _groupReference;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, string> _groupClipReference;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xDF2F30", Offset = "0xDF2F30", VA = "0xDF2F30")]
		public AudioClip GetClip(string clip)
		{
			return null;
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xDF1DAC", Offset = "0xDF1DAC", VA = "0xDF1DAC")]
		public AudioClip GetMusic(string clip)
		{
			return null;
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xDF4504", Offset = "0xDF4504", VA = "0xDF4504")]
		private AudioClip SelectRandom(AudioGroup group)
		{
			return null;
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xDF422C", Offset = "0xDF422C", VA = "0xDF422C")]
		private void CacheAudio()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xDF4564", Offset = "0xDF4564", VA = "0xDF4564")]
		public SoundPackage()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public enum SoundPackageType
	{
		[Token(Token = "0x4001C43")]
		Global,
		[Token(Token = "0x4001C44")]
		Title,
		[Token(Token = "0x4001C45")]
		Lobby,
		[Token(Token = "0x4001C46")]
		Game,
		[Token(Token = "0x4001C47")]
		Tutorial,
		[Token(Token = "0x4001C48")]
		None
	}
	[Token(Token = "0x20004A2")]
	public static class SoundPackageManager
	{
		[Token(Token = "0x2000897")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB355A8", Offset = "0xB355A8")]
		private sealed class <Wait>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResourceRequest operation;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003390")]
				[Address(RVA = "0xDF4BC8", Offset = "0xDF4BC8", VA = "0xDF4BC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003392")]
				[Address(RVA = "0xDF4C30", Offset = "0xDF4C30", VA = "0xDF4C30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600338D")]
			[Address(RVA = "0xDF4A98", Offset = "0xDF4A98", VA = "0xDF4A98")]
			[DebuggerHidden]
			public <Wait>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600338E")]
			[Address(RVA = "0xDF4AC8", Offset = "0xDF4AC8", VA = "0xDF4AC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600338F")]
			[Address(RVA = "0xDF4ACC", Offset = "0xDF4ACC", VA = "0xDF4ACC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003391")]
			[Address(RVA = "0xDF4BD0", Offset = "0xDF4BD0", VA = "0xDF4BD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SoundPackage globalPackage;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SoundPackage statePackage;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _initialized;

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xDF17F0", Offset = "0xDF17F0", VA = "0xDF17F0")]
		public static void Init([Optional] Action callback)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xDF4730", Offset = "0xDF4730", VA = "0xDF4730")]
		public static void StateChange(SoundPackageType type, [Optional] Action callback)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xDF47EC", Offset = "0xDF47EC", VA = "0xDF47EC")]
		public static void ExitState()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xDF456C", Offset = "0xDF456C", VA = "0xDF456C")]
		private static void Load(SoundPackageType packageName, bool async = true, [Optional] Action callback)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xDF4810", Offset = "0xDF4810", VA = "0xDF4810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F2F0", Offset = "0xB4F2F0")]
		private static IEnumerator Wait(ResourceRequest operation, Action callback)
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xDF4880", Offset = "0xDF4880", VA = "0xDF4880")]
		private static void Unpack(SoundPackage soundPackage)
		{
		}
	}
}
namespace TBM.Audio.Public
{
	[Token(Token = "0x20004A3")]
	public class AudioManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB355B8", Offset = "0xB355B8")]
		private sealed class <WaitForAudio>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioType type;

			[Token(Token = "0x40031AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioManager <>4__this;

			[Token(Token = "0x40031AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioSourceHelper src;

			[Token(Token = "0x40031AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action callback;

			[Token(Token = "0x17000557")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003396")]
				[Address(RVA = "0xDF39FC", Offset = "0xDF39FC", VA = "0xDF39FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000558")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003398")]
				[Address(RVA = "0xDF3A64", Offset = "0xDF3A64", VA = "0xDF3A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0xDF2EA8", Offset = "0xDF2EA8", VA = "0xDF2EA8")]
			[DebuggerHidden]
			public <WaitForAudio>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6003394")]
			[Address(RVA = "0xDF38A8", Offset = "0xDF38A8", VA = "0xDF38A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003395")]
			[Address(RVA = "0xDF38AC", Offset = "0xDF38AC", VA = "0xDF38AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003397")]
			[Address(RVA = "0xDF3A04", Offset = "0xDF3A04", VA = "0xDF3A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager _instance;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _stateChanging;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StateAudio _stateAudio;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixer masterMixer;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixer musicMixer;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioMixer soundMixer;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioMixerSnapshot[] masterSnapshots;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioMixerSnapshot[] musicSnapshots;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioMixerSnapshot[] soundSnapshots;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MusicSnapshots _cachedMusicSnapshot;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private MusicSnapshots _currentMusicSnapshot;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SoundSnapshots _cachedSoundSnapshot;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private SoundSnapshots _currentSoundSnapshot;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SoundSnapshots _cachedMasterSnapshot;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private MasterSnapshots _currentMasterSnapshot;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSourceHelper _voSource;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSourceHelper _musicSource;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSourceHelper[] _fxSources;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioSourceHelper[] _3dSources;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int audioSourcePool;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int objectSourcePool;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _initialized;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _coroutineCounter;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _musicMuted;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool _soundMuted;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool _voiceMuted;

		[Token(Token = "0x4001C66")]
		private const float _DEF_MUS_VOLUME = 0f;

		[Token(Token = "0x4001C67")]
		private const float _DEF_SFX_VOLUME = 4f;

		[Token(Token = "0x4001C68")]
		private const float _MIN_VOLUME = -30f;

		[Token(Token = "0x4001C69")]
		private const float _MAX_VOLUME = 20f;

		[Token(Token = "0x4001C6A")]
		private const float _MUTE_VOLUME = -80f;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _cacheMusicVolume;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _cacheSoundVolume;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _pauseMusic;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool _pauseSound;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool _paused;

		[Token(Token = "0x170002CA")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0xDF0B7C", Offset = "0xDF0B7C", VA = "0xDF0B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		public bool stateChanging
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0xDF0DA4", Offset = "0xDF0DA4", VA = "0xDF0DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xDF0DAC", Offset = "0xDF0DAC", VA = "0xDF0DAC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public StateAudio StateAudio
		{
			[Token(Token = "0x6002154")]
			[Address(RVA = "0xDF0DB8", Offset = "0xDF0DB8", VA = "0xDF0DB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xDF0E34", Offset = "0xDF0E34", VA = "0xDF0E34")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public AudioMixer StateMixer
		{
			[Token(Token = "0x6002156")]
			[Address(RVA = "0xDF0CC0", Offset = "0xDF0CC0", VA = "0xDF0CC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xDF0E3C", Offset = "0xDF0E3C", VA = "0xDF0E3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xDF0EF0", Offset = "0xDF0EF0", VA = "0xDF0EF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xDF0F64", Offset = "0xDF0F64", VA = "0xDF0F64")]
		private void OnInitialized()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xDF0CE8", Offset = "0xDF0CE8", VA = "0xDF0CE8")]
		private void Init()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xDF1174", Offset = "0xDF1174", VA = "0xDF1174")]
		private void InitSources()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xDF0F68", Offset = "0xDF0F68", VA = "0xDF0F68")]
		private void InitLevels()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xDF1A8C", Offset = "0xDF1A8C", VA = "0xDF1A8C")]
		public void ChangeMusic(string musicKey, bool play, MusicSnapshots newSnapshot = MusicSnapshots.Base, float transistionTime = 0.25f)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xDF1C30", Offset = "0xDF1C30", VA = "0xDF1C30")]
		public void ChangeMusic(AudioClip newMusic, bool play)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xDF1B30", Offset = "0xDF1B30", VA = "0xDF1B30")]
		public AudioClip GetMusic(string key)
		{
			return null;
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xDF1E78", Offset = "0xDF1E78", VA = "0xDF1E78")]
		public bool ToggleMusic(bool start)
		{
			return default(bool);
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xDF1F00", Offset = "0xDF1F00", VA = "0xDF1F00")]
		public AudioSourceHelper Play(string clipName, [Optional] AudioOptions options, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xDF219C", Offset = "0xDF219C", VA = "0xDF219C")]
		private AudioSourceHelper Play(AudioClip clip, [Optional] AudioOptions options, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xDF2A1C", Offset = "0xDF2A1C", VA = "0xDF2A1C")]
		public void Stop(AudioType type, [Optional] AudioSource src)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xDF2B68", Offset = "0xDF2B68", VA = "0xDF2B68")]
		public void Pause(AudioType type, bool pause, [Optional] AudioSource src)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xDF2CD8", Offset = "0xDF2CD8", VA = "0xDF2CD8")]
		public void Play(AudioSource source, AudioType audioType = AudioType.Sound, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xDF2988", Offset = "0xDF2988", VA = "0xDF2988")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F354", Offset = "0xB4F354")]
		private IEnumerator WaitForAudio(AudioSourceHelper src, Action callback, AudioType type)
		{
			return null;
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xDF1AD4", Offset = "0xDF1AD4", VA = "0xDF1AD4")]
		public void TransitionMusicSnapshot(MusicSnapshots snapshot, float transition)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xDF2ED4", Offset = "0xDF2ED4", VA = "0xDF2ED4")]
		public void TransitionSoundSnapshot(SoundSnapshots snapshot, float transition)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xDF2C7C", Offset = "0xDF2C7C", VA = "0xDF2C7C")]
		public void TransitionMasterSnapshot(MasterSnapshots snapshot, float transition)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xDF2020", Offset = "0xDF2020", VA = "0xDF2020")]
		public AudioClip GetClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xDF248C", Offset = "0xDF248C", VA = "0xDF248C")]
		private AudioSourceHelper GetSource(bool is3D = false)
		{
			return null;
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xDF3128", Offset = "0xDF3128", VA = "0xDF3128")]
		public void SetVolume(float volume, AudioState state)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xDF32A8", Offset = "0xDF32A8", VA = "0xDF32A8")]
		private float ModifyVolume(float volume, bool positive = false)
		{
			return default(float);
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xDF18A0", Offset = "0xDF18A0", VA = "0xDF18A0")]
		private void UpdateVolume(float volume, AudioState state)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xDF3330", Offset = "0xDF3330", VA = "0xDF3330")]
		public float GetNormalisedVolume(AudioState state)
		{
			return default(float);
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xDF33C4", Offset = "0xDF33C4", VA = "0xDF33C4")]
		private float GetVolume(AudioState state)
		{
			return default(float);
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xDF32BC", Offset = "0xDF32BC", VA = "0xDF32BC")]
		public void ToggleMute(AudioState state)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xDF2404", Offset = "0xDF2404", VA = "0xDF2404")]
		public bool IsMute(AudioState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xDF348C", Offset = "0xDF348C", VA = "0xDF348C")]
		private void ToggleMuteMusic()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xDF361C", Offset = "0xDF361C", VA = "0xDF361C")]
		private void ToggleSound()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xDF37AC", Offset = "0xDF37AC", VA = "0xDF37AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB4F3B8", Offset = "0xB4F3B8")]
		private void ToggleVoice()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xDF31D8", Offset = "0xDF31D8", VA = "0xDF31D8")]
		private bool CheckInVolumeThreshold(float volume, bool checkForMin = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xDF385C", Offset = "0xDF385C", VA = "0xDF385C")]
		public void TogglePause(bool forceUnpause = false)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xDF3894", Offset = "0xDF3894", VA = "0xDF3894")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class LobbyAudio : StateAudio
	{
		[Token(Token = "0x2000899")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB355C8", Offset = "0xB355C8")]
		private sealed class <AmbiantFX>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyAudio <>4__this;

			[Token(Token = "0x17000559")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600339C")]
				[Address(RVA = "0xDF4088", Offset = "0xDF4088", VA = "0xDF4088", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600339E")]
				[Address(RVA = "0xDF40F0", Offset = "0xDF40F0", VA = "0xDF40F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003399")]
			[Address(RVA = "0xDF3C34", Offset = "0xDF3C34", VA = "0xDF3C34")]
			[DebuggerHidden]
			public <AmbiantFX>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600339A")]
			[Address(RVA = "0xDF3EB8", Offset = "0xDF3EB8", VA = "0xDF3EB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600339B")]
			[Address(RVA = "0xDF3EBC", Offset = "0xDF3EBC", VA = "0xDF3EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600339D")]
			[Address(RVA = "0xDF4090", Offset = "0xDF4090", VA = "0xDF4090", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ambiantFXCooldown;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ambiantFXMultiplier;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource fxSource;

		[Token(Token = "0x170002CE")]
		private AudioSource Ambiance
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0xDF3A6C", Offset = "0xDF3A6C", VA = "0xDF3A6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xDF3AC4", Offset = "0xDF3AC4", VA = "0xDF3AC4", Slot = "5")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xDF3BC4", Offset = "0xDF3BC4", VA = "0xDF3BC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F3F0", Offset = "0xB4F3F0")]
		private IEnumerator AmbiantFX()
		{
			return null;
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xDF3C60", Offset = "0xDF3C60", VA = "0xDF3C60", Slot = "6")]
		protected override AudioClip GetAudio(string audioGroup)
		{
			return null;
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xDF3DF0", Offset = "0xDF3DF0", VA = "0xDF3DF0", Slot = "7")]
		protected override AudioSource GetSource(string group)
		{
			return null;
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xDF3EA4", Offset = "0xDF3EA4", VA = "0xDF3EA4")]
		public LobbyAudio()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class TitleAudio : StateAudio
	{
		[Token(Token = "0x600217F")]
		[Address(RVA = "0xDF40F8", Offset = "0xDF40F8", VA = "0xDF40F8", Slot = "5")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xDF416C", Offset = "0xDF416C", VA = "0xDF416C")]
		public TitleAudio()
		{
		}
	}
}
namespace TBM.Audio.Public.Triggers
{
	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB334E8", Offset = "0xB334E8")]
	public class CapsuleTrigger : AudioTrigger
	{
		[Token(Token = "0x6002181")]
		[Address(RVA = "0xDF4174", Offset = "0xDF4174", VA = "0xDF4174")]
		private void OnTriggerEnter(Collider trigger)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xDF41B0", Offset = "0xDF41B0", VA = "0xDF41B0")]
		private void CheckAchievement(string clipName)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xDF4224", Offset = "0xDF4224", VA = "0xDF4224")]
		public CapsuleTrigger()
		{
		}
	}
}
namespace TBM.Audio.Core
{
	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3354C", Offset = "0xB3354C")]
	public class AudioTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Mixer mixer;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected AudioSource source;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string audioClip;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool playOnAwake;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected AudioRolloffMode rolloffMode;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool loop;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		protected bool is3d;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected int layer;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected bool transitionSnapshot;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected AudioType audioType;

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xDF0980", Offset = "0xDF0980", VA = "0xDF0980")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xDF0CE0", Offset = "0xDF0CE0", VA = "0xDF0CE0")]
		public AudioTrigger()
		{
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20004A8")]
	public struct IVRSystem
	{
		[Token(Token = "0x200089A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB355D8", Offset = "0xB355D8")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200089B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB355EC", Offset = "0xB355EC")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x200089C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35600", Offset = "0xB35600")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x200089D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35614", Offset = "0xB35614")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x200089E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35628", Offset = "0xB35628")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x200089F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3563C", Offset = "0xB3563C")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20008A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35650", Offset = "0xB35650")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x20008A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35664", Offset = "0xB35664")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x20008A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35678", Offset = "0xB35678")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x20008A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3568C", Offset = "0xB3568C")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x20008A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB356A0", Offset = "0xB356A0")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x20008A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB356B4", Offset = "0xB356B4")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x20008A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB356C8", Offset = "0xB356C8")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x20008A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB356DC", Offset = "0xB356DC")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20008A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB356F0", Offset = "0xB356F0")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20008A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35704", Offset = "0xB35704")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x20008AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35718", Offset = "0xB35718")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x20008AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3572C", Offset = "0xB3572C")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20008AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35740", Offset = "0xB35740")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20008AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35754", Offset = "0xB35754")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20008AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35768", Offset = "0xB35768")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20008AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3577C", Offset = "0xB3577C")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20008B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35790", Offset = "0xB35790")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB357A4", Offset = "0xB357A4")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB357B8", Offset = "0xB357B8")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB357CC", Offset = "0xB357CC")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB357E0", Offset = "0xB357E0")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB357F4", Offset = "0xB357F4")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35808", Offset = "0xB35808")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20008B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3581C", Offset = "0xB3581C")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20008B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35830", Offset = "0xB35830")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20008B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35844", Offset = "0xB35844")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20008BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35858", Offset = "0xB35858")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20008BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3586C", Offset = "0xB3586C")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20008BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35880", Offset = "0xB35880")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20008BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35894", Offset = "0xB35894")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20008BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB358A8", Offset = "0xB358A8")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x20008BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB358BC", Offset = "0xB358BC")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20008C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB358D0", Offset = "0xB358D0")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20008C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB358E4", Offset = "0xB358E4")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20008C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB358F8", Offset = "0xB358F8")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20008C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3590C", Offset = "0xB3590C")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20008C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35920", Offset = "0xB35920")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20008C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35934", Offset = "0xB35934")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20008C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35948", Offset = "0xB35948")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20008C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3595C", Offset = "0xB3595C")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20008C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35970", Offset = "0xB35970")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20004A9")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20008C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35984", Offset = "0xB35984")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20008CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35998", Offset = "0xB35998")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20008CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB359AC", Offset = "0xB359AC")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20004AA")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20008CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB359C0", Offset = "0xB359C0")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20008CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB359D4", Offset = "0xB359D4")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20008CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB359E8", Offset = "0xB359E8")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20008CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB359FC", Offset = "0xB359FC")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20008D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A10", Offset = "0xB35A10")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20008D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A24", Offset = "0xB35A24")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20008D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A38", Offset = "0xB35A38")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20008D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A4C", Offset = "0xB35A4C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20008D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A60", Offset = "0xB35A60")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20008D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A74", Offset = "0xB35A74")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20008D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A88", Offset = "0xB35A88")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20008D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35A9C", Offset = "0xB35A9C")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20004AB")]
	public struct IVRApplications
	{
		[Token(Token = "0x20008D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35AB0", Offset = "0xB35AB0")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x20008D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35AC4", Offset = "0xB35AC4")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x20008DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35AD8", Offset = "0xB35AD8")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x20008DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35AEC", Offset = "0xB35AEC")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x20008DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B00", Offset = "0xB35B00")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20008DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B14", Offset = "0xB35B14")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20008DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B28", Offset = "0xB35B28")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x20008DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B3C", Offset = "0xB35B3C")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x20008E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B50", Offset = "0xB35B50")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x20008E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B64", Offset = "0xB35B64")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x20008E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B78", Offset = "0xB35B78")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x20008E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35B8C", Offset = "0xB35B8C")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x20008E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35BA0", Offset = "0xB35BA0")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x20008E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35BB4", Offset = "0xB35BB4")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x20008E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35BC8", Offset = "0xB35BC8")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x20008E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35BDC", Offset = "0xB35BDC")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20008E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35BF0", Offset = "0xB35BF0")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20008E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C04", Offset = "0xB35C04")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x20008EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C18", Offset = "0xB35C18")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x20008EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C2C", Offset = "0xB35C2C")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x20008EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C40", Offset = "0xB35C40")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20008ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C54", Offset = "0xB35C54")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x20008EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C68", Offset = "0xB35C68")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x20008EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C7C", Offset = "0xB35C7C")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x20008F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35C90", Offset = "0xB35C90")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20008F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35CA4", Offset = "0xB35CA4")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x20008F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35CB8", Offset = "0xB35CB8")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x20008F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35CCC", Offset = "0xB35CCC")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x20008F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35CE0", Offset = "0xB35CE0")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x20008F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35CF4", Offset = "0xB35CF4")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x20008F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D08", Offset = "0xB35D08")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x20004AC")]
	public struct IVRChaperone
	{
		[Token(Token = "0x20008F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D1C", Offset = "0xB35D1C")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x20008F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D30", Offset = "0xB35D30")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20008F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D44", Offset = "0xB35D44")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20008FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D58", Offset = "0xB35D58")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x20008FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D6C", Offset = "0xB35D6C")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x20008FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D80", Offset = "0xB35D80")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x20008FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35D94", Offset = "0xB35D94")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x20008FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35DA8", Offset = "0xB35DA8")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x20004AD")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x20008FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35DBC", Offset = "0xB35DBC")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000900")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35DD0", Offset = "0xB35DD0")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000901")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35DE4", Offset = "0xB35DE4")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000902")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35DF8", Offset = "0xB35DF8")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000903")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E0C", Offset = "0xB35E0C")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000904")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E20", Offset = "0xB35E20")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000905")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E34", Offset = "0xB35E34")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000906")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E48", Offset = "0xB35E48")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000907")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E5C", Offset = "0xB35E5C")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000908")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E70", Offset = "0xB35E70")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000909")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E84", Offset = "0xB35E84")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200090A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35E98", Offset = "0xB35E98")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200090B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35EAC", Offset = "0xB35EAC")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x200090C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35EC0", Offset = "0xB35EC0")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200090D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35ED4", Offset = "0xB35ED4")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x200090E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35EE8", Offset = "0xB35EE8")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x200090F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35EFC", Offset = "0xB35EFC")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000910")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F10", Offset = "0xB35F10")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000911")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F24", Offset = "0xB35F24")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000912")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F38", Offset = "0xB35F38")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x20004AE")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000913")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F4C", Offset = "0xB35F4C")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000914")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F60", Offset = "0xB35F60")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000915")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F74", Offset = "0xB35F74")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000916")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F88", Offset = "0xB35F88")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000917")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35F9C", Offset = "0xB35F9C")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000918")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35FB0", Offset = "0xB35FB0")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000919")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35FC4", Offset = "0xB35FC4")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x200091A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35FD8", Offset = "0xB35FD8")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x200091B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB35FEC", Offset = "0xB35FEC")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x200091C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36000", Offset = "0xB36000")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x200091D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36014", Offset = "0xB36014")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x200091E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36028", Offset = "0xB36028")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200091F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3603C", Offset = "0xB3603C")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000920")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36050", Offset = "0xB36050")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000921")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36064", Offset = "0xB36064")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000922")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36078", Offset = "0xB36078")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000923")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3608C", Offset = "0xB3608C")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000924")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB360A0", Offset = "0xB360A0")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000925")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB360B4", Offset = "0xB360B4")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000926")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB360C8", Offset = "0xB360C8")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000927")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB360DC", Offset = "0xB360DC")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000928")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB360F0", Offset = "0xB360F0")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000929")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36104", Offset = "0xB36104")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x200092A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36118", Offset = "0xB36118")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x200092B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3612C", Offset = "0xB3612C")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x200092C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36140", Offset = "0xB36140")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x200092D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36154", Offset = "0xB36154")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x200092E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36168", Offset = "0xB36168")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x200092F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3617C", Offset = "0xB3617C")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000930")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36190", Offset = "0xB36190")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000931")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB361A4", Offset = "0xB361A4")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000932")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB361B8", Offset = "0xB361B8")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000933")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB361CC", Offset = "0xB361CC")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000934")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB361E0", Offset = "0xB361E0")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000935")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB361F4", Offset = "0xB361F4")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000936")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36208", Offset = "0xB36208")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000937")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3621C", Offset = "0xB3621C")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000938")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36230", Offset = "0xB36230")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000939")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36244", Offset = "0xB36244")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200093A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36258", Offset = "0xB36258")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200093B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3626C", Offset = "0xB3626C")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200093C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36280", Offset = "0xB36280")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x200093D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36294", Offset = "0xB36294")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x20004AF")]
	public struct IVROverlay
	{
		[Token(Token = "0x200093E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB362A8", Offset = "0xB362A8")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x200093F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB362BC", Offset = "0xB362BC")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000940")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB362D0", Offset = "0xB362D0")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000941")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB362E4", Offset = "0xB362E4")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000942")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB362F8", Offset = "0xB362F8")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000943")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3630C", Offset = "0xB3630C")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000944")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36320", Offset = "0xB36320")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000945")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36334", Offset = "0xB36334")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000946")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36348", Offset = "0xB36348")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000947")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3635C", Offset = "0xB3635C")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000948")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36370", Offset = "0xB36370")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000949")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36384", Offset = "0xB36384")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x200094A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36398", Offset = "0xB36398")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x200094B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB363AC", Offset = "0xB363AC")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x200094C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB363C0", Offset = "0xB363C0")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x200094D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB363D4", Offset = "0xB363D4")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x200094E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB363E8", Offset = "0xB363E8")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x200094F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB363FC", Offset = "0xB363FC")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000950")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36410", Offset = "0xB36410")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x2000951")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36424", Offset = "0xB36424")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000952")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36438", Offset = "0xB36438")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000953")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3644C", Offset = "0xB3644C")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000954")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36460", Offset = "0xB36460")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000955")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36474", Offset = "0xB36474")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000956")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36488", Offset = "0xB36488")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000957")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3649C", Offset = "0xB3649C")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000958")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB364B0", Offset = "0xB364B0")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000959")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB364C4", Offset = "0xB364C4")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x200095A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB364D8", Offset = "0xB364D8")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200095B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB364EC", Offset = "0xB364EC")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200095C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36500", Offset = "0xB36500")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x200095D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36514", Offset = "0xB36514")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x200095E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36528", Offset = "0xB36528")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x200095F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3653C", Offset = "0xB3653C")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000960")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36550", Offset = "0xB36550")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000961")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36564", Offset = "0xB36564")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000962")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36578", Offset = "0xB36578")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000963")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3658C", Offset = "0xB3658C")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x2000964")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB365A0", Offset = "0xB365A0")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000965")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB365B4", Offset = "0xB365B4")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000966")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB365C8", Offset = "0xB365C8")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000967")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB365DC", Offset = "0xB365DC")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000968")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB365F0", Offset = "0xB365F0")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000969")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36604", Offset = "0xB36604")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x200096A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36618", Offset = "0xB36618")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x200096B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3662C", Offset = "0xB3662C")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200096C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36640", Offset = "0xB36640")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x200096D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36654", Offset = "0xB36654")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x200096E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36668", Offset = "0xB36668")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200096F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3667C", Offset = "0xB3667C")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000970")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36690", Offset = "0xB36690")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x2000971")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB366A4", Offset = "0xB366A4")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000972")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB366B8", Offset = "0xB366B8")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x2000973")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB366CC", Offset = "0xB366CC")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x2000974")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB366E0", Offset = "0xB366E0")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x2000975")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB366F4", Offset = "0xB366F4")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x2000976")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36708", Offset = "0xB36708")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000977")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3671C", Offset = "0xB3671C")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000978")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36730", Offset = "0xB36730")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000979")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36744", Offset = "0xB36744")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x200097A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36758", Offset = "0xB36758")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x200097B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3676C", Offset = "0xB3676C")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x200097C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36780", Offset = "0xB36780")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x200097D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36794", Offset = "0xB36794")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x200097E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB367A8", Offset = "0xB367A8")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x200097F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB367BC", Offset = "0xB367BC")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x2000980")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB367D0", Offset = "0xB367D0")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x2000981")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB367E4", Offset = "0xB367E4")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000982")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB367F8", Offset = "0xB367F8")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x2000983")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3680C", Offset = "0xB3680C")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x2000984")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36820", Offset = "0xB36820")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x2000985")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36834", Offset = "0xB36834")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000986")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36848", Offset = "0xB36848")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000987")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3685C", Offset = "0xB3685C")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000988")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36870", Offset = "0xB36870")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000989")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36884", Offset = "0xB36884")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x200098A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36898", Offset = "0xB36898")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x200098B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB368AC", Offset = "0xB368AC")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x200098C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB368C0", Offset = "0xB368C0")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x200098D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB368D4", Offset = "0xB368D4")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x200098E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB368E8", Offset = "0xB368E8")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x200098F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB368FC", Offset = "0xB368FC")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20004B0")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x2000990")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36910", Offset = "0xB36910")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x2000991")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36924", Offset = "0xB36924")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x2000992")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36938", Offset = "0xB36938")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x2000993")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3694C", Offset = "0xB3694C")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x2000994")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36960", Offset = "0xB36960")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x2000995")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36974", Offset = "0xB36974")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000996")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36988", Offset = "0xB36988")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000997")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB3699C", Offset = "0xB3699C")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000998")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB369B0", Offset = "0xB369B0")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000999")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB369C4", Offset = "0xB369C4")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x200099A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB369D8", Offset = "0xB369D8")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x200099B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB369EC", Offset = "0xB369EC")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200099C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A00", Offset = "0xB36A00")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x200099D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A14", Offset = "0xB36A14")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x200099E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A28", Offset = "0xB36A28")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200099F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A3C", Offset = "0xB36A3C")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20009A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A50", Offset = "0xB36A50")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20009A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A64", Offset = "0xB36A64")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20004B1")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20009A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A78", Offset = "0xB36A78")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x20009A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36A8C", Offset = "0xB36A8C")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20004B2")]
	public struct IVRSettings
	{
		[Token(Token = "0x20009A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36AA0", Offset = "0xB36AA0")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x20009A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36AB4", Offset = "0xB36AB4")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x20009A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36AC8", Offset = "0xB36AC8")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x20009A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36ADC", Offset = "0xB36ADC")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x20009A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36AF0", Offset = "0xB36AF0")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x20009A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B04", Offset = "0xB36B04")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x20009AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B18", Offset = "0xB36B18")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20009AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B2C", Offset = "0xB36B2C")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20009AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B40", Offset = "0xB36B40")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20009AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B54", Offset = "0xB36B54")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20009AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B68", Offset = "0xB36B68")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20009AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B7C", Offset = "0xB36B7C")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20004B3")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20009B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36B90", Offset = "0xB36B90")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20009B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36BA4", Offset = "0xB36BA4")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20009B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36BB8", Offset = "0xB36BB8")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20009B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36BCC", Offset = "0xB36BCC")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20009B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36BE0", Offset = "0xB36BE0")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20009B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36BF4", Offset = "0xB36BF4")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20009B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C08", Offset = "0xB36C08")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20004B4")]
	public struct IVRResources
	{
		[Token(Token = "0x20009B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C1C", Offset = "0xB36C1C")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20009B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C30", Offset = "0xB36C30")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20004B5")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20009B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C44", Offset = "0xB36C44")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20009BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C58", Offset = "0xB36C58")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;
	}
	[Token(Token = "0x20004B6")]
	public class CVRSystem
	{
		[Token(Token = "0x20009BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C6C", Offset = "0xB36C6C")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20009BC")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x40031B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x40031B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20009BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C80", Offset = "0xB36C80")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20009BE")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x40031B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x40031B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20009BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36C94", Offset = "0xB36C94")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20009C0")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x40031B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x40031B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x149BD80", Offset = "0x149BD80", VA = "0x149BD80")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x149BE88", Offset = "0x149BE88", VA = "0x149BE88")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x149BEAC", Offset = "0x149BEAC", VA = "0x149BEAC")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x149BEC8", Offset = "0x149BEC8", VA = "0x149BEC8")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x149BEF4", Offset = "0x149BEF4", VA = "0x149BEF4")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x149BF10", Offset = "0x149BF10", VA = "0x149BF10")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x149BF2C", Offset = "0x149BF2C", VA = "0x149BF2C")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x149BF50", Offset = "0x149BF50", VA = "0x149BF50")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x149BF6C", Offset = "0x149BF6C", VA = "0x149BF6C")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x149BF8C", Offset = "0x149BF8C", VA = "0x149BF8C")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x149BFAC", Offset = "0x149BFAC", VA = "0x149BFAC")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x149BFC8", Offset = "0x149BFC8", VA = "0x149BFC8")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x149BFE8", Offset = "0x149BFE8", VA = "0x149BFE8")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x149C010", Offset = "0x149C010", VA = "0x149C010")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x149C02C", Offset = "0x149C02C", VA = "0x149C02C")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x149C048", Offset = "0x149C048", VA = "0x149C048")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x149C064", Offset = "0x149C064", VA = "0x149C064")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x149C090", Offset = "0x149C090", VA = "0x149C090")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x149C0AC", Offset = "0x149C0AC", VA = "0x149C0AC")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x149C0C8", Offset = "0x149C0C8", VA = "0x149C0C8")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x149C0E4", Offset = "0x149C0E4", VA = "0x149C0E4")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x149C100", Offset = "0x149C100", VA = "0x149C100")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x149C11C", Offset = "0x149C11C", VA = "0x149C11C")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x149C138", Offset = "0x149C138", VA = "0x149C138")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x149C154", Offset = "0x149C154", VA = "0x149C154")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x149C170", Offset = "0x149C170", VA = "0x149C170")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x149C18C", Offset = "0x149C18C", VA = "0x149C18C")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x149C1A8", Offset = "0x149C1A8", VA = "0x149C1A8")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x149C1C4", Offset = "0x149C1C4", VA = "0x149C1C4")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x149C1E0", Offset = "0x149C1E0", VA = "0x149C1E0")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x149C1FC", Offset = "0x149C1FC", VA = "0x149C1FC")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x149C290", Offset = "0x149C290", VA = "0x149C290")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x149C678", Offset = "0x149C678", VA = "0x149C678")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x149C694", Offset = "0x149C694", VA = "0x149C694")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x149C728", Offset = "0x149C728", VA = "0x149C728")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x149C744", Offset = "0x149C744", VA = "0x149C744")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x149CB78", Offset = "0x149CB78", VA = "0x149CB78")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x149D024", Offset = "0x149D024", VA = "0x149D024")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x149D040", Offset = "0x149D040", VA = "0x149D040")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x149D0D4", Offset = "0x149D0D4", VA = "0x149D0D4")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x149D168", Offset = "0x149D168", VA = "0x149D168")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x149D184", Offset = "0x149D184", VA = "0x149D184")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x149D1A0", Offset = "0x149D1A0", VA = "0x149D1A0")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x149D1BC", Offset = "0x149D1BC", VA = "0x149D1BC")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x149D1D8", Offset = "0x149D1D8", VA = "0x149D1D8")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x149D1F4", Offset = "0x149D1F4", VA = "0x149D1F4")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x149D210", Offset = "0x149D210", VA = "0x149D210")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x149D22C", Offset = "0x149D22C", VA = "0x149D22C")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1499A7C", Offset = "0x1499A7C", VA = "0x1499A7C")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1499B84", Offset = "0x1499B84", VA = "0x1499B84")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1499BB0", Offset = "0x1499BB0", VA = "0x1499BB0")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1499BDC", Offset = "0x1499BDC", VA = "0x1499BDC")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x149D5A8", Offset = "0x149D5A8", VA = "0x149D5A8")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x149D6B0", Offset = "0x149D6B0", VA = "0x149D6B0")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x149D744", Offset = "0x149D744", VA = "0x149D744")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x149D764", Offset = "0x149D764", VA = "0x149D764")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x149D78C", Offset = "0x149D78C", VA = "0x149D78C")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x149D7A8", Offset = "0x149D7A8", VA = "0x149D7A8")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x149D7C4", Offset = "0x149D7C4", VA = "0x149D7C4")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x149D7E4", Offset = "0x149D7E4", VA = "0x149D7E4")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x149D800", Offset = "0x149D800", VA = "0x149D800")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x149D81C", Offset = "0x149D81C", VA = "0x149D81C")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x149D840", Offset = "0x149D840", VA = "0x149D840")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x149D85C", Offset = "0x149D85C", VA = "0x149D85C")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x149D87C", Offset = "0x149D87C", VA = "0x149D87C")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20004B9")]
	public class CVRApplications
	{
		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x10F5DFC", Offset = "0x10F5DFC", VA = "0x10F5DFC")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x10F5F04", Offset = "0x10F5F04", VA = "0x10F5F04")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x10F5F24", Offset = "0x10F5F24", VA = "0x10F5F24")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x10F5F40", Offset = "0x10F5F40", VA = "0x10F5F40")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x10F5F5C", Offset = "0x10F5F5C", VA = "0x10F5F5C")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x10F5F78", Offset = "0x10F5F78", VA = "0x10F5F78")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x10F5F94", Offset = "0x10F5F94", VA = "0x10F5F94")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x10F5FB0", Offset = "0x10F5FB0", VA = "0x10F5FB0")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x10F5FCC", Offset = "0x10F5FCC", VA = "0x10F5FCC")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x10F5FF4", Offset = "0x10F5FF4", VA = "0x10F5FF4")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x10F6010", Offset = "0x10F6010", VA = "0x10F6010")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x10F602C", Offset = "0x10F602C", VA = "0x10F602C")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x10F6048", Offset = "0x10F6048", VA = "0x10F6048")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x10F6064", Offset = "0x10F6064", VA = "0x10F6064")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x10F6080", Offset = "0x10F6080", VA = "0x10F6080")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x10F6114", Offset = "0x10F6114", VA = "0x10F6114")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x10F6130", Offset = "0x10F6130", VA = "0x10F6130")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x10F614C", Offset = "0x10F614C", VA = "0x10F614C")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x10F6168", Offset = "0x10F6168", VA = "0x10F6168")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x10F6188", Offset = "0x10F6188", VA = "0x10F6188")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x10F61A4", Offset = "0x10F61A4", VA = "0x10F61A4")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x10F61C0", Offset = "0x10F61C0", VA = "0x10F61C0")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x10F61DC", Offset = "0x10F61DC", VA = "0x10F61DC")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x10F61F8", Offset = "0x10F61F8", VA = "0x10F61F8")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x10F6214", Offset = "0x10F6214", VA = "0x10F6214")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x10F6230", Offset = "0x10F6230", VA = "0x10F6230")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x10F624C", Offset = "0x10F624C", VA = "0x10F624C")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x10F6268", Offset = "0x10F6268", VA = "0x10F6268")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x10F6284", Offset = "0x10F6284", VA = "0x10F6284")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x10F6318", Offset = "0x10F6318", VA = "0x10F6318")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x10F6334", Offset = "0x10F6334", VA = "0x10F6334")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x10F6350", Offset = "0x10F6350", VA = "0x10F6350")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20004BA")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x10F636C", Offset = "0x10F636C", VA = "0x10F636C")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x10F6474", Offset = "0x10F6474", VA = "0x10F6474")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x10F6490", Offset = "0x10F6490", VA = "0x10F6490")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x10F64B4", Offset = "0x10F64B4", VA = "0x10F64B4")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x10F64D0", Offset = "0x10F64D0", VA = "0x10F64D0")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x10F64EC", Offset = "0x10F64EC", VA = "0x10F64EC")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x10F6508", Offset = "0x10F6508", VA = "0x10F6508")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x10F6524", Offset = "0x10F6524", VA = "0x10F6524")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x10F6540", Offset = "0x10F6540", VA = "0x10F6540")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x10F6560", Offset = "0x10F6560", VA = "0x10F6560")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x10F6668", Offset = "0x10F6668", VA = "0x10F6668")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x10F6684", Offset = "0x10F6684", VA = "0x10F6684")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x10F66A0", Offset = "0x10F66A0", VA = "0x10F66A0")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x10F66C4", Offset = "0x10F66C4", VA = "0x10F66C4")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x10F66E0", Offset = "0x10F66E0", VA = "0x10F66E0")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x10F6780", Offset = "0x10F6780", VA = "0x10F6780")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x10F6820", Offset = "0x10F6820", VA = "0x10F6820")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x10F683C", Offset = "0x10F683C", VA = "0x10F683C")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x10F6858", Offset = "0x10F6858", VA = "0x10F6858")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x10F6874", Offset = "0x10F6874", VA = "0x10F6874")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x10F689C", Offset = "0x10F689C", VA = "0x10F689C")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x10F68B8", Offset = "0x10F68B8", VA = "0x10F68B8")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x10F68D4", Offset = "0x10F68D4", VA = "0x10F68D4")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x10F68F0", Offset = "0x10F68F0", VA = "0x10F68F0")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x10F690C", Offset = "0x10F690C", VA = "0x10F690C")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x10F6934", Offset = "0x10F6934", VA = "0x10F6934")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x10F69D4", Offset = "0x10F69D4", VA = "0x10F69D4")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x10F69FC", Offset = "0x10F69FC", VA = "0x10F69FC")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x10F6A9C", Offset = "0x10F6A9C", VA = "0x10F6A9C")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x10F6ABC", Offset = "0x10F6ABC", VA = "0x10F6ABC")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004BC")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x10F6AD8", Offset = "0x10F6AD8", VA = "0x10F6AD8")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x10F6BE0", Offset = "0x10F6BE0", VA = "0x10F6BE0")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x10F6BFC", Offset = "0x10F6BFC", VA = "0x10F6BFC")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x10F6C18", Offset = "0x10F6C18", VA = "0x10F6C18")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x10F6C4C", Offset = "0x10F6C4C", VA = "0x10F6C4C")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x10F6C80", Offset = "0x10F6C80", VA = "0x10F6C80")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x10F6C9C", Offset = "0x10F6C9C", VA = "0x10F6C9C")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x10F6CB8", Offset = "0x10F6CB8", VA = "0x10F6CB8")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x10F6CD4", Offset = "0x10F6CD4", VA = "0x10F6CD4")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x10F6CF0", Offset = "0x10F6CF0", VA = "0x10F6CF0")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x10F6D0C", Offset = "0x10F6D0C", VA = "0x10F6D0C")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x10F6D28", Offset = "0x10F6D28", VA = "0x10F6D28")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x10F6D44", Offset = "0x10F6D44", VA = "0x10F6D44")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x10F6D60", Offset = "0x10F6D60", VA = "0x10F6D60")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x10F6D80", Offset = "0x10F6D80", VA = "0x10F6D80")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x10F6DA0", Offset = "0x10F6DA0", VA = "0x10F6DA0")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x10F6DC0", Offset = "0x10F6DC0", VA = "0x10F6DC0")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x10F6DDC", Offset = "0x10F6DDC", VA = "0x10F6DDC")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x10F6E04", Offset = "0x10F6E04", VA = "0x10F6E04")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x10F6E20", Offset = "0x10F6E20", VA = "0x10F6E20")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x10F6E3C", Offset = "0x10F6E3C", VA = "0x10F6E3C")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x10F6E58", Offset = "0x10F6E58", VA = "0x10F6E58")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x10F6E74", Offset = "0x10F6E74", VA = "0x10F6E74")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x10F6E90", Offset = "0x10F6E90", VA = "0x10F6E90")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x10F6EAC", Offset = "0x10F6EAC", VA = "0x10F6EAC")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x10F6EC8", Offset = "0x10F6EC8", VA = "0x10F6EC8")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x10F6EE4", Offset = "0x10F6EE4", VA = "0x10F6EE4")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x10F6F00", Offset = "0x10F6F00", VA = "0x10F6F00")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x10F6F1C", Offset = "0x10F6F1C", VA = "0x10F6F1C")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x10F6F38", Offset = "0x10F6F38", VA = "0x10F6F38")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x10F6F54", Offset = "0x10F6F54", VA = "0x10F6F54")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x10F6F70", Offset = "0x10F6F70", VA = "0x10F6F70")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x10F6F90", Offset = "0x10F6F90", VA = "0x10F6F90")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x10F6FAC", Offset = "0x10F6FAC", VA = "0x10F6FAC")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x10F6FCC", Offset = "0x10F6FCC", VA = "0x10F6FCC")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x10F6FE8", Offset = "0x10F6FE8", VA = "0x10F6FE8")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x10F7004", Offset = "0x10F7004", VA = "0x10F7004")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x10F7024", Offset = "0x10F7024", VA = "0x10F7024")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x10F7040", Offset = "0x10F7040", VA = "0x10F7040")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x10F705C", Offset = "0x10F705C", VA = "0x10F705C")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x10F7078", Offset = "0x10F7078", VA = "0x10F7078")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x10F7094", Offset = "0x10F7094", VA = "0x10F7094")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x10F70B0", Offset = "0x10F70B0", VA = "0x10F70B0")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x10F70CC", Offset = "0x10F70CC", VA = "0x10F70CC")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20004BD")]
	public class CVROverlay
	{
		[Token(Token = "0x20009C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36CA8", Offset = "0xB36CA8")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20009C2")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x40031B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x40031B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1499D40", Offset = "0x1499D40", VA = "0x1499D40")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x1499E48", Offset = "0x1499E48", VA = "0x1499E48")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1499E68", Offset = "0x1499E68", VA = "0x1499E68")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1499E88", Offset = "0x1499E88", VA = "0x1499E88")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1499EA4", Offset = "0x1499EA4", VA = "0x1499EA4")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1499EC0", Offset = "0x1499EC0", VA = "0x1499EC0")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1499EDC", Offset = "0x1499EDC", VA = "0x1499EDC")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1499EF8", Offset = "0x1499EF8", VA = "0x1499EF8")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1499F14", Offset = "0x1499F14", VA = "0x1499F14")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1499F30", Offset = "0x1499F30", VA = "0x1499F30")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1499F54", Offset = "0x1499F54", VA = "0x1499F54")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x1499FE8", Offset = "0x1499FE8", VA = "0x1499FE8")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x149A004", Offset = "0x149A004", VA = "0x149A004")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x149A020", Offset = "0x149A020", VA = "0x149A020")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x149A040", Offset = "0x149A040", VA = "0x149A040")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x149A060", Offset = "0x149A060", VA = "0x149A060")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x149A07C", Offset = "0x149A07C", VA = "0x149A07C")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x149A0A4", Offset = "0x149A0A4", VA = "0x149A0A4")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x149A0C0", Offset = "0x149A0C0", VA = "0x149A0C0")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x149A0E0", Offset = "0x149A0E0", VA = "0x149A0E0")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x149A0FC", Offset = "0x149A0FC", VA = "0x149A0FC")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x149A11C", Offset = "0x149A11C", VA = "0x149A11C")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x149A138", Offset = "0x149A138", VA = "0x149A138")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x149A158", Offset = "0x149A158", VA = "0x149A158")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x149A174", Offset = "0x149A174", VA = "0x149A174")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x149A194", Offset = "0x149A194", VA = "0x149A194")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x149A1B0", Offset = "0x149A1B0", VA = "0x149A1B0")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x149A1D4", Offset = "0x149A1D4", VA = "0x149A1D4")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x149A1F0", Offset = "0x149A1F0", VA = "0x149A1F0")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x149A20C", Offset = "0x149A20C", VA = "0x149A20C")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x149A228", Offset = "0x149A228", VA = "0x149A228")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x149A244", Offset = "0x149A244", VA = "0x149A244")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x149A260", Offset = "0x149A260", VA = "0x149A260")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x149A27C", Offset = "0x149A27C", VA = "0x149A27C")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x149A298", Offset = "0x149A298", VA = "0x149A298")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x149A2B4", Offset = "0x149A2B4", VA = "0x149A2B4")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x149A2D0", Offset = "0x149A2D0", VA = "0x149A2D0")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x149A2EC", Offset = "0x149A2EC", VA = "0x149A2EC")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x149A30C", Offset = "0x149A30C", VA = "0x149A30C")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x149A328", Offset = "0x149A328", VA = "0x149A328")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x149A348", Offset = "0x149A348", VA = "0x149A348")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x149A368", Offset = "0x149A368", VA = "0x149A368")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x149A384", Offset = "0x149A384", VA = "0x149A384")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x149A3A0", Offset = "0x149A3A0", VA = "0x149A3A0")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x149A3BC", Offset = "0x149A3BC", VA = "0x149A3BC")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x149A3D8", Offset = "0x149A3D8", VA = "0x149A3D8")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x149A3F4", Offset = "0x149A3F4", VA = "0x149A3F4")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x149A810", Offset = "0x149A810", VA = "0x149A810")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x149A82C", Offset = "0x149A82C", VA = "0x149A82C")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x149A848", Offset = "0x149A848", VA = "0x149A848")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x149A864", Offset = "0x149A864", VA = "0x149A864")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x149A880", Offset = "0x149A880", VA = "0x149A880")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x149A89C", Offset = "0x149A89C", VA = "0x149A89C")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x149A8B8", Offset = "0x149A8B8", VA = "0x149A8B8")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x149A8D4", Offset = "0x149A8D4", VA = "0x149A8D4")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x149A8F0", Offset = "0x149A8F0", VA = "0x149A8F0")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x149A90C", Offset = "0x149A90C", VA = "0x149A90C")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x149A928", Offset = "0x149A928", VA = "0x149A928")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x149A944", Offset = "0x149A944", VA = "0x149A944")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x149A964", Offset = "0x149A964", VA = "0x149A964")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x149A980", Offset = "0x149A980", VA = "0x149A980")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x149A99C", Offset = "0x149A99C", VA = "0x149A99C")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x149A9B8", Offset = "0x149A9B8", VA = "0x149A9B8")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x149A9D4", Offset = "0x149A9D4", VA = "0x149A9D4")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x149AA08", Offset = "0x149AA08", VA = "0x149AA08")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x149AA24", Offset = "0x149AA24", VA = "0x149AA24")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x149AA48", Offset = "0x149AA48", VA = "0x149AA48")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x149AA6C", Offset = "0x149AA6C", VA = "0x149AA6C")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x149AA88", Offset = "0x149AA88", VA = "0x149AA88")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x149AAA4", Offset = "0x149AAA4", VA = "0x149AAA4")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x149AAC0", Offset = "0x149AAC0", VA = "0x149AAC0")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x149AAE0", Offset = "0x149AAE0", VA = "0x149AAE0")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x149AAFC", Offset = "0x149AAFC", VA = "0x149AAFC")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x149AB18", Offset = "0x149AB18", VA = "0x149AB18")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x149AB3C", Offset = "0x149AB3C", VA = "0x149AB3C")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x149AB64", Offset = "0x149AB64", VA = "0x149AB64")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x149AB80", Offset = "0x149AB80", VA = "0x149AB80")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x149AB9C", Offset = "0x149AB9C", VA = "0x149AB9C")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x149ABB8", Offset = "0x149ABB8", VA = "0x149ABB8")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x149ABD4", Offset = "0x149ABD4", VA = "0x149ABD4")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x149ABF0", Offset = "0x149ABF0", VA = "0x149ABF0")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x149AC10", Offset = "0x149AC10", VA = "0x149AC10")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x149AC2C", Offset = "0x149AC2C", VA = "0x149AC2C")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class CVRRenderModels
	{
		[Token(Token = "0x20009C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xB36CBC", Offset = "0xB36CBC")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x20009C4")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x40031B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x40031BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x149AD64", Offset = "0x149AD64", VA = "0x149AD64")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x149AE6C", Offset = "0x149AE6C", VA = "0x149AE6C")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x149AE88", Offset = "0x149AE88", VA = "0x149AE88")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x149AEA4", Offset = "0x149AEA4", VA = "0x149AEA4")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x149AEC0", Offset = "0x149AEC0", VA = "0x149AEC0")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x149AEDC", Offset = "0x149AEDC", VA = "0x149AEDC")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x149AEF8", Offset = "0x149AEF8", VA = "0x149AEF8")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x149AF14", Offset = "0x149AF14", VA = "0x149AF14")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x149AF30", Offset = "0x149AF30", VA = "0x149AF30")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x149AF4C", Offset = "0x149AF4C", VA = "0x149AF4C")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x149AF68", Offset = "0x149AF68", VA = "0x149AF68")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x149AF84", Offset = "0x149AF84", VA = "0x149AF84")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x149AFA0", Offset = "0x149AFA0", VA = "0x149AFA0")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x149AFBC", Offset = "0x149AFBC", VA = "0x149AFBC")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x149AFD8", Offset = "0x149AFD8", VA = "0x149AFD8")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x149B564", Offset = "0x149B564", VA = "0x149B564")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x149B580", Offset = "0x149B580", VA = "0x149B580")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x149B59C", Offset = "0x149B59C", VA = "0x149B59C")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x149B5B8", Offset = "0x149B5B8", VA = "0x149B5B8")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BF")]
	public class CVRNotifications
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x1499C00", Offset = "0x1499C00", VA = "0x1499C00")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x1499D00", Offset = "0x1499D00", VA = "0x1499D00")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x1499D24", Offset = "0x1499D24", VA = "0x1499D24")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20004C0")]
	public class CVRSettings
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x149BAA8", Offset = "0x149BAA8", VA = "0x149BAA8")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x149BBB0", Offset = "0x149BBB0", VA = "0x149BBB0")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x149BC44", Offset = "0x149BC44", VA = "0x149BC44")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x149BC64", Offset = "0x149BC64", VA = "0x149BC64")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x149BC84", Offset = "0x149BC84", VA = "0x149BC84")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x149BCA0", Offset = "0x149BCA0", VA = "0x149BCA0")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x149BCBC", Offset = "0x149BCBC", VA = "0x149BCBC")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x149BCD8", Offset = "0x149BCD8", VA = "0x149BCD8")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x149BCF4", Offset = "0x149BCF4", VA = "0x149BCF4")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x149BD10", Offset = "0x149BD10", VA = "0x149BD10")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x149BD2C", Offset = "0x149BD2C", VA = "0x149BD2C")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x149BD48", Offset = "0x149BD48", VA = "0x149BD48")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x149BD64", Offset = "0x149BD64", VA = "0x149BD64")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x149B8C0", Offset = "0x149B8C0", VA = "0x149B8C0")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x149B9D0", Offset = "0x149B9D0", VA = "0x149B9D0")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x149B9F0", Offset = "0x149B9F0", VA = "0x149B9F0")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x149BA18", Offset = "0x149BA18", VA = "0x149BA18")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x149BA34", Offset = "0x149BA34", VA = "0x149BA34")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x149BA50", Offset = "0x149BA50", VA = "0x149BA50")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x149BA6C", Offset = "0x149BA6C", VA = "0x149BA6C")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x149BA8C", Offset = "0x149BA8C", VA = "0x149BA8C")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20004C2")]
	public class CVRResources
	{
		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x149B788", Offset = "0x149B788", VA = "0x149B788")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x149B888", Offset = "0x149B888", VA = "0x149B888")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x149B8A4", Offset = "0x149B8A4", VA = "0x149B8A4")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20004C3")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x1499944", Offset = "0x1499944", VA = "0x1499944")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x1499A44", Offset = "0x1499A44", VA = "0x1499A44")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x1499A60", Offset = "0x1499A60", VA = "0x1499A60")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20004C4")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xF5AACC", Offset = "0xF5AACC", VA = "0xF5AACC")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xF5AB60", Offset = "0xF5AB60", VA = "0xF5AB60")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xF5ABD4", Offset = "0xF5ABD4", VA = "0xF5ABD4")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xF5AC54", Offset = "0xF5AC54", VA = "0xF5AC54")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xF5AD48", Offset = "0xF5AD48", VA = "0xF5AD48")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xF5ADCC", Offset = "0xF5ADCC", VA = "0xF5ADCC")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xF5AE78", Offset = "0xF5AE78", VA = "0xF5AE78")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xF5AF18", Offset = "0xF5AF18", VA = "0xF5AF18")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xF5C144", Offset = "0xF5C144", VA = "0xF5C144")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public enum EVREye
	{
		[Token(Token = "0x4001DAD")]
		Eye_Left,
		[Token(Token = "0x4001DAE")]
		Eye_Right
	}
	[Token(Token = "0x20004C6")]
	public enum ETextureType
	{
		[Token(Token = "0x4001DB0")]
		DirectX,
		[Token(Token = "0x4001DB1")]
		OpenGL,
		[Token(Token = "0x4001DB2")]
		Vulkan,
		[Token(Token = "0x4001DB3")]
		IOSurface,
		[Token(Token = "0x4001DB4")]
		DirectX12
	}
	[Token(Token = "0x20004C7")]
	public enum EColorSpace
	{
		[Token(Token = "0x4001DB6")]
		Auto,
		[Token(Token = "0x4001DB7")]
		Gamma,
		[Token(Token = "0x4001DB8")]
		Linear
	}
	[Token(Token = "0x20004C8")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001DBA")]
		Uninitialized = 1,
		[Token(Token = "0x4001DBB")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001DBC")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001DBD")]
		Running_OK = 200,
		[Token(Token = "0x4001DBE")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20004C9")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001DC0")]
		Invalid,
		[Token(Token = "0x4001DC1")]
		HMD,
		[Token(Token = "0x4001DC2")]
		Controller,
		[Token(Token = "0x4001DC3")]
		GenericTracker,
		[Token(Token = "0x4001DC4")]
		TrackingReference,
		[Token(Token = "0x4001DC5")]
		DisplayRedirect
	}
	[Token(Token = "0x20004CA")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001DC7")]
		Invalid,
		[Token(Token = "0x4001DC8")]
		LeftHand,
		[Token(Token = "0x4001DC9")]
		RightHand
	}
	[Token(Token = "0x20004CB")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001DCB")]
		TrackingUniverseSeated,
		[Token(Token = "0x4001DCC")]
		TrackingUniverseStanding,
		[Token(Token = "0x4001DCD")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20004CC")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001DCF")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001DD0")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001DD1")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001DD2")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001DD3")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001DD4")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001DD5")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001DD6")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001DD7")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001DD8")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001DD9")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001DDA")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001DDB")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4001DDC")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001DDD")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001DDE")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001DDF")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001DE0")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001DE1")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001DE2")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001DE3")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001DE4")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001DE5")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001DE6")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001DE7")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001DE8")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001DE9")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001DEA")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001DEB")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4001DEC")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001DED")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001DEE")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001DEF")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001DF0")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001DF1")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001DF2")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001DF3")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001DF4")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001DF5")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001DF6")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001DF7")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001DF8")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001DF9")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001DFA")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001DFB")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001DFC")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001DFD")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001DFE")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4001DFF")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4001E00")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001E01")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001E02")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001E03")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001E04")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001E05")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001E06")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001E07")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001E08")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001E09")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001E0A")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001E0B")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001E0C")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001E0D")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001E0E")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4001E0F")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4001E10")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001E11")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001E12")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001E13")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001E14")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001E15")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001E16")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001E17")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001E18")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001E19")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001E1A")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001E1B")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001E1C")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001E1D")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001E1E")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4001E1F")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4001E20")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001E21")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001E22")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001E23")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001E24")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001E25")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001E26")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001E27")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001E28")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001E29")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001E2A")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001E2B")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001E2C")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001E2D")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001E2E")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4001E2F")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001E30")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001E31")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001E32")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001E33")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001E34")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001E35")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001E36")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001E37")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001E38")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001E39")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001E3A")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001E3B")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001E3C")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001E3D")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001E3E")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001E3F")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001E40")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001E41")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001E42")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001E43")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001E44")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001E45")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001E46")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001E47")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001E48")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001E49")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001E4A")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001E4B")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4001E4C")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001E4D")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001E4E")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001E4F")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001E50")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001E51")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001E52")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001E53")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001E54")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001E55")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x20004CD")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001E57")]
		TrackedProp_Success,
		[Token(Token = "0x4001E58")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001E59")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001E5A")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001E5B")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4001E5C")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001E5D")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001E5E")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001E5F")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001E60")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001E61")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001E62")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001E63")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x20004CE")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001E65")]
		Submit_Default = 0,
		[Token(Token = "0x4001E66")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4001E67")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001E68")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001E69")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001E6A")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x20004CF")]
	public enum EVRState
	{
		[Token(Token = "0x4001E6C")]
		Undefined = -1,
		[Token(Token = "0x4001E6D")]
		Off,
		[Token(Token = "0x4001E6E")]
		Searching,
		[Token(Token = "0x4001E6F")]
		Searching_Alert,
		[Token(Token = "0x4001E70")]
		Ready,
		[Token(Token = "0x4001E71")]
		Ready_Alert,
		[Token(Token = "0x4001E72")]
		NotReady,
		[Token(Token = "0x4001E73")]
		Standby,
		[Token(Token = "0x4001E74")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20004D0")]
	public enum EVREventType
	{
		[Token(Token = "0x4001E76")]
		VREvent_None = 0,
		[Token(Token = "0x4001E77")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001E78")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001E79")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001E7A")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001E7B")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001E7C")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001E7D")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001E7E")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001E7F")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001E80")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001E81")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001E82")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001E83")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001E84")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001E85")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001E86")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001E87")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001E88")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001E89")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001E8A")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001E8B")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001E8C")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001E8D")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001E8E")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4001E8F")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4001E90")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4001E91")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4001E92")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4001E93")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001E94")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4001E95")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4001E96")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4001E97")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001E98")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001E99")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001E9A")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001E9B")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001E9C")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001E9D")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4001E9E")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4001E9F")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4001EA0")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4001EA1")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4001EA2")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4001EA3")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4001EA4")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4001EA5")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4001EA6")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001EA7")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001EA8")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001EA9")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001EAA")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001EAB")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001EAC")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001EAD")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001EAE")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001EAF")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001EB0")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001EB1")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4001EB2")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4001EB3")]
		VREvent_DashboardGuideButtonDown = 514,
		[Token(Token = "0x4001EB4")]
		VREvent_DashboardGuideButtonUp = 515,
		[Token(Token = "0x4001EB5")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4001EB6")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4001EB7")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001EB8")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001EB9")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001EBA")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001EBB")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001EBC")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001EBD")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001EBE")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001EBF")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001EC0")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4001EC1")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001EC2")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001EC3")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001EC4")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001EC5")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001EC6")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001EC7")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001EC8")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001EC9")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001ECA")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001ECB")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001ECC")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001ECD")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001ECE")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001ECF")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001ED0")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001ED1")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001ED2")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001ED3")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001ED4")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001ED5")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001ED6")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001ED7")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001ED8")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001ED9")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001EDA")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001EDB")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4001EDC")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001EDD")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001EDE")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001EDF")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001EE0")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001EE1")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001EE2")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001EE3")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001EE4")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001EE5")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001EE6")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001EE7")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001EE8")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001EE9")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001EEA")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001EEB")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001EEC")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001EED")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001EEE")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001EEF")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001EF0")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001EF1")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001EF2")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001EF3")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001EF4")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001EF5")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001EF6")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001EF7")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001EF8")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001EF9")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001EFA")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001EFB")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001EFC")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001EFD")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20004D1")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001EFF")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001F00")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001F01")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001F02")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001F03")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20004D2")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001F05")]
		k_EButton_System = 0,
		[Token(Token = "0x4001F06")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001F07")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001F08")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001F09")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001F0A")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001F0B")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001F0C")]
		k_EButton_A = 7,
		[Token(Token = "0x4001F0D")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001F0E")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001F0F")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001F10")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001F11")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001F12")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001F13")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001F14")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001F15")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001F16")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20004D3")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001F18")]
		Left = 1,
		[Token(Token = "0x4001F19")]
		Right = 2,
		[Token(Token = "0x4001F1A")]
		Middle = 4
	}
	[Token(Token = "0x20004D4")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001F1C")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001F1D")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x20004D5")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001F1F")]
		None,
		[Token(Token = "0x4001F20")]
		NameNotFound,
		[Token(Token = "0x4001F21")]
		WrongType,
		[Token(Token = "0x4001F22")]
		InvalidHandle,
		[Token(Token = "0x4001F23")]
		InvalidParam,
		[Token(Token = "0x4001F24")]
		NoSteam,
		[Token(Token = "0x4001F25")]
		MaxCapacityReached,
		[Token(Token = "0x4001F26")]
		IPCError,
		[Token(Token = "0x4001F27")]
		NoActiveActionSet,
		[Token(Token = "0x4001F28")]
		InvalidDevice
	}
	[Token(Token = "0x20004D6")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001F2A")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001F2B")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001F2C")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001F2D")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20004D7")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001F2F")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001F30")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001F31")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001F32")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20004D8")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001F34")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001F35")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20004D9")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001F37")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001F38")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001F39")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001F3A")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001F3B")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001F3C")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20004DA")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001F3E")]
		None = 0,
		[Token(Token = "0x4001F3F")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001F40")]
		InvalidHandle = 11,
		[Token(Token = "0x4001F41")]
		PermissionDenied = 12,
		[Token(Token = "0x4001F42")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001F43")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001F44")]
		KeyTooLong = 15,
		[Token(Token = "0x4001F45")]
		NameTooLong = 16,
		[Token(Token = "0x4001F46")]
		KeyInUse = 17,
		[Token(Token = "0x4001F47")]
		WrongTransformType = 18,
		[Token(Token = "0x4001F48")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001F49")]
		InvalidParameter = 20,
		[Token(Token = "0x4001F4A")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001F4B")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001F4C")]
		RequestFailed = 23,
		[Token(Token = "0x4001F4D")]
		InvalidTexture = 24,
		[Token(Token = "0x4001F4E")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001F4F")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001F50")]
		NoNeighbor = 27,
		[Token(Token = "0x4001F51")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001F52")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001F53")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001F54")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001F55")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x20004DB")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001F57")]
		VRApplication_Other,
		[Token(Token = "0x4001F58")]
		VRApplication_Scene,
		[Token(Token = "0x4001F59")]
		VRApplication_Overlay,
		[Token(Token = "0x4001F5A")]
		VRApplication_Background,
		[Token(Token = "0x4001F5B")]
		VRApplication_Utility,
		[Token(Token = "0x4001F5C")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001F5D")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001F5E")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001F5F")]
		VRApplication_Max
	}
	[Token(Token = "0x20004DC")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001F61")]
		None,
		[Token(Token = "0x4001F62")]
		Success,
		[Token(Token = "0x4001F63")]
		Fail
	}
	[Token(Token = "0x20004DD")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001F65")]
		OK = 0,
		[Token(Token = "0x4001F66")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001F67")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001F68")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001F69")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20004DE")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001F6B")]
		None = 0,
		[Token(Token = "0x4001F6C")]
		Unknown = 1,
		[Token(Token = "0x4001F6D")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001F6E")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001F6F")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001F70")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001F71")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001F72")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001F73")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001F74")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001F75")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001F76")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001F77")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001F78")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001F79")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001F7A")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001F7B")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001F7C")]
		Init_Retry = 115,
		[Token(Token = "0x4001F7D")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001F7E")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001F7F")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001F80")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001F81")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001F82")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001F83")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001F84")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001F85")]
		Init_Internal = 124,
		[Token(Token = "0x4001F86")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001F87")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001F88")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001F89")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001F8A")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001F8B")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001F8C")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001F8D")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001F8E")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001F8F")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001F90")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001F91")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001F92")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001F93")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001F94")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001F95")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001F96")]
		Driver_Failed = 200,
		[Token(Token = "0x4001F97")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001F98")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001F99")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001F9A")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001F9B")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001F9C")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001F9D")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001F9E")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001F9F")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001FA0")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001FA1")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001FA2")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001FA3")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001FA4")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001FA5")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001FA6")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001FA7")]
		IPC_Failed = 305,
		[Token(Token = "0x4001FA8")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001FA9")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001FAA")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001FAB")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001FAC")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001FAD")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001FAE")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001FAF")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4001FB0")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001FB1")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001FB2")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001FB3")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001FB4")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001FB5")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001FB6")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001FB7")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001FB8")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001FB9")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001FBA")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001FBB")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001FBC")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001FBD")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001FBE")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001FBF")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001FC0")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20004DF")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001FC2")]
		None,
		[Token(Token = "0x4001FC3")]
		Mono,
		[Token(Token = "0x4001FC4")]
		Stereo,
		[Token(Token = "0x4001FC5")]
		Cubemap,
		[Token(Token = "0x4001FC6")]
		MonoPanorama,
		[Token(Token = "0x4001FC7")]
		StereoPanorama
	}
	[Token(Token = "0x20004E0")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001FC9")]
		Preview,
		[Token(Token = "0x4001FCA")]
		VR
	}
	[Token(Token = "0x20004E1")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001FCC")]
		None = 0,
		[Token(Token = "0x4001FCD")]
		OperationFailed = 100,
		[Token(Token = "0x4001FCE")]
		InvalidHandle = 101,
		[Token(Token = "0x4001FCF")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4001FD0")]
		OutOfHandles = 103,
		[Token(Token = "0x4001FD1")]
		IPCFailure = 104,
		[Token(Token = "0x4001FD2")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001FD3")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001FD4")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001FD5")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001FD6")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001FD7")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001FD8")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001FD9")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001FDA")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001FDB")]
		InvalidArgument = 114,
		[Token(Token = "0x4001FDC")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20004E2")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001FDE")]
		Distorted,
		[Token(Token = "0x4001FDF")]
		Undistorted,
		[Token(Token = "0x4001FE0")]
		MaximumUndistorted,
		[Token(Token = "0x4001FE1")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20004E3")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001FE3")]
		None = 0,
		[Token(Token = "0x4001FE4")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001FE5")]
		NoManifest = 101,
		[Token(Token = "0x4001FE6")]
		NoApplication = 102,
		[Token(Token = "0x4001FE7")]
		InvalidIndex = 103,
		[Token(Token = "0x4001FE8")]
		UnknownApplication = 104,
		[Token(Token = "0x4001FE9")]
		IPCFailed = 105,
		[Token(Token = "0x4001FEA")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001FEB")]
		InvalidManifest = 107,
		[Token(Token = "0x4001FEC")]
		InvalidApplication = 108,
		[Token(Token = "0x4001FED")]
		LaunchFailed = 109,
		[Token(Token = "0x4001FEE")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001FEF")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001FF0")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001FF1")]
		TransitionAborted = 113,
		[Token(Token = "0x4001FF2")]
		IsTemplate = 114,
		[Token(Token = "0x4001FF3")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001FF4")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001FF5")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001FF6")]
		UnknownProperty = 202,
		[Token(Token = "0x4001FF7")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20004E4")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001FF9")]
		Name_String = 0,
		[Token(Token = "0x4001FFA")]
		LaunchType_String = 11,
		[Token(Token = "0x4001FFB")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001FFC")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001FFD")]
		Arguments_String = 14,
		[Token(Token = "0x4001FFE")]
		URL_String = 15,
		[Token(Token = "0x4001FFF")]
		Description_String = 50,
		[Token(Token = "0x4002000")]
		NewsURL_String = 51,
		[Token(Token = "0x4002001")]
		ImagePath_String = 52,
		[Token(Token = "0x4002002")]
		Source_String = 53,
		[Token(Token = "0x4002003")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4002004")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4002005")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4002006")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4002007")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4002008")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4002009")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20004E5")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x400200B")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x400200C")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x400200D")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x400200E")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20004E6")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4002010")]
		OK = 1,
		[Token(Token = "0x4002011")]
		Warning = 100,
		[Token(Token = "0x4002012")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4002013")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4002014")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4002015")]
		Error = 200,
		[Token(Token = "0x4002016")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4002017")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4002018")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4002019")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20004E7")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x400201B")]
		Live = 1,
		[Token(Token = "0x400201C")]
		Temp
	}
	[Token(Token = "0x20004E8")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x400201E")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20004E9")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4002020")]
		None = 0,
		[Token(Token = "0x4002021")]
		RequestFailed = 1,
		[Token(Token = "0x4002022")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4002023")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4002024")]
		InvalidTexture = 102,
		[Token(Token = "0x4002025")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4002026")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4002027")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4002028")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4002029")]
		IndexOutOfRange = 107,
		[Token(Token = "0x400202A")]
		AlreadySubmitted = 108,
		[Token(Token = "0x400202B")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20004EA")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x400202D")]
		Implicit,
		[Token(Token = "0x400202E")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x400202F")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20004EB")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4002031")]
		None,
		[Token(Token = "0x4002032")]
		Mouse,
		[Token(Token = "0x4002033")]
		DualAnalog
	}
	[Token(Token = "0x20004EC")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4002035")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4002036")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4002037")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4002038")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20004ED")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x400203A")]
		None,
		[Token(Token = "0x400203B")]
		Curved,
		[Token(Token = "0x400203C")]
		RGSS4X,
		[Token(Token = "0x400203D")]
		NoDashboardTab,
		[Token(Token = "0x400203E")]
		AcceptsGamepadEvents,
		[Token(Token = "0x400203F")]
		ShowGamepadFocus,
		[Token(Token = "0x4002040")]
		SendVRScrollEvents,
		[Token(Token = "0x4002041")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4002042")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4002043")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4002044")]
		SideBySide_Parallel,
		[Token(Token = "0x4002045")]
		SideBySide_Crossed,
		[Token(Token = "0x4002046")]
		Panorama,
		[Token(Token = "0x4002047")]
		StereoPanorama,
		[Token(Token = "0x4002048")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4002049")]
		VisibleInDashboard
	}
	[Token(Token = "0x20004EE")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x400204B")]
		ButtonPress_0,
		[Token(Token = "0x400204C")]
		ButtonPress_1,
		[Token(Token = "0x400204D")]
		ButtonPress_2,
		[Token(Token = "0x400204E")]
		ButtonPress_3,
		[Token(Token = "0x400204F")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4002050")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4002051")]
		ApplicationQuit
	}
	[Token(Token = "0x20004EF")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4002053")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4002054")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4002055")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20004F0")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4002057")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4002058")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20004F1")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x400205A")]
		Up,
		[Token(Token = "0x400205B")]
		Down,
		[Token(Token = "0x400205C")]
		Left,
		[Token(Token = "0x400205D")]
		Right,
		[Token(Token = "0x400205E")]
		Count
	}
	[Token(Token = "0x20004F2")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4002060")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4002061")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20004F3")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4002063")]
		None = 0,
		[Token(Token = "0x4002064")]
		Loading = 100,
		[Token(Token = "0x4002065")]
		NotSupported = 200,
		[Token(Token = "0x4002066")]
		InvalidArg = 300,
		[Token(Token = "0x4002067")]
		InvalidModel = 301,
		[Token(Token = "0x4002068")]
		NoShapes = 302,
		[Token(Token = "0x4002069")]
		MultipleShapes = 303,
		[Token(Token = "0x400206A")]
		TooManyVertices = 304,
		[Token(Token = "0x400206B")]
		MultipleTextures = 305,
		[Token(Token = "0x400206C")]
		BufferTooSmall = 306,
		[Token(Token = "0x400206D")]
		NotEnoughNormals = 307,
		[Token(Token = "0x400206E")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x400206F")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20004F4")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4002071")]
		IsStatic = 1,
		[Token(Token = "0x4002072")]
		IsVisible = 2,
		[Token(Token = "0x4002073")]
		IsTouched = 4,
		[Token(Token = "0x4002074")]
		IsPressed = 8,
		[Token(Token = "0x4002075")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20004F5")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4002077")]
		Transient,
		[Token(Token = "0x4002078")]
		Persistent,
		[Token(Token = "0x4002079")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20004F6")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x400207B")]
		None = 0,
		[Token(Token = "0x400207C")]
		Application = 100,
		[Token(Token = "0x400207D")]
		Contact_Disabled = 200,
		[Token(Token = "0x400207E")]
		Contact_Enabled = 201,
		[Token(Token = "0x400207F")]
		Contact_Active = 202
	}
	[Token(Token = "0x20004F7")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4002081")]
		None,
		[Token(Token = "0x4002082")]
		IPCFailed,
		[Token(Token = "0x4002083")]
		WriteFailed,
		[Token(Token = "0x4002084")]
		ReadFailed,
		[Token(Token = "0x4002085")]
		JsonParseFailed,
		[Token(Token = "0x4002086")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20004F8")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4002088")]
		None = 0,
		[Token(Token = "0x4002089")]
		RequestFailed = 1,
		[Token(Token = "0x400208A")]
		IncompatibleVersion = 100,
		[Token(Token = "0x400208B")]
		NotFound = 101,
		[Token(Token = "0x400208C")]
		BufferTooSmall = 102,
		[Token(Token = "0x400208D")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20004F9")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20004FA")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20004FB")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20004FC")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20004FD")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20004FE")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20004FF")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000500")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000501")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000502")]
	public struct HmdColor_t
	{
		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000503")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000504")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000505")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000506")]
	public struct Texture_t
	{
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000507")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000508")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000509")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x200050A")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x200050B")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200050C")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200050D")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x200050E")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x200050F")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000510")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000511")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000512")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000513")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000514")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000515")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000516")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000517")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000518")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000519")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x200051A")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;
	}
	[Token(Token = "0x200051B")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x200051C")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x200051D")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200051E")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x200051F")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000520")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000521")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000522")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000523")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000524")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000525")]
	public struct VREvent_t
	{
		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000526")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xF5C25C", Offset = "0xF5C25C", VA = "0xF5C25C")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xF5C29C", Offset = "0xF5C29C", VA = "0xF5C29C")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000527")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000528")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000529")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x200052A")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xF5C1D4", Offset = "0xF5C1D4", VA = "0xF5C1D4")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xF5C218", Offset = "0xF5C218", VA = "0xF5C218")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x200052B")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x200052C")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x200052D")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200052E")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x200052F")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000530")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000531")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000532")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x2000533")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000534")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000535")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000536")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000537")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000538")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000539")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xF5C14C", Offset = "0xF5C14C", VA = "0xF5C14C")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xF5C160", Offset = "0xF5C160", VA = "0xF5C160")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x200053A")]
	public struct RenderModel_t
	{
		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x200053B")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xF5C17C", Offset = "0xF5C17C", VA = "0xF5C17C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xF5C1A8", Offset = "0xF5C1A8", VA = "0xF5C1A8")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x200053C")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x200053D")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x200053E")]
	public struct COpenVRContext
	{
		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x200053F")]
	public class OpenVR
	{
		[Token(Token = "0x20009C5")]
		private class COpenVRContext
		{
			[Token(Token = "0x40031BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x40031BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x40031BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x40031BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x40031BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x40031C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x40031C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x40031C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x40031C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x40031C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x40031C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6003837")]
			[Address(RVA = "0xF5B13C", Offset = "0xF5B13C", VA = "0xF5B13C")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6003838")]
			[Address(RVA = "0xF5BF88", Offset = "0xF5BF88", VA = "0xF5BF88")]
			public void Clear()
			{
			}

			[Token(Token = "0x6003839")]
			[Address(RVA = "0xF5C010", Offset = "0xF5C010", VA = "0xF5C010")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x600383A")]
			[Address(RVA = "0xF5B1D4", Offset = "0xF5B1D4", VA = "0xF5B1D4")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x600383B")]
			[Address(RVA = "0xF5B2FC", Offset = "0xF5B2FC", VA = "0xF5B2FC")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x600383C")]
			[Address(RVA = "0xF5B424", Offset = "0xF5B424", VA = "0xF5B424")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x600383D")]
			[Address(RVA = "0xF5B54C", Offset = "0xF5B54C", VA = "0xF5B54C")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x600383E")]
			[Address(RVA = "0xF5B674", Offset = "0xF5B674", VA = "0xF5B674")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x600383F")]
			[Address(RVA = "0xF5B79C", Offset = "0xF5B79C", VA = "0xF5B79C")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6003840")]
			[Address(RVA = "0xF5B8C4", Offset = "0xF5B8C4", VA = "0xF5B8C4")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6003841")]
			[Address(RVA = "0xF5B9EC", Offset = "0xF5B9EC", VA = "0xF5B9EC")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6003842")]
			[Address(RVA = "0xF5BB14", Offset = "0xF5BB14", VA = "0xF5BB14")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6003843")]
			[Address(RVA = "0xF5BC3C", Offset = "0xF5BC3C", VA = "0xF5BC3C")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6003844")]
			[Address(RVA = "0xF5BD64", Offset = "0xF5BD64", VA = "0xF5BD64")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x40021D1")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x40021D2")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x40021D3")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x40021D4")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x40021D5")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x40021D6")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x40021D7")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x40021D8")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x40021D9")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x40021DA")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x40021DB")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x40021DC")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x40021DD")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x40021DE")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x40021DF")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x40021E0")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x40021E1")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x40021E2")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x40021E3")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x40021E4")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x40021E5")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x40021E6")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x40021E7")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x40021E8")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x40021E9")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x40021EA")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x40021EB")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x40021EC")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x40021ED")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x40021EE")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x40021EF")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x40021F0")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x40021F1")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x40021F2")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x40021F3")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x40021F4")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x40021F5")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x40021F6")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x40021F7")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x40021F8")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x40021F9")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x40021FA")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x40021FB")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x40021FC")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x40021FD")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x40021FE")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x40021FF")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4002200")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4002201")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4002202")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4002203")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4002204")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4002205")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4002206")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4002207")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4002208")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4002209")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x400220A")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x400220B")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x400220C")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x400220D")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x400220E")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x400220F")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4002210")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4002211")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4002212")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4002213")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4002214")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4002215")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4002216")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4002217")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4002218")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4002219")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x400221A")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x400221B")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x400221C")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x400221D")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x400221E")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x400221F")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4002220")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4002221")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4002222")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4002223")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4002224")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4002225")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4002226")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4002227")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4002228")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4002229")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x400222A")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x400222B")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x400222C")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x400222D")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x400222E")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x400222F")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4002230")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4002231")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4002232")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4002233")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4002234")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4002235")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4002236")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4002237")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4002238")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4002239")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x400223A")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x400223B")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x400223C")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x400223D")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x400223E")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x400223F")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4002240")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4002241")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4002242")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4002243")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4002244")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4002245")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4002246")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4002247")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4002248")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4002249")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x400224A")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x400224B")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x400224C")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x400224D")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x400224E")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x400224F")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4002250")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4002251")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4002252")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4002253")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4002254")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4002255")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4002256")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4002257")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4002258")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4002259")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x400225A")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x400225B")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x400225C")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x400225D")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x400225E")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x400225F")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4002260")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4002261")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4002262")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4002263")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4002264")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4002265")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4002266")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4002267")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4002268")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4002269")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x400226A")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x400226B")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x400226C")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x400226D")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x400226E")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x400226F")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4002270")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4002271")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4002272")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4002273")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4002274")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4002275")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4002276")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4002277")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4002278")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4002279")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x400227A")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x400227B")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x400227C")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x400227D")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x400227E")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x400227F")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4002280")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4002281")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4002282")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4002283")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4002284")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4002285")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4002286")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4002287")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4002288")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4002289")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EC80", Offset = "0xB3EC80")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x400228B")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170002CF")]
		private static uint VRToken
		{
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xF5AF8C", Offset = "0xF5AF8C", VA = "0xF5AF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F454", Offset = "0xB4F454")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0xF5AFF4", Offset = "0xF5AFF4", VA = "0xF5AFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F464", Offset = "0xB4F464")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xF5B060", Offset = "0xF5B060", VA = "0xF5B060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public static CVRSystem System
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0xF5B16C", Offset = "0xF5B16C", VA = "0xF5B16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xF5B294", Offset = "0xF5B294", VA = "0xF5B294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xF5B3BC", Offset = "0xF5B3BC", VA = "0xF5B3BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xF5B4E4", Offset = "0xF5B4E4", VA = "0xF5B4E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0xF5B60C", Offset = "0xF5B60C", VA = "0xF5B60C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xF5B734", Offset = "0xF5B734", VA = "0xF5B734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0xF5B85C", Offset = "0xF5B85C", VA = "0xF5B85C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0xF5B984", Offset = "0xF5B984", VA = "0xF5B984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xF5BAAC", Offset = "0xF5BAAC", VA = "0xF5BAAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0xF5BBD4", Offset = "0xF5BBD4", VA = "0xF5BBD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0xF5BCFC", Offset = "0xF5BCFC", VA = "0xF5BCFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xF5AAC8", Offset = "0xF5AAC8", VA = "0xF5AAC8")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xF5AB5C", Offset = "0xF5AB5C", VA = "0xF5AB5C")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xF5ABD0", Offset = "0xF5ABD0", VA = "0xF5ABD0")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xF5AC50", Offset = "0xF5AC50", VA = "0xF5AC50")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xF5ACD0", Offset = "0xF5ACD0", VA = "0xF5ACD0")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xF5ADC8", Offset = "0xF5ADC8", VA = "0xF5ADC8")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xF5AE74", Offset = "0xF5AE74", VA = "0xF5AE74")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xF5AF14", Offset = "0xF5AF14", VA = "0xF5AF14")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xF5BE24", Offset = "0xF5BE24", VA = "0xF5BE24")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xF5BFA8", Offset = "0xF5BFA8", VA = "0xF5BFA8")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xF5C004", Offset = "0xF5C004", VA = "0xF5C004")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB335B0", Offset = "0xB335B0")]
	public class BodyCollider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x1672E80", Offset = "0x1672E80", VA = "0x1672E80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x1672ED8", Offset = "0x1672ED8", VA = "0x1672ED8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x1673074", Offset = "0x1673074", VA = "0x1673074")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33614", Offset = "0xB33614")]
	public class CircularDrive : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009C6")]
		public enum Axis_t
		{
			[Token(Token = "0x40031C7")]
			XAxis,
			[Token(Token = "0x40031C8")]
			YAxis,
			[Token(Token = "0x40031C9")]
			ZAxis
		}

		[Token(Token = "0x20009C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36CD0", Offset = "0xB36CD0")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x40031CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x40031CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x40031CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x40031D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x1700055B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003848")]
				[Address(RVA = "0x1675464", Offset = "0x1675464", VA = "0x1675464", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600384A")]
				[Address(RVA = "0x16754CC", Offset = "0x16754CC", VA = "0x16754CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003845")]
			[Address(RVA = "0x1673DE4", Offset = "0x1673DE4", VA = "0x1673DE4")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6003846")]
			[Address(RVA = "0x16752E8", Offset = "0x16752E8", VA = "0x16752E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003847")]
			[Address(RVA = "0x16752EC", Offset = "0x16752EC", VA = "0x16752EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003849")]
			[Address(RVA = "0x167546C", Offset = "0x167546C", VA = "0x167546C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EC90", Offset = "0xB3EC90")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3ECC8", Offset = "0xB3ECC8")]
		public Collider childCollider;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3ED00", Offset = "0xB3ED00")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3ED38", Offset = "0xB3ED38")]
		public bool hoverLock;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3ED70", Offset = "0xB3ED70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3ED70", Offset = "0xB3ED70")]
		public bool limited;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3EDD0", Offset = "0xB3EDD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EDD0", Offset = "0xB3EDD0")]
		public float minAngle;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EE30", Offset = "0xB3EE30")]
		public bool freezeOnMin;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EE68", Offset = "0xB3EE68")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3EEA0", Offset = "0xB3EEA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EEA0", Offset = "0xB3EEA0")]
		public float maxAngle;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EF00", Offset = "0xB3EF00")]
		public bool freezeOnMax;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EF38", Offset = "0xB3EF38")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EF70", Offset = "0xB3EF70")]
		public bool forceStart;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EFA8", Offset = "0xB3EFA8")]
		public float startAngle;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3EFE0", Offset = "0xB3EFE0")]
		public bool rotateGameObject;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F018", Offset = "0xB3F018")]
		public bool debugPath;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F050", Offset = "0xB3F050")]
		public int dbgPathLimit;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F088", Offset = "0xB3F088")]
		public TextMesh debugText;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F0C0", Offset = "0xB3F0C0")]
		public float outAngle;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x16737AC", Offset = "0x16737AC", VA = "0x16737AC")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x167380C", Offset = "0x167380C", VA = "0x167380C")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x167382C", Offset = "0x167382C", VA = "0x167382C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1673C64", Offset = "0x1673C64", VA = "0x1673C64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1673D54", Offset = "0x1673D54", VA = "0x1673D54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F474", Offset = "0xB4F474")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1673E10", Offset = "0x1673E10", VA = "0x1673E10")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x1673E94", Offset = "0x1673E94", VA = "0x1673E94")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1673F6C", Offset = "0x1673F6C", VA = "0x1673F6C")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1674150", Offset = "0x1674150", VA = "0x1674150")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x16747B4", Offset = "0x16747B4", VA = "0x16747B4")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1674E88", Offset = "0x1674E88", VA = "0x1674E88")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1675044", Offset = "0x1675044", VA = "0x1675044")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x1674F48", Offset = "0x1674F48", VA = "0x1674F48")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x1673C38", Offset = "0x1673C38", VA = "0x1673C38")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x16743E8", Offset = "0x16743E8", VA = "0x16743E8")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1675160", Offset = "0x1675160", VA = "0x1675160")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33678", Offset = "0xB33678")]
	public class ComplexThrowable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009C8")]
		public enum AttachMode
		{
			[Token(Token = "0x40031D2")]
			FixedJoint,
			[Token(Token = "0x40031D3")]
			Force
		}

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x16754D4", Offset = "0x16754D4", VA = "0x16754D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1675528", Offset = "0x1675528", VA = "0x1675528")]
		private void Update()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x16757BC", Offset = "0x16757BC", VA = "0x16757BC")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x1675858", Offset = "0x1675858", VA = "0x1675858")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x16758F4", Offset = "0x16758F4", VA = "0x16758F4")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x1675940", Offset = "0x1675940", VA = "0x1675940")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x16755F0", Offset = "0x16755F0", VA = "0x16755F0")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x1675D80", Offset = "0x1675D80", VA = "0x1675D80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x1676048", Offset = "0x1676048", VA = "0x1676048")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class ControllerHoverHighlight : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x1149FB0", Offset = "0x1149FB0", VA = "0x1149FB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x114A008", Offset = "0x114A008", VA = "0x114A008")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x114A0AC", Offset = "0x114A0AC", VA = "0x114A0AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x114A0CC", Offset = "0x114A0CC", VA = "0x114A0CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x114A0EC", Offset = "0x114A0EC", VA = "0x114A0EC")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x114A17C", Offset = "0x114A17C", VA = "0x114A17C")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x114A6B8", Offset = "0x114A6B8", VA = "0x114A6B8")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x114A8B8", Offset = "0x114A8B8", VA = "0x114A8B8")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x114A9D4", Offset = "0x114A9D4", VA = "0x114A9D4")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x114AAF4", Offset = "0x114AAF4", VA = "0x114AAF4")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x114A7A0", Offset = "0x114A7A0", VA = "0x114A7A0")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x114A8BC", Offset = "0x114A8BC", VA = "0x114A8BC")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x114AAF8", Offset = "0x114AAF8", VA = "0x114AAF8")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x20009C9")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x600384B")]
			[Address(RVA = "0x114AB58", Offset = "0x114AB58", VA = "0x114AB58")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20009CA")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x600384C")]
			[Address(RVA = "0x114AB08", Offset = "0x114AB08", VA = "0x114AB08")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x2000545")]
	public class DebugUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x170002DC")]
		public static DebugUI instance
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0x114ABA8", Offset = "0x114ABA8", VA = "0x114ABA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x114AC74", Offset = "0x114AC74", VA = "0x114AC74")]
		private void Start()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x114AC98", Offset = "0x114AC98", VA = "0x114AC98")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x114AE14", Offset = "0x114AE14", VA = "0x114AE14")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB336DC", Offset = "0xB336DC")]
	public class DestroyOnDetachedFromHand : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600230D")]
		[Address(RVA = "0x114AE1C", Offset = "0x114AE1C", VA = "0x114AE1C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x114AE98", Offset = "0x114AE98", VA = "0x114AE98")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33740", Offset = "0xB33740")]
	public class DestroyOnParticleSystemDeath : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x114AEA0", Offset = "0x114AEA0", VA = "0x114AEA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x114AF18", Offset = "0x114AF18", VA = "0x114AF18")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x114AFB8", Offset = "0x114AFB8", VA = "0x114AFB8")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class DestroyOnTriggerEnter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x114AFC0", Offset = "0x114AFC0", VA = "0x114AFC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x114AFF4", Offset = "0x114AFF4", VA = "0x114AFF4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x114B0EC", Offset = "0x114B0EC", VA = "0x114B0EC")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class DistanceHaptics : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36CE0", Offset = "0xB36CE0")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x1700055D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003850")]
				[Address(RVA = "0x114B3DC", Offset = "0x114B3DC", VA = "0x114B3DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003852")]
				[Address(RVA = "0x114B444", Offset = "0x114B444", VA = "0x114B444", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600384D")]
			[Address(RVA = "0x114B164", Offset = "0x114B164", VA = "0x114B164")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600384E")]
			[Address(RVA = "0x114B200", Offset = "0x114B200", VA = "0x114B200", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600384F")]
			[Address(RVA = "0x114B204", Offset = "0x114B204", VA = "0x114B204", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003851")]
			[Address(RVA = "0x114B3E4", Offset = "0x114B3E4", VA = "0x114B3E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x114B0F4", Offset = "0x114B0F4", VA = "0x114B0F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F4D8", Offset = "0xB4F4D8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x114B190", Offset = "0x114B190", VA = "0x114B190")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class DontDestroyOnLoad : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002317")]
		[Address(RVA = "0x114B44C", Offset = "0x114B44C", VA = "0x114B44C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x114B4B4", Offset = "0x114B4B4", VA = "0x114B4B4")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x6002319")]
		[Address(RVA = "0x114B4BC", Offset = "0x114B4BC", VA = "0x114B4BC")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB337A4", Offset = "0xB337A4")]
	public class FallbackCameraController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x114B5B0", Offset = "0x114B5B0", VA = "0x114B5B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x114B5D8", Offset = "0x114B5D8", VA = "0x114B5D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x114B940", Offset = "0x114B940", VA = "0x114B940")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x114B9F4", Offset = "0x114B9F4", VA = "0x114B9F4")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class Hand : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009CC")]
		public enum HandType
		{
			[Token(Token = "0x40031D8")]
			Left,
			[Token(Token = "0x40031D9")]
			Right,
			[Token(Token = "0x40031DA")]
			Any
		}

		[Token(Token = "0x20009CD")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x40031DC")]
			SnapOnAttach = 1,
			[Token(Token = "0x40031DD")]
			DetachOthers = 2,
			[Token(Token = "0x40031DE")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x40031DF")]
			ParentToHand = 8
		}

		[Token(Token = "0x20009CE")]
		public struct AttachedObject
		{
			[Token(Token = "0x40031E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x40031E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x40031E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x20009CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D00", Offset = "0xB36D00")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40031E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x6003853")]
			[Address(RVA = "0x114D350", Offset = "0x114D350", VA = "0x114D350")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6003854")]
			[Address(RVA = "0x114EDFC", Offset = "0x114EDFC", VA = "0x114EDFC")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20009D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D10", Offset = "0xB36D10")]
		private sealed class <>c
		{
			[Token(Token = "0x40031E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40031E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x6003856")]
			[Address(RVA = "0x114ED84", Offset = "0x114ED84", VA = "0x114ED84")]
			public <>c()
			{
			}

			[Token(Token = "0x6003857")]
			[Address(RVA = "0x114ED8C", Offset = "0x114ED8C", VA = "0x114ED8C")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20009D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D20", Offset = "0xB36D20")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x1700055F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600385B")]
				[Address(RVA = "0x114F21C", Offset = "0x114F21C", VA = "0x114F21C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000560")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600385D")]
				[Address(RVA = "0x114F284", Offset = "0x114F284", VA = "0x114F284", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003858")]
			[Address(RVA = "0x114D698", Offset = "0x114D698", VA = "0x114D698")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6003859")]
			[Address(RVA = "0x114EF14", Offset = "0x114EF14", VA = "0x114EF14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600385A")]
			[Address(RVA = "0x114EF18", Offset = "0x114EF18", VA = "0x114EF18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600385C")]
			[Address(RVA = "0x114F224", Offset = "0x114F224", VA = "0x114F224", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D30", Offset = "0xB36D30")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40031E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x600385E")]
			[Address(RVA = "0x114D6C4", Offset = "0x114D6C4", VA = "0x114D6C4")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x600385F")]
			[Address(RVA = "0x114EE7C", Offset = "0x114EE7C", VA = "0x114EE7C")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022D4")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F108", Offset = "0xB3F108")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x40022E9")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x170002DD")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x600231E")]
			[Address(RVA = "0x114BF10", Offset = "0x114BF10", VA = "0x114BF10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		public bool hoverLocked
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0x114BF68", Offset = "0x114BF68", VA = "0x114BF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F53C", Offset = "0xB4F53C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x114BF70", Offset = "0x114BF70", VA = "0x114BF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F54C", Offset = "0xB4F54C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x114BF7C", Offset = "0x114BF7C", VA = "0x114BF7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002322")]
			[Address(RVA = "0x114BF84", Offset = "0x114BF84", VA = "0x114BF84")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x6002323")]
			[Address(RVA = "0x114C29C", Offset = "0x114C29C", VA = "0x114C29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x114C40C", Offset = "0x114C40C", VA = "0x114C40C")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x114C4DC", Offset = "0x114C4DC", VA = "0x114C4DC")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x114C600", Offset = "0x114C600", VA = "0x114C600")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x114C968", Offset = "0x114C968", VA = "0x114C968")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x114D358", Offset = "0x114D358", VA = "0x114D358")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x114D410", Offset = "0x114D410", VA = "0x114D410")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x114C314", Offset = "0x114C314", VA = "0x114C314")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x114D4C8", Offset = "0x114D4C8", VA = "0x114D4C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x114D628", Offset = "0x114D628", VA = "0x114D628")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F55C", Offset = "0xB4F55C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x114CCEC", Offset = "0x114CCEC", VA = "0x114CCEC")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x114D6CC", Offset = "0x114D6CC", VA = "0x114D6CC")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x114DA64", Offset = "0x114DA64", VA = "0x114DA64")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x114DFE0", Offset = "0x114DFE0", VA = "0x114DFE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x114E0EC", Offset = "0x114E0EC", VA = "0x114E0EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x114E128", Offset = "0x114E128", VA = "0x114E128")]
		private void Update()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x114E23C", Offset = "0x114E23C", VA = "0x114E23C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x114E2EC", Offset = "0x114E2EC", VA = "0x114E2EC")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x114E52C", Offset = "0x114E52C", VA = "0x114E52C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x114E530", Offset = "0x114E530", VA = "0x114E530")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x114C1D0", Offset = "0x114C1D0", VA = "0x114C1D0")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x114E3CC", Offset = "0x114E3CC", VA = "0x114E3CC")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x114E614", Offset = "0x114E614", VA = "0x114E614")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x114E694", Offset = "0x114E694", VA = "0x114E694")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x114E740", Offset = "0x114E740", VA = "0x114E740")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x114E7E0", Offset = "0x114E7E0", VA = "0x114E7E0")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x114E880", Offset = "0x114E880", VA = "0x114E880")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x114E920", Offset = "0x114E920", VA = "0x114E920")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x114EC78", Offset = "0x114EC78", VA = "0x114EC78")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33808", Offset = "0xB33808")]
	public class HapticRack : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F118", Offset = "0xB3F118")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F150", Offset = "0xB3F150")]
		public int teethCount;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F188", Offset = "0xB3F188")]
		public int minimumPulseDuration;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F1C0", Offset = "0xB3F1C0")]
		public int maximumPulseDuration;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F1F8", Offset = "0xB3F1F8")]
		public UnityEvent onPulse;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x114F28C", Offset = "0x114F28C", VA = "0x114F28C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x114F31C", Offset = "0x114F31C", VA = "0x114F31C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x114F324", Offset = "0x114F324", VA = "0x114F324")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x114F32C", Offset = "0x114F32C", VA = "0x114F32C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x114F3DC", Offset = "0x114F3DC", VA = "0x114F3DC")]
		private void Pulse()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x114F4B4", Offset = "0x114F4B4", VA = "0x114F4B4")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class HideOnHandFocusLost : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002346")]
		[Address(RVA = "0x114F4D8", Offset = "0x114F4D8", VA = "0x114F4D8")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x114F500", Offset = "0x114F500", VA = "0x114F500")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class IgnoreHovering : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F230", Offset = "0xB3F230")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x114F508", Offset = "0x114F508", VA = "0x114F508")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x170002E1")]
		public static InputModule instance
		{
			[Token(Token = "0x6002349")]
			[Address(RVA = "0x114F518", Offset = "0x114F518", VA = "0x114F518")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x114F5E4", Offset = "0x114F5E4", VA = "0x114F5E4", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x114F674", Offset = "0x114F674", VA = "0x114F674")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x114F760", Offset = "0x114F760", VA = "0x114F760")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x114F864", Offset = "0x114F864", VA = "0x114F864")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x114F86C", Offset = "0x114F86C", VA = "0x114F86C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x114F9A4", Offset = "0x114F9A4", VA = "0x114F9A4")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class Interactable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009D3")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x20009D4")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x140000B5")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0x114F9AC", Offset = "0x114F9AC", VA = "0x114F9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F5C0", Offset = "0xB4F5C0")]
			add
			{
			}
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x114FA50", Offset = "0x114FA50", VA = "0x114FA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F5D0", Offset = "0xB4F5D0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B6")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0x114FAF4", Offset = "0x114FAF4", VA = "0x114FAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F5E0", Offset = "0xB4F5E0")]
			add
			{
			}
			[Token(Token = "0x6002353")]
			[Address(RVA = "0x114FB98", Offset = "0x114FB98", VA = "0x114FB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F5F0", Offset = "0xB4F5F0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x114FC3C", Offset = "0x114FC3C", VA = "0x114FC3C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x114FFE0", Offset = "0x114FFE0", VA = "0x114FFE0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x1150384", Offset = "0x1150384", VA = "0x1150384")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB3386C", Offset = "0xB3386C")]
	public class InteractableButtonEvents : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x115040C", Offset = "0x115040C", VA = "0x115040C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x11506F0", Offset = "0x11506F0", VA = "0x11506F0")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB338D0", Offset = "0xB338D0")]
	public class InteractableHoverEvents : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1150C5C", Offset = "0x1150C5C", VA = "0x1150C5C")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1150C78", Offset = "0x1150C78", VA = "0x1150C78")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1150C94", Offset = "0x1150C94", VA = "0x1150C94")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1150CB0", Offset = "0x1150CB0", VA = "0x1150CB0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x1150CCC", Offset = "0x1150CCC", VA = "0x1150CCC")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class ItemPackage : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009D5")]
		public enum ItemPackageType
		{
			[Token(Token = "0x40031EB")]
			Unrestricted,
			[Token(Token = "0x40031EC")]
			OneHanded,
			[Token(Token = "0x40031ED")]
			TwoHanded
		}

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x1150CD4", Offset = "0x1150CD4", VA = "0x1150CD4")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class ItemPackageReference : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x1150CDC", Offset = "0x1150CDC", VA = "0x1150CDC")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33934", Offset = "0xB33934")]
	public class ItemPackageSpawner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x170002E2")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6002360")]
			[Address(RVA = "0x1150CE4", Offset = "0x1150CE4", VA = "0x1150CE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002361")]
			[Address(RVA = "0x1150CEC", Offset = "0x1150CEC", VA = "0x1150CEC")]
			set
			{
			}
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x1150CF0", Offset = "0x1150CF0", VA = "0x1150CF0")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x1151248", Offset = "0x1151248", VA = "0x1151248")]
		private void Start()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x115124C", Offset = "0x115124C", VA = "0x115124C")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x1151324", Offset = "0x1151324", VA = "0x1151324")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1150F58", Offset = "0x1150F58", VA = "0x1150F58")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1151418", Offset = "0x1151418", VA = "0x1151418")]
		private void Update()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x11514C4", Offset = "0x11514C4", VA = "0x11514C4")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x11516BC", Offset = "0x11516BC", VA = "0x11516BC")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x11515C0", Offset = "0x11515C0", VA = "0x11515C0")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1151BA8", Offset = "0x1151BA8", VA = "0x1151BA8")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1151CB8", Offset = "0x1151CB8", VA = "0x1151CB8")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1151A00", Offset = "0x1151A00", VA = "0x1151A00")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1151CFC", Offset = "0x1151CFC", VA = "0x1151CFC")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x1151718", Offset = "0x1151718", VA = "0x1151718")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1151E5C", Offset = "0x1151E5C", VA = "0x1151E5C")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class LinearAnimation : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1151E74", Offset = "0x1151E74", VA = "0x1151E74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1151FD8", Offset = "0x1151FD8", VA = "0x1151FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1152034", Offset = "0x1152034", VA = "0x1152034")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class LinearAnimator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x115203C", Offset = "0x115203C", VA = "0x115203C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x115213C", Offset = "0x115213C", VA = "0x115213C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x11521E0", Offset = "0x11521E0", VA = "0x11521E0")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class LinearAudioPitch : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x11521F0", Offset = "0x11521F0", VA = "0x11521F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x11522D0", Offset = "0x11522D0", VA = "0x11522D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x11522E0", Offset = "0x11522E0", VA = "0x11522E0")]
		private void Apply()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x115239C", Offset = "0x115239C", VA = "0x115239C")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class LinearBlendshape : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x11523AC", Offset = "0x11523AC", VA = "0x11523AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x115248C", Offset = "0x115248C", VA = "0x115248C")]
		private void Update()
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1152504", Offset = "0x1152504", VA = "0x1152504")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class LinearDisplacement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x115250C", Offset = "0x115250C", VA = "0x115250C")]
		private void Start()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x11525C0", Offset = "0x11525C0", VA = "0x11525C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1152704", Offset = "0x1152704", VA = "0x1152704")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33998", Offset = "0xB33998")]
	public class LinearDrive : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x115270C", Offset = "0x115270C", VA = "0x115270C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x1152764", Offset = "0x1152764", VA = "0x1152764")]
		private void Start()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x1152A9C", Offset = "0x1152A9C", VA = "0x1152A9C")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1152D30", Offset = "0x1152D30", VA = "0x1152D30")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x11528A0", Offset = "0x11528A0", VA = "0x11528A0")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x1152BBC", Offset = "0x1152BBC", VA = "0x1152BBC")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x1152E1C", Offset = "0x1152E1C", VA = "0x1152E1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1152FD4", Offset = "0x1152FD4", VA = "0x1152FD4")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class LinearMapping : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x1152FF4", Offset = "0x1152FF4", VA = "0x1152FF4")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB339FC", Offset = "0xB339FC")]
	public class PlaySound : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F298", Offset = "0xB3F298")]
		public AudioClip[] waveFile;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F2D0", Offset = "0xB3F2D0")]
		public bool stopOnPlay;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F308", Offset = "0xB3F308")]
		public bool disableOnEnd;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F340", Offset = "0xB3F340")]
		public bool looping;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F378", Offset = "0xB3F378")]
		public bool stopOnEnd;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F3B0", Offset = "0xB3F3B0")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3F3E8", Offset = "0xB3F3E8")]
		public bool useRandomVolume;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F420", Offset = "0xB3F420")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F420", Offset = "0xB3F420")]
		public float volMin;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F474", Offset = "0xB3F474")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F474", Offset = "0xB3F474")]
		public float volMax;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3F4C8", Offset = "0xB3F4C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F4C8", Offset = "0xB3F4C8")]
		public bool useRandomPitch;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F528", Offset = "0xB3F528")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F528", Offset = "0xB3F528")]
		public float pitchMin;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F57C", Offset = "0xB3F57C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F57C", Offset = "0xB3F57C")]
		public float pitchMax;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3F5D0", Offset = "0xB3F5D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F5D0", Offset = "0xB3F5D0")]
		public bool useRetriggerTime;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F630", Offset = "0xB3F630")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F630", Offset = "0xB3F630")]
		public float timeInitial;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F688", Offset = "0xB3F688")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F688", Offset = "0xB3F688")]
		public float timeMin;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F6E0", Offset = "0xB3F6E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F6E0", Offset = "0xB3F6E0")]
		public float timeMax;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3F738", Offset = "0xB3F738")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F738", Offset = "0xB3F738")]
		public bool useRandomSilence;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F798", Offset = "0xB3F798")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB3F798", Offset = "0xB3F798")]
		public float percentToNotPlay;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3F7EC", Offset = "0xB3F7EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F7EC", Offset = "0xB3F7EC")]
		public float delayOffsetTime;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x115450C", Offset = "0x115450C", VA = "0x115450C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x115463C", Offset = "0x115463C", VA = "0x115463C")]
		public void Play()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x115464C", Offset = "0x115464C", VA = "0x115464C")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x1154788", Offset = "0x1154788", VA = "0x1154788")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x11546C4", Offset = "0x11546C4", VA = "0x11546C4")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x1154968", Offset = "0x1154968", VA = "0x1154968")]
		public void Disable()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x1154990", Offset = "0x1154990", VA = "0x1154990")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x1154850", Offset = "0x1154850", VA = "0x1154850")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x11549AC", Offset = "0x11549AC", VA = "0x11549AC")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class Player : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F84C", Offset = "0xB3F84C")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F884", Offset = "0xB3F884")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F8BC", Offset = "0xB3F8BC")]
		public Hand[] hands;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F8F4", Offset = "0xB3F8F4")]
		public Collider headCollider;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F92C", Offset = "0xB3F92C")]
		public GameObject rigSteamVR;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F964", Offset = "0xB3F964")]
		public GameObject rig2DFallback;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F99C", Offset = "0xB3F99C")]
		public Transform audioListener;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x170002E3")]
		public static Player instance
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x11452C8", Offset = "0x11452C8", VA = "0x11452C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		public int handCount
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0x1150660", Offset = "0x1150660", VA = "0x1150660")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E5")]
		public Hand leftHand
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x11549CC", Offset = "0x11549CC", VA = "0x11549CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		public Hand rightHand
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x1154A94", Offset = "0x1154A94", VA = "0x1154A94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x1154B60", Offset = "0x1154B60", VA = "0x1154B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x1154BF4", Offset = "0x1154BF4", VA = "0x1154BF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public Transform hmdTransform
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x11485B8", Offset = "0x11485B8", VA = "0x11485B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public float eyeHeight
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x1154C88", Offset = "0x1154C88", VA = "0x1154C88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EB")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x1154E18", Offset = "0x1154E18", VA = "0x1154E18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EC")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x1154FD4", Offset = "0x1154FD4", VA = "0x1154FD4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x11505B0", Offset = "0x11505B0", VA = "0x11505B0")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x11551A4", Offset = "0x11551A4", VA = "0x11551A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x115522C", Offset = "0x115522C", VA = "0x115522C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x1155468", Offset = "0x1155468", VA = "0x1155468")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x114ACB0", Offset = "0x114ACB0", VA = "0x114ACB0")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x11552BC", Offset = "0x11552BC", VA = "0x11552BC")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x11559D0", Offset = "0x11559D0", VA = "0x11559D0")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x11559D4", Offset = "0x11559D4", VA = "0x11559D4")]
		public Player()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class SeeThru : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x11559E4", Offset = "0x11559E4", VA = "0x11559E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x1155FBC", Offset = "0x1155FBC", VA = "0x1155FBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x1156074", Offset = "0x1156074", VA = "0x1156074")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x115612C", Offset = "0x115612C", VA = "0x115612C")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x115614C", Offset = "0x115614C", VA = "0x115614C")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x115616C", Offset = "0x115616C", VA = "0x115616C")]
		private void Update()
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x11563B0", Offset = "0x11563B0", VA = "0x11563B0")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class SleepOnAwake : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x11563B8", Offset = "0x11563B8", VA = "0x11563B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x1156460", Offset = "0x1156460", VA = "0x1156460")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class SoundDeparent : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x11564C8", Offset = "0x11564C8", VA = "0x11564C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x1156520", Offset = "0x1156520", VA = "0x1156520")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x115660C", Offset = "0x115660C", VA = "0x115660C")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public class SoundPlayOneshot : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x115661C", Offset = "0x115661C", VA = "0x115661C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x1153C2C", Offset = "0x1153C2C", VA = "0x1153C2C")]
		public void Play()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x115668C", Offset = "0x115668C", VA = "0x115668C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x1156720", Offset = "0x1156720", VA = "0x1156720")]
		public void UnPause()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x11567B4", Offset = "0x11567B4", VA = "0x11567B4")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x2000565")]
	public class SpawnAndAttachAfterControllerIsTracking : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x11567BC", Offset = "0x11567BC", VA = "0x11567BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x1156814", Offset = "0x1156814", VA = "0x1156814")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x1156998", Offset = "0x1156998", VA = "0x1156998")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class SpawnAndAttachToHand : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x11569A0", Offset = "0x11569A0", VA = "0x11569A0")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x1156AB0", Offset = "0x1156AB0", VA = "0x1156AB0")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class SpawnRenderModel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1156AB8", Offset = "0x1156AB8", VA = "0x1156AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1156B80", Offset = "0x1156B80", VA = "0x1156B80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x1156EBC", Offset = "0x1156EBC", VA = "0x1156EBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1157058", Offset = "0x1157058", VA = "0x1157058")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x1157060", Offset = "0x1157060", VA = "0x1157060")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x1157068", Offset = "0x1157068", VA = "0x1157068")]
		private void Update()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x1156C20", Offset = "0x1156C20", VA = "0x1156C20")]
		private void ShowController()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x1156F5C", Offset = "0x1156F5C", VA = "0x1156F5C")]
		private void HideController()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x11572A8", Offset = "0x11572A8", VA = "0x11572A8")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x11575B4", Offset = "0x11575B4", VA = "0x11575B4")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x2000568")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33A60", Offset = "0xB33A60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33A60", Offset = "0xB33A60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33A60", Offset = "0xB33A60")]
	public class Throwable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D40", Offset = "0xB36D40")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x40031F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x17000561")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600386B")]
				[Address(RVA = "0xF58074", Offset = "0xF58074", VA = "0xF58074", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000562")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600386D")]
				[Address(RVA = "0xF580DC", Offset = "0xF580DC", VA = "0xF580DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003868")]
			[Address(RVA = "0xF57E94", Offset = "0xF57E94", VA = "0xF57E94")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003869")]
			[Address(RVA = "0xF57FAC", Offset = "0xF57FAC", VA = "0xF57FAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600386A")]
			[Address(RVA = "0xF57FB0", Offset = "0xF57FB0", VA = "0xF57FB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600386C")]
			[Address(RVA = "0xF5807C", Offset = "0xF5807C", VA = "0xF5807C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3F9D4", Offset = "0xB3F9D4")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FA20", Offset = "0xB3FA20")]
		public string attachmentPoint;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FA58", Offset = "0xB3FA58")]
		public float catchSpeedThreshold;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FA90", Offset = "0xB3FA90")]
		public bool restoreOriginalParent;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xF56D08", Offset = "0xF56D08", VA = "0xF56D08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xF56D9C", Offset = "0xF56D9C", VA = "0xF56D9C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xF56E7C", Offset = "0xF56E7C", VA = "0xF56E7C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xF56F00", Offset = "0xF56F00", VA = "0xF56F00")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xF56FD8", Offset = "0xF56FD8", VA = "0xF56FD8")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xF57274", Offset = "0xF57274", VA = "0xF57274")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xF57ACC", Offset = "0xF57ACC", VA = "0xF57ACC")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xF57D44", Offset = "0xF57D44", VA = "0xF57D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F600", Offset = "0xB4F600")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xF57EC0", Offset = "0xF57EC0", VA = "0xF57EC0")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xF57F00", Offset = "0xF57F00", VA = "0xF57F00")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xF57F58", Offset = "0xF57F58", VA = "0xF57F58")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33B14", Offset = "0xB33B14")]
	public class UIElement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xF580E4", Offset = "0xF580E4", VA = "0xF580E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xF581D0", Offset = "0xF581D0", VA = "0xF581D0")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xF58290", Offset = "0xF58290", VA = "0xF58290")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xF58354", Offset = "0xF58354", VA = "0xF58354")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xF58428", Offset = "0xF58428", VA = "0xF58428")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xF58484", Offset = "0xF58484", VA = "0xF58484")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class Unparent : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xF5848C", Offset = "0xF5848C", VA = "0xF5848C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xF58588", Offset = "0xF58588", VA = "0xF58588")]
		private void Update()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xF5864C", Offset = "0xF5864C", VA = "0xF5864C")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xF58654", Offset = "0xF58654", VA = "0xF58654")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public static class Util
	{
		[Token(Token = "0x20009D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D50", Offset = "0xB36D50")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x40031F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x17000563")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003871")]
				[Address(RVA = "0xF5A2E4", Offset = "0xF5A2E4", VA = "0xF5A2E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000564")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003873")]
				[Address(RVA = "0xF5A34C", Offset = "0xF5A34C", VA = "0xF5A34C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600386E")]
			[Address(RVA = "0xF59A3C", Offset = "0xF59A3C", VA = "0xF59A3C")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x600386F")]
			[Address(RVA = "0xF5A17C", Offset = "0xF5A17C", VA = "0xF5A17C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003870")]
			[Address(RVA = "0xF5A180", Offset = "0xF5A180", VA = "0xF5A180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003872")]
			[Address(RVA = "0xF5A2EC", Offset = "0xF5A2EC", VA = "0xF5A2EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20009D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D60", Offset = "0xB36D60")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x40031F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x40031F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x6003875")]
			public <>c__47()
			{
			}

			[Token(Token = "0x6003876")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x400238B")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x400238C")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x400238D")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x400238E")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x400238F")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x4002390")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x4002391")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x4002392")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x4002393")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x4002394")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xF5865C", Offset = "0xF5865C", VA = "0xF5865C")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xF57DC0", Offset = "0xF57DC0", VA = "0xF57DC0")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xF58678", Offset = "0xF58678", VA = "0xF58678")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xF586A0", Offset = "0xF586A0", VA = "0xF586A0")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xF587B8", Offset = "0xF587B8", VA = "0xF587B8")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xF58990", Offset = "0xF58990", VA = "0xF58990")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xF58ACC", Offset = "0xF58ACC", VA = "0xF58ACC")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xF58C08", Offset = "0xF58C08", VA = "0xF58C08")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xF58C18", Offset = "0xF58C18", VA = "0xF58C18")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xF58C54", Offset = "0xF58C54", VA = "0xF58C54")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xF58C84", Offset = "0xF58C84", VA = "0xF58C84")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xF58D3C", Offset = "0xF58D3C", VA = "0xF58D3C")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x60023E7")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x60023E8")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x60023E9")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xF58E04", Offset = "0xF58E04", VA = "0xF58E04")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xF58F04", Offset = "0xF58F04", VA = "0xF58F04")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x60023ED")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EE")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EF")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x60023F0")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x60023F1")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60023F2")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x60023F3")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : UnityEngine.MonoBehaviour where U : UnityEngine.MonoBehaviour
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xF59200", Offset = "0xF59200", VA = "0xF59200")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xF55660", Offset = "0xF55660", VA = "0xF55660")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xF592B8", Offset = "0xF592B8", VA = "0xF592B8")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xF593B4", Offset = "0xF593B4", VA = "0xF593B4")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xF595A0", Offset = "0xF595A0", VA = "0xF595A0")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xF5962C", Offset = "0xF5962C", VA = "0xF5962C")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xF59748", Offset = "0xF59748", VA = "0xF59748")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xF59878", Offset = "0xF59878", VA = "0xF59878")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xF599C0", Offset = "0xF599C0", VA = "0xF599C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F664", Offset = "0xB4F664")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xF59A68", Offset = "0xF59A68", VA = "0xF59A68")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xF59A70", Offset = "0xF59A70", VA = "0xF59A70")]
		public static void Quit()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xF59A94", Offset = "0xF59A94", VA = "0xF59A94")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x6002400")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x6002401")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xF59B4C", Offset = "0xF59B4C", VA = "0xF59B4C")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xF59BFC", Offset = "0xF59BFC", VA = "0xF59BFC")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xF59D78", Offset = "0xF59D78", VA = "0xF59D78")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xF59E0C", Offset = "0xF59E0C", VA = "0xF59E0C")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xF59ED8", Offset = "0xF59ED8", VA = "0xF59ED8")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xF59FEC", Offset = "0xF59FEC", VA = "0xF59FEC")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xF5A090", Offset = "0xF5A090", VA = "0xF5A090")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public class AfterTimer_Component : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D70", Offset = "0xB36D70")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x17000565")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600387A")]
				[Address(RVA = "0x166ECFC", Offset = "0x166ECFC", VA = "0x166ECFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000566")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600387C")]
				[Address(RVA = "0x166ED64", Offset = "0x166ED64", VA = "0x166ED64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003877")]
			[Address(RVA = "0x166EB74", Offset = "0x166EB74", VA = "0x166EB74")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003878")]
			[Address(RVA = "0x166EC08", Offset = "0x166EC08", VA = "0x166EC08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003879")]
			[Address(RVA = "0x166EC0C", Offset = "0x166EC0C", VA = "0x166EC0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600387B")]
			[Address(RVA = "0x166ED04", Offset = "0x166ED04", VA = "0x166ED04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x166EAC0", Offset = "0x166EAC0", VA = "0x166EAC0")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x166EB04", Offset = "0x166EB04", VA = "0x166EB04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F6F8", Offset = "0xB4F6F8")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x166EBA0", Offset = "0x166EBA0", VA = "0x166EBA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x166EC00", Offset = "0x166EC00", VA = "0x166EC00")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class VelocityEstimator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D80", Offset = "0xB36D80")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x40031FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x40031FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000567")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003880")]
				[Address(RVA = "0xF5AA58", Offset = "0xF5AA58", VA = "0xF5AA58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000568")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003882")]
				[Address(RVA = "0xF5AAC0", Offset = "0xF5AAC0", VA = "0xF5AAC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600387D")]
			[Address(RVA = "0xF5A628", Offset = "0xF5A628", VA = "0xF5A628")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600387E")]
			[Address(RVA = "0xF5A668", Offset = "0xF5A668", VA = "0xF5A668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600387F")]
			[Address(RVA = "0xF5A66C", Offset = "0xF5A66C", VA = "0xF5A66C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003881")]
			[Address(RVA = "0xF5AA60", Offset = "0xF5AA60", VA = "0xF5AA60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FAC8", Offset = "0xB3FAC8")]
		public int velocityAverageFrames;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FB00", Offset = "0xB3FB00")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xF57224", Offset = "0xF57224", VA = "0xF57224")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xF5770C", Offset = "0xF5770C", VA = "0xF5770C")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xF5773C", Offset = "0xF5773C", VA = "0xF5773C")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xF57904", Offset = "0xF57904", VA = "0xF57904")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xF5A3C4", Offset = "0xF5A3C4", VA = "0xF5A3C4")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xF5A5A8", Offset = "0xF5A5A8", VA = "0xF5A5A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xF5A354", Offset = "0xF5A354", VA = "0xF5A354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F75C", Offset = "0xB4F75C")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xF5A654", Offset = "0xF5A654", VA = "0xF5A654")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class ControllerButtonHints : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009DB")]
		private enum OffsetType
		{
			[Token(Token = "0x4003201")]
			Up,
			[Token(Token = "0x4003202")]
			Right,
			[Token(Token = "0x4003203")]
			Forward,
			[Token(Token = "0x4003204")]
			Back
		}

		[Token(Token = "0x20009DC")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x4003205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x4003206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x4003207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x4003208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x4003209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x400320A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x400320B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x400320C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x400320D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x400320E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x400320F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x4003210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x4003211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x4003212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x6003883")]
			[Address(RVA = "0x11476DC", Offset = "0x11476DC", VA = "0x11476DC")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x20009DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36D90", Offset = "0xB36D90")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000569")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003887")]
				[Address(RVA = "0x11493FC", Offset = "0x11493FC", VA = "0x11493FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003889")]
				[Address(RVA = "0x1149464", Offset = "0x1149464", VA = "0x1149464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003884")]
			[Address(RVA = "0x1147EF4", Offset = "0x1147EF4", VA = "0x1147EF4")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6003885")]
			[Address(RVA = "0x1149180", Offset = "0x1149180", VA = "0x1149180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003886")]
			[Address(RVA = "0x1149184", Offset = "0x1149184", VA = "0x1149184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003888")]
			[Address(RVA = "0x1149404", Offset = "0x1149404", VA = "0x1149404", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36DA0", Offset = "0xB36DA0")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x1700056B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600388D")]
				[Address(RVA = "0x11496A4", Offset = "0x11496A4", VA = "0x11496A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600388F")]
				[Address(RVA = "0x114970C", Offset = "0x114970C", VA = "0x114970C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600388A")]
			[Address(RVA = "0x1147F90", Offset = "0x1147F90", VA = "0x1147F90")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x600388B")]
			[Address(RVA = "0x114946C", Offset = "0x114946C", VA = "0x114946C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600388C")]
			[Address(RVA = "0x1149470", Offset = "0x1149470", VA = "0x1149470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600388E")]
			[Address(RVA = "0x11496AC", Offset = "0x11496AC", VA = "0x11496AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3FB38", Offset = "0xB3FB38")]
		public bool debugHints;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB70", Offset = "0xB3FB70")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x170002ED")]
		public bool initialized
		{
			[Token(Token = "0x6002415")]
			[Address(RVA = "0x11451D4", Offset = "0x11451D4", VA = "0x11451D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F7C0", Offset = "0xB4F7C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002416")]
			[Address(RVA = "0x11451DC", Offset = "0x11451DC", VA = "0x11451DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4F7D0", Offset = "0xB4F7D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x11451E8", Offset = "0x11451E8", VA = "0x11451E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x11452A4", Offset = "0x11452A4", VA = "0x11452A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x1145394", Offset = "0x1145394", VA = "0x1145394")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1145440", Offset = "0x1145440", VA = "0x1145440")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1145460", Offset = "0x1145460", VA = "0x1145460")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1145500", Offset = "0x1145500", VA = "0x1145500")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x114568C", Offset = "0x114568C", VA = "0x114568C")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1145864", Offset = "0x1145864", VA = "0x1145864")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x114614C", Offset = "0x114614C", VA = "0x114614C")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1147184", Offset = "0x1147184", VA = "0x1147184")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x11476E4", Offset = "0x11476E4", VA = "0x11476E4")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x1145524", Offset = "0x1145524", VA = "0x1145524")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1147A84", Offset = "0x1147A84", VA = "0x1147A84")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x1147D1C", Offset = "0x1147D1C", VA = "0x1147D1C")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1147E84", Offset = "0x1147E84", VA = "0x1147E84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F7E0", Offset = "0xB4F7E0")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1147F20", Offset = "0x1147F20", VA = "0x1147F20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F844", Offset = "0xB4F844")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1147FBC", Offset = "0x1147FBC", VA = "0x1147FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x11482C0", Offset = "0x11482C0", VA = "0x11482C0")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x1145498", Offset = "0x1145498", VA = "0x1145498")]
		private void Clear()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x114865C", Offset = "0x114865C", VA = "0x114865C")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x114883C", Offset = "0x114883C", VA = "0x114883C")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x1145564", Offset = "0x1145564", VA = "0x1145564")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1148930", Offset = "0x1148930", VA = "0x1148930")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1148A00", Offset = "0x1148A00", VA = "0x1148A00")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1148AD8", Offset = "0x1148AD8", VA = "0x1148AD8")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1148B88", Offset = "0x1148B88", VA = "0x1148B88")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x1148C38", Offset = "0x1148C38", VA = "0x1148C38")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1148CD4", Offset = "0x1148CD4", VA = "0x1148CD4")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1148D88", Offset = "0x1148D88", VA = "0x1148D88")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x1148E54", Offset = "0x1148E54", VA = "0x1148E54")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1148F04", Offset = "0x1148F04", VA = "0x1148F04")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1148FA0", Offset = "0x1148FA0", VA = "0x1148FA0")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1149064", Offset = "0x1149064", VA = "0x1149064")]
		public ControllerButtonHints()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class ArcheryTarget : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36DB0", Offset = "0xB36DB0")]
		private sealed class <FallDown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400321A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400321B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArcheryTarget <>4__this;

			[Token(Token = "0x400321C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Quaternion <startingRot>5__2;

			[Token(Token = "0x400321D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__3;

			[Token(Token = "0x400321E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <rotLerp>5__4;

			[Token(Token = "0x1700056D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003893")]
				[Address(RVA = "0x166F098", Offset = "0x166F098", VA = "0x166F098", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003895")]
				[Address(RVA = "0x166F100", Offset = "0x166F100", VA = "0x166F100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003890")]
			[Address(RVA = "0x166EE50", Offset = "0x166EE50", VA = "0x166EE50")]
			[DebuggerHidden]
			public <FallDown>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6003891")]
			[Address(RVA = "0x166EE94", Offset = "0x166EE94", VA = "0x166EE94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003892")]
			[Address(RVA = "0x166EE98", Offset = "0x166EE98", VA = "0x166EE98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003894")]
			[Address(RVA = "0x166F0A0", Offset = "0x166F0A0", VA = "0x166F0A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTakeDamage;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onceOnly;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetCenter;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform baseTransform;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform fallenDownTransform;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fallTime;

		[Token(Token = "0x40023B7")]
		private const float targetRadius = 0.25f;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool targetEnabled;

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x166ED7C", Offset = "0x166ED7C", VA = "0x166ED7C")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x166EDDC", Offset = "0x166EDDC", VA = "0x166EDDC")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x166ED80", Offset = "0x166ED80", VA = "0x166ED80")]
		private void OnDamageTaken()
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x166EDE0", Offset = "0x166EDE0", VA = "0x166EDE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F8A8", Offset = "0xB4F8A8")]
		private IEnumerator FallDown()
		{
			return null;
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x166EE7C", Offset = "0x166EE7C", VA = "0x166EE7C")]
		public ArcheryTarget()
		{
		}
	}
	[Token(Token = "0x2000570")]
	public class Arrow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem glintParticle;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody arrowHeadRB;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody shaftRB;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial targetPhysMaterial;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 prevPosition;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion prevRotation;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 prevVelocity;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 prevHeadPosition;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SoundPlayOneshot fireReleaseSound;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SoundPlayOneshot airReleaseSound;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundPlayOneshot hitTargetSound;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlaySound hitGroundSound;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool inFlight;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool released;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool hasSpreadFire;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int travelledFrames;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject scaleParentObject;

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x166F108", Offset = "0x166F108", VA = "0x166F108")]
		private void Start()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x166F180", Offset = "0x166F180", VA = "0x166F180")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x166F26C", Offset = "0x166F26C", VA = "0x166F26C")]
		public void ArrowReleased(float inputVelocity)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x166F678", Offset = "0x166F678", VA = "0x166F678")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x166FD48", Offset = "0x166FD48", VA = "0x166FD48")]
		private void StickInTarget(Collision collision, bool bSkipRayCast)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x16703E0", Offset = "0x16703E0", VA = "0x16703E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x1670494", Offset = "0x1670494", VA = "0x1670494")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class ArrowHand : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36DC0", Offset = "0xB36DC0")]
		private sealed class <ArrowReleaseHaptics>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400321F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArrowHand <>4__this;

			[Token(Token = "0x1700056F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003899")]
				[Address(RVA = "0x16714D0", Offset = "0x16714D0", VA = "0x16714D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600389B")]
				[Address(RVA = "0x1671538", Offset = "0x1671538", VA = "0x1671538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003896")]
			[Address(RVA = "0x167121C", Offset = "0x167121C", VA = "0x167121C")]
			[DebuggerHidden]
			public <ArrowReleaseHaptics>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6003897")]
			[Address(RVA = "0x16712BC", Offset = "0x16712BC", VA = "0x16712BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003898")]
			[Address(RVA = "0x16712C0", Offset = "0x16712C0", VA = "0x16712C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600389A")]
			[Address(RVA = "0x16714D8", Offset = "0x16714D8", VA = "0x16714D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Longbow bow;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject currentArrow;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrowPrefab;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform arrowNockTransform;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float nockDistance;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float lerpCompleteDistance;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationLerpThreshold;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float positionLerpThreshold;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool allowArrowSpawn;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool nocked;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool inNockRange;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool arrowLerpComplete;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundPlayOneshot arrowSpawnSound;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AllowTeleportWhileAttachedToHand allowTeleport;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int maxArrowCount;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GameObject> arrowList;

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x167049C", Offset = "0x167049C", VA = "0x167049C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1670538", Offset = "0x1670538", VA = "0x1670538")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x16705A8", Offset = "0x16705A8", VA = "0x16705A8")]
		private GameObject InstantiateArrow()
		{
			return null;
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x16707BC", Offset = "0x16707BC", VA = "0x16707BC")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1671124", Offset = "0x1671124", VA = "0x1671124")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1670E98", Offset = "0x1670E98", VA = "0x1670E98")]
		private void FireArrow()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1671210", Offset = "0x1671210", VA = "0x1671210")]
		private void EnableArrowSpawn()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x16711A0", Offset = "0x16711A0", VA = "0x16711A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F90C", Offset = "0xB4F90C")]
		private IEnumerator ArrowReleaseHaptics()
		{
			return null;
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1671248", Offset = "0x1671248", VA = "0x1671248")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x1671270", Offset = "0x1671270", VA = "0x1671270")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x1670540", Offset = "0x1670540", VA = "0x1670540")]
		private void FindBow()
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x1671298", Offset = "0x1671298", VA = "0x1671298")]
		public ArrowHand()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class ArrowheadRotation : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1671540", Offset = "0x1671540", VA = "0x1671540")]
		private void Start()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x16715D8", Offset = "0x16715D8", VA = "0x16715D8")]
		public ArrowheadRotation()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class Balloon : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009E1")]
		public enum BalloonColor
		{
			[Token(Token = "0x4003223")]
			Red,
			[Token(Token = "0x4003224")]
			OrangeRed,
			[Token(Token = "0x4003225")]
			Orange,
			[Token(Token = "0x4003226")]
			YellowOrange,
			[Token(Token = "0x4003227")]
			Yellow,
			[Token(Token = "0x4003228")]
			GreenYellow,
			[Token(Token = "0x4003229")]
			Green,
			[Token(Token = "0x400322A")]
			BlueGreen,
			[Token(Token = "0x400322B")]
			Blue,
			[Token(Token = "0x400322C")]
			VioletBlue,
			[Token(Token = "0x400322D")]
			Violet,
			[Token(Token = "0x400322E")]
			RedViolet,
			[Token(Token = "0x400322F")]
			LightGray,
			[Token(Token = "0x4003230")]
			DarkGray,
			[Token(Token = "0x4003231")]
			Random
		}

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject popPrefab;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVelocity;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lifetime;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool burstOnLifetimeEnd;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject lifetimeEndParticlePrefab;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot lifetimeEndSound;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float destructTime;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float releaseTime;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundPlayOneshot collisionSound;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastSoundTime;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float soundDelay;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody balloonRigidbody;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool bParticlesSpawned;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s_flLastDeathSound;

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x16715E0", Offset = "0x16715E0", VA = "0x16715E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x167167C", Offset = "0x167167C", VA = "0x167167C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1671738", Offset = "0x1671738", VA = "0x1671738")]
		private void SpawnParticles(GameObject particlePrefab, SoundPlayOneshot sound)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1671988", Offset = "0x1671988", VA = "0x1671988")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1671A84", Offset = "0x1671A84", VA = "0x1671A84")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1671B10", Offset = "0x1671B10", VA = "0x1671B10")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1671E5C", Offset = "0x1671E5C", VA = "0x1671E5C")]
		public void SetColor(BalloonColor color)
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1671EE8", Offset = "0x1671EE8", VA = "0x1671EE8")]
		private Color BalloonColorToRGB(BalloonColor balloonColorVar)
		{
			return default(Color);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1672120", Offset = "0x1672120", VA = "0x1672120")]
		public Balloon()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class BalloonColliders : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] colliders;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] colliderLocalPositions;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] colliderLocalRotations;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x1672150", Offset = "0x1672150", VA = "0x1672150")]
		private void Awake()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1672364", Offset = "0x1672364", VA = "0x1672364")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x16725CC", Offset = "0x16725CC", VA = "0x16725CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x1672714", Offset = "0x1672714", VA = "0x1672714")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x16727CC", Offset = "0x16727CC", VA = "0x16727CC")]
		public BalloonColliders()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class BalloonHapticBump : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject physParent;

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x16727D4", Offset = "0x16727D4", VA = "0x16727D4")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x16728F8", Offset = "0x16728F8", VA = "0x16728F8")]
		public BalloonHapticBump()
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class BalloonSpawner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minSpawnTime;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpawnTime;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextSpawnTime;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject balloonPrefab;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoSpawn;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool spawnAtStartup;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool playSounds;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundPlayOneshot inflateSound;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot stretchSound;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool sendSpawnMessageToParent;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float scale;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnDirectionTransform;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float spawnForce;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool attachBalloon;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Balloon.BalloonColor color;

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1672900", Offset = "0x1672900", VA = "0x1672900")]
		private void Start()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1672D80", Offset = "0x1672D80", VA = "0x1672D80")]
		private void Update()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x16729BC", Offset = "0x16729BC", VA = "0x16729BC")]
		public GameObject SpawnBalloon(Balloon.BalloonColor color = Balloon.BalloonColor.Red)
		{
			return null;
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1672E48", Offset = "0x1672E48", VA = "0x1672E48")]
		public void SpawnBalloonFromEvent(int color)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x1672E4C", Offset = "0x1672E4C", VA = "0x1672E4C")]
		public BalloonSpawner()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class ExplosionWobble : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002468")]
		[Address(RVA = "0x114B4C4", Offset = "0x114B4C4", VA = "0x114B4C4")]
		public void ExplosionEvent(Vector3 explosionPos)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x114B5A8", Offset = "0x114B5A8", VA = "0x114B5A8")]
		public ExplosionWobble()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class FireSource : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject fireParticlePrefab;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool startActive;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject fireObject;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem customParticles;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isBurning;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float burnTime;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ignitionDelay;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float ignitionTime;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Hand hand;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource ignitionSound;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool canSpreadFromThisSource;

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x114BA10", Offset = "0x114BA10", VA = "0x114BA10")]
		private void Start()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x114BC5C", Offset = "0x114BC5C", VA = "0x114BC5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x114BD64", Offset = "0x114BD64", VA = "0x114BD64")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x114BDF0", Offset = "0x114BDF0", VA = "0x114BDF0")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x114BA20", Offset = "0x114BA20", VA = "0x114BA20")]
		private void StartBurning()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x114BF00", Offset = "0x114BF00", VA = "0x114BF00")]
		public FireSource()
		{
		}
	}
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33B88", Offset = "0xB33B88")]
	public class Longbow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009E2")]
		public enum Handedness
		{
			[Token(Token = "0x4003233")]
			Left,
			[Token(Token = "0x4003234")]
			Right
		}

		[Token(Token = "0x20009E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36DD0", Offset = "0xB36DD0")]
		private sealed class <ResetDrawAnim>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Longbow <>4__this;

			[Token(Token = "0x4003238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4003239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startLerp>5__3;

			[Token(Token = "0x17000571")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600389F")]
				[Address(RVA = "0x115449C", Offset = "0x115449C", VA = "0x115449C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000572")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038A1")]
				[Address(RVA = "0x1154504", Offset = "0x1154504", VA = "0x1154504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600389C")]
			[Address(RVA = "0x1153DD8", Offset = "0x1153DD8", VA = "0x1153DD8")]
			[DebuggerHidden]
			public <ResetDrawAnim>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x600389D")]
			[Address(RVA = "0x11543A8", Offset = "0x11543A8", VA = "0x11543A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600389E")]
			[Address(RVA = "0x11543AC", Offset = "0x11543AC", VA = "0x11543AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038A0")]
			[Address(RVA = "0x11544A4", Offset = "0x11544A4", VA = "0x11544A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Handedness currentHandGuess;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timeOfPossibleHandSwitch;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeBeforeConfirmingHandSwitch;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool possibleHandSwitch;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform pivotTransform;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform handleTransform;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ArrowHand arrowHand;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform nockTransform;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform nockRestTransform;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool autoSpawnArrowHand;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ItemPackage arrowHandItemPackage;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject arrowHandPrefab;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool nocked;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool pulled;

		[Token(Token = "0x4002418")]
		private const float minPull = 0.05f;

		[Token(Token = "0x4002419")]
		private const float maxPull = 0.5f;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float nockDistanceTravelled;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float hapticDistanceThreshold;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastTickDistance;

		[Token(Token = "0x400241D")]
		private const float bowPullPulseStrengthLow = 100f;

		[Token(Token = "0x400241E")]
		private const float bowPullPulseStrengthHigh = 500f;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 bowLeftVector;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float arrowMinVelocity;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float arrowMaxVelocity;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float arrowVelocity;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float minStrainTickTime;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float maxStrainTickTime;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float nextStrainTick;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lerpStartTime;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lerpDuration;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion lerpStartRotation;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float nockLerpStartTime;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion nockLerpStartRotation;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float drawOffset;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public LinearMapping bowDrawLinearMapping;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool deferNewPoses;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 lateUpdatePos;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion lateUpdateRot;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SoundBowClick drawSound;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float drawTension;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SoundPlayOneshot arrowSlideSound;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SoundPlayOneshot releaseSound;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SoundPlayOneshot nockSound;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SteamVR_Events.Action newPosesAppliedAction;

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1152FFC", Offset = "0x1152FFC", VA = "0x1152FFC")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1153004", Offset = "0x1153004", VA = "0x1153004")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x11530A0", Offset = "0x11530A0", VA = "0x11530A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x11530C0", Offset = "0x11530C0", VA = "0x11530C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x11530E0", Offset = "0x11530E0", VA = "0x11530E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1153144", Offset = "0x1153144", VA = "0x1153144")]
		private void OnNewPosesApplied()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x11531AC", Offset = "0x11531AC", VA = "0x11531AC")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x1153B30", Offset = "0x1153B30", VA = "0x1153B30")]
		public void ArrowReleased()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1153D68", Offset = "0x1153D68", VA = "0x1153D68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F970", Offset = "0xB4F970")]
		private IEnumerator ResetDrawAnim()
		{
			return null;
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x1153E04", Offset = "0x1153E04", VA = "0x1153E04")]
		public float GetArrowVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x1153E0C", Offset = "0x1153E0C", VA = "0x1153E0C")]
		public void StartRotationLerp()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1153E64", Offset = "0x1153E64", VA = "0x1153E64")]
		public void StartNock(ArrowHand currentArrowHand)
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x11539EC", Offset = "0x11539EC", VA = "0x11539EC")]
		private void EvaluateHandedness()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x1153F1C", Offset = "0x1153F1C", VA = "0x1153F1C")]
		private void DoHandednessCheck()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x1153F9C", Offset = "0x1153F9C", VA = "0x1153F9C")]
		public void ArrowInPosition()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x1154034", Offset = "0x1154034", VA = "0x1154034")]
		public void ReleaseNock()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x11540B8", Offset = "0x11540B8", VA = "0x11540B8")]
		private void ShutDown()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1154270", Offset = "0x1154270", VA = "0x1154270")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1154298", Offset = "0x1154298", VA = "0x1154298")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x11542D8", Offset = "0x11542D8", VA = "0x11542D8")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1154354", Offset = "0x1154354", VA = "0x1154354")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1154358", Offset = "0x1154358", VA = "0x1154358")]
		public Longbow()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class SoundBowClick : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip bowClick;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchTensionCurve;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1156468", Offset = "0x1156468", VA = "0x1156468")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1153AD0", Offset = "0x1153AD0", VA = "0x1153AD0")]
		public void PlayBowTensionClicks(float normalizedTension)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x11564C0", Offset = "0x11564C0", VA = "0x11564C0")]
		public SoundBowClick()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class ControllerHintsExample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36DE0", Offset = "0xB36DE0")]
		private sealed class <TestButtonHints>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400323A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400323B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400323C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038A5")]
				[Address(RVA = "0x1149C84", Offset = "0x1149C84", VA = "0x1149C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038A7")]
				[Address(RVA = "0x1149CEC", Offset = "0x1149CEC", VA = "0x1149CEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038A2")]
			[Address(RVA = "0x1149954", Offset = "0x1149954", VA = "0x1149954")]
			[DebuggerHidden]
			public <TestButtonHints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60038A3")]
			[Address(RVA = "0x11499B4", Offset = "0x11499B4", VA = "0x11499B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038A4")]
			[Address(RVA = "0x11499B8", Offset = "0x11499B8", VA = "0x11499B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038A6")]
			[Address(RVA = "0x1149C8C", Offset = "0x1149C8C", VA = "0x1149C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36DF0", Offset = "0xB36DF0")]
		private sealed class <TestTextHints>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400323D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400323E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400323F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x17000575")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038AB")]
				[Address(RVA = "0x1149F40", Offset = "0x1149F40", VA = "0x1149F40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038AD")]
				[Address(RVA = "0x1149FA8", Offset = "0x1149FA8", VA = "0x1149FA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038A8")]
			[Address(RVA = "0x1149980", Offset = "0x1149980", VA = "0x1149980")]
			[DebuggerHidden]
			public <TestTextHints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60038A9")]
			[Address(RVA = "0x1149CF4", Offset = "0x1149CF4", VA = "0x1149CF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038AA")]
			[Address(RVA = "0x1149CF8", Offset = "0x1149CF8", VA = "0x1149CF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038AC")]
			[Address(RVA = "0x1149F48", Offset = "0x1149F48", VA = "0x1149F48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine buttonHintCoroutine;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine textHintCoroutine;

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1149714", Offset = "0x1149714", VA = "0x1149714")]
		public void ShowButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x11497D8", Offset = "0x11497D8", VA = "0x11497D8")]
		public void ShowTextHints(Hand hand)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x114989C", Offset = "0x114989C", VA = "0x114989C")]
		public void DisableHints()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x1149768", Offset = "0x1149768", VA = "0x1149768")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4F9D4", Offset = "0xB4F9D4")]
		private IEnumerator TestButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x114982C", Offset = "0x114982C", VA = "0x114982C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4FA38", Offset = "0xB4FA38")]
		private IEnumerator TestTextHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x11499AC", Offset = "0x11499AC", VA = "0x11499AC")]
		public ControllerHintsExample()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33BEC", Offset = "0xB33BEC")]
	public class InteractableExample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh textMesh;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRotation;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attachTime;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x11506F8", Offset = "0x11506F8", VA = "0x11506F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x1150768", Offset = "0x1150768", VA = "0x1150768")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x11507F8", Offset = "0x11507F8", VA = "0x11507F8")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x1150854", Offset = "0x1150854", VA = "0x1150854")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x1150A3C", Offset = "0x1150A3C", VA = "0x1150A3C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x1150ADC", Offset = "0x1150ADC", VA = "0x1150ADC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x1150B6C", Offset = "0x1150B6C", VA = "0x1150B6C")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x1150C44", Offset = "0x1150C44", VA = "0x1150C44")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1150C48", Offset = "0x1150C48", VA = "0x1150C48")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1150C4C", Offset = "0x1150C4C", VA = "0x1150C4C")]
		public InteractableExample()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class AllowTeleportWhileAttachedToHand : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool teleportAllowed;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHoverLock;

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x166ED6C", Offset = "0x166ED6C", VA = "0x166ED6C")]
		public AllowTeleportWhileAttachedToHand()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class ChaperoneInfo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E00", Offset = "0xB36E00")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaperoneInfo <>4__this;

			[Token(Token = "0x4003243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRChaperone <chaperone>5__2;

			[Token(Token = "0x17000577")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038B1")]
				[Address(RVA = "0x167373C", Offset = "0x167373C", VA = "0x167373C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038B3")]
				[Address(RVA = "0x16737A4", Offset = "0x16737A4", VA = "0x16737A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038AE")]
			[Address(RVA = "0x1673390", Offset = "0x1673390", VA = "0x1673390")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60038AF")]
			[Address(RVA = "0x1673430", Offset = "0x1673430", VA = "0x1673430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038B0")]
			[Address(RVA = "0x1673434", Offset = "0x1673434", VA = "0x1673434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038B2")]
			[Address(RVA = "0x1673744", Offset = "0x1673744", VA = "0x1673744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB80", Offset = "0xB3FB80")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB90", Offset = "0xB3FB90")]
		private float <playAreaSizeX>k__BackingField;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBA0", Offset = "0xB3FBA0")]
		private float <playAreaSizeZ>k__BackingField;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBB0", Offset = "0xB3FBB0")]
		private bool <roomscale>k__BackingField;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event Initialized;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ChaperoneInfo _instance;

		[Token(Token = "0x170002EE")]
		public bool initialized
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x167307C", Offset = "0x167307C", VA = "0x167307C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FA9C", Offset = "0xB4FA9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x1673084", Offset = "0x1673084", VA = "0x1673084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FAAC", Offset = "0xB4FAAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public float playAreaSizeX
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x1673090", Offset = "0x1673090", VA = "0x1673090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FABC", Offset = "0xB4FABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x1673098", Offset = "0x1673098", VA = "0x1673098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FACC", Offset = "0xB4FACC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public float playAreaSizeZ
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x16730A0", Offset = "0x16730A0", VA = "0x16730A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FADC", Offset = "0xB4FADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x16730A8", Offset = "0x16730A8", VA = "0x16730A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FAEC", Offset = "0xB4FAEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public bool roomscale
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x16730B0", Offset = "0x16730B0", VA = "0x16730B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FAFC", Offset = "0xB4FAFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x16730B8", Offset = "0x16730B8", VA = "0x16730B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FB0C", Offset = "0xB4FB0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public static ChaperoneInfo instance
		{
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x1673160", Offset = "0x1673160", VA = "0x1673160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x16730C4", Offset = "0x16730C4", VA = "0x16730C4")]
		public static SteamVR_Events.Action InitializedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1673320", Offset = "0x1673320", VA = "0x1673320")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4FB1C", Offset = "0xB4FB1C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x16733BC", Offset = "0x16733BC", VA = "0x16733BC")]
		public ChaperoneInfo()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class IgnoreTeleportTrace : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x114F510", Offset = "0x114F510", VA = "0x114F510")]
		public IgnoreTeleportTrace()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class Teleport : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E10", Offset = "0xB36E10")]
		private sealed class <TeleportHintCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleport <>4__this;

			[Token(Token = "0x4003247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <prevBreakTime>5__2;

			[Token(Token = "0x4003248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <prevHapticPulseTime>5__3;

			[Token(Token = "0x4003249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <pulsed>5__4;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038B7")]
				[Address(RVA = "0xF54930", Offset = "0xF54930", VA = "0xF54930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038B9")]
				[Address(RVA = "0xF54998", Offset = "0xF54998", VA = "0xF54998", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038B4")]
			[Address(RVA = "0xF54690", Offset = "0xF54690", VA = "0xF54690")]
			[DebuggerHidden]
			public <TeleportHintCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x60038B5")]
			[Address(RVA = "0xF546BC", Offset = "0xF546BC", VA = "0xF546BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038B6")]
			[Address(RVA = "0xF546C0", Offset = "0xF546C0", VA = "0xF546C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038B8")]
			[Address(RVA = "0xF54938", Offset = "0xF54938", VA = "0xF54938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask traceLayerMask;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask floorFixupTraceLayerMask;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floorFixupMaximumTraceDistance;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material areaVisibleMaterial;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material areaLockedMaterial;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material areaHighlightedMaterial;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material pointVisibleMaterial;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material pointLockedMaterial;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointHighlightedMaterial;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destinationReticleTransform;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform invalidReticleTransform;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject playAreaPreviewCorner;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject playAreaPreviewSide;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color pointerValidColor;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color pointerInvalidColor;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pointerLockedColor;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showPlayAreaMarker;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float teleportFadeTime;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float meshFadeTime;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float arcDistance;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3FBC0", Offset = "0xB3FBC0")]
		public Transform onActivateObjectTransform;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform onDeactivateObjectTransform;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float activateObjectTime;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float deactivateObjectTime;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3FBF8", Offset = "0xB3FBF8")]
		public AudioSource pointerAudioSource;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource loopingAudioSource;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource headAudioSource;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource reticleAudioSource;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3FC30", Offset = "0xB3FC30")]
		public AudioClip teleportSound;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip pointerStartSound;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip pointerLoopSound;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip pointerStopSound;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip goodHighlightSound;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip badHighlightSound;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3FC68", Offset = "0xB3FC68")]
		public bool debugFloor;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool showOffsetReticle;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform offsetReticleTransform;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MeshRenderer floorDebugSphere;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LineRenderer floorDebugLine;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private LineRenderer pointerLineRenderer;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject teleportPointerObject;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform pointerStartTransform;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Hand pointerHand;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Player player;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TeleportArc teleportArc;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool visible;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TeleportMarkerBase[] teleportMarkers;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private TeleportMarkerBase pointedAtTeleportMarker;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TeleportMarkerBase teleportingToMarker;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 pointedAtPosition;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 prevPointedAtPosition;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool teleporting;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float currentFadeTime;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float meshAlphaPercent;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float pointerShowStartTime;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float pointerHideStartTime;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool meshFading;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fullTintAlpha;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float invalidReticleMinScale;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float invalidReticleMaxScale;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float invalidReticleMinScaleDistance;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float invalidReticleMaxScaleDistance;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 invalidReticleScale;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion invalidReticleTargetRotation;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform playAreaPreviewTransform;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform[] playAreaPreviewCorners;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform[] playAreaPreviewSides;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float loopingAudioMaxVolume;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine hintCoroutine;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool originalHoverLockState;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Interactable originalHoveringInteractable;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AllowTeleportWhileAttachedToHand allowTeleportWhileAttached;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 startingFeetOffset;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool movedFeetFarEnough;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private SteamVR_Events.Action chaperoneInfoInitializedAction;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event<float> ChangeScene;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SteamVR_Events.Event<TeleportMarkerBase> Player;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Teleport _instance;

		[Token(Token = "0x170002F3")]
		public static Teleport instance
		{
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x1157884", Offset = "0x1157884", VA = "0x1157884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1157698", Offset = "0x1157698", VA = "0x1157698")]
		public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action)
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x115773C", Offset = "0x115773C", VA = "0x115773C")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x11577E0", Offset = "0x11577E0", VA = "0x11577E0")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x11579AC", Offset = "0x11579AC", VA = "0x11579AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1157B60", Offset = "0x1157B60", VA = "0x1157B60")]
		private void Start()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x11580D4", Offset = "0x11580D4", VA = "0x11580D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1158CF8", Offset = "0x1158CF8", VA = "0x1158CF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1157F94", Offset = "0x1157F94", VA = "0x1157F94")]
		private void CheckForSpawnPoint()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x11591C4", Offset = "0x11591C4", VA = "0x11591C4")]
		public void HideTeleportPointer()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x115924C", Offset = "0x115924C", VA = "0x115924C")]
		private void Update()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1159D48", Offset = "0x1159D48", VA = "0x1159D48")]
		private void UpdatePointer()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x115AC14", Offset = "0x115AC14", VA = "0x115AC14")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x115810C", Offset = "0x115810C", VA = "0x115810C")]
		private void OnChaperoneInfoInitialized()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1157C88", Offset = "0x1157C88", VA = "0x1157C88")]
		private void HidePointer()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1159798", Offset = "0x1159798", VA = "0x1159798")]
		private void ShowPointer(Hand newPointerHand, Hand oldPointerHand)
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x115A850", Offset = "0x115A850", VA = "0x115A850")]
		private void UpdateTeleportColors()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x115B0CC", Offset = "0x115B0CC", VA = "0x115B0CC")]
		private void PlayAudioClip(AudioSource source, AudioClip clip)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x115B1C4", Offset = "0x115B1C4", VA = "0x115B1C4")]
		private void PlayPointerHaptic(bool validLocation)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1159620", Offset = "0x1159620", VA = "0x1159620")]
		private void TryTeleportPlayer()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x115B200", Offset = "0x115B200", VA = "0x115B200")]
		private void InitiateTeleportFade()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1158D30", Offset = "0x1158D30", VA = "0x1158D30")]
		private void TeleportPlayer()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x115A968", Offset = "0x115A968", VA = "0x115A968")]
		private void HighlightSelected(TeleportMarkerBase hitTeleportMarker)
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x115B530", Offset = "0x115B530", VA = "0x115B530")]
		public void ShowTeleportHint()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x115B45C", Offset = "0x115B45C", VA = "0x115B45C")]
		public void CancelTeleportHint()
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x115B56C", Offset = "0x115B56C", VA = "0x115B56C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4FB80", Offset = "0xB4FB80")]
		private IEnumerator TeleportHintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x115B5DC", Offset = "0x115B5DC", VA = "0x115B5DC")]
		public bool IsEligibleForTeleport(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x115B040", Offset = "0x115B040", VA = "0x115B040")]
		private bool ShouldOverrideHoverLock()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x1159560", Offset = "0x1159560", VA = "0x1159560")]
		private bool WasTeleportButtonReleased(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1159C88", Offset = "0x1159C88", VA = "0x1159C88")]
		private bool IsTeleportButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x11596D8", Offset = "0x11596D8", VA = "0x11596D8")]
		private bool WasTeleportButtonPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x115B108", Offset = "0x115B108", VA = "0x115B108")]
		private Transform GetPointerStartTransform(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x115B788", Offset = "0x115B788", VA = "0x115B788")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class TeleportArc : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FCA0", Offset = "0xB3FCA0")]
		public float arcDuration;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FCD8", Offset = "0xB3FCD8")]
		public float segmentBreak;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB3FD10", Offset = "0xB3FD10")]
		public float arcSpeed;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xF549A0", Offset = "0xF549A0", VA = "0xF549A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xF549C8", Offset = "0xF549C8", VA = "0xF549C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xF54A14", Offset = "0xF54A14", VA = "0xF54A14")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xF54DA0", Offset = "0xF54DA0", VA = "0xF54DA0")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xF54DF4", Offset = "0xF54DF4", VA = "0xF54DF4")]
		public void Show()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xF54E0C", Offset = "0xF54E0C", VA = "0xF54E0C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xF54EC8", Offset = "0xF54EC8", VA = "0xF54EC8")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xF55490", Offset = "0xF55490", VA = "0xF55490")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xF5557C", Offset = "0xF5557C", VA = "0xF5557C")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xF550E0", Offset = "0xF550E0", VA = "0xF550E0")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xF55338", Offset = "0xF55338", VA = "0xF55338")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xF54E44", Offset = "0xF54E44", VA = "0xF54E44")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xF55954", Offset = "0xF55954", VA = "0xF55954")]
		public TeleportArc()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public class TeleportArea : TeleportMarkerBase
	{
		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FD58", Offset = "0xB3FD58")]
		private Bounds <meshBounds>k__BackingField;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer areaMesh;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int tintColorId;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color visibleTintColor;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color highlightedTintColor;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color lockedTintColor;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool highlighted;

		[Token(Token = "0x170002F4")]
		public Bounds meshBounds
		{
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xF5597C", Offset = "0xF5597C", VA = "0xF5597C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FBE4", Offset = "0xB4FBE4")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xF55990", Offset = "0xF55990", VA = "0xF55990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FBF4", Offset = "0xB4FBF4")]
			private set
			{
			}
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xF559A4", Offset = "0xF559A4", VA = "0xF559A4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xF55B30", Offset = "0xF55B30", VA = "0xF55B30")]
		public void Start()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xF55C0C", Offset = "0xF55C0C", VA = "0xF55C0C", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xF55C14", Offset = "0xF55C14", VA = "0xF55C14", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xF55C1C", Offset = "0xF55C1C", VA = "0xF55C1C", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xF55CF8", Offset = "0xF55CF8", VA = "0xF55CF8", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xF55E14", Offset = "0xF55E14", VA = "0xF55E14", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xF55EC8", Offset = "0xF55EC8", VA = "0xF55EC8")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xF55A18", Offset = "0xF55A18", VA = "0xF55A18")]
		private bool CalculateBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xF55DB8", Offset = "0xF55DB8", VA = "0xF55DB8")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xF55F94", Offset = "0xF55F94", VA = "0xF55F94")]
		public TeleportArea()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public abstract class TeleportMarkerBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool locked;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool markerActive;

		[Token(Token = "0x170002F5")]
		public virtual bool showReticle
		{
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xF56000", Offset = "0xF56000", VA = "0xF56000", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xF56008", Offset = "0xF56008", VA = "0xF56008")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xF5601C", Offset = "0xF5601C", VA = "0xF5601C", Slot = "5")]
		public virtual void TeleportPlayer(Vector3 pointedAtPosition)
		{
		}

		[Token(Token = "0x60024E7")]
		public abstract void UpdateVisuals();

		[Token(Token = "0x60024E8")]
		public abstract void Highlight(bool highlight);

		[Token(Token = "0x60024E9")]
		public abstract void SetAlpha(float tintAlpha, float alphaPercent);

		[Token(Token = "0x60024EA")]
		public abstract bool ShouldActivate(Vector3 playerPosition);

		[Token(Token = "0x60024EB")]
		public abstract bool ShouldMovePlayer();

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xF55FF0", Offset = "0xF55FF0", VA = "0xF55FF0")]
		protected TeleportMarkerBase()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class TeleportPoint : TeleportMarkerBase
	{
		[Token(Token = "0x20009E8")]
		public enum TeleportPointType
		{
			[Token(Token = "0x400324B")]
			MoveToLocation,
			[Token(Token = "0x400324C")]
			SwitchToNewScene
		}

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TeleportPointType teleportType;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string switchToScene;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color titleVisibleColor;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color titleHighlightedColor;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color titleLockedColor;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool playerSpawnPoint;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool gotReleventComponents;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer markerMesh;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer switchSceneIcon;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer moveLocationIcon;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer lockedIcon;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer pointIcon;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform lookAtJointTransform;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation animation;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text titleText;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player player;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lookAtPosition;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int tintColorID;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color tintColor;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color titleColor;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float fullTitleAlpha;

		[Token(Token = "0x40024CA")]
		private const string switchSceneAnimation = "switch_scenes_idle";

		[Token(Token = "0x40024CB")]
		private const string moveLocationAnimation = "move_location_idle";

		[Token(Token = "0x40024CC")]
		private const string lockedAnimation = "locked_idle";

		[Token(Token = "0x170002F6")]
		public override bool showReticle
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xF56020", Offset = "0xF56020", VA = "0xF56020", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xF56028", Offset = "0xF56028", VA = "0xF56028")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xF5629C", Offset = "0xF5629C", VA = "0xF5629C")]
		private void Start()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xF562C4", Offset = "0xF562C4", VA = "0xF562C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xF56360", Offset = "0xF56360", VA = "0xF56360", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xF56438", Offset = "0xF56438", VA = "0xF56438", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xF56440", Offset = "0xF56440", VA = "0xF56440", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xF56620", Offset = "0xF56620", VA = "0xF56620", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xF56788", Offset = "0xF56788", VA = "0xF56788", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xF56560", Offset = "0xF56560", VA = "0xF56560")]
		public void SetMeshMaterials(Material material, Color textColor)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xF568A8", Offset = "0xF568A8", VA = "0xF568A8")]
		public void TeleportToScene()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xF56114", Offset = "0xF56114", VA = "0xF56114")]
		public void GetRelevantComponents()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xF56990", Offset = "0xF56990", VA = "0xF56990")]
		public void ReleaseRelevantComponents()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xF569A4", Offset = "0xF569A4", VA = "0xF569A4")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xF56C68", Offset = "0xF56C68", VA = "0xF56C68")]
		public TeleportPoint()
		{
		}
	}
}
namespace Photon
{
	[Token(Token = "0x2000585")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pvCache;

		[Token(Token = "0x170002F7")]
		public PhotonView photonView
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xCFC6F4", Offset = "0xCFC6F4", VA = "0xCFC6F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xCFC784", Offset = "0xCFC784", VA = "0xCFC784")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xCFC78C", Offset = "0xCFC78C", VA = "0xCFC78C", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xCFC790", Offset = "0xCFC790", VA = "0xCFC790", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xCFC794", Offset = "0xCFC794", VA = "0xCFC794", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xCFC798", Offset = "0xCFC798", VA = "0xCFC798", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xCFC79C", Offset = "0xCFC79C", VA = "0xCFC79C", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xCFC7A0", Offset = "0xCFC7A0", VA = "0xCFC7A0", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xCFC7A4", Offset = "0xCFC7A4", VA = "0xCFC7A4", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xCFC7A8", Offset = "0xCFC7A8", VA = "0xCFC7A8", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xCFC7AC", Offset = "0xCFC7AC", VA = "0xCFC7AC", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xCFC7B0", Offset = "0xCFC7B0", VA = "0xCFC7B0", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xCFC7B4", Offset = "0xCFC7B4", VA = "0xCFC7B4", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xCFC7B8", Offset = "0xCFC7B8", VA = "0xCFC7B8", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xCFC7BC", Offset = "0xCFC7BC", VA = "0xCFC7BC", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xCFC7C0", Offset = "0xCFC7C0", VA = "0xCFC7C0", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xCFC7C4", Offset = "0xCFC7C4", VA = "0xCFC7C4", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xCFC7C8", Offset = "0xCFC7C8", VA = "0xCFC7C8", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xCFC7CC", Offset = "0xCFC7CC", VA = "0xCFC7CC", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xCFC7D0", Offset = "0xCFC7D0", VA = "0xCFC7D0", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xCFC7D4", Offset = "0xCFC7D4", VA = "0xCFC7D4", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xCFC7D8", Offset = "0xCFC7D8", VA = "0xCFC7D8", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xCFC7DC", Offset = "0xCFC7DC", VA = "0xCFC7DC", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xCFC7E0", Offset = "0xCFC7E0", VA = "0xCFC7E0", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xCFC7E4", Offset = "0xCFC7E4", VA = "0xCFC7E4", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xCFC7E8", Offset = "0xCFC7E8", VA = "0xCFC7E8", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xCFC7EC", Offset = "0xCFC7EC", VA = "0xCFC7EC", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xCFC7F0", Offset = "0xCFC7F0", VA = "0xCFC7F0", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xCFC7F4", Offset = "0xCFC7F4", VA = "0xCFC7F4", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xCFC7F8", Offset = "0xCFC7F8", VA = "0xCFC7F8", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xCFC7FC", Offset = "0xCFC7FC", VA = "0xCFC7FC", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xCFC800", Offset = "0xCFC800", VA = "0xCFC800")]
		public PunBehaviour()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x2000587")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x20009E9")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x40024D0")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _playerIds;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object _indexes;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<bool> _indexesPool;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotonPlayer _p;

		[Token(Token = "0x170002F8")]
		public int[] PlayerIds
		{
			[Token(Token = "0x600251C")]
			[Address(RVA = "0xE8ACF8", Offset = "0xE8ACF8", VA = "0xE8ACF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xE8AD00", Offset = "0xE8AD00", VA = "0xE8AD00")]
		public void Awake()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xE8B058", Offset = "0xE8B058", VA = "0xE8B058", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xE8B6C4", Offset = "0xE8B6C4", VA = "0xE8B6C4", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xE8B6C8", Offset = "0xE8B6C8", VA = "0xE8B6C8", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xE8B758", Offset = "0xE8B758", VA = "0xE8B758", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xE8B984", Offset = "0xE8B984", VA = "0xE8B984", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xE8BA10", Offset = "0xE8BA10", VA = "0xE8BA10", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xE8BA90", Offset = "0xE8BA90", VA = "0xE8BA90")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xE8AE14", Offset = "0xE8AE14", VA = "0xE8AE14")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xE8B464", Offset = "0xE8B464", VA = "0xE8B464")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xE8B0FC", Offset = "0xE8B0FC", VA = "0xE8B0FC")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xE8B7E8", Offset = "0xE8B7E8", VA = "0xE8B7E8")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xE8BD3C", Offset = "0xE8BD3C", VA = "0xE8BD3C")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x600252A")]
		[Address(RVA = "0xE8BD8C", Offset = "0xE8BD8C", VA = "0xE8BD8C")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000589")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xE8AB3C", Offset = "0xE8AB3C", VA = "0xE8AB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xE8AB94", Offset = "0xE8AB94", VA = "0xE8AB94", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xE8AC44", Offset = "0xE8AC44", VA = "0xE8AC44", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xE8ACF0", Offset = "0xE8ACF0", VA = "0xE8ACF0")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33C60", Offset = "0xB33C60")]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color NormalColor;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color HoverColor;

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xE8BE7C", Offset = "0xE8BE7C", VA = "0xE8BE7C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xE8BED4", Offset = "0xE8BED4", VA = "0xE8BED4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xE8BF04", Offset = "0xE8BF04", VA = "0xE8BF04", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xE8BF34", Offset = "0xE8BF34", VA = "0xE8BF34")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33CC4", Offset = "0xB33CC4")]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xE8BF78", Offset = "0xE8BF78", VA = "0xE8BF78")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xE8C034", Offset = "0xE8C034", VA = "0xE8C034")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xE8C0D8", Offset = "0xE8C0D8", VA = "0xE8C0D8")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xE8C174", Offset = "0xE8C174", VA = "0xE8C174", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xE8C1EC", Offset = "0xE8C1EC", VA = "0xE8C1EC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xE8C260", Offset = "0xE8C260", VA = "0xE8C260")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.Photon.Chat
{
	[Token(Token = "0x200058C")]
	public class ChatChannel
	{
		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FD68", Offset = "0xB3FD68")]
		private bool <IsPrivate>k__BackingField;

		[Token(Token = "0x170002F9")]
		public bool IsPrivate
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0xE865B8", Offset = "0xE865B8", VA = "0xE865B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC14", Offset = "0xB4FC14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600253A")]
			[Address(RVA = "0xE865C0", Offset = "0xE865C0", VA = "0xE865C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC24", Offset = "0xB4FC24")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public int MessageCount
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0xE865CC", Offset = "0xE865CC", VA = "0xE865CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xE8661C", Offset = "0xE8661C", VA = "0xE8661C")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xE866C8", Offset = "0xE866C8", VA = "0xE866C8")]
		public void Add(string sender, object message)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xE86804", Offset = "0xE86804", VA = "0xE86804")]
		public void Add(string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xE86758", Offset = "0xE86758", VA = "0xE86758")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xE86894", Offset = "0xE86894", VA = "0xE86894")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xE86904", Offset = "0xE86904", VA = "0xE86904")]
		public string ToStringMessages()
		{
			return null;
		}
	}
	[Token(Token = "0x200058D")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x40024E6")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FD78", Offset = "0xB3FD78")]
		private string <NameServerAddress>k__BackingField;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FD88", Offset = "0xB3FD88")]
		private string <FrontendAddress>k__BackingField;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string chatRegion;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FD98", Offset = "0xB3FD98")]
		private ChatState <State>k__BackingField;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FDA8", Offset = "0xB3FDA8")]
		private ChatDisconnectCause <DisconnectedCause>k__BackingField;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FDB8", Offset = "0xB3FDB8")]
		private string <AppVersion>k__BackingField;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FDC8", Offset = "0xB3FDC8")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FDD8", Offset = "0xB3FDD8")]
		private AuthenticationValues <AuthValues>k__BackingField;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MessageLimit;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChatPeer chatPeer;

		[Token(Token = "0x40024F5")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didAuthenticate;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FDE8", Offset = "0xB3FDE8")]
		private bool <UseBackgroundWorkerForSending>k__BackingField;

		[Token(Token = "0x170002FB")]
		public string NameServerAddress
		{
			[Token(Token = "0x6002542")]
			[Address(RVA = "0xE86A2C", Offset = "0xE86A2C", VA = "0xE86A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC34", Offset = "0xB4FC34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002543")]
			[Address(RVA = "0xE86A34", Offset = "0xE86A34", VA = "0xE86A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC44", Offset = "0xB4FC44")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public string FrontendAddress
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0xE86A3C", Offset = "0xE86A3C", VA = "0xE86A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC54", Offset = "0xB4FC54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002545")]
			[Address(RVA = "0xE86A44", Offset = "0xE86A44", VA = "0xE86A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC64", Offset = "0xB4FC64")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public string ChatRegion
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0xE86A4C", Offset = "0xE86A4C", VA = "0xE86A4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002547")]
			[Address(RVA = "0xE86A54", Offset = "0xE86A54", VA = "0xE86A54")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public ChatState State
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0xE86A5C", Offset = "0xE86A5C", VA = "0xE86A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC74", Offset = "0xB4FC74")]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xE86A64", Offset = "0xE86A64", VA = "0xE86A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC84", Offset = "0xB4FC84")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0xE86A6C", Offset = "0xE86A6C", VA = "0xE86A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FC94", Offset = "0xB4FC94")]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xE86A74", Offset = "0xE86A74", VA = "0xE86A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FCA4", Offset = "0xB4FCA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public bool CanChat
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0xE86A7C", Offset = "0xE86A7C", VA = "0xE86A7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000301")]
		private bool HasPeer
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xE86AA0", Offset = "0xE86AA0", VA = "0xE86AA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000302")]
		public string AppVersion
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xE86B60", Offset = "0xE86B60", VA = "0xE86B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FCB4", Offset = "0xB4FCB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xE86B68", Offset = "0xE86B68", VA = "0xE86B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FCC4", Offset = "0xB4FCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public string AppId
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xE86B70", Offset = "0xE86B70", VA = "0xE86B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FCD4", Offset = "0xB4FCD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002552")]
			[Address(RVA = "0xE86B78", Offset = "0xE86B78", VA = "0xE86B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FCE4", Offset = "0xB4FCE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0xE86B80", Offset = "0xE86B80", VA = "0xE86B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FCF4", Offset = "0xB4FCF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xE86B88", Offset = "0xE86B88", VA = "0xE86B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FD04", Offset = "0xB4FD04")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public string UserId
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xE86B90", Offset = "0xE86B90", VA = "0xE86B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xE86BA8", Offset = "0xE86BA8", VA = "0xE86BA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0xE86C30", Offset = "0xE86C30", VA = "0xE86C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FD14", Offset = "0xB4FD14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002558")]
			[Address(RVA = "0xE86C38", Offset = "0xE86C38", VA = "0xE86C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FD24", Offset = "0xB4FD24")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6002559")]
			[Address(RVA = "0xE86C44", Offset = "0xE86C44", VA = "0xE86C44")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x600255A")]
			[Address(RVA = "0xE86C60", Offset = "0xE86C60", VA = "0xE86C60")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0xE86DD8", Offset = "0xE86DD8", VA = "0xE86DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6002576")]
			[Address(RVA = "0xE87234", Offset = "0xE87234", VA = "0xE87234")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6002575")]
			[Address(RVA = "0xE8898C", Offset = "0xE8898C", VA = "0xE8898C")]
			set
			{
			}
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xE86AB0", Offset = "0xE86AB0", VA = "0xE86AB0")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xE86DF4", Offset = "0xE86DF4", VA = "0xE86DF4")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xE86F84", Offset = "0xE86F84", VA = "0xE86F84")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xE87370", Offset = "0xE87370", VA = "0xE87370")]
		public void Service()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xE873F4", Offset = "0xE873F4", VA = "0xE873F4")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xE87434", Offset = "0xE87434", VA = "0xE87434")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB4FD34", Offset = "0xB4FD34")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xE8744C", Offset = "0xE8744C", VA = "0xE8744C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xE874A0", Offset = "0xE874A0", VA = "0xE874A0")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xE874B8", Offset = "0xE874B8", VA = "0xE874B8")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xE874C0", Offset = "0xE874C0", VA = "0xE874C0")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xE87774", Offset = "0xE87774", VA = "0xE87774")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xE8797C", Offset = "0xE8797C", VA = "0xE8797C")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xE87C00", Offset = "0xE87C00", VA = "0xE87C00")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xE87988", Offset = "0xE87988", VA = "0xE87988")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xE87C0C", Offset = "0xE87C0C", VA = "0xE87C0C")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xE87C1C", Offset = "0xE87C1C", VA = "0xE87C1C")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xE87EB0", Offset = "0xE87EB0", VA = "0xE87EB0")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xE87C2C", Offset = "0xE87C2C", VA = "0xE87C2C")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xE87EC0", Offset = "0xE87EC0", VA = "0xE87EC0")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xE880A4", Offset = "0xE880A4", VA = "0xE880A4")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xE880B0", Offset = "0xE880B0", VA = "0xE880B0")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xE880B8", Offset = "0xE880B8", VA = "0xE880B8")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xE88454", Offset = "0xE88454", VA = "0xE88454")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xE887F0", Offset = "0xE887F0", VA = "0xE887F0")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xE88864", Offset = "0xE88864", VA = "0xE88864")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xE888EC", Offset = "0xE888EC", VA = "0xE888EC")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xE889A8", Offset = "0xE889A8", VA = "0xE889A8", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xE88A70", Offset = "0xE88A70", VA = "0xE88A70", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xE89524", Offset = "0xE89524", VA = "0xE89524", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xE89CB8", Offset = "0xE89CB8", VA = "0xE89CB8", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xE87670", Offset = "0xE87670", VA = "0xE87670")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xE88D64", Offset = "0xE88D64", VA = "0xE88D64")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xE88AB8", Offset = "0xE88AB8", VA = "0xE88AB8")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xE89150", Offset = "0xE89150", VA = "0xE89150")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xE89394", Offset = "0xE89394", VA = "0xE89394")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xE89724", Offset = "0xE89724", VA = "0xE89724")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xE88FA8", Offset = "0xE88FA8", VA = "0xE88FA8")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xE8A548", Offset = "0xE8A548", VA = "0xE8A548")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xE8A364", Offset = "0xE8A364", VA = "0xE8A364")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200058E")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x40024FB")]
		None,
		[Token(Token = "0x40024FC")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x40024FD")]
		ExceptionOnConnect,
		[Token(Token = "0x40024FE")]
		DisconnectByServer,
		[Token(Token = "0x40024FF")]
		TimeoutDisconnect,
		[Token(Token = "0x4002500")]
		Exception,
		[Token(Token = "0x4002501")]
		InvalidAuthentication,
		[Token(Token = "0x4002502")]
		MaxCcuReached,
		[Token(Token = "0x4002503")]
		InvalidRegion,
		[Token(Token = "0x4002504")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x4002505")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x200058F")]
	public class ChatEventCode
	{
		[Token(Token = "0x4002506")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4002507")]
		public const byte Users = 1;

		[Token(Token = "0x4002508")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4002509")]
		public const byte FriendsList = 3;

		[Token(Token = "0x400250A")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x400250B")]
		public const byte Subscribe = 5;

		[Token(Token = "0x400250C")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xE8A664", Offset = "0xE8A664", VA = "0xE8A664")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class ChatOperationCode
	{
		[Token(Token = "0x400250D")]
		public const byte Authenticate = 230;

		[Token(Token = "0x400250E")]
		public const byte Subscribe = 0;

		[Token(Token = "0x400250F")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x4002510")]
		public const byte Publish = 2;

		[Token(Token = "0x4002511")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x4002512")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4002513")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4002514")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4002515")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xE8A66C", Offset = "0xE8A66C", VA = "0xE8A66C")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4002516")]
		public const byte Channels = 0;

		[Token(Token = "0x4002517")]
		public const byte Channel = 1;

		[Token(Token = "0x4002518")]
		public const byte Messages = 2;

		[Token(Token = "0x4002519")]
		public const byte Message = 3;

		[Token(Token = "0x400251A")]
		public const byte Senders = 4;

		[Token(Token = "0x400251B")]
		public const byte Sender = 5;

		[Token(Token = "0x400251C")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x400251D")]
		public const byte UserId = 225;

		[Token(Token = "0x400251E")]
		public const byte MsgId = 8;

		[Token(Token = "0x400251F")]
		public const byte MsgIds = 9;

		[Token(Token = "0x4002520")]
		public const byte Secret = 221;

		[Token(Token = "0x4002521")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x4002522")]
		public const byte Status = 10;

		[Token(Token = "0x4002523")]
		public const byte Friends = 11;

		[Token(Token = "0x4002524")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x4002525")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x4002526")]
		public const byte WebFlags = 21;

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xE8A674", Offset = "0xE8A674", VA = "0xE8A674")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x4002527")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x4002528")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x1700030A")]
		public string NameServerAddress
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0xE87250", Offset = "0xE87250", VA = "0xE87250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6002588")]
			[Address(RVA = "0xE8A7F4", Offset = "0xE8A7F4", VA = "0xE8A7F4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xE86EFC", Offset = "0xE86EFC", VA = "0xE86EFC")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xE8A818", Offset = "0xE8A818", VA = "0xE8A818")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB4FD6C", Offset = "0xB4FD6C")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xE8A67C", Offset = "0xE8A67C", VA = "0xE8A67C")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xE87254", Offset = "0xE87254", VA = "0xE87254")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xE8A108", Offset = "0xE8A108", VA = "0xE8A108")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000593")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x400252B")]
		Custom = 0,
		[Token(Token = "0x400252C")]
		Steam = 1,
		[Token(Token = "0x400252D")]
		Facebook = 2,
		[Token(Token = "0x400252E")]
		Oculus = 3,
		[Token(Token = "0x400252F")]
		PlayStation = 4,
		[Token(Token = "0x4002530")]
		Xbox = 5,
		[Token(Token = "0x4002531")]
		None = byte.MaxValue
	}
	[Token(Token = "0x2000594")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FDF8", Offset = "0xB3FDF8")]
		private string <AuthGetParameters>k__BackingField;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE08", Offset = "0xB3FE08")]
		private object <AuthPostData>k__BackingField;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE18", Offset = "0xB3FE18")]
		private string <Token>k__BackingField;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE28", Offset = "0xB3FE28")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x1700030C")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0xE86294", Offset = "0xE86294", VA = "0xE86294")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6002590")]
			[Address(RVA = "0xE8629C", Offset = "0xE8629C", VA = "0xE8629C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0xE862A4", Offset = "0xE862A4", VA = "0xE862A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FDA4", Offset = "0xB4FDA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002592")]
			[Address(RVA = "0xE862AC", Offset = "0xE862AC", VA = "0xE862AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FDB4", Offset = "0xB4FDB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public object AuthPostData
		{
			[Token(Token = "0x6002593")]
			[Address(RVA = "0xE862B4", Offset = "0xE862B4", VA = "0xE862B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FDC4", Offset = "0xB4FDC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002594")]
			[Address(RVA = "0xE862BC", Offset = "0xE862BC", VA = "0xE862BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FDD4", Offset = "0xB4FDD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public string Token
		{
			[Token(Token = "0x6002595")]
			[Address(RVA = "0xE862C4", Offset = "0xE862C4", VA = "0xE862C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FDE4", Offset = "0xB4FDE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002596")]
			[Address(RVA = "0xE862CC", Offset = "0xE862CC", VA = "0xE862CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FDF4", Offset = "0xB4FDF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public string UserId
		{
			[Token(Token = "0x6002597")]
			[Address(RVA = "0xE862D4", Offset = "0xE862D4", VA = "0xE862D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE04", Offset = "0xB4FE04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002598")]
			[Address(RVA = "0xE862DC", Offset = "0xE862DC", VA = "0xE862DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE14", Offset = "0xB4FE14")]
			set
			{
			}
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xE862E4", Offset = "0xE862E4", VA = "0xE862E4")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xE862F4", Offset = "0xE862F4", VA = "0xE862F4")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xE86328", Offset = "0xE86328", VA = "0xE86328", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xE86368", Offset = "0xE86368", VA = "0xE86368", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xE86370", Offset = "0xE86370", VA = "0xE86370", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xE86524", Offset = "0xE86524", VA = "0xE86524", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000595")]
	public class ParameterCode
	{
		[Token(Token = "0x4002537")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4002538")]
		public const byte Secret = 221;

		[Token(Token = "0x4002539")]
		public const byte AppVersion = 220;

		[Token(Token = "0x400253A")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x400253B")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x400253C")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x400253D")]
		public const byte Region = 210;

		[Token(Token = "0x400253E")]
		public const byte Address = 230;

		[Token(Token = "0x400253F")]
		public const byte UserId = 225;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xE8AB34", Offset = "0xE8AB34", VA = "0xE8AB34")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class ErrorCode
	{
		[Token(Token = "0x4002540")]
		public const int Ok = 0;

		[Token(Token = "0x4002541")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4002542")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4002543")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4002544")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4002545")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4002546")]
		public const int GameFull = 32765;

		[Token(Token = "0x4002547")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4002548")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4002549")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x400254A")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x400254B")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x400254C")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x400254D")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x400254E")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xE8AB2C", Offset = "0xE8AB2C", VA = "0xE8AB2C")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public enum ChatState
	{
		[Token(Token = "0x4002550")]
		Uninitialized,
		[Token(Token = "0x4002551")]
		ConnectingToNameServer,
		[Token(Token = "0x4002552")]
		ConnectedToNameServer,
		[Token(Token = "0x4002553")]
		Authenticating,
		[Token(Token = "0x4002554")]
		Authenticated,
		[Token(Token = "0x4002555")]
		DisconnectingFromNameServer,
		[Token(Token = "0x4002556")]
		ConnectingToFrontEnd,
		[Token(Token = "0x4002557")]
		ConnectedToFrontEnd,
		[Token(Token = "0x4002558")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x4002559")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x400255A")]
		Disconnecting,
		[Token(Token = "0x400255B")]
		Disconnected
	}
	[Token(Token = "0x2000598")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x400255C")]
		public const int Offline = 0;

		[Token(Token = "0x400255D")]
		public const int Invisible = 1;

		[Token(Token = "0x400255E")]
		public const int Online = 2;

		[Token(Token = "0x400255F")]
		public const int Away = 3;

		[Token(Token = "0x4002560")]
		public const int DND = 4;

		[Token(Token = "0x4002561")]
		public const int LFG = 5;

		[Token(Token = "0x4002562")]
		public const int Playing = 6;
	}
	[Token(Token = "0x2000599")]
	public interface IChatClientListener
	{
		[Token(Token = "0x60025A1")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x60025A2")]
		void OnDisconnected();

		[Token(Token = "0x60025A3")]
		void OnConnected();

		[Token(Token = "0x60025A4")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x60025A5")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x60025A6")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x60025A7")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x60025A8")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x60025A9")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x200059A")]
	public class TimeKeeper
	{
		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE38", Offset = "0xB3FE38")]
		private int <Interval>k__BackingField;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE48", Offset = "0xB3FE48")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x17000311")]
		public int Interval
		{
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xE85F9C", Offset = "0xE85F9C", VA = "0xE85F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE24", Offset = "0xB4FE24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xE85FA4", Offset = "0xE85FA4", VA = "0xE85FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE34", Offset = "0xB4FE34")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public bool IsEnabled
		{
			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xE85FAC", Offset = "0xE85FAC", VA = "0xE85FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE44", Offset = "0xB4FE44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xE85FB4", Offset = "0xE85FB4", VA = "0xE85FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE54", Offset = "0xB4FE54")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public bool ShouldExecute
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xE85FC0", Offset = "0xE85FC0", VA = "0xE85FC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xE86018", Offset = "0xE86018", VA = "0xE86018")]
			set
			{
			}
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xE86024", Offset = "0xE86024", VA = "0xE86024")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xE86068", Offset = "0xE86068", VA = "0xE86068")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x200059B")]
	public enum GizmoType
	{
		[Token(Token = "0x4002568")]
		WireSphere,
		[Token(Token = "0x4002569")]
		Sphere,
		[Token(Token = "0x400256A")]
		WireCube,
		[Token(Token = "0x400256B")]
		Cube
	}
	[Token(Token = "0x200059C")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xE86094", Offset = "0xE86094", VA = "0xE86094")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xE8628C", Offset = "0xE8628C", VA = "0xE8628C")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace PS4Bridge
{
	[Token(Token = "0x200059D")]
	public class Ps4AlternatePagination : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Pagination _standardPagination;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Pagination _ps4Pagination;

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xF1B7E0", Offset = "0xF1B7E0", VA = "0xF1B7E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xF1B824", Offset = "0xF1B824", VA = "0xF1B824")]
		public Ps4AlternatePagination()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class Ps4Blackout : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _spawnPosition;

		[Token(Token = "0x400256F")]
		private const string _RESOURCE_NAME = "BlackoutAreaPS4";

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Ps4Blackout _instance;

		[Token(Token = "0x17000314")]
		private static Ps4Blackout Instance
		{
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0xF1B82C", Offset = "0xF1B82C", VA = "0xF1B82C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xF1B9D4", Offset = "0xF1B9D4", VA = "0xF1B9D4")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xF1BA08", Offset = "0xF1BA08", VA = "0xF1BA08")]
		public static void Show()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xF1BAA0", Offset = "0xF1BAA0", VA = "0xF1BAA0")]
		public static void Hide()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xF1BB38", Offset = "0xF1BB38", VA = "0xF1BB38")]
		public Ps4Blackout()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class Ps4ReprojectionRemover : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _spawnPosition;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRPostReprojection _postReprojection;

		[Token(Token = "0x4002573")]
		private const string _RESOURCE_NAME = "PostReprojectionClearPS4";

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Ps4ReprojectionRemover _instance;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _tickCount;

		[Token(Token = "0x4002576")]
		private const int _TICK_MAX = 8;

		[Token(Token = "0x17000315")]
		private static Ps4ReprojectionRemover Instance
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0xF1BB40", Offset = "0xF1BB40", VA = "0xF1BB40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xF1BCDC", Offset = "0xF1BCDC", VA = "0xF1BCDC")]
		private void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xF1BD14", Offset = "0xF1BD14", VA = "0xF1BD14")]
		public static void Show()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xF1BDB8", Offset = "0xF1BDB8", VA = "0xF1BDB8")]
		public static void Hide()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xF1BE50", Offset = "0xF1BE50", VA = "0xF1BE50")]
		private void Update()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xF1BEA0", Offset = "0xF1BEA0", VA = "0xF1BEA0")]
		public Ps4ReprojectionRemover()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class Ps4TextReplacement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _textToReplace;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _replaceWith;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _changeSize;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _changeSizeTo;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _changeFont;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_FontAsset _changeFontTo;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizeTextMeshPro _tagToReplace;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _useTag;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool _useAutoSize;

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xF1BEA8", Offset = "0xF1BEA8", VA = "0xF1BEA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xF1BEAC", Offset = "0xF1BEAC", VA = "0xF1BEAC")]
		public Ps4TextReplacement()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class Ps4Tracking : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20009EA")]
		public class TrackedDevice
		{
			[Token(Token = "0x400324D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x400324E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x400324F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion orientation;

			[Token(Token = "0x4003250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 velocity;

			[Token(Token = "0x4003251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4003252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color color;

			[Token(Token = "0x60038BE")]
			[Address(RVA = "0xF1C550", Offset = "0xF1C550", VA = "0xF1C550")]
			public bool Valid()
			{
				return default(bool);
			}

			[Token(Token = "0x60038BF")]
			[Address(RVA = "0xF1C598", Offset = "0xF1C598", VA = "0xF1C598")]
			public void ResetInfo()
			{
			}

			[Token(Token = "0x60038C0")]
			[Address(RVA = "0xF1C440", Offset = "0xF1C440", VA = "0xF1C440")]
			public void UpdateInfo()
			{
			}

			[Token(Token = "0x60038C1")]
			[Address(RVA = "0xF1C468", Offset = "0xF1C468", VA = "0xF1C468")]
			public void Untrack()
			{
			}

			[Token(Token = "0x60038C2")]
			[Address(RVA = "0xF1C668", Offset = "0xF1C668", VA = "0xF1C668")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x4002580")]
		private const string _NONE_DEVICE = "None";

		[Token(Token = "0x4002581")]
		private const string _PSVR_DEVICE = "PlayStationVR";

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onTrackingReset;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _subscribed;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackedDevice deviceAim;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedDevice deviceMovePrimary;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TrackedDevice deviceHmd;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Ps4Tracking _instance;

		[Token(Token = "0x17000316")]
		public bool TrackFromFloor
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0xF1BEB4", Offset = "0xF1BEB4", VA = "0xF1BEB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000317")]
		public static Ps4Tracking Instance
		{
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0xF1BF58", Offset = "0xF1BF58", VA = "0xF1BF58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xF1BFA8", Offset = "0xF1BFA8", VA = "0xF1BFA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xF1C03C", Offset = "0xF1C03C", VA = "0xF1C03C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xF1C06C", Offset = "0xF1C06C", VA = "0xF1C06C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xF1C14C", Offset = "0xF1C14C", VA = "0xF1C14C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xF1C15C", Offset = "0xF1C15C", VA = "0xF1C15C")]
		private void Update()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xF1C2FC", Offset = "0xF1C2FC", VA = "0xF1C2FC")]
		public float GetHeightOffset()
		{
			return default(float);
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xF1C370", Offset = "0xF1C370", VA = "0xF1C370")]
		public Vector3 GetHeightOffsetVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xF1C054", Offset = "0xF1C054", VA = "0xF1C054")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xF1C07C", Offset = "0xF1C07C", VA = "0xF1C07C")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xF1C244", Offset = "0xF1C244", VA = "0xF1C244")]
		private void UpdateTracking()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xF1C444", Offset = "0xF1C444", VA = "0xF1C444")]
		public void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xF1C08C", Offset = "0xF1C08C", VA = "0xF1C08C")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xF1C18C", Offset = "0xF1C18C", VA = "0xF1C18C")]
		private void UpdateRegistration()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xF1C480", Offset = "0xF1C480", VA = "0xF1C480")]
		private void HmdConnection(bool forceReload = false)
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xF1C498", Offset = "0xF1C498", VA = "0xF1C498")]
		private void MoveConnection()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xF1C4F8", Offset = "0xF1C4F8", VA = "0xF1C4F8")]
		private void DualShockConnection()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xF1C524", Offset = "0xF1C524", VA = "0xF1C524")]
		private void AimConnection()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xF1C560", Offset = "0xF1C560", VA = "0xF1C560")]
		public bool IsMoveConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xF1C570", Offset = "0xF1C570", VA = "0xF1C570")]
		public bool IsDualShockConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xF1C580", Offset = "0xF1C580", VA = "0xF1C580")]
		public bool IsAimConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xF1C568", Offset = "0xF1C568", VA = "0xF1C568")]
		private bool RegisterMove()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xF1C578", Offset = "0xF1C578", VA = "0xF1C578")]
		private bool RegisterDualShock()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xF1C588", Offset = "0xF1C588", VA = "0xF1C588")]
		private bool RegisterAim()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xF1C590", Offset = "0xF1C590", VA = "0xF1C590")]
		public Ps4Tracking()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public static class PsvrHmdSetup
	{
		[Token(Token = "0x20009EB")]
		public delegate void AsyncDelegate(Status status, Result result);

		[Token(Token = "0x20009EC")]
		public enum Status
		{
			[Token(Token = "0x4003254")]
			None,
			[Token(Token = "0x4003255")]
			Initialized,
			[Token(Token = "0x4003256")]
			Running,
			[Token(Token = "0x4003257")]
			Finished
		}

		[Token(Token = "0x20009ED")]
		public enum Result
		{
			[Token(Token = "0x4003259")]
			OK = 0,
			[Token(Token = "0x400325A")]
			UserCanceled = 1,
			[Token(Token = "0x400325B")]
			SocialScreenNoConflict = 10
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xF1C748", Offset = "0xF1C748", VA = "0xF1C748")]
		public static int Close()
		{
			return default(int);
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xF1C750", Offset = "0xF1C750", VA = "0xF1C750")]
		public static int GetResult()
		{
			return default(int);
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xF1C758", Offset = "0xF1C758", VA = "0xF1C758")]
		public static int Open(int userId)
		{
			return default(int);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xF1C760", Offset = "0xF1C760", VA = "0xF1C760")]
		public static int Open(int userId, bool disableHandoverScreen)
		{
			return default(int);
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xF1C768", Offset = "0xF1C768", VA = "0xF1C768")]
		public static int OpenAsync(int userId, AsyncDelegate callback)
		{
			return default(int);
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xF1CA20", Offset = "0xF1CA20", VA = "0xF1CA20")]
		public static int OpenAsync(int userId, bool disableHandoverScreen, AsyncDelegate callback)
		{
			return default(int);
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xF1CA48", Offset = "0xF1CA48", VA = "0xF1CA48")]
		public static int Terminate()
		{
			return default(int);
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xF1CA50", Offset = "0xF1CA50", VA = "0xF1CA50")]
		public static Status Update()
		{
			return default(Status);
		}
	}
	[Token(Token = "0x20005A3")]
	public class SonyCommonDialog : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isInit;

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xF1CB1C", Offset = "0xF1CB1C", VA = "0xF1CB1C")]
		public static bool IsDialogOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xF1CB24", Offset = "0xF1CB24", VA = "0xF1CB24")]
		public static void ShowChatRestriction()
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xF1CB28", Offset = "0xF1CB28", VA = "0xF1CB28")]
		public static void ShowNamePrivacyRestriction()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xF1CB2C", Offset = "0xF1CB2C", VA = "0xF1CB2C")]
		public static void ShowUcgRestriction()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xF1CB30", Offset = "0xF1CB30", VA = "0xF1CB30")]
		public static void ShowEmptyStore()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xF1CB34", Offset = "0xF1CB34", VA = "0xF1CB34")]
		public static void ShowCameraNotConnected()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xF1CB38", Offset = "0xF1CB38", VA = "0xF1CB38")]
		public static bool ShowError(string name, uint errorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xF1CB40", Offset = "0xF1CB40", VA = "0xF1CB40")]
		public SonyCommonDialog()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class VRPostReprojection : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader textureArrayBlitShader;

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xF1CB48", Offset = "0xF1CB48", VA = "0xF1CB48")]
		public VRPostReprojection()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20005A5")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000318")]
		public bool Highlight
		{
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0xF2D518", Offset = "0xF2D518", VA = "0xF2D518")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xF2D520", Offset = "0xF2D520", VA = "0xF2D520")]
			set
			{
			}
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xF2D52C", Offset = "0xF2D52C", VA = "0xF2D52C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xF2D6F8", Offset = "0xF2D6F8", VA = "0xF2D6F8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xF2D720", Offset = "0xF2D720", VA = "0xF2D720", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xF2D748", Offset = "0xF2D748", VA = "0xF2D748")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xF2D5F8", Offset = "0xF2D5F8", VA = "0xF2D5F8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xF2D99C", Offset = "0xF2D99C", VA = "0xF2D99C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000319")]
		public bool InRange
		{
			[Token(Token = "0x60025F7")]
			[Address(RVA = "0xF2E104", Offset = "0xF2E104", VA = "0xF2E104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025F8")]
			[Address(RVA = "0xF2E10C", Offset = "0xF2E10C", VA = "0xF2E10C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public bool Targeted
		{
			[Token(Token = "0x60025F9")]
			[Address(RVA = "0xF2E288", Offset = "0xF2E288", VA = "0xF2E288")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025FA")]
			[Address(RVA = "0xF2E290", Offset = "0xF2E290", VA = "0xF2E290")]
			set
			{
			}
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xF2E29C", Offset = "0xF2E29C", VA = "0xF2E29C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xF2E118", Offset = "0xF2E118", VA = "0xF2E118")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xF2E43C", Offset = "0xF2E43C", VA = "0xF2E43C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33D28", Offset = "0xB33D28")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700031B")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60025FE")]
			[Address(RVA = "0xF2E444", Offset = "0xF2E444", VA = "0xF2E444")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025FF")]
			[Address(RVA = "0xF2E44C", Offset = "0xF2E44C", VA = "0xF2E44C")]
			set
			{
			}
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xF2E468", Offset = "0xF2E468", VA = "0xF2E468", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xF2E670", Offset = "0xF2E670", VA = "0xF2E670", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xF2EF8C", Offset = "0xF2EF8C", VA = "0xF2EF8C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xF2F548", Offset = "0xF2F548", VA = "0xF2F548", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xF2F928", Offset = "0xF2F928", VA = "0xF2F928")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xF2E8BC", Offset = "0xF2E8BC", VA = "0xF2E8BC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xF2FA04", Offset = "0xF2FA04", VA = "0xF2FA04")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xF2FE40", Offset = "0xF2FE40", VA = "0xF2FE40", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xF2FE58", Offset = "0xF2FE58", VA = "0xF2FE58", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xF2FE60", Offset = "0xF2FE60", VA = "0xF2FE60")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class GrabManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xF319B0", Offset = "0xF319B0", VA = "0xF319B0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xF31A60", Offset = "0xF31A60", VA = "0xF31A60")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xF31B0C", Offset = "0xF31B0C", VA = "0xF31B0C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class GrabbableCrosshair : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009EE")]
		public enum CrosshairState
		{
			[Token(Token = "0x400325D")]
			Disabled,
			[Token(Token = "0x400325E")]
			Enabled,
			[Token(Token = "0x400325F")]
			Targeted
		}

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xF31B14", Offset = "0xF31B14", VA = "0xF31B14")]
		private void Start()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xF2E3A0", Offset = "0xF2E3A0", VA = "0xF2E3A0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xF31B7C", Offset = "0xF31B7C", VA = "0xF31B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xF31BC4", Offset = "0xF31BC4", VA = "0xF31BC4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class PauseOnInputLoss : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002611")]
		[Address(RVA = "0xF369C8", Offset = "0xF369C8", VA = "0xF369C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xF36A94", Offset = "0xF36A94", VA = "0xF36A94")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xF36AA0", Offset = "0xF36AA0", VA = "0xF36AA0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xF36AAC", Offset = "0xF36AAC", VA = "0xF36AAC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class BoneCapsuleTriggerLogic : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xF2C1A4", Offset = "0xF2C1A4", VA = "0xF2C1A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xF2C1FC", Offset = "0xF2C1FC", VA = "0xF2C1FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xF2C4A0", Offset = "0xF2C4A0", VA = "0xF2C4A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xF2C590", Offset = "0xF2C590", VA = "0xF2C590")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xF2C200", Offset = "0xF2C200", VA = "0xF2C200")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xF2C680", Offset = "0xF2C680", VA = "0xF2C680")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20009EF")]
		public enum ContactTest
		{
			[Token(Token = "0x4003261")]
			PerpenTest,
			[Token(Token = "0x4003262")]
			BackwardsPress
		}

		[Token(Token = "0x40025B0")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40025B1")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700031C")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600261B")]
			[Address(RVA = "0xF2C718", Offset = "0xF2C718", VA = "0xF2C718", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031D")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0xF2C720", Offset = "0xF2C720", VA = "0xF2C720")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xF2C72C", Offset = "0xF2C72C", VA = "0xF2C72C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xF2C87C", Offset = "0xF2C87C", VA = "0xF2C87C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xF2CA84", Offset = "0xF2CA84", VA = "0xF2CA84", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xF2CFC8", Offset = "0xF2CFC8", VA = "0xF2CFC8")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xF2CEE0", Offset = "0xF2CEE0", VA = "0xF2CEE0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xF2D118", Offset = "0xF2D118", VA = "0xF2D118")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xF2D20C", Offset = "0xF2D20C", VA = "0xF2D20C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xF2D338", Offset = "0xF2D338", VA = "0xF2D338")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class ButtonTriggerZone : UnityEngine.MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40068", Offset = "0xB40068")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40078", Offset = "0xB40078")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700031E")]
		public Collider Collider
		{
			[Token(Token = "0x6002625")]
			[Address(RVA = "0xF2D424", Offset = "0xF2D424", VA = "0xF2D424", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE64", Offset = "0xB4FE64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002626")]
			[Address(RVA = "0xF2D42C", Offset = "0xF2D42C", VA = "0xF2D42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE74", Offset = "0xB4FE74")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6002627")]
			[Address(RVA = "0xF2D434", Offset = "0xF2D434", VA = "0xF2D434", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE84", Offset = "0xB4FE84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002628")]
			[Address(RVA = "0xF2D43C", Offset = "0xF2D43C", VA = "0xF2D43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FE94", Offset = "0xB4FE94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002629")]
			[Address(RVA = "0xF2D444", Offset = "0xF2D444", VA = "0xF2D444", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xF2D494", Offset = "0xF2D494", VA = "0xF2D494")]
		private void Awake()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xF2D510", Offset = "0xF2D510", VA = "0xF2D510")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000321")]
		Collider Collider
		{
			[Token(Token = "0x600262C")]
			get;
		}

		[Token(Token = "0x17000322")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600262D")]
			get;
		}

		[Token(Token = "0x17000323")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600262E")]
			get;
		}
	}
	[Token(Token = "0x20005AF")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xF2C9E0", Offset = "0xF2C9E0", VA = "0xF2C9E0")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public enum InteractionType
	{
		[Token(Token = "0x40025C5")]
		Enter,
		[Token(Token = "0x40025C6")]
		Stay,
		[Token(Token = "0x40025C7")]
		Exit
	}
	[Token(Token = "0x20005B1")]
	public class HandsManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009F0")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4003264")]
			Mesh,
			[Token(Token = "0x4003265")]
			Skeleton,
			[Token(Token = "0x4003266")]
			Both
		}

		[Token(Token = "0x20009F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E20", Offset = "0xB36E20")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038CA")]
				[Address(RVA = "0xF32AB8", Offset = "0xF32AB8", VA = "0xF32AB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038CC")]
				[Address(RVA = "0xF32B20", Offset = "0xF32B20", VA = "0xF32B20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038C7")]
			[Address(RVA = "0xF325AC", Offset = "0xF325AC", VA = "0xF325AC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60038C8")]
			[Address(RVA = "0xF32898", Offset = "0xF32898", VA = "0xF32898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038C9")]
			[Address(RVA = "0xF3289C", Offset = "0xF3289C", VA = "0xF3289C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038CB")]
			[Address(RVA = "0xF32AC0", Offset = "0xF32AC0", VA = "0xF32AC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025C8")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB400A8", Offset = "0xB400A8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000324")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6002630")]
			[Address(RVA = "0xF30AB4", Offset = "0xF30AB4", VA = "0xF30AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002631")]
			[Address(RVA = "0xF31BCC", Offset = "0xF31BCC", VA = "0xF31BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6002632")]
			[Address(RVA = "0xF31634", Offset = "0xF31634", VA = "0xF31634")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002633")]
			[Address(RVA = "0xF31C34", Offset = "0xF31C34", VA = "0xF31C34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6002634")]
			[Address(RVA = "0xF31C9C", Offset = "0xF31C9C", VA = "0xF31C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002635")]
			[Address(RVA = "0xF31CD4", Offset = "0xF31CD4", VA = "0xF31CD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6002636")]
			[Address(RVA = "0xF31D3C", Offset = "0xF31D3C", VA = "0xF31D3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002637")]
			[Address(RVA = "0xF31D74", Offset = "0xF31D74", VA = "0xF31D74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6002638")]
			[Address(RVA = "0xF31DDC", Offset = "0xF31DDC", VA = "0xF31DDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002639")]
			[Address(RVA = "0xF31E14", Offset = "0xF31E14", VA = "0xF31E14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0xF30A80", Offset = "0xF30A80", VA = "0xF30A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xF31E7C", Offset = "0xF31E7C", VA = "0xF31E7C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xF31600", Offset = "0xF31600", VA = "0xF31600")]
			get
			{
				return null;
			}
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xF31EE0", Offset = "0xF31EE0", VA = "0xF31EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0xF31F44", Offset = "0xF31F44", VA = "0xF31F44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xF31F78", Offset = "0xF31F78", VA = "0xF31F78")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6002640")]
			[Address(RVA = "0xF31FDC", Offset = "0xF31FDC", VA = "0xF31FDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002641")]
			[Address(RVA = "0xF32010", Offset = "0xF32010", VA = "0xF32010")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xF32074", Offset = "0xF32074", VA = "0xF32074")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xF320A8", Offset = "0xF320A8", VA = "0xF320A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xF3210C", Offset = "0xF3210C", VA = "0xF3210C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FEA4", Offset = "0xB4FEA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xF3215C", Offset = "0xF3215C", VA = "0xF3215C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FEB4", Offset = "0xB4FEB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xF321B0", Offset = "0xF321B0", VA = "0xF321B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xF32524", Offset = "0xF32524", VA = "0xF32524")]
		private void Update()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xF324B4", Offset = "0xF324B4", VA = "0xF324B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4FEC4", Offset = "0xB4FEC4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xF2DF58", Offset = "0xF2DF58", VA = "0xF2DF58")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xF325D8", Offset = "0xF325D8", VA = "0xF325D8")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xF3166C", Offset = "0xF3166C", VA = "0xF3166C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xF308F0", Offset = "0xF308F0", VA = "0xF308F0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xF327B8", Offset = "0xF327B8", VA = "0xF327B8")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	public abstract class Interactable : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20009F2")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60038CD")]
			[Address(RVA = "0xF33270", Offset = "0xF33270", VA = "0xF33270")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700032F")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600264E")]
			[Address(RVA = "0xF32B28", Offset = "0xF32B28", VA = "0xF32B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0xF32B30", Offset = "0xF32B30", VA = "0xF32B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6002650")]
			[Address(RVA = "0xF32B38", Offset = "0xF32B38", VA = "0xF32B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6002651")]
			[Address(RVA = "0xF32B40", Offset = "0xF32B40", VA = "0xF32B40", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x140000B7")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6002652")]
			[Address(RVA = "0xF32B48", Offset = "0xF32B48", VA = "0xF32B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FF28", Offset = "0xB4FF28")]
			add
			{
			}
			[Token(Token = "0x6002653")]
			[Address(RVA = "0xF32BEC", Offset = "0xF32BEC", VA = "0xF32BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FF38", Offset = "0xB4FF38")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B8")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6002655")]
			[Address(RVA = "0xF32D04", Offset = "0xF32D04", VA = "0xF32D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FF48", Offset = "0xB4FF48")]
			add
			{
			}
			[Token(Token = "0x6002656")]
			[Address(RVA = "0xF32DA8", Offset = "0xF32DA8", VA = "0xF32DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FF58", Offset = "0xB4FF58")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B9")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0xF32EC0", Offset = "0xF32EC0", VA = "0xF32EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FF68", Offset = "0xB4FF68")]
			add
			{
			}
			[Token(Token = "0x6002659")]
			[Address(RVA = "0xF32F64", Offset = "0xF32F64", VA = "0xF32F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4FF78", Offset = "0xB4FF78")]
			remove
			{
			}
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xF32C90", Offset = "0xF32C90", VA = "0xF32C90", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xF32E4C", Offset = "0xF32E4C", VA = "0xF32E4C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xF33008", Offset = "0xF33008", VA = "0xF33008", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600265B")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xF2C818", Offset = "0xF2C818", VA = "0xF2C818", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xF33144", Offset = "0xF33144", VA = "0xF33144", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xF2D41C", Offset = "0xF2D41C", VA = "0xF2D41C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40025E0")]
		None,
		[Token(Token = "0x40025E1")]
		Proximity,
		[Token(Token = "0x40025E2")]
		Contact,
		[Token(Token = "0x40025E3")]
		Action
	}
	[Token(Token = "0x20005B4")]
	public enum InteractableState
	{
		[Token(Token = "0x40025E5")]
		Default,
		[Token(Token = "0x40025E6")]
		ProximityState,
		[Token(Token = "0x40025E7")]
		ContactState,
		[Token(Token = "0x40025E8")]
		ActionState
	}
	[Token(Token = "0x20005B5")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xF2D074", Offset = "0xF2D074", VA = "0xF2D074")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class InteractableRegistry : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000333")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6002660")]
			[Address(RVA = "0xF332C0", Offset = "0xF332C0", VA = "0xF332C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xF3307C", Offset = "0xF3307C", VA = "0xF3307C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xF331A8", Offset = "0xF331A8", VA = "0xF331A8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xF33328", Offset = "0xF33328", VA = "0xF33328")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class InteractableToolsCreator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E30", Offset = "0xB36E30")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400326A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400326B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400326C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x400326D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x400326E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x400326F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4003270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4003271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4003272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700057D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038D2")]
				[Address(RVA = "0xF34368", Offset = "0xF34368", VA = "0xF34368", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038D4")]
				[Address(RVA = "0xF343D0", Offset = "0xF343D0", VA = "0xF343D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038CE")]
			[Address(RVA = "0xF33E2C", Offset = "0xF33E2C", VA = "0xF33E2C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60038CF")]
			[Address(RVA = "0xF33F58", Offset = "0xF33F58", VA = "0xF33F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038D0")]
			[Address(RVA = "0xF33FCC", Offset = "0xF33FCC", VA = "0xF33FCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038D1")]
			[Address(RVA = "0xF33F74", Offset = "0xF33F74", VA = "0xF33F74")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60038D3")]
			[Address(RVA = "0xF34370", Offset = "0xF34370", VA = "0xF34370", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xF33D24", Offset = "0xF33D24", VA = "0xF33D24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xF33DA0", Offset = "0xF33DA0", VA = "0xF33DA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4FF88", Offset = "0xB4FF88")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xF33E58", Offset = "0xF33E58", VA = "0xF33E58")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xF33F50", Offset = "0xF33F50", VA = "0xF33F50")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class InteractableToolsInputRouter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000334")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6002669")]
			[Address(RVA = "0xF3032C", Offset = "0xF3032C", VA = "0xF3032C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xF30494", Offset = "0xF30494", VA = "0xF30494")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xF343D8", Offset = "0xF343D8", VA = "0xF343D8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xF34484", Offset = "0xF34484", VA = "0xF34484")]
		private void Update()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xF3474C", Offset = "0xF3474C", VA = "0xF3474C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xF34794", Offset = "0xF34794", VA = "0xF34794")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xF349E4", Offset = "0xF349E4", VA = "0xF349E4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xF34B10", Offset = "0xF34B10", VA = "0xF34B10")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20009F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E40", Offset = "0xB36E40")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700057F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038D8")]
				[Address(RVA = "0xF3187C", Offset = "0xF3187C", VA = "0xF3187C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038DA")]
				[Address(RVA = "0xF318E4", Offset = "0xF318E4", VA = "0xF318E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038D5")]
			[Address(RVA = "0xF305B0", Offset = "0xF305B0", VA = "0xF305B0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60038D6")]
			[Address(RVA = "0xF31298", Offset = "0xF31298", VA = "0xF31298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038D7")]
			[Address(RVA = "0xF3129C", Offset = "0xF3129C", VA = "0xF3129C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038D9")]
			[Address(RVA = "0xF31884", Offset = "0xF31884", VA = "0xF31884", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025F8")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000335")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6002671")]
			[Address(RVA = "0xF30210", Offset = "0xF30210", VA = "0xF30210", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000336")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6002672")]
			[Address(RVA = "0xF30218", Offset = "0xF30218", VA = "0xF30218", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000337")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6002673")]
			[Address(RVA = "0xF30220", Offset = "0xF30220", VA = "0xF30220", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000338")]
		public override bool EnableState
		{
			[Token(Token = "0x6002674")]
			[Address(RVA = "0xF30228", Offset = "0xF30228", VA = "0xF30228", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002675")]
			[Address(RVA = "0xF30254", Offset = "0xF30254", VA = "0xF30254", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xF30290", Offset = "0xF30290", VA = "0xF30290", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xF30540", Offset = "0xF30540", VA = "0xF30540")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4FFEC", Offset = "0xB4FFEC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xF305DC", Offset = "0xF305DC", VA = "0xF305DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xF30AEC", Offset = "0xF30AEC", VA = "0xF30AEC")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xF30D64", Offset = "0xF30D64", VA = "0xF30D64")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xF30EA4", Offset = "0xF30EA4", VA = "0xF30EA4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xF3116C", Offset = "0xF3116C", VA = "0xF3116C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xF31170", Offset = "0xF31170", VA = "0xF31170", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xF31174", Offset = "0xF31174", VA = "0xF31174")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class FingerTipPokeToolView : UnityEngine.MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40138", Offset = "0xB40138")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40148", Offset = "0xB40148")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40158", Offset = "0xB40158")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000339")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600267F")]
			[Address(RVA = "0xF318EC", Offset = "0xF318EC", VA = "0xF318EC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50050", Offset = "0xB50050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002680")]
			[Address(RVA = "0xF318F4", Offset = "0xF318F4", VA = "0xF318F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50060", Offset = "0xB50060")]
			set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public bool EnableState
		{
			[Token(Token = "0x6002681")]
			[Address(RVA = "0xF318FC", Offset = "0xF318FC", VA = "0xF318FC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002682")]
			[Address(RVA = "0xF31918", Offset = "0xF31918", VA = "0xF31918", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6002683")]
			[Address(RVA = "0xF31938", Offset = "0xF31938", VA = "0xF31938", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50070", Offset = "0xB50070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002684")]
			[Address(RVA = "0xF31940", Offset = "0xF31940", VA = "0xF31940", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50080", Offset = "0xB50080")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public float SphereRadius
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0xF3194C", Offset = "0xF3194C", VA = "0xF3194C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50090", Offset = "0xB50090")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002686")]
			[Address(RVA = "0xF31954", Offset = "0xF31954", VA = "0xF31954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB500A0", Offset = "0xB500A0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xF3195C", Offset = "0xF3195C", VA = "0xF3195C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xF319A4", Offset = "0xF319A4", VA = "0xF319A4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xF319A8", Offset = "0xF319A8", VA = "0xF319A8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4002608")]
		None = 0,
		[Token(Token = "0x4002609")]
		Ray = 1,
		[Token(Token = "0x400260A")]
		Poke = 4,
		[Token(Token = "0x400260B")]
		All = -1
	}
	[Token(Token = "0x20005BC")]
	public enum ToolInputState
	{
		[Token(Token = "0x400260D")]
		Inactive,
		[Token(Token = "0x400260E")]
		PrimaryInputDown,
		[Token(Token = "0x400260F")]
		PrimaryInputDownStay,
		[Token(Token = "0x4002610")]
		PrimaryInputUp
	}
	[Token(Token = "0x20005BD")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xF31128", Offset = "0xF31128", VA = "0xF31128")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public abstract class InteractableTool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40168", Offset = "0xB40168")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40178", Offset = "0xB40178")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40188", Offset = "0xB40188")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700033D")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0xF2D330", Offset = "0xF2D330", VA = "0xF2D330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600268C")]
			[Address(RVA = "0xF333A4", Offset = "0xF333A4", VA = "0xF333A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB500B0", Offset = "0xB500B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600268D")]
			[Address(RVA = "0xF333AC", Offset = "0xF333AC", VA = "0xF333AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB500C0", Offset = "0xB500C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600268E")]
			get;
		}

		[Token(Token = "0x17000340")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600268F")]
			get;
		}

		[Token(Token = "0x17000341")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6002690")]
			get;
		}

		[Token(Token = "0x17000342")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6002691")]
			[Address(RVA = "0xF333B8", Offset = "0xF333B8", VA = "0xF333B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB500D0", Offset = "0xB500D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002692")]
			[Address(RVA = "0xF333C4", Offset = "0xF333C4", VA = "0xF333C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB500E0", Offset = "0xB500E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6002693")]
			[Address(RVA = "0xF333D0", Offset = "0xF333D0", VA = "0xF333D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB500F0", Offset = "0xB500F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002694")]
			[Address(RVA = "0xF333DC", Offset = "0xF333DC", VA = "0xF333DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50100", Offset = "0xB50100")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6002699")]
			get;
			[Token(Token = "0x600269A")]
			set;
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xF333E8", Offset = "0xF333E8", VA = "0xF333E8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6002696")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6002697")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6002698")]
		public abstract void DeFocus();

		[Token(Token = "0x600269B")]
		public abstract void Initialize();

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xF333F0", Offset = "0xF333F0", VA = "0xF333F0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xF33440", Offset = "0xF33440", VA = "0xF33440")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xF33498", Offset = "0xF33498", VA = "0xF33498", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xF336DC", Offset = "0xF336DC", VA = "0xF336DC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xF31188", Offset = "0xF31188", VA = "0xF31188")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000345")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60026A1")]
			get;
		}

		[Token(Token = "0x17000346")]
		bool EnableState
		{
			[Token(Token = "0x60026A3")]
			get;
			[Token(Token = "0x60026A4")]
			set;
		}

		[Token(Token = "0x17000347")]
		bool ToolActivateState
		{
			[Token(Token = "0x60026A5")]
			get;
			[Token(Token = "0x60026A6")]
			set;
		}

		[Token(Token = "0x60026A2")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20005C0")]
	public class PinchStateModule
	{
		[Token(Token = "0x20009F5")]
		private enum PinchState
		{
			[Token(Token = "0x4003277")]
			None,
			[Token(Token = "0x4003278")]
			PinchDown,
			[Token(Token = "0x4003279")]
			PinchStay,
			[Token(Token = "0x400327A")]
			PinchUp
		}

		[Token(Token = "0x400261D")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000348")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xF36AB4", Offset = "0xF36AB4", VA = "0xF36AB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000349")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xF36B40", Offset = "0xF36B40", VA = "0xF36B40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034A")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xF36BCC", Offset = "0xF36BCC", VA = "0xF36BCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xF36C58", Offset = "0xF36C58", VA = "0xF36C58")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xF36C84", Offset = "0xF36C84", VA = "0xF36C84")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4002620")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4002621")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4002622")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4002623")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4002624")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB401A8", Offset = "0xB401A8")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700034B")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xF36F24", Offset = "0xF36F24", VA = "0xF36F24", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700034C")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xF36F2C", Offset = "0xF36F2C", VA = "0xF36F2C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700034D")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xF36F94", Offset = "0xF36F94", VA = "0xF36F94", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034E")]
		public override bool EnableState
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xF36F9C", Offset = "0xF36F9C", VA = "0xF36F9C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xF36FE0", Offset = "0xF36FE0", VA = "0xF36FE0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xF37054", Offset = "0xF37054", VA = "0xF37054", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xF370AC", Offset = "0xF370AC", VA = "0xF370AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xF37148", Offset = "0xF37148", VA = "0xF37148")]
		private void Update()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xF37448", Offset = "0xF37448", VA = "0xF37448")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xF37544", Offset = "0xF37544", VA = "0xF37544", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xF378A8", Offset = "0xF378A8", VA = "0xF378A8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xF37A4C", Offset = "0xF37A4C", VA = "0xF37A4C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xF37B74", Offset = "0xF37B74", VA = "0xF37B74")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xF37EAC", Offset = "0xF37EAC", VA = "0xF37EAC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xF382BC", Offset = "0xF382BC", VA = "0xF382BC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xF38390", Offset = "0xF38390", VA = "0xF38390", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xF383C4", Offset = "0xF383C4", VA = "0xF383C4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class RayToolView : UnityEngine.MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4002630")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4002631")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4021C", Offset = "0xB4021C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700034F")]
		public bool EnableState
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xF36FC4", Offset = "0xF36FC4", VA = "0xF36FC4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xF36FFC", Offset = "0xF36FFC", VA = "0xF36FFC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xF3847C", Offset = "0xF3847C", VA = "0xF3847C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xF3740C", Offset = "0xF3740C", VA = "0xF3740C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xF386AC", Offset = "0xF386AC", VA = "0xF386AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50110", Offset = "0xB50110")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xF386B4", Offset = "0xF386B4", VA = "0xF386B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50120", Offset = "0xB50120")]
			set
			{
			}
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xF38484", Offset = "0xF38484", VA = "0xF38484")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xF382F0", Offset = "0xF382F0", VA = "0xF382F0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xF386BC", Offset = "0xF386BC", VA = "0xF386BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xF389E8", Offset = "0xF389E8", VA = "0xF389E8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xF38BD8", Offset = "0xF38BD8", VA = "0xF38BD8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class DistanceGrabberSample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000352")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0xF2FE80", Offset = "0xF2FE80", VA = "0xF2FE80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026C9")]
			[Address(RVA = "0xF2FE88", Offset = "0xF2FE88", VA = "0xF2FE88")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60026CA")]
			[Address(RVA = "0xF2FF10", Offset = "0xF2FF10", VA = "0xF2FF10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xF2FF18", Offset = "0xF2FF18", VA = "0xF2FF18")]
			set
			{
			}
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xF2FF84", Offset = "0xF2FF84", VA = "0xF2FF84")]
		private void Start()
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xF301E8", Offset = "0xF301E8", VA = "0xF301E8")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xF301F8", Offset = "0xF301F8", VA = "0xF301F8")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xF30208", Offset = "0xF30208", VA = "0xF30208")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class ControllerBoxController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xF2DA88", Offset = "0xF2DA88", VA = "0xF2DA88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xF2DA8C", Offset = "0xF2DA8C", VA = "0xF2DA8C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xF2DB0C", Offset = "0xF2DB0C", VA = "0xF2DB0C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xF2DBFC", Offset = "0xF2DBFC", VA = "0xF2DBFC")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xF2DCEC", Offset = "0xF2DCEC", VA = "0xF2DCEC")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xF2DDAC", Offset = "0xF2DDAC", VA = "0xF2DDAC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xF2DE9C", Offset = "0xF2DE9C", VA = "0xF2DE9C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xF2DEE4", Offset = "0xF2DEE4", VA = "0xF2DEE4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xF2E040", Offset = "0xF2E040", VA = "0xF2E040")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xF2E0B0", Offset = "0xF2E0B0", VA = "0xF2E0B0")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class CowController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xF2E0B8", Offset = "0xF2E0B8", VA = "0xF2E0B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xF2E0BC", Offset = "0xF2E0BC", VA = "0xF2E0BC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xF2E074", Offset = "0xF2E074", VA = "0xF2E074")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xF2E0FC", Offset = "0xF2E0FC", VA = "0xF2E0FC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class PanelHMDFollower : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E50", Offset = "0xB36E50")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400327B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400327C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400327D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400327E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400327F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4003280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000581")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038DE")]
				[Address(RVA = "0xF36958", Offset = "0xF36958", VA = "0xF36958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000582")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038E0")]
				[Address(RVA = "0xF369C0", Offset = "0xF369C0", VA = "0xF369C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038DB")]
			[Address(RVA = "0xF3668C", Offset = "0xF3668C", VA = "0xF3668C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60038DC")]
			[Address(RVA = "0xF36768", Offset = "0xF36768", VA = "0xF36768", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038DD")]
			[Address(RVA = "0xF3676C", Offset = "0xF3676C", VA = "0xF3676C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038DF")]
			[Address(RVA = "0xF36960", Offset = "0xF36960", VA = "0xF36960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002641")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4002642")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xF362A4", Offset = "0xF362A4", VA = "0xF362A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xF3633C", Offset = "0xF3633C", VA = "0xF3633C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xF365C8", Offset = "0xF365C8", VA = "0xF365C8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xF36558", Offset = "0xF36558", VA = "0xF36558")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50130", Offset = "0xB50130")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xF366B8", Offset = "0xF366B8", VA = "0xF366B8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class SelectionCylinder : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009F7")]
		public enum SelectionState
		{
			[Token(Token = "0x4003282")]
			Off,
			[Token(Token = "0x4003283")]
			Selected,
			[Token(Token = "0x4003284")]
			Highlighted
		}

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000354")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xF38C38", Offset = "0xF38C38", VA = "0xF38C38")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xF38C40", Offset = "0xF38C40", VA = "0xF38C40")]
			set
			{
			}
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xF38DC8", Offset = "0xF38DC8", VA = "0xF38DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xF38F88", Offset = "0xF38F88", VA = "0xF38F88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xF38CC8", Offset = "0xF38CC8", VA = "0xF38CC8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xF39078", Offset = "0xF39078", VA = "0xF39078")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class TrackSegment : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009F8")]
		public enum SegmentType
		{
			[Token(Token = "0x4003286")]
			Straight,
			[Token(Token = "0x4003287")]
			LeftTurn,
			[Token(Token = "0x4003288")]
			RightTurn,
			[Token(Token = "0x4003289")]
			Switch
		}

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4002657")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4002658")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB402FC", Offset = "0xB402FC")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000355")]
		public float StartDistance
		{
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xF390E4", Offset = "0xF390E4", VA = "0xF390E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50194", Offset = "0xB50194")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xF390EC", Offset = "0xF390EC", VA = "0xF390EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB501A4", Offset = "0xB501A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public float GridSize
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xF390F4", Offset = "0xF390F4", VA = "0xF390F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xF390FC", Offset = "0xF390FC", VA = "0xF390FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public int SubDivCount
		{
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xF39104", Offset = "0xF39104", VA = "0xF39104")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026EF")]
			[Address(RVA = "0xF3910C", Offset = "0xF3910C", VA = "0xF3910C")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public SegmentType Type
		{
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xF39114", Offset = "0xF39114", VA = "0xF39114")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000359")]
		public Pose EndPose
		{
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0xF3911C", Offset = "0xF3911C", VA = "0xF3911C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public float Radius
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xF395B0", Offset = "0xF395B0", VA = "0xF395B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035B")]
		public float SegmentLength
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xF39184", Offset = "0xF39184", VA = "0xF39184")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xF395C0", Offset = "0xF395C0", VA = "0xF395C0")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xF395D8", Offset = "0xF395D8", VA = "0xF395D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xF391C4", Offset = "0xF391C4", VA = "0xF391C4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xF395DC", Offset = "0xF395DC", VA = "0xF395DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xF395E0", Offset = "0xF395E0", VA = "0xF395E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xF3964C", Offset = "0xF3964C", VA = "0xF3964C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xF3A1D4", Offset = "0xF3A1D4", VA = "0xF3A1D4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xF3A4E0", Offset = "0xF3A4E0", VA = "0xF3A4E0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class TrainButtonVisualController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E60", Offset = "0xB36E60")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400328A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400328B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400328C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x400328D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400328E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000583")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038E4")]
				[Address(RVA = "0xF3B0E8", Offset = "0xF3B0E8", VA = "0xF3B0E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000584")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038E6")]
				[Address(RVA = "0xF3B150", Offset = "0xF3B150", VA = "0xF3B150", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038E1")]
			[Address(RVA = "0xF3AE60", Offset = "0xF3AE60", VA = "0xF3AE60")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60038E2")]
			[Address(RVA = "0xF3AF3C", Offset = "0xF3AF3C", VA = "0xF3AF3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038E3")]
			[Address(RVA = "0xF3AF40", Offset = "0xF3AF40", VA = "0xF3AF40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038E5")]
			[Address(RVA = "0xF3B0F0", Offset = "0xF3B0F0", VA = "0xF3B0F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400265E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400265F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xF3A584", Offset = "0xF3A584", VA = "0xF3A584")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xF3A630", Offset = "0xF3A630", VA = "0xF3A630")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xF3A6E4", Offset = "0xF3A6E4", VA = "0xF3A6E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xF3A810", Offset = "0xF3A810", VA = "0xF3A810")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xF3A980", Offset = "0xF3A980", VA = "0xF3A980")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xF3AB1C", Offset = "0xF3AB1C", VA = "0xF3AB1C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xF3AD98", Offset = "0xF3AD98", VA = "0xF3AD98")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xF3AC30", Offset = "0xF3AC30", VA = "0xF3AC30")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xF3AC44", Offset = "0xF3AC44", VA = "0xF3AC44")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xF3ADF0", Offset = "0xF3ADF0", VA = "0xF3ADF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB501B4", Offset = "0xB501B4")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xF3AE8C", Offset = "0xF3AE8C", VA = "0xF3AE8C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700035C")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6002707")]
			[Address(RVA = "0xF3B158", Offset = "0xF3B158", VA = "0xF3B158")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xF3B168", Offset = "0xF3B168", VA = "0xF3B168", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xF3B170", Offset = "0xF3B170", VA = "0xF3B170", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xF3B5DC", Offset = "0xF3B5DC", VA = "0xF3B5DC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public abstract class TrainCarBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4002672")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4002673")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB403FC", Offset = "0xB403FC")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700035D")]
		public float Distance
		{
			[Token(Token = "0x600270B")]
			[Address(RVA = "0xF3B6D4", Offset = "0xF3B6D4", VA = "0xF3B6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50218", Offset = "0xB50218")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600270C")]
			[Address(RVA = "0xF3B6DC", Offset = "0xF3B6DC", VA = "0xF3B6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50228", Offset = "0xB50228")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public float Scale
		{
			[Token(Token = "0x600270D")]
			[Address(RVA = "0xF3B6E4", Offset = "0xF3B6E4", VA = "0xF3B6E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600270E")]
			[Address(RVA = "0xF3B6EC", Offset = "0xF3B6EC", VA = "0xF3B6EC")]
			set
			{
			}
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xF3B16C", Offset = "0xF3B16C", VA = "0xF3B16C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xF3B6F4", Offset = "0xF3B6F4", VA = "0xF3B6F4")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xF3B1B8", Offset = "0xF3B1B8", VA = "0xF3B1B8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0xF3B490", Offset = "0xF3B490", VA = "0xF3B490")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6002713")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xF3B64C", Offset = "0xF3B64C", VA = "0xF3B64C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class TrainCrossingController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E70", Offset = "0xB36E70")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400328F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4003292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4003293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4003294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4003295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4003296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4003297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4003298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4003299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400329A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000585")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038EA")]
				[Address(RVA = "0xF3C094", Offset = "0xF3C094", VA = "0xF3C094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038EC")]
				[Address(RVA = "0xF3C0FC", Offset = "0xF3C0FC", VA = "0xF3C0FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038E7")]
			[Address(RVA = "0xF3BCD8", Offset = "0xF3BCD8", VA = "0xF3BCD8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60038E8")]
			[Address(RVA = "0xF3BE70", Offset = "0xF3BE70", VA = "0xF3BE70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038E9")]
			[Address(RVA = "0xF3BE74", Offset = "0xF3BE74", VA = "0xF3BE74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038EB")]
			[Address(RVA = "0xF3C09C", Offset = "0xF3C09C", VA = "0xF3C09C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xF3B8C4", Offset = "0xF3B8C4", VA = "0xF3B8C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xF3B910", Offset = "0xF3B910", VA = "0xF3B910")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xF3BA1C", Offset = "0xF3BA1C", VA = "0xF3BA1C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xF3BB7C", Offset = "0xF3BB7C", VA = "0xF3BB7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xF3BA78", Offset = "0xF3BA78", VA = "0xF3BA78")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xF3BC58", Offset = "0xF3BC58", VA = "0xF3BC58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50238", Offset = "0xB50238")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xF3BD04", Offset = "0xF3BD04", VA = "0xF3BD04")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xF3BDB0", Offset = "0xF3BDB0", VA = "0xF3BDB0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xF3BE10", Offset = "0xF3BE10", VA = "0xF3BE10")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20009FB")]
		private enum EngineSoundState
		{
			[Token(Token = "0x400329C")]
			Start,
			[Token(Token = "0x400329D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x400329E")]
			Stop
		}

		[Token(Token = "0x20009FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E80", Offset = "0xB36E80")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400329F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40032A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40032A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40032A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40032A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40032A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40032A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000587")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038F0")]
				[Address(RVA = "0xF3CA50", Offset = "0xF3CA50", VA = "0xF3CA50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038F2")]
				[Address(RVA = "0xF3CAB8", Offset = "0xF3CAB8", VA = "0xF3CAB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038ED")]
			[Address(RVA = "0xF3C3BC", Offset = "0xF3C3BC", VA = "0xF3C3BC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60038EE")]
			[Address(RVA = "0xF3C830", Offset = "0xF3C830", VA = "0xF3C830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038EF")]
			[Address(RVA = "0xF3C834", Offset = "0xF3C834", VA = "0xF3C834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038F1")]
			[Address(RVA = "0xF3CA58", Offset = "0xF3CA58", VA = "0xF3CA58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002686")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4002687")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4002688")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4002689")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB4045C", Offset = "0xB4045C")]
		protected float _initialSpeed;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xF3C104", Offset = "0xF3C104", VA = "0xF3C104")]
		private void Start()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xF3C25C", Offset = "0xF3C25C", VA = "0xF3C25C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xF3C268", Offset = "0xF3C268", VA = "0xF3C268", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xF2DAC0", Offset = "0xF2DAC0", VA = "0xF2DAC0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xF3C1D8", Offset = "0xF3C1D8", VA = "0xF3C1D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB5029C", Offset = "0xB5029C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xF3C3E8", Offset = "0xF3C3E8", VA = "0xF3C3E8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xF3C358", Offset = "0xF3C358", VA = "0xF3C358")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xF2DB40", Offset = "0xF2DB40", VA = "0xF2DB40")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xF2DC30", Offset = "0xF2DC30", VA = "0xF2DC30")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xF3C634", Offset = "0xF3C634", VA = "0xF3C634")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xF3C73C", Offset = "0xF3C73C", VA = "0xF3C73C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xF2DD20", Offset = "0xF2DD20", VA = "0xF2DD20")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xF2DDE0", Offset = "0xF2DDE0", VA = "0xF2DDE0")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xF2DED4", Offset = "0xF2DED4", VA = "0xF2DED4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xF3C7C4", Offset = "0xF3C7C4", VA = "0xF3C7C4")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class TrainTrack : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700035F")]
		public float TrackLength
		{
			[Token(Token = "0x600272E")]
			[Address(RVA = "0xF3CAC0", Offset = "0xF3CAC0", VA = "0xF3CAC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600272F")]
			[Address(RVA = "0xF3CAC8", Offset = "0xF3CAC8", VA = "0xF3CAC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xF3CAD0", Offset = "0xF3CAD0", VA = "0xF3CAD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xF3B774", Offset = "0xF3B774", VA = "0xF3B774")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xF3CAD4", Offset = "0xF3CAD4", VA = "0xF3CAD4")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xF3CCCC", Offset = "0xF3CCCC", VA = "0xF3CCCC")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xF3CDE8", Offset = "0xF3CDE8", VA = "0xF3CDE8")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class Pose
	{
		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xF36E08", Offset = "0xF36E08", VA = "0xF36E08")]
		public Pose()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xF36EB4", Offset = "0xF36EB4", VA = "0xF36EB4")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public class WindmillBladesController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36E90", Offset = "0xB36E90")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40032AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40032AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40032AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000589")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038F6")]
				[Address(RVA = "0xF3D3CC", Offset = "0xF3D3CC", VA = "0xF3D3CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038F8")]
				[Address(RVA = "0xF3D434", Offset = "0xF3D434", VA = "0xF3D434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038F3")]
			[Address(RVA = "0xF3D090", Offset = "0xF3D090", VA = "0xF3D090")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60038F4")]
			[Address(RVA = "0xF3D1F0", Offset = "0xF3D1F0", VA = "0xF3D1F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038F5")]
			[Address(RVA = "0xF3D1F4", Offset = "0xF3D1F4", VA = "0xF3D1F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038F7")]
			[Address(RVA = "0xF3D3D4", Offset = "0xF3D3D4", VA = "0xF3D3D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36EA0", Offset = "0xB36EA0")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40032B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40032B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40032B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700058B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60038FC")]
				[Address(RVA = "0xF3D508", Offset = "0xF3D508", VA = "0xF3D508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60038FE")]
				[Address(RVA = "0xF3D570", Offset = "0xF3D570", VA = "0xF3D570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038F9")]
			[Address(RVA = "0xF3D150", Offset = "0xF3D150", VA = "0xF3D150")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60038FA")]
			[Address(RVA = "0xF3D43C", Offset = "0xF3D43C", VA = "0xF3D43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60038FB")]
			[Address(RVA = "0xF3D440", Offset = "0xF3D440", VA = "0xF3D440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60038FD")]
			[Address(RVA = "0xF3D510", Offset = "0xF3D510", VA = "0xF3D510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026AC")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40644", Offset = "0xB40644")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000360")]
		public bool IsMoving
		{
			[Token(Token = "0x6002737")]
			[Address(RVA = "0xF3CE04", Offset = "0xF3CE04", VA = "0xF3CE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50300", Offset = "0xB50300")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002738")]
			[Address(RVA = "0xF3CE0C", Offset = "0xF3CE0C", VA = "0xF3CE0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50310", Offset = "0xB50310")]
			private set
			{
			}
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xF3CE18", Offset = "0xF3CE18", VA = "0xF3CE18")]
		private void Start()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xF3CE54", Offset = "0xF3CE54", VA = "0xF3CE54")]
		private void Update()
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xF3CFA8", Offset = "0xF3CFA8", VA = "0xF3CFA8")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xF3D010", Offset = "0xF3D010", VA = "0xF3D010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50320", Offset = "0xB50320")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xF3D0BC", Offset = "0xF3D0BC", VA = "0xF3D0BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50384", Offset = "0xB50384")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xF3D17C", Offset = "0xF3D17C", VA = "0xF3D17C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xF3D1E8", Offset = "0xF3D1E8", VA = "0xF3D1E8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public class WindmillController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xF3D578", Offset = "0xF3D578", VA = "0xF3D578")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xF3D5E0", Offset = "0xF3D5E0", VA = "0xF3D5E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xF3D698", Offset = "0xF3D698", VA = "0xF3D698")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xF3D798", Offset = "0xF3D798", VA = "0xF3D798")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xF3D814", Offset = "0xF3D814", VA = "0xF3D814")]
		private void Update()
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xF3D8F0", Offset = "0xF3D8F0", VA = "0xF3D8F0")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40026BD")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40026BE")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40026BF")]
		EUDT_None,
		[Token(Token = "0x40026C0")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20005D3")]
	public class OVROverlaySample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20009FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36EB0", Offset = "0xB36EB0")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700058D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003902")]
				[Address(RVA = "0xF36234", Offset = "0xF36234", VA = "0xF36234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003904")]
				[Address(RVA = "0xF3629C", Offset = "0xF3629C", VA = "0xF3629C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60038FF")]
			[Address(RVA = "0xF358B0", Offset = "0xF358B0", VA = "0xF358B0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003900")]
			[Address(RVA = "0xF35FE8", Offset = "0xF35FE8", VA = "0xF35FE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003901")]
			[Address(RVA = "0xF35FEC", Offset = "0xF35FEC", VA = "0xF35FEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003903")]
			[Address(RVA = "0xF3623C", Offset = "0xF3623C", VA = "0xF3623C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40026C2")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40026C3")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40026C4")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB40684", Offset = "0xB40684")]
		public GameObject mainCamera;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB406BC", Offset = "0xB406BC")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xF34BD0", Offset = "0xF34BD0", VA = "0xF34BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xF353D8", Offset = "0xF353D8", VA = "0xF353D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xF35518", Offset = "0xF35518", VA = "0xF35518")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xF35640", Offset = "0xF35640", VA = "0xF35640")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xF35768", Offset = "0xF35768", VA = "0xF35768")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xF354EC", Offset = "0xF354EC", VA = "0xF354EC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xF35840", Offset = "0xF35840", VA = "0xF35840")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB503E8", Offset = "0xB503E8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xF358DC", Offset = "0xF358DC", VA = "0xF358DC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xF34F3C", Offset = "0xF34F3C", VA = "0xF34F3C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xF35A04", Offset = "0xF35A04", VA = "0xF35A04")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xF35910", Offset = "0xF35910", VA = "0xF35910")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xF35DA0", Offset = "0xF35DA0", VA = "0xF35DA0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xF35E7C", Offset = "0xF35E7C", VA = "0xF35E7C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xF35EF8", Offset = "0xF35EF8", VA = "0xF35EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5044C", Offset = "0xB5044C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xF35F48", Offset = "0xF35F48", VA = "0xF35F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5045C", Offset = "0xB5045C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xF35F98", Offset = "0xF35F98", VA = "0xF35F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5046C", Offset = "0xB5046C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33D9C", Offset = "0xB33D9C")]
	public class Hand : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36EC0", Offset = "0xB36EC0")]
		private sealed class <>c
		{
			[Token(Token = "0x40032B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6003906")]
			[Address(RVA = "0x1052968", Offset = "0x1052968", VA = "0x1052968")]
			public <>c()
			{
			}

			[Token(Token = "0x6003907")]
			[Address(RVA = "0x1052970", Offset = "0x1052970", VA = "0x1052970")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40026D9")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40026DA")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40026DB")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40026DC")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40026DD")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40026DE")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40026DF")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40026E0")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40026E1")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40026E2")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40026E3")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x1051BAC", Offset = "0x1051BAC", VA = "0x1051BAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x1051C04", Offset = "0x1051C04", VA = "0x1051C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x105200C", Offset = "0x105200C", VA = "0x105200C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x10520D8", Offset = "0x10520D8", VA = "0x10520D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x10521E4", Offset = "0x10521E4", VA = "0x10521E4")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x105251C", Offset = "0x105251C", VA = "0x105251C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x1052684", Offset = "0x1052684", VA = "0x1052684")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x10527D0", Offset = "0x10527D0", VA = "0x10527D0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x1052280", Offset = "0x1052280", VA = "0x1052280")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x1052320", Offset = "0x1052320", VA = "0x1052320")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x1051E60", Offset = "0x1051E60", VA = "0x1051E60")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x10528EC", Offset = "0x10528EC", VA = "0x10528EC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public enum HandPoseId
	{
		[Token(Token = "0x40026F6")]
		Default,
		[Token(Token = "0x40026F7")]
		Generic,
		[Token(Token = "0x40026F8")]
		PingPongBall,
		[Token(Token = "0x40026F9")]
		Controller
	}
	[Token(Token = "0x20005D6")]
	public class HandPose : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000361")]
		public bool AllowPointing
		{
			[Token(Token = "0x6002762")]
			[Address(RVA = "0x105299C", Offset = "0x105299C", VA = "0x105299C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000362")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6002763")]
			[Address(RVA = "0x10529A4", Offset = "0x10529A4", VA = "0x10529A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000363")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6002764")]
			[Address(RVA = "0x10529AC", Offset = "0x10529AC", VA = "0x10529AC")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x10529B4", Offset = "0x10529B4", VA = "0x10529B4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class TouchController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x10529BC", Offset = "0x10529BC", VA = "0x10529BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x1052C30", Offset = "0x1052C30", VA = "0x1052C30")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1052C8C", Offset = "0x1052C8C", VA = "0x1052C8C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1052CD0", Offset = "0x1052CD0", VA = "0x1052CD0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20005D8")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4002701")]
		TRIANGLES,
		[Token(Token = "0x4002702")]
		QUADS
	}
	[Token(Token = "0x20005D9")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4002704")]
		ABSORPTION,
		[Token(Token = "0x4002705")]
		TRANSMISSION,
		[Token(Token = "0x4002706")]
		SCATTERING
	}
	[Token(Token = "0x20005DA")]
	public struct MeshGroup
	{
		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20005DB")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400270B")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400270C")]
		public const string Tab = "    ";

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x1054578", Offset = "0x1054578", VA = "0x1054578")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB5047C", Offset = "0xB5047C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB5047C", Offset = "0xB5047C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1054600", Offset = "0x1054600", VA = "0x1054600")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB504DC", Offset = "0xB504DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB504DC", Offset = "0xB504DC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1054698", Offset = "0x1054698", VA = "0x1054698")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB5053C", Offset = "0xB5053C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB5053C", Offset = "0xB5053C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x1054720", Offset = "0x1054720", VA = "0x1054720")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB5059C", Offset = "0xB5059C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB5059C", Offset = "0xB5059C")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x10547A8", Offset = "0x10547A8", VA = "0x10547A8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB505FC", Offset = "0xB505FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB505FC", Offset = "0xB505FC")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class CAPI
	{
		[Token(Token = "0x2000A01")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000A02")]
		public enum Result
		{
			[Token(Token = "0x40032BA")]
			Success = 0,
			[Token(Token = "0x40032BB")]
			Failure = -1000,
			[Token(Token = "0x40032BC")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40032BD")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40032BE")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40032BF")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40032C0")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40032C1")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40032C2")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000A03")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40032C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x600390C")]
			[Address(RVA = "0x105BFE0", Offset = "0x105BFE0", VA = "0x105BFE0")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x400270D")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4002715")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600276F")]
		[Address(RVA = "0x10548A8", Offset = "0x10548A8", VA = "0x10548A8")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x1054938", Offset = "0x1054938", VA = "0x1054938")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x1054AF4", Offset = "0x1054AF4", VA = "0x1054AF4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002772")]
		[Address(RVA = "0x1054BD4", Offset = "0x1054BD4", VA = "0x1054BD4")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6002773")]
		[Address(RVA = "0x1054C44", Offset = "0x1054C44", VA = "0x1054C44")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6002774")]
		[Address(RVA = "0x1054CB8", Offset = "0x1054CB8", VA = "0x1054CB8")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x1054D38", Offset = "0x1054D38", VA = "0x1054D38")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6002776")]
		[Address(RVA = "0x1054E50", Offset = "0x1054E50", VA = "0x1054E50")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1054ED0", Offset = "0x1054ED0", VA = "0x1054ED0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6002778")]
		[Address(RVA = "0x1054FE8", Offset = "0x1054FE8", VA = "0x1054FE8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6002779")]
		[Address(RVA = "0x1055068", Offset = "0x1055068", VA = "0x1055068")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600277A")]
		[Address(RVA = "0x10550E8", Offset = "0x10550E8", VA = "0x10550E8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1055168", Offset = "0x1055168", VA = "0x1055168")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600277C")]
		[Address(RVA = "0x10551E8", Offset = "0x10551E8", VA = "0x10551E8")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1055278", Offset = "0x1055278", VA = "0x1055278")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1055308", Offset = "0x1055308", VA = "0x1055308")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600277F")]
		[Address(RVA = "0x1055398", Offset = "0x1055398", VA = "0x1055398")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1055418", Offset = "0x1055418", VA = "0x1055418")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1055498", Offset = "0x1055498", VA = "0x1055498")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1055528", Offset = "0x1055528", VA = "0x1055528")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6002783")]
		[Address(RVA = "0x10555B8", Offset = "0x10555B8", VA = "0x10555B8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6002784")]
		[Address(RVA = "0x1055648", Offset = "0x1055648", VA = "0x1055648")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002785")]
		[Address(RVA = "0x10556C8", Offset = "0x10556C8", VA = "0x10556C8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x1055768", Offset = "0x1055768", VA = "0x1055768")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002787")]
		[Address(RVA = "0x10557E8", Offset = "0x10557E8", VA = "0x10557E8")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6002788")]
		[Address(RVA = "0x1055888", Offset = "0x1055888", VA = "0x1055888")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6002789")]
		[Address(RVA = "0x1055948", Offset = "0x1055948", VA = "0x1055948")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600278A")]
		[Address(RVA = "0x1055A18", Offset = "0x1055A18", VA = "0x1055A18")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1055AA8", Offset = "0x1055AA8", VA = "0x1055AA8")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1055B38", Offset = "0x1055B38", VA = "0x1055B38")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1055BC8", Offset = "0x1055BC8", VA = "0x1055BC8")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1055C58", Offset = "0x1055C58", VA = "0x1055C58")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600278F")]
		[Address(RVA = "0x1055CE8", Offset = "0x1055CE8", VA = "0x1055CE8")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x1055D68", Offset = "0x1055D68", VA = "0x1055D68")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x1055E88", Offset = "0x1055E88", VA = "0x1055E88")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002792")]
		[Address(RVA = "0x1055DF8", Offset = "0x1055DF8", VA = "0x1055DF8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x105607C", Offset = "0x105607C", VA = "0x105607C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002794")]
		[Address(RVA = "0x10561B4", Offset = "0x10561B4", VA = "0x10561B4")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002795")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x1056234", Offset = "0x1056234", VA = "0x1056234")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002797")]
		[Address(RVA = "0x10564A4", Offset = "0x10564A4", VA = "0x10564A4")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1056524", Offset = "0x1056524", VA = "0x1056524")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002799")]
		[Address(RVA = "0x105665C", Offset = "0x105665C", VA = "0x105665C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x10566DC", Offset = "0x10566DC", VA = "0x10566DC")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600279B")]
		[Address(RVA = "0x1056814", Offset = "0x1056814", VA = "0x1056814")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1056894", Offset = "0x1056894", VA = "0x1056894")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600279D")]
		[Address(RVA = "0x10569CC", Offset = "0x10569CC", VA = "0x10569CC")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x1056A4C", Offset = "0x1056A4C", VA = "0x1056A4C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1056B84", Offset = "0x1056B84", VA = "0x1056B84")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x1056C04", Offset = "0x1056C04", VA = "0x1056C04")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x1056C84", Offset = "0x1056C84", VA = "0x1056C84")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x1056D1C", Offset = "0x1056D1C", VA = "0x1056D1C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x1056D9C", Offset = "0x1056D9C", VA = "0x1056D9C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1056F48", Offset = "0x1056F48", VA = "0x1056F48")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1057074", Offset = "0x1057074", VA = "0x1057074")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1056EC8", Offset = "0x1056EC8", VA = "0x1056EC8")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x10570F4", Offset = "0x10570F4", VA = "0x10570F4")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x1057174", Offset = "0x1057174", VA = "0x1057174")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x1057204", Offset = "0x1057204", VA = "0x1057204")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x1057284", Offset = "0x1057284", VA = "0x1057284")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x1057314", Offset = "0x1057314", VA = "0x1057314")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x1057394", Offset = "0x1057394", VA = "0x1057394")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1057414", Offset = "0x1057414", VA = "0x1057414")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x1057650", Offset = "0x1057650", VA = "0x1057650")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x10576E0", Offset = "0x10576E0", VA = "0x10576E0")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x10578CC", Offset = "0x10578CC", VA = "0x10578CC")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x1057964", Offset = "0x1057964", VA = "0x1057964")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x1057A88", Offset = "0x1057A88", VA = "0x1057A88")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x1057B08", Offset = "0x1057B08", VA = "0x1057B08")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x1057B88", Offset = "0x1057B88", VA = "0x1057B88")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1057CB0", Offset = "0x1057CB0", VA = "0x1057CB0")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1057D30", Offset = "0x1057D30", VA = "0x1057D30")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x1057E58", Offset = "0x1057E58", VA = "0x1057E58")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x1057ED8", Offset = "0x1057ED8", VA = "0x1057ED8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1057F68", Offset = "0x1057F68", VA = "0x1057F68")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x1057FF8", Offset = "0x1057FF8", VA = "0x1057FF8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1058088", Offset = "0x1058088", VA = "0x1058088")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x1058108", Offset = "0x1058108", VA = "0x1058108")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x1058190", Offset = "0x1058190", VA = "0x1058190")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x1058218", Offset = "0x1058218", VA = "0x1058218")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x1058298", Offset = "0x1058298", VA = "0x1058298")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x1058318", Offset = "0x1058318", VA = "0x1058318")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x10583CC", Offset = "0x10583CC", VA = "0x10583CC")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x105845C", Offset = "0x105845C", VA = "0x105845C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x10584EC", Offset = "0x10584EC", VA = "0x10584EC")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x105856C", Offset = "0x105856C", VA = "0x105856C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x10585EC", Offset = "0x10585EC", VA = "0x10585EC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x105866C", Offset = "0x105866C", VA = "0x105866C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1058704", Offset = "0x1058704", VA = "0x1058704")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1058794", Offset = "0x1058794", VA = "0x1058794")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1058824", Offset = "0x1058824", VA = "0x1058824")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x10588B4", Offset = "0x10588B4", VA = "0x10588B4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x105894C", Offset = "0x105894C", VA = "0x105894C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x10589E4", Offset = "0x10589E4", VA = "0x10589E4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1058A64", Offset = "0x1058A64", VA = "0x1058A64")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1058AE4", Offset = "0x1058AE4", VA = "0x1058AE4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x1058C0C", Offset = "0x1058C0C", VA = "0x1058C0C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x1058C8C", Offset = "0x1058C8C", VA = "0x1058C8C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1058DB4", Offset = "0x1058DB4", VA = "0x1058DB4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x1058E34", Offset = "0x1058E34", VA = "0x1058E34")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1058F5C", Offset = "0x1058F5C", VA = "0x1058F5C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x1058FDC", Offset = "0x1058FDC", VA = "0x1058FDC")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1059184", Offset = "0x1059184", VA = "0x1059184")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1059420", Offset = "0x1059420", VA = "0x1059420")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1059104", Offset = "0x1059104", VA = "0x1059104")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x10594B0", Offset = "0x10594B0", VA = "0x10594B0")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x1059530", Offset = "0x1059530", VA = "0x1059530")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x10595C0", Offset = "0x10595C0", VA = "0x10595C0")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x1059650", Offset = "0x1059650", VA = "0x1059650")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x10596E0", Offset = "0x10596E0", VA = "0x10596E0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x1059780", Offset = "0x1059780", VA = "0x1059780")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x1059820", Offset = "0x1059820", VA = "0x1059820")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x10598C0", Offset = "0x10598C0", VA = "0x10598C0")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x1059940", Offset = "0x1059940", VA = "0x1059940")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x10599C0", Offset = "0x10599C0", VA = "0x10599C0")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x1059A40", Offset = "0x1059A40", VA = "0x1059A40")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x1059AC0", Offset = "0x1059AC0", VA = "0x1059AC0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x1059B40", Offset = "0x1059B40", VA = "0x1059B40")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x1059C68", Offset = "0x1059C68", VA = "0x1059C68")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x1059D00", Offset = "0x1059D00", VA = "0x1059D00")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x1059D80", Offset = "0x1059D80", VA = "0x1059D80")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x1059DE4", Offset = "0x1059DE4", VA = "0x1059DE4")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1059F00", Offset = "0x1059F00", VA = "0x1059F00")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1059F90", Offset = "0x1059F90", VA = "0x1059F90")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x105A0D4", Offset = "0x105A0D4", VA = "0x105A0D4")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x105A164", Offset = "0x105A164", VA = "0x105A164")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x105A204", Offset = "0x105A204", VA = "0x105A204")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x105A59C", Offset = "0x105A59C", VA = "0x105A59C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x105A61C", Offset = "0x105A61C", VA = "0x105A61C")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x105A6B4", Offset = "0x105A6B4", VA = "0x105A6B4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x105AE7C", Offset = "0x105AE7C", VA = "0x105AE7C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x105AEFC", Offset = "0x105AEFC", VA = "0x105AEFC")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x1054840", Offset = "0x1054840", VA = "0x1054840")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB5065C", Offset = "0xB5065C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x105AF94", Offset = "0x105AF94", VA = "0x105AF94")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x105B018", Offset = "0x105B018", VA = "0x105B018")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x105B098", Offset = "0x105B098", VA = "0x105B098")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x105B118", Offset = "0x105B118", VA = "0x105B118")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x105B198", Offset = "0x105B198", VA = "0x105B198")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x105BB78", Offset = "0x105BB78", VA = "0x105BB78")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x105BBF8", Offset = "0x105BBF8", VA = "0x105BBF8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x105C0BC", Offset = "0x105C0BC", VA = "0x105C0BC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x105BF50", Offset = "0x105BF50", VA = "0x105BF50")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x105C130", Offset = "0x105C130", VA = "0x105C130")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20005DD")]
	public class TestScript : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xB40774", Offset = "0xB40774")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x104AE40", Offset = "0x104AE40", VA = "0x104AE40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x104AE44", Offset = "0x104AE44", VA = "0x104AE44")]
		private void Update()
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x104AF04", Offset = "0x104AF04", VA = "0x104AF04")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	public class AmbienceEmitter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB407C0", Offset = "0xB407C0")]
		public bool autoRetrigger;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB407F8", Offset = "0xB407F8")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4081C", Offset = "0xB4081C")]
		public Transform[] playPositions;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x17D1DBC", Offset = "0x17D1DBC", VA = "0x17D1DBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x17D1F40", Offset = "0x17D1F40", VA = "0x17D1F40")]
		private void Update()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x17D2120", Offset = "0x17D2120", VA = "0x17D2120")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x17D1FA0", Offset = "0x17D1FA0", VA = "0x17D1FA0")]
		public void Play()
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x17D21E0", Offset = "0x17D21E0", VA = "0x17D21E0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x17D2354", Offset = "0x17D2354", VA = "0x17D2354")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4002724")]
		Default,
		[Token(Token = "0x4002725")]
		Preload,
		[Token(Token = "0x4002726")]
		ManualPreload
	}
	[Token(Token = "0x20005E0")]
	public enum Fade
	{
		[Token(Token = "0x4002728")]
		In,
		[Token(Token = "0x4002729")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20005E1")]
	public class SoundGroup
	{
		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB40854", Offset = "0xB40854")]
		public int maxPlayingSounds;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x104AC00", Offset = "0x104AC00", VA = "0x104AC00")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x104AC94", Offset = "0x104AC94", VA = "0x104AC94")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x104AD20", Offset = "0x104AD20", VA = "0x104AD20")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x104ADB0", Offset = "0x104ADB0", VA = "0x104ADB0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x104A1B4", Offset = "0x104A1B4", VA = "0x104A1B4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005E2")]
	public class AudioManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A04")]
		public enum Fade
		{
			[Token(Token = "0x40032C5")]
			In,
			[Token(Token = "0x40032C6")]
			Out
		}

		[Token(Token = "0x2000A05")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36ED0", Offset = "0xB36ED0")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x40032C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x600390E")]
			[Address(RVA = "0x17D646C", Offset = "0x17D646C", VA = "0x17D646C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600390F")]
			[Address(RVA = "0x17D8754", Offset = "0x17D8754", VA = "0x17D8754")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000A06")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36EE0", Offset = "0xB36EE0")]
		private sealed class <>c
		{
			[Token(Token = "0x40032C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6003911")]
			[Address(RVA = "0x17D86BC", Offset = "0x17D86BC", VA = "0x17D86BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6003912")]
			[Address(RVA = "0x17D86C4", Offset = "0x17D86C4", VA = "0x17D86C4")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40880", Offset = "0xB40880")]
		public bool makePersistent;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB408B8", Offset = "0xB408B8")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB408F0", Offset = "0xB408F0")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40928", Offset = "0xB40928")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40960", Offset = "0xB40960")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40998", Offset = "0xB40998")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB409D0", Offset = "0xB409D0")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40A08", Offset = "0xB40A08")]
		public bool verboseLogging;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40A40", Offset = "0xB40A40")]
		public int maxSoundEmitters;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40A78", Offset = "0xB40A78")]
		public float volumeSoundFX;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40AB0", Offset = "0xB40AB0")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000364")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x17D2414", Offset = "0x17D2414", VA = "0x17D2414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000365")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600280E")]
			[Address(RVA = "0x17D24F4", Offset = "0x17D24F4", VA = "0x17D24F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public static float NearFallOff
		{
			[Token(Token = "0x600280F")]
			[Address(RVA = "0x17D255C", Offset = "0x17D255C", VA = "0x17D255C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000367")]
		public static float FarFallOff
		{
			[Token(Token = "0x6002810")]
			[Address(RVA = "0x17D25D0", Offset = "0x17D25D0", VA = "0x17D25D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000368")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6002811")]
			[Address(RVA = "0x17D2644", Offset = "0x17D2644", VA = "0x17D2644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6002812")]
			[Address(RVA = "0x17D26B8", Offset = "0x17D26B8", VA = "0x17D26B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6002813")]
			[Address(RVA = "0x17D272C", Offset = "0x17D272C", VA = "0x17D272C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600281E")]
			[Address(RVA = "0x17D447C", Offset = "0x17D447C", VA = "0x17D447C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x17D27A0", Offset = "0x17D27A0", VA = "0x17D27A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x17D29C8", Offset = "0x17D29C8", VA = "0x17D29C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x17D27A4", Offset = "0x17D27A4", VA = "0x17D27A4")]
		private void Init()
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x17D35F4", Offset = "0x17D35F4", VA = "0x17D35F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x17D2B20", Offset = "0x17D2B20", VA = "0x17D2B20")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x17D3C18", Offset = "0x17D3C18", VA = "0x17D3C18")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x17D3D98", Offset = "0x17D3D98", VA = "0x17D3D98")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x17D3F34", Offset = "0x17D3F34", VA = "0x17D3F34")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x17D4034", Offset = "0x17D4034", VA = "0x17D4034")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x17D40C4", Offset = "0x17D40C4", VA = "0x17D40C4")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x17D2F6C", Offset = "0x17D2F6C", VA = "0x17D2F6C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x17D35F8", Offset = "0x17D35F8", VA = "0x17D35F8")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x17D4700", Offset = "0x17D4700", VA = "0x17D4700")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x17D4804", Offset = "0x17D4804", VA = "0x17D4804")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x17D490C", Offset = "0x17D490C", VA = "0x17D490C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x17D45C8", Offset = "0x17D45C8", VA = "0x17D45C8")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x17D4A78", Offset = "0x17D4A78", VA = "0x17D4A78")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x17D4BCC", Offset = "0x17D4BCC", VA = "0x17D4BCC")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x17D4D7C", Offset = "0x17D4D7C", VA = "0x17D4D7C")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x17D2130", Offset = "0x17D2130", VA = "0x17D2130")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x17D22A4", Offset = "0x17D22A4", VA = "0x17D22A4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x17D4F28", Offset = "0x17D4F28", VA = "0x17D4F28")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x17D4FF4", Offset = "0x17D4FF4", VA = "0x17D4FF4")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x17D5088", Offset = "0x17D5088", VA = "0x17D5088")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x17D514C", Offset = "0x17D514C", VA = "0x17D514C")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x17D51F0", Offset = "0x17D51F0", VA = "0x17D51F0")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x17D52D0", Offset = "0x17D52D0", VA = "0x17D52D0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x17D5DB4", Offset = "0x17D5DB4", VA = "0x17D5DB4")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x17D6474", Offset = "0x17D6474", VA = "0x17D6474")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x17D6654", Offset = "0x17D6654", VA = "0x17D6654")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x17D71C8", Offset = "0x17D71C8", VA = "0x17D71C8")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x17D54D8", Offset = "0x17D54D8", VA = "0x17D54D8")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x17D72E8", Offset = "0x17D72E8", VA = "0x17D72E8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x17D73CC", Offset = "0x17D73CC", VA = "0x17D73CC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x17D74BC", Offset = "0x17D74BC", VA = "0x17D74BC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x17D7874", Offset = "0x17D7874", VA = "0x17D7874")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x17D7A70", Offset = "0x17D7A70", VA = "0x17D7A70")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x17D7B8C", Offset = "0x17D7B8C", VA = "0x17D7B8C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x17D7D54", Offset = "0x17D7D54", VA = "0x17D7D54")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x17D7E2C", Offset = "0x17D7E2C", VA = "0x17D7E2C")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x17D7F60", Offset = "0x17D7F60", VA = "0x17D7F60")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x17D834C", Offset = "0x17D834C", VA = "0x17D834C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4002751")]
		None = -1,
		[Token(Token = "0x4002752")]
		Reserved,
		[Token(Token = "0x4002753")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20005E4")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x17D8850", Offset = "0x17D8850", VA = "0x17D8850")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x17D87F4", Offset = "0x17D87F4", VA = "0x17D87F4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class SoundEmitter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A07")]
		public enum FadeState
		{
			[Token(Token = "0x40032CB")]
			Null,
			[Token(Token = "0x40032CC")]
			FadingIn,
			[Token(Token = "0x40032CD")]
			FadingOut,
			[Token(Token = "0x40032CE")]
			Ducking
		}

		[Token(Token = "0x2000A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36EF0", Offset = "0xB36EF0")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40032D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40032D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40032D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700058F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003916")]
				[Address(RVA = "0x10494B8", Offset = "0x10494B8", VA = "0x10494B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003918")]
				[Address(RVA = "0x1049520", Offset = "0x1049520", VA = "0x1049520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003913")]
			[Address(RVA = "0x10493A0", Offset = "0x10493A0", VA = "0x10493A0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6003914")]
			[Address(RVA = "0x10493CC", Offset = "0x10493CC", VA = "0x10493CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003915")]
			[Address(RVA = "0x10493D0", Offset = "0x10493D0", VA = "0x10493D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003917")]
			[Address(RVA = "0x10494C0", Offset = "0x10494C0", VA = "0x10494C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A09")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F00", Offset = "0xB36F00")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40032D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40032D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40032DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40032DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40032DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40032DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000591")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600391C")]
				[Address(RVA = "0x10499C8", Offset = "0x10499C8", VA = "0x10499C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000592")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600391E")]
				[Address(RVA = "0x1049A30", Offset = "0x1049A30", VA = "0x1049A30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003919")]
			[Address(RVA = "0x1049830", Offset = "0x1049830", VA = "0x1049830")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600391A")]
			[Address(RVA = "0x104985C", Offset = "0x104985C", VA = "0x104985C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600391B")]
			[Address(RVA = "0x1049860", Offset = "0x1049860", VA = "0x1049860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600391D")]
			[Address(RVA = "0x10499D0", Offset = "0x10499D0", VA = "0x10499D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A0A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F10", Offset = "0xB36F10")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40032E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40032E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40032E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40032E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40032E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40032E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40032E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40032E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40032E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000593")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003922")]
				[Address(RVA = "0x10497C0", Offset = "0x10497C0", VA = "0x10497C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000594")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003924")]
				[Address(RVA = "0x1049828", Offset = "0x1049828", VA = "0x1049828", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600391F")]
			[Address(RVA = "0x1049528", Offset = "0x1049528", VA = "0x1049528")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6003920")]
			[Address(RVA = "0x1049554", Offset = "0x1049554", VA = "0x1049554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003921")]
			[Address(RVA = "0x1049558", Offset = "0x1049558", VA = "0x1049558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003923")]
			[Address(RVA = "0x10497C8", Offset = "0x10497C8", VA = "0x10497C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700036C")]
		public float volume
		{
			[Token(Token = "0x6002842")]
			[Address(RVA = "0x17D71AC", Offset = "0x17D71AC", VA = "0x17D71AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002843")]
			[Address(RVA = "0x17D88F0", Offset = "0x17D88F0", VA = "0x17D88F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public float pitch
		{
			[Token(Token = "0x6002844")]
			[Address(RVA = "0x17D890C", Offset = "0x17D890C", VA = "0x17D890C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002845")]
			[Address(RVA = "0x17D8928", Offset = "0x17D8928", VA = "0x17D8928")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public AudioClip clip
		{
			[Token(Token = "0x6002846")]
			[Address(RVA = "0x17D8944", Offset = "0x17D8944", VA = "0x17D8944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002847")]
			[Address(RVA = "0x17D8960", Offset = "0x17D8960", VA = "0x17D8960")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public float time
		{
			[Token(Token = "0x6002848")]
			[Address(RVA = "0x17D897C", Offset = "0x17D897C", VA = "0x17D897C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002849")]
			[Address(RVA = "0x17D52B4", Offset = "0x17D52B4", VA = "0x17D52B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public float length
		{
			[Token(Token = "0x600284A")]
			[Address(RVA = "0x17D8998", Offset = "0x17D8998", VA = "0x17D8998")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000371")]
		public bool loop
		{
			[Token(Token = "0x600284B")]
			[Address(RVA = "0x17D8A50", Offset = "0x17D8A50", VA = "0x17D8A50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x17D8A6C", Offset = "0x17D8A6C", VA = "0x17D8A6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool mute
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x17D8A8C", Offset = "0x17D8A8C", VA = "0x17D8A8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x17D8AA8", Offset = "0x17D8AA8", VA = "0x17D8AA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x17D8AC8", Offset = "0x17D8AC8", VA = "0x17D8AC8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6002850")]
			[Address(RVA = "0x17D8AE4", Offset = "0x17D8AE4", VA = "0x17D8AE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public bool isPlaying
		{
			[Token(Token = "0x6002851")]
			[Address(RVA = "0x17D8B00", Offset = "0x17D8B00", VA = "0x17D8B00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x17D8B1C", Offset = "0x17D8B1C", VA = "0x17D8B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x17D7194", Offset = "0x17D7194", VA = "0x17D7194")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x17D8C98", Offset = "0x17D8C98", VA = "0x17D8C98")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x17D74B4", Offset = "0x17D74B4", VA = "0x17D74B4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x17D8CA0", Offset = "0x17D8CA0", VA = "0x17D8CA0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x17D8CA8", Offset = "0x17D8CA8", VA = "0x17D8CA8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x17D7CAC", Offset = "0x17D7CAC", VA = "0x17D7CAC")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x17D4694", Offset = "0x17D4694", VA = "0x17D4694")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x17D8CB0", Offset = "0x17D8CB0", VA = "0x17D8CB0")]
		public void Play()
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x17D8D10", Offset = "0x17D8D10", VA = "0x17D8D10")]
		public void Pause()
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x17D44E4", Offset = "0x17D44E4", VA = "0x17D44E4")]
		public void Stop()
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x17D8D48", Offset = "0x17D8D48", VA = "0x17D8D48")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x17D7778", Offset = "0x17D7778", VA = "0x17D7778")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x17D79B8", Offset = "0x17D79B8", VA = "0x17D79B8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x17D4A38", Offset = "0x17D4A38", VA = "0x17D4A38")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x17D8DA0", Offset = "0x17D8DA0", VA = "0x17D8DA0")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x17D8DCC", Offset = "0x17D8DCC", VA = "0x17D8DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB506C0", Offset = "0xB506C0")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x17D8E5C", Offset = "0x17D8E5C", VA = "0x17D8E5C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x17D4E34", Offset = "0x17D4E34", VA = "0x17D4E34")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x17D4EB0", Offset = "0x17D4EB0", VA = "0x17D4EB0")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x17D4CE4", Offset = "0x17D4CE4", VA = "0x17D4CE4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x17D4B30", Offset = "0x17D4B30", VA = "0x17D4B30")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x17D8EC4", Offset = "0x17D8EC4", VA = "0x17D8EC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50724", Offset = "0xB50724")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x17D8F48", Offset = "0x17D8F48", VA = "0x17D8F48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50788", Offset = "0xB50788")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x17D8FF0", Offset = "0x17D8FF0", VA = "0x17D8FF0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400276A")]
		Random,
		[Token(Token = "0x400276B")]
		Sequential
	}
	[Token(Token = "0x20005E8")]
	public enum FreqHint
	{
		[Token(Token = "0x400276D")]
		None,
		[Token(Token = "0x400276E")]
		Wide,
		[Token(Token = "0x400276F")]
		Narrow
	}
	[Token(Token = "0x20005E9")]
	public enum SoundPriority
	{
		[Token(Token = "0x4002771")]
		VeryLow = -2,
		[Token(Token = "0x4002772")]
		Low,
		[Token(Token = "0x4002773")]
		Default,
		[Token(Token = "0x4002774")]
		High,
		[Token(Token = "0x4002775")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20005EA")]
	public class OSPProps
	{
		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40B98", Offset = "0xB40B98")]
		public bool enableSpatialization;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40BD0", Offset = "0xB40BD0")]
		public bool useFastOverride;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40C08", Offset = "0xB40C08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB40C08", Offset = "0xB40C08")]
		public float gain;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40C5C", Offset = "0xB40C5C")]
		public bool enableInvSquare;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40C94", Offset = "0xB40C94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB40C94", Offset = "0xB40C94")]
		public float volumetric;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40CEC", Offset = "0xB40CEC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB40CEC", Offset = "0xB40CEC")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x17D8860", Offset = "0x17D8860", VA = "0x17D8860")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EB")]
	public class SoundFX
	{
		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40D4C", Offset = "0xB40D4C")]
		public string name;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40D84", Offset = "0xB40D84")]
		public SoundFXNext playback;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40DBC", Offset = "0xB40DBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB40DBC", Offset = "0xB40DBC")]
		public float volume;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40E10", Offset = "0xB40E10")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB40E10", Offset = "0xB40E10")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40E6C", Offset = "0xB40E6C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB40E6C", Offset = "0xB40E6C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40ECC", Offset = "0xB40ECC")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40F04", Offset = "0xB40F04")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40F3C", Offset = "0xB40F3C")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40F74", Offset = "0xB40F74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB40F74", Offset = "0xB40F74")]
		public float spread;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB40FCC", Offset = "0xB40FCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB40FCC", Offset = "0xB40FCC")]
		public float pctChanceToPlay;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB41020", Offset = "0xB41020")]
		public SoundPriority priority;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB41058", Offset = "0xB41058")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB41058", Offset = "0xB41058")]
		public Vector2 delay;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB410B4", Offset = "0xB410B4")]
		public bool looping;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB410EC", Offset = "0xB410EC")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000375")]
		public int Length
		{
			[Token(Token = "0x600286D")]
			[Address(RVA = "0x1049F28", Offset = "0x1049F28", VA = "0x1049F28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000376")]
		public bool IsValid
		{
			[Token(Token = "0x600286E")]
			[Address(RVA = "0x1049F44", Offset = "0x1049F44", VA = "0x1049F44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000377")]
		public SoundGroup Group
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0x1049FE8", Offset = "0x1049FE8", VA = "0x1049FE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002870")]
			[Address(RVA = "0x1049FF0", Offset = "0x1049FF0", VA = "0x1049FF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6002871")]
			[Address(RVA = "0x1049FF8", Offset = "0x1049FF8", VA = "0x1049FF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000379")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6002872")]
			[Address(RVA = "0x104A004", Offset = "0x104A004", VA = "0x104A004")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1049A38", Offset = "0x1049A38", VA = "0x1049A38")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x104A01C", Offset = "0x104A01C", VA = "0x104A01C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x104A0EC", Offset = "0x104A0EC", VA = "0x104A0EC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x104A18C", Offset = "0x104A18C", VA = "0x104A18C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x104A1D4", Offset = "0x104A1D4", VA = "0x104A1D4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x104A2D0", Offset = "0x104A2D0", VA = "0x104A2D0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x104A2DC", Offset = "0x104A2DC", VA = "0x104A2DC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x104A3BC", Offset = "0x104A3BC", VA = "0x104A3BC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x104A4D4", Offset = "0x104A4D4", VA = "0x104A4D4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x104A564", Offset = "0x104A564", VA = "0x104A564")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x104A5FC", Offset = "0x104A5FC", VA = "0x104A5FC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x104A68C", Offset = "0x104A68C", VA = "0x104A68C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x104A71C", Offset = "0x104A71C", VA = "0x104A71C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EC")]
	public class SoundFXRef
	{
		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700037A")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600287F")]
			[Address(RVA = "0x104A798", Offset = "0x104A798", VA = "0x104A798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public string name
		{
			[Token(Token = "0x6002880")]
			[Address(RVA = "0x104A894", Offset = "0x104A894", VA = "0x104A894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002881")]
			[Address(RVA = "0x104A89C", Offset = "0x104A89C", VA = "0x104A89C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public int Length
		{
			[Token(Token = "0x6002883")]
			[Address(RVA = "0x104A8A4", Offset = "0x104A8A4", VA = "0x104A8A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037D")]
		public bool IsValid
		{
			[Token(Token = "0x6002884")]
			[Address(RVA = "0x104A8E8", Offset = "0x104A8E8", VA = "0x104A8E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x104A7C8", Offset = "0x104A7C8", VA = "0x104A7C8")]
		private void Init()
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x104A920", Offset = "0x104A920", VA = "0x104A920")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x104A958", Offset = "0x104A958", VA = "0x104A958")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x104A998", Offset = "0x104A998", VA = "0x104A998")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x104A9E0", Offset = "0x104A9E0", VA = "0x104A9E0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x104AA60", Offset = "0x104AA60", VA = "0x104AA60")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x104AAA0", Offset = "0x104AAA0", VA = "0x104AAA0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x104AAF0", Offset = "0x104AAF0", VA = "0x104AAF0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x104AB28", Offset = "0x104AB28", VA = "0x104AB28")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x104AB68", Offset = "0x104AB68", VA = "0x104AB68")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x104ABA0", Offset = "0x104ABA0", VA = "0x104ABA0")]
		public SoundFXRef()
		{
		}
	}
}
namespace Multiplayer.Player
{
	[Token(Token = "0x20005ED")]
	public class User
	{
		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isBot;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SkinPair skin;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int order;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int colourId;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float playerHeight;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float armSpan;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlatformUser platformUser;

		[Token(Token = "0x600288F")]
		[Address(RVA = "0xBBD140", Offset = "0xBBD140", VA = "0xBBD140")]
		public User()
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0xBBD1AC", Offset = "0xBBD1AC", VA = "0xBBD1AC")]
		public User(int id, string name, ulong matchMakingId, string picLink, PlatformTarget target, int colourId)
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0xBBD284", Offset = "0xBBD284", VA = "0xBBD284")]
		public User(string name, ulong matchMakingId, string picLink)
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0xBBD37C", Offset = "0xBBD37C", VA = "0xBBD37C")]
		public User(string name, PlatformUser platUser)
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0xBBD3D0", Offset = "0xBBD3D0", VA = "0xBBD3D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0xBBD63C", Offset = "0xBBD63C", VA = "0xBBD63C")]
		public bool IsMe()
		{
			return default(bool);
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xBBD6B0", Offset = "0xBBD6B0", VA = "0xBBD6B0")]
		public Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0xBBD34C", Offset = "0xBBD34C", VA = "0xBBD34C")]
		private PlatformTarget GetMultiplayerPlaform()
		{
			return default(PlatformTarget);
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x20005EE")]
	public class Reticle : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DefaultDistance;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseNormal;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ReticleTransform;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_OriginalScale;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x1700037E")]
		public bool UseNormal
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0x10ED974", Offset = "0x10ED974", VA = "0x10ED974")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x10ED97C", Offset = "0x10ED97C", VA = "0x10ED97C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public Transform ReticleTransform
		{
			[Token(Token = "0x6002899")]
			[Address(RVA = "0x10ED988", Offset = "0x10ED988", VA = "0x10ED988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x10ED990", Offset = "0x10ED990", VA = "0x10ED990")]
		private void Awake()
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x10ED9E0", Offset = "0x10ED9E0", VA = "0x10ED9E0")]
		public void Hide()
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x10EDA00", Offset = "0x10EDA00", VA = "0x10EDA00")]
		public void Show()
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x10EDA20", Offset = "0x10EDA20", VA = "0x10EDA20")]
		public float GetDefaultDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x10EDA28", Offset = "0x10EDA28", VA = "0x10EDA28")]
		public void SetPosition(Transform castFrom)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x10EDBD8", Offset = "0x10EDBD8", VA = "0x10EDBD8")]
		public void SetPosition(RaycastHit hit)
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x10EDD90", Offset = "0x10EDD90", VA = "0x10EDD90")]
		public Reticle()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public class SelectionHoverRadial : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A0B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F20", Offset = "0xB36F20")]
		private sealed class <FillSelectionRadial>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionHoverRadial <>4__this;

			[Token(Token = "0x40032ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000595")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003928")]
				[Address(RVA = "0x10EE440", Offset = "0x10EE440", VA = "0x10EE440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000596")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600392A")]
				[Address(RVA = "0x10EE4A8", Offset = "0x10EE4A8", VA = "0x10EE4A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003925")]
			[Address(RVA = "0x10EE228", Offset = "0x10EE228", VA = "0x10EE228")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6003926")]
			[Address(RVA = "0x10EE344", Offset = "0x10EE344", VA = "0x10EE344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003927")]
			[Address(RVA = "0x10EE348", Offset = "0x10EE348", VA = "0x10EE348", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003929")]
			[Address(RVA = "0x10EE448", Offset = "0x10EE448", VA = "0x10EE448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F30", Offset = "0xB36F30")]
		private sealed class <WaitForSelectionRadialToFill>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionHoverRadial <>4__this;

			[Token(Token = "0x17000597")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600392E")]
				[Address(RVA = "0x10EE534", Offset = "0x10EE534", VA = "0x10EE534", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000598")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003930")]
				[Address(RVA = "0x10EE59C", Offset = "0x10EE59C", VA = "0x10EE59C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600392B")]
			[Address(RVA = "0x10EE2C4", Offset = "0x10EE2C4", VA = "0x10EE2C4")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600392C")]
			[Address(RVA = "0x10EE4B0", Offset = "0x10EE4B0", VA = "0x10EE4B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600392D")]
			[Address(RVA = "0x10EE4B4", Offset = "0x10EE4B4", VA = "0x10EE4B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600392F")]
			[Address(RVA = "0x10EE53C", Offset = "0x10EE53C", VA = "0x10EE53C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectionDuration;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_HideOnStart;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Selection;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_IsSelectionRadialActive;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_RadialFilled;

		[Token(Token = "0x17000380")]
		public float SelectionDuration
		{
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x10EDEE8", Offset = "0x10EDEE8", VA = "0x10EDEE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x140000BA")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x10EDDA0", Offset = "0x10EDDA0", VA = "0x10EDDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB507EC", Offset = "0xB507EC")]
			add
			{
			}
			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x10EDE44", Offset = "0x10EDE44", VA = "0x10EDE44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB507FC", Offset = "0xB507FC")]
			remove
			{
			}
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x10EDEF0", Offset = "0x10EDEF0", VA = "0x10EDEF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x10EDFB0", Offset = "0x10EDFB0", VA = "0x10EDFB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x10EE070", Offset = "0x10EE070", VA = "0x10EE070")]
		private void Start()
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x10EE118", Offset = "0x10EE118", VA = "0x10EE118")]
		public void Show()
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x10EE0BC", Offset = "0x10EE0BC", VA = "0x10EE0BC")]
		public void Hide()
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x10EE1B8", Offset = "0x10EE1B8", VA = "0x10EE1B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB5080C", Offset = "0xB5080C")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x10EE254", Offset = "0x10EE254", VA = "0x10EE254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50870", Offset = "0xB50870")]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x10EE2F0", Offset = "0x10EE2F0", VA = "0x10EE2F0")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x10EE160", Offset = "0x10EE160", VA = "0x10EE160")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x10EE32C", Offset = "0x10EE32C", VA = "0x10EE32C")]
		public SelectionHoverRadial()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class SelectionRadial : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A0D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F40", Offset = "0xB36F40")]
		private sealed class <FillSelectionRadial>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x40032F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000599")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003934")]
				[Address(RVA = "0x10EF07C", Offset = "0x10EF07C", VA = "0x10EF07C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003936")]
				[Address(RVA = "0x10EF0E4", Offset = "0x10EF0E4", VA = "0x10EF0E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003931")]
			[Address(RVA = "0x10EEC88", Offset = "0x10EEC88", VA = "0x10EEC88")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6003932")]
			[Address(RVA = "0x10EEEA4", Offset = "0x10EEEA4", VA = "0x10EEEA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003933")]
			[Address(RVA = "0x10EEEA8", Offset = "0x10EEEA8", VA = "0x10EEEA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003935")]
			[Address(RVA = "0x10EF084", Offset = "0x10EF084", VA = "0x10EF084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A0E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F50", Offset = "0xB36F50")]
		private sealed class <WaitForSelectionRadialToFill>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x1700059B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600393A")]
				[Address(RVA = "0x10EF170", Offset = "0x10EF170", VA = "0x10EF170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600393C")]
				[Address(RVA = "0x10EF1D8", Offset = "0x10EF1D8", VA = "0x10EF1D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003937")]
			[Address(RVA = "0x10EED24", Offset = "0x10EED24", VA = "0x10EED24")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003938")]
			[Address(RVA = "0x10EF0EC", Offset = "0x10EF0EC", VA = "0x10EF0EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003939")]
			[Address(RVA = "0x10EF0F0", Offset = "0x10EF0F0", VA = "0x10EF0F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600393B")]
			[Address(RVA = "0x10EF178", Offset = "0x10EF178", VA = "0x10EF178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB411D4", Offset = "0xB411D4")]
		private static SelectionRadial <Primary>k__BackingField;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_SelectionDuration;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_HideOnStart;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Selection;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject selectionObj;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isPrimary;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_IsSelectionRadialActive;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_RadialFilled;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRInteractiveItem hoveredBtn;

		[Token(Token = "0x17000381")]
		public static SelectionRadial Primary
		{
			[Token(Token = "0x60028B0")]
			[Address(RVA = "0x10EE5A4", Offset = "0x10EE5A4", VA = "0x10EE5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB508F4", Offset = "0xB508F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x10EE5F4", Offset = "0x10EE5F4", VA = "0x10EE5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50904", Offset = "0xB50904")]
			private set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public float SelectionDuration
		{
			[Token(Token = "0x60028B2")]
			[Address(RVA = "0x10EE648", Offset = "0x10EE648", VA = "0x10EE648")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x140000BB")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x10ECD8C", Offset = "0x10ECD8C", VA = "0x10ECD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB508D4", Offset = "0xB508D4")]
			add
			{
			}
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x10ED0E4", Offset = "0x10ED0E4", VA = "0x10ED0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB508E4", Offset = "0xB508E4")]
			remove
			{
			}
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x10EE650", Offset = "0x10EE650", VA = "0x10EE650")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x10EE6AC", Offset = "0x10EE6AC", VA = "0x10EE6AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x10EE8C0", Offset = "0x10EE8C0", VA = "0x10EE8C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x10EEAD4", Offset = "0x10EEAD4", VA = "0x10EEAD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x10ED25C", Offset = "0x10ED25C", VA = "0x10ED25C")]
		public void Show()
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x10ED368", Offset = "0x10ED368", VA = "0x10ED368")]
		public void Hide()
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x10EEC18", Offset = "0x10EEC18", VA = "0x10EEC18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50914", Offset = "0xB50914")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x10EECB4", Offset = "0x10EECB4", VA = "0x10EECB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50978", Offset = "0xB50978")]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0x10EED50", Offset = "0x10EED50", VA = "0x10EED50")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x10EED8C", Offset = "0x10EED8C", VA = "0x10EED8C")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x10EEDE4", Offset = "0x10EEDE4", VA = "0x10EEDE4")]
		public void Begin(VRInteractiveItem btn)
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x10EEE3C", Offset = "0x10EEE3C", VA = "0x10EEE3C")]
		public void End()
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x10EEE8C", Offset = "0x10EEE8C", VA = "0x10EEE8C")]
		public SelectionRadial()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public class SelectionSlider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A0F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F60", Offset = "0xB36F60")]
		private sealed class <WaitForBarToFill>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x1700059D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003940")]
				[Address(RVA = "0x10EFC9C", Offset = "0x10EFC9C", VA = "0x10EFC9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003942")]
				[Address(RVA = "0x10EFD04", Offset = "0x10EFD04", VA = "0x10EFD04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600393D")]
			[Address(RVA = "0x10EF664", Offset = "0x10EF664", VA = "0x10EF664")]
			[DebuggerHidden]
			public <WaitForBarToFill>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600393E")]
			[Address(RVA = "0x10EFB4C", Offset = "0x10EFB4C", VA = "0x10EFB4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600393F")]
			[Address(RVA = "0x10EFB50", Offset = "0x10EFB50", VA = "0x10EFB50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003941")]
			[Address(RVA = "0x10EFCA4", Offset = "0x10EFCA4", VA = "0x10EFCA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F70", Offset = "0xB36F70")]
		private sealed class <FillBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x40032FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fillTime>5__2;

			[Token(Token = "0x1700059F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003946")]
				[Address(RVA = "0x10EFADC", Offset = "0x10EFADC", VA = "0x10EFADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003948")]
				[Address(RVA = "0x10EFB44", Offset = "0x10EFB44", VA = "0x10EFB44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003943")]
			[Address(RVA = "0x10EF700", Offset = "0x10EF700", VA = "0x10EF700")]
			[DebuggerHidden]
			public <FillBar>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003944")]
			[Address(RVA = "0x10EF94C", Offset = "0x10EF94C", VA = "0x10EF94C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003945")]
			[Address(RVA = "0x10EF950", Offset = "0x10EF950", VA = "0x10EF950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003947")]
			[Address(RVA = "0x10EFAE4", Offset = "0x10EFAE4", VA = "0x10EFAE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Duration;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip m_OnOverClip;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_OnFilledClip;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_BarCanvas;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UIFader m_UIFader;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_DisableOnBarFill;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool m_DisappearOnBarFill;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool m_BarFilled;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool m_GazeOver;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_Timer;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine m_FillBarRoutine;

		[Token(Token = "0x40027C9")]
		private const string k_SliderMaterialPropertyName = "_SliderValue";

		[Token(Token = "0x140000BC")]
		public event Action OnBarFilled
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x10EF1E0", Offset = "0x10EF1E0", VA = "0x10EF1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB509DC", Offset = "0xB509DC")]
			add
			{
			}
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x10EF284", Offset = "0x10EF284", VA = "0x10EF284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB509EC", Offset = "0xB509EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x10EF328", Offset = "0x10EF328", VA = "0x10EF328")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x10EF440", Offset = "0x10EF440", VA = "0x10EF440")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x10EF558", Offset = "0x10EF558", VA = "0x10EF558")]
		private void Update()
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x10EF5F4", Offset = "0x10EF5F4", VA = "0x10EF5F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB509FC", Offset = "0xB509FC")]
		public IEnumerator WaitForBarToFill()
		{
			return null;
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x10EF690", Offset = "0x10EF690", VA = "0x10EF690")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50A60", Offset = "0xB50A60")]
		private IEnumerator FillBar()
		{
			return null;
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x10EF72C", Offset = "0x10EF72C", VA = "0x10EF72C")]
		private void SetSliderValue(float sliderValue)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x10EF83C", Offset = "0x10EF83C", VA = "0x10EF83C")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x10EF878", Offset = "0x10EF878", VA = "0x10EF878")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x10EF8B4", Offset = "0x10EF8B4", VA = "0x10EF8B4")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x10EF8FC", Offset = "0x10EF8FC", VA = "0x10EF8FC")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x10EF93C", Offset = "0x10EF93C", VA = "0x10EF93C")]
		public SelectionSlider()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class UIFader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F80", Offset = "0xB36F80")]
		private sealed class <WaitForFadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170005A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600394C")]
				[Address(RVA = "0x10F0E28", Offset = "0x10F0E28", VA = "0x10F0E28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600394E")]
				[Address(RVA = "0x10F0E90", Offset = "0x10F0E90", VA = "0x10F0E90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003949")]
			[Address(RVA = "0x10F0020", Offset = "0x10F0020", VA = "0x10F0020")]
			[DebuggerHidden]
			public <WaitForFadeIn>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600394A")]
			[Address(RVA = "0x10F0D98", Offset = "0x10F0D98", VA = "0x10F0D98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600394B")]
			[Address(RVA = "0x10F0D9C", Offset = "0x10F0D9C", VA = "0x10F0D9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600394D")]
			[Address(RVA = "0x10F0E30", Offset = "0x10F0E30", VA = "0x10F0E30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36F90", Offset = "0xB36F90")]
		private sealed class <InteruptAndFadeIn>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170005A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003952")]
				[Address(RVA = "0x10F0C34", Offset = "0x10F0C34", VA = "0x10F0C34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003954")]
				[Address(RVA = "0x10F0C9C", Offset = "0x10F0C9C", VA = "0x10F0C9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600394F")]
			[Address(RVA = "0x10F00BC", Offset = "0x10F00BC", VA = "0x10F00BC")]
			[DebuggerHidden]
			public <InteruptAndFadeIn>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6003950")]
			[Address(RVA = "0x10F0BB0", Offset = "0x10F0BB0", VA = "0x10F0BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003951")]
			[Address(RVA = "0x10F0BB4", Offset = "0x10F0BB4", VA = "0x10F0BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003953")]
			[Address(RVA = "0x10F0C3C", Offset = "0x10F0C3C", VA = "0x10F0C3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36FA0", Offset = "0xB36FA0")]
		private sealed class <CheckAndFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170005A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003958")]
				[Address(RVA = "0x10F0620", Offset = "0x10F0620", VA = "0x10F0620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600395A")]
				[Address(RVA = "0x10F0688", Offset = "0x10F0688", VA = "0x10F0688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003955")]
			[Address(RVA = "0x10F0158", Offset = "0x10F0158", VA = "0x10F0158")]
			[DebuggerHidden]
			public <CheckAndFadeIn>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003956")]
			[Address(RVA = "0x10F0598", Offset = "0x10F0598", VA = "0x10F0598", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003957")]
			[Address(RVA = "0x10F059C", Offset = "0x10F059C", VA = "0x10F059C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003959")]
			[Address(RVA = "0x10F0628", Offset = "0x10F0628", VA = "0x10F0628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36FB0", Offset = "0xB36FB0")]
		private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400330A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x400330B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lowestAlpha>5__2;

			[Token(Token = "0x170005A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600395E")]
				[Address(RVA = "0x10F0934", Offset = "0x10F0934", VA = "0x10F0934", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003960")]
				[Address(RVA = "0x10F099C", Offset = "0x10F099C", VA = "0x10F099C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600395B")]
			[Address(RVA = "0x10F01F4", Offset = "0x10F01F4", VA = "0x10F01F4")]
			[DebuggerHidden]
			public <FadeIn>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600395C")]
			[Address(RVA = "0x10F0788", Offset = "0x10F0788", VA = "0x10F0788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600395D")]
			[Address(RVA = "0x10F078C", Offset = "0x10F078C", VA = "0x10F078C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600395F")]
			[Address(RVA = "0x10F093C", Offset = "0x10F093C", VA = "0x10F093C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36FC0", Offset = "0xB36FC0")]
		private sealed class <WaitForFadeOut>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400330C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400330D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400330E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170005A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003964")]
				[Address(RVA = "0x10F0F28", Offset = "0x10F0F28", VA = "0x10F0F28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003966")]
				[Address(RVA = "0x10F0F90", Offset = "0x10F0F90", VA = "0x10F0F90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003961")]
			[Address(RVA = "0x10F0290", Offset = "0x10F0290", VA = "0x10F0290")]
			[DebuggerHidden]
			public <WaitForFadeOut>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6003962")]
			[Address(RVA = "0x10F0E98", Offset = "0x10F0E98", VA = "0x10F0E98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003963")]
			[Address(RVA = "0x10F0E9C", Offset = "0x10F0E9C", VA = "0x10F0E9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003965")]
			[Address(RVA = "0x10F0F30", Offset = "0x10F0F30", VA = "0x10F0F30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36FD0", Offset = "0xB36FD0")]
		private sealed class <InteruptAndFadeOut>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400330F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170005AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600396A")]
				[Address(RVA = "0x10F0D28", Offset = "0x10F0D28", VA = "0x10F0D28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600396C")]
				[Address(RVA = "0x10F0D90", Offset = "0x10F0D90", VA = "0x10F0D90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003967")]
			[Address(RVA = "0x10F032C", Offset = "0x10F032C", VA = "0x10F032C")]
			[DebuggerHidden]
			public <InteruptAndFadeOut>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6003968")]
			[Address(RVA = "0x10F0CA4", Offset = "0x10F0CA4", VA = "0x10F0CA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003969")]
			[Address(RVA = "0x10F0CA8", Offset = "0x10F0CA8", VA = "0x10F0CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600396B")]
			[Address(RVA = "0x10F0D30", Offset = "0x10F0D30", VA = "0x10F0D30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A17")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36FE0", Offset = "0xB36FE0")]
		private sealed class <CheckAndFadeOut>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170005AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003970")]
				[Address(RVA = "0x10F0718", Offset = "0x10F0718", VA = "0x10F0718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003972")]
				[Address(RVA = "0x10F0780", Offset = "0x10F0780", VA = "0x10F0780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600396D")]
			[Address(RVA = "0x10F03C8", Offset = "0x10F03C8", VA = "0x10F03C8")]
			[DebuggerHidden]
			public <CheckAndFadeOut>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600396E")]
			[Address(RVA = "0x10F0690", Offset = "0x10F0690", VA = "0x10F0690", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600396F")]
			[Address(RVA = "0x10F0694", Offset = "0x10F0694", VA = "0x10F0694", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003971")]
			[Address(RVA = "0x10F0720", Offset = "0x10F0720", VA = "0x10F0720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36FF0", Offset = "0xB36FF0")]
		private sealed class <FadeOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4003318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <highestAlpha>5__2;

			[Token(Token = "0x170005AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003976")]
				[Address(RVA = "0x10F0B40", Offset = "0x10F0B40", VA = "0x10F0B40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003978")]
				[Address(RVA = "0x10F0BA8", Offset = "0x10F0BA8", VA = "0x10F0BA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003973")]
			[Address(RVA = "0x10F0464", Offset = "0x10F0464", VA = "0x10F0464")]
			[DebuggerHidden]
			public <FadeOut>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6003974")]
			[Address(RVA = "0x10F09A4", Offset = "0x10F09A4", VA = "0x10F09A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003975")]
			[Address(RVA = "0x10F09A8", Offset = "0x10F09A8", VA = "0x10F09A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003977")]
			[Address(RVA = "0x10F0B48", Offset = "0x10F0B48", VA = "0x10F0B48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FadeSpeed;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup[] m_GroupsToFade;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Fading;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41344", Offset = "0xB41344")]
		private bool <Visible>k__BackingField;

		[Token(Token = "0x17000383")]
		public bool Visible
		{
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x10EFF9C", Offset = "0x10EFF9C", VA = "0x10EFF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50B04", Offset = "0xB50B04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x10EFFA4", Offset = "0x10EFFA4", VA = "0x10EFFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50B14", Offset = "0xB50B14")]
			private set
			{
			}
		}

		[Token(Token = "0x140000BD")]
		public event Action OnFadeInComplete
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x10EFD0C", Offset = "0x10EFD0C", VA = "0x10EFD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50AC4", Offset = "0xB50AC4")]
			add
			{
			}
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x10EFDB0", Offset = "0x10EFDB0", VA = "0x10EFDB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50AD4", Offset = "0xB50AD4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BE")]
		public event Action OnFadeOutComplete
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x10EFE54", Offset = "0x10EFE54", VA = "0x10EFE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50AE4", Offset = "0xB50AE4")]
			add
			{
			}
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x10EFEF8", Offset = "0x10EFEF8", VA = "0x10EFEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50AF4", Offset = "0xB50AF4")]
			remove
			{
			}
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x10EFFB0", Offset = "0x10EFFB0", VA = "0x10EFFB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50B24", Offset = "0xB50B24")]
		public IEnumerator WaitForFadeIn()
		{
			return null;
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x10F004C", Offset = "0x10F004C", VA = "0x10F004C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50B88", Offset = "0xB50B88")]
		public IEnumerator InteruptAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x10F00E8", Offset = "0x10F00E8", VA = "0x10F00E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50BEC", Offset = "0xB50BEC")]
		public IEnumerator CheckAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x10F0184", Offset = "0x10F0184", VA = "0x10F0184")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50C50", Offset = "0xB50C50")]
		public IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x10F0220", Offset = "0x10F0220", VA = "0x10F0220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50CB4", Offset = "0xB50CB4")]
		public IEnumerator WaitForFadeOut()
		{
			return null;
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x10F02BC", Offset = "0x10F02BC", VA = "0x10F02BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50D18", Offset = "0xB50D18")]
		public IEnumerator InteruptAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x10F0358", Offset = "0x10F0358", VA = "0x10F0358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50D7C", Offset = "0xB50D7C")]
		public IEnumerator CheckAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x10F03F4", Offset = "0x10F03F4", VA = "0x10F03F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50DE0", Offset = "0xB50DE0")]
		public IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x10F0490", Offset = "0x10F0490", VA = "0x10F0490")]
		public void SetVisible()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x10F0514", Offset = "0x10F0514", VA = "0x10F0514")]
		public void SetInvisible()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x10F0588", Offset = "0x10F0588", VA = "0x10F0588")]
		public UIFader()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public class UITint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_Tint;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB41364", Offset = "0xB41364")]
		[SerializeField]
		private float m_TintPercent;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] m_ImagesToTint;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x10F0F98", Offset = "0x10F0F98", VA = "0x10F0F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x10F1058", Offset = "0x10F1058", VA = "0x10F1058")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x10F1118", Offset = "0x10F1118", VA = "0x10F1118")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x10F120C", Offset = "0x10F120C", VA = "0x10F120C")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x10F1300", Offset = "0x10F1300", VA = "0x10F1300")]
		public UITint()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public class VRCameraFade : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37000", Offset = "0xB37000")]
		private sealed class <FadeWhenReadyRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400331A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400331B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x400331C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool toBlack;

			[Token(Token = "0x400331D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x400331E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x170005B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600397C")]
				[Address(RVA = "0x10F2694", Offset = "0x10F2694", VA = "0x10F2694", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600397E")]
				[Address(RVA = "0x10F26FC", Offset = "0x10F26FC", VA = "0x10F26FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003979")]
			[Address(RVA = "0x10F1AD4", Offset = "0x10F1AD4", VA = "0x10F1AD4")]
			[DebuggerHidden]
			public <FadeWhenReadyRoutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600397A")]
			[Address(RVA = "0x10F25A4", Offset = "0x10F25A4", VA = "0x10F25A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600397B")]
			[Address(RVA = "0x10F25A8", Offset = "0x10F25A8", VA = "0x10F25A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600397D")]
			[Address(RVA = "0x10F269C", Offset = "0x10F269C", VA = "0x10F269C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37010", Offset = "0xB37010")]
		private sealed class <BeginFadeOut>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400331F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4003322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x170005B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003982")]
				[Address(RVA = "0x10F23B0", Offset = "0x10F23B0", VA = "0x10F23B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003984")]
				[Address(RVA = "0x10F2418", Offset = "0x10F2418", VA = "0x10F2418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600397F")]
			[Address(RVA = "0x10F1B00", Offset = "0x10F1B00", VA = "0x10F1B00")]
			[DebuggerHidden]
			public <BeginFadeOut>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003980")]
			[Address(RVA = "0x10F229C", Offset = "0x10F229C", VA = "0x10F229C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003981")]
			[Address(RVA = "0x10F22A0", Offset = "0x10F22A0", VA = "0x10F22A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003983")]
			[Address(RVA = "0x10F23B8", Offset = "0x10F23B8", VA = "0x10F23B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A1B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37020", Offset = "0xB37020")]
		private sealed class <BeginFadeOut>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4003326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4003327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x170005B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003988")]
				[Address(RVA = "0x10F2534", Offset = "0x10F2534", VA = "0x10F2534", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600398A")]
				[Address(RVA = "0x10F259C", Offset = "0x10F259C", VA = "0x10F259C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003985")]
			[Address(RVA = "0x10F1BC0", Offset = "0x10F1BC0", VA = "0x10F1BC0")]
			[DebuggerHidden]
			public <BeginFadeOut>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6003986")]
			[Address(RVA = "0x10F2420", Offset = "0x10F2420", VA = "0x10F2420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003987")]
			[Address(RVA = "0x10F2424", Offset = "0x10F2424", VA = "0x10F2424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003989")]
			[Address(RVA = "0x10F253C", Offset = "0x10F253C", VA = "0x10F253C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37030", Offset = "0xB37030")]
		private sealed class <BeginFadeIn>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400332A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x400332B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x170005B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600398E")]
				[Address(RVA = "0x10F20A8", Offset = "0x10F20A8", VA = "0x10F20A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003990")]
				[Address(RVA = "0x10F2110", Offset = "0x10F2110", VA = "0x10F2110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600398B")]
			[Address(RVA = "0x10F1C70", Offset = "0x10F1C70", VA = "0x10F1C70")]
			[DebuggerHidden]
			public <BeginFadeIn>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600398C")]
			[Address(RVA = "0x10F1F94", Offset = "0x10F1F94", VA = "0x10F1F94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600398D")]
			[Address(RVA = "0x10F1F98", Offset = "0x10F1F98", VA = "0x10F1F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600398F")]
			[Address(RVA = "0x10F20B0", Offset = "0x10F20B0", VA = "0x10F20B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37040", Offset = "0xB37040")]
		private sealed class <BeginFadeIn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400332C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400332D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400332E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x400332F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4003330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x170005B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003994")]
				[Address(RVA = "0x10F222C", Offset = "0x10F222C", VA = "0x10F222C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003996")]
				[Address(RVA = "0x10F2294", Offset = "0x10F2294", VA = "0x10F2294", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003991")]
			[Address(RVA = "0x10F1D30", Offset = "0x10F1D30", VA = "0x10F1D30")]
			[DebuggerHidden]
			public <BeginFadeIn>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6003992")]
			[Address(RVA = "0x10F2118", Offset = "0x10F2118", VA = "0x10F2118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003993")]
			[Address(RVA = "0x10F211C", Offset = "0x10F211C", VA = "0x10F211C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003995")]
			[Address(RVA = "0x10F2234", Offset = "0x10F2234", VA = "0x10F2234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000A1E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37050", Offset = "0xB37050")]
		private sealed class <BeginFade>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4003334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x4003335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x4003336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4003337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__2;

			[Token(Token = "0x170005BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600399A")]
				[Address(RVA = "0x10F1F24", Offset = "0x10F1F24", VA = "0x10F1F24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600399C")]
				[Address(RVA = "0x10F1F8C", Offset = "0x10F1F8C", VA = "0x10F1F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003997")]
			[Address(RVA = "0x10F1D5C", Offset = "0x10F1D5C", VA = "0x10F1D5C")]
			[DebuggerHidden]
			public <BeginFade>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6003998")]
			[Address(RVA = "0x10F1DC4", Offset = "0x10F1DC4", VA = "0x10F1DC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003999")]
			[Address(RVA = "0x10F1DC8", Offset = "0x10F1DC8", VA = "0x10F1DC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600399B")]
			[Address(RVA = "0x10F1F2C", Offset = "0x10F1F2C", VA = "0x10F1F2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB413D4", Offset = "0xB413D4")]
		private static VRCameraFade <Primary>k__BackingField;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_FadeImage;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixerSnapshot m_DefaultSnapshot;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixerSnapshot m_FadedSnapshot;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FadeInOnSceneLoad;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_FadeInOnStart;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[SerializeField]
		private bool _isPrimary;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		private bool m_IsFading;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_FadeStartTime;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_FadeOutColor;

		[Token(Token = "0x17000384")]
		public static VRCameraFade Primary
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x10F1458", Offset = "0x10F1458", VA = "0x10F1458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50E64", Offset = "0xB50E64")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x10F14A8", Offset = "0x10F14A8", VA = "0x10F14A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50E74", Offset = "0xB50E74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public bool IsFading
		{
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x10F14FC", Offset = "0x10F14FC", VA = "0x10F14FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000BF")]
		public event Action OnFadeComplete
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0x10F1310", Offset = "0x10F1310", VA = "0x10F1310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50E44", Offset = "0xB50E44")]
			add
			{
			}
			[Token(Token = "0x60028E4")]
			[Address(RVA = "0x10F13B4", Offset = "0x10F13B4", VA = "0x10F13B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB50E54", Offset = "0xB50E54")]
			remove
			{
			}
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x10F1504", Offset = "0x10F1504", VA = "0x10F1504")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x10F15A4", Offset = "0x10F15A4", VA = "0x10F15A4")]
		public void SetAsPrimary()
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x10F15F8", Offset = "0x10F15F8", VA = "0x10F15F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x10F16A4", Offset = "0x10F16A4", VA = "0x10F16A4")]
		private void OnLevelWasLoaded()
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x10F1744", Offset = "0x10F1744", VA = "0x10F1744")]
		public void FadeOut(bool fadeAudio)
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x10F1750", Offset = "0x10F1750", VA = "0x10F1750")]
		public void FadeOut(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x10F1698", Offset = "0x10F1698", VA = "0x10F1698")]
		public void FadeIn(bool fadeAudio)
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x10F1910", Offset = "0x10F1910", VA = "0x10F1910")]
		public void FadeIn(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x10F1A08", Offset = "0x10F1A08", VA = "0x10F1A08")]
		public void FadeWhenReady(bool toBlack, [Optional] Action callback, float duration = 2f)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x10F1A38", Offset = "0x10F1A38", VA = "0x10F1A38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50E84", Offset = "0xB50E84")]
		public IEnumerator FadeWhenReadyRoutine(bool toBlack, [Optional] Action callback, float duration = 2f)
		{
			return null;
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x10ED624", Offset = "0x10ED624", VA = "0x10ED624")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50EE8", Offset = "0xB50EE8")]
		public IEnumerator BeginFadeOut(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x10F1B2C", Offset = "0x10F1B2C", VA = "0x10F1B2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50F4C", Offset = "0xB50F4C")]
		public IEnumerator BeginFadeOut(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x10F1BEC", Offset = "0x10F1BEC", VA = "0x10F1BEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB50FB0", Offset = "0xB50FB0")]
		public IEnumerator BeginFadeIn(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x10F1C9C", Offset = "0x10F1C9C", VA = "0x10F1C9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB51014", Offset = "0xB51014")]
		public IEnumerator BeginFadeIn(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x10F1848", Offset = "0x10F1848", VA = "0x10F1848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB51078", Offset = "0xB51078")]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
		{
			return null;
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x10F1D88", Offset = "0x10F1D88", VA = "0x10F1D88")]
		public VRCameraFade()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class VRCameraUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas m_Canvas;

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x10F2704", Offset = "0x10F2704", VA = "0x10F2704")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x10F2750", Offset = "0x10F2750", VA = "0x10F2750")]
		public VRCameraUI()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public class VREyeRaycaster : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000A1F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37060", Offset = "0xB37060")]
		private sealed class <>c
		{
			[Token(Token = "0x4003338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UiCasterOverride> <>9__25_0;

			[Token(Token = "0x600399E")]
			[Address(RVA = "0x10F423C", Offset = "0x10F423C", VA = "0x10F423C")]
			public <>c()
			{
			}

			[Token(Token = "0x600399F")]
			[Address(RVA = "0x10F4244", Offset = "0x10F4244", VA = "0x10F4244")]
			internal bool <EyeRaycast>b__25_0(UiCasterOverride p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LineRenderer m_LineRenderer;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LayerMask m_ExclusionLayers;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VRInput m_VrInput;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_ShowDebugRay;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_DebugRayLength;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_DebugRayDuration;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_RayLength;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRInteractiveItem m_CurrentInteractible;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRInteractiveItem m_LastInteractible;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_HoverInteractable;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<UiCasterOverride> m_CasterOverrides;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color red;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GradientColorKey[] colorKeys;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GradientAlphaKey[] alphaKeys;

		[Token(Token = "0x17000386")]
		public VRInteractiveItem CurrentInteractible
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x10F28A0", Offset = "0x10F28A0", VA = "0x10F28A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public static bool IsOverInteractable
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x10F28A8", Offset = "0x10F28A8", VA = "0x10F28A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000C0")]
		public event Action<RaycastHit> OnRaycasthit
		{
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0x10F2758", Offset = "0x10F2758", VA = "0x10F2758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB510DC", Offset = "0xB510DC")]
			add
			{
			}
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0x10F27FC", Offset = "0x10F27FC", VA = "0x10F27FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB510EC", Offset = "0xB510EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x10F28F8", Offset = "0x10F28F8", VA = "0x10F28F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x10F2B64", Offset = "0x10F2B64", VA = "0x10F2B64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x10F2DD0", Offset = "0x10F2DD0", VA = "0x10F2DD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x10F3760", Offset = "0x10F3760", VA = "0x10F3760")]
		public static void AddOverride(UiCasterOverride package)
		{
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x10F3814", Offset = "0x10F3814", VA = "0x10F3814")]
		public static void RemoveOverride(UiCasterOverride package)
		{
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x10F2DD4", Offset = "0x10F2DD4", VA = "0x10F2DD4")]
		private void EyeRaycast()
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x10F3910", Offset = "0x10F3910", VA = "0x10F3910")]
		private void SetSelectionRadial(bool selecting)
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x10F3B20", Offset = "0x10F3B20", VA = "0x10F3B20")]
		private void SetLine(LineRenderer line, float dist)
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x10F3A64", Offset = "0x10F3A64", VA = "0x10F3A64")]
		private void DeactiveLastInteractible()
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x10F3ED0", Offset = "0x10F3ED0", VA = "0x10F3ED0")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x10F3F80", Offset = "0x10F3F80", VA = "0x10F3F80")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x10F401C", Offset = "0x10F401C", VA = "0x10F401C")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x10F40B8", Offset = "0x10F40B8", VA = "0x10F40B8")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x10F4168", Offset = "0x10F4168", VA = "0x10F4168")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class VRInput : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A20")]
		public enum SwipeDirection
		{
			[Token(Token = "0x400333B")]
			NONE,
			[Token(Token = "0x400333C")]
			UP,
			[Token(Token = "0x400333D")]
			DOWN,
			[Token(Token = "0x400333E")]
			LEFT,
			[Token(Token = "0x400333F")]
			RIGHT
		}

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DoubleClickTime;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_SwipeWidth;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isPrimary;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 m_MouseDownPosition;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 m_MouseUpPosition;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_LastMouseUpTime;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_LastHorizontalValue;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_LastVerticalValue;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB415A4", Offset = "0xB415A4")]
		private static VRInput <Primary>k__BackingField;

		[Token(Token = "0x17000388")]
		public float DoubleClickTime
		{
			[Token(Token = "0x6002918")]
			[Address(RVA = "0x10F4588", Offset = "0x10F4588", VA = "0x10F4588")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000389")]
		public static VRInput Primary
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0x10F4590", Offset = "0x10F4590", VA = "0x10F4590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB511BC", Offset = "0xB511BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600291A")]
			[Address(RVA = "0x10F45E0", Offset = "0x10F45E0", VA = "0x10F45E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB511CC", Offset = "0xB511CC")]
			private set
			{
			}
		}

		[Token(Token = "0x140000C1")]
		public static event Action<SwipeDirection> OnSwipe
		{
			[Token(Token = "0x600290C")]
			[Address(RVA = "0x10F42B0", Offset = "0x10F42B0", VA = "0x10F42B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB510FC", Offset = "0xB510FC")]
			add
			{
			}
			[Token(Token = "0x600290D")]
			[Address(RVA = "0x10F4364", Offset = "0x10F4364", VA = "0x10F4364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5110C", Offset = "0xB5110C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C2")]
		public static event Action OnClick
		{
			[Token(Token = "0x600290E")]
			[Address(RVA = "0x10F29F4", Offset = "0x10F29F4", VA = "0x10F29F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5111C", Offset = "0xB5111C")]
			add
			{
			}
			[Token(Token = "0x600290F")]
			[Address(RVA = "0x10F2C60", Offset = "0x10F2C60", VA = "0x10F2C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5112C", Offset = "0xB5112C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C3")]
		public static event Action OnDown
		{
			[Token(Token = "0x6002910")]
			[Address(RVA = "0x10EE750", Offset = "0x10EE750", VA = "0x10EE750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5113C", Offset = "0xB5113C")]
			add
			{
			}
			[Token(Token = "0x6002911")]
			[Address(RVA = "0x10EE964", Offset = "0x10EE964", VA = "0x10EE964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5114C", Offset = "0xB5114C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C4")]
		public static event Action OnUp
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0x10EE808", Offset = "0x10EE808", VA = "0x10EE808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5115C", Offset = "0xB5115C")]
			add
			{
			}
			[Token(Token = "0x6002913")]
			[Address(RVA = "0x10EEA1C", Offset = "0x10EEA1C", VA = "0x10EEA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5116C", Offset = "0xB5116C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C5")]
		public static event Action OnDoubleClick
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x10F2AAC", Offset = "0x10F2AAC", VA = "0x10F2AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5117C", Offset = "0xB5117C")]
			add
			{
			}
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x10F2D18", Offset = "0x10F2D18", VA = "0x10F2D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5118C", Offset = "0xB5118C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C6")]
		public static event Action OnCancel
		{
			[Token(Token = "0x6002916")]
			[Address(RVA = "0x10F4418", Offset = "0x10F4418", VA = "0x10F4418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5119C", Offset = "0xB5119C")]
			add
			{
			}
			[Token(Token = "0x6002917")]
			[Address(RVA = "0x10F44D0", Offset = "0x10F44D0", VA = "0x10F44D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB511AC", Offset = "0xB511AC")]
			remove
			{
			}
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x10F4634", Offset = "0x10F4634", VA = "0x10F4634")]
		private void Update()
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x10F48F0", Offset = "0x10F48F0", VA = "0x10F48F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x10F4638", Offset = "0x10F4638", VA = "0x10F4638")]
		private void CheckInput()
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x10F494C", Offset = "0x10F494C", VA = "0x10F494C")]
		private SwipeDirection DetectSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x10F4A88", Offset = "0x10F4A88", VA = "0x10F4A88")]
		private SwipeDirection DetectKeyboardEmulatedSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x10F4BB8", Offset = "0x10F4BB8", VA = "0x10F4BB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x10F4C2C", Offset = "0x10F4C2C", VA = "0x10F4C2C")]
		public VRInput()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class VRInteractiveItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool m_IsOver;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VRInteractiveItem> _list;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Navigation _navigation;

		[Token(Token = "0x1700038A")]
		public bool IsOver
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x10F52AC", Offset = "0x10F52AC", VA = "0x10F52AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000C7")]
		public event Action OnOver
		{
			[Token(Token = "0x6002922")]
			[Address(RVA = "0x10ECC44", Offset = "0x10ECC44", VA = "0x10ECC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB511DC", Offset = "0xB511DC")]
			add
			{
			}
			[Token(Token = "0x6002923")]
			[Address(RVA = "0x10ECF9C", Offset = "0x10ECF9C", VA = "0x10ECF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB511EC", Offset = "0xB511EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C8")]
		public event Action OnOut
		{
			[Token(Token = "0x6002924")]
			[Address(RVA = "0x10ECCE8", Offset = "0x10ECCE8", VA = "0x10ECCE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB511FC", Offset = "0xB511FC")]
			add
			{
			}
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x10ED040", Offset = "0x10ED040", VA = "0x10ED040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5120C", Offset = "0xB5120C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C9")]
		public event Action OnClick
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x10F4C44", Offset = "0x10F4C44", VA = "0x10F4C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5121C", Offset = "0xB5121C")]
			add
			{
			}
			[Token(Token = "0x6002927")]
			[Address(RVA = "0x10F4CE8", Offset = "0x10F4CE8", VA = "0x10F4CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5122C", Offset = "0xB5122C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CA")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x6002928")]
			[Address(RVA = "0x10F4D8C", Offset = "0x10F4D8C", VA = "0x10F4D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5123C", Offset = "0xB5123C")]
			add
			{
			}
			[Token(Token = "0x6002929")]
			[Address(RVA = "0x10F4E30", Offset = "0x10F4E30", VA = "0x10F4E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5124C", Offset = "0xB5124C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CB")]
		public event Action OnUp
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0x10F4ED4", Offset = "0x10F4ED4", VA = "0x10F4ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5125C", Offset = "0xB5125C")]
			add
			{
			}
			[Token(Token = "0x600292B")]
			[Address(RVA = "0x10F4F78", Offset = "0x10F4F78", VA = "0x10F4F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5126C", Offset = "0xB5126C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CC")]
		public event Action OnDown
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x10F501C", Offset = "0x10F501C", VA = "0x10F501C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5127C", Offset = "0xB5127C")]
			add
			{
			}
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x10F50C0", Offset = "0x10F50C0", VA = "0x10F50C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5128C", Offset = "0xB5128C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CD")]
		public event Action<RaycastHit> OnRaycastHit
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x10F5164", Offset = "0x10F5164", VA = "0x10F5164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5129C", Offset = "0xB5129C")]
			add
			{
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x10F5208", Offset = "0x10F5208", VA = "0x10F5208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB512AC", Offset = "0xB512AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x10F3B00", Offset = "0x10F3B00", VA = "0x10F3B00")]
		public void Over()
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x10F3EB4", Offset = "0x10F3EB4", VA = "0x10F3EB4")]
		public void Out()
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x10EF068", Offset = "0x10EF068", VA = "0x10EF068")]
		public void Click()
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x10F4154", Offset = "0x10F4154", VA = "0x10F4154")]
		public void DoubleClick()
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x10F3F6C", Offset = "0x10F3F6C", VA = "0x10F3F6C")]
		public void Up()
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x10EF054", Offset = "0x10EF054", VA = "0x10EF054")]
		public void Down()
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x10F3880", Offset = "0x10F3880", VA = "0x10F3880")]
		public void RaycastHit(RaycastHit hit)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x10F52B4", Offset = "0x10F52B4", VA = "0x10F52B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x10F5338", Offset = "0x10F5338", VA = "0x10F5338")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x10F53BC", Offset = "0x10F53BC", VA = "0x10F53BC")]
		public static VRInteractiveItem FindBestInitialTarget()
		{
			return null;
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x10F550C", Offset = "0x10F550C", VA = "0x10F550C")]
		public bool IsInteractable()
		{
			return default(bool);
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x10F5514", Offset = "0x10F5514", VA = "0x10F5514")]
		public VRInteractiveItem FindNextNearest(Vector3 dir)
		{
			return null;
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x10F5A18", Offset = "0x10F5A18", VA = "0x10F5A18")]
		private static Vector3 GetPointOnRectEdge(RectTransform rect, Vector2 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x10F5C38", Offset = "0x10F5C38", VA = "0x10F5C38")]
		public VRInteractiveItem()
		{
		}
	}
}
namespace VRStandardAssets.Menu
{
	[Token(Token = "0x20005F9")]
	public class MenuButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37070", Offset = "0xB37070")]
		private sealed class <ActivateButton>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuButton <>4__this;

			[Token(Token = "0x170005BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60039A3")]
				[Address(RVA = "0x10ED6A8", Offset = "0x10ED6A8", VA = "0x10ED6A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60039A5")]
				[Address(RVA = "0x10ED710", Offset = "0x10ED710", VA = "0x10ED710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60039A0")]
			[Address(RVA = "0x10ED458", Offset = "0x10ED458", VA = "0x10ED458")]
			[DebuggerHidden]
			public <ActivateButton>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60039A1")]
			[Address(RVA = "0x10ED48C", Offset = "0x10ED48C", VA = "0x10ED48C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60039A2")]
			[Address(RVA = "0x10ED490", Offset = "0x10ED490", VA = "0x10ED490", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60039A4")]
			[Address(RVA = "0x10ED6B0", Offset = "0x10ED6B0", VA = "0x10ED6B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_SceneToLoad;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_GazeOver;

		[Token(Token = "0x140000CE")]
		public event Action<MenuButton> OnButtonSelected
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x10EC990", Offset = "0x10EC990", VA = "0x10EC990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB512BC", Offset = "0xB512BC")]
			add
			{
			}
			[Token(Token = "0x6002941")]
			[Address(RVA = "0x10ECA34", Offset = "0x10ECA34", VA = "0x10ECA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB512CC", Offset = "0xB512CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x10ECAD8", Offset = "0x10ECAD8", VA = "0x10ECAD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x10ECE30", Offset = "0x10ECE30", VA = "0x10ECE30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x10ED188", Offset = "0x10ED188", VA = "0x10ED188")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x10ED298", Offset = "0x10ED298", VA = "0x10ED298")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x10ED3B0", Offset = "0x10ED3B0", VA = "0x10ED3B0")]
		private void HandleSelectionComplete()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x10ED3E8", Offset = "0x10ED3E8", VA = "0x10ED3E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB512DC", Offset = "0xB512DC")]
		private IEnumerator ActivateButton()
		{
			return null;
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x10ED484", Offset = "0x10ED484", VA = "0x10ED484")]
		public MenuButton()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class MenuItemPopout : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Transform;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInteractiveItem m_Item;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_PopSpeed;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_PopDistance;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPosition;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_PoppedPosition;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_TargetPosition;

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x10ED718", Offset = "0x10ED718", VA = "0x10ED718")]
		private void Start()
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x10ED830", Offset = "0x10ED830", VA = "0x10ED830")]
		private void Update()
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x10ED960", Offset = "0x10ED960", VA = "0x10ED960")]
		public MenuItemPopout()
		{
		}
	}
}
namespace SquadPanel
{
	[Token(Token = "0x20005FB")]
	public class InvitePeepPane : PeepPane
	{
		[Token(Token = "0x600294C")]
		[Address(RVA = "0xD59A74", Offset = "0xD59A74", VA = "0xD59A74", Slot = "4")]
		protected override void PopulateSlide(PeepSlide slide, PlatformUser user, bool displayOnly)
		{
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0xD59BE4", Offset = "0xD59BE4", VA = "0xD59BE4")]
		public InvitePeepPane()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class MatchmakingPanel : UnityEngine.MonoBehaviour, IShowMessage
	{
		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PeepPane _invitePane;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PeepPane _partyPane;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _selectionHighlight;

		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _friendForm;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _recentForm;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _inputCover;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _msgBox;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text _msgText;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text _msgTitleText;

		[Token(Token = "0x600294E")]
		[Address(RVA = "0xD59C40", Offset = "0xD59C40", VA = "0xD59C40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0xD59CA8", Offset = "0xD59CA8", VA = "0xD59CA8")]
		public void TapLeave()
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xD59E3C", Offset = "0xD59E3C", VA = "0xD59E3C")]
		public void TapStart()
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0xD59EFC", Offset = "0xD59EFC", VA = "0xD59EFC")]
		public void Start()
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xD5A10C", Offset = "0xD5A10C", VA = "0xD5A10C")]
		private void UpdateParty(List<PlatformUser> party)
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xD5A230", Offset = "0xD5A230", VA = "0xD5A230")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xD5A070", Offset = "0xD5A070", VA = "0xD5A070")]
		public void RefreshInvitable()
		{
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xD5A388", Offset = "0xD5A388", VA = "0xD5A388", Slot = "4")]
		public void ShowMessage(string title, string message)
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xD5A414", Offset = "0xD5A414", VA = "0xD5A414")]
		public void CloseError()
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xD5A458", Offset = "0xD5A458", VA = "0xD5A458")]
		public MatchmakingPanel()
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xD5A460", Offset = "0xD5A460", VA = "0xD5A460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51340", Offset = "0xB51340")]
		private void <RefreshInvitable>b__15_0(Result<List<PlatformUser>> result)
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class PartyPeepPane : PeepPane
	{
		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _crossplayPartyMaxMsg;

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xD5A514", Offset = "0xD5A514", VA = "0xD5A514", Slot = "4")]
		protected override void PopulateSlide(PeepSlide slide, PlatformUser user, bool displayOnly)
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xD5A774", Offset = "0xD5A774", VA = "0xD5A774")]
		private void Start()
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xD5A874", Offset = "0xD5A874", VA = "0xD5A874")]
		private void OnPartyChanged(List<Multiplayer.Player.User> users)
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xD5A8F4", Offset = "0xD5A8F4", VA = "0xD5A8F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xD5A990", Offset = "0xD5A990", VA = "0xD5A990")]
		public PartyPeepPane()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public class PeepPane : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PeepSlide _slidePrefab;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _slideParent;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _pageSelect;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _pageText;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _pageFormat;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _localizePageFormat;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PeepSlide[] _slides;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<PlatformUser> _data;

		[Token(Token = "0x400282B")]
		private const int _MAX_PAGE_AMOUNT = 8;

		[Token(Token = "0x400282C")]
		private const int _MAX_W_PAGES_AMOUNT = 7;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _pageIndex;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _pageAmount;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _displayOnly;

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xD5A130", Offset = "0xD5A130", VA = "0xD5A130")]
		public void SetData(List<PlatformUser> data, bool displayOnly = false)
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xD5ACB4", Offset = "0xD5ACB4", VA = "0xD5ACB4")]
		private void ClearSlides()
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xD5AAA4", Offset = "0xD5AAA4", VA = "0xD5AAA4")]
		private void SpawnSlides(bool displayOnly)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xD59A90", Offset = "0xD59A90", VA = "0xD59A90", Slot = "4")]
		protected virtual void PopulateSlide(PeepSlide slide, PlatformUser user, bool displayOnly)
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xD5A994", Offset = "0xD5A994", VA = "0xD5A994")]
		private void ShowPageSelect(bool shown, int page = 0, int maxPage = 0)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xD5ADE4", Offset = "0xD5ADE4", VA = "0xD5ADE4")]
		public void PrevousPage()
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xD5AE78", Offset = "0xD5AE78", VA = "0xD5AE78")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xD59BE8", Offset = "0xD59BE8", VA = "0xD59BE8")]
		public PeepPane()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class PeepSlide : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A22")]
		public enum IconStyle
		{
			[Token(Token = "0x4003344")]
			Invite,
			[Token(Token = "0x4003345")]
			SentInvite,
			[Token(Token = "0x4003346")]
			Kick,
			[Token(Token = "0x4003347")]
			Mute,
			[Token(Token = "0x4003348")]
			Muted
		}

		[Token(Token = "0x2000A23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37080", Offset = "0xB37080")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4003349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeepSlide <>4__this;

			[Token(Token = "0x400334A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong id;

			[Token(Token = "0x60039A6")]
			[Address(RVA = "0xD5B794", Offset = "0xD5B794", VA = "0xD5B794")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x60039A7")]
			[Address(RVA = "0xD5BCE8", Offset = "0xD5BCE8", VA = "0xD5BCE8")]
			internal void <SetAvatar>b__0(Sprite t)
			{
			}
		}

		[Token(Token = "0x2000A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37090", Offset = "0xB37090")]
		private sealed class <ShowCrossplayMsg>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400334B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400334C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400334D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PeepSlide <>4__this;

			[Token(Token = "0x400334E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lerp>5__2;

			[Token(Token = "0x170005BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60039AB")]
				[Address(RVA = "0xD5BF68", Offset = "0xD5BF68", VA = "0xD5BF68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60039AD")]
				[Address(RVA = "0xD5BFD0", Offset = "0xD5BFD0", VA = "0xD5BFD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60039A8")]
			[Address(RVA = "0xD5BB40", Offset = "0xD5BB40", VA = "0xD5BB40")]
			[DebuggerHidden]
			public <ShowCrossplayMsg>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60039A9")]
			[Address(RVA = "0xD5BDB4", Offset = "0xD5BDB4", VA = "0xD5BDB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60039AA")]
			[Address(RVA = "0xD5BDB8", Offset = "0xD5BDB8", VA = "0xD5BDB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60039AC")]
			[Address(RVA = "0xD5BF70", Offset = "0xD5BF70", VA = "0xD5BF70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _avatarObject;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _avatarImage;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _spinnerObject;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _userName;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _bottomBar;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _inviteIcon;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _sentIcon;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _kickIcon;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _muteIcon;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _mutedIcon;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _muteIconPlayer;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _mutedIconPlayer;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color _activeColor;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color _inactiveColor;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Sprite _defaultAvatar;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _buttonObject;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _spinnerRight;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject _overrideMuteButtonObject;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject _overrideMuteButtonImg;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _overrideMuteButtonImgPlayer;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Collider _buttonCollider;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private CanvasGroup _crossplayMsg;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Image _audioIcon;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _trackingTalking;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private PlatformUser _user;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IconStyle _style;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool _partySlide;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool _isMe;

		[Token(Token = "0x1700038B")]
		private PlatformTarget CurrentPlatform
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xD5AF14", Offset = "0xD5AF14", VA = "0xD5AF14")]
			get
			{
				return default(PlatformTarget);
			}
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0xD5AF44", Offset = "0xD5AF44", VA = "0xD5AF44")]
		private void Start()
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0xD5B044", Offset = "0xD5B044", VA = "0xD5B044")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0xD5B194", Offset = "0xD5B194", VA = "0xD5B194")]
		private void OnUserMuted(ulong id, bool muted)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0xD5B1F0", Offset = "0xD5B1F0", VA = "0xD5B1F0")]
		private void SetVoiceOverride(bool voiceOn)
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0xD59A94", Offset = "0xD59A94", VA = "0xD59A94")]
		public void SetAsInvitableFriend(PlatformUser user)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0xD5A538", Offset = "0xD5A538", VA = "0xD5A538")]
		public void SetAsPartyMember(PlatformUser user, bool displayOnly)
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0xD5B68C", Offset = "0xD5B68C", VA = "0xD5B68C")]
		private void SetIsTalking(ulong id, bool talking)
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0xD5B640", Offset = "0xD5B640", VA = "0xD5B640")]
		private void SetButton(bool on)
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0xD5B324", Offset = "0xD5B324", VA = "0xD5B324")]
		private void SetAvatar()
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0xD5B488", Offset = "0xD5B488", VA = "0xD5B488")]
		public void SetButtonIcon(IconStyle style)
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0xD5B5B4", Offset = "0xD5B5B4", VA = "0xD5B5B4")]
		public void SetActiveColor(bool isActive)
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0xD5B610", Offset = "0xD5B610", VA = "0xD5B610")]
		public void SetFade(bool isFaded)
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0xD5B868", Offset = "0xD5B868", VA = "0xD5B868")]
		public void ShowSpinner()
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0xD5B79C", Offset = "0xD5B79C", VA = "0xD5B79C")]
		public void ShowAvatar(Sprite avatar)
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0xD5B8AC", Offset = "0xD5B8AC", VA = "0xD5B8AC")]
		public void TapButton()
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xD5BAD0", Offset = "0xD5BAD0", VA = "0xD5BAD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB51350", Offset = "0xB51350")]
		private IEnumerator ShowCrossplayMsg()
		{
			return null;
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xD5B1D0", Offset = "0xD5B1D0", VA = "0xD5B1D0")]
		private void SetMuted(bool value)
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0xD5B9F0", Offset = "0xD5B9F0", VA = "0xD5B9F0")]
		private void TapInvite()
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xD5BB6C", Offset = "0xD5BB6C", VA = "0xD5BB6C")]
		public PeepSlide()
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xD5BB74", Offset = "0xD5BB74", VA = "0xD5BB74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB513B4", Offset = "0xB513B4")]
		private void <TapInvite>b__49_0(Result r)
		{
		}
	}
}
namespace Options
{
	[Token(Token = "0x2000600")]
	public class IndexSlider : Option
	{
		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41924", Offset = "0xB41924")]
		[SerializeField]
		private DragSlider _slider;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IndexSliderNotch _notch;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41980", Offset = "0xB41980")]
		[SerializeField]
		private IndexSliderPoint[] _points;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IndexSliderNotch[] _notches;

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xD1878C", Offset = "0xD1878C", VA = "0xD1878C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xD18874", Offset = "0xD18874", VA = "0xD18874", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xD17400", Offset = "0xD17400", VA = "0xD17400", Slot = "6")]
		protected virtual void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xD189AC", Offset = "0xD189AC", VA = "0xD189AC")]
		public void SlideRelease(float position)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xD188A4", Offset = "0xD188A4", VA = "0xD188A4")]
		public void InitSlider(ref IndexSliderPoint[] points)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xD18AB8", Offset = "0xD18AB8", VA = "0xD18AB8")]
		public void InitNotches(ref IndexSliderPoint[] points)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0xD18ED0", Offset = "0xD18ED0", VA = "0xD18ED0")]
		public IndexSliderPoint GetPoint(int index)
		{
			return default(IndexSliderPoint);
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xD17308", Offset = "0xD17308", VA = "0xD17308")]
		public void SetSliderToPoint(int pointIndex)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xD18F9C", Offset = "0xD18F9C", VA = "0xD18F9C")]
		public void SetSliderToIndex(float index)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0xD18DA4", Offset = "0xD18DA4", VA = "0xD18DA4")]
		private void ClearNotches()
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0xD1740C", Offset = "0xD1740C", VA = "0xD1740C")]
		public IndexSlider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000601")]
	public struct IndexSliderPoint
	{
		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool localize;
	}
	[Token(Token = "0x2000602")]
	public class IndexSliderNotch : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform _form;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xD18FB8", Offset = "0xD18FB8", VA = "0xD18FB8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0xD19130", Offset = "0xD19130", VA = "0xD19130")]
		public void SetPosition(float position)
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0xD19288", Offset = "0xD19288", VA = "0xD19288")]
		public void SetPosition(float index, float min, float max)
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xD192BC", Offset = "0xD192BC", VA = "0xD192BC")]
		public void SetName(string newName)
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0xD19490", Offset = "0xD19490", VA = "0xD19490")]
		public void SetInfo(string newName, float position)
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0xD18E7C", Offset = "0xD18E7C", VA = "0xD18E7C")]
		public void SetInfo(string newName, float index, float min, float max)
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xD192A0", Offset = "0xD192A0", VA = "0xD192A0")]
		private static float Remap(float value, float fromStart, float fromEnd, float toStart, float toEnd)
		{
			return default(float);
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0xD194C4", Offset = "0xD194C4", VA = "0xD194C4")]
		public IndexSliderNotch()
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class Option : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OptionsContainer _container;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControlsPanel _controlsPanel;

		[Token(Token = "0x600298E")]
		[Address(RVA = "0xD16AC4", Offset = "0xD16AC4", VA = "0xD16AC4")]
		protected void RefreshAll()
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0xD166E8", Offset = "0xD166E8", VA = "0xD166E8", Slot = "4")]
		public virtual void RefreshOption()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0xD16BB4", Offset = "0xD16BB4", VA = "0xD16BB4")]
		public Option()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class OptionRow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayoutElement _layoutElement;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayoutElement _leftSection;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayoutElement _rightSection;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _bottomBar;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _nameText;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _contentParent;

		[Token(Token = "0x6002991")]
		[Address(RVA = "0xD19F4C", Offset = "0xD19F4C", VA = "0xD19F4C")]
		public void SetLeftWidth(int width)
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xD1A000", Offset = "0xD1A000", VA = "0xD1A000")]
		public void SetHeight(int height)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0xD17038", Offset = "0xD17038", VA = "0xD17038")]
		public void ShowBottom(bool isShown)
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0xD1A0B0", Offset = "0xD1A0B0", VA = "0xD1A0B0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0xD1A45C", Offset = "0xD1A45C", VA = "0xD1A45C")]
		public OptionRow()
		{
		}
	}
	[Token(Token = "0x2000605")]
	public class OptionsContainer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Option[] _options;

		[Token(Token = "0x6002996")]
		[Address(RVA = "0xD181D8", Offset = "0xD181D8", VA = "0xD181D8")]
		public void RefreshOptions()
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0xD1A464", Offset = "0xD1A464", VA = "0xD1A464")]
		public OptionsContainer()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class Pagination : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _pageName;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _useNames;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text _pageNumber;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PaginationData[] _pages;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _customNonPs4PageAmount;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentPage;

		[Token(Token = "0x1700038C")]
		private int PageAmount
		{
			[Token(Token = "0x6002998")]
			[Address(RVA = "0xD1A46C", Offset = "0xD1A46C", VA = "0xD1A46C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0xD1A49C", Offset = "0xD1A49C", VA = "0xD1A49C")]
		private void Start()
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0xD1A5F0", Offset = "0xD1A5F0", VA = "0xD1A5F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xD1A684", Offset = "0xD1A684", VA = "0xD1A684")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0xD1A718", Offset = "0xD1A718", VA = "0xD1A718")]
		public void NextPage()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0xD1A74C", Offset = "0xD1A74C", VA = "0xD1A74C")]
		public void PreviousPage()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0xD1A4A4", Offset = "0xD1A4A4", VA = "0xD1A4A4")]
		public void SetPage(int page)
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0xD1A788", Offset = "0xD1A788", VA = "0xD1A788")]
		private void RefreshText()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0xD1A894", Offset = "0xD1A894", VA = "0xD1A894")]
		public Pagination()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	public struct PaginationData
	{
		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject page;
	}
	[Token(Token = "0x2000608")]
	public abstract class SliderOption : Option
	{
		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DragSlider _slider;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _display;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _prevValue;

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xD1A8A4", Offset = "0xD1A8A4", VA = "0xD1A8A4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0xD1A8B0", Offset = "0xD1A8B0", VA = "0xD1A8B0", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0xD1A8EC", Offset = "0xD1A8EC", VA = "0xD1A8EC")]
		public void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xD1A918", Offset = "0xD1A918", VA = "0xD1A918")]
		private void Update()
		{
		}

		[Token(Token = "0x60029A5")]
		protected abstract void SetValue(float value);

		[Token(Token = "0x60029A6")]
		protected abstract float GetValue();

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0xD19938", Offset = "0xD19938", VA = "0xD19938")]
		protected SliderOption()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public abstract class ToggleOption : Option
	{
		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] _optionForms;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _selectHighlight;

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xD1AA30", Offset = "0xD1AA30", VA = "0xD1AA30", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xD1AA3C", Offset = "0xD1AA3C", VA = "0xD1AA3C", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xD1AAC0", Offset = "0xD1AAC0", VA = "0xD1AAC0")]
		public void SelectOption(bool isOn)
		{
		}

		[Token(Token = "0x60029AB")]
		protected abstract void SetIsOn(bool isOn);

		[Token(Token = "0x60029AC")]
		protected abstract bool GetIsOn();

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0xD1AA6C", Offset = "0xD1AA6C", VA = "0xD1AA6C")]
		private void HighlightOption(bool isOn)
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0xD16604", Offset = "0xD16604", VA = "0xD16604")]
		protected ToggleOption()
		{
		}
	}
}
namespace Options.Graphics
{
	[Token(Token = "0x200060A")]
	public class AntiAliasingSlider : IndexSlider
	{
		[Token(Token = "0x60029AF")]
		[Address(RVA = "0xD17290", Offset = "0xD17290", VA = "0xD17290", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xD17388", Offset = "0xD17388", VA = "0xD17388", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0xD17404", Offset = "0xD17404", VA = "0xD17404")]
		public AntiAliasingSlider()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class EyeBufferSlider : Option
	{
		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DragSlider _qualityLevel;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _qualityDisplay;

		[Token(Token = "0x400286E")]
		private const float _QUALITY_MULT = 20f;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _prevValue;

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xD17414", Offset = "0xD17414", VA = "0xD17414")]
		private void Start()
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xD1745C", Offset = "0xD1745C", VA = "0xD1745C", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xD17460", Offset = "0xD17460", VA = "0xD17460")]
		private void UpdateSlider()
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xD1756C", Offset = "0xD1756C", VA = "0xD1756C")]
		private void Update()
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xD17640", Offset = "0xD17640", VA = "0xD17640")]
		public void SelectQuality(float quality)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xD176F0", Offset = "0xD176F0", VA = "0xD176F0")]
		public EyeBufferSlider()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class FilteringUiToggle : ToggleOption
	{
		[Token(Token = "0x60029B8")]
		[Address(RVA = "0xD17700", Offset = "0xD17700", VA = "0xD17700", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xD17778", Offset = "0xD17778", VA = "0xD17778", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xD177F0", Offset = "0xD177F0", VA = "0xD177F0")]
		public FilteringUiToggle()
		{
		}
	}
	[Token(Token = "0x200060D")]
	public class GazeSelectionToggle : ToggleOption
	{
		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xD177F8", Offset = "0xD177F8", VA = "0xD177F8", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xD17860", Offset = "0xD17860", VA = "0xD17860", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xD178C0", Offset = "0xD178C0", VA = "0xD178C0")]
		public GazeSelectionToggle()
		{
		}
	}
	[Token(Token = "0x200060E")]
	public class GoggleEffectsToggle : ToggleOption
	{
		[Token(Token = "0x60029BE")]
		[Address(RVA = "0xD178C8", Offset = "0xD178C8", VA = "0xD178C8", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0xD17940", Offset = "0xD17940", VA = "0xD17940", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0xD179B0", Offset = "0xD179B0", VA = "0xD179B0")]
		public GoggleEffectsToggle()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class GrassDensitySlider : IndexSlider
	{
		[Token(Token = "0x4002870")]
		private const float _MULT = 4f;

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0xD179B8", Offset = "0xD179B8", VA = "0xD179B8", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xD17A70", Offset = "0xD17A70", VA = "0xD17A70", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0xD17AF4", Offset = "0xD17AF4", VA = "0xD17AF4")]
		public GrassDensitySlider()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class GrassDistanceSlider : IndexSlider
	{
		[Token(Token = "0x4002871")]
		private const float _MULT = 4f;

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0xD17AFC", Offset = "0xD17AFC", VA = "0xD17AFC", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0xD17BB4", Offset = "0xD17BB4", VA = "0xD17BB4", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0xD17C3C", Offset = "0xD17C3C", VA = "0xD17C3C")]
		public GrassDistanceSlider()
		{
		}
	}
	[Token(Token = "0x2000611")]
	public class GrassUiToggle : ToggleOption
	{
		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xD17C44", Offset = "0xD17C44", VA = "0xD17C44", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0xD17CB4", Offset = "0xD17CB4", VA = "0xD17CB4", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0xD17D2C", Offset = "0xD17D2C", VA = "0xD17D2C")]
		public GrassUiToggle()
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class HapticFeedbackSlider : IndexSlider
	{
		[Token(Token = "0x60029CA")]
		[Address(RVA = "0xD17D34", Offset = "0xD17D34", VA = "0xD17D34", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0xD17DA4", Offset = "0xD17DA4", VA = "0xD17DA4", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0xD17E10", Offset = "0xD17E10", VA = "0xD17E10")]
		public HapticFeedbackSlider()
		{
		}
	}
	[Token(Token = "0x2000613")]
	public class NametagUiToggle : ToggleOption
	{
		[Token(Token = "0x60029CD")]
		[Address(RVA = "0xD17E18", Offset = "0xD17E18", VA = "0xD17E18", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xD17E90", Offset = "0xD17E90", VA = "0xD17E90", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xD17F00", Offset = "0xD17F00", VA = "0xD17F00")]
		public NametagUiToggle()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class QualityPresetSlider : IndexSlider
	{
		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xD17F08", Offset = "0xD17F08", VA = "0xD17F08", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xD17F90", Offset = "0xD17F90", VA = "0xD17F90", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xD18010", Offset = "0xD18010", VA = "0xD18010")]
		public QualityPresetSlider()
		{
		}
	}
	[Token(Token = "0x2000615")]
	public class RefreshRateToggle : ToggleOption
	{
		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xD18018", Offset = "0xD18018", VA = "0xD18018", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xD180C4", Offset = "0xD180C4", VA = "0xD180C4", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xD18150", Offset = "0xD18150", VA = "0xD18150")]
		public RefreshRateToggle()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class ResetGraphicsOption : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OptionsContainer _container;

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0xD18158", Offset = "0xD18158", VA = "0xD18158")]
		public void ResetOptions()
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xD18248", Offset = "0xD18248", VA = "0xD18248")]
		public ResetGraphicsOption()
		{
		}
	}
	[Token(Token = "0x2000617")]
	public class ShadowSlider : IndexSlider
	{
		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xD18250", Offset = "0xD18250", VA = "0xD18250", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xD18338", Offset = "0xD18338", VA = "0xD18338", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xD183B4", Offset = "0xD183B4", VA = "0xD183B4")]
		public ShadowSlider()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class TextureSizeSlider : IndexSlider
	{
		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xD183BC", Offset = "0xD183BC", VA = "0xD183BC", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0xD18434", Offset = "0xD18434", VA = "0xD18434", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xD184AC", Offset = "0xD184AC", VA = "0xD184AC")]
		public TextureSizeSlider()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class TrailsUiToggle : ToggleOption
	{
		[Token(Token = "0x60029DE")]
		[Address(RVA = "0xD184B4", Offset = "0xD184B4", VA = "0xD184B4", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0xD1852C", Offset = "0xD1852C", VA = "0xD1852C", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0xD1859C", Offset = "0xD1859C", VA = "0xD1859C")]
		public TrailsUiToggle()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class ViewDistanceDitheringToggle : ToggleOption
	{
		[Token(Token = "0x60029E1")]
		[Address(RVA = "0xD185A4", Offset = "0xD185A4", VA = "0xD185A4", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0xD1861C", Offset = "0xD1861C", VA = "0xD1861C", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0xD1868C", Offset = "0xD1868C", VA = "0xD1868C")]
		public ViewDistanceDitheringToggle()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class ViewDistanceSlider : IndexSlider
	{
		[Token(Token = "0x60029E4")]
		[Address(RVA = "0xD18694", Offset = "0xD18694", VA = "0xD18694", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0xD1870C", Offset = "0xD1870C", VA = "0xD1870C", Slot = "6")]
		protected override void SlideAction(int index, IndexSliderPoint point)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0xD18784", Offset = "0xD18784", VA = "0xD18784")]
		public ViewDistanceSlider()
		{
		}
	}
}
namespace Options.Music
{
	[Token(Token = "0x200061C")]
	public class SensitivityHorizSlider : SliderOption
	{
		[Token(Token = "0x60029E7")]
		[Address(RVA = "0xD19860", Offset = "0xD19860", VA = "0xD19860", Slot = "6")]
		protected override void SetValue(float value)
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0xD198D0", Offset = "0xD198D0", VA = "0xD198D0", Slot = "7")]
		protected override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0xD19930", Offset = "0xD19930", VA = "0xD19930")]
		public SensitivityHorizSlider()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class SensitivityVertSlider : SliderOption
	{
		[Token(Token = "0x60029EA")]
		[Address(RVA = "0xD19940", Offset = "0xD19940", VA = "0xD19940", Slot = "6")]
		protected override void SetValue(float value)
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0xD199B0", Offset = "0xD199B0", VA = "0xD199B0", Slot = "7")]
		protected override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0xD19A10", Offset = "0xD19A10", VA = "0xD19A10")]
		public SensitivityVertSlider()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class MusicSlider : Option
	{
		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DragSlider _musicLevel;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _musicDisplay;

		[Token(Token = "0x4002875")]
		private const float _QUALITY_MULT = 20f;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _prevValue;

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0xD194CC", Offset = "0xD194CC", VA = "0xD194CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0xD19510", Offset = "0xD19510", VA = "0xD19510", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0xD19514", Offset = "0xD19514", VA = "0xD19514")]
		private void UpdateSlider()
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0xD196B8", Offset = "0xD196B8", VA = "0xD196B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0xD195E8", Offset = "0xD195E8", VA = "0xD195E8")]
		private string FormatValue(float sliderValue)
		{
			return null;
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0xD19744", Offset = "0xD19744", VA = "0xD19744")]
		public void SelectQuality(float quality)
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0xD197B4", Offset = "0xD197B4", VA = "0xD197B4")]
		public MusicSlider()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class MusicToggle : ToggleOption
	{
		[Token(Token = "0x60029F4")]
		[Address(RVA = "0xD197C4", Offset = "0xD197C4", VA = "0xD197C4", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xD19824", Offset = "0xD19824", VA = "0xD19824", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0xD19858", Offset = "0xD19858", VA = "0xD19858")]
		public MusicToggle()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class SoundEffectsSlider : Option
	{
		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DragSlider _musicLevel;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _musicDisplay;

		[Token(Token = "0x4002879")]
		private const float _QUALITY_MULT = 20f;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _prevValue;

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xD19A18", Offset = "0xD19A18", VA = "0xD19A18")]
		private void Start()
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0xD19A5C", Offset = "0xD19A5C", VA = "0xD19A5C", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0xD19A60", Offset = "0xD19A60", VA = "0xD19A60")]
		private void UpdateSlider()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0xD19C04", Offset = "0xD19C04", VA = "0xD19C04")]
		private void Update()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xD19B34", Offset = "0xD19B34", VA = "0xD19B34")]
		private string FormatValue(float sliderValue)
		{
			return null;
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0xD19C90", Offset = "0xD19C90", VA = "0xD19C90")]
		public void SelectQuality(float quality)
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xD19D00", Offset = "0xD19D00", VA = "0xD19D00")]
		public SoundEffectsSlider()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class SoundEffectsToggle : ToggleOption
	{
		[Token(Token = "0x60029FE")]
		[Address(RVA = "0xD19D10", Offset = "0xD19D10", VA = "0xD19D10", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0xD19D70", Offset = "0xD19D70", VA = "0xD19D70", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0xD19DA4", Offset = "0xD19DA4", VA = "0xD19DA4")]
		public SoundEffectsToggle()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class TutorialSubtitlesToggle : ToggleOption
	{
		[Token(Token = "0x6002A01")]
		[Address(RVA = "0xD19DAC", Offset = "0xD19DAC", VA = "0xD19DAC", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0xD19E48", Offset = "0xD19E48", VA = "0xD19E48", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0xD19EA8", Offset = "0xD19EA8", VA = "0xD19EA8")]
		public TutorialSubtitlesToggle()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class VoiceOverToggle : ToggleOption
	{
		[Token(Token = "0x6002A04")]
		[Address(RVA = "0xD19EB0", Offset = "0xD19EB0", VA = "0xD19EB0", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0xD19F10", Offset = "0xD19F10", VA = "0xD19F10", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0xD19F44", Offset = "0xD19F44", VA = "0xD19F44")]
		public VoiceOverToggle()
		{
		}
	}
}
namespace Options.Gameplay
{
	[Token(Token = "0x2000624")]
	public class AutoBoostToggle : ToggleOption
	{
		[Token(Token = "0x6002A07")]
		[Address(RVA = "0xD16534", Offset = "0xD16534", VA = "0xD16534", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0xD1659C", Offset = "0xD1659C", VA = "0xD1659C", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0xD165FC", Offset = "0xD165FC", VA = "0xD165FC")]
		public AutoBoostToggle()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public class ControlSchemeOption : Option
	{
		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] _optionForms;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _selectHighlight;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _popup;

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0xD1660C", Offset = "0xD1660C", VA = "0xD1660C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0xD16618", Offset = "0xD16618", VA = "0xD16618", Slot = "4")]
		public override void RefreshOption()
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0xD166EC", Offset = "0xD166EC", VA = "0xD166EC")]
		private int GetControlIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0xD16790", Offset = "0xD16790", VA = "0xD16790")]
		public void SelectControl(int control)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0xD16BAC", Offset = "0xD16BAC", VA = "0xD16BAC")]
		public ControlSchemeOption()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class GuidelineToggle : ToggleOption
	{
		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0xD16BBC", Offset = "0xD16BBC", VA = "0xD16BBC", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0xD16C90", Offset = "0xD16C90", VA = "0xD16C90", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0xD16CF0", Offset = "0xD16CF0", VA = "0xD16CF0")]
		public GuidelineToggle()
		{
		}
	}
	[Token(Token = "0x2000627")]
	public class HelmetToggle : ToggleOption
	{
		[Token(Token = "0x6002A12")]
		[Address(RVA = "0xD16CF8", Offset = "0xD16CF8", VA = "0xD16CF8", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0xD16D60", Offset = "0xD16D60", VA = "0xD16D60", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0xD16DC0", Offset = "0xD16DC0", VA = "0xD16DC0")]
		public HelmetToggle()
		{
		}
	}
	[Token(Token = "0x2000628")]
	public class InvertHorizToggle : ToggleOption
	{
		[Token(Token = "0x6002A15")]
		[Address(RVA = "0xD16DC8", Offset = "0xD16DC8", VA = "0xD16DC8", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0xD16E30", Offset = "0xD16E30", VA = "0xD16E30", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xD16E90", Offset = "0xD16E90", VA = "0xD16E90")]
		public InvertHorizToggle()
		{
		}
	}
	[Token(Token = "0x2000629")]
	public class InvertedToggle : ToggleOption
	{
		[Token(Token = "0x6002A18")]
		[Address(RVA = "0xD16E98", Offset = "0xD16E98", VA = "0xD16E98", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xD16F00", Offset = "0xD16F00", VA = "0xD16F00", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0xD16F60", Offset = "0xD16F60", VA = "0xD16F60")]
		public InvertedToggle()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class LaunchReticleOption : ToggleGroupOption
	{
		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OptionRow _rowParent;

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xD16F68", Offset = "0xD16F68", VA = "0xD16F68", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0xD170E0", Offset = "0xD170E0", VA = "0xD170E0", Slot = "6")]
		protected override void SetState(int index)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0xD17148", Offset = "0xD17148", VA = "0xD17148", Slot = "7")]
		protected override int GetState()
		{
			return default(int);
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0xD171A8", Offset = "0xD171A8", VA = "0xD171A8")]
		public LaunchReticleOption()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class PrimaryHandToggle : ToggleOption
	{
		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0xD171B0", Offset = "0xD171B0", VA = "0xD171B0", Slot = "6")]
		protected override void SetIsOn(bool isOn)
		{
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0xD1721C", Offset = "0xD1721C", VA = "0xD1721C", Slot = "7")]
		protected override bool GetIsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0xD17288", Offset = "0xD17288", VA = "0xD17288")]
		public PrimaryHandToggle()
		{
		}
	}
}
namespace Localization.Addons
{
	[Token(Token = "0x200062C")]
	public static class Language
	{
		[Token(Token = "0x2000A25")]
		public enum Type
		{
			[Token(Token = "0x4003350")]
			English,
			[Token(Token = "0x4003351")]
			French,
			[Token(Token = "0x4003352")]
			German,
			[Token(Token = "0x4003353")]
			Spanish,
			[Token(Token = "0x4003354")]
			Korean,
			[Token(Token = "0x4003355")]
			Japanese,
			[Token(Token = "0x4003356")]
			Chinese,
			[Token(Token = "0x4003357")]
			TraditionalChinese,
			[Token(Token = "0x4003358")]
			Italian,
			[Token(Token = "0x4003359")]
			Portuguese,
			[Token(Token = "0x400335A")]
			Thai
		}

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool set;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41BBC", Offset = "0xB41BBC")]
		private static Type <Current>k__BackingField;

		[Token(Token = "0x4002881")]
		private const string PREF = "RUSH_UserLanguage";

		[Token(Token = "0x1700038D")]
		public static Type Current
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xD36C48", Offset = "0xD36C48", VA = "0xD36C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB513C4", Offset = "0xB513C4")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xD36CB0", Offset = "0xD36CB0", VA = "0xD36CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB513D4", Offset = "0xB513D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xD36BBC", Offset = "0xD36BBC", VA = "0xD36BBC")]
		public static bool IsSymbolic(Type lang)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0xD36BE0", Offset = "0xD36BE0", VA = "0xD36BE0")]
		public static string GetTag(Type lang)
		{
			return null;
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0xD36D1C", Offset = "0xD36D1C", VA = "0xD36D1C")]
		public static void Load(Type language)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0xD36EC8", Offset = "0xD36EC8", VA = "0xD36EC8")]
		public static void LoadByUser(Type language)
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0xD36FBC", Offset = "0xD36FBC", VA = "0xD36FBC")]
		public static void NoPrefInit()
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0xD370D8", Offset = "0xD370D8", VA = "0xD370D8")]
		public static void Init()
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0xD3704C", Offset = "0xD3704C", VA = "0xD3704C")]
		private static Type GetSystemLanguage()
		{
			return default(Type);
		}
	}
}
namespace Weather
{
	[Token(Token = "0x200062D")]
	public enum WeatherType
	{
		[Token(Token = "0x4002883")]
		Clear,
		[Token(Token = "0x4002884")]
		LightRain,
		[Token(Token = "0x4002885")]
		HeavyRain,
		[Token(Token = "0x4002886")]
		Fog,
		[Token(Token = "0x4002887")]
		Thunder,
		[Token(Token = "0x4002888")]
		Thunderstorm,
		[Token(Token = "0x4002889")]
		LightSnow,
		[Token(Token = "0x400288A")]
		HeavySnow,
		[Token(Token = "0x400288B")]
		Thundersnow,
		[Token(Token = "0x400288C")]
		StaticRain,
		[Token(Token = "0x400288D")]
		StaticSnow
	}
	[Token(Token = "0x200062E")]
	public enum TimePeriod
	{
		[Token(Token = "0x400288F")]
		Sunrise,
		[Token(Token = "0x4002890")]
		Midday,
		[Token(Token = "0x4002891")]
		Sunset,
		[Token(Token = "0x4002892")]
		Night
	}
	[Token(Token = "0x200062F")]
	public static class WeatherExtras
	{
		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] _cloudCover;

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x13A27B4", Offset = "0x13A27B4", VA = "0x13A27B4")]
		public static float GetDefaultCloudCover(WeatherType type)
		{
			return default(float);
		}
	}
}
namespace PhysicsInteractables
{
	[Token(Token = "0x2000630")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB33E00", Offset = "0xB33E00")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB33E00", Offset = "0xB33E00")]
	public class InteractableLayout : ScriptableObject
	{
		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _layouts;

		[Token(Token = "0x1700038E")]
		public GameObject Item
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0xC490F8", Offset = "0xC490F8", VA = "0xC490F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0xC49134", Offset = "0xC49134", VA = "0xC49134")]
		public GameObject GetRandom()
		{
			return null;
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xC49274", Offset = "0xC49274", VA = "0xC49274")]
		public GameObject SpawnRandom(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xC49308", Offset = "0xC49308", VA = "0xC49308")]
		public bool HasLayouts()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xC49328", Offset = "0xC49328", VA = "0xC49328")]
		public InteractableLayout()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class InteractableSpawner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000A26")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB370A0", Offset = "0xB370A0")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400335B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400335C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400335D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractableSpawner <>4__this;

			[Token(Token = "0x400335E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IState <state>5__2;

			[Token(Token = "0x170005C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60039B1")]
				[Address(RVA = "0xC4967C", Offset = "0xC4967C", VA = "0xC4967C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60039B3")]
				[Address(RVA = "0xC496E4", Offset = "0xC496E4", VA = "0xC496E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60039AE")]
			[Address(RVA = "0xC493A0", Offset = "0xC493A0", VA = "0xC493A0")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60039AF")]
			[Address(RVA = "0xC49548", Offset = "0xC49548", VA = "0xC49548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60039B0")]
			[Address(RVA = "0xC4954C", Offset = "0xC4954C", VA = "0xC4954C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60039B2")]
			[Address(RVA = "0xC49684", Offset = "0xC49684", VA = "0xC49684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractableLayout _layoutData;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _spawnOnStart;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _spawned;

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xC49330", Offset = "0xC49330", VA = "0xC49330")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB513E4", Offset = "0xB513E4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0xC493CC", Offset = "0xC493CC", VA = "0xC493CC")]
		public void Spawn(bool respawnIfAlreadyExists = false)
		{
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xC4948C", Offset = "0xC4948C", VA = "0xC4948C")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0xC49538", Offset = "0xC49538", VA = "0xC49538")]
		public InteractableSpawner()
		{
		}
	}
}
namespace PhysicsInteractables.PlatformSync
{
	[Serializable]
	[Token(Token = "0x2000632")]
	public struct InteractableCollection
	{
		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject[] prefabs;
	}
	[Serializable]
	[Token(Token = "0x2000633")]
	public struct LayoutGroup
	{
		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayoutPlacement[] placements;
	}
	[Serializable]
	[Token(Token = "0x2000634")]
	public struct LayoutPlacement
	{
		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int photonId;
	}
	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB33E7C", Offset = "0xB33E7C")]
	public class PhysicsLayout : ScriptableObject
	{
		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollection[] collections;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayoutGroup[] placements;

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xC496EC", Offset = "0xC496EC", VA = "0xC496EC")]
		public PhysicsLayout()
		{
		}
	}
}
namespace RainDropEffect
{
	[Token(Token = "0x2000636")]
	[ExecuteInEditMode]
	public class RainDrawer : UnityEngine.MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int RenderQueue;

		[NonSerialized]
		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 CameraPos;

		[NonSerialized]
		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color OverlayColor;

		[NonSerialized]
		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Texture NormalMap;

		[NonSerialized]
		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Texture ReliefTexture;

		[NonSerialized]
		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float DistortionStrength;

		[NonSerialized]
		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float ReliefValue;

		[NonSerialized]
		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float Shiness;

		[NonSerialized]
		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float Blur;

		[NonSerialized]
		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float Darkness;

		[NonSerialized]
		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public RainDropTools.RainDropShaderType ShaderType;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material material;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshFilter meshFilter;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh mesh;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool changed;

		[Token(Token = "0x1700038F")]
		public bool IsEnabled
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xBE003C", Offset = "0xBE003C", VA = "0xBE003C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xBE00D4", Offset = "0xBE00D4", VA = "0xBE00D4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0xBE00E0", Offset = "0xBE00E0", VA = "0xBE00E0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0xBE0178", Offset = "0xBE0178", VA = "0xBE0178")]
		public void Show()
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0xBE0DF0", Offset = "0xBE0DF0", VA = "0xBE0DF0")]
		public RainDrawer()
		{
		}
	}
}
namespace Adventure
{
	[Token(Token = "0x2000637")]
	public static class AdventureConstants
	{
		[Token(Token = "0x40028B0")]
		public const int COLLECTIBLE_AMOUNT = 60;

		[Token(Token = "0x40028B1")]
		public const int GOLD_THRESHOLD = 40;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int TYPE_AMOUNT;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<AdventureItemType> TYPE_LIST;

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xE5C9CC", Offset = "0xE5C9CC", VA = "0xE5C9CC")]
		static AdventureConstants()
		{
		}
	}
	[Token(Token = "0x2000638")]
	public class AdventureFinishLine : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _finished;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _subbed;

		[Token(Token = "0x140000CF")]
		public static event Action OnAdventureFinished
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xE5CB18", Offset = "0xE5CB18", VA = "0xE5CB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51448", Offset = "0xB51448")]
			add
			{
			}
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0xE5CBCC", Offset = "0xE5CBCC", VA = "0xE5CBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51458", Offset = "0xB51458")]
			remove
			{
			}
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0xE5CC80", Offset = "0xE5CC80", VA = "0xE5CC80")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xE5CD20", Offset = "0xE5CD20", VA = "0xE5CD20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0xE5CDC4", Offset = "0xE5CDC4", VA = "0xE5CDC4")]
		private void GameReset()
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0xE5CDCC", Offset = "0xE5CDCC", VA = "0xE5CDCC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0xE5CE70", Offset = "0xE5CE70", VA = "0xE5CE70")]
		public AdventureFinishLine()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public class AdventureItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SphereCollider _collider;

		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _renderer;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material _swapout;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _preCollected;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _collectedEffect;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _index;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private AdventureItemType _itemType;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AdventureMapContainer _container;

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0xE5CE78", Offset = "0xE5CE78", VA = "0xE5CE78")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0xE5CF08", Offset = "0xE5CF08", VA = "0xE5CF08")]
		public void MapReset()
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0xE5CFA8", Offset = "0xE5CFA8", VA = "0xE5CFA8")]
		public void SetContainerData(int index, AdventureItemType type, AdventureMapContainer container)
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0xE5CFB4", Offset = "0xE5CFB4", VA = "0xE5CFB4")]
		public void SetCollectedMaterial()
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0xE5CFD8", Offset = "0xE5CFD8", VA = "0xE5CFD8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0xE5D29C", Offset = "0xE5D29C", VA = "0xE5D29C")]
		public AdventureItem()
		{
		}
	}
	[Token(Token = "0x200063A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB33EE0", Offset = "0xB33EE0")]
	public class AdventureItemCollection : ScriptableObject
	{
		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdventureItem[] items;

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0xE5D2AC", Offset = "0xE5D2AC", VA = "0xE5D2AC")]
		public AdventureItem GetPrefab(AdventureItemType type)
		{
			return null;
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0xE5D39C", Offset = "0xE5D39C", VA = "0xE5D39C")]
		public AdventureItemCollection()
		{
		}
	}
	[Token(Token = "0x200063B")]
	public class AdventureItemSpawn : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AdventureItemType _itemType;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _index;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AdventureMapContainer _container;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AdventureItem _spawn;

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xE5D3A4", Offset = "0xE5D3A4", VA = "0xE5D3A4")]
		public void SetContainerData(int index, AdventureMapContainer container)
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0xE5D3B0", Offset = "0xE5D3B0", VA = "0xE5D3B0")]
		public AdventureItem SpawnItem(AdventureItemCollection collection)
		{
			return null;
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0xE5D4F4", Offset = "0xE5D4F4", VA = "0xE5D4F4")]
		public AdventureItemSpawn()
		{
		}
	}
	[Token(Token = "0x200063C")]
	public enum AdventureItemType
	{
		[Token(Token = "0x40028C6")]
		Silver,
		[Token(Token = "0x40028C7")]
		Gold
	}
	[Token(Token = "0x200063D")]
	public struct AdventureSavedLocation
	{
		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int map;

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0xE5DD50", Offset = "0xE5DD50", VA = "0xE5DD50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0xE5DE40", Offset = "0xE5DE40", VA = "0xE5DE40")]
		public AdventureSavedLocation(string savedString)
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0xE5E020", Offset = "0xE5E020", VA = "0xE5E020")]
		public AdventureSavedLocation(Vector3 position, int map)
		{
		}
	}
	[Token(Token = "0x200063E")]
	public static class AdventureLocationCapture
	{
		[Token(Token = "0x40028CA")]
		private const string _SAVE_FOLDER = "AdventureEditor";

		[Token(Token = "0x17000390")]
		public static string SavePath
		{
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0xE5D508", Offset = "0xE5D508", VA = "0xE5D508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0xE5D55C", Offset = "0xE5D55C", VA = "0xE5D55C")]
		public static void UpdateAdventureCapture(Vector3 position)
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class AdventureMapContainer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028CB")]
		private const string _RESOURCE = "AdventureItems";

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _mapIndex;

		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AdventureItemSpawn[] _spawns;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AdventureItemCollection _collection;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41D6C", Offset = "0xB41D6C")]
		private static AdventureMapContainer <Instance>k__BackingField;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AdventureItem[] _spawnedItems;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _eventSubscribed;

		[Token(Token = "0x17000391")]
		public static AdventureMapContainer Instance
		{
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0xE5D560", Offset = "0xE5D560", VA = "0xE5D560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51468", Offset = "0xB51468")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xE5D5B0", Offset = "0xE5D5B0", VA = "0xE5D5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51478", Offset = "0xB51478")]
			private set
			{
			}
		}

		[Token(Token = "0x140000D0")]
		public static event Action<int, AdventureItemType> OnItemCollected
		{
			[Token(Token = "0x6002A57")]
			[Address(RVA = "0xE5D604", Offset = "0xE5D604", VA = "0xE5D604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51488", Offset = "0xB51488")]
			add
			{
			}
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0xE5D6BC", Offset = "0xE5D6BC", VA = "0xE5D6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51498", Offset = "0xB51498")]
			remove
			{
			}
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0xE5D774", Offset = "0xE5D774", VA = "0xE5D774")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0xE5DC38", Offset = "0xE5DC38", VA = "0xE5DC38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0xE5DCE0", Offset = "0xE5DCE0", VA = "0xE5DCE0")]
		private void ResetItems()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0xE5D9A8", Offset = "0xE5D9A8", VA = "0xE5D9A8")]
		private void LoadCollection()
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0xE5DAA8", Offset = "0xE5DAA8", VA = "0xE5DAA8")]
		private void SpawnItems()
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0xE5D1FC", Offset = "0xE5D1FC", VA = "0xE5D1FC")]
		public void CollectItem(int index, AdventureItemType type)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xE5DD48", Offset = "0xE5DD48", VA = "0xE5DD48")]
		public AdventureMapContainer()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public static class AdventureSpawner
	{
		[Token(Token = "0x40028D3")]
		private const string _RESOURCE = "AdventureSpawns_Map_{0}";

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0xE5E030", Offset = "0xE5E030", VA = "0xE5E030")]
		public static AdventureMapContainer SpawnPath(int map)
		{
			return null;
		}
	}
	[Token(Token = "0x2000641")]
	public class ProgressWidget : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _bar;

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0xE5F9C8", Offset = "0xE5F9C8", VA = "0xE5F9C8")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0xE5F9EC", Offset = "0xE5F9EC", VA = "0xE5F9EC")]
		public void SetText(int current, int max)
		{
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0xE5FAB4", Offset = "0xE5FAB4", VA = "0xE5FAB4")]
		public void SetBar(float progress)
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xE5FB5C", Offset = "0xE5FB5C", VA = "0xE5FB5C")]
		public void SetProgress(int current, int max)
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0xE5FB9C", Offset = "0xE5FB9C", VA = "0xE5FB9C")]
		public ProgressWidget()
		{
		}
	}
}
namespace Adventure.Menu
{
	[Token(Token = "0x2000642")]
	public class AdventureInfoPane : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image[] _timeIcons;

		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _timeSelection;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform[] _timeParents;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text _singleRunLabel;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AdventureItemGrid _itemGrid;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text[] _amountLabels;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform _percentBar;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text _percentLabel;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action<int, int> _callback;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameMapInfo _levelInfo;

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0xE5E26C", Offset = "0xE5E26C", VA = "0xE5E26C")]
		public void SelectTime(int index)
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xE5E40C", Offset = "0xE5E40C", VA = "0xE5E40C")]
		public void SetData(GameMapInfo map, Action<int, int> callback)
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0xE5E970", Offset = "0xE5E970", VA = "0xE5E970")]
		public void HighlightButton(int index)
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0xE5E44C", Offset = "0xE5E44C", VA = "0xE5E44C")]
		private void DisplayInfo()
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xE5EBC0", Offset = "0xE5EBC0", VA = "0xE5EBC0")]
		public AdventureInfoPane()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public class AdventureItemGrid : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image[] _items;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color _uncollected;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color[] _types;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _useOverlay;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] _overlays;

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xE5EBC8", Offset = "0xE5EBC8", VA = "0xE5EBC8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB514A8", Offset = "0xB514A8")]
		private void GetChildItems()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xE5ED08", Offset = "0xE5ED08", VA = "0xE5ED08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB514E0", Offset = "0xB514E0")]
		private void GetChildOverlays()
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0xE5E9BC", Offset = "0xE5E9BC", VA = "0xE5E9BC")]
		public void SetData(List<bool> obtained, List<AdventureItemType> types)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0xE5EE30", Offset = "0xE5EE30", VA = "0xE5EE30")]
		public void SetData(List<bool> obtained, List<bool> obtainedThisRun, List<AdventureItemType> types)
		{
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0xE5F09C", Offset = "0xE5F09C", VA = "0xE5F09C")]
		public AdventureItemGrid()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public class AdventureResults : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _header;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AdventureItemGrid _itemGrid;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text[] _allAmounts;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform _allBar;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _allPercent;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text[] _runAmounts;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _runTotal;

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xE5F0A4", Offset = "0xE5F0A4", VA = "0xE5F0A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0xE5F2CC", Offset = "0xE5F2CC", VA = "0xE5F2CC")]
		public void UpdateHeader(int map = -1)
		{
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0xE5F378", Offset = "0xE5F378", VA = "0xE5F378")]
		public void UpdateData(List<bool> obtained, List<bool> obtainedThisRun)
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xE5F900", Offset = "0xE5F900", VA = "0xE5F900")]
		public void TapRetry()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xE5F960", Offset = "0xE5F960", VA = "0xE5F960")]
		public void TapContinue()
		{
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xE5F9C0", Offset = "0xE5F9C0", VA = "0xE5F9C0")]
		public AdventureResults()
		{
		}
	}
}
namespace Achievements
{
	[Token(Token = "0x2000645")]
	public class AchievementList : ScriptableObject
	{
		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41EEC", Offset = "0xB41EEC")]
		public CheckMultiplayerAchievement[] firstPlace;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Achievement firstPlaceFiveTimes;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41F24", Offset = "0xB41F24")]
		public TimeAchievement[] grindTime;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41F5C", Offset = "0xB41F5C")]
		public ProgressionAchievement[] mapAchievements;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Achievement allTracksGold;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41F94", Offset = "0xB41F94")]
		public ScoreAchievement scoreChallenge;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Achievement timeAttackBeat;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB41FCC", Offset = "0xB41FCC")]
		public Achievement threadTheNeedle;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Achievement shootHoop;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Achievement popTwoCans;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Achievement waterfall;

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xE5B638", Offset = "0xE5B638", VA = "0xE5B638")]
		public AchievementList()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public static class AchievementTrigger
	{
		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xE5B640", Offset = "0xE5B640", VA = "0xE5B640")]
		public static void MapProgress()
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0xE5B870", Offset = "0xE5B870", VA = "0xE5B870")]
		public static void FirstPlace()
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xE5BA28", Offset = "0xE5BA28", VA = "0xE5BA28")]
		public static void GrindTime(float time)
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xE5B7D4", Offset = "0xE5B7D4", VA = "0xE5B7D4")]
		public static void ScoreAttack()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xE5BAE8", Offset = "0xE5BAE8", VA = "0xE5BAE8")]
		public static void BeatGhost()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xE5BB4C", Offset = "0xE5BB4C", VA = "0xE5BB4C")]
		public static void ThreadTheNeedle()
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xE5BBB0", Offset = "0xE5BBB0", VA = "0xE5BBB0")]
		public static void ShotHoop()
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xE5BC14", Offset = "0xE5BC14", VA = "0xE5BC14")]
		public static void TwoCans()
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xE5BC78", Offset = "0xE5BC78", VA = "0xE5BC78")]
		public static void Waterfall()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public static class Achievements
	{
		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42004", Offset = "0xB42004")]
		private static IAchievementBridge <Bridge>k__BackingField;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42014", Offset = "0xB42014")]
		private static AchievementList <List>k__BackingField;

		[Token(Token = "0x40028F9")]
		private const string _ACHIEVEMENT_LIST_RESOURCE = "AchievementData";

		[Token(Token = "0x17000392")]
		public static IAchievementBridge Bridge
		{
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0xE5BCDC", Offset = "0xE5BCDC", VA = "0xE5BCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51518", Offset = "0xB51518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xE5BD2C", Offset = "0xE5BD2C", VA = "0xE5BD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51528", Offset = "0xB51528")]
			private set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public static AchievementList List
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0xE5BD80", Offset = "0xE5BD80", VA = "0xE5BD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51538", Offset = "0xB51538")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xE5BDD0", Offset = "0xE5BDD0", VA = "0xE5BDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51548", Offset = "0xB51548")]
			private set
			{
			}
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xE5BE24", Offset = "0xE5BE24", VA = "0xE5BE24")]
		public static void Init()
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xE5B478", Offset = "0xE5B478", VA = "0xE5B478")]
		public static void Unlock(Achievement achievementToUnlock, Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x2000648")]
	public interface IAchievementBridge
	{
		[Token(Token = "0x6002A86")]
		bool Init();

		[Token(Token = "0x6002A87")]
		void Unlock(Achievement achievementToUnlock, [Optional] Action<bool> callback);
	}
	[Token(Token = "0x2000649")]
	public class MockAchievementBridge : IAchievementBridge
	{
		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xE5C05C", Offset = "0xE5C05C", VA = "0xE5C05C", Slot = "4")]
		public bool Init()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xE5C064", Offset = "0xE5C064", VA = "0xE5C064", Slot = "5")]
		public void Unlock(Achievement achievementToUnlock, Action<bool> callback)
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0xE5C1B8", Offset = "0xE5C1B8", VA = "0xE5C1B8")]
		public MockAchievementBridge()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class MockUniqueAchievementBridge : UniqueAchievementBridge
	{
		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xE5C1C0", Offset = "0xE5C1C0", VA = "0xE5C1C0", Slot = "6")]
		public override bool Init()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xE5C1C8", Offset = "0xE5C1C8", VA = "0xE5C1C8", Slot = "7")]
		protected override bool UniqueUnlock(Achievement achievementToUnlock)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0xE5C04C", Offset = "0xE5C04C", VA = "0xE5C04C")]
		public MockUniqueAchievementBridge()
		{
		}
	}
	[Token(Token = "0x200064B")]
	public abstract class UniqueAchievementBridge : IAchievementBridge
	{
		[Token(Token = "0x40028FA")]
		private const string _ACH_PREFIX = "UA_achieve_";

		[Token(Token = "0x6002A8E")]
		public abstract bool Init();

		[Token(Token = "0x6002A8F")]
		protected abstract bool UniqueUnlock(Achievement achievementToUnlock);

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xE5C318", Offset = "0xE5C318", VA = "0xE5C318", Slot = "5")]
		public void Unlock(Achievement achievementToUnlock, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xE5C464", Offset = "0xE5C464", VA = "0xE5C464")]
		private void SetUnlocked(Achievement achievement, bool unlocked = true)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xE5C3D4", Offset = "0xE5C3D4", VA = "0xE5C3D4")]
		private bool GetUnlocked(Achievement achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xE5C2F8", Offset = "0xE5C2F8", VA = "0xE5C2F8")]
		protected UniqueAchievementBridge()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class ViveportAchievementBridge : IAchievementBridge
	{
		[Token(Token = "0x2000A27")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB370B0", Offset = "0xB370B0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400335F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x60039B4")]
			[Address(RVA = "0xE5C694", Offset = "0xE5C694", VA = "0xE5C694")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60039B5")]
			[Address(RVA = "0xE5C6A4", Offset = "0xE5C6A4", VA = "0xE5C6A4")]
			internal void <Unlock>b__0(int uploadResult)
			{
			}
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xE5C4F4", Offset = "0xE5C4F4", VA = "0xE5C4F4", Slot = "4")]
		public bool Init()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0xE5C4FC", Offset = "0xE5C4FC", VA = "0xE5C4FC", Slot = "5")]
		public void Unlock(Achievement achievementToUnlock, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xE5C69C", Offset = "0xE5C69C", VA = "0xE5C69C")]
		public ViveportAchievementBridge()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064D")]
	public class Achievement
	{
		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string editorInfo;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string internalId;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string apiName;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string steamId;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ps4TrophyId;

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xE5B474", Offset = "0xE5B474", VA = "0xE5B474")]
		public void Unlock([Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xE5B630", Offset = "0xE5B630", VA = "0xE5B630")]
		public Achievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064E")]
	public class CheckMultiplayerAchievement : Achievement
	{
		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool requireMultiplayer;

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xE5C054", Offset = "0xE5C054", VA = "0xE5C054")]
		public CheckMultiplayerAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064F")]
	public class ProgressionAchievement : Achievement
	{
		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int mapIndex;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool requireGold;

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xE5C300", Offset = "0xE5C300", VA = "0xE5C300")]
		public ProgressionAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000650")]
	public class ScoreAchievement : Achievement
	{
		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int scoreRequired;

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0xE5C308", Offset = "0xE5C308", VA = "0xE5C308")]
		public ScoreAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000651")]
	public class TimeAchievement : Achievement
	{
		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float timeRequired;

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0xE5C310", Offset = "0xE5C310", VA = "0xE5C310")]
		public TimeAchievement()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000652")]
	public class BarebonesGridLayout : LayoutGroup
	{
		[Token(Token = "0x2000A28")]
		public enum Corner
		{
			[Token(Token = "0x4003361")]
			UpperLeft,
			[Token(Token = "0x4003362")]
			UpperRight,
			[Token(Token = "0x4003363")]
			LowerLeft,
			[Token(Token = "0x4003364")]
			LowerRight
		}

		[Token(Token = "0x2000A29")]
		public enum Axis
		{
			[Token(Token = "0x4003366")]
			Horizontal,
			[Token(Token = "0x4003367")]
			Vertical
		}

		[Token(Token = "0x2000A2A")]
		public enum Constraint
		{
			[Token(Token = "0x4003369")]
			Flexible,
			[Token(Token = "0x400336A")]
			FixedColumnCount,
			[Token(Token = "0x400336B")]
			FixedRowCount
		}

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected Corner m_StartCorner;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected Axis m_StartAxis;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected Vector2 m_CellSize;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Vector2 m_Spacing;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Constraint m_Constraint;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected int m_ConstraintCount;

		[Token(Token = "0x17000394")]
		public Corner startCorner
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0xF991F4", Offset = "0xF991F4", VA = "0xF991F4")]
			get
			{
				return default(Corner);
			}
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0xF991FC", Offset = "0xF991FC", VA = "0xF991FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public Axis startAxis
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0xF99260", Offset = "0xF99260", VA = "0xF99260")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0xF99268", Offset = "0xF99268", VA = "0xF99268")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public Vector2 cellSize
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0xF992CC", Offset = "0xF992CC", VA = "0xF992CC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xF992D4", Offset = "0xF992D4", VA = "0xF992D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public Vector2 spacing
		{
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0xF99340", Offset = "0xF99340", VA = "0xF99340")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0xF99348", Offset = "0xF99348", VA = "0xF99348")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public Constraint constraint
		{
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0xF993B4", Offset = "0xF993B4", VA = "0xF993B4")]
			get
			{
				return default(Constraint);
			}
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0xF993BC", Offset = "0xF993BC", VA = "0xF993BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public int constraintCount
		{
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0xF99420", Offset = "0xF99420", VA = "0xF99420")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0xF99428", Offset = "0xF99428", VA = "0xF99428")]
			set
			{
			}
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0xF994C0", Offset = "0xF994C0", VA = "0xF994C0")]
		protected BarebonesGridLayout()
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0xF9956C", Offset = "0xF9956C", VA = "0xF9956C", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0xF99714", Offset = "0xF99714", VA = "0xF99714", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0xF998F8", Offset = "0xF998F8", VA = "0xF998F8", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0xF99A08", Offset = "0xF99A08", VA = "0xF99A08", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0xF998FC", Offset = "0xF998FC", VA = "0xF998FC")]
		private void HandleHorizontalCells()
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0xF99A0C", Offset = "0xF99A0C", VA = "0xF99A0C")]
		private void HandleVerticalCells()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x2000653")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0xF8F404", Offset = "0xF8F404", VA = "0xF8F404")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000654")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0xF902CC", Offset = "0xF902CC", VA = "0xF902CC")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000655")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0xF97674", Offset = "0xF97674", VA = "0xF97674")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x2000656")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0xF976A0", Offset = "0xF976A0", VA = "0xF976A0")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000A2B")]
		private static class Uniforms
		{
			[Token(Token = "0x400336C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x400336D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x400336E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x400336F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4003370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4003371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4003372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4003373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4003374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4003375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000A2C")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4003377")]
			DepthTexture,
			[Token(Token = "0x4003378")]
			DepthNormalsTexture,
			[Token(Token = "0x4003379")]
			GBuffer
		}

		[Token(Token = "0x400290F")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4002910")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x1700039A")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0xCBBFAC", Offset = "0xCBBFAC", VA = "0xCBBFAC")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x1700039B")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0xCBC058", Offset = "0xCBC058", VA = "0xCBC058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039C")]
		public override bool active
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0xCBC0F0", Offset = "0xCBC0F0", VA = "0xCBC0F0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0xCBC16C", Offset = "0xCBC16C", VA = "0xCBC16C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0xCBC1A8", Offset = "0xCBC1A8", VA = "0xCBC1A8", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0xCBC1F0", Offset = "0xCBC1F0", VA = "0xCBC1F0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0xCBC25C", Offset = "0xCBC25C", VA = "0xCBC25C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0xCBCC14", Offset = "0xCBCC14", VA = "0xCBCC14")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x2000658")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x2000A2D")]
		private static class Uniforms
		{
			[Token(Token = "0x400337A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x400337B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x400337C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x400337D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x400337E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x400337F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4003380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4003381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4003382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4003383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4002912")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x1700039D")]
		public override bool active
		{
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0xCBD188", Offset = "0xCBD188", VA = "0xCBD188", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0xCBD204", Offset = "0xCBD204", VA = "0xCBD204")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0xCBDC8C", Offset = "0xCBDC8C", VA = "0xCBDC8C")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x2000659")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x2000A2E")]
		private static class Uniforms
		{
			[Token(Token = "0x4003384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4003385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4003386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4003387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4003388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4003389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x400338A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x2000A2F")]
		private enum Pass
		{
			[Token(Token = "0x400338C")]
			Depth,
			[Token(Token = "0x400338D")]
			Normals,
			[Token(Token = "0x400338E")]
			MovecOpacity,
			[Token(Token = "0x400338F")]
			MovecImaging,
			[Token(Token = "0x4003390")]
			MovecArrows
		}

		[Token(Token = "0x2000A30")]
		private class ArrowArray
		{
			[Token(Token = "0x4003391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB426B8", Offset = "0xB426B8")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4003392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB426C8", Offset = "0xB426C8")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4003393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB426D8", Offset = "0xB426D8")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x170005C3")]
			public Mesh mesh
			{
				[Token(Token = "0x60039B9")]
				[Address(RVA = "0xCBEFEC", Offset = "0xCBEFEC", VA = "0xCBEFEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB55DAC", Offset = "0xB55DAC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60039BA")]
				[Address(RVA = "0xCBEFF4", Offset = "0xCBEFF4", VA = "0xCBEFF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB55DBC", Offset = "0xB55DBC")]
				private set
				{
				}
			}

			[Token(Token = "0x170005C4")]
			public int columnCount
			{
				[Token(Token = "0x60039BB")]
				[Address(RVA = "0xCBEFFC", Offset = "0xCBEFFC", VA = "0xCBEFFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB55DCC", Offset = "0xB55DCC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60039BC")]
				[Address(RVA = "0xCBF004", Offset = "0xCBF004", VA = "0xCBF004")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB55DDC", Offset = "0xB55DDC")]
				private set
				{
				}
			}

			[Token(Token = "0x170005C5")]
			public int rowCount
			{
				[Token(Token = "0x60039BD")]
				[Address(RVA = "0xCBF00C", Offset = "0xCBF00C", VA = "0xCBF00C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB55DEC", Offset = "0xB55DEC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60039BE")]
				[Address(RVA = "0xCBF014", Offset = "0xCBF014", VA = "0xCBF014")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB55DFC", Offset = "0xB55DFC")]
				private set
				{
				}
			}

			[Token(Token = "0x60039BF")]
			[Address(RVA = "0xCBEB1C", Offset = "0xCBEB1C", VA = "0xCBEB1C")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x60039C0")]
			[Address(RVA = "0xCBEAF0", Offset = "0xCBEAF0", VA = "0xCBEAF0")]
			public void Release()
			{
			}

			[Token(Token = "0x60039C1")]
			[Address(RVA = "0xCBEAE8", Offset = "0xCBEAE8", VA = "0xCBEAE8")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4002915")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x1700039E")]
		public override bool active
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0xCBDFE4", Offset = "0xCBDFE4", VA = "0xCBDFE4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0xCBE050", Offset = "0xCBE050", VA = "0xCBE050", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xCBE0C0", Offset = "0xCBE0C0", VA = "0xCBE0C0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0xCBE120", Offset = "0xCBE120", VA = "0xCBE120", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xCBE168", Offset = "0xCBE168", VA = "0xCBE168", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xCBE278", Offset = "0xCBE278", VA = "0xCBE278")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0xCBE390", Offset = "0xCBE390", VA = "0xCBE390")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xCBE454", Offset = "0xCBE454", VA = "0xCBE454")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xCBE9F0", Offset = "0xCBE9F0", VA = "0xCBE9F0")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xCBEF64", Offset = "0xCBEF64", VA = "0xCBEF64", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xCBEF9C", Offset = "0xCBEF9C", VA = "0xCBEF9C")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x2000A31")]
		private static class Uniforms
		{
			[Token(Token = "0x4003394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4003395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x1700039F")]
		public override bool active
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0xCBF224", Offset = "0xCBF224", VA = "0xCBF224", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0xCBF2A0", Offset = "0xCBF2A0", VA = "0xCBF2A0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0xCBF2CC", Offset = "0xCBF2CC", VA = "0xCBF2CC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0xCBF584", Offset = "0xCBF584", VA = "0xCBF584")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x2000A32")]
		private static class Uniforms
		{
			[Token(Token = "0x4003396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4003397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4003398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4003399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x400339A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x400339B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x400339C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x400339D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x400339E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x400339F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x40033A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x40033A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x40033A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x40033A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x40033A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x40033A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x40033A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x40033A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x40033A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x40033A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4002918")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4002919")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x400291A")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x170003A0")]
		public override bool active
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0xCBF6A0", Offset = "0xCBF6A0", VA = "0xCBF6A0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xCBF710", Offset = "0xCBF710", VA = "0xCBF710")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xCBF73C", Offset = "0xCBF73C", VA = "0xCBF73C")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xCBF7FC", Offset = "0xCBF7FC", VA = "0xCBF7FC")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0xCBF8F0", Offset = "0xCBF8F0", VA = "0xCBF8F0")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xCBF9E4", Offset = "0xCBF9E4", VA = "0xCBF9E4")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xCBFAE0", Offset = "0xCBFAE0", VA = "0xCBFAE0")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xCBFB6C", Offset = "0xCBFB6C", VA = "0xCBFB6C")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0xCBFCEC", Offset = "0xCBFCEC", VA = "0xCBFCEC")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0xCBFE1C", Offset = "0xCBFE1C", VA = "0xCBFE1C")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0xCBFEC4", Offset = "0xCBFEC4", VA = "0xCBFEC4")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xCBFF68", Offset = "0xCBFF68", VA = "0xCBFF68")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xCC00D0", Offset = "0xCC00D0", VA = "0xCC00D0")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xCC016C", Offset = "0xCC016C", VA = "0xCC016C")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xCC0214", Offset = "0xCC0214", VA = "0xCC0214")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xCC0248", Offset = "0xCC0248", VA = "0xCC0248")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0xCC059C", Offset = "0xCC059C", VA = "0xCC059C")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xCC0648", Offset = "0xCC0648", VA = "0xCC0648")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xCC0678", Offset = "0xCC0678", VA = "0xCC0678")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xCC0EFC", Offset = "0xCC0EFC", VA = "0xCC0EFC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xCC113C", Offset = "0xCC113C", VA = "0xCC113C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xCC1260", Offset = "0xCC1260", VA = "0xCC1260", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0xCC12D4", Offset = "0xCC12D4", VA = "0xCC12D4")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x200065C")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x2000A33")]
		private static class Uniforms
		{
			[Token(Token = "0x40033AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x40033AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x40033AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x40033AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x40033AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x40033AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x40033B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x40033B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40033B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x40033B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x40033B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x400291D")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x400291F")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x170003A1")]
		public override bool active
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0xF8C118", Offset = "0xF8C118", VA = "0xF8C118", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xF8C188", Offset = "0xF8C188", VA = "0xF8C188", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xF8C190", Offset = "0xF8C190", VA = "0xF8C190")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0xF8C25C", Offset = "0xF8C25C", VA = "0xF8C25C")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xF8C308", Offset = "0xF8C308", VA = "0xF8C308")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0xF8C3E8", Offset = "0xF8C3E8", VA = "0xF8C3E8")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xF8C438", Offset = "0xF8C438", VA = "0xF8C438")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xF8D070", Offset = "0xF8D070", VA = "0xF8D070", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0xF8D0F8", Offset = "0xF8D0F8", VA = "0xF8D0F8")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x200065D")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x2000A34")]
		private static class Uniforms
		{
			[Token(Token = "0x40033B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x40033B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4002922")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x170003A2")]
		public override bool active
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0xF8D39C", Offset = "0xF8D39C", VA = "0xF8D39C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xF8D40C", Offset = "0xF8D40C", VA = "0xF8D40C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0xF8D414", Offset = "0xF8D414", VA = "0xF8D414")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xF8D568", Offset = "0xF8D568", VA = "0xF8D568", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0xF8D744", Offset = "0xF8D744", VA = "0xF8D744")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x200065E")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x2000A35")]
		private static class Uniforms
		{
			[Token(Token = "0x40033B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x40033B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x40033B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x40033BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x40033BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x40033BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x400292B")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x400292C")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x400292D")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x170003A3")]
		public override bool active
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0xF8D844", Offset = "0xF8D844", VA = "0xF8D844", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xF8D8C0", Offset = "0xF8D8C0", VA = "0xF8D8C0")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xF8D8CC", Offset = "0xF8D8CC", VA = "0xF8D8CC", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0xF8D8D8", Offset = "0xF8D8D8", VA = "0xF8D8D8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0xF8DA70", Offset = "0xF8DA70", VA = "0xF8DA70")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xF8DB94", Offset = "0xF8DB94", VA = "0xF8DB94")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xF8E520", Offset = "0xF8E520", VA = "0xF8E520")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xF8E6B8", Offset = "0xF8E6B8", VA = "0xF8E6B8")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x200065F")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x2000A36")]
		private static class Uniforms
		{
			[Token(Token = "0x40033BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x40033BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x40033BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x40033C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x40033C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x400292E")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x170003A4")]
		public override bool active
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0xF8E92C", Offset = "0xF8E92C", VA = "0xF8E92C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xF8E9E4", Offset = "0xF8E9E4", VA = "0xF8E9E4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0xF8EA2C", Offset = "0xF8EA2C", VA = "0xF8EA2C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0xF8EA34", Offset = "0xF8EA34", VA = "0xF8EA34", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0xF8EA3C", Offset = "0xF8EA3C", VA = "0xF8EA3C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0xF8EEEC", Offset = "0xF8EEEC", VA = "0xF8EEEC")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x2000660")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000A37")]
		private static class Uniforms
		{
			[Token(Token = "0x40033C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x40033C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x170003A5")]
		public override bool active
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0xF8F054", Offset = "0xF8F054", VA = "0xF8F054", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0xF8F0CC", Offset = "0xF8F0CC", VA = "0xF8F0CC")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0xF8F330", Offset = "0xF8F330", VA = "0xF8F330")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x2000A38")]
		private static class Uniforms
		{
			[Token(Token = "0x40033C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x40033C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x40033C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x40033C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x170003A6")]
		public override bool active
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0xF8F430", Offset = "0xF8F430", VA = "0xF8F430", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0xF8F4BC", Offset = "0xF8F4BC", VA = "0xF8F4BC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0xF8F4E4", Offset = "0xF8F4E4", VA = "0xF8F4E4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0xF8F8A4", Offset = "0xF8F8A4", VA = "0xF8F8A4")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000A39")]
		private static class Uniforms
		{
			[Token(Token = "0x40033C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x40033C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x40033CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x40033CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x40033CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40033CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x40033CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x40033CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x40033D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x40033D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x40033D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x40033D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x40033D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x40033D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x40033D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x40033D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x40033D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x40033D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x40033DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x40033DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x40033DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x40033DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x40033DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x40033DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x40033E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x40033E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000A3A")]
		private enum Pass
		{
			[Token(Token = "0x40033E3")]
			VelocitySetup,
			[Token(Token = "0x40033E4")]
			TileMax1,
			[Token(Token = "0x40033E5")]
			TileMax2,
			[Token(Token = "0x40033E6")]
			TileMaxV,
			[Token(Token = "0x40033E7")]
			NeighborMax,
			[Token(Token = "0x40033E8")]
			Reconstruction,
			[Token(Token = "0x40033E9")]
			FrameCompression,
			[Token(Token = "0x40033EA")]
			FrameBlendingChroma,
			[Token(Token = "0x40033EB")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000A3B")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x40033EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x40033ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60039CB")]
			[Address(RVA = "0xF90368", Offset = "0xF90368", VA = "0xF90368")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60039CC")]
			[Address(RVA = "0xF92430", Offset = "0xF92430", VA = "0xF92430")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60039CD")]
			[Address(RVA = "0xF90550", Offset = "0xF90550", VA = "0xF90550")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x60039CE")]
			[Address(RVA = "0xF90C6C", Offset = "0xF90C6C", VA = "0xF90C6C")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000A3C")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x2000A7E")]
			private struct Frame
			{
				[Token(Token = "0x40034EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40034F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40034F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x40034F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6003A06")]
				[Address(RVA = "0xF9234C", Offset = "0xF9234C", VA = "0xF9234C")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x6003A07")]
				[Address(RVA = "0xF91DE8", Offset = "0xF91DE8", VA = "0xF91DE8")]
				public void Release()
				{
				}

				[Token(Token = "0x6003A08")]
				[Address(RVA = "0xF91EB4", Offset = "0xF91EB4", VA = "0xF91EB4")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x6003A09")]
				[Address(RVA = "0xF92164", Offset = "0xF92164", VA = "0xF92164")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x40033EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x40033EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x40033F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x40033F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x60039CF")]
			[Address(RVA = "0xF90414", Offset = "0xF90414", VA = "0xF90414")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60039D0")]
			[Address(RVA = "0xF905CC", Offset = "0xF905CC", VA = "0xF905CC")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60039D1")]
			[Address(RVA = "0xF91B44", Offset = "0xF91B44", VA = "0xF91B44")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x60039D2")]
			[Address(RVA = "0xF915E4", Offset = "0xF915E4", VA = "0xF915E4")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x60039D3")]
			[Address(RVA = "0xF91CE0", Offset = "0xF91CE0", VA = "0xF91CE0")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60039D4")]
			[Address(RVA = "0xF91D18", Offset = "0xF91D18", VA = "0xF91D18")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60039D5")]
			[Address(RVA = "0xF922D4", Offset = "0xF922D4", VA = "0xF922D4")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x170003A7")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0xF90300", Offset = "0xF90300", VA = "0xF90300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6002B09")]
			[Address(RVA = "0xF903AC", Offset = "0xF903AC", VA = "0xF903AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		public override bool active
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0xF9048C", Offset = "0xF9048C", VA = "0xF9048C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0xF90558", Offset = "0xF90558", VA = "0xF90558", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0xF905A0", Offset = "0xF905A0", VA = "0xF905A0")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0xF90654", Offset = "0xF90654", VA = "0xF90654", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0xF9065C", Offset = "0xF9065C", VA = "0xF9065C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0xF90664", Offset = "0xF90664", VA = "0xF90664", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0xF90670", Offset = "0xF90670", VA = "0xF90670", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0xF91C78", Offset = "0xF91C78", VA = "0xF91C78", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0xF91C88", Offset = "0xF91C88", VA = "0xF91C88")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000A3D")]
		private static class Uniforms
		{
			[Token(Token = "0x40033F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x40033F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x40033F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x40033F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x40033F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x40033F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x40033F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x40033F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x40033FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x40033FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x40033FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x40033FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x40033FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x40033FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4003400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4003401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4003402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4003403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4003404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4003405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4003406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4003407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4003408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4003409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x400340A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x400340B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x400340C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x400340D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x400340E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x400340F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4003410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4003411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4003412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4003413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4003414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000A3E")]
		private enum PassIndex
		{
			[Token(Token = "0x4003416")]
			RayTraceStep,
			[Token(Token = "0x4003417")]
			CompositeFinal,
			[Token(Token = "0x4003418")]
			Blur,
			[Token(Token = "0x4003419")]
			CompositeSSR,
			[Token(Token = "0x400341A")]
			MinMipGeneration,
			[Token(Token = "0x400341B")]
			HitPointToReflections,
			[Token(Token = "0x400341C")]
			BilateralKeyPack,
			[Token(Token = "0x400341D")]
			BlitDepthAsCSZ,
			[Token(Token = "0x400341E")]
			PoissonBlur
		}

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x170003AA")]
		public override bool active
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xF952A4", Offset = "0xF952A4", VA = "0xF952A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0xF9529C", Offset = "0xF9529C", VA = "0xF9529C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0xF95324", Offset = "0xF95324", VA = "0xF95324", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0xF9544C", Offset = "0xF9544C", VA = "0xF9544C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0xF95494", Offset = "0xF95494", VA = "0xF95494", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0xF9549C", Offset = "0xF9549C", VA = "0xF9549C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0xF92DFC", Offset = "0xF92DFC", VA = "0xF92DFC")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x2000664")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000A3F")]
		private static class Uniforms
		{
			[Token(Token = "0x400341F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4003420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4003421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4003422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4003423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4002938")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4002939")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42084", Offset = "0xB42084")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x170003AB")]
		public override bool active
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xF96CE8", Offset = "0xF96CE8", VA = "0xF96CE8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AC")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xF96D88", Offset = "0xF96D88", VA = "0xF96D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51558", Offset = "0xB51558")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xF96D90", Offset = "0xF96D90", VA = "0xF96D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51568", Offset = "0xB51568")]
			private set
			{
			}
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0xF96D80", Offset = "0xF96D80", VA = "0xF96D80", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xF94D94", Offset = "0xF94D94", VA = "0xF94D94")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xF93854", Offset = "0xF93854", VA = "0xF93854")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0xF94360", Offset = "0xF94360", VA = "0xF94360")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xF974B8", Offset = "0xF974B8", VA = "0xF974B8")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0xF96D98", Offset = "0xF96D98", VA = "0xF96D98")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0xF96E60", Offset = "0xF96E60", VA = "0xF96E60")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xF97324", Offset = "0xF97324", VA = "0xF97324")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xF974FC", Offset = "0xF974FC", VA = "0xF974FC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0xF92E70", Offset = "0xF92E70", VA = "0xF92E70")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x2000A40")]
		private static class Uniforms
		{
			[Token(Token = "0x4003424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4003425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x170003AD")]
		public override bool active
		{
			[Token(Token = "0x6002B27")]
			[Address(RVA = "0xF976A8", Offset = "0xF976A8", VA = "0xF976A8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0xF977F0", Offset = "0xF977F0", VA = "0xF977F0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0xF94A3C", Offset = "0xF94A3C", VA = "0xF94A3C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0xF92EE0", Offset = "0xF92EE0", VA = "0xF92EE0")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x2000A41")]
		private static class Uniforms
		{
			[Token(Token = "0x4003426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4003427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4003428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4003429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x400342A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x170003AE")]
		public override bool active
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xF979FC", Offset = "0xF979FC", VA = "0xF979FC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0xF97A6C", Offset = "0xF97A6C", VA = "0xF97A6C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0xF92F30", Offset = "0xF92F30", VA = "0xF92F30")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000667")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000A42")]
		public enum SampleCount
		{
			[Token(Token = "0x400342C")]
			Lowest = 3,
			[Token(Token = "0x400342D")]
			Low = 6,
			[Token(Token = "0x400342E")]
			Medium = 10,
			[Token(Token = "0x400342F")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000A43")]
		public struct Settings
		{
			[Token(Token = "0x4003430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB426E8", Offset = "0xB426E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB426E8", Offset = "0xB426E8")]
			public float intensity;

			[Token(Token = "0x4003431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB4273C", Offset = "0xB4273C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4273C", Offset = "0xB4273C")]
			public float radius;

			[Token(Token = "0x4003432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42790", Offset = "0xB42790")]
			public SampleCount sampleCount;

			[Token(Token = "0x4003433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB427C8", Offset = "0xB427C8")]
			public bool downsampling;

			[Token(Token = "0x4003434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42800", Offset = "0xB42800")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4003435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42838", Offset = "0xB42838")]
			public bool ambientOnly;

			[Token(Token = "0x4003436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42870", Offset = "0xB42870")]
			public bool highPrecision;

			[Token(Token = "0x170005C6")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039DA")]
				[Address(RVA = "0xCBCED0", Offset = "0xCBCED0", VA = "0xCBCED0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003AF")]
		public Settings settings
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0xCBCEA4", Offset = "0xCBCEA4", VA = "0xCBCEA4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0xCBCEB4", Offset = "0xCBCEB4", VA = "0xCBCEB4")]
			set
			{
			}
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0xCBCEC0", Offset = "0xCBCEC0", VA = "0xCBCEC0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0xCBCEE8", Offset = "0xCBCEE8", VA = "0xCBCEE8")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000668")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x2000A44")]
		public enum Method
		{
			[Token(Token = "0x4003438")]
			Fxaa,
			[Token(Token = "0x4003439")]
			Taa
		}

		[Token(Token = "0x2000A45")]
		public enum FxaaPreset
		{
			[Token(Token = "0x400343B")]
			ExtremePerformance,
			[Token(Token = "0x400343C")]
			Performance,
			[Token(Token = "0x400343D")]
			Default,
			[Token(Token = "0x400343E")]
			Quality,
			[Token(Token = "0x400343F")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x2000A46")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4003440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB428A8", Offset = "0xB428A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB428A8", Offset = "0xB428A8")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4003441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB428FC", Offset = "0xB428FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB428FC", Offset = "0xB428FC")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4003442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42958", Offset = "0xB42958")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42958", Offset = "0xB42958")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4003443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000A47")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4003444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB429B0", Offset = "0xB429B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB429B0", Offset = "0xB429B0")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4003445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42A08", Offset = "0xB42A08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42A08", Offset = "0xB42A08")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4003446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42A5C", Offset = "0xB42A5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42A5C", Offset = "0xB42A5C")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4003447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42AB0", Offset = "0xB42AB0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42AB0", Offset = "0xB42AB0")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4003448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000A48")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4003449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x170005C7")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x60039DD")]
				[Address(RVA = "0xCBD160", Offset = "0xCBD160", VA = "0xCBD160")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A49")]
		public struct TaaSettings
		{
			[Token(Token = "0x400344A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42B0C", Offset = "0xB42B0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42B0C", Offset = "0xB42B0C")]
			public float jitterSpread;

			[Token(Token = "0x400344B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42B64", Offset = "0xB42B64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42B64", Offset = "0xB42B64")]
			public float sharpen;

			[Token(Token = "0x400344C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42BB8", Offset = "0xB42BB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42BB8", Offset = "0xB42BB8")]
			public float stationaryBlending;

			[Token(Token = "0x400344D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42C10", Offset = "0xB42C10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42C10", Offset = "0xB42C10")]
			public float motionBlending;

			[Token(Token = "0x170005C8")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x60039DE")]
				[Address(RVA = "0xCBD168", Offset = "0xCBD168", VA = "0xCBD168")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A4A")]
		public struct Settings
		{
			[Token(Token = "0x400344E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x400344F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4003450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x170005C9")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039DF")]
				[Address(RVA = "0xCBCF40", Offset = "0xCBCF40", VA = "0xCBCF40")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003B0")]
		public Settings settings
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xCBCEFC", Offset = "0xCBCEFC", VA = "0xCBCEFC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0xCBCF10", Offset = "0xCBCF10", VA = "0xCBCF10")]
			set
			{
			}
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0xCBCF24", Offset = "0xCBCF24", VA = "0xCBCF24", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0xCBCF5C", Offset = "0xCBCF5C", VA = "0xCBCF5C")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000669")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A4B")]
		public struct BloomSettings
		{
			[Token(Token = "0x4003451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB42C68", Offset = "0xB42C68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42C68", Offset = "0xB42C68")]
			public float intensity;

			[Token(Token = "0x4003452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB42CB8", Offset = "0xB42CB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42CB8", Offset = "0xB42CB8")]
			public float threshold;

			[Token(Token = "0x4003453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42D08", Offset = "0xB42D08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42D08", Offset = "0xB42D08")]
			public float softKnee;

			[Token(Token = "0x4003454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42D5C", Offset = "0xB42D5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42D5C", Offset = "0xB42D5C")]
			public float radius;

			[Token(Token = "0x4003455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42DB0", Offset = "0xB42DB0")]
			public bool antiFlicker;

			[Token(Token = "0x170005CA")]
			public float thresholdLinear
			{
				[Token(Token = "0x60039E1")]
				[Address(RVA = "0xCBDC18", Offset = "0xCBDC18", VA = "0xCBDC18")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60039E0")]
				[Address(RVA = "0xCBDF40", Offset = "0xCBDF40", VA = "0xCBDF40")]
				set
				{
				}
			}

			[Token(Token = "0x170005CB")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x60039E2")]
				[Address(RVA = "0xCBDFBC", Offset = "0xCBDFBC", VA = "0xCBDFBC")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A4C")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4003456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42DE8", Offset = "0xB42DE8")]
			public Texture texture;

			[Token(Token = "0x4003457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB42E20", Offset = "0xB42E20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42E20", Offset = "0xB42E20")]
			public float intensity;

			[Token(Token = "0x170005CC")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x60039E3")]
				[Address(RVA = "0xCBDFD8", Offset = "0xCBDFD8", VA = "0xCBDFD8")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A4D")]
		public struct Settings
		{
			[Token(Token = "0x4003458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4003459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x170005CD")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039E4")]
				[Address(RVA = "0xCBDEE4", Offset = "0xCBDEE4", VA = "0xCBDEE4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003B1")]
		public Settings settings
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xCBDE88", Offset = "0xCBDE88", VA = "0xCBDE88")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xCBDEA0", Offset = "0xCBDEA0", VA = "0xCBDEA0")]
			set
			{
			}
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0xCBDEB8", Offset = "0xCBDEB8", VA = "0xCBDEB8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0xCBDF10", Offset = "0xCBDF10", VA = "0xCBDF10")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066A")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A4E")]
		public struct DepthSettings
		{
			[Token(Token = "0x400345A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42E70", Offset = "0xB42E70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42E70", Offset = "0xB42E70")]
			public float scale;

			[Token(Token = "0x170005CE")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x60039E5")]
				[Address(RVA = "0xCBF200", Offset = "0xCBF200", VA = "0xCBF200")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A4F")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x400345B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42EC4", Offset = "0xB42EC4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42EC4", Offset = "0xB42EC4")]
			public float sourceOpacity;

			[Token(Token = "0x400345C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42F18", Offset = "0xB42F18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42F18", Offset = "0xB42F18")]
			public float motionImageOpacity;

			[Token(Token = "0x400345D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB42F6C", Offset = "0xB42F6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42F6C", Offset = "0xB42F6C")]
			public float motionImageAmplitude;

			[Token(Token = "0x400345E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB42FBC", Offset = "0xB42FBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB42FBC", Offset = "0xB42FBC")]
			public float motionVectorsOpacity;

			[Token(Token = "0x400345F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43010", Offset = "0xB43010")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43010", Offset = "0xB43010")]
			public int motionVectorsResolution;

			[Token(Token = "0x4003460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB43068", Offset = "0xB43068")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43068", Offset = "0xB43068")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x170005CF")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x60039E6")]
				[Address(RVA = "0xCBF208", Offset = "0xCBF208", VA = "0xCBF208")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000A50")]
		public enum Mode
		{
			[Token(Token = "0x4003462")]
			None,
			[Token(Token = "0x4003463")]
			Depth,
			[Token(Token = "0x4003464")]
			Normals,
			[Token(Token = "0x4003465")]
			MotionVectors,
			[Token(Token = "0x4003466")]
			AmbientOcclusion,
			[Token(Token = "0x4003467")]
			EyeAdaptation,
			[Token(Token = "0x4003468")]
			FocusPlane,
			[Token(Token = "0x4003469")]
			PreGradingLog,
			[Token(Token = "0x400346A")]
			LogLut,
			[Token(Token = "0x400346B")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000A51")]
		public struct Settings
		{
			[Token(Token = "0x400346C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x400346D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x400346E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x170005D0")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039E7")]
				[Address(RVA = "0xCBF1AC", Offset = "0xCBF1AC", VA = "0xCBF1AC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003B2")]
		public Settings settings
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0xCBF140", Offset = "0xCBF140", VA = "0xCBF140")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xCBF150", Offset = "0xCBF150", VA = "0xCBF150")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public bool willInterrupt
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xCBF160", Offset = "0xCBF160", VA = "0xCBF160")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0xCBF184", Offset = "0xCBF184", VA = "0xCBF184", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0xCBC24C", Offset = "0xCBC24C", VA = "0xCBC24C")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0xCBF1D4", Offset = "0xCBF1D4", VA = "0xCBF1D4")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066B")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A52")]
		public struct Settings
		{
			[Token(Token = "0x400346F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB430B8", Offset = "0xB430B8")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4003470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB430F0", Offset = "0xB430F0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB430F0", Offset = "0xB430F0")]
			public float intensity;

			[Token(Token = "0x170005D1")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039E8")]
				[Address(RVA = "0xCBF67C", Offset = "0xCBF67C", VA = "0xCBF67C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003B4")]
		public Settings settings
		{
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xCBF658", Offset = "0xCBF658", VA = "0xCBF658")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xCBF664", Offset = "0xCBF664", VA = "0xCBF664")]
			set
			{
			}
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0xCBF66C", Offset = "0xCBF66C", VA = "0xCBF66C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0xCBF68C", Offset = "0xCBF68C", VA = "0xCBF68C")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066C")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x2000A53")]
		public enum Tonemapper
		{
			[Token(Token = "0x4003472")]
			None,
			[Token(Token = "0x4003473")]
			ACES,
			[Token(Token = "0x4003474")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x2000A54")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4003475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43144", Offset = "0xB43144")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4003476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB4317C", Offset = "0xB4317C")]
			public float neutralBlackIn;

			[Token(Token = "0x4003477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB4319C", Offset = "0xB4319C")]
			public float neutralWhiteIn;

			[Token(Token = "0x4003478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB431B4", Offset = "0xB431B4")]
			public float neutralBlackOut;

			[Token(Token = "0x4003479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB431D4", Offset = "0xB431D4")]
			public float neutralWhiteOut;

			[Token(Token = "0x400347A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB431EC", Offset = "0xB431EC")]
			public float neutralWhiteLevel;

			[Token(Token = "0x400347B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43208", Offset = "0xB43208")]
			public float neutralWhiteClip;

			[Token(Token = "0x170005D2")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x60039E9")]
				[Address(RVA = "0xF8C0F0", Offset = "0xF8C0F0", VA = "0xF8C0F0")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A55")]
		public struct BasicSettings
		{
			[Token(Token = "0x400347C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43220", Offset = "0xB43220")]
			public float postExposure;

			[Token(Token = "0x400347D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43258", Offset = "0xB43258")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43258", Offset = "0xB43258")]
			public float temperature;

			[Token(Token = "0x400347E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB432B4", Offset = "0xB432B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB432B4", Offset = "0xB432B4")]
			public float tint;

			[Token(Token = "0x400347F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43310", Offset = "0xB43310")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43310", Offset = "0xB43310")]
			public float hueShift;

			[Token(Token = "0x4003480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB4336C", Offset = "0xB4336C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4336C", Offset = "0xB4336C")]
			public float saturation;

			[Token(Token = "0x4003481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB433C0", Offset = "0xB433C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB433C0", Offset = "0xB433C0")]
			public float contrast;

			[Token(Token = "0x170005D3")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x60039EA")]
				[Address(RVA = "0xF8B780", Offset = "0xF8B780", VA = "0xF8B780")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A56")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4003482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4003483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4003484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4003485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x170005D4")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x60039EB")]
				[Address(RVA = "0xF8B790", Offset = "0xF8B790", VA = "0xF8B790")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A57")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4003486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xB43424", Offset = "0xB43424")]
			public Color slope;

			[Token(Token = "0x4003487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xB4345C", Offset = "0xB4345C")]
			public Color power;

			[Token(Token = "0x4003488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xB43494", Offset = "0xB43494")]
			public Color offset;

			[Token(Token = "0x170005D5")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x60039EC")]
				[Address(RVA = "0xF8B8DC", Offset = "0xF8B8DC", VA = "0xF8B8DC")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A58")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4003489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xB434CC", Offset = "0xB434CC")]
			public Color lift;

			[Token(Token = "0x400348A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xB43504", Offset = "0xB43504")]
			public Color gamma;

			[Token(Token = "0x400348B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xB4353C", Offset = "0xB4353C")]
			public Color gain;

			[Token(Token = "0x170005D6")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x60039ED")]
				[Address(RVA = "0xF8B968", Offset = "0xF8B968", VA = "0xF8B968")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x2000A59")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x400348D")]
			Linear,
			[Token(Token = "0x400348E")]
			Log
		}

		[Serializable]
		[Token(Token = "0x2000A5A")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x400348F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4003490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4003491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x170005D7")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x60039EE")]
				[Address(RVA = "0xF8B860", Offset = "0xF8B860", VA = "0xF8B860")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A5B")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4003492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4003493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4003494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4003495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4003496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4003497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4003498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4003499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x400349A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x400349B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x400349C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x400349D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x400349E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x170005D8")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x60039EF")]
				[Address(RVA = "0xF8B9F4", Offset = "0xF8B9F4", VA = "0xF8B9F4")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000A5C")]
		public struct Settings
		{
			[Token(Token = "0x400349F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x40034A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x40034A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x40034A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x40034A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x170005D9")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F0")]
				[Address(RVA = "0xF8B5FC", Offset = "0xF8B5FC", VA = "0xF8B5FC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB420F4", Offset = "0xB420F4")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB42104", Offset = "0xB42104")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x170003B5")]
		public Settings settings
		{
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xF8B54C", Offset = "0xF8B54C", VA = "0xF8B54C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xF8B55C", Offset = "0xF8B55C", VA = "0xF8B55C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public bool isDirty
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xF8B590", Offset = "0xF8B590", VA = "0xF8B590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51578", Offset = "0xB51578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xF8B598", Offset = "0xF8B598", VA = "0xF8B598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51588", Offset = "0xB51588")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0xF8B5A4", Offset = "0xF8B5A4", VA = "0xF8B5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB51598", Offset = "0xB51598")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xF8B5AC", Offset = "0xF8B5AC", VA = "0xF8B5AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB515A8", Offset = "0xB515A8")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xF8B5B4", Offset = "0xF8B5B4", VA = "0xF8B5B4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xF8B728", Offset = "0xF8B728", VA = "0xF8B728", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xF8B734", Offset = "0xF8B734", VA = "0xF8B734")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066D")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000A5D")]
		public enum KernelSize
		{
			[Token(Token = "0x40034A5")]
			Small,
			[Token(Token = "0x40034A6")]
			Medium,
			[Token(Token = "0x40034A7")]
			Large,
			[Token(Token = "0x40034A8")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x2000A5E")]
		public struct Settings
		{
			[Token(Token = "0x40034A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB435E4", Offset = "0xB435E4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB435E4", Offset = "0xB435E4")]
			public float focusDistance;

			[Token(Token = "0x40034AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43638", Offset = "0xB43638")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43638", Offset = "0xB43638")]
			public float aperture;

			[Token(Token = "0x40034AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43694", Offset = "0xB43694")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43694", Offset = "0xB43694")]
			public float focalLength;

			[Token(Token = "0x40034AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB436EC", Offset = "0xB436EC")]
			public bool useCameraFov;

			[Token(Token = "0x40034AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43724", Offset = "0xB43724")]
			public KernelSize kernelSize;

			[Token(Token = "0x170005DA")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F1")]
				[Address(RVA = "0xF8D340", Offset = "0xF8D340", VA = "0xF8D340")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003B8")]
		public Settings settings
		{
			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xF8D2EC", Offset = "0xF8D2EC", VA = "0xF8D2EC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xF8D300", Offset = "0xF8D300", VA = "0xF8D300")]
			set
			{
			}
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0xF8D314", Offset = "0xF8D314", VA = "0xF8D314", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0xF8D36C", Offset = "0xF8D36C", VA = "0xF8D36C")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066E")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A5F")]
		public struct Settings
		{
			[Token(Token = "0x170005DB")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F2")]
				[Address(RVA = "0xF8D830", Offset = "0xF8D830", VA = "0xF8D830")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003B9")]
		public Settings settings
		{
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xF8D818", Offset = "0xF8D818", VA = "0xF8D818")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xF8D820", Offset = "0xF8D820", VA = "0xF8D820")]
			set
			{
			}
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0xF8D828", Offset = "0xF8D828", VA = "0xF8D828", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0xF8D838", Offset = "0xF8D838", VA = "0xF8D838")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066F")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x2000A60")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x40034AF")]
			Progressive,
			[Token(Token = "0x40034B0")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000A61")]
		public struct Settings
		{
			[Token(Token = "0x40034B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB4375C", Offset = "0xB4375C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4375C", Offset = "0xB4375C")]
			public float lowPercent;

			[Token(Token = "0x40034B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB437B4", Offset = "0xB437B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB437B4", Offset = "0xB437B4")]
			public float highPercent;

			[Token(Token = "0x40034B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4380C", Offset = "0xB4380C")]
			public float minLuminance;

			[Token(Token = "0x40034B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43844", Offset = "0xB43844")]
			public float maxLuminance;

			[Token(Token = "0x40034B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB4387C", Offset = "0xB4387C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4387C", Offset = "0xB4387C")]
			public float keyValue;

			[Token(Token = "0x40034B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB438CC", Offset = "0xB438CC")]
			public bool dynamicKeyValue;

			[Token(Token = "0x40034B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43904", Offset = "0xB43904")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x40034B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB4393C", Offset = "0xB4393C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4393C", Offset = "0xB4393C")]
			public float speedUp;

			[Token(Token = "0x40034B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xB4398C", Offset = "0xB4398C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4398C", Offset = "0xB4398C")]
			public float speedDown;

			[Token(Token = "0x40034BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB439DC", Offset = "0xB439DC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB439DC", Offset = "0xB439DC")]
			public int logMin;

			[Token(Token = "0x40034BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43A30", Offset = "0xB43A30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43A30", Offset = "0xB43A30")]
			public int logMax;

			[Token(Token = "0x170005DC")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F3")]
				[Address(RVA = "0xF8E8A4", Offset = "0xF8E8A4", VA = "0xF8E8A4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003BA")]
		public Settings settings
		{
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xF8E82C", Offset = "0xF8E82C", VA = "0xF8E82C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xF8E844", Offset = "0xF8E844", VA = "0xF8E844")]
			set
			{
			}
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0xF8E864", Offset = "0xF8E864", VA = "0xF8E864", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0xF8E8E8", Offset = "0xF8E8E8", VA = "0xF8E8E8")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000670")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A62")]
		public struct Settings
		{
			[Token(Token = "0x40034BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43A84", Offset = "0xB43A84")]
			public bool excludeSkybox;

			[Token(Token = "0x170005DD")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F4")]
				[Address(RVA = "0xF8F03C", Offset = "0xF8F03C", VA = "0xF8F03C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003BB")]
		public Settings settings
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xF8F020", Offset = "0xF8F020", VA = "0xF8F020")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0xF8F028", Offset = "0xF8F028", VA = "0xF8F028")]
			set
			{
			}
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xF8F030", Offset = "0xF8F030", VA = "0xF8F030", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0xF8F044", Offset = "0xF8F044", VA = "0xF8F044")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000671")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A63")]
		public struct Settings
		{
			[Token(Token = "0x40034BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43ABC", Offset = "0xB43ABC")]
			public bool colored;

			[Token(Token = "0x40034BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43AF4", Offset = "0xB43AF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43AF4", Offset = "0xB43AF4")]
			public float intensity;

			[Token(Token = "0x40034BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43B48", Offset = "0xB43B48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43B48", Offset = "0xB43B48")]
			public float size;

			[Token(Token = "0x40034C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43BA0", Offset = "0xB43BA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43BA0", Offset = "0xB43BA0")]
			public float luminanceContribution;

			[Token(Token = "0x170005DE")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F5")]
				[Address(RVA = "0xF8F9E4", Offset = "0xF8F9E4", VA = "0xF8F9E4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003BC")]
		public Settings settings
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xF8F9B8", Offset = "0xF8F9B8", VA = "0xF8F9B8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xF8F9C8", Offset = "0xF8F9C8", VA = "0xF8F9C8")]
			set
			{
			}
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0xF8F9D4", Offset = "0xF8F9D4", VA = "0xF8F9D4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0xF8F9FC", Offset = "0xF8F9FC", VA = "0xF8F9FC")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000672")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A64")]
		public struct Settings
		{
			[Token(Token = "0x40034C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43BF4", Offset = "0xB43BF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43BF4", Offset = "0xB43BF4")]
			public float shutterAngle;

			[Token(Token = "0x40034C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43C4C", Offset = "0xB43C4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43C4C", Offset = "0xB43C4C")]
			public int sampleCount;

			[Token(Token = "0x40034C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43CA4", Offset = "0xB43CA4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43CA4", Offset = "0xB43CA4")]
			public float frameBlending;

			[Token(Token = "0x170005DF")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F6")]
				[Address(RVA = "0xF92814", Offset = "0xF92814", VA = "0xF92814")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003BD")]
		public Settings settings
		{
			[Token(Token = "0x6002B61")]
			[Address(RVA = "0xF927E4", Offset = "0xF927E4", VA = "0xF927E4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xF927F4", Offset = "0xF927F4", VA = "0xF927F4")]
			set
			{
			}
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0xF92800", Offset = "0xF92800", VA = "0xF92800", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0xF92824", Offset = "0xF92824", VA = "0xF92824")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000673")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000A65")]
		public enum SSRResolution
		{
			[Token(Token = "0x40034C5")]
			High = 0,
			[Token(Token = "0x40034C6")]
			Low = 2
		}

		[Token(Token = "0x2000A66")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x40034C8")]
			PhysicallyBased,
			[Token(Token = "0x40034C9")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000A67")]
		public struct IntensitySettings
		{
			[Token(Token = "0x40034CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43CF8", Offset = "0xB43CF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43CF8", Offset = "0xB43CF8")]
			public float reflectionMultiplier;

			[Token(Token = "0x40034CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43D4C", Offset = "0xB43D4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43D4C", Offset = "0xB43D4C")]
			public float fadeDistance;

			[Token(Token = "0x40034CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43DA4", Offset = "0xB43DA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43DA4", Offset = "0xB43DA4")]
			public float fresnelFade;

			[Token(Token = "0x40034CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43DF8", Offset = "0xB43DF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43DF8", Offset = "0xB43DF8")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x2000A68")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x40034CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43E50", Offset = "0xB43E50")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x40034CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43E88", Offset = "0xB43E88")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x40034D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43EC0", Offset = "0xB43EC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43EC0", Offset = "0xB43EC0")]
			public float maxDistance;

			[Token(Token = "0x40034D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43F1C", Offset = "0xB43F1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43F1C", Offset = "0xB43F1C")]
			public int iterationCount;

			[Token(Token = "0x40034D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43F74", Offset = "0xB43F74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43F74", Offset = "0xB43F74")]
			public int stepSize;

			[Token(Token = "0x40034D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB43FC8", Offset = "0xB43FC8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB43FC8", Offset = "0xB43FC8")]
			public float widthModifier;

			[Token(Token = "0x40034D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44020", Offset = "0xB44020")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB44020", Offset = "0xB44020")]
			public float reflectionBlur;

			[Token(Token = "0x40034D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44078", Offset = "0xB44078")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x2000A69")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x40034D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB440B0", Offset = "0xB440B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB440B0", Offset = "0xB440B0")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x2000A6A")]
		public struct Settings
		{
			[Token(Token = "0x40034D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x40034D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x40034D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x170005E0")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F7")]
				[Address(RVA = "0xF96C94", Offset = "0xF96C94", VA = "0xF96C94")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003BE")]
		public Settings settings
		{
			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xF96C04", Offset = "0xF96C04", VA = "0xF96C04")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xF96C24", Offset = "0xF96C24", VA = "0xF96C24")]
			set
			{
			}
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xF96C44", Offset = "0xF96C44", VA = "0xF96C44", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0xF951E0", Offset = "0xF951E0", VA = "0xF951E0")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000674")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000A6B")]
		public struct Settings
		{
			[Token(Token = "0x40034DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44104", Offset = "0xB44104")]
			public Texture2D lut;

			[Token(Token = "0x40034DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB4413C", Offset = "0xB4413C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB4413C", Offset = "0xB4413C")]
			public float contribution;

			[Token(Token = "0x170005E1")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F8")]
				[Address(RVA = "0xF979F0", Offset = "0xF979F0", VA = "0xF979F0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003BF")]
		public Settings settings
		{
			[Token(Token = "0x6002B69")]
			[Address(RVA = "0xF979CC", Offset = "0xF979CC", VA = "0xF979CC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0xF979D8", Offset = "0xF979D8", VA = "0xF979D8")]
			set
			{
			}
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0xF979E0", Offset = "0xF979E0", VA = "0xF979E0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0xF95234", Offset = "0xF95234", VA = "0xF95234")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000675")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000A6C")]
		public enum Mode
		{
			[Token(Token = "0x40034DD")]
			Classic,
			[Token(Token = "0x40034DE")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x2000A6D")]
		public struct Settings
		{
			[Token(Token = "0x40034DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44190", Offset = "0xB44190")]
			public Mode mode;

			[Token(Token = "0x40034E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB441C8", Offset = "0xB441C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB441C8", Offset = "0xB441C8")]
			public Color color;

			[Token(Token = "0x40034E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44218", Offset = "0xB44218")]
			public Vector2 center;

			[Token(Token = "0x40034E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB44250", Offset = "0xB44250")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44250", Offset = "0xB44250")]
			public float intensity;

			[Token(Token = "0x40034E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB442A4", Offset = "0xB442A4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB442A4", Offset = "0xB442A4")]
			public float smoothness;

			[Token(Token = "0x40034E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB442FC", Offset = "0xB442FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB442FC", Offset = "0xB442FC")]
			public float roundness;

			[Token(Token = "0x40034E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44350", Offset = "0xB44350")]
			public Texture mask;

			[Token(Token = "0x40034E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB44388", Offset = "0xB44388")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB44388", Offset = "0xB44388")]
			public float opacity;

			[Token(Token = "0x40034E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB443DC", Offset = "0xB443DC")]
			public bool rounded;

			[Token(Token = "0x170005E2")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60039F9")]
				[Address(RVA = "0xF97EA8", Offset = "0xF97EA8", VA = "0xF97EA8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170003C0")]
		public Settings settings
		{
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xF97E1C", Offset = "0xF97E1C", VA = "0xF97E1C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xF97E3C", Offset = "0xF97E3C", VA = "0xF97E3C")]
			set
			{
			}
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0xF97E5C", Offset = "0xF97E5C", VA = "0xF97E5C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0xF95248", Offset = "0xF95248", VA = "0xF95248")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x2000676")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB33F34", Offset = "0xB33F34")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB33F34", Offset = "0xB33F34")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xF9283C", Offset = "0xF9283C", VA = "0xF9283C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xF92F80", Offset = "0xF92F80", VA = "0xF92F80")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0xF93B1C", Offset = "0xF93B1C", VA = "0xF93B1C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0xF93C1C", Offset = "0xF93C1C", VA = "0xF93C1C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xF93D30", Offset = "0xF93D30", VA = "0xF93D30")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0xF94878", Offset = "0xF94878", VA = "0xF94878")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xF94B68", Offset = "0xF94B68", VA = "0xF94B68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xF94D3C", Offset = "0xF94D3C", VA = "0xF94D3C")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xF935A4", Offset = "0xF935A4", VA = "0xF935A4")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0xF93484", Offset = "0xF93484", VA = "0xF93484")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6002B7B")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6002B7C")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6002B7D")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6002B7E")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6002B7F")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6002B80")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xF94DA0", Offset = "0xF94DA0", VA = "0xF94DA0")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x2000677")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x170003C1")]
		public abstract bool active
		{
			[Token(Token = "0x6002B83")]
			get;
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xF94E30", Offset = "0xF94E30", VA = "0xF94E30", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xF94E38", Offset = "0xF94E38", VA = "0xF94E38", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xF94E3C", Offset = "0xF94E3C", VA = "0xF94E3C", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002B86")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xF94E40", Offset = "0xF94E40", VA = "0xF94E40")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB421A4", Offset = "0xB421A4")]
		private T <model>k__BackingField;

		[Token(Token = "0x170003C2")]
		public T model
		{
			[Token(Token = "0x6002B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB515B8", Offset = "0xB515B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B89")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB515C8", Offset = "0xB515C8")]
			internal set
			{
			}
		}

		[Token(Token = "0x6002B8A")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6002B8B")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6002B8C")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6002B8D")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6002B8E")]
		public abstract string GetName();

		[Token(Token = "0x6002B8F")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6002B90")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x200067A")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6002B91")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6002B92")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x200067B")]
	public class PostProcessingContext
	{
		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB421B4", Offset = "0xB421B4")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x170003C3")]
		public bool interrupted
		{
			[Token(Token = "0x6002B93")]
			[Address(RVA = "0xF94E48", Offset = "0xF94E48", VA = "0xF94E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB515D8", Offset = "0xB515D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0xF94E50", Offset = "0xF94E50", VA = "0xF94E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB515E8", Offset = "0xB515E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xF8E9B8", Offset = "0xF8E9B8", VA = "0xF8E9B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public bool isHdr
		{
			[Token(Token = "0x6002B98")]
			[Address(RVA = "0xF8EED0", Offset = "0xF8EED0", VA = "0xF8EED0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C6")]
		public int width
		{
			[Token(Token = "0x6002B99")]
			[Address(RVA = "0xF8CE0C", Offset = "0xF8CE0C", VA = "0xF8CE0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C7")]
		public int height
		{
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xF8CE28", Offset = "0xF8CE28", VA = "0xF8CE28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C8")]
		public Rect viewport
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xF8E69C", Offset = "0xF8E69C", VA = "0xF8E69C")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xF8D064", Offset = "0xF8D064", VA = "0xF8D064")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xF93474", Offset = "0xF93474", VA = "0xF93474")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0xF92DF4", Offset = "0xF92DF4", VA = "0xF92DF4")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200067C")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0xB421C4", Offset = "0xB421C4")]
		private bool m_Enabled;

		[Token(Token = "0x170003C9")]
		public bool enabled
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xF94E5C", Offset = "0xF94E5C", VA = "0xF94E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0xF94E64", Offset = "0xF94E64", VA = "0xF94E64")]
			set
			{
			}
		}

		[Token(Token = "0x6002B9F")]
		public abstract void Reset();

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0xF94E80", Offset = "0xF94E80", VA = "0xF94E80", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0xF8B778", Offset = "0xF8B778", VA = "0xF8B778")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x200067D")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0xF94E84", Offset = "0xF94E84", VA = "0xF94E84")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200067E")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xF8B278", Offset = "0xF8B278", VA = "0xF8B278")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xF8B2E4", Offset = "0xF8B2E4", VA = "0xF8B2E4")]
		public void Cache()
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xF8B4C0", Offset = "0xF8B4C0", VA = "0xF8B4C0")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200067F")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170003CA")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xF8EEB0", Offset = "0xF8EEB0", VA = "0xF8EEB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CB")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0xF8FA10", Offset = "0xF8FA10", VA = "0xF8FA10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CC")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xF8FA40", Offset = "0xF8FA40", VA = "0xF8FA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		public static Mesh quad
		{
			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0xF8FB78", Offset = "0xF8FB78", VA = "0xF8FB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xF8FEB4", Offset = "0xF8FEB4", VA = "0xF8FEB4")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xF8FFB8", Offset = "0xF8FFB8", VA = "0xF8FFB8")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0xF8D9D0", Offset = "0xF8D9D0", VA = "0xF8D9D0")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xF90154", Offset = "0xF90154", VA = "0xF90154")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x2000680")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0xF901A4", Offset = "0xF901A4", VA = "0xF901A4")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0xF8CC3C", Offset = "0xF8CC3C", VA = "0xF8CC3C")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0xF90218", Offset = "0xF90218", VA = "0xF90218", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xF92D80", Offset = "0xF92D80", VA = "0xF92D80")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0xF94240", Offset = "0xF94240", VA = "0xF94240")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xF8CE44", Offset = "0xF8CE44", VA = "0xF8CE44")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0xF8CF38", Offset = "0xF8CF38", VA = "0xF8CF38")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xF947C8", Offset = "0xF947C8", VA = "0xF947C8")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xF94D38", Offset = "0xF94D38", VA = "0xF94D38", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x2000682")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xF97F48", Offset = "0xF97F48", VA = "0xF97F48")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xF98300", Offset = "0xF98300", VA = "0xF98300")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xF98310", Offset = "0xF98310", VA = "0xF98310", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xF985FC", Offset = "0xF985FC", VA = "0xF985FC", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xF9875C", Offset = "0xF9875C", VA = "0xF9875C", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xF98890", Offset = "0xF98890", VA = "0xF98890", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xF98A84", Offset = "0xF98A84", VA = "0xF98A84", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xF98A8C", Offset = "0xF98A8C", VA = "0xF98A8C", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xF98AC4", Offset = "0xF98AC4", VA = "0xF98AC4", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xF986B0", Offset = "0xF986B0", VA = "0xF986B0")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xF98800", Offset = "0xF98800", VA = "0xF98800")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xF9826C", Offset = "0xF9826C", VA = "0xF9826C")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xF98484", Offset = "0xF98484", VA = "0xF98484")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xF98AC8", Offset = "0xF98AC8", VA = "0xF98AC8")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000683")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x170003CE")]
		internal PlayableDirector director
		{
			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xF98AE4", Offset = "0xF98AE4", VA = "0xF98AE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0xF98AEC", Offset = "0xF98AEC", VA = "0xF98AEC")]
			set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xF98AF4", Offset = "0xF98AF4", VA = "0xF98AF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xF98AFC", Offset = "0xF98AFC", VA = "0xF98AFC")]
			set
			{
			}
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xF98B04", Offset = "0xF98B04", VA = "0xF98B04", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0xF98F04", Offset = "0xF98F04", VA = "0xF98F04")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000684")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0xF98F0C", Offset = "0xF98F0C", VA = "0xF98F0C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xF99038", Offset = "0xF99038", VA = "0xF99038")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB33FF0", Offset = "0xB33FF0")]
	[AttributeAttribute(Name = "TrackMediaType", RVA = "0xB33FF0", Offset = "0xB33FF0")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB33FF0", Offset = "0xB33FF0")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xF99054", Offset = "0xF99054", VA = "0xF99054", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0xF9918C", Offset = "0xF9918C", VA = "0xF9918C")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x2000686")]
	public class highlightAnimated : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xCAC998", Offset = "0xCAC998", VA = "0xCAC998")]
		private void Start()
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xCACA00", Offset = "0xCACA00", VA = "0xCACA00")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xCACA78", Offset = "0xCACA78", VA = "0xCACA78")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x2000687")]
	public class ForceShieldDestroyBall : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xCAC40C", Offset = "0xCAC40C", VA = "0xCAC40C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xCAC498", Offset = "0xCAC498", VA = "0xCAC498")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class ForceShieldImpactDetection : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0xCAC4A8", Offset = "0xCAC4A8", VA = "0xCAC4A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xCAC510", Offset = "0xCAC510", VA = "0xCAC510")]
		private void Update()
		{
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0xCAC5B4", Offset = "0xCAC5B4", VA = "0xCAC5B4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xCAC764", Offset = "0xCAC764", VA = "0xCAC764")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class ForceShieldShootBall : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xCAC76C", Offset = "0xCAC76C", VA = "0xCAC76C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xCAC984", Offset = "0xCAC984", VA = "0xCAC984")]
		public ForceShieldShootBall()
		{
		}
	}
}
