using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using CodeStage.AntiCheat.ObscuredTypes;
using GunClub;
using Il2CppDummyDll;
using Localization;
using MiniLocale.Serialization;
using Sony.NP;
using Sony.PS4.SaveData;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C81EC", Offset = "0x8C81EC")]
internal sealed class <>f__AnonymousType0<<rangeResultLadder>j__TPar, <result>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8C8F8C", Offset = "0x8C8F8C")]
	private readonly <rangeResultLadder>j__TPar <rangeResultLadder>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8C8FA0", Offset = "0x8C8FA0")]
	private readonly <result>j__TPar <result>i__Field;

	[Token(Token = "0x17000001")]
	public <rangeResultLadder>j__TPar rangeResultLadder
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<rangeResultLadder>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <result>j__TPar result
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<result>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<rangeResultLadder>j__TPar rangeResultLadder, <result>j__TPar result)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class AddInputDelegate : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool changeText;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1EA384C", Offset = "0x1EA384C", VA = "0x1EA384C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1EA3850", Offset = "0x1EA3850", VA = "0x1EA3850")]
	private void AssignDelegate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1EA3980", Offset = "0x1EA3980", VA = "0x1EA3980")]
	public AddInputDelegate()
	{
	}
}
[Token(Token = "0x2000004")]
public class AddUIRadioBtnInputDelegate : MonoBehaviour
{
	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1EA3990", Offset = "0x1EA3990", VA = "0x1EA3990")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1EA3994", Offset = "0x1EA3994", VA = "0x1EA3994")]
	private void AssignDelegate()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1EA3A94", Offset = "0x1EA3A94", VA = "0x1EA3A94")]
	public AddUIRadioBtnInputDelegate()
	{
	}
}
[Token(Token = "0x2000005")]
public class Server
{
	[Token(Token = "0x4000004")]
	private const string _SERVER_ADDRESS = "www.google.com";

	[Token(Token = "0x17000003")]
	public static bool IsReachable
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0x1E2E0C0", Offset = "0x1E2E0C0", VA = "0x1E2E0C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1E2E0BC", Offset = "0x1E2E0BC", VA = "0x1E2E0BC")]
	static Server()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1E2E3F0", Offset = "0x1E2E3F0", VA = "0x1E2E3F0")]
	public Server()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class EventHighScore : ISerializable
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int highScore;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int scorePercent;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weaponId;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int prizeMoneyReceived;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1670D98", Offset = "0x1670D98", VA = "0x1670D98")]
	public EventHighScore(int data_highScore, int data_scorePercent, int data_weaponId, int data_prizeMoneyReceived)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1670DE4", Offset = "0x1670DE4", VA = "0x1670DE4")]
	public EventHighScore()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1670DEC", Offset = "0x1670DEC", VA = "0x1670DEC", Slot = "4")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1670ECC", Offset = "0x1670ECC", VA = "0x1670ECC")]
	public EventHighScore(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x2000007")]
public class ActRotatorExample : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C8FB4", Offset = "0x8C8FB4")]
	public float speed;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1EA13D0", Offset = "0x1EA13D0", VA = "0x1EA13D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1EA1428", Offset = "0x1EA1428", VA = "0x1EA1428")]
	public ActRotatorExample()
	{
	}
}
[Token(Token = "0x2000008")]
public class ActTesterGUI : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObscuredVector3Test obscuredVector3Test;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObscuredFloatTest obscuredFloatTest;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObscuredIntTest obscuredIntTest;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObscuredStringTest obscuredStringTest;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObscuredPrefsTest obscuredPrefsTest;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ObscuredInt dummyObscuredInt;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ObscuredFloat dummyObscuredFloat;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObscuredString dummyObscuredString;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ObscuredBool dummyObscuredBool;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool savesAlterationDetected;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int savesLock;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool foreignSavesDetected;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DetectorsUsageExample detectorsUsageExample;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1EA1438", Offset = "0x1EA1438", VA = "0x1EA1438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1EA1624", Offset = "0x1EA1624", VA = "0x1EA1624")]
	private void SavesAlterationDetected()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1EA1630", Offset = "0x1EA1630", VA = "0x1EA1630")]
	private void ForeignSavesDetected()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1EA163C", Offset = "0x1EA163C", VA = "0x1EA163C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1EA354C", Offset = "0x1EA354C", VA = "0x1EA354C")]
	private void CenteredLabel(string caption)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1EA36C8", Offset = "0x1EA36C8", VA = "0x1EA36C8")]
	public ActTesterGUI()
	{
	}
}
[Token(Token = "0x2000009")]
public class DetectorsUsageExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool injectionDetected;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool speedHackDetected;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool obscuredTypeCheatDetected;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x16671F8", Offset = "0x16671F8", VA = "0x16671F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1667370", Offset = "0x1667370", VA = "0x1667370")]
	private void OnSpeedHackDetected()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x16673F0", Offset = "0x16673F0", VA = "0x16673F0")]
	private void OnInjectionDetected()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1667470", Offset = "0x1667470", VA = "0x1667470")]
	private void OnObscuredTypeCheatingDetected()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x16674F0", Offset = "0x16674F0", VA = "0x16674F0")]
	public DetectorsUsageExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class ObscuredFloatTest : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float healthBar;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal ObscuredFloat obscuredHealthBar;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal bool useRegular;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x19A14A0", Offset = "0x19A14A0", VA = "0x19A14A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x19A17A8", Offset = "0x19A17A8", VA = "0x19A17A8")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x19A18D8", Offset = "0x19A18D8", VA = "0x19A18D8")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x19A1A54", Offset = "0x19A1A54", VA = "0x19A1A54")]
	public ObscuredFloatTest()
	{
	}
}
[Token(Token = "0x200000B")]
public class ObscuredIntTest : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal int cleanLivesCount;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal ObscuredInt obscuredLivesCount;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	internal bool useRegular;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x19A2488", Offset = "0x19A2488", VA = "0x19A2488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x19A2960", Offset = "0x19A2960", VA = "0x19A2960")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x19A2A6C", Offset = "0x19A2A6C", VA = "0x19A2A6C")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x19A2BA4", Offset = "0x19A2BA4", VA = "0x19A2BA4")]
	public ObscuredIntTest()
	{
	}
}
[Token(Token = "0x200000C")]
public class ObscuredPrefsTest : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	private const string PREFS_NAME = "name";

	[Token(Token = "0x4000021")]
	private const string PREFS_MONEY = "money";

	[Token(Token = "0x4000022")]
	private const string PREFS_LEVEL = "level";

	[Token(Token = "0x4000023")]
	private const string PREFS_LIFE_BAR = "lifeBar";

	[Token(Token = "0x4000024")]
	private const string PREFS_GAME_COMPLETE = "gameComplete";

	[Token(Token = "0x4000025")]
	private const string PREFS_LONG = "demoLong";

	[Token(Token = "0x4000026")]
	private const string PREFS_DOUBLE = "demoDouble";

	[Token(Token = "0x4000027")]
	private const string PREFS_BYTE_ARRAY = "demoByteArray";

	[Token(Token = "0x4000028")]
	private const string PREFS_VECTOR3 = "demoVector3";

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string encryptionKey;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal string gameData;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x19A6ECC", Offset = "0x19A6ECC", VA = "0x19A6ECC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x19A7054", Offset = "0x19A7054", VA = "0x19A7054")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x19A7104", Offset = "0x19A7104", VA = "0x19A7104")]
	public void SaveGame(bool obscured)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x19A7424", Offset = "0x19A7424", VA = "0x19A7424")]
	public void ReadSavedGame(bool obscured)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x19A7CC8", Offset = "0x19A7CC8", VA = "0x19A7CC8")]
	public ObscuredPrefsTest()
	{
	}
}
[Token(Token = "0x200000D")]
public class ObscuredStringTest : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal string cleanString;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal ObscuredString obscuredString;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal bool useRegular;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x19AA97C", Offset = "0x19AA97C", VA = "0x19AA97C")]
	private void Start()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x19AAB78", Offset = "0x19AAB78", VA = "0x19AAB78")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x19AAC8C", Offset = "0x19AAC8C", VA = "0x19AAC8C")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x19AADA8", Offset = "0x19AADA8", VA = "0x19AADA8")]
	public ObscuredStringTest()
	{
	}
}
[Token(Token = "0x200000E")]
public class ObscuredVector3Test : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal Vector3 playerPosition;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	internal ObscuredVector3 obscuredPlayerPosition;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal bool useRegular;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x15DAD34", Offset = "0x15DAD34", VA = "0x15DAD34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x15DB12C", Offset = "0x15DB12C", VA = "0x15DB12C")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x15DB2B8", Offset = "0x15DB2B8", VA = "0x15DB2B8")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x15DB444", Offset = "0x15DB444", VA = "0x15DB444")]
	public ObscuredVector3Test()
	{
	}
}
[Token(Token = "0x200000F")]
public class PerformanceObscuredTests : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool boolTest;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int boolIterations;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool byteTest;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int byteIterations;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool shortTest;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int shortIterations;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ushortTest;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int ushortIterations;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool intTest;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int intIterations;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool uintTest;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int uintIterations;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool longTest;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int longIterations;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool floatTest;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int floatIterations;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool doubleTest;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int doubleIterations;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool stringTest;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int stringIterations;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool vector3Test;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int vector3Iterations;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool prefsTest;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int prefsIterations;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x15DD968", Offset = "0x15DD968", VA = "0x15DD968")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x15DD9BC", Offset = "0x15DD9BC", VA = "0x15DD9BC")]
	private void StartTests()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x15DDB00", Offset = "0x15DDB00", VA = "0x15DDB00")]
	private void TestBool()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x15DDE70", Offset = "0x15DDE70", VA = "0x15DDE70")]
	private void TestByte()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x15DE1D0", Offset = "0x15DE1D0", VA = "0x15DE1D0")]
	private void TestShort()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x15DE518", Offset = "0x15DE518", VA = "0x15DE518")]
	private void TestUShort()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x15DF67C", Offset = "0x15DF67C", VA = "0x15DF67C")]
	private void TestDouble()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x15DF2B0", Offset = "0x15DF2B0", VA = "0x15DF2B0")]
	private void TestFloat()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x15DE864", Offset = "0x15DE864", VA = "0x15DE864")]
	private void TestInt()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x15DEF24", Offset = "0x15DEF24", VA = "0x15DEF24")]
	private void TestLong()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x15DFA14", Offset = "0x15DFA14", VA = "0x15DFA14")]
	private void TestString()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x15DEBC4", Offset = "0x15DEBC4", VA = "0x15DEBC4")]
	private void TestUInt()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x15DFE00", Offset = "0x15DFE00", VA = "0x15DFE00")]
	private void TestVector3()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x15E028C", Offset = "0x15E028C", VA = "0x15E028C")]
	private void TestPrefs()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x15E072C", Offset = "0x15E072C", VA = "0x15E072C")]
	public PerformanceObscuredTests()
	{
	}
}
[Token(Token = "0x2000010")]
public static class CompressCLZF2
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly uint HLOG;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly uint HSIZE;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly uint MAX_LIT;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly uint MAX_OFF;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly uint MAX_REF;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly long[] HashTable;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1EB456C", Offset = "0x1EB456C", VA = "0x1EB456C")]
	public static byte[] Compress(byte[] inputBytes)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1EB4E08", Offset = "0x1EB4E08", VA = "0x1EB4E08")]
	public static byte[] Decompress(byte[] inputBytes)
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1EB4678", Offset = "0x1EB4678", VA = "0x1EB4678")]
	private static int lzf_compress(byte[] input, ref byte[] output)
	{
		return default(int);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1EB4F14", Offset = "0x1EB4F14", VA = "0x1EB4F14")]
	private static int lzf_decompress(byte[] input, ref byte[] output)
	{
		return default(int);
	}
}
[Token(Token = "0x2000011")]
public class CountryManager
{
	[Token(Token = "0x2000170")]
	public enum SystemCountry
	{
		[Token(Token = "0x4000946")]
		SouthAfrica,
		[Token(Token = "0x4000947")]
		Egypt,
		[Token(Token = "0x4000948")]
		Basque,
		[Token(Token = "0x4000949")]
		Belarus,
		[Token(Token = "0x400094A")]
		Bulgaria,
		[Token(Token = "0x400094B")]
		Andorra,
		[Token(Token = "0x400094C")]
		China,
		[Token(Token = "0x400094D")]
		CzechRepublic,
		[Token(Token = "0x400094E")]
		Denmark,
		[Token(Token = "0x400094F")]
		Netherlands,
		[Token(Token = "0x4000950")]
		UnitedStates,
		[Token(Token = "0x4000951")]
		Estonia,
		[Token(Token = "0x4000952")]
		FaroeIslands,
		[Token(Token = "0x4000953")]
		Finland,
		[Token(Token = "0x4000954")]
		France,
		[Token(Token = "0x4000955")]
		Germany,
		[Token(Token = "0x4000956")]
		Greece,
		[Token(Token = "0x4000957")]
		Israel,
		[Token(Token = "0x4000958")]
		Hungary,
		[Token(Token = "0x4000959")]
		Iceland,
		[Token(Token = "0x400095A")]
		Indonesia,
		[Token(Token = "0x400095B")]
		Italy,
		[Token(Token = "0x400095C")]
		Japan,
		[Token(Token = "0x400095D")]
		Korea,
		[Token(Token = "0x400095E")]
		Latvia,
		[Token(Token = "0x400095F")]
		Lithuania,
		[Token(Token = "0x4000960")]
		Norway,
		[Token(Token = "0x4000961")]
		Poland,
		[Token(Token = "0x4000962")]
		Portugal,
		[Token(Token = "0x4000963")]
		Romania,
		[Token(Token = "0x4000964")]
		Russia,
		[Token(Token = "0x4000965")]
		Croatia,
		[Token(Token = "0x4000966")]
		Slovakia,
		[Token(Token = "0x4000967")]
		Slovenia,
		[Token(Token = "0x4000968")]
		Spain,
		[Token(Token = "0x4000969")]
		Sweden,
		[Token(Token = "0x400096A")]
		Tailand,
		[Token(Token = "0x400096B")]
		Turky,
		[Token(Token = "0x400096C")]
		Ukraine,
		[Token(Token = "0x400096D")]
		Vietnam,
		[Token(Token = "0x400096E")]
		Unknown
	}

	[Token(Token = "0x17000004")]
	private static SystemLanguage Language
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x1664700", Offset = "0x1664700", VA = "0x1664700")]
		get
		{
			return default(SystemLanguage);
		}
	}

	[Token(Token = "0x17000005")]
	public static SystemCountry Country
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x1664708", Offset = "0x1664708", VA = "0x1664708")]
		get
		{
			return default(SystemCountry);
		}
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1664710", Offset = "0x1664710", VA = "0x1664710")]
	public CountryManager()
	{
	}
}
[Token(Token = "0x2000012")]
public static class TransformExtensions
{
	[Serializable]
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8D8C", Offset = "0x8C8D8C")]
	private sealed class <>c
	{
		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, GameObject> <>9__2_0;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, string> <>9__2_1;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1FED448", Offset = "0x1FED448", VA = "0x1FED448")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1FED450", Offset = "0x1FED450", VA = "0x1FED450")]
		internal GameObject <SortGameObjectsByName>b__2_0(Transform ct)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1FED46C", Offset = "0x1FED46C", VA = "0x1FED46C")]
		internal string <SortGameObjectsByName>b__2_1(GameObject go)
		{
			return null;
		}
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1C9EDEC", Offset = "0x1C9EDEC", VA = "0x1C9EDEC")]
	public static GameObject[] GetOrderChildren(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1C9F338", Offset = "0x1C9F338", VA = "0x1C9F338")]
	public static GameObject[] GetOrderDescendants(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1C9F108", Offset = "0x1C9F108", VA = "0x1C9F108")]
	private static GameObject[] SortGameObjectsByName(Transform[] transforms)
	{
		return null;
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1C9F390", Offset = "0x1C9F390", VA = "0x1C9F390")]
	public static string GetTransformPath(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1C9F4A4", Offset = "0x1C9F4A4", VA = "0x1C9F4A4")]
	public static Vector3 TPUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1C9F590", Offset = "0x1C9F590", VA = "0x1C9F590")]
	public static Vector3 InvTPUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1C9F6A4", Offset = "0x1C9F6A4", VA = "0x1C9F6A4")]
	public static Vector3 GetTransformDir(this Transform transform, VectorComponent comp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1C9F700", Offset = "0x1C9F700", VA = "0x1C9F700")]
	public static float GetLocalScaleForComponent(this Transform transform, VectorComponent comp)
	{
		return default(float);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1C9F760", Offset = "0x1C9F760", VA = "0x1C9F760")]
	public static bool ContainsXZ(this Bounds bounds, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1C9F7A4", Offset = "0x1C9F7A4", VA = "0x1C9F7A4")]
	public static bool ContainsXY(this Bounds bounds, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1C9F7E8", Offset = "0x1C9F7E8", VA = "0x1C9F7E8")]
	public static bool ContainsYZ(this Bounds bounds, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1C9F82C", Offset = "0x1C9F82C", VA = "0x1C9F82C")]
	public static float GetBoundsExtent(this Bounds bounds, VectorComponent comp)
	{
		return default(float);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1C9F87C", Offset = "0x1C9F87C", VA = "0x1C9F87C")]
	public static void ClearRigidbodyVelocity(this Rigidbody body)
	{
	}
}
[Token(Token = "0x2000013")]
public enum DevelopmentData
{
	[Token(Token = "0x4000050")]
	None,
	[Token(Token = "0x4000051")]
	SWATDLC,
	[Token(Token = "0x4000052")]
	Western
}
[Token(Token = "0x2000014")]
public class DevelopmentSettings : MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static DevelopmentData m_currentDevelopmentData;

	[Token(Token = "0x17000006")]
	public static DevelopmentData DevData
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x16674F8", Offset = "0x16674F8", VA = "0x16674F8")]
		get
		{
			return default(DevelopmentData);
		}
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x166755C", Offset = "0x166755C", VA = "0x166755C")]
	public DevelopmentSettings()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C820C", Offset = "0x8C820C")]
public class UIActionBtn : UIButton
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1F20308", Offset = "0x1F20308", VA = "0x1F20308", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1F20960", Offset = "0x1F20960", VA = "0x1F20960")]
	public new static UIActionBtn Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1F20AAC", Offset = "0x1F20AAC", VA = "0x1F20AAC")]
	public new static UIActionBtn Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1F20C40", Offset = "0x1F20C40", VA = "0x1F20C40")]
	public UIActionBtn()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8244", Offset = "0x8C8244")]
public class UIBtnChangePanel : UIButton
{
	[Token(Token = "0x2000172")]
	public enum ChangeType
	{
		[Token(Token = "0x4000973")]
		BringIn,
		[Token(Token = "0x4000974")]
		BringInForward,
		[Token(Token = "0x4000975")]
		BringInBack,
		[Token(Token = "0x4000976")]
		Dismiss,
		[Token(Token = "0x4000977")]
		DismissCurrent,
		[Token(Token = "0x4000978")]
		Toggle,
		[Token(Token = "0x4000979")]
		Forward,
		[Token(Token = "0x400097A")]
		Back,
		[Token(Token = "0x400097B")]
		BringInImmediate,
		[Token(Token = "0x400097C")]
		DismissImmediate
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public UIPanelManager panelManager;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public ChangeType changeType;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	public bool detargetAllOthers;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public string panel;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1F22450", Offset = "0x1F22450", VA = "0x1F22450", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1F22B78", Offset = "0x1F22B78", VA = "0x1F22B78", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1F22B8C", Offset = "0x1F22B8C", VA = "0x1F22B8C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1F22D98", Offset = "0x1F22D98", VA = "0x1F22D98")]
	public new static UIBtnChangePanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1F22EE4", Offset = "0x1F22EE4", VA = "0x1F22EE4")]
	public new static UIBtnChangePanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1F23078", Offset = "0x1F23078", VA = "0x1F23078")]
	public UIBtnChangePanel()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C827C", Offset = "0x8C827C")]
public class UIBtnLoadScene : UIButton
{
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8D9C", Offset = "0x8C8D9C")]
	private sealed class <LoadScene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIBtnLoadScene <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x1FED828", Offset = "0x1FED828", VA = "0x1FED828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x1FED870", Offset = "0x1FED870", VA = "0x1FED870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1FED784", Offset = "0x1FED784", VA = "0x1FED784")]
		[DebuggerHidden]
		public <LoadScene>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x1FED7B0", Offset = "0x1FED7B0", VA = "0x1FED7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1FED7B4", Offset = "0x1FED7B4", VA = "0x1FED7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1FED830", Offset = "0x1FED830", VA = "0x1FED830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public string scene;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public UIPanelBase loadingPanel;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1F23084", Offset = "0x1F23084", VA = "0x1F23084")]
	public void LoadSceneDelegate(UIPanelBase panel, EZTransition trans)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1F23128", Offset = "0x1F23128", VA = "0x1F23128", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1F23360", Offset = "0x1F23360", VA = "0x1F23360")]
	protected void DoLoadScene()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1F230B0", Offset = "0x1F230B0", VA = "0x1F230B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9EDC", Offset = "0x8C9EDC")]
	protected IEnumerator LoadScene()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1F2338C", Offset = "0x1F2338C", VA = "0x1F2338C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1F233A0", Offset = "0x1F233A0", VA = "0x1F233A0", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1F23464", Offset = "0x1F23464", VA = "0x1F23464")]
	public new static UIBtnLoadScene Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1F235B0", Offset = "0x1F235B0", VA = "0x1F235B0")]
	public new static UIBtnLoadScene Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1F23744", Offset = "0x1F23744", VA = "0x1F23744")]
	public UIBtnLoadScene()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C82B4", Offset = "0x8C82B4")]
public class UIBtnWWW : UIButton
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public string URL;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1F23748", Offset = "0x1F23748", VA = "0x1F23748", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1F237EC", Offset = "0x1F237EC", VA = "0x1F237EC")]
	protected void DoURL()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1F23828", Offset = "0x1F23828", VA = "0x1F23828", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1F2383C", Offset = "0x1F2383C", VA = "0x1F2383C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1F238F0", Offset = "0x1F238F0", VA = "0x1F238F0")]
	public new static UIBtnWWW Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1F23A3C", Offset = "0x1F23A3C", VA = "0x1F23A3C")]
	public new static UIBtnWWW Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1F23BD0", Offset = "0x1F23BD0", VA = "0x1F23BD0")]
	public UIBtnWWW()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C82EC", Offset = "0x8C82EC")]
public class UIButton : AutoSpriteControlBase
{
	[Token(Token = "0x2000174")]
	public enum CONTROL_STATE
	{
		[Token(Token = "0x4000981")]
		NORMAL,
		[Token(Token = "0x4000982")]
		OVER,
		[Token(Token = "0x4000983")]
		ACTIVE,
		[Token(Token = "0x4000984")]
		DISABLED
	}

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[HideInInspector]
	public UnityEvent<bool> OnPointer;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	protected CONTROL_STATE m_ctrlState;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public SpriteRoot[] layers;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public string methodToInvoke;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public bool allowReplacementOfMethodScript;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public float delay;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public AudioSource soundOnOver;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public AudioSource soundOnClick;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public bool repeat;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x379")]
	public bool alwaysFinishActiveTransition;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37A")]
	protected bool transitionQueued;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	protected EZTransition nextTransition;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	protected CONTROL_STATE nextState;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	protected int[,] stateIndices;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	protected bool wasHovered;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private int counter;

	[Token(Token = "0x17000007")]
	public CONTROL_STATE controlState
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x1F23BD4", Offset = "0x1F23BD4", VA = "0x1F23BD4")]
		get
		{
			return default(CONTROL_STATE);
		}
	}

	[Token(Token = "0x17000008")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x1F23BDC", Offset = "0x1F23BDC", VA = "0x1F23BDC", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x1F23BE4", Offset = "0x1F23BE4", VA = "0x1F23BE4", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x1F23C24", Offset = "0x1F23C24", VA = "0x1F23C24", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x1F23C2C", Offset = "0x1F23C2C", VA = "0x1F23C2C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x1F23C84", Offset = "0x1F23C84", VA = "0x1F23C84", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x1F23C8C", Offset = "0x1F23C8C", VA = "0x1F23C8C", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public override string Text
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x1F251E4", Offset = "0x1F251E4", VA = "0x1F251E4", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x1F251EC", Offset = "0x1F251EC", VA = "0x1F251EC", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1F23C3C", Offset = "0x1F23C3C", VA = "0x1F23C3C", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1F23C9C", Offset = "0x1F23C9C", VA = "0x1F23C9C", Slot = "199")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1F23CD8", Offset = "0x1F23CD8", VA = "0x1F23CD8", Slot = "200")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1F23D84", Offset = "0x1F23D84", VA = "0x1F23D84", Slot = "47")]
	public override void SetState(int num)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1F20408", Offset = "0x1F20408", VA = "0x1F20408", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1F23DC0", Offset = "0x1F23DC0", VA = "0x1F23DC0", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1F2495C", Offset = "0x1F2495C", VA = "0x1F2495C", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1F249E8", Offset = "0x1F249E8", VA = "0x1F249E8", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1F24B14", Offset = "0x1F24B14", VA = "0x1F24B14", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1F22C58", Offset = "0x1F22C58", VA = "0x1F22C58", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1F24B28", Offset = "0x1F24B28", VA = "0x1F24B28", Slot = "202")]
	public virtual void SetControlState(CONTROL_STATE s)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1F24B3C", Offset = "0x1F24B3C", VA = "0x1F24B3C", Slot = "203")]
	public virtual void SetControlState(CONTROL_STATE s, bool suppressTransitions)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1F2504C", Offset = "0x1F2504C", VA = "0x1F2504C")]
	protected int DetermineNextTransition(int newState, int prevState)
	{
		return default(int);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1F24DDC", Offset = "0x1F24DDC", VA = "0x1F24DDC")]
	protected void StartTransition(int newState, int prevState, bool suppressTransition)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1F24EC8", Offset = "0x1F24EC8", VA = "0x1F24EC8")]
	protected void QueueTransition(int newState, int prevState, bool suppressTransition)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1F250C0", Offset = "0x1F250C0", VA = "0x1F250C0")]
	protected void RunFollowupTrans(EZTransition trans)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1F2537C", Offset = "0x1F2537C", VA = "0x1F2537C", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1F253EC", Offset = "0x1F253EC", VA = "0x1F253EC")]
	public static UIButton Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1F25538", Offset = "0x1F25538", VA = "0x1F25538")]
	public static UIButton Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1F256CC", Offset = "0x1F256CC", VA = "0x1F256CC", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1F20C44", Offset = "0x1F20C44", VA = "0x1F20C44")]
	public UIButton()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8324", Offset = "0x8C8324")]
public class UIButton3D : ControlBase
{
	[Token(Token = "0x2000175")]
	public enum CONTROL_STATE
	{
		[Token(Token = "0x4000986")]
		NORMAL,
		[Token(Token = "0x4000987")]
		OVER,
		[Token(Token = "0x4000988")]
		ACTIVE,
		[Token(Token = "0x4000989")]
		DISABLED
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected CONTROL_STATE m_ctrlState;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected string[] states;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string methodToInvoke;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float delay;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource soundOnOver;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource soundOnClick;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool repeat;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool alwaysFinishActiveTransition;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	protected bool transitionQueued;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected EZTransition nextTransition;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected CONTROL_STATE nextState;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected bool m_started;

	[Token(Token = "0x1700000C")]
	public CONTROL_STATE controlState
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x1F257A4", Offset = "0x1F257A4", VA = "0x1F257A4")]
		get
		{
			return default(CONTROL_STATE);
		}
	}

	[Token(Token = "0x1700000D")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1F257AC", Offset = "0x1F257AC", VA = "0x1F257AC", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x1F257B4", Offset = "0x1F257B4", VA = "0x1F257B4", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public override string[] States
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1F257DC", Offset = "0x1F257DC", VA = "0x1F257DC", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1F2582C", Offset = "0x1F2582C", VA = "0x1F2582C", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x1F25834", Offset = "0x1F25834", VA = "0x1F25834", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public override string Text
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1F265B0", Offset = "0x1F265B0", VA = "0x1F265B0", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x1F265B8", Offset = "0x1F265B8", VA = "0x1F265B8", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1F257E4", Offset = "0x1F257E4", VA = "0x1F257E4", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1F2583C", Offset = "0x1F2583C", VA = "0x1F2583C", Slot = "117")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1F25878", Offset = "0x1F25878", VA = "0x1F25878", Slot = "118")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1F25924", Offset = "0x1F25924", VA = "0x1F25924", Slot = "103")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1F25C08", Offset = "0x1F25C08", VA = "0x1F25C08", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1F25E38", Offset = "0x1F25E38", VA = "0x1F25E38", Slot = "104")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1F25EC4", Offset = "0x1F25EC4", VA = "0x1F25EC4", Slot = "105")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1F25FF0", Offset = "0x1F25FF0", VA = "0x1F25FF0", Slot = "107")]
	public override void Copy(IControl c)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1F26004", Offset = "0x1F26004", VA = "0x1F26004", Slot = "108")]
	public override void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1F2614C", Offset = "0x1F2614C", VA = "0x1F2614C", Slot = "122")]
	public virtual void SetControlState(CONTROL_STATE s)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1F26160", Offset = "0x1F26160", VA = "0x1F26160", Slot = "123")]
	public virtual void SetControlState(CONTROL_STATE s, bool suppressTransitions)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1F26418", Offset = "0x1F26418", VA = "0x1F26418")]
	protected int DetermineNextTransition(int newState, int prevState)
	{
		return default(int);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1F26270", Offset = "0x1F26270", VA = "0x1F26270")]
	protected void StartTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1F262F8", Offset = "0x1F262F8", VA = "0x1F262F8")]
	protected void QueueTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1F2648C", Offset = "0x1F2648C", VA = "0x1F2648C")]
	protected void RunFollowupTrans(EZTransition trans)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1F269F8", Offset = "0x1F269F8", VA = "0x1F269F8", Slot = "112")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1F26ACC", Offset = "0x1F26ACC", VA = "0x1F26ACC")]
	public static UIButton3D Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1F26C18", Offset = "0x1F26C18", VA = "0x1F26C18")]
	public static UIButton3D Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1F26DAC", Offset = "0x1F26DAC", VA = "0x1F26DAC")]
	public UIButton3D()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C835C", Offset = "0x8C835C")]
public class UIListButton : UIListItem
{
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1F28298", Offset = "0x1F28298", VA = "0x1F28298", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1F28BDC", Offset = "0x1F28BDC", VA = "0x1F28BDC")]
	public new static UIListButton Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1F28D28", Offset = "0x1F28D28", VA = "0x1F28D28")]
	public new static UIListButton Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1F28EBC", Offset = "0x1F28EBC", VA = "0x1F28EBC")]
	public UIListButton()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8394", Offset = "0x8C8394")]
public class UIListItem : UIButton, IUIListObject, IUIObject, IEZDragDrop
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[HideInInspector]
	public bool activeOnlyWhenSelected;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	protected int m_index;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	protected bool m_selected;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	protected UIScrollList list;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	protected Vector2 colliderTL;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	protected Vector2 colliderBR;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	protected Vector3 colliderCenter;

	[Token(Token = "0x17000011")]
	public bool selected
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x1F28ED4", Offset = "0x1F28ED4", VA = "0x1F28ED4", Slot = "223")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x1F28EDC", Offset = "0x1F28EDC", VA = "0x1F28EDC", Slot = "224")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public override string Text
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1F29844", Offset = "0x1F29844", VA = "0x1F29844", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public int Index
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x1F2A1AC", Offset = "0x1F2A1AC", VA = "0x1F2A1AC", Slot = "218")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x1F2A1B4", Offset = "0x1F2A1B4", VA = "0x1F2A1B4", Slot = "219")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public UITextBase TextObj
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x1F2A398", Offset = "0x1F2A398", VA = "0x1F2A398", Slot = "222")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1F28F04", Offset = "0x1F28F04", VA = "0x1F28F04", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1F288C4", Offset = "0x1F288C4", VA = "0x1F288C4")]
	protected void DoNeccessaryInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1F29054", Offset = "0x1F29054", VA = "0x1F29054", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1F2965C", Offset = "0x1F2965C", VA = "0x1F2965C", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1F29714", Offset = "0x1F29714", VA = "0x1F29714", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1F2974C", Offset = "0x1F2974C", VA = "0x1F2974C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1F29760", Offset = "0x1F29760", VA = "0x1F29760", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1F29950", Offset = "0x1F29950", VA = "0x1F29950", Slot = "174")]
	public override void FindOuterEdges()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1F29988", Offset = "0x1F29988", VA = "0x1F29988", Slot = "23")]
	public override void TruncateRight(float pct)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1F29AF4", Offset = "0x1F29AF4", VA = "0x1F29AF4", Slot = "24")]
	public override void TruncateLeft(float pct)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1F29C60", Offset = "0x1F29C60", VA = "0x1F29C60", Slot = "25")]
	public override void TruncateTop(float pct)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1F29DCC", Offset = "0x1F29DCC", VA = "0x1F29DCC", Slot = "26")]
	public override void TruncateBottom(float pct)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1F29F38", Offset = "0x1F29F38", VA = "0x1F29F38", Slot = "27")]
	public override void Untruncate()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1F2A070", Offset = "0x1F2A070", VA = "0x1F2A070", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1F2A194", Offset = "0x1F2A194", VA = "0x1F2A194", Slot = "216")]
	public void SetList(UIScrollList c)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1F2A1A4", Offset = "0x1F2A1A4", VA = "0x1F2A1A4", Slot = "229")]
	public virtual UIScrollList GetScrollList()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1F2A1BC", Offset = "0x1F2A1BC", VA = "0x1F2A1BC")]
	public void FindText()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1F2A3A0", Offset = "0x1F2A3A0", VA = "0x1F2A3A0", Slot = "204")]
	public bool IsContainer()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1F2A3A8", Offset = "0x1F2A3A8", VA = "0x1F2A3A8")]
	public new static UIListItem Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1F2A4F4", Offset = "0x1F2A4F4", VA = "0x1F2A4F4")]
	public new static UIListItem Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1F28EC8", Offset = "0x1F28EC8", VA = "0x1F28EC8")]
	public UIListItem()
	{
	}

	[SpecialName]
	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1F2A688", Offset = "0x1F2A688", VA = "0x1F2A688", Slot = "123")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1F2A690", Offset = "0x1F2A690", VA = "0x1F2A690", Slot = "124")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1F2A698", Offset = "0x1F2A698", VA = "0x1F2A698", Slot = "126")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C83CC", Offset = "0x8C83CC")]
public class UIListItemContainer : ControlBase, IUIListObject, IUIObject, IEZDragDrop, IUIContainer
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected List<SpriteRoot> uiObjs;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected List<UITextBase> textObjs;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool m_started;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Camera renderCamera;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 topLeftEdge;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector2 bottomRightEdge;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rect3D clippingRect;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool clipped;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private UIScrollList list;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected int index;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool m_selected;

	[Token(Token = "0x17000015")]
	public override IUIContainer Container
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1F2BA04", Offset = "0x1F2BA04", VA = "0x1F2BA04", Slot = "93")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x1F2BA0C", Offset = "0x1F2BA0C", VA = "0x1F2BA0C", Slot = "94")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1F2C618", Offset = "0x1F2C618", VA = "0x1F2C618", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1F2C620", Offset = "0x1F2C620", VA = "0x1F2C620", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public override string[] States
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x1F2C624", Offset = "0x1F2C624", VA = "0x1F2C624", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000018")]
	public Vector2 TopLeftEdge
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1F2CE18", Offset = "0x1F2CE18", VA = "0x1F2CE18", Slot = "124")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000019")]
	public Vector2 BottomRightEdge
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1F2CE20", Offset = "0x1F2CE20", VA = "0x1F2CE20", Slot = "125")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700001A")]
	public bool Managed
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x1F2CFBC", Offset = "0x1F2CFBC", VA = "0x1F2CFBC", Slot = "127")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public Rect3D ClippingRect
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x1F2CFC4", Offset = "0x1F2CFC4", VA = "0x1F2CFC4", Slot = "128")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x1F2CFE4", Offset = "0x1F2CFE4", VA = "0x1F2CFE4", Slot = "129")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool Clipped
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1F2D228", Offset = "0x1F2D228", VA = "0x1F2D228", Slot = "130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1F2D230", Offset = "0x1F2D230", VA = "0x1F2D230", Slot = "131")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int Index
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1F2D5BC", Offset = "0x1F2D5BC", VA = "0x1F2D5BC", Slot = "136")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1F2D5C4", Offset = "0x1F2D5C4", VA = "0x1F2D5C4", Slot = "137")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public override string Text
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1F2D5CC", Offset = "0x1F2D5CC", VA = "0x1F2D5CC", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public UITextBase TextObj
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1F2D6D0", Offset = "0x1F2D6D0", VA = "0x1F2D6D0", Slot = "140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public bool selected
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1F2D6D8", Offset = "0x1F2D6D8", VA = "0x1F2D6D8", Slot = "141")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1F2D6E0", Offset = "0x1F2D6E0", VA = "0x1F2D6E0", Slot = "142")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public Camera RenderCamera
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1F2D8A0", Offset = "0x1F2D8A0", VA = "0x1F2D8A0", Slot = "144")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x1F2D8A8", Offset = "0x1F2D8A8", VA = "0x1F2D8A8", Slot = "145")]
		set
		{
		}
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1F2A6A0", Offset = "0x1F2A6A0", VA = "0x1F2A6A0", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1F2A6DC", Offset = "0x1F2A6DC", VA = "0x1F2A6DC")]
	public void ScanChildren()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1F2B11C", Offset = "0x1F2B11C", VA = "0x1F2B11C", Slot = "147")]
	public void AddChild(GameObject go)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1F2B520", Offset = "0x1F2B520", VA = "0x1F2B520", Slot = "148")]
	public void RemoveChild(GameObject go)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1F2B9FC", Offset = "0x1F2B9FC", VA = "0x1F2B9FC", Slot = "149")]
	public void AddSubject(GameObject go)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1F2BA00", Offset = "0x1F2BA00", VA = "0x1F2BA00", Slot = "150")]
	public void RemoveSubject(GameObject go)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1F2BDB4", Offset = "0x1F2BDB4", VA = "0x1F2BDB4")]
	public void MakeChild(GameObject go)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1F2BE1C", Offset = "0x1F2BE1C", VA = "0x1F2BE1C")]
	public SpriteRoot GetElement(string elementName)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1F2BF24", Offset = "0x1F2BF24", VA = "0x1F2BF24")]
	public UITextBase GetTextElement(string elementName)
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x1F2C02C", Offset = "0x1F2C02C", VA = "0x1F2C02C", Slot = "102")]
	public override void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1F2C610", Offset = "0x1F2C610", VA = "0x1F2C610", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1F2C62C", Offset = "0x1F2C62C", VA = "0x1F2C62C", Slot = "122")]
	public bool IsContainer()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1F2C634", Offset = "0x1F2C634", VA = "0x1F2C634", Slot = "123")]
	public void FindOuterEdges()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1F2CE28", Offset = "0x1F2CE28", VA = "0x1F2CE28", Slot = "126")]
	public void Hide(bool tf)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1F2D2AC", Offset = "0x1F2D2AC", VA = "0x1F2D2AC", Slot = "132")]
	public void Unclip()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1F2D434", Offset = "0x1F2D434", VA = "0x1F2D434", Slot = "88")]
	public override void UpdateCollider()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1F2D5A4", Offset = "0x1F2D5A4", VA = "0x1F2D5A4", Slot = "134")]
	public void SetList(UIScrollList c)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1F2D5B4", Offset = "0x1F2D5B4", VA = "0x1F2D5B4", Slot = "151")]
	public virtual UIScrollList GetScrollList()
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1F2D6EC", Offset = "0x1F2D6EC", VA = "0x1F2D6EC", Slot = "143")]
	public void Delete()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1F2DA50", Offset = "0x1F2DA50", VA = "0x1F2DA50", Slot = "146")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1F2DBCC", Offset = "0x1F2DBCC", VA = "0x1F2DBCC")]
	public UIListItemContainer()
	{
	}

	[SpecialName]
	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1F2DC9C", Offset = "0x1F2DC9C", VA = "0x1F2DC9C", Slot = "38")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1F2DCA4", Offset = "0x1F2DCA4", VA = "0x1F2DCA4", Slot = "39")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1F2DCAC", Offset = "0x1F2DCAC", VA = "0x1F2DCAC", Slot = "41")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8404", Offset = "0x8C8404")]
public class UIPanelTab : UIRadioBtn
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public bool toggle;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public UIPanelManager panelManager;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public UIPanelBase panel;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public bool panelShowingAtStart;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C9")]
	protected bool panelIsShowing;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CA")]
	protected bool internalCall;

	[Token(Token = "0x17000022")]
	public override bool Value
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x1C25C38", Offset = "0x1C25C38", VA = "0x1C25C38", Slot = "206")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x1C25C40", Offset = "0x1C25C40", VA = "0x1C25C40", Slot = "207")]
		set
		{
		}
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1C25DB4", Offset = "0x1C25DB4", VA = "0x1C25DB4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1C26A7C", Offset = "0x1C26A7C", VA = "0x1C26A7C", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1C26D68", Offset = "0x1C26D68", VA = "0x1C26D68")]
	protected void DoPanelStuff()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1C26F24", Offset = "0x1C26F24", VA = "0x1C26F24", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1C26F38", Offset = "0x1C26F38", VA = "0x1C26F38", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1C271A0", Offset = "0x1C271A0", VA = "0x1C271A0")]
	public new static UIPanelTab Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1C272EC", Offset = "0x1C272EC", VA = "0x1C272EC")]
	public new static UIPanelTab Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1C27480", Offset = "0x1C27480", VA = "0x1C27480")]
	public UIPanelTab()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C843C", Offset = "0x8C843C")]
public class UIProgressBar : AutoSpriteControlBase
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	protected float m_value;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public bool disableEmptyBar;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	protected AutoSprite emptySprite;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public SpriteRoot[] filledLayers;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public SpriteRoot[] emptyLayers;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	protected int[] filledIndices;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	protected int[] emptyIndices;

	[Token(Token = "0x17000023")]
	public float Value
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x1C27B6C", Offset = "0x1C27B6C", VA = "0x1C27B6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x1C27B74", Offset = "0x1C27B74", VA = "0x1C27B74")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x1C27D0C", Offset = "0x1C27D0C", VA = "0x1C27D0C", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x1C27D14", Offset = "0x1C27D14", VA = "0x1C27D14", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x1C27D2C", Offset = "0x1C27D2C", VA = "0x1C27D2C", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x1C27D34", Offset = "0x1C27D34", VA = "0x1C27D34", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public override IUIContainer Container
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x1C28BC8", Offset = "0x1C28BC8", VA = "0x1C28BC8", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x1C28BD0", Offset = "0x1C28BD0", VA = "0x1C28BD0", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public override bool Clipped
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x1C28E70", Offset = "0x1C28E70", VA = "0x1C28E70", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x1C28E78", Offset = "0x1C28E78", VA = "0x1C28E78", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x1C28F3C", Offset = "0x1C28F3C", VA = "0x1C28F3C", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x1C28F88", Offset = "0x1C28F88", VA = "0x1C28F88", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1C27D24", Offset = "0x1C27D24", VA = "0x1C27D24", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1C27D38", Offset = "0x1C27D38", VA = "0x1C27D38", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1C27D3C", Offset = "0x1C27D3C", VA = "0x1C27D3C", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1C28930", Offset = "0x1C28930", VA = "0x1C28930", Slot = "22")]
	public override void SetSize(float width, float height)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1C289F8", Offset = "0x1C289F8", VA = "0x1C289F8", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1C28A0C", Offset = "0x1C28A0C", VA = "0x1C28A0C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1C28B58", Offset = "0x1C28B58", VA = "0x1C28B58", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1C27BA0", Offset = "0x1C27BA0", VA = "0x1C27BA0")]
	protected void UpdateProgress()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1C28DC4", Offset = "0x1C28DC4", VA = "0x1C28DC4", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1C29090", Offset = "0x1C29090", VA = "0x1C29090")]
	public static UIProgressBar Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1C291DC", Offset = "0x1C291DC", VA = "0x1C291DC")]
	public static UIProgressBar Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1C29370", Offset = "0x1C29370", VA = "0x1C29370", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1C2942C", Offset = "0x1C2942C", VA = "0x1C2942C", Slot = "30")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1C29518", Offset = "0x1C29518", VA = "0x1C29518")]
	public UIProgressBar()
	{
	}
}
[Token(Token = "0x2000020")]
public interface IRadioButton
{
	[Token(Token = "0x17000029")]
	bool Value
	{
		[Token(Token = "0x6000122")]
		get;
		[Token(Token = "0x6000123")]
		set;
	}

	[Token(Token = "0x1700002A")]
	string name
	{
		[Token(Token = "0x6000124")]
		get;
		[Token(Token = "0x6000125")]
		set;
	}
}
[Token(Token = "0x2000021")]
public class RadioBtnGroup
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RadioBtnGroup> groups;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int groupID;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<IRadioButton> buttons;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1E2B0CC", Offset = "0x1E2B0CC", VA = "0x1E2B0CC")]
	public RadioBtnGroup(int id)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1E2B1C0", Offset = "0x1E2B1C0", VA = "0x1E2B1C0", Slot = "1")]
	~RadioBtnGroup()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1E2B2A0", Offset = "0x1E2B2A0", VA = "0x1E2B2A0")]
	public static IRadioButton GetSelected(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1E2B32C", Offset = "0x1E2B32C", VA = "0x1E2B32C")]
	public static IRadioButton GetSelected(int id)
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1E2B588", Offset = "0x1E2B588", VA = "0x1E2B588")]
	public static RadioBtnGroup GetGroup(int id)
	{
		return null;
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8474", Offset = "0x8C8474")]
public class UIRadioBtn : AutoSpriteControlBase, IRadioButton
{
	[Token(Token = "0x2000176")]
	protected enum CONTROL_STATE
	{
		[Token(Token = "0x400098B")]
		True,
		[Token(Token = "0x400098C")]
		False,
		[Token(Token = "0x400098D")]
		Disabled,
		[Token(Token = "0x400098E")]
		Over,
		[Token(Token = "0x400098F")]
		Active
	}

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private CONTROL_STATE state;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private CONTROL_STATE layerState;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	protected bool btnValue;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
	public bool useParentForGrouping;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x316")]
	public bool useStateDrivenTextColor;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Color selectedColor;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Color unselectedColor;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public int radioGroup;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	protected RadioBtnGroup group;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public bool defaultValue;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	protected bool stateChangeWhileDeactivated;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private EZTransition prevTransition;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public SpriteRoot[] layers;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public bool allowReplacementOfMethodScript;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public string methodToInvoke;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float delay;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public AudioSource soundToPlay;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public bool disableHoverEffect;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	protected int[,] stateIndices;

	[Token(Token = "0x1700002B")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x1C296CC", Offset = "0x1C296CC", VA = "0x1C296CC", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x1C296D4", Offset = "0x1C296D4", VA = "0x1C296D4", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public virtual bool Value
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x1C29818", Offset = "0x1C29818", VA = "0x1C29818", Slot = "206")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x1C25DA0", Offset = "0x1C25DA0", VA = "0x1C25DA0", Slot = "207")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1C29968", Offset = "0x1C29968", VA = "0x1C29968", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x1C29970", Offset = "0x1C29970", VA = "0x1C29970", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x1C29AB0", Offset = "0x1C29AB0", VA = "0x1C29AB0", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x1C29AB8", Offset = "0x1C29AB8", VA = "0x1C29AB8", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public override CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x1C29AC8", Offset = "0x1C29AC8", VA = "0x1C29AC8", Slot = "81")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public override TextureAnim DefaultState
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x1C29B84", Offset = "0x1C29B84", VA = "0x1C29B84", Slot = "82")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public override string Text
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x1C2A4D4", Offset = "0x1C2A4D4", VA = "0x1C2A4D4", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x1C2A4DC", Offset = "0x1C2A4DC", VA = "0x1C2A4DC", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1C29820", Offset = "0x1C29820", VA = "0x1C29820", Slot = "47")]
	public override void SetState(int index)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1C29980", Offset = "0x1C29980", VA = "0x1C29980", Slot = "199")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1C299BC", Offset = "0x1C299BC", VA = "0x1C299BC", Slot = "200")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1C29A68", Offset = "0x1C29A68", VA = "0x1C29A68", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1C26B48", Offset = "0x1C26B48", VA = "0x1C26B48", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1C29D2C", Offset = "0x1C29D2C", VA = "0x1C29D2C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1C2703C", Offset = "0x1C2703C", VA = "0x1C2703C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1C29D40", Offset = "0x1C29D40", VA = "0x1C29D40", Slot = "21")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1C29DCC", Offset = "0x1C29DCC", VA = "0x1C29DCC")]
	public void SetGroup(GameObject parent)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1C29F30", Offset = "0x1C29F30", VA = "0x1C29F30")]
	public void SetGroup(Transform parent)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1C29E14", Offset = "0x1C29E14", VA = "0x1C29E14")]
	public void SetGroup(int groupID)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1C2A148", Offset = "0x1C2A148", VA = "0x1C2A148", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1C25F64", Offset = "0x1C25F64", VA = "0x1C25F64", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1C29F70", Offset = "0x1C29F70", VA = "0x1C29F70")]
	protected void PopOtherButtonsInGroup()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1C2A174", Offset = "0x1C2A174", VA = "0x1C2A174", Slot = "208")]
	protected virtual void SetValue(bool val)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1C2A18C", Offset = "0x1C2A18C", VA = "0x1C2A18C", Slot = "209")]
	protected virtual void SetValue(bool val, bool suppressTransition)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1C2A220", Offset = "0x1C2A220", VA = "0x1C2A220", Slot = "210")]
	public virtual void SetButtonState()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1C2A234", Offset = "0x1C2A234", VA = "0x1C2A234", Slot = "211")]
	protected virtual void SetButtonState(bool suppressTransition)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1C29BDC", Offset = "0x1C29BDC", VA = "0x1C29BDC")]
	protected void SetLayerState(CONTROL_STATE s)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1C2A36C", Offset = "0x1C2A36C", VA = "0x1C2A36C")]
	protected void StartTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1C2A490", Offset = "0x1C2A490", VA = "0x1C2A490", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1C296F4", Offset = "0x1C296F4", VA = "0x1C296F4")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1C2A66C", Offset = "0x1C2A66C", VA = "0x1C2A66C", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1C2A708", Offset = "0x1C2A708", VA = "0x1C2A708", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1C2A7E0", Offset = "0x1C2A7E0", VA = "0x1C2A7E0")]
	public static UIRadioBtn Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1C2A92C", Offset = "0x1C2A92C", VA = "0x1C2A92C")]
	public static UIRadioBtn Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1C2748C", Offset = "0x1C2748C", VA = "0x1C2748C")]
	public UIRadioBtn()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1C2AAC0", Offset = "0x1C2AAC0", VA = "0x1C2AAC0", Slot = "204")]
	private string IRadioButton.get_name()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1C2AAC8", Offset = "0x1C2AAC8", VA = "0x1C2AAC8", Slot = "205")]
	private void IRadioButton.set_name(string value)
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C84AC", Offset = "0x8C84AC")]
public class UIRadioBtn3D : ControlBase, IRadioButton
{
	[Token(Token = "0x2000177")]
	protected enum CONTROL_STATE
	{
		[Token(Token = "0x4000991")]
		True,
		[Token(Token = "0x4000992")]
		False,
		[Token(Token = "0x4000993")]
		Disabled
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private CONTROL_STATE state;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool btnValue;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool useParentForGrouping;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int radioGroup;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected RadioBtnGroup group;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool defaultValue;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	protected bool stateChangeWhileDeactivated;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected string[] states;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EZTransition prevTransition;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string methodToInvoke;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float delay;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource soundToPlay;

	[Token(Token = "0x17000032")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x1C2AAD0", Offset = "0x1C2AAD0", VA = "0x1C2AAD0", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x1C2AAD8", Offset = "0x1C2AAD8", VA = "0x1C2AAD8", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public bool Value
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x1C2AB58", Offset = "0x1C2AB58", VA = "0x1C2AB58", Slot = "122")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x1C2AB60", Offset = "0x1C2AB60", VA = "0x1C2AB60", Slot = "123")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public override string[] States
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x1C2AD88", Offset = "0x1C2AD88", VA = "0x1C2AD88", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x1C2ADD8", Offset = "0x1C2ADD8", VA = "0x1C2ADD8", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x1C2ADE0", Offset = "0x1C2ADE0", VA = "0x1C2ADE0", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public override string Text
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x1C2B884", Offset = "0x1C2B884", VA = "0x1C2B884", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x1C2B88C", Offset = "0x1C2B88C", VA = "0x1C2B88C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1C2AD90", Offset = "0x1C2AD90", VA = "0x1C2AD90", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1C2ADE8", Offset = "0x1C2ADE8", VA = "0x1C2ADE8", Slot = "117")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1C2AE24", Offset = "0x1C2AE24", VA = "0x1C2AE24", Slot = "118")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1C2AED0", Offset = "0x1C2AED0", VA = "0x1C2AED0", Slot = "103")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1C2B024", Offset = "0x1C2B024", VA = "0x1C2B024", Slot = "104")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1C2B068", Offset = "0x1C2B068", VA = "0x1C2B068", Slot = "106")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1C2B0F4", Offset = "0x1C2B0F4", VA = "0x1C2B0F4")]
	public void SetGroup(GameObject parent)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1C2B13C", Offset = "0x1C2B13C", VA = "0x1C2B13C")]
	public void SetGroup(int groupID)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1C2B258", Offset = "0x1C2B258", VA = "0x1C2B258", Slot = "85")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1C2B284", Offset = "0x1C2B284", VA = "0x1C2B284", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1C2B55C", Offset = "0x1C2B55C", VA = "0x1C2B55C", Slot = "107")]
	public override void Copy(IControl c)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1C2B570", Offset = "0x1C2B570", VA = "0x1C2B570", Slot = "108")]
	public override void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1C2ABE0", Offset = "0x1C2ABE0", VA = "0x1C2ABE0")]
	protected void PopOtherButtonsInGroup()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1C2B6DC", Offset = "0x1C2B6DC", VA = "0x1C2B6DC", Slot = "126")]
	protected virtual void SetButtonState()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1C2B790", Offset = "0x1C2B790", VA = "0x1C2B790")]
	protected void StartTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1C2AAF8", Offset = "0x1C2AAF8", VA = "0x1C2AAF8")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1C2BA1C", Offset = "0x1C2BA1C", VA = "0x1C2BA1C", Slot = "112")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1C2BAF0", Offset = "0x1C2BAF0", VA = "0x1C2BAF0")]
	public static UIRadioBtn3D Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1C2BC3C", Offset = "0x1C2BC3C", VA = "0x1C2BC3C")]
	public static UIRadioBtn3D Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1C2BDD0", Offset = "0x1C2BDD0", VA = "0x1C2BDD0")]
	public UIRadioBtn3D()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1C2C424", Offset = "0x1C2C424", VA = "0x1C2C424", Slot = "124")]
	private string IRadioButton.get_name()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1C2C42C", Offset = "0x1C2C42C", VA = "0x1C2C42C", Slot = "125")]
	private void IRadioButton.set_name(string value)
	{
	}
}
[Token(Token = "0x2000024")]
public interface IUIListObject : IUIObject, IEZDragDrop
{
	[Token(Token = "0x17000037")]
	Vector2 TopLeftEdge
	{
		[Token(Token = "0x6000176")]
		get;
	}

	[Token(Token = "0x17000038")]
	Vector2 BottomRightEdge
	{
		[Token(Token = "0x6000177")]
		get;
	}

	[Token(Token = "0x17000039")]
	bool Managed
	{
		[Token(Token = "0x6000179")]
		get;
	}

	[Token(Token = "0x1700003A")]
	Rect3D ClippingRect
	{
		[Token(Token = "0x600017A")]
		get;
		[Token(Token = "0x600017B")]
		set;
	}

	[Token(Token = "0x1700003B")]
	bool Clipped
	{
		[Token(Token = "0x600017C")]
		get;
		[Token(Token = "0x600017D")]
		set;
	}

	[Token(Token = "0x1700003C")]
	int Index
	{
		[Token(Token = "0x6000182")]
		get;
		[Token(Token = "0x6000183")]
		set;
	}

	[Token(Token = "0x1700003D")]
	string Text
	{
		[Token(Token = "0x6000184")]
		get;
		[Token(Token = "0x6000185")]
		set;
	}

	[Token(Token = "0x1700003E")]
	UITextBase TextObj
	{
		[Token(Token = "0x6000186")]
		get;
	}

	[Token(Token = "0x1700003F")]
	bool selected
	{
		[Token(Token = "0x6000187")]
		get;
		[Token(Token = "0x6000188")]
		set;
	}

	[Token(Token = "0x17000040")]
	Camera RenderCamera
	{
		[Token(Token = "0x600018A")]
		get;
		[Token(Token = "0x600018B")]
		set;
	}

	[Token(Token = "0x6000174")]
	bool IsContainer();

	[Token(Token = "0x6000175")]
	void FindOuterEdges();

	[Token(Token = "0x6000178")]
	void Hide(bool tf);

	[Token(Token = "0x600017E")]
	void Unclip();

	[Token(Token = "0x600017F")]
	void UpdateCollider();

	[Token(Token = "0x6000180")]
	void SetList(UIScrollList c);

	[Token(Token = "0x6000181")]
	UIScrollList GetScrollList();

	[Token(Token = "0x6000189")]
	void Delete();

	[Token(Token = "0x600018C")]
	void UpdateCamera();
}
[Serializable]
[Token(Token = "0x2000025")]
public class PrefabListItem
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject item;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemText;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x15E7B90", Offset = "0x15E7B90", VA = "0x15E7B90")]
	public PrefabListItem()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C84E4", Offset = "0x8C84E4")]
public class UIScrollList : MonoBehaviour, IUIObject, IEZDragDrop
{
	[Token(Token = "0x2000178")]
	public enum ORIENTATION
	{
		[Token(Token = "0x4000995")]
		HORIZONTAL,
		[Token(Token = "0x4000996")]
		VERTICAL
	}

	[Token(Token = "0x2000179")]
	public enum DIRECTION
	{
		[Token(Token = "0x4000998")]
		TtoB_LtoR,
		[Token(Token = "0x4000999")]
		BtoT_RtoL
	}

	[Token(Token = "0x200017A")]
	public enum ALIGNMENT
	{
		[Token(Token = "0x400099B")]
		LEFT_TOP,
		[Token(Token = "0x400099C")]
		CENTER,
		[Token(Token = "0x400099D")]
		RIGHT_BOTTOM
	}

	[Token(Token = "0x200017B")]
	protected delegate float ItemAlignmentDel(IUIListObject item);

	[Token(Token = "0x200017C")]
	protected delegate bool SnapCoordProc(float val);

	[Token(Token = "0x200017D")]
	public delegate void ItemSnappedDelegate(IUIListObject item);

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DAC", Offset = "0x8C8DAC")]
	private sealed class <ProcessClearQueue>d__171 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScrollList <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x1FEE740", Offset = "0x1FEE740", VA = "0x1FEE740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x1FEE788", Offset = "0x1FEE788", VA = "0x1FEE788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1FEE558", Offset = "0x1FEE558", VA = "0x1FEE558")]
		[DebuggerHidden]
		public <ProcessClearQueue>d__171(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1FEE584", Offset = "0x1FEE584", VA = "0x1FEE584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1FEE588", Offset = "0x1FEE588", VA = "0x1FEE588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1FEE748", Offset = "0x1FEE748", VA = "0x1FEE748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool touchScroll;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollWheelFactor;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollDecelCoef;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool snap;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minSnapDuration;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public EZAnimation.EASING_TYPE snapEasing;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UISlider slider;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ORIENTATION orientation;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public DIRECTION direction;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ALIGNMENT alignment;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 viewableArea;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector2 viewableAreaActual;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool unitsInPixels;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera renderCamera;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Rect3D clientClippingRect;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float itemSpacing;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float itemSpacingActual;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool spacingAtEnds;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float extraEndSpacing;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected float extraEndSpacingActual;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool activateWhenAdding;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool clipContents;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool clipWhenMoving;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	public bool positionItemsImmediately;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float dragThreshold;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] sceneItems;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PrefabListItem[] prefabItems;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string methodToInvokeOnSelect;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpriteManager manager;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool detargetOnDisable;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public EZAnimation.EASING_TYPE positionEasing;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float positionEaseDuration;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float positionEaseDelay;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool blockInputWhileEasing;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int clearChunkSize;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected bool doItemEasing;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	protected bool doPosEasing;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected List<EZAnimation> itemEasers;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected EZAnimation scrollPosAnim;

	[NonSerialized]
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool repositionOnEnable;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	protected float contentExtents;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected IUIListObject selectedItem;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected IUIObject lastClickedControl;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float scrollPos;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected GameObject mover;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected List<IUIListObject> items;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected List<IUIListObject> visibleItems;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected List<IUIListObject> tempVisItems;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected IUIContainer container;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected ItemSnappedDelegate itemSnappedDel;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected Vector3 cachedPos;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	protected Quaternion cachedRot;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	protected Vector3 cachedScale;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected bool m_started;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	protected bool m_awake;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected List<IUIListObject> newItems;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected bool itemsInserted;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected Queue<IUIListObject> clearQueue;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected bool isScrolling;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	protected bool noTouch;

	[Token(Token = "0x400010F")]
	protected const float reboundSpeed = 1f;

	[Token(Token = "0x4000110")]
	protected const float overscrollAllowance = 0.5f;

	[Token(Token = "0x4000111")]
	protected const float lowPassKernelWidthInSeconds = 0.045f;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	protected float lowPassFilterFactor;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float scrollInertia;

	[Token(Token = "0x4000114")]
	protected const float backgroundColliderOffset = 0.01f;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	protected float scrollMax;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float scrollDelta;

	[Token(Token = "0x4000117")]
	private const float scrollStopThreshold = 0.0001f;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float scrollStopThresholdLog;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float lastTime;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float timeDelta;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float inertiaLerpInterval;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float inertiaLerpTime;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float amtOfPlay;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float autoScrollDuration;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float autoScrollStart;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float autoScrollPos;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float autoScrollDelta;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float autoScrollTime;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool autoScrolling;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	private bool listMoved;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private EZAnimation.Interpolator autoScrollInterpolator;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private IUIListObject snappedItem;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float localUnitsPerPixel;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected Collider _collider;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x17000041")]
	public float ScrollPosition
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1C32EE4", Offset = "0x1C32EE4", VA = "0x1C32EE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x1C32EEC", Offset = "0x1C32EEC", VA = "0x1C32EEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public IUIListObject SnappedItem
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x1C32F00", Offset = "0x1C32F00", VA = "0x1C32F00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public int SnappedItemIndex
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1C32FA8", Offset = "0x1C32FA8", VA = "0x1C32FA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000044")]
	public float ContentExtents
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x1C384B8", Offset = "0x1C384B8", VA = "0x1C384B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000045")]
	public float UnviewableArea
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x1C384C0", Offset = "0x1C384C0", VA = "0x1C384C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000046")]
	public IUIListObject SelectedItem
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1C384C8", Offset = "0x1C384C8", VA = "0x1C384C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x1C384D0", Offset = "0x1C384D0", VA = "0x1C384D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public IUIObject LastClickedControl
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x1C3866C", Offset = "0x1C3866C", VA = "0x1C3866C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public int Count
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x1C388D0", Offset = "0x1C388D0", VA = "0x1C388D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000049")]
	public bool controlIsEnabled
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1C39F70", Offset = "0x1C39F70", VA = "0x1C39F70", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1C39F78", Offset = "0x1C39F78", VA = "0x1C39F78", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1C3A0A0", Offset = "0x1C3A0A0", VA = "0x1C3A0A0", Slot = "53")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1C3A0B0", Offset = "0x1C3A0B0", VA = "0x1C3A0B0", Slot = "54")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1C3A0C8", Offset = "0x1C3A0C8", VA = "0x1C3A0C8", Slot = "55")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1C3A0D0", Offset = "0x1C3A0D0", VA = "0x1C3A0D0", Slot = "56")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public object Data
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1C3A6F8", Offset = "0x1C3A6F8", VA = "0x1C3A6F8", Slot = "24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1C3A700", Offset = "0x1C3A700", VA = "0x1C3A700", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool IsDraggable
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1C3A70C", Offset = "0x1C3A70C", VA = "0x1C3A70C", Slot = "26")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1C3A714", Offset = "0x1C3A714", VA = "0x1C3A714", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public LayerMask DropMask
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1C3A718", Offset = "0x1C3A718", VA = "0x1C3A718", Slot = "28")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x1C3A738", Offset = "0x1C3A738", VA = "0x1C3A738", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float DragOffset
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1C3A73C", Offset = "0x1C3A73C", VA = "0x1C3A73C", Slot = "36")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x1C3A744", Offset = "0x1C3A744", VA = "0x1C3A744", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x1C3A748", Offset = "0x1C3A748", VA = "0x1C3A748", Slot = "38")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x1C3A750", Offset = "0x1C3A750", VA = "0x1C3A750", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float CancelDragDuration
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x1C3A754", Offset = "0x1C3A754", VA = "0x1C3A754", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x1C3A75C", Offset = "0x1C3A75C", VA = "0x1C3A75C", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool IsDragging
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x1C3A760", Offset = "0x1C3A760", VA = "0x1C3A760", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1C3A768", Offset = "0x1C3A768", VA = "0x1C3A768", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1C3A76C", Offset = "0x1C3A76C", VA = "0x1C3A76C", Slot = "32")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x1C3A774", Offset = "0x1C3A774", VA = "0x1C3A774", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool DropHandled
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x1C3A778", Offset = "0x1C3A778", VA = "0x1C3A778", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x1C3A780", Offset = "0x1C3A780", VA = "0x1C3A780", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1C2CC78", Offset = "0x1C2CC78", VA = "0x1C2CC78")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1C2CCEC", Offset = "0x1C2CCEC", VA = "0x1C2CCEC")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1C2DF04", Offset = "0x1C2DF04", VA = "0x1C2DF04")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1C2D410", Offset = "0x1C2D410", VA = "0x1C2D410")]
	public void SetupCameraAndSizes()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1C2E10C", Offset = "0x1C2E10C", VA = "0x1C2E10C")]
	protected void CalcScreenToWorldUnits()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1C2D8BC", Offset = "0x1C2D8BC", VA = "0x1C2D8BC")]
	protected void CalcClippingRect()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1C2E240", Offset = "0x1C2E240", VA = "0x1C2E240")]
	public void SliderMoved(IUIObject slider)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1C2E55C", Offset = "0x1C2E55C", VA = "0x1C2E55C")]
	public void SliderInputDel(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1C2E380", Offset = "0x1C2E380", VA = "0x1C2E380")]
	protected void ScrollListTo_Internal(float pos)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1C32ED0", Offset = "0x1C32ED0", VA = "0x1C32ED0")]
	public void ScrollListTo(float pos)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1C33064", Offset = "0x1C33064", VA = "0x1C33064")]
	public void ScrollToItem(IUIListObject item, float scrollTime, EZAnimation.EASING_TYPE easing)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1C34068", Offset = "0x1C34068", VA = "0x1C34068")]
	public void ScrollToItem(int index, float scrollTime, EZAnimation.EASING_TYPE easing)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1C34120", Offset = "0x1C34120", VA = "0x1C34120")]
	public void ScrollToItem(IUIListObject item, float scrollTime)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1C34128", Offset = "0x1C34128", VA = "0x1C34128")]
	public void ScrollToItem(int index, float scrollTime)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1C34130", Offset = "0x1C34130", VA = "0x1C34130")]
	public void SetViewableAreaPixelDimensions(Camera cam, int width, int height)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1C3428C", Offset = "0x1C3428C", VA = "0x1C3428C")]
	public void InsertItem(IUIListObject item, int position)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1C34E74", Offset = "0x1C34E74", VA = "0x1C34E74")]
	public void InsertItem(IUIListObject item, int position, bool doEasing)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1C34E80", Offset = "0x1C34E80", VA = "0x1C34E80")]
	public void InsertItem(IUIListObject item, int position, string text)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1C34298", Offset = "0x1C34298", VA = "0x1C34298")]
	public void InsertItem(IUIListObject item, int position, string text, bool doEasing)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1C33260", Offset = "0x1C33260", VA = "0x1C33260")]
	protected void PositionNewItems()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1C2DB84", Offset = "0x1C2DB84", VA = "0x1C2DB84")]
	public void AddItem(GameObject itemGO)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1C35170", Offset = "0x1C35170", VA = "0x1C35170")]
	public void AddItem(IUIListObject item)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1C350E4", Offset = "0x1C350E4", VA = "0x1C350E4")]
	public void AddItem(IUIListObject item, string text)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1C35178", Offset = "0x1C35178", VA = "0x1C35178")]
	public IUIListObject CreateItem(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1C2DE78", Offset = "0x1C2DE78", VA = "0x1C2DE78")]
	public IUIListObject CreateItem(GameObject prefab, string text)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1C35208", Offset = "0x1C35208", VA = "0x1C35208")]
	public IUIListObject CreateItem(GameObject prefab, int position, bool doEasing)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1C3569C", Offset = "0x1C3569C", VA = "0x1C3569C")]
	public IUIListObject CreateItem(GameObject prefab, int position)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1C35200", Offset = "0x1C35200", VA = "0x1C35200")]
	public IUIListObject CreateItem(GameObject prefab, int position, string text)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1C35214", Offset = "0x1C35214", VA = "0x1C35214")]
	public IUIListObject CreateItem(GameObject prefab, int position, string text, bool doEasing)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1C34E88", Offset = "0x1C34E88", VA = "0x1C34E88")]
	protected void UpdateContentExtents(float change)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1C356A8", Offset = "0x1C356A8", VA = "0x1C356A8")]
	protected float ScrollPosInterpolator(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1C35794", Offset = "0x1C35794", VA = "0x1C35794")]
	protected float GetYCentered(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1C3579C", Offset = "0x1C3579C", VA = "0x1C3579C")]
	protected float GetYAlignTop(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1C35870", Offset = "0x1C35870", VA = "0x1C35870")]
	protected float GetYAlignBottom(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1C35944", Offset = "0x1C35944", VA = "0x1C35944")]
	protected float GetXCentered(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1C3594C", Offset = "0x1C3594C", VA = "0x1C3594C")]
	protected float GetXAlignLeft(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1C35A20", Offset = "0x1C35A20", VA = "0x1C35A20")]
	protected float GetXAlignRight(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1C35AF4", Offset = "0x1C35AF4", VA = "0x1C35AF4")]
	public void PositionItems()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1C2DF30", Offset = "0x1C2DF30", VA = "0x1C2DF30")]
	public void RepositionItems()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1C35CD0", Offset = "0x1C35CD0", VA = "0x1C35CD0")]
	protected void PositionHorizontally(bool updateExtents)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1C36BF0", Offset = "0x1C36BF0", VA = "0x1C36BF0")]
	protected void PositionVertically(bool updateExtents)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1C37B08", Offset = "0x1C37B08", VA = "0x1C37B08")]
	protected void OnPosEasingDone(EZAnimation anim)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1C2ECC0", Offset = "0x1C2ECC0", VA = "0x1C2ECC0")]
	protected void ClipItems()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1C37BE0", Offset = "0x1C37BE0", VA = "0x1C37BE0")]
	public void DidSelect(IUIListObject item)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1C37D34", Offset = "0x1C37D34", VA = "0x1C37D34")]
	public void DidClick(IUIObject item)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1C37E00", Offset = "0x1C37E00", VA = "0x1C37E00")]
	public void ListDragged(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1C38110", Offset = "0x1C38110", VA = "0x1C38110")]
	public void ScrollWheel(float amt)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1C38170", Offset = "0x1C38170", VA = "0x1C38170")]
	public void PointerReleased()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1C381C4", Offset = "0x1C381C4", VA = "0x1C381C4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1C38210", Offset = "0x1C38210", VA = "0x1C38210", Slot = "52")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1C38674", Offset = "0x1C38674", VA = "0x1C38674")]
	public void SetSelectedItem(int index)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1C32F18", Offset = "0x1C32F18", VA = "0x1C32F18")]
	public IUIListObject GetItem(int index)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1C3891C", Offset = "0x1C3891C", VA = "0x1C3891C")]
	public void RemoveItem(int index, bool destroy)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1C38928", Offset = "0x1C38928", VA = "0x1C38928")]
	public void RemoveItem(int index, bool destroy, bool doEasing)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1C3907C", Offset = "0x1C3907C", VA = "0x1C3907C")]
	public void RemoveItem(IUIListObject item, bool destroy)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1C39088", Offset = "0x1C39088", VA = "0x1C39088")]
	public void RemoveItem(IUIListObject item, bool destroy, bool doEasing)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1C3915C", Offset = "0x1C3915C", VA = "0x1C3915C")]
	public void ClearList(bool destroy)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1C395BC", Offset = "0x1C395BC", VA = "0x1C395BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9F3C", Offset = "0x8C9F3C")]
	protected IEnumerator ProcessClearQueue()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1C38370", Offset = "0x1C38370", VA = "0x1C38370")]
	protected void ProcessClearQueueImmediate()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1C39634", Offset = "0x1C39634", VA = "0x1C39634", Slot = "17")]
	public void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1C39968", Offset = "0x1C39968", VA = "0x1C39968")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1C2E58C", Offset = "0x1C2E58C", VA = "0x1C2E58C")]
	protected void CalcSnapItem()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1C39DCC", Offset = "0x1C39DCC", VA = "0x1C39DCC")]
	protected void AddItemsToContainer()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1C39414", Offset = "0x1C39414", VA = "0x1C39414")]
	protected void RemoveItemsFromContainer()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1C3A0C4", Offset = "0x1C3A0C4", VA = "0x1C3A0C4", Slot = "8")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1C3A144", Offset = "0x1C3A144", VA = "0x1C3A144", Slot = "15")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1C3A388", Offset = "0x1C3A388", VA = "0x1C3A388", Slot = "16")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1C3A390", Offset = "0x1C3A390", VA = "0x1C3A390", Slot = "18")]
	public void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1C3A3A0", Offset = "0x1C3A3A0", VA = "0x1C3A3A0", Slot = "19")]
	public void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1C3A42C", Offset = "0x1C3A42C", VA = "0x1C3A42C", Slot = "20")]
	public void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1C3A4B8", Offset = "0x1C3A4B8", VA = "0x1C3A4B8", Slot = "21")]
	public void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1C3A4C8", Offset = "0x1C3A4C8", VA = "0x1C3A4C8", Slot = "22")]
	public void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1C3A554", Offset = "0x1C3A554", VA = "0x1C3A554", Slot = "23")]
	public void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1C3A5E0", Offset = "0x1C3A5E0", VA = "0x1C3A5E0")]
	public void AddItemSnappedDelegate(ItemSnappedDelegate del)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1C3A66C", Offset = "0x1C3A66C", VA = "0x1C3A66C")]
	public void RemoveItemSnappedDelegate(ItemSnappedDelegate del)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1C3A704", Offset = "0x1C3A704", VA = "0x1C3A704")]
	public object GetData()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1C3A784", Offset = "0x1C3A784", VA = "0x1C3A784", Slot = "42")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1C3A788", Offset = "0x1C3A788", VA = "0x1C3A788", Slot = "43")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1C3A78C", Offset = "0x1C3A78C", VA = "0x1C3A78C", Slot = "44")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1C3A7D0", Offset = "0x1C3A7D0", VA = "0x1C3A7D0", Slot = "45")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1C3A85C", Offset = "0x1C3A85C", VA = "0x1C3A85C", Slot = "46")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1C3A8E8", Offset = "0x1C3A8E8", VA = "0x1C3A8E8", Slot = "47")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1C3A8F8", Offset = "0x1C3A8F8", VA = "0x1C3A8F8", Slot = "48")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1C3A8FC", Offset = "0x1C3A8FC", VA = "0x1C3A8FC", Slot = "49")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1C3A900", Offset = "0x1C3A900", VA = "0x1C3A900", Slot = "50")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1C3A904", Offset = "0x1C3A904", VA = "0x1C3A904", Slot = "51")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1C3A90C", Offset = "0x1C3A90C", VA = "0x1C3A90C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1C3AF8C", Offset = "0x1C3AF8C", VA = "0x1C3AF8C")]
	public static UIScrollList Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1C3B0D8", Offset = "0x1C3B0D8", VA = "0x1C3B0D8")]
	public static UIScrollList Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1C3B26C", Offset = "0x1C3B26C", VA = "0x1C3B26C")]
	public void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1C3B340", Offset = "0x1C3B340", VA = "0x1C3B340")]
	public UIScrollList()
	{
	}

	[SpecialName]
	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1C3B5AC", Offset = "0x1C3B5AC", VA = "0x1C3B5AC", Slot = "11")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1C3B5B4", Offset = "0x1C3B5B4", VA = "0x1C3B5B4", Slot = "12")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1C3B5BC", Offset = "0x1C3B5BC", VA = "0x1C3B5BC", Slot = "14")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C851C", Offset = "0x8C851C")]
public class UISlider : AutoSpriteControlBase
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	protected float m_value;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public string methodToInvoke;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public float defaultValue;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public float stopKnobFromEdge;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Vector3 knobOffset;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public Vector2 knobSize;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public Vector2 knobColliderSizeFactor;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	public bool disableEmptyBar;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	protected AutoSprite emptySprite;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	protected UIScrollKnob knob;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public SpriteRoot[] filledLayers;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public SpriteRoot[] emptyLayers;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public SpriteRoot[] knobLayers;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	protected float truncFloor;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	protected float truncRange;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	protected int[] filledIndices;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	protected int[] emptyIndices;

	[Token(Token = "0x17000055")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x197CDB8", Offset = "0x197CDB8", VA = "0x197CDB8", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x197CDC0", Offset = "0x197CDC0", VA = "0x197CDC0", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float Value
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x197CE88", Offset = "0x197CE88", VA = "0x197CE88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x197CE90", Offset = "0x197CE90", VA = "0x197CE90")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x197D004", Offset = "0x197D004", VA = "0x197D004", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x197D00C", Offset = "0x197D00C", VA = "0x197D00C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x197D064", Offset = "0x197D064", VA = "0x197D064", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x197D06C", Offset = "0x197D06C", VA = "0x197D06C", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public override IUIContainer Container
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x197F3F0", Offset = "0x197F3F0", VA = "0x197F3F0", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x197F3F8", Offset = "0x197F3F8", VA = "0x197F3F8", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public override bool Clipped
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x197F860", Offset = "0x197F860", VA = "0x197F860", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x197F868", Offset = "0x197F868", VA = "0x197F868", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x197F978", Offset = "0x197F978", VA = "0x197F978", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x197F9C4", Offset = "0x197F9C4", VA = "0x197F9C4", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x197D01C", Offset = "0x197D01C", VA = "0x197D01C", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x197D07C", Offset = "0x197D07C", VA = "0x197D07C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x197D0A8", Offset = "0x197D0A8", VA = "0x197D0A8", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x197EA6C", Offset = "0x197EA6C", VA = "0x197EA6C", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x197EBCC", Offset = "0x197EBCC", VA = "0x197EBCC", Slot = "22")]
	public override void SetSize(float width, float height)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x197ED18", Offset = "0x197ED18", VA = "0x197ED18", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x197ED2C", Offset = "0x197ED2C", VA = "0x197ED2C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x197E668", Offset = "0x197E668", VA = "0x197E668")]
	protected Vector3 CalcKnobStartPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x197EF30", Offset = "0x197EF30", VA = "0x197EF30", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x197CEEC", Offset = "0x197CEEC", VA = "0x197CEEC")]
	protected void UpdateValue()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x197F10C", Offset = "0x197F10C", VA = "0x197F10C")]
	public void ScrollKnobMoved(UIScrollKnob knob, float val)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x197F1E4", Offset = "0x197F1E4", VA = "0x197F1E4", Slot = "184")]
	public override void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x197F290", Offset = "0x197F290", VA = "0x197F290", Slot = "185")]
	public override void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x197F33C", Offset = "0x197F33C", VA = "0x197F33C", Slot = "186")]
	public override void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x197EFA0", Offset = "0x197EFA0", VA = "0x197EFA0")]
	protected void UpdateAppearance(float truncVal)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x197F3E8", Offset = "0x197F3E8", VA = "0x197F3E8")]
	public UIScrollKnob GetKnob()
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x197F760", Offset = "0x197F760", VA = "0x197F760", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x197FB48", Offset = "0x197FB48", VA = "0x197FB48")]
	public static UISlider Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x197FC94", Offset = "0x197FC94", VA = "0x197FC94")]
	public static UISlider Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x197FE28", Offset = "0x197FE28", VA = "0x197FE28", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x197FF30", Offset = "0x197FF30", VA = "0x197FF30", Slot = "30")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1980080", Offset = "0x1980080", VA = "0x1980080", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1980158", Offset = "0x1980158", VA = "0x1980158")]
	public UISlider()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8554", Offset = "0x8C8554")]
public class UIStateToggleBtn : AutoSpriteControlBase
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	protected int curStateIndex;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	protected bool stateChangeWhileDeactivated;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public int defaultState;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public SpriteRoot[] layers;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public string methodToInvoke;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	public float delay;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioSource soundToPlay;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public bool disableHoverEffect;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	protected int[,] stateIndices;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	protected int overLayerState;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	protected int activeLayerState;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	protected int layerState;

	[Token(Token = "0x1700005C")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1980900", Offset = "0x1980900", VA = "0x1980900", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1980908", Offset = "0x1980908", VA = "0x1980908", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int StateNum
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1980AD8", Offset = "0x1980AD8", VA = "0x1980AD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005E")]
	public string StateName
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1980AE0", Offset = "0x1980AE0", VA = "0x1980AE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1980B28", Offset = "0x1980B28", VA = "0x1980B28", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x1980B30", Offset = "0x1980B30", VA = "0x1980B30", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1980C70", Offset = "0x1980C70", VA = "0x1980C70", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1980C78", Offset = "0x1980C78", VA = "0x1980C78", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public override CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x1980C88", Offset = "0x1980C88", VA = "0x1980C88", Slot = "81")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public override TextureAnim DefaultState
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1980D44", Offset = "0x1980D44", VA = "0x1980D44", Slot = "82")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public override string Text
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x1981D20", Offset = "0x1981D20", VA = "0x1981D20", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x1981D28", Offset = "0x1981D28", VA = "0x1981D28", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1980B40", Offset = "0x1980B40", VA = "0x1980B40", Slot = "199")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1980B7C", Offset = "0x1980B7C", VA = "0x1980B7C", Slot = "200")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1980C28", Offset = "0x1980C28", VA = "0x1980C28", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1980D9C", Offset = "0x1980D9C", VA = "0x1980D9C", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1981134", Offset = "0x1981134", VA = "0x1981134", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1981160", Offset = "0x1981160", VA = "0x1981160", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1981828", Offset = "0x1981828", VA = "0x1981828", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x198183C", Offset = "0x198183C", VA = "0x198183C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1980FC0", Offset = "0x1980FC0", VA = "0x1980FC0")]
	public int ToggleState()
	{
		return default(int);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x198196C", Offset = "0x198196C", VA = "0x198196C", Slot = "202")]
	public virtual void SetToggleState(int s, bool suppressTransition)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1981C00", Offset = "0x1981C00", VA = "0x1981C00", Slot = "203")]
	public virtual void SetToggleState(int s)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1981C14", Offset = "0x1981C14", VA = "0x1981C14", Slot = "204")]
	public virtual void SetToggleState(string stateName, bool suppressTransition)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1981CC4", Offset = "0x1981CC4", VA = "0x1981CC4", Slot = "205")]
	public virtual void SetToggleState(string stateName)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1980FF8", Offset = "0x1980FF8", VA = "0x1980FF8")]
	protected void SetLayerState(int s)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x198092C", Offset = "0x198092C", VA = "0x198092C")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1981CD8", Offset = "0x1981CD8", VA = "0x1981CD8", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1981EB8", Offset = "0x1981EB8", VA = "0x1981EB8", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1981F40", Offset = "0x1981F40", VA = "0x1981F40", Slot = "192")]
	public override int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1982844", Offset = "0x1982844", VA = "0x1982844", Slot = "193")]
	public override int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1982B58", Offset = "0x1982B58", VA = "0x1982B58", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1982C30", Offset = "0x1982C30", VA = "0x1982C30")]
	public static UIStateToggleBtn Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1982D7C", Offset = "0x1982D7C", VA = "0x1982D7C")]
	public static UIStateToggleBtn Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1982F10", Offset = "0x1982F10", VA = "0x1982F10")]
	public UIStateToggleBtn()
	{
	}
}
[Token(Token = "0x2000029")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C858C", Offset = "0x8C858C")]
public class UIStateToggleBtn3D : ControlBase
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected int curStateIndex;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int defaultState;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public string[] states;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string methodToInvoke;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float delay;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource soundToPlay;

	[Token(Token = "0x17000064")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x1983410", Offset = "0x1983410", VA = "0x1983410", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x1983418", Offset = "0x1983418", VA = "0x1983418", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public int StateNum
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x1983530", Offset = "0x1983530", VA = "0x1983530")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000066")]
	public string StateName
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x1983538", Offset = "0x1983538", VA = "0x1983538")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public override string[] States
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1983578", Offset = "0x1983578", VA = "0x1983578", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x19835C8", Offset = "0x19835C8", VA = "0x19835C8", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x19835D0", Offset = "0x19835D0", VA = "0x19835D0", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public override string Text
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1983D34", Offset = "0x1983D34", VA = "0x1983D34", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x1983D3C", Offset = "0x1983D3C", VA = "0x1983D3C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1983580", Offset = "0x1983580", VA = "0x1983580", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x19835D8", Offset = "0x19835D8", VA = "0x19835D8", Slot = "117")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1983614", Offset = "0x1983614", VA = "0x1983614", Slot = "118")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x19836C0", Offset = "0x19836C0", VA = "0x19836C0", Slot = "103")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1983870", Offset = "0x1983870", VA = "0x1983870", Slot = "85")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x198389C", Offset = "0x198389C", VA = "0x198389C", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1983A68", Offset = "0x1983A68", VA = "0x1983A68", Slot = "107")]
	public override void Copy(IControl c)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1983A7C", Offset = "0x1983A7C", VA = "0x1983A7C", Slot = "108")]
	public override void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1983824", Offset = "0x1983824", VA = "0x1983824")]
	public int ToggleState()
	{
		return default(int);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1983BAC", Offset = "0x1983BAC", VA = "0x1983BAC", Slot = "122")]
	public virtual void SetToggleState(int s)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1983C94", Offset = "0x1983C94", VA = "0x1983C94", Slot = "123")]
	public virtual void SetToggleState(string stateName)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x198343C", Offset = "0x198343C", VA = "0x198343C")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1983ECC", Offset = "0x1983ECC", VA = "0x1983ECC", Slot = "110")]
	public override int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1984724", Offset = "0x1984724", VA = "0x1984724", Slot = "111")]
	public override int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1984A64", Offset = "0x1984A64", VA = "0x1984A64", Slot = "112")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1984B38", Offset = "0x1984B38", VA = "0x1984B38")]
	public static UIStateToggleBtn3D Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1984C84", Offset = "0x1984C84", VA = "0x1984C84")]
	public static UIStateToggleBtn3D Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1984E18", Offset = "0x1984E18", VA = "0x1984E18")]
	public UIStateToggleBtn3D()
	{
	}
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C85C4", Offset = "0x8C85C4")]
public class UITextField : AutoSpriteControlBase, IKeyFocusable
{
	[Token(Token = "0x200017F")]
	public delegate void FocusDelegate(UITextField field);

	[Token(Token = "0x2000180")]
	public delegate string ValidationDelegate(UITextField field, string text, ref int insertionPoint);

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Vector2 margins;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	protected Rect3D clientClippingRect;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	protected Vector2 marginTopLeft;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	protected Vector2 marginBottomRight;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public int maxLength;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public bool multiline;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x375")]
	public bool password;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public string maskingCharacter;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public Vector2 caretSize;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public ANCHOR_METHOD caretAnchor;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	public Vector3 caretOffset;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public bool showCaretOnMobile;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x399")]
	public bool allowClickCaretPlacement;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39A")]
	protected bool maxLengthExceeded;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public TouchScreenKeyboardType type;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public bool autoCorrect;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A1")]
	public bool alert;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A2")]
	public bool hideInput;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public string methodToInvoke;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	protected EZKeyboardCommitDelegate commitDelegate;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	protected ValidationDelegate validationDelegate;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public AudioSource typingSoundEffect;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public AudioSource fieldFullSound;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public bool customKeyboard;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D9")]
	public bool commitOnLostFocus;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	public POINTER_INFO.INPUT_EVENT customFocusEvent;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	protected AutoSprite caret;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	protected FocusDelegate focusDelegate;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	protected int insert;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	protected Vector3 cachedPos;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	protected Quaternion cachedRot;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	protected Vector3 cachedScale;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	protected bool hasFocus;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	protected Vector3 origTextPos;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	protected int[,] stateIndices;

	[Token(Token = "0x1700006A")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0x1985528", Offset = "0x1985528", VA = "0x1985528", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x1985530", Offset = "0x1985530", VA = "0x1985530", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x198553C", Offset = "0x198553C", VA = "0x198553C", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1985544", Offset = "0x1985544", VA = "0x1985544", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x198559C", Offset = "0x198559C", VA = "0x198559C", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x19855A4", Offset = "0x19855A4", VA = "0x19855A4", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public string Content
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x1986190", Offset = "0x1986190", VA = "0x1986190", Slot = "207")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public override SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x1987694", Offset = "0x1987694", VA = "0x1987694", Slot = "166")]
		get
		{
			return default(SpriteText.Alignment_Type);
		}
	}

	[Token(Token = "0x1700006F")]
	public override SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x198769C", Offset = "0x198769C", VA = "0x198769C", Slot = "167")]
		get
		{
			return default(SpriteText.Anchor_Pos);
		}
	}

	[Token(Token = "0x17000070")]
	public bool MaxLengthExceeded
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x1988160", Offset = "0x1988160", VA = "0x1988160")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public override IUIContainer Container
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1988168", Offset = "0x1988168", VA = "0x1988168", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x1988170", Offset = "0x1988170", VA = "0x1988170", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public override string Text
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1988364", Offset = "0x1988364", VA = "0x1988364", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x198836C", Offset = "0x198836C", VA = "0x198836C", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x1988A38", Offset = "0x1988A38", VA = "0x1988A38", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x1988A84", Offset = "0x1988A84", VA = "0x1988A84", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public override bool Clipped
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x1988AE0", Offset = "0x1988AE0", VA = "0x1988AE0", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x1988AE8", Offset = "0x1988AE8", VA = "0x1988AE8", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool Password
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x1988B20", Offset = "0x1988B20", VA = "0x1988B20", Slot = "208")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x1988B28", Offset = "0x1988B28", VA = "0x1988B28")]
		set
		{
		}
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1985554", Offset = "0x1985554", VA = "0x1985554", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x19855B4", Offset = "0x19855B4", VA = "0x19855B4", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x198564C", Offset = "0x198564C", VA = "0x198564C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1985660", Offset = "0x1985660", VA = "0x1985660", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1985A40", Offset = "0x1985A40", VA = "0x1985A40", Slot = "183")]
	public override bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1985A68", Offset = "0x1985A68", VA = "0x1985A68", Slot = "204")]
	public string GetInputText(ref KEYBOARD_INFO info)
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1985BF0", Offset = "0x1985BF0", VA = "0x1985BF0", Slot = "203")]
	public string SetInputText(string inputText, ref int insertPt)
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1986078", Offset = "0x1986078", VA = "0x1986078", Slot = "202")]
	public void LostFocus()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1985FBC", Offset = "0x1985FBC", VA = "0x1985FBC", Slot = "205")]
	public void Commit()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1985AC4", Offset = "0x1985AC4", VA = "0x1985AC4")]
	protected void ShowCaret()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1986410", Offset = "0x1986410", VA = "0x1986410", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x19860AC", Offset = "0x19860AC", VA = "0x19860AC")]
	protected void HideCaret()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1986504", Offset = "0x1986504", VA = "0x1986504")]
	protected void PositionText(bool recur)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1985FB4", Offset = "0x1985FB4", VA = "0x1985FB4")]
	protected void PositionCaret()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x19868A8", Offset = "0x19868A8", VA = "0x19868A8")]
	protected void PositionCaret(bool recur)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1986E6C", Offset = "0x1986E6C", VA = "0x1986E6C")]
	protected void PositionInsertionPoint(Vector3 pt)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1986FDC", Offset = "0x1986FDC", VA = "0x1986FDC", Slot = "209")]
	public void GoUp()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x198717C", Offset = "0x198717C", VA = "0x198717C", Slot = "210")]
	public void GoDown()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x198731C", Offset = "0x198731C", VA = "0x198731C", Slot = "206")]
	public void SetCommitDelegate(EZKeyboardCommitDelegate del)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x198732C", Offset = "0x198732C", VA = "0x198732C")]
	public void AddCommitDelegate(EZKeyboardCommitDelegate del)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x19873B8", Offset = "0x19873B8", VA = "0x19873B8")]
	public void RemoveCommitDelegate(EZKeyboardCommitDelegate del)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1987444", Offset = "0x1987444", VA = "0x1987444")]
	public void SetFocusDelegate(FocusDelegate del)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1987454", Offset = "0x1987454", VA = "0x1987454")]
	public void AddFocusDelegate(FocusDelegate del)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x19874E0", Offset = "0x19874E0", VA = "0x19874E0")]
	public void RemoveFocusDelegate(FocusDelegate del)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x198756C", Offset = "0x198756C", VA = "0x198756C")]
	public void SetValidationDelegate(ValidationDelegate del)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x198757C", Offset = "0x198757C", VA = "0x198757C")]
	public void AddValidationDelegate(ValidationDelegate del)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1987608", Offset = "0x1987608", VA = "0x1987608")]
	public void RemoveValidationDelegate(ValidationDelegate del)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x19876A4", Offset = "0x19876A4", VA = "0x19876A4", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x19876AC", Offset = "0x19876AC", VA = "0x19876AC", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x19879A8", Offset = "0x19879A8", VA = "0x19879A8")]
	protected void CreateCaret()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x19861A0", Offset = "0x19861A0", VA = "0x19861A0")]
	public void CalcClippingRect()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x19880E4", Offset = "0x19880E4", VA = "0x19880E4")]
	public void OnEZTranslated()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x19880E8", Offset = "0x19880E8", VA = "0x19880E8")]
	public void OnEZRotated()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x19880EC", Offset = "0x19880EC", VA = "0x19880EC")]
	public void OnEZScaled()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1985858", Offset = "0x1985858", VA = "0x1985858")]
	public void SetMargins(Vector2 marg)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x19880F0", Offset = "0x19880F0", VA = "0x19880F0", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1988724", Offset = "0x1988724", VA = "0x1988724")]
	public static UITextField Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1988870", Offset = "0x1988870", VA = "0x1988870")]
	public static UITextField Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1988A04", Offset = "0x1988A04", VA = "0x1988A04", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1988B58", Offset = "0x1988B58", VA = "0x1988B58", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1988C30", Offset = "0x1988C30", VA = "0x1988C30", Slot = "49")]
	public override void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1988D14", Offset = "0x1988D14", VA = "0x1988D14", Slot = "48")]
	public override void DoMirror()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1988E58", Offset = "0x1988E58", VA = "0x1988E58")]
	public UITextField()
	{
	}
}
[Token(Token = "0x200002B")]
public class UITextFieldMirror : AutoSpriteControlBaseMirror
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector2 margins;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool multiline;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x198916C", Offset = "0x198916C", VA = "0x198916C", Slot = "4")]
	public override void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1989218", Offset = "0x1989218", VA = "0x1989218", Slot = "5")]
	public override bool Validate(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1989220", Offset = "0x1989220", VA = "0x1989220", Slot = "6")]
	public override bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1988E50", Offset = "0x1988E50", VA = "0x1988E50")]
	public UITextFieldMirror()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C85FC", Offset = "0x8C85FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C85FC", Offset = "0x8C85FC")]
public class UIVirtualScreen : MonoBehaviour, IUIObject, IEZDragDrop
{
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DBC", Offset = "0x8C8DBC")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIVirtualScreen <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x1FEFDF8", Offset = "0x1FEFDF8", VA = "0x1FEFDF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x1FEFE40", Offset = "0x1FEFE40", VA = "0x1FEFE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1FEFCB8", Offset = "0x1FEFCB8", VA = "0x1FEFCB8")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1FEFCE4", Offset = "0x1FEFCE4", VA = "0x1FEFCE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1FEFCE8", Offset = "0x1FEFCE8", VA = "0x1FEFCE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1FEFE00", Offset = "0x1FEFE00", VA = "0x1FEFE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DCC", Offset = "0x8C8DCC")]
	private sealed class <DeactivateScreenCam>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIVirtualScreen <>4__this;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x1FEFC68", Offset = "0x1FEFC68", VA = "0x1FEFC68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x1FEFCB0", Offset = "0x1FEFCB0", VA = "0x1FEFCB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1FEFA84", Offset = "0x1FEFA84", VA = "0x1FEFA84")]
		[DebuggerHidden]
		public <DeactivateScreenCam>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1FEFAB0", Offset = "0x1FEFAB0", VA = "0x1FEFAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1FEFAB4", Offset = "0x1FEFAB4", VA = "0x1FEFAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1FEFC70", Offset = "0x1FEFC70", VA = "0x1FEFC70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera screenCamera;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rayDepth;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool processPointerInfo;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject controlParent;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool onlyRenderWhenNeeded;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float renderTimeout;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<IUIObject> controls;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool shuttingDown;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected IUIContainer container;

	[Token(Token = "0x17000076")]
	public bool controlIsEnabled
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x198A310", Offset = "0x198A310", VA = "0x198A310", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x198A318", Offset = "0x198A318", VA = "0x198A318", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool DetargetOnDisable
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x198A31C", Offset = "0x198A31C", VA = "0x198A31C", Slot = "6")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x198A324", Offset = "0x198A324", VA = "0x198A324", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x198A604", Offset = "0x198A604", VA = "0x198A604", Slot = "54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x198A60C", Offset = "0x198A60C", VA = "0x198A60C", Slot = "55")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public object Data
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x198A85C", Offset = "0x198A85C", VA = "0x198A85C", Slot = "24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x198A864", Offset = "0x198A864", VA = "0x198A864", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public bool IsDraggable
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x198A868", Offset = "0x198A868", VA = "0x198A868", Slot = "26")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x198A870", Offset = "0x198A870", VA = "0x198A870", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public LayerMask DropMask
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x198A874", Offset = "0x198A874", VA = "0x198A874", Slot = "28")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x198A894", Offset = "0x198A894", VA = "0x198A894", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool IsDragging
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x198A898", Offset = "0x198A898", VA = "0x198A898", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x198A8A0", Offset = "0x198A8A0", VA = "0x198A8A0", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x198A8A4", Offset = "0x198A8A4", VA = "0x198A8A4", Slot = "32")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x198A8AC", Offset = "0x198A8AC", VA = "0x198A8AC", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public bool DropHandled
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x198A8B0", Offset = "0x198A8B0", VA = "0x198A8B0", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x198A8B8", Offset = "0x198A8B8", VA = "0x198A8B8", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public float DragOffset
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x198A8BC", Offset = "0x198A8BC", VA = "0x198A8BC", Slot = "36")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x198A8C4", Offset = "0x198A8C4", VA = "0x198A8C4", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x198A8C8", Offset = "0x198A8C8", VA = "0x198A8C8", Slot = "38")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x198A8D0", Offset = "0x198A8D0", VA = "0x198A8D0", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float CancelDragDuration
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x198A8D4", Offset = "0x198A8D4", VA = "0x198A8D4", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x198A8DC", Offset = "0x198A8DC", VA = "0x198A8DC", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x19893BC", Offset = "0x19893BC", VA = "0x19893BC", Slot = "52")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1989A28", Offset = "0x1989A28", VA = "0x1989A28", Slot = "53")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9F9C", Offset = "0x8C9F9C")]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1989530", Offset = "0x1989530", VA = "0x1989530")]
	protected void SetupControls()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1989AB4", Offset = "0x1989AB4", VA = "0x1989AB4")]
	public void AddControl(IUIObject obj)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1989BEC", Offset = "0x1989BEC", VA = "0x1989BEC")]
	public void RemoveControl(IUIObject obj)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1989D14", Offset = "0x1989D14", VA = "0x1989D14")]
	public void SetScreenCamera(Camera cam)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1989D1C", Offset = "0x1989D1C", VA = "0x1989D1C")]
	public void SetControlParent(GameObject go)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1989D60", Offset = "0x1989D60", VA = "0x1989D60")]
	protected void InputProcessor(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x198A108", Offset = "0x198A108", VA = "0x198A108")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C9FFC", Offset = "0x8C9FFC")]
	protected IEnumerator DeactivateScreenCam(float timeout)
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x198A180", Offset = "0x198A180", VA = "0x198A180")]
	public void RenderFrame()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x198A248", Offset = "0x198A248", VA = "0x198A248")]
	public void ForceOn()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x198A328", Offset = "0x198A328", VA = "0x198A328", Slot = "8")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x198A614", Offset = "0x198A614", VA = "0x198A614", Slot = "15")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x198A838", Offset = "0x198A838", VA = "0x198A838", Slot = "16")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x198A840", Offset = "0x198A840", VA = "0x198A840", Slot = "17")]
	public void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x198A844", Offset = "0x198A844", VA = "0x198A844", Slot = "18")]
	public void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x198A848", Offset = "0x198A848", VA = "0x198A848", Slot = "19")]
	public void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x198A84C", Offset = "0x198A84C", VA = "0x198A84C", Slot = "20")]
	public void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x198A850", Offset = "0x198A850", VA = "0x198A850", Slot = "21")]
	public void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x198A854", Offset = "0x198A854", VA = "0x198A854", Slot = "22")]
	public void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x198A858", Offset = "0x198A858", VA = "0x198A858", Slot = "23")]
	public void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x198A8E0", Offset = "0x198A8E0", VA = "0x198A8E0", Slot = "42")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x198A8E4", Offset = "0x198A8E4", VA = "0x198A8E4", Slot = "43")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x198A8E8", Offset = "0x198A8E8", VA = "0x198A8E8", Slot = "44")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x198A8EC", Offset = "0x198A8EC", VA = "0x198A8EC", Slot = "45")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x198A8F0", Offset = "0x198A8F0", VA = "0x198A8F0", Slot = "46")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x198A8F4", Offset = "0x198A8F4", VA = "0x198A8F4", Slot = "47")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x198A8F8", Offset = "0x198A8F8", VA = "0x198A8F8", Slot = "48")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x198A8FC", Offset = "0x198A8FC", VA = "0x198A8FC", Slot = "49")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x198A900", Offset = "0x198A900", VA = "0x198A900", Slot = "50")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x198A904", Offset = "0x198A904", VA = "0x198A904", Slot = "51")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x198A90C", Offset = "0x198A90C", VA = "0x198A90C")]
	public UIVirtualScreen()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x198A9AC", Offset = "0x198A9AC", VA = "0x198A9AC", Slot = "11")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x198A9B4", Offset = "0x198A9B4", VA = "0x198A9B4", Slot = "12")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x198A9BC", Offset = "0x198A9BC", VA = "0x198A9BC", Slot = "14")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200002D")]
public class CopySpriteText : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteText textToCopy;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteText localText;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1664600", Offset = "0x1664600", VA = "0x1664600")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1664604", Offset = "0x1664604", VA = "0x1664604")]
	private void CopyText()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x16646F8", Offset = "0x16646F8", VA = "0x16646F8")]
	public CopySpriteText()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8680", Offset = "0x8C8680")]
public class UIBistateInteractivePanel : UIPanelBase
{
	[Token(Token = "0x2000183")]
	public enum STATE
	{
		[Token(Token = "0x40009A8")]
		SHOWING,
		[Token(Token = "0x40009A9")]
		HIDDEN
	}

	[Token(Token = "0x2000184")]
	public delegate void PanelStateChangeDelegate(STATE state);

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected STATE m_panelState;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected PanelStateChangeDelegate stateChangeDel;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public EZTransitionList transitions;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool requireTap;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool alwaysShowOnClick;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool dismissOnOutsideClick;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool dismissOnPeerClick;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool dismissOnChildClick;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool dismissOnMoveOff;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public bool showOnChildClick;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public STATE initialState;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int lastActionID;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected POINTER_INFO.POINTER_TYPE lastPtrType;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected POINTER_INFO.POINTER_TYPE lastListenerType;

	[Token(Token = "0x17000082")]
	public STATE State
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x1F2155C", Offset = "0x1F2155C", VA = "0x1F2155C")]
		get
		{
			return default(STATE);
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1F21564", Offset = "0x1F21564", VA = "0x1F21564")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public bool IsShowing
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1F217D8", Offset = "0x1F217D8", VA = "0x1F217D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000084")]
	public override EZTransitionList Transitions
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1F217E8", Offset = "0x1F217E8", VA = "0x1F217E8", Slot = "56")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1F217F0", Offset = "0x1F217F0", VA = "0x1F217F0", Slot = "77")]
	public override void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1F219CC", Offset = "0x1F219CC", VA = "0x1F219CC")]
	protected void PanelClicked(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1F21A48", Offset = "0x1F21A48", VA = "0x1F21A48", Slot = "58")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1F21A2C", Offset = "0x1F21A2C", VA = "0x1F21A2C")]
	public void ToggleState()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1F21568", Offset = "0x1F21568", VA = "0x1F21568")]
	protected void SetPanelState(STATE s)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1F21CA4", Offset = "0x1F21CA4", VA = "0x1F21CA4", Slot = "61")]
	public override void StartTransition(UIPanelManager.SHOW_MODE mode)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1F21CBC", Offset = "0x1F21CBC", VA = "0x1F21CBC")]
	protected void ClickListener(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1F21DB4", Offset = "0x1F21DB4", VA = "0x1F21DB4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1F21DC8", Offset = "0x1F21DC8", VA = "0x1F21DC8")]
	public void Reveal()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1F21DDC", Offset = "0x1F21DDC", VA = "0x1F21DDC")]
	public void AddStateChangeDelegate(PanelStateChangeDelegate del)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1F21E68", Offset = "0x1F21E68", VA = "0x1F21E68")]
	public void RemoveStateChangeDelegate(PanelStateChangeDelegate del)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1F21EF4", Offset = "0x1F21EF4", VA = "0x1F21EF4")]
	public void SetStateChangeDelegate(PanelStateChangeDelegate del)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1F21EFC", Offset = "0x1F21EFC", VA = "0x1F21EFC")]
	public static UIBistateInteractivePanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1F22048", Offset = "0x1F22048", VA = "0x1F22048")]
	public static UIBistateInteractivePanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1F221DC", Offset = "0x1F221DC", VA = "0x1F221DC")]
	public UIBistateInteractivePanel()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C86B8", Offset = "0x8C86B8")]
public class UIInteractivePanel : UIPanelBase
{
	[Token(Token = "0x2000185")]
	public enum STATE
	{
		[Token(Token = "0x40009AB")]
		NORMAL,
		[Token(Token = "0x40009AC")]
		OVER,
		[Token(Token = "0x40009AD")]
		DRAGGING
	}

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected STATE m_panelState;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public EZTransitionList transitions;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool draggable;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool constrainDragArea;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 dragBoundaryMin;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 dragBoundaryMax;

	[Token(Token = "0x17000085")]
	public STATE State
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1F27628", Offset = "0x1F27628", VA = "0x1F27628")]
		get
		{
			return default(STATE);
		}
	}

	[Token(Token = "0x17000086")]
	public override EZTransitionList Transitions
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1F27630", Offset = "0x1F27630", VA = "0x1F27630", Slot = "56")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1F27638", Offset = "0x1F27638", VA = "0x1F27638", Slot = "77")]
	public override void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1F27A54", Offset = "0x1F27A54", VA = "0x1F27A54")]
	protected void SetPanelState(STATE s)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1F27AB8", Offset = "0x1F27AB8", VA = "0x1F27AB8")]
	protected void StartTransition(STATE s, STATE prevState)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1F27B5C", Offset = "0x1F27B5C", VA = "0x1F27B5C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1F27B70", Offset = "0x1F27B70", VA = "0x1F27B70")]
	public void Reveal()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1F27B84", Offset = "0x1F27B84", VA = "0x1F27B84")]
	public static UIInteractivePanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1F27CD0", Offset = "0x1F27CD0", VA = "0x1F27CD0")]
	public static UIInteractivePanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1F27E64", Offset = "0x1F27E64", VA = "0x1F27E64")]
	public UIInteractivePanel()
	{
	}
}
[Token(Token = "0x2000030")]
public struct POINTER_INFO
{
	[Token(Token = "0x2000186")]
	public enum INPUT_EVENT
	{
		[Token(Token = "0x40009AF")]
		NO_CHANGE,
		[Token(Token = "0x40009B0")]
		PRESS,
		[Token(Token = "0x40009B1")]
		RELEASE,
		[Token(Token = "0x40009B2")]
		TAP,
		[Token(Token = "0x40009B3")]
		MOVE,
		[Token(Token = "0x40009B4")]
		MOVE_OFF,
		[Token(Token = "0x40009B5")]
		RELEASE_OFF,
		[Token(Token = "0x40009B6")]
		DRAG
	}

	[Token(Token = "0x2000187")]
	public enum POINTER_TYPE
	{
		[Token(Token = "0x40009B8")]
		MOUSE = 1,
		[Token(Token = "0x40009B9")]
		TOUCHPAD,
		[Token(Token = "0x40009BA")]
		MOUSE_TOUCHPAD,
		[Token(Token = "0x40009BB")]
		RAY
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public POINTER_TYPE type;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Camera camera;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int actionID;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public INPUT_EVENT evt;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RaycastHit hitInfo;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool active;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 devicePos;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 origPos;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 inputDelta;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isTap;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Ray ray;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Ray prevRay;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float rayDepth;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public IUIObject targetObj;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int layerMask;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool callerIsControl;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float activeTime;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x15DB88C", Offset = "0x15DB88C", VA = "0x15DB88C")]
	public void Copy(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x15DB9DC", Offset = "0x15DB9DC", VA = "0x15DB9DC")]
	public void Reuse(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x15DBA60", Offset = "0x15DBA60", VA = "0x15DBA60")]
	public void Reset(int actID)
	{
	}
}
[Token(Token = "0x2000031")]
public struct KEYBOARD_INFO
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TouchScreenKeyboardType type;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool autoCorrect;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool multiline;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public bool secure;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
	public bool alert;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool hideInput;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int insert;
}
[Serializable]
[Token(Token = "0x2000032")]
public class EZCameraSettings
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera camera;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask mask;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rayDepth;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x166AF7C", Offset = "0x166AF7C", VA = "0x166AF7C")]
	public EZCameraSettings()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C86F0", Offset = "0x8C86F0")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum POINTER_TYPE
	{
		[Token(Token = "0x40009BD")]
		MOUSE,
		[Token(Token = "0x40009BE")]
		TOUCHPAD,
		[Token(Token = "0x40009BF")]
		AUTO_TOUCHPAD,
		[Token(Token = "0x40009C0")]
		RAY,
		[Token(Token = "0x40009C1")]
		MOUSE_AND_RAY,
		[Token(Token = "0x40009C2")]
		TOUCHPAD_AND_RAY
	}

	[Token(Token = "0x2000189")]
	public enum RAY_ACTIVE_STATE
	{
		[Token(Token = "0x40009C4")]
		Inactive,
		[Token(Token = "0x40009C5")]
		Momentary,
		[Token(Token = "0x40009C6")]
		Constant
	}

	[Token(Token = "0x200018A")]
	public enum OUTSIDE_VIEWPORT
	{
		[Token(Token = "0x40009C8")]
		Process_All,
		[Token(Token = "0x40009C9")]
		Ignore,
		[Token(Token = "0x40009CA")]
		Move_Off
	}

	[Token(Token = "0x200018B")]
	public struct NonUIHitInfo
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ptrIndex;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int camIndex;

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1FED878", Offset = "0x1FED878", VA = "0x1FED878")]
		public NonUIHitInfo(int pIndex, int cIndex)
		{
		}
	}

	[Token(Token = "0x200018C")]
	public delegate void PointerPollerDelegate();

	[Token(Token = "0x200018D")]
	public delegate void PointerInfoDelegate(POINTER_INFO ptr);

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UIManager s_Instance;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public POINTER_TYPE pointerType;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dragThreshold;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rayDragThreshold;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rayDepth;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask rayMask;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool focusWithRay;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string actionAxis;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OUTSIDE_VIEWPORT inputOutsideViewport;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool warnOnNonUiHits;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Transform raycastingTransform;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EZCameraSettings[] uiCameras;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera rayCamera;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool blockInput;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float defaultDragOffset;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EZAnimation.EASING_TYPE cancelDragEasing;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float cancelDragDuration;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextAsset defaultFont;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material defaultFontMaterial;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected bool rayActive;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected RAY_ACTIVE_STATE rayState;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected POINTER_INFO[,] pointers;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected NonUIHitInfo[] nonUIHits;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected bool[] usedPointers;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool[] usedNonUIHits;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool rayIsNonUIHit;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected int numPointers;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected int numTouchPointers;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int[] activePointers;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected int numActivePointers;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected int numNonUIHits;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected POINTER_INFO rayPtr;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected PointerPollerDelegate pointerPoller;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected PointerInfoDelegate informNonUIHit;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected PointerInfoDelegate mouseTouchListeners;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected PointerInfoDelegate rayListeners;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected IUIObject focusObj;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected string controlText;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected int insert;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private KEYBOARD_INFO kbInfo;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	protected int inputLockCount;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected bool m_started;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
	protected bool m_awake;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float time;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float startTime;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float realtimeDelta;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int lastUpdateFrame;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int curActionID;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int numTouches;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	protected RaycastHit hit;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected Vector3 tempVec;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private bool down;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private IUIObject tempObj;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private POINTER_INFO tempPtr;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private StringBuilder sb;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TouchScreenKeyboard iKeyboard;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private bool allowLeftInteract;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F9")]
	private bool allowRightInteract;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Vector3 hmdDirection;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private bool blockLeftTriggerInteract;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
	private bool blockRightTriggerInteract;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30A")]
	private bool blockLeftButtonInteract;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B")]
	private bool blockRightButtonInteract;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private bool globalUIBlockOverride;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Side m_currentInteractionSide;

	[Token(Token = "0x17000087")]
	public static UIManager instance
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x1F20788", Offset = "0x1F20788", VA = "0x1F20788")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public RAY_ACTIVE_STATE RayActive
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1F34438", Offset = "0x1F34438", VA = "0x1F34438")]
		get
		{
			return default(RAY_ACTIVE_STATE);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1F34440", Offset = "0x1F34440", VA = "0x1F34440")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public IUIObject FocusObject
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1F34C5C", Offset = "0x1F34C5C", VA = "0x1F34C5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1F30084", Offset = "0x1F30084", VA = "0x1F30084")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public int InsertionPoint
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1F34C64", Offset = "0x1F34C64", VA = "0x1F34C64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1F34C6C", Offset = "0x1F34C6C", VA = "0x1F34C6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int PointerCount
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1F34C74", Offset = "0x1F34C74", VA = "0x1F34C74")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public Side currentInteractionSide
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1F34C7C", Offset = "0x1F34C7C", VA = "0x1F34C7C")]
		get
		{
			return default(Side);
		}
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1F2E1B0", Offset = "0x1F2E1B0", VA = "0x1F2E1B0")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1F2E3B0", Offset = "0x1F2E3B0", VA = "0x1F2E3B0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1F2E418", Offset = "0x1F2E418", VA = "0x1F2E418")]
	public static void SetInteractBlock(Side side, bool allowInteract, bool blockTriggerInteract, bool blockButtonInteract, Vector3 newHmdDirection)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1F2E5EC", Offset = "0x1F2E5EC", VA = "0x1F2E5EC")]
	public static void SetCurrentInteractionSide(Side currentSide)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1F2E6D0", Offset = "0x1F2E6D0", VA = "0x1F2E6D0")]
	public static void SetUIBlockOverride(bool shouldBlockUI)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1F2DCB4", Offset = "0x1F2DCB4", VA = "0x1F2DCB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1F2E7B8", Offset = "0x1F2E7B8", VA = "0x1F2E7B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1F2F61C", Offset = "0x1F2F61C", VA = "0x1F2F61C")]
	public void SetRayCamera(Camera cam)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1F2E8BC", Offset = "0x1F2E8BC", VA = "0x1F2E8BC")]
	protected void SetupPointers()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1F2F644", Offset = "0x1F2F644", VA = "0x1F2F644")]
	public void SetNonUIHitDelegate(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1F2F654", Offset = "0x1F2F654", VA = "0x1F2F654")]
	public void AddNonUIHitDelegate(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1F2F6E0", Offset = "0x1F2F6E0", VA = "0x1F2F6E0")]
	public void RemoveNonUIHitDelegate(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1F21A74", Offset = "0x1F21A74", VA = "0x1F21A74")]
	public void AddMouseTouchPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1F21B00", Offset = "0x1F21B00", VA = "0x1F21B00")]
	public void AddRayPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1F21B8C", Offset = "0x1F21B8C", VA = "0x1F21B8C")]
	public void RemoveMouseTouchPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1F21C18", Offset = "0x1F21C18", VA = "0x1F21C18")]
	public void RemoveRayPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1F2F76C", Offset = "0x1F2F76C", VA = "0x1F2F76C")]
	protected void AddNonUIHit(int ptrIndex, int camIndex)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1F2F848", Offset = "0x1F2F848", VA = "0x1F2F848")]
	protected void CallNonUIHitDelegate()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1F2F9C4", Offset = "0x1F2F9C4", VA = "0x1F2F9C4")]
	public bool DidPointerHitUI(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1F2FA78", Offset = "0x1F2FA78", VA = "0x1F2FA78")]
	public bool DidAnyPointerHitUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1F2FB14", Offset = "0x1F2FB14", VA = "0x1F2FB14")]
	public void AddCamera(Camera cam, LayerMask mask, float depth, int index)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1F2FD54", Offset = "0x1F2FD54", VA = "0x1F2FD54")]
	public void RemoveCamera(int index)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1F2FEA0", Offset = "0x1F2FEA0", VA = "0x1F2FEA0")]
	public void ReplaceCamera(int index, Camera cam)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1F2FF1C", Offset = "0x1F2FF1C", VA = "0x1F2FF1C")]
	public void OnLevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1F30530", Offset = "0x1F30530", VA = "0x1F30530")]
	protected void BeginDrag(ref POINTER_INFO curPtr)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1F30710", Offset = "0x1F30710", VA = "0x1F30710")]
	protected void DoDragUpdate(POINTER_INFO curPtr)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1F31050", Offset = "0x1F31050", VA = "0x1F31050", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1F314D4", Offset = "0x1F314D4", VA = "0x1F314D4")]
	protected void DispatchInput()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1F31848", Offset = "0x1F31848", VA = "0x1F31848")]
	protected void DispatchHelper(ref POINTER_INFO curPtr, int camIndex)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1F32C34", Offset = "0x1F32C34", VA = "0x1F32C34")]
	protected void PollMouse()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1F33194", Offset = "0x1F33194", VA = "0x1F33194")]
	protected void PollMouseAndTouchpad()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1F32E84", Offset = "0x1F32E84", VA = "0x1F32E84")]
	protected void PollMouse(ref POINTER_INFO curPtr)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1F33198", Offset = "0x1F33198", VA = "0x1F33198")]
	protected void PollTouchpad()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1F33908", Offset = "0x1F33908", VA = "0x1F33908")]
	protected void PollRay()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1F33FC4", Offset = "0x1F33FC4", VA = "0x1F33FC4")]
	protected void PollMouseRay()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1F33FE8", Offset = "0x1F33FE8", VA = "0x1F33FE8")]
	protected void PollTouchpadRay()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1F310E0", Offset = "0x1F310E0", VA = "0x1F310E0")]
	protected void PollKeyboard()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1F34090", Offset = "0x1F34090", VA = "0x1F34090")]
	protected void ProcessKeyboard()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1F34448", Offset = "0x1F34448", VA = "0x1F34448")]
	public void Detarget(IUIObject obj)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1F34628", Offset = "0x1F34628", VA = "0x1F34628")]
	public void Detarget(int pointerID)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1F22808", Offset = "0x1F22808", VA = "0x1F22808")]
	public void DetargetAllExcept(int pointerID)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1F34450", Offset = "0x1F34450", VA = "0x1F34450")]
	public void Retarget(IUIObject oldObj, IUIObject newObj)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1F34924", Offset = "0x1F34924", VA = "0x1F34924")]
	public bool GetPointer(IUIObject obj, out POINTER_INFO ptr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1F34B1C", Offset = "0x1F34B1C", VA = "0x1F34B1C")]
	public bool GetPointer(int pointerID, int camera, out POINTER_INFO ptr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1F34C20", Offset = "0x1F34C20", VA = "0x1F34C20")]
	public void LockInput()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1F34C38", Offset = "0x1F34C38", VA = "0x1F34C38")]
	public void UnlockInput()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1F3400C", Offset = "0x1F3400C", VA = "0x1F3400C")]
	protected static int FindInsertionPoint(string before, string after)
	{
		return default(int);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1F32B74", Offset = "0x1F32B74", VA = "0x1F32B74")]
	protected void LogNonUIObjErr(GameObject obj)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1F34C84", Offset = "0x1F34C84", VA = "0x1F34C84")]
	public UIManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8728", Offset = "0x8C8728")]
public class UIPanel : UIPanelBase
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public EZTransitionList transitions;

	[Token(Token = "0x1700008D")]
	public override EZTransitionList Transitions
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1C1F23C", Offset = "0x1C1F23C", VA = "0x1C1F23C", Slot = "56")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1C1F244", Offset = "0x1C1F244", VA = "0x1C1F244")]
	public static UIPanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1C1F390", Offset = "0x1C1F390", VA = "0x1C1F390")]
	public static UIPanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1C1F524", Offset = "0x1C1F524", VA = "0x1C1F524")]
	public UIPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8760", Offset = "0x8C8760")]
public class UIPanelManager : MonoBehaviour, IUIContainer, IUIObject, IEZDragDrop
{
	[Token(Token = "0x200018E")]
	public enum SHOW_MODE
	{
		[Token(Token = "0x40009CE")]
		BringInForward,
		[Token(Token = "0x40009CF")]
		BringInBack,
		[Token(Token = "0x40009D0")]
		DismissForward,
		[Token(Token = "0x40009D1")]
		DismissBack
	}

	[Token(Token = "0x200018F")]
	public enum MENU_DIRECTION
	{
		[Token(Token = "0x40009D3")]
		Forwards,
		[Token(Token = "0x40009D4")]
		Backwards,
		[Token(Token = "0x40009D5")]
		Auto
	}

	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DDC", Offset = "0x8C8DDC")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPanelManager <>4__this;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x1FEE508", Offset = "0x1FEE508", VA = "0x1FEE508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x1FEE550", Offset = "0x1FEE550", VA = "0x1FEE550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1FEE26C", Offset = "0x1FEE26C", VA = "0x1FEE26C")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1FEE298", Offset = "0x1FEE298", VA = "0x1FEE298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1FEE29C", Offset = "0x1FEE29C", VA = "0x1FEE29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1FEE510", Offset = "0x1FEE510", VA = "0x1FEE510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static UIPanelManager m_instance;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<UIPanelBase> panels;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPanelBase initialPanel;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool deactivateAllButInitialAtStart;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool linearNavigation;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool circular;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool advancePastEnd;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected UIPanelBase curPanel;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int transitioningPanelCount;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_started;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<UIPanelBase> breadcrumbs;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected IUIContainer container;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x1700008E")]
	public static UIPanelManager instance
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1C22F64", Offset = "0x1C22F64", VA = "0x1C22F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public UIPanelBase CurrentPanel
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1C23000", Offset = "0x1C23000", VA = "0x1C23000")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public int TransitioningPanelCount
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1C239C0", Offset = "0x1C239C0", VA = "0x1C239C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x1C25354", Offset = "0x1C25354", VA = "0x1C25354", Slot = "57")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1C2535C", Offset = "0x1C2535C", VA = "0x1C2535C", Slot = "58")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1C25368", Offset = "0x1C25368", VA = "0x1C25368", Slot = "59")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x1C25370", Offset = "0x1C25370", VA = "0x1C25370", Slot = "60")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x1C25378", Offset = "0x1C25378", VA = "0x1C25378", Slot = "61")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x1C25380", Offset = "0x1C25380", VA = "0x1C25380", Slot = "62")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public object Data
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1C25818", Offset = "0x1C25818", VA = "0x1C25818", Slot = "28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1C25820", Offset = "0x1C25820", VA = "0x1C25820", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool IsDraggable
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1C25824", Offset = "0x1C25824", VA = "0x1C25824", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1C2582C", Offset = "0x1C2582C", VA = "0x1C2582C", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public LayerMask DropMask
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1C25830", Offset = "0x1C25830", VA = "0x1C25830", Slot = "32")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1C25850", Offset = "0x1C25850", VA = "0x1C25850", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float DragOffset
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1C25854", Offset = "0x1C25854", VA = "0x1C25854", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1C2585C", Offset = "0x1C2585C", VA = "0x1C2585C", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1C25860", Offset = "0x1C25860", VA = "0x1C25860", Slot = "42")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1C25868", Offset = "0x1C25868", VA = "0x1C25868", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float CancelDragDuration
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x1C2586C", Offset = "0x1C2586C", VA = "0x1C2586C", Slot = "44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1C25874", Offset = "0x1C25874", VA = "0x1C25874", Slot = "45")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public bool IsDragging
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x1C25878", Offset = "0x1C25878", VA = "0x1C25878", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1C25880", Offset = "0x1C25880", VA = "0x1C25880", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public GameObject DropTarget
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x1C25884", Offset = "0x1C25884", VA = "0x1C25884", Slot = "36")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x1C2588C", Offset = "0x1C2588C", VA = "0x1C2588C", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public bool DropHandled
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x1C25890", Offset = "0x1C25890", VA = "0x1C25890", Slot = "38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1C25898", Offset = "0x1C25898", VA = "0x1C25898", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1C22FB0", Offset = "0x1C22FB0", VA = "0x1C22FB0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1C23008", Offset = "0x1C23008", VA = "0x1C23008", Slot = "4")]
	public void AddChild(GameObject go)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1C2323C", Offset = "0x1C2323C", VA = "0x1C2323C", Slot = "5")]
	public void RemoveChild(GameObject go)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1C233C0", Offset = "0x1C233C0", VA = "0x1C233C0", Slot = "6")]
	public void AddSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1C233C4", Offset = "0x1C233C4", VA = "0x1C233C4", Slot = "7")]
	public void RemoveSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1C233C8", Offset = "0x1C233C8", VA = "0x1C233C8")]
	public void MakeChild(GameObject go)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1C23444", Offset = "0x1C23444", VA = "0x1C23444")]
	public UIPanelBase[] GetPanels()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1C23498", Offset = "0x1C23498", VA = "0x1C23498")]
	public int GetPanelCount()
	{
		return default(int);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1C234E4", Offset = "0x1C234E4", VA = "0x1C234E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1C2359C", Offset = "0x1C2359C", VA = "0x1C2359C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA05C", Offset = "0x8CA05C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1C23614", Offset = "0x1C23614", VA = "0x1C23614", Slot = "56")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1C23748", Offset = "0x1C23748", VA = "0x1C23748")]
	public void ScanChildren()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1C239C8", Offset = "0x1C239C8", VA = "0x1C239C8")]
	protected void DecrementTransitioningPanels(UIPanelBase p, EZTransition t)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1C239D8", Offset = "0x1C239D8", VA = "0x1C239D8")]
	protected void StartAndTrack(UIPanelBase p, SHOW_MODE mode)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1C23A9C", Offset = "0x1C23A9C", VA = "0x1C23A9C")]
	public bool MoveForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1C23D80", Offset = "0x1C23D80", VA = "0x1C23D80")]
	public bool MoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1C241DC", Offset = "0x1C241DC", VA = "0x1C241DC")]
	public void BringIn(UIPanelBase panel, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1C24440", Offset = "0x1C24440", VA = "0x1C24440")]
	public void BringInImmediate(UIPanelBase panel, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1C245EC", Offset = "0x1C245EC", VA = "0x1C245EC")]
	public void BringIn(string panelName, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1C247C4", Offset = "0x1C247C4", VA = "0x1C247C4")]
	public void BringIn(UIPanelBase panel)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1C247CC", Offset = "0x1C247CC", VA = "0x1C247CC")]
	public void BringIn(string panelName)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1C247D4", Offset = "0x1C247D4", VA = "0x1C247D4")]
	public void BringIn(int panelIndex)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1C24964", Offset = "0x1C24964", VA = "0x1C24964")]
	public void BringIn(int panelIndex, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1C24B04", Offset = "0x1C24B04", VA = "0x1C24B04")]
	public void BringInImmediate(string panelName, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1C24C7C", Offset = "0x1C24C7C", VA = "0x1C24C7C")]
	public void BringInImmediate(UIPanelBase panel)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1C24C84", Offset = "0x1C24C84", VA = "0x1C24C84")]
	public void BringInImmediate(string panelName)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1C24C8C", Offset = "0x1C24C8C", VA = "0x1C24C8C")]
	public void BringInImmediate(int panelIndex)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1C24E1C", Offset = "0x1C24E1C", VA = "0x1C24E1C")]
	public void BringInImmediate(int panelIndex, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1C24FBC", Offset = "0x1C24FBC", VA = "0x1C24FBC")]
	public void Dismiss(MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1C25204", Offset = "0x1C25204", VA = "0x1C25204")]
	public void Dismiss()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1C2520C", Offset = "0x1C2520C", VA = "0x1C2520C")]
	public void DismissImmediate(MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1C252F8", Offset = "0x1C252F8", VA = "0x1C252F8")]
	public void DismissImmediate()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1C25300", Offset = "0x1C25300", VA = "0x1C25300")]
	public void ClearHistory()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1C202AC", Offset = "0x1C202AC", VA = "0x1C202AC")]
	public static void SetLayerRecursively(GameObject go, int layer)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1C25374", Offset = "0x1C25374", VA = "0x1C25374", Slot = "12")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1C25388", Offset = "0x1C25388", VA = "0x1C25388", Slot = "19")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1C255CC", Offset = "0x1C255CC", VA = "0x1C255CC", Slot = "20")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1C255D4", Offset = "0x1C255D4", VA = "0x1C255D4", Slot = "63")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1C255DC", Offset = "0x1C255DC", VA = "0x1C255DC", Slot = "64")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1C25668", Offset = "0x1C25668", VA = "0x1C25668", Slot = "65")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1C256F4", Offset = "0x1C256F4", VA = "0x1C256F4", Slot = "66")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1C256FC", Offset = "0x1C256FC", VA = "0x1C256FC", Slot = "67")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1C25788", Offset = "0x1C25788", VA = "0x1C25788", Slot = "68")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1C25814", Offset = "0x1C25814", VA = "0x1C25814", Slot = "69")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1C2589C", Offset = "0x1C2589C", VA = "0x1C2589C", Slot = "46")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1C258A0", Offset = "0x1C258A0", VA = "0x1C258A0", Slot = "47")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1C258A4", Offset = "0x1C258A4", VA = "0x1C258A4", Slot = "48")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1C258E8", Offset = "0x1C258E8", VA = "0x1C258E8", Slot = "49")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1C25974", Offset = "0x1C25974", VA = "0x1C25974", Slot = "50")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1C25A00", Offset = "0x1C25A00", VA = "0x1C25A00", Slot = "51")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1C25A08", Offset = "0x1C25A08", VA = "0x1C25A08", Slot = "52")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1C25A0C", Offset = "0x1C25A0C", VA = "0x1C25A0C", Slot = "53")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1C25A10", Offset = "0x1C25A10", VA = "0x1C25A10", Slot = "54")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1C25A14", Offset = "0x1C25A14", VA = "0x1C25A14", Slot = "55")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1C25A1C", Offset = "0x1C25A1C", VA = "0x1C25A1C")]
	public static UIPanelManager Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1C25B68", Offset = "0x1C25B68", VA = "0x1C25B68")]
	public UIPanelManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1C25C20", Offset = "0x1C25C20", VA = "0x1C25C20", Slot = "15")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1C25C28", Offset = "0x1C25C28", VA = "0x1C25C28", Slot = "16")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1C25C30", Offset = "0x1C25C30", VA = "0x1C25C30", Slot = "18")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public class ASCSEInfo
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D tex;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextureAnim stateObj;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EZTransitionList transitions;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stateLabel;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1EA1100", Offset = "0x1EA1100", VA = "0x1EA1100")]
	public ASCSEInfo()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class AutoSpriteControlBase : AutoSpriteBase, IControl, IUIObject, IEZDragDrop, IPackableControl, ISpritePackable
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	protected bool nullCamera;

	[Token(Token = "0x4000217")]
	public const string DittoString = "[\"]";

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public string text;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public UITextBase spriteText;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float textOffsetZ;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public bool includeTextInAutoCollider;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public bool detargetOnDisable;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	protected bool customCollider;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	protected Vector3 savedColliderSize;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	protected Vector2 topLeftEdge;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	protected Vector2 bottomRightEdge;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[HideInInspector]
	public object data;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	protected SpriteRoot[][] aggregateLayers;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	protected IUIContainer container;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	protected EZDragDropHelper dragDropHelper;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public bool isDraggable;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public LayerMask dropMask;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public float dragOffset;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public EZAnimation.EASING_TYPE cancelDragEasing;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public float cancelDragDuration;

	[Token(Token = "0x1700009D")]
	public virtual string Text
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1EAF50C", Offset = "0x1EAF50C", VA = "0x1EAF50C", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1EAF514", Offset = "0x1EAF514", VA = "0x1EAF514", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public virtual SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1EAF660", Offset = "0x1EAF660", VA = "0x1EAF660", Slot = "166")]
		get
		{
			return default(SpriteText.Alignment_Type);
		}
	}

	[Token(Token = "0x1700009F")]
	public virtual SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1EAF668", Offset = "0x1EAF668", VA = "0x1EAF668", Slot = "167")]
		get
		{
			return default(SpriteText.Anchor_Pos);
		}
	}

	[Token(Token = "0x170000A0")]
	public float TextOffsetZ
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1EAF670", Offset = "0x1EAF670", VA = "0x1EAF670", Slot = "106")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1EAF678", Offset = "0x1EAF678", VA = "0x1EAF678", Slot = "107")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public bool Persistent
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1EAF728", Offset = "0x1EAF728", VA = "0x1EAF728", Slot = "110")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1EAF730", Offset = "0x1EAF730", VA = "0x1EAF730", Slot = "111")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public object Data
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1EAF7B0", Offset = "0x1EAF7B0", VA = "0x1EAF7B0", Slot = "136")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1EAF7B8", Offset = "0x1EAF7B8", VA = "0x1EAF7B8", Slot = "137")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public virtual bool IncludeTextInAutoCollider
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1EAF848", Offset = "0x1EAF848", VA = "0x1EAF848", Slot = "168")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1EAF850", Offset = "0x1EAF850", VA = "0x1EAF850", Slot = "169")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public override bool Clipped
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1EB00C0", Offset = "0x1EB00C0", VA = "0x1EB00C0", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1EB00C8", Offset = "0x1EB00C8", VA = "0x1EB00C8", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1EB0250", Offset = "0x1EB0250", VA = "0x1EB0250", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1EB0278", Offset = "0x1EB0278", VA = "0x1EB0278", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public override Camera RenderCamera
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1EB0474", Offset = "0x1EB0474", VA = "0x1EB0474", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1EB047C", Offset = "0x1EB047C", VA = "0x1EB047C", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public Vector2 TopLeftEdge
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1EB2AE0", Offset = "0x1EB2AE0", VA = "0x1EB2AE0", Slot = "175")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000A8")]
	public Vector2 BottomRightEdge
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1EB2AEC", Offset = "0x1EB2AEC", VA = "0x1EB2AEC", Slot = "176")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000A9")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1EB2AF8", Offset = "0x1EB2AF8", VA = "0x1EB2AF8", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1EB2B00", Offset = "0x1EB2B00", VA = "0x1EB2B00", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1EB2B0C", Offset = "0x1EB2B0C", VA = "0x1EB2B0C", Slot = "179")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1EB2B1C", Offset = "0x1EB2B1C", VA = "0x1EB2B1C", Slot = "180")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1EB2B34", Offset = "0x1EB2B34", VA = "0x1EB2B34", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1EB2B3C", Offset = "0x1EB2B3C", VA = "0x1EB2B3C", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public LayerMask DropMask
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1EB352C", Offset = "0x1EB352C", VA = "0x1EB352C", Slot = "140")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1EB3534", Offset = "0x1EB3534", VA = "0x1EB3534", Slot = "141")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool IsDraggable
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1EB353C", Offset = "0x1EB353C", VA = "0x1EB353C", Slot = "138")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1EB3544", Offset = "0x1EB3544", VA = "0x1EB3544", Slot = "139")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public float DragOffset
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1EB3550", Offset = "0x1EB3550", VA = "0x1EB3550", Slot = "148")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1EB3558", Offset = "0x1EB3558", VA = "0x1EB3558", Slot = "149")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1EB3690", Offset = "0x1EB3690", VA = "0x1EB3690", Slot = "150")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1EB3698", Offset = "0x1EB3698", VA = "0x1EB3698", Slot = "151")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public float CancelDragDuration
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1EB36A0", Offset = "0x1EB36A0", VA = "0x1EB36A0", Slot = "152")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1EB36A8", Offset = "0x1EB36A8", VA = "0x1EB36A8", Slot = "153")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public bool IsDragging
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1EB3674", Offset = "0x1EB3674", VA = "0x1EB3674", Slot = "142")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1EB36B0", Offset = "0x1EB36B0", VA = "0x1EB36B0", Slot = "143")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1EB36D0", Offset = "0x1EB36D0", VA = "0x1EB36D0", Slot = "144")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1EB36EC", Offset = "0x1EB36EC", VA = "0x1EB36EC", Slot = "145")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool DropHandled
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1EB3708", Offset = "0x1EB3708", VA = "0x1EB3708", Slot = "146")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1EB3724", Offset = "0x1EB3724", VA = "0x1EB3724", Slot = "147")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public bool UseDefaultCancelDragAnim
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1EB382C", Offset = "0x1EB382C", VA = "0x1EB382C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1EB3848", Offset = "0x1EB3848", VA = "0x1EB3848")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public abstract EZTransitionList[] Transitions
	{
		[Token(Token = "0x600040B")]
		get;
		[Token(Token = "0x600040C")]
		set;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1EAF4F4", Offset = "0x1EAF4F4", VA = "0x1EAF4F4")]
	public object GetData()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1EAF4FC", Offset = "0x1EAF4FC", VA = "0x1EAF4FC")]
	public void SetData(object val)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1EAF7C8", Offset = "0x1EAF7C8", VA = "0x1EAF7C8", Slot = "14")]
	protected override void Init()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1EAF868", Offset = "0x1EAF868", VA = "0x1EAF868", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1EAFABC", Offset = "0x1EAFABC", VA = "0x1EAFABC", Slot = "25")]
	public override void TruncateTop(float pct)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1EAFBA8", Offset = "0x1EAFBA8", VA = "0x1EAFBA8", Slot = "26")]
	public override void TruncateBottom(float pct)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1EAFC94", Offset = "0x1EAFC94", VA = "0x1EAFC94", Slot = "24")]
	public override void TruncateLeft(float pct)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1EAFD80", Offset = "0x1EAFD80", VA = "0x1EAFD80", Slot = "23")]
	public override void TruncateRight(float pct)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1EAFE6C", Offset = "0x1EAFE6C", VA = "0x1EAFE6C", Slot = "27")]
	public override void Untruncate()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1EAFF48", Offset = "0x1EAFF48", VA = "0x1EAFF48", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1EB0538", Offset = "0x1EB0538", VA = "0x1EB0538", Slot = "36")]
	public override void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1EB0610", Offset = "0x1EB0610", VA = "0x1EB0610", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1EB0900", Offset = "0x1EB0900", VA = "0x1EB0900", Slot = "94")]
	public void Copy(IControl c)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1EB09E0", Offset = "0x1EB09E0", VA = "0x1EB09E0", Slot = "95")]
	public void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1EB0AC8", Offset = "0x1EB0AC8", VA = "0x1EB0AC8", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1EB0ADC", Offset = "0x1EB0ADC", VA = "0x1EB0ADC", Slot = "170")]
	public virtual void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1EB1D04", Offset = "0x1EB1D04", VA = "0x1EB1D04", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1EB1E78", Offset = "0x1EB1E78", VA = "0x1EB1E78", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1EB1F50", Offset = "0x1EB1F50", VA = "0x1EB1F50", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1EB20A8", Offset = "0x1EB20A8", VA = "0x1EB20A8")]
	protected void OnResize(float newWidth, float newHeight, SpriteRoot sprite)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1EB20B8", Offset = "0x1EB20B8", VA = "0x1EB20B8", Slot = "171")]
	protected virtual void AddCollider()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1EB2240", Offset = "0x1EB2240", VA = "0x1EB2240", Slot = "172")]
	public virtual void UpdateCollider()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1EB25F8", Offset = "0x1EB25F8", VA = "0x1EB25F8", Slot = "173")]
	public virtual void SetColliderEnabled(bool colliderEnabled)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1EB269C", Offset = "0x1EB269C", VA = "0x1EB269C", Slot = "174")]
	public virtual void FindOuterEdges()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1EB2B30", Offset = "0x1EB2B30", VA = "0x1EB2B30", Slot = "120")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1EB2F64", Offset = "0x1EB2F64", VA = "0x1EB2F64", Slot = "127")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1EB3188", Offset = "0x1EB3188", VA = "0x1EB3188", Slot = "183")]
	public virtual bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1EB3190", Offset = "0x1EB3190", VA = "0x1EB3190", Slot = "184")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1EB31A0", Offset = "0x1EB31A0", VA = "0x1EB31A0", Slot = "185")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1EB322C", Offset = "0x1EB322C", VA = "0x1EB322C", Slot = "186")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1EB32B8", Offset = "0x1EB32B8", VA = "0x1EB32B8", Slot = "187")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1EB32C8", Offset = "0x1EB32C8", VA = "0x1EB32C8", Slot = "188")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1EB3354", Offset = "0x1EB3354", VA = "0x1EB3354", Slot = "189")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1EB33E0", Offset = "0x1EB33E0", VA = "0x1EB33E0", Slot = "190")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1EB33F0", Offset = "0x1EB33F0", VA = "0x1EB33F0", Slot = "191")]
	public virtual void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1EB3744", Offset = "0x1EB3744", VA = "0x1EB3744", Slot = "154")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1EB379C", Offset = "0x1EB379C", VA = "0x1EB379C")]
	public void DefaultDragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1EB37F4", Offset = "0x1EB37F4", VA = "0x1EB37F4")]
	public void SetDragPosUpdater(EZDragDropHelper.UpdateDragPositionDelegate del)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1EB3810", Offset = "0x1EB3810", VA = "0x1EB3810", Slot = "155")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1EB3868", Offset = "0x1EB3868", VA = "0x1EB3868")]
	public void CancelFinished()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1EB3884", Offset = "0x1EB3884", VA = "0x1EB3884")]
	public void DoDefaultCancelDrag()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1EB38A0", Offset = "0x1EB38A0", VA = "0x1EB38A0", Slot = "156")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1EB38F8", Offset = "0x1EB38F8", VA = "0x1EB38F8", Slot = "157")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1EB3914", Offset = "0x1EB3914", VA = "0x1EB3914", Slot = "158")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1EB3930", Offset = "0x1EB3930", VA = "0x1EB3930", Slot = "159")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1EB394C", Offset = "0x1EB394C", VA = "0x1EB394C", Slot = "160")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1EB3968", Offset = "0x1EB3968", VA = "0x1EB3968", Slot = "161")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1EB3984", Offset = "0x1EB3984", VA = "0x1EB3984", Slot = "162")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1EB39A0", Offset = "0x1EB39A0", VA = "0x1EB39A0", Slot = "163")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1EB39BC", Offset = "0x1EB39BC", VA = "0x1EB39BC", Slot = "192")]
	public virtual int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1EB39C4", Offset = "0x1EB39C4", VA = "0x1EB39C4", Slot = "193")]
	public virtual int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1EB39CC", Offset = "0x1EB39CC", VA = "0x1EB39CC", Slot = "194")]
	public virtual void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1EB39D0", Offset = "0x1EB39D0", VA = "0x1EB39D0", Slot = "195")]
	public virtual string[] EnumStateElements()
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1EB3B2C", Offset = "0x1EB3B2C", VA = "0x1EB3B2C", Slot = "196")]
	public virtual EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1EB3B34", Offset = "0x1EB3B34", VA = "0x1EB3B34", Slot = "199")]
	public virtual string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1EB3B3C", Offset = "0x1EB3B3C", VA = "0x1EB3B3C", Slot = "200")]
	public virtual void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1EB3B40", Offset = "0x1EB3B40", VA = "0x1EB3B40", Slot = "201")]
	public virtual ASCSEInfo GetStateElementInfo(int stateNum)
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1EB3C44", Offset = "0x1EB3C44", VA = "0x1EB3C44")]
	protected void UseStateLabel(int index)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1EB3D50", Offset = "0x1EB3D50", VA = "0x1EB3D50", Slot = "48")]
	public override void DoMirror()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1EB3E94", Offset = "0x1EB3E94", VA = "0x1EB3E94")]
	protected AutoSpriteControlBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1EB3F40", Offset = "0x1EB3F40", VA = "0x1EB3F40", Slot = "123")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1EB3F48", Offset = "0x1EB3F48", VA = "0x1EB3F48", Slot = "124")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1EB3F50", Offset = "0x1EB3F50", VA = "0x1EB3F50", Slot = "126")]
	private string IUIObject.get_name()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1EB3F58", Offset = "0x1EB3F58", VA = "0x1EB3F58", Slot = "72")]
	private GameObject ISpritePackable.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1EB3F60", Offset = "0x1EB3F60", VA = "0x1EB3F60", Slot = "114")]
	private Transform IControl.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1EB3F68", Offset = "0x1EB3F68", VA = "0x1EB3F68", Slot = "115")]
	private GameObject IControl.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000038")]
public class AutoSpriteControlBaseMirror : SpriteRootMirror
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string text;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float textOffsetZ;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1EB3F70", Offset = "0x1EB3F70", VA = "0x1EB3F70", Slot = "4")]
	public override void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1EB4034", Offset = "0x1EB4034", VA = "0x1EB4034", Slot = "6")]
	public override bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1EB3E8C", Offset = "0x1EB3E8C", VA = "0x1EB3E8C")]
	public AutoSpriteControlBaseMirror()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
public abstract class ControlBase : MonoBehaviour, IControl, IUIObject, IEZDragDrop
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ControlBaseMirror mirror;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool persistent;

	[Token(Token = "0x4000232")]
	public const string DittoString = "[\"]";

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UITextBase spriteText;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float textOffsetZ;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool includeTextInAutoCollider;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool deleted;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool detargetOnDisable;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool customCollider;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public object data;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected IUIContainer container;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected EZDragDropHelper dragDropHelper;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isDraggable;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask dropMask;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float dragOffset;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public EZAnimation.EASING_TYPE cancelDragEasing;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float cancelDragDuration;

	[Token(Token = "0x170000B6")]
	public virtual string Text
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1EB51D0", Offset = "0x1EB51D0", VA = "0x1EB51D0", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1EB51D8", Offset = "0x1EB51D8", VA = "0x1EB51D8", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public virtual SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1EB5324", Offset = "0x1EB5324", VA = "0x1EB5324", Slot = "81")]
		get
		{
			return default(SpriteText.Alignment_Type);
		}
	}

	[Token(Token = "0x170000B8")]
	public virtual SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1EB532C", Offset = "0x1EB532C", VA = "0x1EB532C", Slot = "82")]
		get
		{
			return default(SpriteText.Anchor_Pos);
		}
	}

	[Token(Token = "0x170000B9")]
	public float TextOffsetZ
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x1EB5334", Offset = "0x1EB5334", VA = "0x1EB5334", Slot = "21")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1EB533C", Offset = "0x1EB533C", VA = "0x1EB533C", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool Persistent
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1EB53EC", Offset = "0x1EB53EC", VA = "0x1EB53EC", Slot = "25")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1EB53F4", Offset = "0x1EB53F4", VA = "0x1EB53F4", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public object Data
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1EB5474", Offset = "0x1EB5474", VA = "0x1EB5474", Slot = "51")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1EB547C", Offset = "0x1EB547C", VA = "0x1EB547C", Slot = "52")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public virtual bool IncludeTextInAutoCollider
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x1EB5484", Offset = "0x1EB5484", VA = "0x1EB5484", Slot = "83")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1EB548C", Offset = "0x1EB548C", VA = "0x1EB548C", Slot = "84")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1EB5AC0", Offset = "0x1EB5AC0", VA = "0x1EB5AC0", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1EB5AC8", Offset = "0x1EB5AC8", VA = "0x1EB5AC8", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1EB5AD4", Offset = "0x1EB5AD4", VA = "0x1EB5AD4", Slot = "91")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1EB5AE4", Offset = "0x1EB5AE4", VA = "0x1EB5AE4", Slot = "92")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1EB5AFC", Offset = "0x1EB5AFC", VA = "0x1EB5AFC", Slot = "93")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1EB5B04", Offset = "0x1EB5B04", VA = "0x1EB5B04", Slot = "94")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public bool IsDraggable
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x1EB6D34", Offset = "0x1EB6D34", VA = "0x1EB6D34", Slot = "53")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1EB6D3C", Offset = "0x1EB6D3C", VA = "0x1EB6D3C", Slot = "54")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public LayerMask DropMask
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x1EB6D48", Offset = "0x1EB6D48", VA = "0x1EB6D48", Slot = "55")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1EB6D50", Offset = "0x1EB6D50", VA = "0x1EB6D50", Slot = "56")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public float DragOffset
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x1EB6D58", Offset = "0x1EB6D58", VA = "0x1EB6D58", Slot = "63")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1EB6D60", Offset = "0x1EB6D60", VA = "0x1EB6D60", Slot = "64")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1EB6E98", Offset = "0x1EB6E98", VA = "0x1EB6E98", Slot = "65")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1EB6EA0", Offset = "0x1EB6EA0", VA = "0x1EB6EA0", Slot = "66")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public float CancelDragDuration
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1EB6EA8", Offset = "0x1EB6EA8", VA = "0x1EB6EA8", Slot = "67")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x1EB6EB0", Offset = "0x1EB6EB0", VA = "0x1EB6EB0", Slot = "68")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool IsDragging
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0x1EB6E7C", Offset = "0x1EB6E7C", VA = "0x1EB6E7C", Slot = "57")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1EB6EB8", Offset = "0x1EB6EB8", VA = "0x1EB6EB8", Slot = "58")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public GameObject DropTarget
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1EB6ED8", Offset = "0x1EB6ED8", VA = "0x1EB6ED8", Slot = "59")]
		get
		{
			return null;
		}
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1EB6EF4", Offset = "0x1EB6EF4", VA = "0x1EB6EF4", Slot = "60")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public bool DropHandled
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x1EB6F10", Offset = "0x1EB6F10", VA = "0x1EB6F10", Slot = "61")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1EB6F2C", Offset = "0x1EB6F2C", VA = "0x1EB6F2C", Slot = "62")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public bool UseDefaultCancelDragAnim
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1EB7034", Offset = "0x1EB7034", VA = "0x1EB7034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x1EB7050", Offset = "0x1EB7050", VA = "0x1EB7050")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public abstract string[] States
	{
		[Token(Token = "0x6000462")]
		get;
	}

	[Token(Token = "0x170000CA")]
	public abstract EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000468")]
		get;
		[Token(Token = "0x6000469")]
		set;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1EB54A4", Offset = "0x1EB54A4", VA = "0x1EB54A4", Slot = "85")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1EB55A8", Offset = "0x1EB55A8", VA = "0x1EB55A8", Slot = "86")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1EB5730", Offset = "0x1EB5730", VA = "0x1EB5730", Slot = "87")]
	protected virtual void AddCollider()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1EB580C", Offset = "0x1EB580C", VA = "0x1EB580C", Slot = "88")]
	public virtual void UpdateCollider()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1EB5AF8", Offset = "0x1EB5AF8", VA = "0x1EB5AF8", Slot = "35")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1EB5CFC", Offset = "0x1EB5CFC", VA = "0x1EB5CFC", Slot = "42")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1EB5F20", Offset = "0x1EB5F20", VA = "0x1EB5F20", Slot = "95")]
	public virtual bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1EB5F28", Offset = "0x1EB5F28", VA = "0x1EB5F28", Slot = "96")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1EB5F30", Offset = "0x1EB5F30", VA = "0x1EB5F30", Slot = "97")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1EB5FBC", Offset = "0x1EB5FBC", VA = "0x1EB5FBC", Slot = "98")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1EB6048", Offset = "0x1EB6048", VA = "0x1EB6048", Slot = "99")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1EB6050", Offset = "0x1EB6050", VA = "0x1EB6050", Slot = "100")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1EB60DC", Offset = "0x1EB60DC", VA = "0x1EB60DC", Slot = "101")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1EB6168", Offset = "0x1EB6168", VA = "0x1EB6168", Slot = "102")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1EB6178", Offset = "0x1EB6178", VA = "0x1EB6178", Slot = "103")]
	public virtual void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1EB62B4", Offset = "0x1EB62B4", VA = "0x1EB62B4", Slot = "104")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1EB62B8", Offset = "0x1EB62B8", VA = "0x1EB62B8", Slot = "105")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1EB6404", Offset = "0x1EB6404", VA = "0x1EB6404", Slot = "106")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1EB6410", Offset = "0x1EB6410", VA = "0x1EB6410", Slot = "107")]
	public virtual void Copy(IControl ctl)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1EB6424", Offset = "0x1EB6424", VA = "0x1EB6424", Slot = "108")]
	public virtual void Copy(IControl ctl, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1EB6F4C", Offset = "0x1EB6F4C", VA = "0x1EB6F4C", Slot = "69")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1EB6FA4", Offset = "0x1EB6FA4", VA = "0x1EB6FA4")]
	public void DefaultDragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1EB6FFC", Offset = "0x1EB6FFC", VA = "0x1EB6FFC")]
	public void SetDragPosUpdater(EZDragDropHelper.UpdateDragPositionDelegate del)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1EB7018", Offset = "0x1EB7018", VA = "0x1EB7018", Slot = "70")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1EB7070", Offset = "0x1EB7070", VA = "0x1EB7070")]
	public void CancelFinished()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1EB708C", Offset = "0x1EB708C", VA = "0x1EB708C")]
	public void DoDefaultCancelDrag()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1EB70A8", Offset = "0x1EB70A8", VA = "0x1EB70A8", Slot = "71")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1EB7100", Offset = "0x1EB7100", VA = "0x1EB7100", Slot = "72")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1EB711C", Offset = "0x1EB711C", VA = "0x1EB711C", Slot = "73")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1EB7138", Offset = "0x1EB7138", VA = "0x1EB7138", Slot = "74")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1EB7154", Offset = "0x1EB7154", VA = "0x1EB7154", Slot = "75")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1EB7170", Offset = "0x1EB7170", VA = "0x1EB7170", Slot = "76")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1EB718C", Offset = "0x1EB718C", VA = "0x1EB718C", Slot = "77")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1EB71A8", Offset = "0x1EB71A8", VA = "0x1EB71A8", Slot = "78")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1EB71C4", Offset = "0x1EB71C4", VA = "0x1EB71C4", Slot = "110")]
	public virtual int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1EB71CC", Offset = "0x1EB71CC", VA = "0x1EB71CC", Slot = "111")]
	public virtual int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1EB71D4", Offset = "0x1EB71D4", VA = "0x1EB71D4", Slot = "112")]
	public virtual void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1EB71D8", Offset = "0x1EB71D8", VA = "0x1EB71D8", Slot = "113")]
	public virtual string[] EnumStateElements()
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	public abstract EZTransitionList GetTransitions(int index);

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1EB71E8", Offset = "0x1EB71E8", VA = "0x1EB71E8", Slot = "117")]
	public virtual string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1EB71F0", Offset = "0x1EB71F0", VA = "0x1EB71F0", Slot = "118")]
	public virtual void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1EB71F4", Offset = "0x1EB71F4", VA = "0x1EB71F4", Slot = "119")]
	public virtual ASCSEInfo GetStateElementInfo(int stateNum)
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1EB72B4", Offset = "0x1EB72B4", VA = "0x1EB72B4")]
	protected void UseStateLabel(int index)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1EB73C0", Offset = "0x1EB73C0", VA = "0x1EB73C0", Slot = "120")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1EB74BC", Offset = "0x1EB74BC", VA = "0x1EB74BC", Slot = "121")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1EB74CC", Offset = "0x1EB74CC", VA = "0x1EB74CC")]
	protected ControlBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1EB7574", Offset = "0x1EB7574", VA = "0x1EB7574", Slot = "29")]
	private Transform IControl.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1EB757C", Offset = "0x1EB757C", VA = "0x1EB757C", Slot = "30")]
	private GameObject IControl.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1EB7584", Offset = "0x1EB7584", VA = "0x1EB7584", Slot = "38")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1EB758C", Offset = "0x1EB758C", VA = "0x1EB758C", Slot = "39")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1EB7594", Offset = "0x1EB7594", VA = "0x1EB7594", Slot = "41")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200003A")]
public class ControlBaseMirror
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string text;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float textOffsetZ;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x16644C4", Offset = "0x16644C4", VA = "0x16644C4", Slot = "4")]
	public virtual void Mirror(ControlBase c)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1664504", Offset = "0x1664504", VA = "0x1664504", Slot = "5")]
	public virtual bool DidChange(ControlBase c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x16645F4", Offset = "0x16645F4", VA = "0x16645F4", Slot = "6")]
	public virtual void Validate(ControlBase c)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x16645F8", Offset = "0x16645F8", VA = "0x16645F8")]
	public ControlBaseMirror()
	{
	}
}
[Token(Token = "0x200003B")]
public enum EZDragDropEvent
{
	[Token(Token = "0x4000249")]
	Begin,
	[Token(Token = "0x400024A")]
	Update,
	[Token(Token = "0x400024B")]
	DragEnter,
	[Token(Token = "0x400024C")]
	DragExit,
	[Token(Token = "0x400024D")]
	Cancelled,
	[Token(Token = "0x400024E")]
	CancelDone,
	[Token(Token = "0x400024F")]
	Dropped
}
[Token(Token = "0x200003C")]
public struct EZDragDropParams
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EZDragDropEvent evt;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IUIObject dragObj;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public POINTER_INFO ptr;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x166BB48", Offset = "0x166BB48", VA = "0x166BB48")]
	public EZDragDropParams(EZDragDropEvent e, IUIObject obj, POINTER_INFO p)
	{
	}
}
[Token(Token = "0x200003D")]
public delegate void EZDragDropDelegate(EZDragDropParams parms);
[Token(Token = "0x200003E")]
public interface IEZDragDrop
{
	[Token(Token = "0x170000CB")]
	object Data
	{
		[Token(Token = "0x600047F")]
		get;
		[Token(Token = "0x6000480")]
		set;
	}

	[Token(Token = "0x170000CC")]
	bool IsDraggable
	{
		[Token(Token = "0x6000481")]
		get;
		[Token(Token = "0x6000482")]
		set;
	}

	[Token(Token = "0x170000CD")]
	LayerMask DropMask
	{
		[Token(Token = "0x6000483")]
		get;
		[Token(Token = "0x6000484")]
		set;
	}

	[Token(Token = "0x170000CE")]
	bool IsDragging
	{
		[Token(Token = "0x6000485")]
		get;
		[Token(Token = "0x6000486")]
		set;
	}

	[Token(Token = "0x170000CF")]
	GameObject DropTarget
	{
		[Token(Token = "0x6000487")]
		get;
		[Token(Token = "0x6000488")]
		set;
	}

	[Token(Token = "0x170000D0")]
	bool DropHandled
	{
		[Token(Token = "0x6000489")]
		get;
		[Token(Token = "0x600048A")]
		set;
	}

	[Token(Token = "0x170000D1")]
	float DragOffset
	{
		[Token(Token = "0x600048B")]
		get;
		[Token(Token = "0x600048C")]
		set;
	}

	[Token(Token = "0x170000D2")]
	EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x600048D")]
		get;
		[Token(Token = "0x600048E")]
		set;
	}

	[Token(Token = "0x170000D3")]
	float CancelDragDuration
	{
		[Token(Token = "0x600048F")]
		get;
		[Token(Token = "0x6000490")]
		set;
	}

	[Token(Token = "0x6000491")]
	void DragUpdatePosition(POINTER_INFO ptr);

	[Token(Token = "0x6000492")]
	void CancelDrag();

	[Token(Token = "0x6000493")]
	void OnEZDragDrop_Internal(EZDragDropParams parms);

	[Token(Token = "0x6000494")]
	void AddDragDropDelegate(EZDragDropDelegate del);

	[Token(Token = "0x6000495")]
	void RemoveDragDropDelegate(EZDragDropDelegate del);

	[Token(Token = "0x6000496")]
	void SetDragDropDelegate(EZDragDropDelegate del);

	[Token(Token = "0x6000497")]
	void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del);

	[Token(Token = "0x6000498")]
	void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del);

	[Token(Token = "0x6000499")]
	void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del);

	[Token(Token = "0x600049A")]
	EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate();
}
[Token(Token = "0x200003F")]
public class EZDragDropHelper
{
	[Token(Token = "0x2000191")]
	public delegate void UpdateDragPositionDelegate(POINTER_INFO ptr);

	[Token(Token = "0x2000192")]
	public delegate void DragDrop_InternalDelegate(ref POINTER_INFO ptr);

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IUIObject host;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UpdateDragPositionDelegate dragPosUpdateDel;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected DragDrop_InternalDelegate dragDrop_InternalDel;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 touchCompensationOffset;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 dragOrigin;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 dragOriginOffset;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Plane dragPlane;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected bool isDragging;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	protected bool isCanceling;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	protected bool useDefaultCancelDragAnim;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject dropTarget;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected bool dropHandled;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x170000D4")]
	private Plane DragPlane
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x166B4CC", Offset = "0x166B4CC", VA = "0x166B4CC")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x170000D5")]
	public bool UseDefaultCancelDragAnim
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0x166B4D8", Offset = "0x166B4D8", VA = "0x166B4D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x166B4E0", Offset = "0x166B4E0", VA = "0x166B4E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public bool IsDragging
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x166B614", Offset = "0x166B614", VA = "0x166B614")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x166B61C", Offset = "0x166B61C", VA = "0x166B61C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public bool IsCanceling
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x166B8A0", Offset = "0x166B8A0", VA = "0x166B8A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D8")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x166B8B0", Offset = "0x166B8B0", VA = "0x166B8B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x166B8B8", Offset = "0x166B8B8", VA = "0x166B8B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public bool DropHandled
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x166C178", Offset = "0x166C178", VA = "0x166C178")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x166C180", Offset = "0x166C180", VA = "0x166C180")]
		set
		{
		}
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x166B368", Offset = "0x166B368", VA = "0x166B368")]
	public EZDragDropHelper(IUIObject h)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x166B428", Offset = "0x166B428", VA = "0x166B428")]
	public EZDragDropHelper()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x166B4EC", Offset = "0x166B4EC", VA = "0x166B4EC")]
	public void SetDragDropInternalDelegate(DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x166B4F4", Offset = "0x166B4F4", VA = "0x166B4F4")]
	public void AddDragDropInternalDelegate(DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x166B580", Offset = "0x166B580", VA = "0x166B580")]
	public void RemoveDragDropInternalDelegate(DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x166B60C", Offset = "0x166B60C", VA = "0x166B60C")]
	public DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x166B8A8", Offset = "0x166B8A8", VA = "0x166B8A8")]
	public void CancelFinished()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x166C18C", Offset = "0x166C18C", VA = "0x166C18C")]
	public void SetDragPosUpdater(UpdateDragPositionDelegate del)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x166C194", Offset = "0x166C194", VA = "0x166C194")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x166C1D8", Offset = "0x166C1D8", VA = "0x166C1D8")]
	public void DefaultDragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x166B658", Offset = "0x166B658", VA = "0x166B658")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x166C410", Offset = "0x166C410", VA = "0x166C410")]
	public void DoDefaultCancelDrag()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x166C658", Offset = "0x166C658", VA = "0x166C658")]
	protected void FinishCancelDrag(EZAnimation anim)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x166BB9C", Offset = "0x166BB9C", VA = "0x166BB9C")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x166C79C", Offset = "0x166C79C", VA = "0x166C79C")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x166C828", Offset = "0x166C828", VA = "0x166C828")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x166C8B4", Offset = "0x166C8B4", VA = "0x166C8B4")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}
}
[Token(Token = "0x2000040")]
public interface IGUIScriptSelector
{
	[Token(Token = "0x60004B6")]
	MonoBehaviour DrawScriptSelection(MonoBehaviour script, ref string method);
}
[Token(Token = "0x2000041")]
public enum ControlCopyFlags
{
	[Token(Token = "0x4000261")]
	Appearance = 1,
	[Token(Token = "0x4000262")]
	Sound = 2,
	[Token(Token = "0x4000263")]
	Text = 4,
	[Token(Token = "0x4000264")]
	Data = 8,
	[Token(Token = "0x4000265")]
	State = 16,
	[Token(Token = "0x4000266")]
	Transitions = 32,
	[Token(Token = "0x4000267")]
	Invocation = 64,
	[Token(Token = "0x4000268")]
	Settings = 128,
	[Token(Token = "0x4000269")]
	DragDrop = 256,
	[Token(Token = "0x400026A")]
	All = 65535
}
[Token(Token = "0x2000042")]
public interface IControl
{
	[Token(Token = "0x170000DA")]
	string Text
	{
		[Token(Token = "0x60004B7")]
		get;
		[Token(Token = "0x60004B8")]
		set;
	}

	[Token(Token = "0x170000DB")]
	bool IncludeTextInAutoCollider
	{
		[Token(Token = "0x60004B9")]
		get;
		[Token(Token = "0x60004BA")]
		set;
	}

	[Token(Token = "0x170000DC")]
	EZTransitionList[] Transitions
	{
		[Token(Token = "0x60004C3")]
		get;
		[Token(Token = "0x60004C4")]
		set;
	}

	[Token(Token = "0x170000DD")]
	float TextOffsetZ
	{
		[Token(Token = "0x60004C8")]
		get;
		[Token(Token = "0x60004C9")]
		set;
	}

	[Token(Token = "0x170000DE")]
	SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x60004CA")]
		get;
	}

	[Token(Token = "0x170000DF")]
	SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x60004CB")]
		get;
	}

	[Token(Token = "0x170000E0")]
	bool Persistent
	{
		[Token(Token = "0x60004CC")]
		get;
		[Token(Token = "0x60004CD")]
		set;
	}

	[Token(Token = "0x170000E1")]
	object Data
	{
		[Token(Token = "0x60004CE")]
		get;
		[Token(Token = "0x60004CF")]
		set;
	}

	[Token(Token = "0x170000E2")]
	Transform transform
	{
		[Token(Token = "0x60004D0")]
		get;
	}

	[Token(Token = "0x170000E3")]
	GameObject gameObject
	{
		[Token(Token = "0x60004D1")]
		get;
	}

	[Token(Token = "0x60004BB")]
	void UpdateCollider();

	[Token(Token = "0x60004BC")]
	void Copy(IControl c);

	[Token(Token = "0x60004BD")]
	void Copy(IControl c, ControlCopyFlags flags);

	[Token(Token = "0x60004BE")]
	int DrawPreStateSelectGUI(int selState, bool inspector);

	[Token(Token = "0x60004BF")]
	int DrawPostStateSelectGUI(int selState);

	[Token(Token = "0x60004C0")]
	void DrawPreTransitionUI(int selState, IGUIScriptSelector gui);

	[Token(Token = "0x60004C1")]
	string[] EnumStateElements();

	[Token(Token = "0x60004C2")]
	EZTransitionList GetTransitions(int index);

	[Token(Token = "0x60004C5")]
	string GetStateLabel(int index);

	[Token(Token = "0x60004C6")]
	void SetStateLabel(int index, string label);

	[Token(Token = "0x60004C7")]
	ASCSEInfo GetStateElementInfo(int stateNum);
}
[Token(Token = "0x2000043")]
public delegate void EZKeyboardCommitDelegate(IKeyFocusable control);
[Token(Token = "0x2000044")]
public interface IKeyFocusable
{
	[Token(Token = "0x170000E4")]
	string Content
	{
		[Token(Token = "0x60004DB")]
		get;
	}

	[Token(Token = "0x170000E5")]
	bool Password
	{
		[Token(Token = "0x60004DC")]
		get;
	}

	[Token(Token = "0x60004D6")]
	void LostFocus();

	[Token(Token = "0x60004D7")]
	string SetInputText(string inputText, ref int insertPt);

	[Token(Token = "0x60004D8")]
	string GetInputText(ref KEYBOARD_INFO info);

	[Token(Token = "0x60004D9")]
	void Commit();

	[Token(Token = "0x60004DA")]
	void SetCommitDelegate(EZKeyboardCommitDelegate del);

	[Token(Token = "0x60004DD")]
	void GoUp();

	[Token(Token = "0x60004DE")]
	void GoDown();
}
[Token(Token = "0x2000045")]
public interface IPackableControl : ISpritePackable, IControl
{
}
[Token(Token = "0x2000046")]
public interface IUIContainer : IUIObject, IEZDragDrop
{
	[Token(Token = "0x60004DF")]
	void AddChild(GameObject go);

	[Token(Token = "0x60004E0")]
	void RemoveChild(GameObject go);

	[Token(Token = "0x60004E1")]
	void AddSubject(GameObject go);

	[Token(Token = "0x60004E2")]
	void RemoveSubject(GameObject go);
}
[Token(Token = "0x2000047")]
public delegate void EZInputDelegate(ref POINTER_INFO ptr);
[Token(Token = "0x2000048")]
public delegate void EZValueChangedDelegate(IUIObject obj);
[Token(Token = "0x2000049")]
public interface IUIObject : IEZDragDrop
{
	[Token(Token = "0x170000E6")]
	bool controlIsEnabled
	{
		[Token(Token = "0x60004EB")]
		get;
		[Token(Token = "0x60004EC")]
		set;
	}

	[Token(Token = "0x170000E7")]
	bool DetargetOnDisable
	{
		[Token(Token = "0x60004ED")]
		get;
		[Token(Token = "0x60004EE")]
		set;
	}

	[Token(Token = "0x170000E8")]
	IUIContainer Container
	{
		[Token(Token = "0x60004F0")]
		get;
		[Token(Token = "0x60004F1")]
		set;
	}

	[Token(Token = "0x170000E9")]
	GameObject gameObject
	{
		[Token(Token = "0x60004F2")]
		get;
	}

	[Token(Token = "0x170000EA")]
	Transform transform
	{
		[Token(Token = "0x60004F3")]
		get;
	}

	[Token(Token = "0x170000EB")]
	string name
	{
		[Token(Token = "0x60004F5")]
		get;
	}

	[Token(Token = "0x60004EF")]
	IUIObject GetControl(ref POINTER_INFO ptr);

	[Token(Token = "0x60004F4")]
	new string ToString();

	[Token(Token = "0x60004F6")]
	bool RequestContainership(IUIContainer cont);

	[Token(Token = "0x60004F7")]
	bool GotFocus();

	[Token(Token = "0x60004F8")]
	void OnInput(POINTER_INFO ptr);

	[Token(Token = "0x60004F9")]
	void SetInputDelegate(EZInputDelegate del);

	[Token(Token = "0x60004FA")]
	void AddInputDelegate(EZInputDelegate del);

	[Token(Token = "0x60004FB")]
	void RemoveInputDelegate(EZInputDelegate del);

	[Token(Token = "0x60004FC")]
	void SetValueChangedDelegate(EZValueChangedDelegate del);

	[Token(Token = "0x60004FD")]
	void AddValueChangedDelegate(EZValueChangedDelegate del);

	[Token(Token = "0x60004FE")]
	void RemoveValueChangedDelegate(EZValueChangedDelegate del);
}
[Token(Token = "0x200004A")]
public interface IUIText : IUseCamera
{
	[Token(Token = "0x170000EC")]
	string Text
	{
		[Token(Token = "0x60004FF")]
		get;
		[Token(Token = "0x6000500")]
		set;
	}

	[Token(Token = "0x170000ED")]
	bool Persistent
	{
		[Token(Token = "0x6000501")]
		get;
		[Token(Token = "0x6000502")]
		set;
	}

	[Token(Token = "0x170000EE")]
	IControl Parent
	{
		[Token(Token = "0x6000503")]
		get;
		[Token(Token = "0x6000504")]
		set;
	}

	[Token(Token = "0x170000EF")]
	Color Color
	{
		[Token(Token = "0x6000505")]
		get;
		[Token(Token = "0x6000506")]
		set;
	}

	[Token(Token = "0x170000F0")]
	bool Clipped
	{
		[Token(Token = "0x6000509")]
		get;
		[Token(Token = "0x600050A")]
		set;
	}

	[Token(Token = "0x170000F1")]
	Rect3D ClippingRect
	{
		[Token(Token = "0x600050B")]
		get;
		[Token(Token = "0x600050C")]
		set;
	}

	[Token(Token = "0x170000F2")]
	Vector3 TopLeft
	{
		[Token(Token = "0x600050F")]
		get;
	}

	[Token(Token = "0x170000F3")]
	Vector3 BottomRight
	{
		[Token(Token = "0x6000510")]
		get;
	}

	[Token(Token = "0x170000F4")]
	Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x6000511")]
		get;
	}

	[Token(Token = "0x170000F5")]
	Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x6000512")]
		get;
	}

	[Token(Token = "0x170000F6")]
	bool IsWidthLimited
	{
		[Token(Token = "0x6000513")]
		get;
	}

	[Token(Token = "0x170000F7")]
	float ZOffset
	{
		[Token(Token = "0x6000515")]
		get;
		[Token(Token = "0x6000516")]
		set;
	}

	[Token(Token = "0x170000F8")]
	float BaseHeight
	{
		[Token(Token = "0x6000519")]
		get;
	}

	[Token(Token = "0x170000F9")]
	float LineSpan
	{
		[Token(Token = "0x600051A")]
		get;
	}

	[Token(Token = "0x170000FA")]
	bool Password
	{
		[Token(Token = "0x600051D")]
		get;
		[Token(Token = "0x600051E")]
		set;
	}

	[Token(Token = "0x170000FB")]
	string MaskingCharacter
	{
		[Token(Token = "0x600051F")]
		get;
		[Token(Token = "0x6000520")]
		set;
	}

	[Token(Token = "0x170000FC")]
	bool Multiline
	{
		[Token(Token = "0x6000521")]
		get;
		[Token(Token = "0x6000522")]
		set;
	}

	[Token(Token = "0x170000FD")]
	SpriteText.Anchor_Pos Anchor
	{
		[Token(Token = "0x6000523")]
		get;
		[Token(Token = "0x6000524")]
		set;
	}

	[Token(Token = "0x170000FE")]
	float MaxWidth
	{
		[Token(Token = "0x6000525")]
		get;
		[Token(Token = "0x6000526")]
		set;
	}

	[Token(Token = "0x170000FF")]
	bool RemoveUnsupportedCharacters
	{
		[Token(Token = "0x6000527")]
		get;
		[Token(Token = "0x6000528")]
		set;
	}

	[Token(Token = "0x17000100")]
	bool ParseTags
	{
		[Token(Token = "0x6000529")]
		get;
		[Token(Token = "0x600052A")]
		set;
	}

	[Token(Token = "0x17000101")]
	Transform transform
	{
		[Token(Token = "0x600052B")]
		get;
	}

	[Token(Token = "0x17000102")]
	GameObject gameObject
	{
		[Token(Token = "0x600052C")]
		get;
	}

	[Token(Token = "0x6000507")]
	void SetColor(Color c);

	[Token(Token = "0x6000508")]
	void Unclip();

	[Token(Token = "0x600050D")]
	void Hide(bool tf);

	[Token(Token = "0x600050E")]
	bool IsHidden();

	[Token(Token = "0x6000514")]
	void Copy(IUIText text);

	[Token(Token = "0x6000517")]
	Vector3 GetInsertionPointPos(int charIndex);

	[Token(Token = "0x6000518")]
	int GetNearestInsertionPoint(Vector3 point);

	[Token(Token = "0x600051B")]
	int PlainIndexToDisplayIndex(int plainCharIndex);

	[Token(Token = "0x600051C")]
	int DisplayIndexToPlainIndex(int dispCharIndex);
}
[Serializable]
[Token(Token = "0x200004B")]
public abstract class UIPanelBase : MonoBehaviour, IUIContainer, IUIObject, IEZDragDrop
{
	[Token(Token = "0x2000193")]
	public delegate void TransitionCompleteDelegate(UIPanelBase panel, EZTransition transition);

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected EZLinkedList<EZLinkedListNode<IUIObject>> uiObjs;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected EZLinkedList<EZLinkedListNode<UIPanelBase>> childPanels;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool[] blockInput;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected EZTransition prevTransition;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int prevTransIndex;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_started;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int index;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool deactivateAllOnDismiss;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool detargetOnDisable;

	[NonSerialized]
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Dictionary<int, GameObject> subjects;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected TransitionCompleteDelegate tempTransCompleteDel;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected IUIContainer container;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x17000103")]
	public abstract EZTransitionList Transitions
	{
		[Token(Token = "0x600052D")]
		get;
	}

	[Token(Token = "0x17000104")]
	public bool IsTransitioning
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x1C22628", Offset = "0x1C22628", VA = "0x1C22628")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000105")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1C22638", Offset = "0x1C22638", VA = "0x1C22638", Slot = "65")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1C22640", Offset = "0x1C22640", VA = "0x1C22640", Slot = "66")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1C2264C", Offset = "0x1C2264C", VA = "0x1C2264C", Slot = "67")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1C22654", Offset = "0x1C22654", VA = "0x1C22654", Slot = "68")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1C22664", Offset = "0x1C22664", VA = "0x1C22664", Slot = "69")]
		get
		{
			return null;
		}
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1C2266C", Offset = "0x1C2266C", VA = "0x1C2266C", Slot = "70")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public object Data
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1C22D48", Offset = "0x1C22D48", VA = "0x1C22D48", Slot = "28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1C22D50", Offset = "0x1C22D50", VA = "0x1C22D50", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public bool IsDraggable
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1C22D54", Offset = "0x1C22D54", VA = "0x1C22D54", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x1C22D5C", Offset = "0x1C22D5C", VA = "0x1C22D5C", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public LayerMask DropMask
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1C22D60", Offset = "0x1C22D60", VA = "0x1C22D60", Slot = "32")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1C22D80", Offset = "0x1C22D80", VA = "0x1C22D80", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public float DragOffset
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1C22D84", Offset = "0x1C22D84", VA = "0x1C22D84", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1C22D8C", Offset = "0x1C22D8C", VA = "0x1C22D8C", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1C22D90", Offset = "0x1C22D90", VA = "0x1C22D90", Slot = "42")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1C22D98", Offset = "0x1C22D98", VA = "0x1C22D98", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public float CancelDragDuration
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1C22D9C", Offset = "0x1C22D9C", VA = "0x1C22D9C", Slot = "44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1C22DA4", Offset = "0x1C22DA4", VA = "0x1C22DA4", Slot = "45")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public bool IsDragging
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1C22DA8", Offset = "0x1C22DA8", VA = "0x1C22DA8", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1C22DB0", Offset = "0x1C22DB0", VA = "0x1C22DB0", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public GameObject DropTarget
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1C22DB4", Offset = "0x1C22DB4", VA = "0x1C22DB4", Slot = "36")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1C22DBC", Offset = "0x1C22DBC", VA = "0x1C22DBC", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public bool DropHandled
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1C22DC0", Offset = "0x1C22DC0", VA = "0x1C22DC0", Slot = "38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1C22DC8", Offset = "0x1C22DC8", VA = "0x1C22DC8", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1C1F8EC", Offset = "0x1C1F8EC", VA = "0x1C1F8EC", Slot = "57")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1C1FA20", Offset = "0x1C1FA20", VA = "0x1C1FA20", Slot = "58")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1C1FA7C", Offset = "0x1C1FA7C", VA = "0x1C1FA7C", Slot = "59")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1C1FB80", Offset = "0x1C1FB80", VA = "0x1C1FB80")]
	public void ScanChildren()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1C207AC", Offset = "0x1C207AC", VA = "0x1C207AC", Slot = "60")]
	protected virtual void SetupTransitionSubjects()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1C2109C", Offset = "0x1C2109C", VA = "0x1C2109C", Slot = "4")]
	public void AddChild(GameObject go)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1C21630", Offset = "0x1C21630", VA = "0x1C21630", Slot = "5")]
	public void RemoveChild(GameObject go)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1C21C44", Offset = "0x1C21C44", VA = "0x1C21C44")]
	public void MakeChild(GameObject go)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1C21450", Offset = "0x1C21450", VA = "0x1C21450", Slot = "6")]
	public void AddSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1C21A68", Offset = "0x1C21A68", VA = "0x1C21A68", Slot = "7")]
	public void RemoveSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1C21CC0", Offset = "0x1C21CC0", VA = "0x1C21CC0")]
	public string[] GetTransitionNames()
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1C21E4C", Offset = "0x1C21E4C", VA = "0x1C21E4C")]
	public EZTransition GetTransition(int index)
	{
		return null;
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1C21F24", Offset = "0x1C21F24", VA = "0x1C21F24")]
	public EZTransition GetTransition(UIPanelManager.SHOW_MODE transition)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1C21F28", Offset = "0x1C21F28", VA = "0x1C21F28")]
	public EZTransition GetTransition(string transName)
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1C2201C", Offset = "0x1C2201C", VA = "0x1C2201C", Slot = "61")]
	public virtual void StartTransition(UIPanelManager.SHOW_MODE mode)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1C2218C", Offset = "0x1C2218C", VA = "0x1C2218C", Slot = "62")]
	public virtual void StartTransition(string transName)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1C22384", Offset = "0x1C22384", VA = "0x1C22384")]
	public void TransitionCompleted(EZTransition transition)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1C2254C", Offset = "0x1C2254C", VA = "0x1C2254C", Slot = "63")]
	public virtual void BringIn()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1C22560", Offset = "0x1C22560", VA = "0x1C22560", Slot = "64")]
	public virtual void Dismiss()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1C22574", Offset = "0x1C22574", VA = "0x1C22574")]
	public static int CompareIndices(UIPanelBase a, UIPanelBase b)
	{
		return default(int);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1C2259C", Offset = "0x1C2259C", VA = "0x1C2259C")]
	public void AddTempTransitionDelegate(TransitionCompleteDelegate del)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1C22660", Offset = "0x1C22660", VA = "0x1C22660", Slot = "12")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1C20568", Offset = "0x1C20568", VA = "0x1C20568", Slot = "19")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1C229C4", Offset = "0x1C229C4", VA = "0x1C229C4", Slot = "20")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1C229CC", Offset = "0x1C229CC", VA = "0x1C229CC", Slot = "71")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1C229D4", Offset = "0x1C229D4", VA = "0x1C229D4", Slot = "72")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1C22A60", Offset = "0x1C22A60", VA = "0x1C22A60", Slot = "73")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1C22AEC", Offset = "0x1C22AEC", VA = "0x1C22AEC", Slot = "74")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1C22AF4", Offset = "0x1C22AF4", VA = "0x1C22AF4", Slot = "75")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1C22B80", Offset = "0x1C22B80", VA = "0x1C22B80", Slot = "76")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1C22C0C", Offset = "0x1C22C0C", VA = "0x1C22C0C", Slot = "77")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1C22DCC", Offset = "0x1C22DCC", VA = "0x1C22DCC", Slot = "46")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1C22DD0", Offset = "0x1C22DD0", VA = "0x1C22DD0", Slot = "47")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1C22DD4", Offset = "0x1C22DD4", VA = "0x1C22DD4", Slot = "48")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1C22E18", Offset = "0x1C22E18", VA = "0x1C22E18", Slot = "49")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1C22EA4", Offset = "0x1C22EA4", VA = "0x1C22EA4", Slot = "50")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1C22F30", Offset = "0x1C22F30", VA = "0x1C22F30", Slot = "51")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1C22F38", Offset = "0x1C22F38", VA = "0x1C22F38", Slot = "52")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1C22F3C", Offset = "0x1C22F3C", VA = "0x1C22F3C", Slot = "53")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1C22F40", Offset = "0x1C22F40", VA = "0x1C22F40", Slot = "54")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1C22F44", Offset = "0x1C22F44", VA = "0x1C22F44", Slot = "55")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1C1F774", Offset = "0x1C1F774", VA = "0x1C1F774")]
	protected UIPanelBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1C22F4C", Offset = "0x1C22F4C", VA = "0x1C22F4C", Slot = "15")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1C22F54", Offset = "0x1C22F54", VA = "0x1C22F54", Slot = "16")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1C22F5C", Offset = "0x1C22F5C", VA = "0x1C22F5C", Slot = "18")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200004C")]
public class UIScrollKnob : UIButton
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	protected Vector3 origPos;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	protected UISlider slider;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	protected float maxScrollPos;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	protected Plane ctrlPlane;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	protected Vector2 colliderSizeFactor;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	protected float colliderExtent;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private float dist;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private Vector3 inputPoint;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private Vector3 newPos;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	private Vector3 prevPoint;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1C2C434", Offset = "0x1C2C434", VA = "0x1C2C434", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1C2C480", Offset = "0x1C2C480", VA = "0x1C2C480", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1C2C778", Offset = "0x1C2C778", VA = "0x1C2C778")]
	public void SetStartPos(Vector3 startPos)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1C2C788", Offset = "0x1C2C788", VA = "0x1C2C788")]
	public Vector3 GetstartPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1C2C5F0", Offset = "0x1C2C5F0", VA = "0x1C2C5F0")]
	public Vector3 GetLocalInputPoint(Ray ray)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1C2C798", Offset = "0x1C2C798", VA = "0x1C2C798", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1C2C880", Offset = "0x1C2C880", VA = "0x1C2C880")]
	public void SetColliderSizeFactor(Vector2 csf)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1C2C88C", Offset = "0x1C2C88C", VA = "0x1C2C88C", Slot = "172")]
	public override void UpdateCollider()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1C2C734", Offset = "0x1C2C734", VA = "0x1C2C734")]
	public float GetScrollPos()
	{
		return default(float);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1C2C890", Offset = "0x1C2C890", VA = "0x1C2C890")]
	public void SetPosition(float pos)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1C2C918", Offset = "0x1C2C918", VA = "0x1C2C918")]
	public void SetSlider(UISlider s)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1C2C928", Offset = "0x1C2C928", VA = "0x1C2C928")]
	public UISlider GetSlider()
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1C2C930", Offset = "0x1C2C930", VA = "0x1C2C930")]
	public void SetMaxScroll(float max)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1C2C938", Offset = "0x1C2C938", VA = "0x1C2C938")]
	public float GetMaxScroll()
	{
		return default(float);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1C2C940", Offset = "0x1C2C940", VA = "0x1C2C940")]
	public void SetupAppearance()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1C2C990", Offset = "0x1C2C990", VA = "0x1C2C990")]
	public new static UIScrollKnob Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1C2CADC", Offset = "0x1C2CADC", VA = "0x1C2CADC")]
	public new static UIScrollKnob Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1C2CC70", Offset = "0x1C2CC70", VA = "0x1C2CC70")]
	public UIScrollKnob()
	{
	}
}
[Token(Token = "0x200004D")]
public abstract class UITextBase : MonoBehaviour, IUIText, IUseCamera
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected IControl parentControl;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool persistent;

	[Token(Token = "0x17000111")]
	public abstract string Text
	{
		[Token(Token = "0x6000587")]
		get;
		[Token(Token = "0x6000588")]
		set;
	}

	[Token(Token = "0x17000112")]
	public virtual bool Persistent
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1985328", Offset = "0x1985328", VA = "0x1985328", Slot = "56")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1985330", Offset = "0x1985330", VA = "0x1985330", Slot = "57")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public virtual IControl Parent
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x19853B0", Offset = "0x19853B0", VA = "0x19853B0", Slot = "58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x19853B8", Offset = "0x19853B8", VA = "0x19853B8", Slot = "59")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public abstract Color Color
	{
		[Token(Token = "0x600058D")]
		get;
		[Token(Token = "0x600058E")]
		set;
	}

	[Token(Token = "0x17000115")]
	public abstract Color OriginalColor
	{
		[Token(Token = "0x600058F")]
		get;
		[Token(Token = "0x6000590")]
		set;
	}

	[Token(Token = "0x17000116")]
	public abstract bool Clipped
	{
		[Token(Token = "0x6000593")]
		get;
		[Token(Token = "0x6000594")]
		set;
	}

	[Token(Token = "0x17000117")]
	public abstract Rect3D ClippingRect
	{
		[Token(Token = "0x6000595")]
		get;
		[Token(Token = "0x6000596")]
		set;
	}

	[Token(Token = "0x17000118")]
	public abstract Vector3 TopLeft
	{
		[Token(Token = "0x6000599")]
		get;
	}

	[Token(Token = "0x17000119")]
	public abstract Vector3 BottomRight
	{
		[Token(Token = "0x600059A")]
		get;
	}

	[Token(Token = "0x1700011A")]
	public abstract Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x600059B")]
		get;
	}

	[Token(Token = "0x1700011B")]
	public abstract Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x600059C")]
		get;
	}

	[Token(Token = "0x1700011C")]
	public abstract bool IsWidthLimited
	{
		[Token(Token = "0x600059D")]
		get;
	}

	[Token(Token = "0x1700011D")]
	public abstract float ZOffset
	{
		[Token(Token = "0x600059F")]
		get;
		[Token(Token = "0x60005A0")]
		set;
	}

	[Token(Token = "0x1700011E")]
	public abstract float BaseHeight
	{
		[Token(Token = "0x60005A3")]
		get;
	}

	[Token(Token = "0x1700011F")]
	public abstract float LineSpan
	{
		[Token(Token = "0x60005A4")]
		get;
	}

	[Token(Token = "0x17000120")]
	public abstract bool Password
	{
		[Token(Token = "0x60005A7")]
		get;
		[Token(Token = "0x60005A8")]
		set;
	}

	[Token(Token = "0x17000121")]
	public abstract string MaskingCharacter
	{
		[Token(Token = "0x60005A9")]
		get;
		[Token(Token = "0x60005AA")]
		set;
	}

	[Token(Token = "0x17000122")]
	public abstract bool Multiline
	{
		[Token(Token = "0x60005AB")]
		get;
		[Token(Token = "0x60005AC")]
		set;
	}

	[Token(Token = "0x17000123")]
	public abstract SpriteText.Anchor_Pos Anchor
	{
		[Token(Token = "0x60005AD")]
		get;
		[Token(Token = "0x60005AE")]
		set;
	}

	[Token(Token = "0x17000124")]
	public abstract float MaxWidth
	{
		[Token(Token = "0x60005AF")]
		get;
		[Token(Token = "0x60005B0")]
		set;
	}

	[Token(Token = "0x17000125")]
	public abstract bool RemoveUnsupportedCharacters
	{
		[Token(Token = "0x60005B1")]
		get;
		[Token(Token = "0x60005B2")]
		set;
	}

	[Token(Token = "0x17000126")]
	public abstract bool ParseTags
	{
		[Token(Token = "0x60005B3")]
		get;
		[Token(Token = "0x60005B4")]
		set;
	}

	[Token(Token = "0x17000127")]
	public abstract Camera RenderCamera
	{
		[Token(Token = "0x60005B9")]
		get;
		[Token(Token = "0x60005BA")]
		set;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x198529C", Offset = "0x198529C", VA = "0x198529C")]
	public static UITextBase Create(IControl control)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	public abstract void SetColor(Color c);

	[Token(Token = "0x6000592")]
	public abstract void Unclip();

	[Token(Token = "0x6000597")]
	public abstract void Hide(bool tf);

	[Token(Token = "0x6000598")]
	public abstract bool IsHidden();

	[Token(Token = "0x600059E")]
	public abstract void Copy(IUIText text);

	[Token(Token = "0x60005A1")]
	public abstract Vector3 GetInsertionPointPos(int charIndex);

	[Token(Token = "0x60005A2")]
	public abstract int GetNearestInsertionPoint(Vector3 point);

	[Token(Token = "0x60005A5")]
	public abstract int PlainIndexToDisplayIndex(int plainCharIndex);

	[Token(Token = "0x60005A6")]
	public abstract int DisplayIndexToPlainIndex(int dispCharIndex);

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x19853C0", Offset = "0x19853C0", VA = "0x19853C0", Slot = "100")]
	protected virtual void OnChange()
	{
	}

	[Token(Token = "0x60005B6")]
	public abstract void UpdateCamera();

	[Token(Token = "0x60005B7")]
	public abstract void SetCamera();

	[Token(Token = "0x60005B8")]
	public abstract void SetCamera(Camera cam);

	[Token(Token = "0x60005BB")]
	public abstract void Start();

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1985510", Offset = "0x1985510", VA = "0x1985510")]
	protected UITextBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1985518", Offset = "0x1985518", VA = "0x1985518", Slot = "48")]
	private Transform IUIText.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1985520", Offset = "0x1985520", VA = "0x1985520", Slot = "49")]
	private GameObject IUIText.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200004E")]
public class EditorClearPlayer : MonoBehaviour
{
	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1670CEC", Offset = "0x1670CEC", VA = "0x1670CEC")]
	public EditorClearPlayer()
	{
	}
}
[Token(Token = "0x200004F")]
public enum VRCursorType
{
	[Token(Token = "0x4000289")]
	GazeCursor,
	[Token(Token = "0x400028A")]
	GearVRController,
	[Token(Token = "0x400028B")]
	DeviceDriven
}
[Token(Token = "0x2000050")]
public enum ModMode
{
	[Token(Token = "0x400028D")]
	Attach,
	[Token(Token = "0x400028E")]
	Skin,
	[Token(Token = "0x400028F")]
	Ammo,
	[Token(Token = "0x4000290")]
	Special,
	[Token(Token = "0x4000291")]
	Custom,
	[Token(Token = "0x4000292")]
	None,
	[Token(Token = "0x4000293")]
	Settings,
	[Token(Token = "0x4000294")]
	Gun
}
[Token(Token = "0x2000051")]
public enum TouchHit
{
	[Token(Token = "0x4000296")]
	Weapon,
	[Token(Token = "0x4000297")]
	GUI,
	[Token(Token = "0x4000298")]
	Attachment,
	[Token(Token = "0x4000299")]
	Nothing
}
[Token(Token = "0x2000052")]
public enum EmitterType
{
	[Token(Token = "0x400029B")]
	Muzzle,
	[Token(Token = "0x400029C")]
	Ejection
}
[Token(Token = "0x2000053")]
public enum ReceiverType
{
	[Token(Token = "0x400029E")]
	None,
	[Token(Token = "0x400029F")]
	OpenBolt,
	[Token(Token = "0x40002A0")]
	ClosedBolt,
	[Token(Token = "0x40002A1")]
	Pistol,
	[Token(Token = "0x40002A2")]
	FG42,
	[Token(Token = "0x40002A3")]
	BoltActionRifle,
	[Token(Token = "0x40002A4")]
	SingleShot,
	[Token(Token = "0x40002A5")]
	Revolver,
	[Token(Token = "0x40002A6")]
	PumpAction,
	[Token(Token = "0x40002A7")]
	BreakAction
}
[Token(Token = "0x2000054")]
public enum ChamberState
{
	[Token(Token = "0x40002A9")]
	Loaded,
	[Token(Token = "0x40002AA")]
	Fired,
	[Token(Token = "0x40002AB")]
	Empty,
	[Token(Token = "0x40002AC")]
	Feeding
}
[Token(Token = "0x2000055")]
public enum AttachmentConnectionType
{
	[Token(Token = "0x40002AE")]
	Picatinny,
	[Token(Token = "0x40002AF")]
	Barrel,
	[Token(Token = "0x40002B0")]
	Native,
	[Token(Token = "0x40002B1")]
	Stock,
	[Token(Token = "0x40002B2")]
	Magazine,
	[Token(Token = "0x40002B3")]
	Camouflage,
	[Token(Token = "0x40002B4")]
	Upgrade,
	[Token(Token = "0x40002B5")]
	None
}
[Token(Token = "0x2000056")]
public enum SlidePosition
{
	[Token(Token = "0x40002B7")]
	Returned,
	[Token(Token = "0x40002B8")]
	Extended,
	[Token(Token = "0x40002B9")]
	Void,
	[Token(Token = "0x40002BA")]
	Moving,
	[Token(Token = "0x40002BB")]
	Locked
}
[Token(Token = "0x2000057")]
public enum MagazineType
{
	[Token(Token = "0x40002BD")]
	Generic,
	[Token(Token = "0x40002BE")]
	Side,
	[Token(Token = "0x40002BF")]
	Stripper,
	[Token(Token = "0x40002C0")]
	Top,
	[Token(Token = "0x40002C1")]
	Shotgun,
	[Token(Token = "0x40002C2")]
	Hinged
}
[Token(Token = "0x2000058")]
public enum StockType
{
	[Token(Token = "0x40002C4")]
	Sliding,
	[Token(Token = "0x40002C5")]
	Animated,
	[Token(Token = "0x40002C6")]
	Rotating
}
[Token(Token = "0x2000059")]
public enum Direction
{
	[Token(Token = "0x40002C8")]
	Up,
	[Token(Token = "0x40002C9")]
	Down,
	[Token(Token = "0x40002CA")]
	Left,
	[Token(Token = "0x40002CB")]
	Right,
	[Token(Token = "0x40002CC")]
	None,
	[Token(Token = "0x40002CD")]
	Magazine,
	[Token(Token = "0x40002CE")]
	Stock,
	[Token(Token = "0x40002CF")]
	Barrel
}
[Token(Token = "0x200005A")]
public enum Orientation
{
	[Token(Token = "0x40002D1")]
	Left_Right,
	[Token(Token = "0x40002D2")]
	Up_Down,
	[Token(Token = "0x40002D3")]
	Forwards_Backwards
}
[Token(Token = "0x200005B")]
public enum HingeState
{
	[Token(Token = "0x40002D5")]
	Up,
	[Token(Token = "0x40002D6")]
	Down,
	[Token(Token = "0x40002D7")]
	Moving
}
[Token(Token = "0x200005C")]
public enum WeaponComponent
{
	[Token(Token = "0x40002D9")]
	Barrel,
	[Token(Token = "0x40002DA")]
	Trigger,
	[Token(Token = "0x40002DB")]
	Safety
}
[Token(Token = "0x200005D")]
public enum FireModes
{
	[Token(Token = "0x40002DD")]
	Safe,
	[Token(Token = "0x40002DE")]
	Semi,
	[Token(Token = "0x40002DF")]
	Full,
	[Token(Token = "0x40002E0")]
	Burst,
	[Token(Token = "0x40002E1")]
	None,
	[Token(Token = "0x40002E2")]
	Grenade
}
[Token(Token = "0x200005E")]
public enum FireReturn
{
	[Token(Token = "0x40002E4")]
	Fired,
	[Token(Token = "0x40002E5")]
	DidNotFire
}
[Token(Token = "0x200005F")]
public enum FireAnimation
{
	[Token(Token = "0x40002E7")]
	Fire,
	[Token(Token = "0x40002E8")]
	DryFire,
	[Token(Token = "0x40002E9")]
	EmptyFire,
	[Token(Token = "0x40002EA")]
	EndFire
}
[Token(Token = "0x2000060")]
public enum AmmoTypes
{
	[Token(Token = "0x40002EC")]
	Ammo_9x19,
	[Token(Token = "0x40002ED")]
	Ammo_22LR,
	[Token(Token = "0x40002EE")]
	Ammo_30_06,
	[Token(Token = "0x40002EF")]
	Ammo_38SW,
	[Token(Token = "0x40002F0")]
	Ammo_38SW_Magnum,
	[Token(Token = "0x40002F1")]
	Ammo_45ACP,
	[Token(Token = "0x40002F2")]
	Ammo_45ACP_Super,
	[Token(Token = "0x40002F3")]
	Ammo_50Cal,
	[Token(Token = "0x40002F4")]
	Ammo_57x28,
	[Token(Token = "0x40002F5")]
	Ammo_556x45,
	[Token(Token = "0x40002F6")]
	Ammo_762x25,
	[Token(Token = "0x40002F7")]
	Ammo_762x33,
	[Token(Token = "0x40002F8")]
	Ammo_762x51,
	[Token(Token = "0x40002F9")]
	Ammo_765x17,
	[Token(Token = "0x40002FA")]
	Ammo_12G_Red,
	[Token(Token = "0x40002FB")]
	Ammo_338LM,
	[Token(Token = "0x40002FC")]
	Ammo_762x54,
	[Token(Token = "0x40002FD")]
	Ammo_9x39,
	[Token(Token = "0x40002FE")]
	Ammo_762x39,
	[Token(Token = "0x40002FF")]
	Ammo_303British,
	[Token(Token = "0x4000300")]
	Ammo_357,
	[Token(Token = "0x4000301")]
	Ammo_700Nitro,
	[Token(Token = "0x4000302")]
	Ammo_46x30,
	[Token(Token = "0x4000303")]
	Ammo_Grenade40mm,
	[Token(Token = "0x4000304")]
	Ammo_RPG7,
	[Token(Token = "0x4000305")]
	Ammo45Colt,
	[Token(Token = "0x4000306")]
	Ammo_Nagant38,
	[Token(Token = "0x4000307")]
	Ammo_Volcanic,
	[Token(Token = "0x4000308")]
	Ammo_44_40,
	[Token(Token = "0x4000309")]
	Ammo_Remington58,
	[Token(Token = "0x400030A")]
	Ammo_1851Navy
}
[Token(Token = "0x2000061")]
public enum ListType
{
	[Token(Token = "0x400030C")]
	Packs,
	[Token(Token = "0x400030D")]
	Ranges,
	[Token(Token = "0x400030E")]
	Guns,
	[Token(Token = "0x400030F")]
	Attachments,
	[Token(Token = "0x4000310")]
	Achievements,
	[Token(Token = "0x4000311")]
	Friends,
	[Token(Token = "0x4000312")]
	CoinTransactions,
	[Token(Token = "0x4000313")]
	PrizeMoneyTransactions,
	[Token(Token = "0x4000314")]
	Statistics,
	[Token(Token = "0x4000315")]
	Upgrades,
	[Token(Token = "0x4000316")]
	Camouflage,
	[Token(Token = "0x4000317")]
	AttributeUpgrades,
	[Token(Token = "0x4000318")]
	Events,
	[Token(Token = "0x4000319")]
	Challenges,
	[Token(Token = "0x400031A")]
	Dealer,
	[Token(Token = "0x400031B")]
	SearchUsername,
	[Token(Token = "0x400031C")]
	SearchEmail,
	[Token(Token = "0x400031D")]
	LeaderboardsPack,
	[Token(Token = "0x400031E")]
	LeaderboardsEvent,
	[Token(Token = "0x400031F")]
	LeaderboardsResult,
	[Token(Token = "0x4000320")]
	FriendsList
}
[Token(Token = "0x2000062")]
public enum SliderType
{
	[Token(Token = "0x4000322")]
	Camouflage
}
[Token(Token = "0x2000063")]
public enum LoadedScene
{
	[Token(Token = "0x4000324")]
	Base = 0,
	[Token(Token = "0x4000325")]
	Allied = 1,
	[Token(Token = "0x4000326")]
	Lobby = 100,
	[Token(Token = "0x4000327")]
	Simulator = 101
}
[Token(Token = "0x2000064")]
public enum RangeType
{
	[Token(Token = "0x4000329")]
	Simple,
	[Token(Token = "0x400032A")]
	Action,
	[Token(Token = "0x400032B")]
	Heavy,
	[Token(Token = "0x400032C")]
	Sniper,
	[Token(Token = "0x400032D")]
	Any
}
[Token(Token = "0x2000065")]
public enum WeaponType
{
	[Token(Token = "0x400032F")]
	Assault,
	[Token(Token = "0x4000330")]
	Heavy,
	[Token(Token = "0x4000331")]
	Rifle,
	[Token(Token = "0x4000332")]
	SMG,
	[Token(Token = "0x4000333")]
	PDW,
	[Token(Token = "0x4000334")]
	Shotgun,
	[Token(Token = "0x4000335")]
	Battle,
	[Token(Token = "0x4000336")]
	Melee,
	[Token(Token = "0x4000337")]
	Pistol,
	[Token(Token = "0x4000338")]
	Throwable,
	[Token(Token = "0x4000339")]
	Any,
	[Token(Token = "0x400033A")]
	Allied,
	[Token(Token = "0x400033B")]
	Standard,
	[Token(Token = "0x400033C")]
	SWAT,
	[Token(Token = "0x400033D")]
	Custom,
	[Token(Token = "0x400033E")]
	Western
}
[Token(Token = "0x2000066")]
public enum WeaponPack
{
	[Token(Token = "0x4000340")]
	None,
	[Token(Token = "0x4000341")]
	Standard,
	[Token(Token = "0x4000342")]
	Allied,
	[Token(Token = "0x4000343")]
	SWAT,
	[Token(Token = "0x4000344")]
	Seasons,
	[Token(Token = "0x4000345")]
	Western,
	[Token(Token = "0x4000346")]
	Length
}
[Token(Token = "0x2000067")]
public enum LadderPack
{
	[Token(Token = "0x4000348")]
	ShootingAlley,
	[Token(Token = "0x4000349")]
	Default,
	[Token(Token = "0x400034A")]
	Allied,
	[Token(Token = "0x400034B")]
	SWAT,
	[Token(Token = "0x400034C")]
	Seasons,
	[Token(Token = "0x400034D")]
	Western
}
[Token(Token = "0x2000068")]
public enum TargetType
{
	[Token(Token = "0x400034F")]
	Default,
	[Token(Token = "0x4000350")]
	Precision,
	[Token(Token = "0x4000351")]
	Terrorist,
	[Token(Token = "0x4000352")]
	ArmouredTerrorist,
	[Token(Token = "0x4000353")]
	Nominated,
	[Token(Token = "0x4000354")]
	Zombie,
	[Token(Token = "0x4000355")]
	Zombie1,
	[Token(Token = "0x4000356")]
	Zombie2,
	[Token(Token = "0x4000357")]
	Zombie3,
	[Token(Token = "0x4000358")]
	Random,
	[Token(Token = "0x4000359")]
	Civilian,
	[Token(Token = "0x400035A")]
	Clamp,
	[Token(Token = "0x400035B")]
	Clamp2,
	[Token(Token = "0x400035C")]
	Circle
}
[Token(Token = "0x2000069")]
public enum TargetGroup
{
	[Token(Token = "0x400035E")]
	Live,
	[Token(Token = "0x400035F")]
	Multi,
	[Token(Token = "0x4000360")]
	SetPiece
}
[Token(Token = "0x200006A")]
public enum ListCategory
{
	[Token(Token = "0x4000362")]
	WeaponType,
	[Token(Token = "0x4000363")]
	RangeType
}
[Token(Token = "0x200006B")]
public enum PanelMode
{
	[Token(Token = "0x4000365")]
	GunStats,
	[Token(Token = "0x4000366")]
	RangeStats,
	[Token(Token = "0x4000367")]
	GlobalLeaderBoards,
	[Token(Token = "0x4000368")]
	LocalLeaderBoards
}
[Token(Token = "0x200006C")]
public enum TypeOfItem
{
	[Token(Token = "0x400036A")]
	Weapon,
	[Token(Token = "0x400036B")]
	Attachment,
	[Token(Token = "0x400036C")]
	ShootingRange,
	[Token(Token = "0x400036D")]
	Skin,
	[Token(Token = "0x400036E")]
	Pack,
	[Token(Token = "0x400036F")]
	Destructable,
	[Token(Token = "0x4000370")]
	Icon,
	[Token(Token = "0x4000371")]
	Bundle,
	[Token(Token = "0x4000372")]
	Camouflage,
	[Token(Token = "0x4000373")]
	StoreItem,
	[Token(Token = "0x4000374")]
	UpgradeAttachment,
	[Token(Token = "0x4000375")]
	AttributeUpgrade,
	[Token(Token = "0x4000376")]
	NoType,
	[Token(Token = "0x4000377")]
	Consumable,
	[Token(Token = "0x4000378")]
	Licence
}
[Token(Token = "0x200006D")]
public enum AttachmentType
{
	[Token(Token = "0x400037A")]
	notApplicable,
	[Token(Token = "0x400037B")]
	Scope,
	[Token(Token = "0x400037C")]
	Laser,
	[Token(Token = "0x400037D")]
	Flashlight,
	[Token(Token = "0x400037E")]
	Launcher,
	[Token(Token = "0x400037F")]
	Grip,
	[Token(Token = "0x4000380")]
	Bipod,
	[Token(Token = "0x4000381")]
	Handle,
	[Token(Token = "0x4000382")]
	Bayonet,
	[Token(Token = "0x4000383")]
	Suppressor,
	[Token(Token = "0x4000384")]
	IRSpotter,
	[Token(Token = "0x4000385")]
	ThermalScope,
	[Token(Token = "0x4000386")]
	NightVisionScope,
	[Token(Token = "0x4000387")]
	Stock,
	[Token(Token = "0x4000388")]
	Magazine,
	[Token(Token = "0x4000389")]
	Native,
	[Token(Token = "0x400038A")]
	ReflexScope,
	[Token(Token = "0x400038B")]
	SniperScope,
	[Token(Token = "0x400038C")]
	IronSights,
	[Token(Token = "0x400038D")]
	Barrel,
	[Token(Token = "0x400038E")]
	Rail,
	[Token(Token = "0x400038F")]
	SpeedLoader
}
[Token(Token = "0x200006E")]
public enum MagazineSound
{
	[Token(Token = "0x4000391")]
	MagIn,
	[Token(Token = "0x4000392")]
	MagOut,
	[Token(Token = "0x4000393")]
	MagBump,
	[Token(Token = "0x4000394")]
	LidOpen,
	[Token(Token = "0x4000395")]
	LidClose
}
[Token(Token = "0x200006F")]
public enum GameMode
{
	[Token(Token = "0x4000397")]
	Init,
	[Token(Token = "0x4000398")]
	Menu,
	[Token(Token = "0x4000399")]
	GunSelection,
	[Token(Token = "0x400039A")]
	MultiTargetRange,
	[Token(Token = "0x400039B")]
	SimpleRange,
	[Token(Token = "0x400039C")]
	ActionRange,
	[Token(Token = "0x400039D")]
	MarksmanRange,
	[Token(Token = "0x400039E")]
	NominatedTarget,
	[Token(Token = "0x400039F")]
	WaveMode,
	[Token(Token = "0x40003A0")]
	Destruction,
	[Token(Token = "0x40003A1")]
	Zombie,
	[Token(Token = "0x40003A2")]
	HeavyRange,
	[Token(Token = "0x40003A3")]
	OtherRange,
	[Token(Token = "0x40003A4")]
	AllRanges,
	[Token(Token = "0x40003A5")]
	Simulator,
	[Token(Token = "0x40003A6")]
	MapView,
	[Token(Token = "0x40003A7")]
	Upgrades,
	[Token(Token = "0x40003A8")]
	Dealer,
	[Token(Token = "0x40003A9")]
	CurrencyStore,
	[Token(Token = "0x40003AA")]
	Options,
	[Token(Token = "0x40003AB")]
	LeaderBoards,
	[Token(Token = "0x40003AC")]
	Profile,
	[Token(Token = "0x40003AD")]
	Statistics,
	[Token(Token = "0x40003AE")]
	ShootingAlley,
	[Token(Token = "0x40003AF")]
	SideshowRange,
	[Token(Token = "0x40003B0")]
	ChallengeRange,
	[Token(Token = "0x40003B1")]
	MapviewFreinds,
	[Token(Token = "0x40003B2")]
	FlyingFruitRange,
	[Token(Token = "0x40003B3")]
	SideshowBalloon,
	[Token(Token = "0x40003B4")]
	VRLobby,
	[Token(Token = "0x40003B5")]
	VRMapView,
	[Token(Token = "0x40003B6")]
	VRSimulator,
	[Token(Token = "0x40003B7")]
	VRUpgrades,
	[Token(Token = "0x40003B8")]
	VRDealer,
	[Token(Token = "0x40003B9")]
	VROptions,
	[Token(Token = "0x40003BA")]
	VRWelcome,
	[Token(Token = "0x40003BB")]
	DLCStore,
	[Token(Token = "0x40003BC")]
	ControllerHelp,
	[Token(Token = "0x40003BD")]
	Scenario,
	[Token(Token = "0x40003BE")]
	Calibration,
	[Token(Token = "0x40003BF")]
	WeaponConstruction,
	[Token(Token = "0x40003C0")]
	EventPanelInput,
	[Token(Token = "0x40003C1")]
	CubemapPreview
}
[Token(Token = "0x2000070")]
public enum ControlType
{
	[Token(Token = "0x40003C3")]
	GunSelection,
	[Token(Token = "0x40003C4")]
	Thumbstick,
	[Token(Token = "0x40003C5")]
	Tilt,
	[Token(Token = "0x40003C6")]
	ThumbstickSlide,
	[Token(Token = "0x40003C7")]
	Screen
}
[Token(Token = "0x2000071")]
public enum TutorialStepType
{
	[Token(Token = "0x40003C9")]
	Slide,
	[Token(Token = "0x40003CA")]
	SlideBack,
	[Token(Token = "0x40003CB")]
	SlideForward,
	[Token(Token = "0x40003CC")]
	HandleUp,
	[Token(Token = "0x40003CD")]
	HandleDown,
	[Token(Token = "0x40003CE")]
	Fire,
	[Token(Token = "0x40003CF")]
	Reload,
	[Token(Token = "0x40003D0")]
	ShotgunReload,
	[Token(Token = "0x40003D1")]
	SlideRelease
}
[Token(Token = "0x2000072")]
public enum SpawnType
{
	[Token(Token = "0x40003D3")]
	Tagged,
	[Token(Token = "0x40003D4")]
	NamedSpawns,
	[Token(Token = "0x40003D5")]
	Zombie
}
[Token(Token = "0x2000073")]
public enum StoreMode
{
	[Token(Token = "0x40003D7")]
	CategoryView,
	[Token(Token = "0x40003D8")]
	CurrencyDecision,
	[Token(Token = "0x40003D9")]
	GlobalStore,
	[Token(Token = "0x40003DA")]
	PrizeMoneyPurchase,
	[Token(Token = "0x40003DB")]
	CoinPurchase,
	[Token(Token = "0x40003DC")]
	NoStore,
	[Token(Token = "0x40003DD")]
	PurchaseConfirmation
}
[Token(Token = "0x2000074")]
public enum HudStatus
{
	[Token(Token = "0x40003DF")]
	DelayedFollow,
	[Token(Token = "0x40003E0")]
	LockedToPlayspace,
	[Token(Token = "0x40003E1")]
	LockedToHeadset,
	[Token(Token = "0x40003E2")]
	Unspecified
}
[Token(Token = "0x2000075")]
public enum BulletSide
{
	[Token(Token = "0x40003E4")]
	None,
	[Token(Token = "0x40003E5")]
	Right,
	[Token(Token = "0x40003E6")]
	Left
}
[Token(Token = "0x2000076")]
public enum UpgradeMenuButtons
{
	[Token(Token = "0x40003E8")]
	defaultButtons,
	[Token(Token = "0x40003E9")]
	spawnAttachButtons,
	[Token(Token = "0x40003EA")]
	equipDetachButtons
}
[Token(Token = "0x2000077")]
public enum ArrayType
{
	[Token(Token = "0x40003EC")]
	Float,
	[Token(Token = "0x40003ED")]
	Int32,
	[Token(Token = "0x40003EE")]
	Bool,
	[Token(Token = "0x40003EF")]
	String,
	[Token(Token = "0x40003F0")]
	Vector2,
	[Token(Token = "0x40003F1")]
	Vector3,
	[Token(Token = "0x40003F2")]
	Quaternion,
	[Token(Token = "0x40003F3")]
	Color
}
[Token(Token = "0x2000078")]
public enum CurrencyType
{
	[Token(Token = "0x40003F5")]
	Coins,
	[Token(Token = "0x40003F6")]
	PrizeMoney,
	[Token(Token = "0x40003F7")]
	Ammunition,
	[Token(Token = "0x40003F8")]
	SALE_Coins,
	[Token(Token = "0x40003F9")]
	SALE_PrizeMoney,
	[Token(Token = "0x40003FA")]
	Gift,
	[Token(Token = "0x40003FB")]
	Multi,
	[Token(Token = "0x40003FC")]
	Unlock
}
[Token(Token = "0x2000079")]
public enum operation
{
	[Token(Token = "0x40003FE")]
	Get,
	[Token(Token = "0x40003FF")]
	Set
}
[Token(Token = "0x200007A")]
public enum ShowcaseMode
{
	[Token(Token = "0x4000401")]
	Lobby,
	[Token(Token = "0x4000402")]
	Simulator,
	[Token(Token = "0x4000403")]
	Photo,
	[Token(Token = "0x4000404")]
	Animated,
	[Token(Token = "0x4000405")]
	NoShowcase
}
[Token(Token = "0x200007B")]
public enum TargetFallingState
{
	[Token(Token = "0x4000407")]
	Falling_Destroyed,
	[Token(Token = "0x4000408")]
	Falling_Active,
	[Token(Token = "0x4000409")]
	NotFalling
}
[Token(Token = "0x200007C")]
public enum TypeOfTargetHit
{
	[Token(Token = "0x400040B")]
	Normal,
	[Token(Token = "0x400040C")]
	Headshot,
	[Token(Token = "0x400040D")]
	Bullseye,
	[Token(Token = "0x400040E")]
	Destructable,
	[Token(Token = "0x400040F")]
	SideShow,
	[Token(Token = "0x4000410")]
	Civilian
}
[Token(Token = "0x200007D")]
public enum SpawnTargetType
{
	[Token(Token = "0x4000412")]
	Default,
	[Token(Token = "0x4000413")]
	Hostage,
	[Token(Token = "0x4000414")]
	Multi,
	[Token(Token = "0x4000415")]
	Civilian
}
[Token(Token = "0x200007E")]
public enum UpgradeType
{
	[Token(Token = "0x4000417")]
	notApplicable,
	[Token(Token = "0x4000418")]
	RailMount,
	[Token(Token = "0x4000419")]
	RailMountPoint,
	[Token(Token = "0x400041A")]
	BarrelMountPoint,
	[Token(Token = "0x400041B")]
	StockMountPoint,
	[Token(Token = "0x400041C")]
	SideMountPoint,
	[Token(Token = "0x400041D")]
	ScopeMountPoint,
	[Token(Token = "0x400041E")]
	ForegripMountPoint,
	[Token(Token = "0x400041F")]
	RateOfFire,
	[Token(Token = "0x4000420")]
	AmmoCapacity,
	[Token(Token = "0x4000421")]
	ReloadSpeed,
	[Token(Token = "0x4000422")]
	SightingSpeed,
	[Token(Token = "0x4000423")]
	ActionSpeed,
	[Token(Token = "0x4000424")]
	HoldBreath,
	[Token(Token = "0x4000425")]
	Accuracy,
	[Token(Token = "0x4000426")]
	AmmunitionType,
	[Token(Token = "0x4000427")]
	HeavyBarrel,
	[Token(Token = "0x4000428")]
	Licence,
	[Token(Token = "0x4000429")]
	Mastery,
	[Token(Token = "0x400042A")]
	WarsawAttachment
}
[Token(Token = "0x200007F")]
public enum PushTypes
{
	[Token(Token = "0x400042C")]
	UnlockItems,
	[Token(Token = "0x400042D")]
	AwardItems,
	[Token(Token = "0x400042E")]
	Message,
	[Token(Token = "0x400042F")]
	LockItems
}
[Token(Token = "0x2000080")]
public enum StorageType
{
	[Token(Token = "0x4000431")]
	local,
	[Token(Token = "0x4000432")]
	network,
	[Token(Token = "0x4000433")]
	encryptedLocal,
	[Token(Token = "0x4000434")]
	encryptedNetwork
}
[Token(Token = "0x2000081")]
public enum ArrowDirection
{
	[Token(Token = "0x4000436")]
	Left,
	[Token(Token = "0x4000437")]
	Right,
	[Token(Token = "0x4000438")]
	Both,
	[Token(Token = "0x4000439")]
	None
}
[Token(Token = "0x2000082")]
public enum AllowOperationFromSide
{
	[Token(Token = "0x400043B")]
	Both,
	[Token(Token = "0x400043C")]
	Left,
	[Token(Token = "0x400043D")]
	Right
}
[Token(Token = "0x2000083")]
public enum RangeAction
{
	[Token(Token = "0x400043F")]
	None,
	[Token(Token = "0x4000440")]
	SetPiece,
	[Token(Token = "0x4000441")]
	NextWayPoint,
	[Token(Token = "0x4000442")]
	NextCameraLocation
}
[Token(Token = "0x2000084")]
public enum EmbeddedFeature
{
	[Token(Token = "0x4000444")]
	None,
	[Token(Token = "0x4000445")]
	Flashlight
}
[Token(Token = "0x2000085")]
public enum SubwayRailLine
{
	[Token(Token = "0x4000447")]
	Western,
	[Token(Token = "0x4000448")]
	Center,
	[Token(Token = "0x4000449")]
	Eastern,
	[Token(Token = "0x400044A")]
	None
}
[Token(Token = "0x2000086")]
public enum AvatarSkin
{
	[Token(Token = "0x400044C")]
	TransparentBlue,
	[Token(Token = "0x400044D")]
	Black,
	[Token(Token = "0x400044E")]
	Camouflage,
	[Token(Token = "0x400044F")]
	HalloweenTransparent,
	[Token(Token = "0x4000450")]
	HalloweenOpaque
}
[Token(Token = "0x2000087")]
public enum SurfaceType
{
	[Token(Token = "0x4000452")]
	Concrete,
	[Token(Token = "0x4000453")]
	Dust,
	[Token(Token = "0x4000454")]
	Metal,
	[Token(Token = "0x4000455")]
	Wood
}
[Token(Token = "0x2000088")]
public enum Side
{
	[Token(Token = "0x4000457")]
	Left,
	[Token(Token = "0x4000458")]
	Right
}
[Token(Token = "0x2000089")]
public enum VibrationForce
{
	[Token(Token = "0x400045A")]
	None,
	[Token(Token = "0x400045B")]
	Light,
	[Token(Token = "0x400045C")]
	Medium,
	[Token(Token = "0x400045D")]
	Heavy
}
[Token(Token = "0x200008A")]
public enum Digit
{
	[Token(Token = "0x400045F")]
	Thumb,
	[Token(Token = "0x4000460")]
	Index,
	[Token(Token = "0x4000461")]
	Middle,
	[Token(Token = "0x4000462")]
	Ring,
	[Token(Token = "0x4000463")]
	Pinky
}
[Token(Token = "0x200008B")]
public enum RawInputs
{
	[Token(Token = "0x4000465")]
	Trigger,
	[Token(Token = "0x4000466")]
	Grip
}
[Token(Token = "0x200008C")]
public enum HapticsState
{
	[Token(Token = "0x4000468")]
	Full,
	[Token(Token = "0x4000469")]
	Off
}
[Token(Token = "0x200008D")]
public enum TBMControllerType
{
	[Token(Token = "0x400046B")]
	Undefined,
	[Token(Token = "0x400046C")]
	ViveWand,
	[Token(Token = "0x400046D")]
	OculusTouch,
	[Token(Token = "0x400046E")]
	ValveIndex,
	[Token(Token = "0x400046F")]
	PSMoveController,
	[Token(Token = "0x4000470")]
	InsideOutTouch,
	[Token(Token = "0x4000471")]
	ViveCosmos,
	[Token(Token = "0x4000472")]
	OpenVRController,
	[Token(Token = "0x4000473")]
	PicoVRController
}
[Token(Token = "0x200008E")]
public enum TouchQuadrant
{
	[Token(Token = "0x4000475")]
	None,
	[Token(Token = "0x4000476")]
	Center,
	[Token(Token = "0x4000477")]
	West,
	[Token(Token = "0x4000478")]
	East,
	[Token(Token = "0x4000479")]
	South,
	[Token(Token = "0x400047A")]
	North
}
[Token(Token = "0x200008F")]
public enum QuadrantInputType
{
	[Token(Token = "0x400047C")]
	None,
	[Token(Token = "0x400047D")]
	ThumbStick,
	[Token(Token = "0x400047E")]
	Touchpad
}
[Token(Token = "0x2000090")]
public enum IndicatorSizing
{
	[Token(Token = "0x4000480")]
	None,
	[Token(Token = "0x4000481")]
	Small,
	[Token(Token = "0x4000482")]
	Large
}
[Token(Token = "0x2000091")]
public enum NightSightColors
{
	[Token(Token = "0x4000484")]
	Off,
	[Token(Token = "0x4000485")]
	Red,
	[Token(Token = "0x4000486")]
	Green,
	[Token(Token = "0x4000487")]
	White
}
[Token(Token = "0x2000092")]
public enum PerformanceAdjustmentMode
{
	[Token(Token = "0x4000489")]
	None,
	[Token(Token = "0x400048A")]
	Low,
	[Token(Token = "0x400048B")]
	Medium,
	[Token(Token = "0x400048C")]
	High
}
[Token(Token = "0x2000093")]
public enum Holiday
{
	[Token(Token = "0x400048E")]
	None,
	[Token(Token = "0x400048F")]
	LunarNewYears,
	[Token(Token = "0x4000490")]
	Easter,
	[Token(Token = "0x4000491")]
	Halloween,
	[Token(Token = "0x4000492")]
	Xmas,
	[Token(Token = "0x4000493")]
	NewYears,
	[Token(Token = "0x4000494")]
	AprilFools
}
[Token(Token = "0x2000094")]
public enum SubGameMode
{
	[Token(Token = "0x4000496")]
	None,
	[Token(Token = "0x4000497")]
	Simple,
	[Token(Token = "0x4000498")]
	Marksman,
	[Token(Token = "0x4000499")]
	Defend,
	[Token(Token = "0x400049A")]
	WaveDefence,
	[Token(Token = "0x400049B")]
	Survival,
	[Token(Token = "0x400049C")]
	Zombie
}
[Token(Token = "0x2000095")]
public enum ColliderEventType
{
	[Token(Token = "0x400049E")]
	OnEnter,
	[Token(Token = "0x400049F")]
	OnExit,
	[Token(Token = "0x40004A0")]
	Both
}
[Token(Token = "0x2000096")]
public enum TypeOfAttach
{
	[Token(Token = "0x40004A2")]
	Regular,
	[Token(Token = "0x40004A3")]
	Fixed,
	[Token(Token = "0x40004A4")]
	Both
}
[Token(Token = "0x2000097")]
public enum MinOrMax
{
	[Token(Token = "0x40004A6")]
	Min,
	[Token(Token = "0x40004A7")]
	Max
}
[Token(Token = "0x2000098")]
public enum VectorComponent
{
	[Token(Token = "0x40004A9")]
	X,
	[Token(Token = "0x40004AA")]
	Y,
	[Token(Token = "0x40004AB")]
	Z,
	[Token(Token = "0x40004AC")]
	W
}
[Token(Token = "0x2000099")]
public enum TwoHandedGrabType
{
	[Token(Token = "0x40004AE")]
	Off,
	[Token(Token = "0x40004AF")]
	Manual,
	[Token(Token = "0x40004B0")]
	Auto
}
[Token(Token = "0x200009A")]
public enum OffMeshLinkMoveMethod
{
	[Token(Token = "0x40004B2")]
	Teleport,
	[Token(Token = "0x40004B3")]
	Linear,
	[Token(Token = "0x40004B4")]
	Parabola,
	[Token(Token = "0x40004B5")]
	Curve,
	[Token(Token = "0x40004B6")]
	Bezier
}
[Token(Token = "0x200009B")]
public enum LobbyNavVolume
{
	[Token(Token = "0x40004B8")]
	Unspecified,
	[Token(Token = "0x40004B9")]
	MapView,
	[Token(Token = "0x40004BA")]
	Dealer
}
[Token(Token = "0x200009C")]
public enum AxisOffsetType
{
	[Token(Token = "0x40004BC")]
	Position,
	[Token(Token = "0x40004BD")]
	Rotation,
	[Token(Token = "0x40004BE")]
	Both
}
[Token(Token = "0x200009D")]
public enum ValueOperation
{
	[Token(Token = "0x40004C0")]
	Add,
	[Token(Token = "0x40004C1")]
	Subtract,
	[Token(Token = "0x40004C2")]
	Multiply,
	[Token(Token = "0x40004C3")]
	Divide
}
[Token(Token = "0x200009E")]
public enum IconLayout
{
	[Token(Token = "0x40004C5")]
	Radial,
	[Token(Token = "0x40004C6")]
	List
}
[Token(Token = "0x200009F")]
public enum DealerSelectionType
{
	[Token(Token = "0x40004C8")]
	Class,
	[Token(Token = "0x40004C9")]
	Pack
}
[Token(Token = "0x20000A0")]
public enum LobbyLoadOverride
{
	[Token(Token = "0x40004CB")]
	None,
	[Token(Token = "0x40004CC")]
	DlcDealerSwat,
	[Token(Token = "0x40004CD")]
	DlcDealerWestern
}
[Token(Token = "0x20000A1")]
public enum FadeMode
{
	[Token(Token = "0x40004CF")]
	PingPong,
	[Token(Token = "0x40004D0")]
	FadeOut
}
[Serializable]
[Token(Token = "0x20000A2")]
public class EmergeFromCoverInfo
{
	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1670CF4", Offset = "0x1670CF4", VA = "0x1670CF4")]
	public EmergeFromCoverInfo()
	{
	}
}
[Token(Token = "0x20000A3")]
public class Enums : MonoBehaviour
{
	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1670CFC", Offset = "0x1670CFC", VA = "0x1670CFC")]
	public static WeaponType[] GetCurrentlyUsedWeaponTypes()
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1670D70", Offset = "0x1670D70", VA = "0x1670D70")]
	public static bool IsWeaponCategory(WeaponType weaponType)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1670D90", Offset = "0x1670D90", VA = "0x1670D90")]
	public Enums()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ExampleScript : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text batteryText;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool auto;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool activeResearch;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float autoTimer;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float autoDelay;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ForceTubeVRChannel target;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x16710E8", Offset = "0x16710E8", VA = "0x16710E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x167134C", Offset = "0x167134C", VA = "0x167134C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x16718D4", Offset = "0x16718D4", VA = "0x16718D4")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1671990", Offset = "0x1671990", VA = "0x1671990")]
	public void AutoShoot()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x16719A0", Offset = "0x16719A0", VA = "0x16719A0")]
	public void Kick()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1671C18", Offset = "0x1671C18", VA = "0x1671C18")]
	public void Rumble()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1671F00", Offset = "0x1671F00", VA = "0x1671F00")]
	public void SetTargetChannel(int target)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1671F08", Offset = "0x1671F08", VA = "0x1671F08")]
	public void SetActiveResearch()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1672158", Offset = "0x1672158", VA = "0x1672158")]
	public void OpenBluetoothSettings()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x167235C", Offset = "0x167235C", VA = "0x167235C")]
	public ExampleScript()
	{
	}
}
[Token(Token = "0x20000A5")]
public enum AvailableBonusType
{
	[Token(Token = "0x40004D8")]
	HardcoreMode,
	[Token(Token = "0x40004D9")]
	BoltActionRifle,
	[Token(Token = "0x40004DA")]
	Shotgun,
	[Token(Token = "0x40004DB")]
	KnifeKills,
	[Token(Token = "0x40004DC")]
	GrenadeKills,
	[Token(Token = "0x40004DD")]
	PhysicsObjectKills,
	[Token(Token = "0x40004DE")]
	PunchKills,
	[Token(Token = "0x40004DF")]
	EnvironmentExplosives,
	[Token(Token = "0x40004E0")]
	HostagesSaved,
	[Token(Token = "0x40004E1")]
	FruitShot,
	[Token(Token = "0x40004E2")]
	ExtraSurvivalTime
}
[Token(Token = "0x20000A6")]
internal static class BonusRewards
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RewardMinMax[] BONUS_REWARDS;
}
[Token(Token = "0x20000A7")]
public struct RewardMinMax
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int minReward;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int maxReward;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1E2D2DC", Offset = "0x1E2D2DC", VA = "0x1E2D2DC")]
	public RewardMinMax(int min, int max)
	{
	}
}
[Token(Token = "0x20000A8")]
public class ExtraBonus : IComparable<ExtraBonus>
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AvailableBonusType m_bonusType;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_bonusName;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_count;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_cashValue;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RewardMinMax m_minMaxReward;

	[Token(Token = "0x17000128")]
	public AvailableBonusType bonusType
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1672668", Offset = "0x1672668", VA = "0x1672668")]
		get
		{
			return default(AvailableBonusType);
		}
	}

	[Token(Token = "0x17000129")]
	public string bonusName
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1672670", Offset = "0x1672670", VA = "0x1672670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012A")]
	public int count
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1672678", Offset = "0x1672678", VA = "0x1672678")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700012B")]
	public int totalCashValue
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x167292C", Offset = "0x167292C", VA = "0x167292C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700012C")]
	public int individualCashValue
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1672938", Offset = "0x1672938", VA = "0x1672938")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1672378", Offset = "0x1672378", VA = "0x1672378")]
	public ExtraBonus(AvailableBonusType type, RewardMinMax minMaxReward)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1672940", Offset = "0x1672940", VA = "0x1672940")]
	public void SetCount(int newCount)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1672C9C", Offset = "0x1672C9C", VA = "0x1672C9C")]
	public void AddCount()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1672CA8", Offset = "0x1672CA8", VA = "0x1672CA8")]
	public void UpdateCashValue(float progress)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1672CE8", Offset = "0x1672CE8", VA = "0x1672CE8")]
	public string GetCountString()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x16723CC", Offset = "0x16723CC", VA = "0x16723CC")]
	private string GetDisplayNameFromType(AvailableBonusType type)
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1672D8C", Offset = "0x1672D8C", VA = "0x1672D8C", Slot = "4")]
	public int CompareTo(ExtraBonus compare)
	{
		return default(int);
	}
}
[Token(Token = "0x20000A9")]
public class ExtraBonuses
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<AvailableBonusType, ExtraBonus> m_bonuses;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1672E80", Offset = "0x1672E80", VA = "0x1672E80")]
	public ExtraBonuses(float rangeProgress)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1673340", Offset = "0x1673340", VA = "0x1673340")]
	public void SoftResetValues()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x16734D8", Offset = "0x16734D8", VA = "0x16734D8")]
	public List<ExtraBonus> GetValuedBonuses()
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x16736A8", Offset = "0x16736A8", VA = "0x16736A8")]
	public List<ExtraBonus> GetZeroValuedBonuses(int maxEntries)
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1673958", Offset = "0x1673958", VA = "0x1673958")]
	public void IncrementBonusCount(AvailableBonusType bonusTypeToSet)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1673464", Offset = "0x1673464", VA = "0x1673464")]
	public void SetBonusCount(AvailableBonusType bonusTypeToSet, int count)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x16739CC", Offset = "0x16739CC", VA = "0x16739CC")]
	public int GetIndividualBonusValue(AvailableBonusType bonusType)
	{
		return default(int);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1673A3C", Offset = "0x1673A3C", VA = "0x1673A3C")]
	public int GetTotalBonus()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AA")]
public enum ForceTubeVRChannel
{
	[Token(Token = "0x40004ED")]
	all,
	[Token(Token = "0x40004EE")]
	rifle,
	[Token(Token = "0x40004EF")]
	rifleButt,
	[Token(Token = "0x40004F0")]
	rifleBolt,
	[Token(Token = "0x40004F1")]
	pistol1,
	[Token(Token = "0x40004F2")]
	pistol2,
	[Token(Token = "0x40004F3")]
	other,
	[Token(Token = "0x40004F4")]
	vest
}
[Token(Token = "0x20000AB")]
public class ForceTubeVRInterface : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DEC", Offset = "0x8C8DEC")]
	private sealed class <InitAndroid>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool pistolsFirst;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x199022C", Offset = "0x199022C", VA = "0x199022C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x1990274", Offset = "0x1990274", VA = "0x1990274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x198FE00", Offset = "0x198FE00", VA = "0x198FE00")]
		[DebuggerHidden]
		public <InitAndroid>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x198FE2C", Offset = "0x198FE2C", VA = "0x198FE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x198FE30", Offset = "0x198FE30", VA = "0x198FE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1990234", Offset = "0x1990234", VA = "0x1990234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject ForceTubeVRPlugin;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ForceTubeVRInterface instance;

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x167870C", Offset = "0x167870C", VA = "0x167870C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA0BC", Offset = "0x8CA0BC")]
	private static IEnumerator InitAndroid(bool pistolsFirst)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1671190", Offset = "0x1671190", VA = "0x1671190")]
	public static void InitAsync(bool pistolsFirst = false)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1671A54", Offset = "0x1671A54", VA = "0x1671A54")]
	public static void Kick(byte power, ForceTubeVRChannel target = ForceTubeVRChannel.rifle)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1671CD0", Offset = "0x1671CD0", VA = "0x1671CD0")]
	public static void Rumble(byte power, float duration, ForceTubeVRChannel target = ForceTubeVRChannel.rifle)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x16714E0", Offset = "0x16714E0", VA = "0x16714E0")]
	public static void Shoot(byte kickPower, byte rumblePower, float rumbleDuration, ForceTubeVRChannel target = ForceTubeVRChannel.rifle)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1671FF0", Offset = "0x1671FF0", VA = "0x1671FF0")]
	public static void SetActiveResearch(bool active)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x167877C", Offset = "0x167877C", VA = "0x167877C")]
	public static byte TempoToKickPower(float tempo)
	{
		return default(byte);
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x167175C", Offset = "0x167175C", VA = "0x167175C")]
	public static byte GetBatteryLevel()
	{
		return default(byte);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x16721FC", Offset = "0x16721FC", VA = "0x16721FC")]
	public static void OpenBluetoothSettings()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1678904", Offset = "0x1678904", VA = "0x1678904")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1678A64", Offset = "0x1678A64", VA = "0x1678A64")]
	public ForceTubeVRInterface()
	{
	}
}
[Token(Token = "0x20000AC")]
public class GC3WebClient : WebClient
{
	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1678A70", Offset = "0x1678A70", VA = "0x1678A70")]
	public GC3WebClient()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GC3WebClientAsync : GC3WebClient
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Processing;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1678A78", Offset = "0x1678A78", VA = "0x1678A78")]
	public GC3WebClientAsync()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Hash : MonoBehaviour
{
	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1679690", Offset = "0x1679690", VA = "0x1679690")]
	public static string Md5Sum(string strToEncrypt)
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1679834", Offset = "0x1679834", VA = "0x1679834")]
	public Hash()
	{
	}
}
[Token(Token = "0x20000AF")]
public class HeadTrackingDebug : MonoBehaviour
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject head;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float initialOrientationX;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float initialOrientationY;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float initialOrientationZ;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x167983C", Offset = "0x167983C", VA = "0x167983C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x167993C", Offset = "0x167993C", VA = "0x167993C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1679A14", Offset = "0x1679A14", VA = "0x1679A14")]
	public HeadTrackingDebug()
	{
	}
}
[Token(Token = "0x20000B0")]
public interface IInteractHandler : IEventSystemHandler
{
	[Token(Token = "0x60005F8")]
	void OnInteract(BaseEventData eventData);
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C87A8", Offset = "0x8C87A8")]
public class EzguiLanguageFallback : ScriptableObject
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FontReplacement[] replacements;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool defaultOverride;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FontData defaultFont;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1673B6C", Offset = "0x1673B6C", VA = "0x1673B6C")]
	public FontData GetReplacement(TextAsset original)
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1673C78", Offset = "0x1673C78", VA = "0x1673C78")]
	public EzguiLanguageFallback()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B2")]
public class FontReplacement
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TextAsset originalFont;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FontData replacementFont;

	[Token(Token = "0x1700012D")]
	public TextAsset OriginalFont
	{
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x16782CC", Offset = "0x16782CC", VA = "0x16782CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public FontData ReplacementFont
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x16782D4", Offset = "0x16782D4", VA = "0x16782D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x16782DC", Offset = "0x16782DC", VA = "0x16782DC")]
	public FontReplacement()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class FontData
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TextAsset font;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x1700012F")]
	public TextAsset Font
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x16782B4", Offset = "0x16782B4", VA = "0x16782B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public Material Material
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x16782BC", Offset = "0x16782BC", VA = "0x16782BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x16782C4", Offset = "0x16782C4", VA = "0x16782C4")]
	public FontData()
	{
	}
}
[Token(Token = "0x20000B4")]
public class EzguiTextLog : ScriptableObject
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] staticTags;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] overwrittenTags;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] dynamicTags;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1673C80", Offset = "0x1673C80", VA = "0x1673C80")]
	public EzguiTextLog()
	{
	}
}
[Token(Token = "0x20000B5")]
public class SpriteTextWidthFit : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteText text;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float targetWidth;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float original;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastWidth;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1C94EC0", Offset = "0x1C94EC0", VA = "0x1C94EC0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1C94F7C", Offset = "0x1C94F7C", VA = "0x1C94F7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1C95064", Offset = "0x1C95064", VA = "0x1C95064")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1C9509C", Offset = "0x1C9509C", VA = "0x1C9509C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1C94F9C", Offset = "0x1C94F9C", VA = "0x1C94F9C")]
	private void RefreshSize()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1C950FC", Offset = "0x1C950FC", VA = "0x1C950FC")]
	public SpriteTextWidthFit()
	{
	}
}
[Token(Token = "0x20000B6")]
public class MiniJSON
{
	[Token(Token = "0x400050B")]
	private const int TOKEN_NONE = 0;

	[Token(Token = "0x400050C")]
	private const int TOKEN_CURLY_OPEN = 1;

	[Token(Token = "0x400050D")]
	private const int TOKEN_CURLY_CLOSE = 2;

	[Token(Token = "0x400050E")]
	private const int TOKEN_SQUARED_OPEN = 3;

	[Token(Token = "0x400050F")]
	private const int TOKEN_SQUARED_CLOSE = 4;

	[Token(Token = "0x4000510")]
	private const int TOKEN_COLON = 5;

	[Token(Token = "0x4000511")]
	private const int TOKEN_COMMA = 6;

	[Token(Token = "0x4000512")]
	private const int TOKEN_STRING = 7;

	[Token(Token = "0x4000513")]
	private const int TOKEN_NUMBER = 8;

	[Token(Token = "0x4000514")]
	private const int TOKEN_TRUE = 9;

	[Token(Token = "0x4000515")]
	private const int TOKEN_FALSE = 10;

	[Token(Token = "0x4000516")]
	private const int TOKEN_NULL = 11;

	[Token(Token = "0x4000517")]
	private const int BUILDER_CAPACITY = 2000;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static int lastErrorIndex;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static string lastDecode;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1999FDC", Offset = "0x1999FDC", VA = "0x1999FDC")]
	public static object jsonDecode(string json)
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x199A3A8", Offset = "0x199A3A8", VA = "0x199A3A8")]
	public static string jsonEncode(object json)
	{
		return null;
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x199A9F0", Offset = "0x199A9F0", VA = "0x199A9F0")]
	public static bool lastDecodeSuccessful()
	{
		return default(bool);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x199AA5C", Offset = "0x199AA5C", VA = "0x199AA5C")]
	public static int getLastErrorIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x199AAC0", Offset = "0x199AAC0", VA = "0x199AAC0")]
	public static string getLastErrorSnippet()
	{
		return null;
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x199AC40", Offset = "0x199AC40", VA = "0x199AC40")]
	protected static Hashtable parseObject(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x199B52C", Offset = "0x199B52C", VA = "0x199B52C")]
	protected static ArrayList parseArray(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x199A104", Offset = "0x199A104", VA = "0x199A104")]
	protected static object parseValue(char[] json, ref int index, ref bool success)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x199B178", Offset = "0x199B178", VA = "0x199B178")]
	protected static string parseString(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x199B6CC", Offset = "0x199B6CC", VA = "0x199B6CC")]
	protected static double parseNumber(char[] json, ref int index)
	{
		return default(double);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x199B8B0", Offset = "0x199B8B0", VA = "0x199B8B0")]
	protected static int getLastIndexOfNumber(char[] json, int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x199B7FC", Offset = "0x199B7FC", VA = "0x199B7FC")]
	protected static void eatWhitespace(char[] json, ref int index)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x199B100", Offset = "0x199B100", VA = "0x199B100")]
	protected static int lookAhead(char[] json, int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x199AE3C", Offset = "0x199AE3C", VA = "0x199AE3C")]
	protected static int nextToken(char[] json, ref int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x199B964", Offset = "0x199B964", VA = "0x199B964")]
	protected static bool serializeObjectOrArray(object objectOrArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x199BAFC", Offset = "0x199BAFC", VA = "0x199BAFC")]
	protected static bool serializeObject(Hashtable anObject, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x199C1EC", Offset = "0x199C1EC", VA = "0x199C1EC")]
	protected static bool serializeDictionary(Dictionary<string, string> dict, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x199BDD4", Offset = "0x199BDD4", VA = "0x199BDD4")]
	protected static bool serializeArray(ArrayList anArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x199A464", Offset = "0x199A464", VA = "0x199A464")]
	protected static bool serializeValue(object value, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x199BF48", Offset = "0x199BF48", VA = "0x199BF48")]
	protected static void serializeString(string aString, StringBuilder builder)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x199C420", Offset = "0x199C420", VA = "0x199C420")]
	protected static void serializeNumber(double number, StringBuilder builder)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x199C4A8", Offset = "0x199C4A8", VA = "0x199C4A8")]
	public MiniJSON()
	{
	}
}
[Token(Token = "0x20000B7")]
public static class MiniJsonExtensions
{
	[Token(Token = "0x600061F")]
	[Address(RVA = "0x199C524", Offset = "0x199C524", VA = "0x199C524")]
	public static string toJson(this Hashtable obj)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x199C584", Offset = "0x199C584", VA = "0x199C584")]
	public static string toJson(this Dictionary<string, string> obj)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x199C5E4", Offset = "0x199C5E4", VA = "0x199C5E4")]
	public static ArrayList arrayListFromJson(this string json)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x199C694", Offset = "0x199C694", VA = "0x199C694")]
	public static Hashtable hashtableFromJson(this string json)
	{
		return null;
	}
}
[Token(Token = "0x20000B8")]
public class OfflineMessageBuffer : MonoBehaviour
{
	[Token(Token = "0x6000623")]
	[Address(RVA = "0x15DB4EC", Offset = "0x15DB4EC", VA = "0x15DB4EC")]
	public OfflineMessageBuffer()
	{
	}
}
[Token(Token = "0x20000B9")]
public class PS4NPToolkit : MonoBehaviour
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PS4NPToolkit instance;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static InitResult initResult;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static UserProfiles.LocalUsers users;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int primaryUserId;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<Sony.NP.ResponseBase, NpCallbackEvent> callbackEvents;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static object syncObj;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x15DBAF0", Offset = "0x15DBAF0", VA = "0x15DBAF0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x15DBCB0", Offset = "0x15DBCB0", VA = "0x15DBCB0")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x15DBC9C", Offset = "0x15DBC9C", VA = "0x15DBC9C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x15DC50C", Offset = "0x15DC50C", VA = "0x15DC50C")]
	public static Core.UserServiceUserId GetPrimaryUserId()
	{
		return default(Core.UserServiceUserId);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x15DC5F4", Offset = "0x15DC5F4", VA = "0x15DC5F4")]
	public static Core.NpAccountId GetLocalAccountId(int localUserId)
	{
		return default(Core.NpAccountId);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x15DBDAC", Offset = "0x15DBDAC", VA = "0x15DBDAC")]
	private void InitialisePlugin()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x15DC770", Offset = "0x15DC770", VA = "0x15DC770")]
	private static void OnAsyncEvent(NpCallbackEvent callbackEvent)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x15DC228", Offset = "0x15DC228", VA = "0x15DC228")]
	private void FindUsers()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x15DC8EC", Offset = "0x15DC8EC", VA = "0x15DC8EC")]
	public void OutputAsyncResponseEvent(Sony.NP.ResponseBase response)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x15DD0DC", Offset = "0x15DD0DC", VA = "0x15DD0DC")]
	public void LogException(Exception e)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x15DD1E8", Offset = "0x15DD1E8", VA = "0x15DD1E8")]
	public PS4NPToolkit()
	{
	}
}
[Token(Token = "0x20000BA")]
public class PS4TrophyManager : MonoBehaviour
{
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DFC", Offset = "0x8C8DFC")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Core.EmptyResponse response;

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x199093C", Offset = "0x199093C", VA = "0x199093C")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1990944", Offset = "0x1990944", VA = "0x1990944")]
		internal bool <RegisterTrophyPack>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E0C", Offset = "0x8C8E0C")]
	private sealed class <RegisterTrophyPack>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass0_0 <>8__1;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x1FE0F7C", Offset = "0x1FE0F7C", VA = "0x1FE0F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1FE0FC4", Offset = "0x1FE0FC4", VA = "0x1FE0FC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1FE0B48", Offset = "0x1FE0B48", VA = "0x1FE0B48")]
		[DebuggerHidden]
		public <RegisterTrophyPack>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1FE0B74", Offset = "0x1FE0B74", VA = "0x1FE0B74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1FE0B78", Offset = "0x1FE0B78", VA = "0x1FE0B78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1FE0F84", Offset = "0x1FE0F84", VA = "0x1FE0F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E1C", Offset = "0x8C8E1C")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trophies.UnlockedTrophiesResponse response;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1990970", Offset = "0x1990970", VA = "0x1990970")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1990978", Offset = "0x1990978", VA = "0x1990978")]
		internal bool <GetUnlockedTrophies>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E2C", Offset = "0x8C8E2C")]
	private sealed class <GetUnlockedTrophies>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x19917A4", Offset = "0x19917A4", VA = "0x19917A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x19917EC", Offset = "0x19917EC", VA = "0x19917EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1991370", Offset = "0x1991370", VA = "0x1991370")]
		[DebuggerHidden]
		public <GetUnlockedTrophies>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x199139C", Offset = "0x199139C", VA = "0x199139C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x19913A0", Offset = "0x19913A0", VA = "0x19913A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x19917AC", Offset = "0x19917AC", VA = "0x19917AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E3C", Offset = "0x8C8E3C")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trophies.TrophyPackSummaryResponse response;

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x19909A4", Offset = "0x19909A4", VA = "0x19909A4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x19909AC", Offset = "0x19909AC", VA = "0x19909AC")]
		internal bool <GetTrophyPackSummary>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E4C", Offset = "0x8C8E4C")]
	private sealed class <GetTrophyPackSummary>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass2_0 <>8__1;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x1991320", Offset = "0x1991320", VA = "0x1991320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x1991368", Offset = "0x1991368", VA = "0x1991368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x1990ED8", Offset = "0x1990ED8", VA = "0x1990ED8")]
		[DebuggerHidden]
		public <GetTrophyPackSummary>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1990F04", Offset = "0x1990F04", VA = "0x1990F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1990F08", Offset = "0x1990F08", VA = "0x1990F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1991328", Offset = "0x1991328", VA = "0x1991328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E5C", Offset = "0x8C8E5C")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trophies.TrophyPackGroupResponse response;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x19909D8", Offset = "0x19909D8", VA = "0x19909D8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x19909E0", Offset = "0x19909E0", VA = "0x19909E0")]
		internal bool <GetTrophyPackGroup>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E6C", Offset = "0x8C8E6C")]
	private sealed class <GetTrophyPackGroup>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass3_0 <>8__1;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x1990E88", Offset = "0x1990E88", VA = "0x1990E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x1990ED0", Offset = "0x1990ED0", VA = "0x1990ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1990A40", Offset = "0x1990A40", VA = "0x1990A40")]
		[DebuggerHidden]
		public <GetTrophyPackGroup>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1990A6C", Offset = "0x1990A6C", VA = "0x1990A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1990A70", Offset = "0x1990A70", VA = "0x1990A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1990E90", Offset = "0x1990E90", VA = "0x1990E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E7C", Offset = "0x8C8E7C")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Core.EmptyResponse response;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1990A0C", Offset = "0x1990A0C", VA = "0x1990A0C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1990A14", Offset = "0x1990A14", VA = "0x1990A14")]
		internal bool <UnlockTrophy>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E8C", Offset = "0x8C8E8C")]
	private sealed class <UnlockTrophy>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass5_0 <>8__1;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int trophyId;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x1FE1414", Offset = "0x1FE1414", VA = "0x1FE1414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x1FE145C", Offset = "0x1FE145C", VA = "0x1FE145C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1FE0FCC", Offset = "0x1FE0FCC", VA = "0x1FE0FCC")]
		[DebuggerHidden]
		public <UnlockTrophy>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1FE0FF8", Offset = "0x1FE0FF8", VA = "0x1FE0FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1FE0FFC", Offset = "0x1FE0FFC", VA = "0x1FE0FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1FE141C", Offset = "0x1FE141C", VA = "0x1FE141C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x15DD314", Offset = "0x15DD314", VA = "0x15DD314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA15C", Offset = "0x8CA15C")]
	public static IEnumerator RegisterTrophyPack()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x15DD370", Offset = "0x15DD370", VA = "0x15DD370")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA1BC", Offset = "0x8CA1BC")]
	public static IEnumerator GetUnlockedTrophies()
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x15DD3CC", Offset = "0x15DD3CC", VA = "0x15DD3CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA21C", Offset = "0x8CA21C")]
	public static IEnumerator GetTrophyPackSummary()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x15DD428", Offset = "0x15DD428", VA = "0x15DD428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA27C", Offset = "0x8CA27C")]
	public static IEnumerator GetTrophyPackGroup()
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x15DD484", Offset = "0x15DD484", VA = "0x15DD484")]
	private bool IsTrophyUnlocked(int id, Trophies.UnlockedTrophiesResponse response)
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x15DD52C", Offset = "0x15DD52C", VA = "0x15DD52C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA2DC", Offset = "0x8CA2DC")]
	public static IEnumerator UnlockTrophy(int trophyId)
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x15DD598", Offset = "0x15DD598", VA = "0x15DD598")]
	public PS4TrophyManager()
	{
	}
}
[Token(Token = "0x20000BB")]
public class GCVRAutoSaveWriteRequest : FileOps.FileOperationRequest
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string profileData;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string preferenceData;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1678C70", Offset = "0x1678C70", VA = "0x1678C70", Slot = "4")]
	public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1678E10", Offset = "0x1678E10", VA = "0x1678E10")]
	public GCVRAutoSaveWriteRequest()
	{
	}
}
[Token(Token = "0x20000BC")]
public class GCVRAutoSaveWriteResponse : FileOps.FileOperationResponse
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DateTime lastWriteTime;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public long totalFileSizeWritten;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1678E7C", Offset = "0x1678E7C", VA = "0x1678E7C")]
	public GCVRAutoSaveWriteResponse()
	{
	}
}
[Token(Token = "0x20000BD")]
public class GCVRAutoSaveReadRequest : FileOps.FileOperationRequest
{
	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1678A84", Offset = "0x1678A84", VA = "0x1678A84", Slot = "4")]
	public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1678BFC", Offset = "0x1678BFC", VA = "0x1678BFC")]
	public GCVRAutoSaveReadRequest()
	{
	}
}
[Token(Token = "0x20000BE")]
public class GCVRAutoSaveReadResponse : FileOps.FileOperationResponse
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string profileData;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string preferenceData;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1678C04", Offset = "0x1678C04", VA = "0x1678C04")]
	public GCVRAutoSaveReadResponse()
	{
	}
}
[Token(Token = "0x20000BF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C87EC", Offset = "0x8C87EC")]
public class ProjectionMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float width;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currDistance;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currWidth;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currHeight;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x15E7F68", Offset = "0x15E7F68", VA = "0x15E7F68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x15E807C", Offset = "0x15E807C", VA = "0x15E807C")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x15E8548", Offset = "0x15E8548", VA = "0x15E8548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x15E8080", Offset = "0x15E8080", VA = "0x15E8080")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x15E8580", Offset = "0x15E8580", VA = "0x15E8580")]
	public ProjectionMeshGenerator()
	{
	}
}
[Token(Token = "0x20000C0")]
public class RefPointer : MonoBehaviour
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color highlightColour;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1E2BD9C", Offset = "0x1E2BD9C", VA = "0x1E2BD9C")]
	public static void UIButtonDelegate(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1E2BEDC", Offset = "0x1E2BEDC", VA = "0x1E2BEDC")]
	public static void OverStateDelegate(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1E2BF80", Offset = "0x1E2BF80", VA = "0x1E2BF80")]
	public static void UIRadioBtnDelegate(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1E2C07C", Offset = "0x1E2C07C", VA = "0x1E2C07C")]
	public RefPointer()
	{
	}
}
[Token(Token = "0x20000C1")]
public interface IgnoreResourceReference
{
}
[Token(Token = "0x20000C2")]
public class ResourceReferenceBase
{
	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1E2C144", Offset = "0x1E2C144", VA = "0x1E2C144")]
	public ResourceReferenceBase()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ResourceReference<T> : ResourceReferenceBase where T : UnityEngine.Object
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected string m_resourcePath;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected T m_referencedObject;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected string m_hiddenAssetGUID;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected int m_subAssetIndex;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T m_loadedObject;

	[Token(Token = "0x17000131")]
	public T value
	{
		[Token(Token = "0x6000648")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000649")]
	public bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x600064A")]
	public void Unload()
	{
	}

	[Token(Token = "0x600064B")]
	public ResourceRequest LoadAsync()
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	private void AsyncLoadComplete(UnityEngine.AsyncOperation op)
	{
	}

	[Token(Token = "0x600064D")]
	public ResourceReference()
	{
	}
}
[Token(Token = "0x20000C4")]
public static class ResourceReferenceTypes
{
	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1E2C14C", Offset = "0x1E2C14C", VA = "0x1E2C14C")]
	public static Type GetTargetType(Type referenceType)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000C5")]
public class GameObjectReference : ResourceReference<GameObject>
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1679284", Offset = "0x1679284", VA = "0x1679284")]
	public GameObjectReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C6")]
public class AudioClipReference : ResourceReference<AudioClip>
{
	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1EAC144", Offset = "0x1EAC144", VA = "0x1EAC144")]
	public AudioClipReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C7")]
public class Texture2DReference : ResourceReference<Texture2D>
{
	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1C9E708", Offset = "0x1C9E708", VA = "0x1C9E708")]
	public Texture2DReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C8")]
public class SpriteReference : ResourceReference<Sprite>
{
	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1E3C9CC", Offset = "0x1E3C9CC", VA = "0x1E3C9CC")]
	public SpriteReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C9")]
public class MaterialReference : ResourceReference<Material>
{
	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1997A5C", Offset = "0x1997A5C", VA = "0x1997A5C")]
	public MaterialReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CA")]
public class MeshReference : ResourceReference<Mesh>
{
	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1999F90", Offset = "0x1999F90", VA = "0x1999F90")]
	public MeshReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CB")]
public class AnimatorControllerReference : ResourceReference<RuntimeAnimatorController>
{
	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1EABD10", Offset = "0x1EABD10", VA = "0x1EABD10")]
	public AnimatorControllerReference()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ResultLogger : UnityEngine.Object
{
	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1E2C4BC", Offset = "0x1E2C4BC", VA = "0x1E2C4BC")]
	public static void logObject(object result)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1E2C6D0", Offset = "0x1E2C6D0", VA = "0x1E2C6D0")]
	public static void logArraylist(ArrayList result)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1E2CA20", Offset = "0x1E2CA20", VA = "0x1E2CA20")]
	public static void logHashtable(Hashtable result)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1E2CAD8", Offset = "0x1E2CAD8", VA = "0x1E2CAD8")]
	public static void addHashtableToString(StringBuilder builder, Hashtable item)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1E2CF0C", Offset = "0x1E2CF0C", VA = "0x1E2CF0C")]
	public static void addArraylistToString(StringBuilder builder, ArrayList result)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1E2D278", Offset = "0x1E2D278", VA = "0x1E2D278")]
	public ResultLogger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CD")]
public class SaveDataBundle
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Player player;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StorageManager.WeaponConfig[] weaponConfigurations;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1E2D920", Offset = "0x1E2D920", VA = "0x1E2D920")]
	public SaveDataBundle()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1E2D928", Offset = "0x1E2D928", VA = "0x1E2D928")]
	public SaveDataBundle(Player thisPlayer, StorageManager.WeaponConfig[] theseWeaponConfigurations)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1E2D978", Offset = "0x1E2D978", VA = "0x1E2D978")]
	public static SaveDataBundle FromByteArray(byte[] array)
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1E2DCF0", Offset = "0x1E2DCF0", VA = "0x1E2DCF0")]
	public void RegenerateSaveData()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1E2DDF0", Offset = "0x1E2DDF0", VA = "0x1E2DDF0")]
	public static byte[] ToByteArray(SaveDataBundle bundle)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000CE")]
public class SecureInt
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _value;

	[Token(Token = "0x17000132")]
	public int Value
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1E2DFA8", Offset = "0x1E2DFA8", VA = "0x1E2DFA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1E2DFB8", Offset = "0x1E2DFB8", VA = "0x1E2DFB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1E2DFC8", Offset = "0x1E2DFC8", VA = "0x1E2DFC8")]
	public SecureInt()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1E2DFF4", Offset = "0x1E2DFF4", VA = "0x1E2DFF4")]
	public static implicit operator SecureInt(int value)
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1E2E068", Offset = "0x1E2E068", VA = "0x1E2E068")]
	public static implicit operator int(SecureInt value)
	{
		return default(int);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1E2E088", Offset = "0x1E2E088", VA = "0x1E2E088", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000CF")]
public static class ServerManager
{
	[Serializable]
	[Token(Token = "0x200019F")]
	public class SessionDetail : ISerializable
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B6C", Offset = "0x8C9B6C")]
		private ulong <UserId>k__BackingField;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B7C", Offset = "0x8C9B7C")]
		private ulong <LogonId>k__BackingField;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong SessionId;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B8C", Offset = "0x8C9B8C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Email;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CachedPassword;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B9C", Offset = "0x8C9B9C")]
		private string <LogonName>k__BackingField;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BAC", Offset = "0x8C9BAC")]
		private string <Role>k__BackingField;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool PreAuth;

		[Token(Token = "0x17000221")]
		public ulong UserId
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x1FE79B8", Offset = "0x1FE79B8", VA = "0x1FE79B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB00C", Offset = "0x8CB00C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x1FE79C0", Offset = "0x1FE79C0", VA = "0x1FE79C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB01C", Offset = "0x8CB01C")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public ulong LogonId
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x1FE79C8", Offset = "0x1FE79C8", VA = "0x1FE79C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB02C", Offset = "0x8CB02C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x1FE79D0", Offset = "0x1FE79D0", VA = "0x1FE79D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB03C", Offset = "0x8CB03C")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public string UserName
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x1FE79D8", Offset = "0x1FE79D8", VA = "0x1FE79D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB04C", Offset = "0x8CB04C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x1FE79E0", Offset = "0x1FE79E0", VA = "0x1FE79E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB05C", Offset = "0x8CB05C")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public string LogonName
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x1FE79E8", Offset = "0x1FE79E8", VA = "0x1FE79E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB06C", Offset = "0x8CB06C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x1FE79F0", Offset = "0x1FE79F0", VA = "0x1FE79F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB07C", Offset = "0x8CB07C")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public string Role
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x1FE79F8", Offset = "0x1FE79F8", VA = "0x1FE79F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB08C", Offset = "0x8CB08C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x1FE7A00", Offset = "0x1FE7A00", VA = "0x1FE7A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB09C", Offset = "0x8CB09C")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public static string DeviceID
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x1FE7A08", Offset = "0x1FE7A08", VA = "0x1FE7A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1FE7A10", Offset = "0x1FE7A10", VA = "0x1FE7A10")]
		public SessionDetail(ulong sessionId, ulong logonId, string logonName, ulong userId, string userName, bool newDeviceIDInUse, string role)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1FE7B04", Offset = "0x1FE7B04", VA = "0x1FE7B04")]
		public SessionDetail()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1FE7B60", Offset = "0x1FE7B60", VA = "0x1FE7B60")]
		public SessionDetail(ulong sessionId)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1FE7BD0", Offset = "0x1FE7BD0", VA = "0x1FE7BD0")]
		protected SessionDetail(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1FE7FB8", Offset = "0x1FE7FB8", VA = "0x1FE7FB8", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x20001A0")]
	public static class ResponseModels
	{
		[Serializable]
		[Token(Token = "0x20001F0")]
		public class Friend : ISerializable
		{
			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D9C", Offset = "0x8C9D9C")]
			private int <UId>k__BackingField;

			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9DAC", Offset = "0x8C9DAC")]
			private string <Name>k__BackingField;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9DBC", Offset = "0x8C9DBC")]
			private string <Cty>k__BackingField;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9DCC", Offset = "0x8C9DCC")]
			private string <Email>k__BackingField;

			[Token(Token = "0x17000255")]
			public int UId
			{
				[Token(Token = "0x600106A")]
				[Address(RVA = "0x1FEFEF8", Offset = "0x1FEFEF8", VA = "0x1FEFEF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB64C", Offset = "0x8CB64C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600106B")]
				[Address(RVA = "0x1FEFF00", Offset = "0x1FEFF00", VA = "0x1FEFF00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB65C", Offset = "0x8CB65C")]
				set
				{
				}
			}

			[Token(Token = "0x17000256")]
			public string Name
			{
				[Token(Token = "0x600106C")]
				[Address(RVA = "0x1FEFF08", Offset = "0x1FEFF08", VA = "0x1FEFF08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB66C", Offset = "0x8CB66C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106D")]
				[Address(RVA = "0x1FEFF10", Offset = "0x1FEFF10", VA = "0x1FEFF10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB67C", Offset = "0x8CB67C")]
				set
				{
				}
			}

			[Token(Token = "0x17000257")]
			public string Cty
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0x1FEFF18", Offset = "0x1FEFF18", VA = "0x1FEFF18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB68C", Offset = "0x8CB68C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106F")]
				[Address(RVA = "0x1FEFF20", Offset = "0x1FEFF20", VA = "0x1FEFF20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB69C", Offset = "0x8CB69C")]
				set
				{
				}
			}

			[Token(Token = "0x17000258")]
			public string Email
			{
				[Token(Token = "0x6001070")]
				[Address(RVA = "0x1FEFF28", Offset = "0x1FEFF28", VA = "0x1FEFF28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6AC", Offset = "0x8CB6AC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001071")]
				[Address(RVA = "0x1FEFF30", Offset = "0x1FEFF30", VA = "0x1FEFF30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB6BC", Offset = "0x8CB6BC")]
				set
				{
				}
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x1FEFF38", Offset = "0x1FEFF38", VA = "0x1FEFF38")]
			public Friend()
			{
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x1FEFF40", Offset = "0x1FEFF40", VA = "0x1FEFF40")]
			public Friend(int uId, string name, string cty, string email)
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x1FEFFB4", Offset = "0x1FEFFB4", VA = "0x1FEFFB4")]
			protected Friend(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0x1FF01FC", Offset = "0x1FF01FC", VA = "0x1FF01FC", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}
		}
	}

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C92F0", Offset = "0x8C92F0")]
	private static SessionDetail <Session>k__BackingField;

	[Token(Token = "0x17000133")]
	public static SessionDetail Session
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1E2E3F8", Offset = "0x1E2E3F8", VA = "0x1E2E3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA33C", Offset = "0x8CA33C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1E2E45C", Offset = "0x1E2E45C", VA = "0x1E2E45C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA34C", Offset = "0x8CA34C")]
		set
		{
		}
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1E2E4C8", Offset = "0x1E2E4C8", VA = "0x1E2E4C8")]
	static ServerManager()
	{
	}
}
[Token(Token = "0x20000D0")]
[ExecuteInEditMode]
public class SimpleSprite : SpriteRoot
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Vector2 lowerLeftPixel;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Vector2 pixelDimensions;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected bool nullCamera;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1E2F610", Offset = "0x1E2F610", VA = "0x1E2F610", Slot = "45")]
	public override Vector2 GetDefaultPixelSize(PathFromGUIDDelegate guid2Path, AssetLoaderDelegate loader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1E2F61C", Offset = "0x1E2F61C", VA = "0x1E2F61C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1E2F8B4", Offset = "0x1E2F8B4", VA = "0x1E2F8B4", Slot = "14")]
	protected override void Init()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1E2FD04", Offset = "0x1E2FD04", VA = "0x1E2FD04", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1E30180", Offset = "0x1E30180", VA = "0x1E30180", Slot = "15")]
	public override void Clear()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1E301D4", Offset = "0x1E301D4", VA = "0x1E301D4")]
	public void Setup(float w, float h, Vector2 lowerleftPixel, Vector2 pixeldimensions)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1E302D8", Offset = "0x1E302D8", VA = "0x1E302D8")]
	public void Setup(float w, float h, Vector2 lowerleftPixel, Vector2 pixeldimensions, Material material)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1E303FC", Offset = "0x1E303FC", VA = "0x1E303FC", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1E30C08", Offset = "0x1E30C08", VA = "0x1E30C08", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1E30D48", Offset = "0x1E30D48", VA = "0x1E30D48")]
	public void SetLowerLeftPixel(Vector2 lowerLeft)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1E30E24", Offset = "0x1E30E24", VA = "0x1E30E24")]
	public void SetLowerLeftPixel(int x, int y)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1E30E30", Offset = "0x1E30E30", VA = "0x1E30E30")]
	public void SetPixelDimensions(Vector2 size)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1E30ECC", Offset = "0x1E30ECC", VA = "0x1E30ECC")]
	public void SetPixelDimensions(int x, int y)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1E30ED8", Offset = "0x1E30ED8", VA = "0x1E30ED8", Slot = "46")]
	public override int GetStateIndex(string stateName)
	{
		return default(int);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1E30EE0", Offset = "0x1E30EE0", VA = "0x1E30EE0", Slot = "47")]
	public override void SetState(int index)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1E30EE4", Offset = "0x1E30EE4", VA = "0x1E30EE4")]
	public static SimpleSprite Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1E31030", Offset = "0x1E31030", VA = "0x1E31030")]
	public static SimpleSprite Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1E311C4", Offset = "0x1E311C4", VA = "0x1E311C4", Slot = "48")]
	public override void DoMirror()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1E312FC", Offset = "0x1E312FC", VA = "0x1E312FC")]
	public SimpleSprite()
	{
	}
}
[Token(Token = "0x20000D1")]
public class SimpleSpriteMirror : SpriteRootMirror
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 lowerLeftPixel;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector2 pixelDimensions;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x1E313B4", Offset = "0x1E313B4", VA = "0x1E313B4", Slot = "4")]
	public override void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x1E314B0", Offset = "0x1E314B0", VA = "0x1E314B0", Slot = "6")]
	public override bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x1E312F4", Offset = "0x1E312F4", VA = "0x1E312F4")]
	public SimpleSpriteMirror()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C885C", Offset = "0x8C885C")]
[ExecuteInEditMode]
public class SpriteManager : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRoot.WINDING_ORDER winding;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int allocBlockSize;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoUpdateBounds;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawBoundingBox;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool persistent;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	protected bool initialized;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected EZLinkedList<SpriteMesh_Managed> availableBlocks;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool vertsChanged;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	protected bool uvsChanged;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	protected bool colorsChanged;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	protected bool vertCountChanged;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool updateBounds;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected SpriteMesh_Managed[] sprites;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected EZLinkedList<SpriteMesh_Managed> activeBlocks;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<SpriteMesh_Managed> spriteDrawOrder;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected SpriteDrawLayerComparer drawOrderComparer;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float boundUpdateInterval;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected List<SpriteRoot> spriteAddQueue;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Mesh mesh;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Texture texture;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Transform[] bones;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected BoneWeight[] boneWeights;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Matrix4x4[] bindPoses;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3[] vertices;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected int[] triIndices;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector2[] UVs;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Vector2[] UVs2;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Color[] colors;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected SpriteMesh_Managed tempSprite;

	[Token(Token = "0x17000134")]
	public bool IsInitialized
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1E3A488", Offset = "0x1E3A488", VA = "0x1E3A488")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000135")]
	public Renderer ManagedRenderer
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1E3A490", Offset = "0x1E3A490", VA = "0x1E3A490")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x1E368FC", Offset = "0x1E368FC", VA = "0x1E368FC")]
	public Vector2 PixelSpaceToUVSpace(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1E369D0", Offset = "0x1E369D0", VA = "0x1E369D0")]
	public Vector2 PixelSpaceToUVSpace(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x1E369DC", Offset = "0x1E369DC", VA = "0x1E369DC")]
	public Vector2 PixelCoordToUVCoord(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1E36AC4", Offset = "0x1E36AC4", VA = "0x1E36AC4")]
	public Vector2 PixelCoordToUVCoord(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1E36AD0", Offset = "0x1E36AD0", VA = "0x1E36AD0")]
	protected void SetupBoneWeights(SpriteMesh_Managed s)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1E36C60", Offset = "0x1E36C60", VA = "0x1E36C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1E37D08", Offset = "0x1E37D08", VA = "0x1E37D08")]
	protected void InitArrays()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1E3701C", Offset = "0x1E3701C", VA = "0x1E3701C")]
	protected int EnlargeArrays(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1E38260", Offset = "0x1E38260", VA = "0x1E38260")]
	public bool AlreadyAdded(SpriteRoot sprite)
	{
		return default(bool);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1E38378", Offset = "0x1E38378", VA = "0x1E38378")]
	public SpriteMesh_Managed AddSprite(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1E37928", Offset = "0x1E37928", VA = "0x1E37928")]
	public SpriteMesh_Managed AddSprite(SpriteRoot sprite)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1E38998", Offset = "0x1E38998", VA = "0x1E38998")]
	public SpriteRoot CreateSprite(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1E38A18", Offset = "0x1E38A18", VA = "0x1E38A18")]
	public SpriteRoot CreateSprite(GameObject prefab, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1E38BC8", Offset = "0x1E38BC8", VA = "0x1E38BC8")]
	public void RemoveSprite(SpriteRoot sprite)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1E38D10", Offset = "0x1E38D10", VA = "0x1E38D10")]
	public void RemoveSprite(SpriteMesh_Managed sprite)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1E38F74", Offset = "0x1E38F74", VA = "0x1E38F74")]
	public void MoveToFront(SpriteMesh_Managed s)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1E39480", Offset = "0x1E39480", VA = "0x1E39480")]
	public void MoveToBack(SpriteMesh_Managed s)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1E39940", Offset = "0x1E39940", VA = "0x1E39940")]
	public void MoveInfrontOf(SpriteMesh_Managed toMove, SpriteMesh_Managed reference)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1E39E4C", Offset = "0x1E39E4C", VA = "0x1E39E4C")]
	public void MoveBehind(SpriteMesh_Managed toMove, SpriteMesh_Managed reference)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1E386C0", Offset = "0x1E386C0", VA = "0x1E386C0")]
	public void SortDrawingOrder()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1E3A358", Offset = "0x1E3A358", VA = "0x1E3A358")]
	public SpriteMesh_Managed GetSprite(int i)
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1E3A3A0", Offset = "0x1E3A3A0", VA = "0x1E3A3A0")]
	public void UpdatePositions()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1E3A3AC", Offset = "0x1E3A3AC", VA = "0x1E3A3AC")]
	public void UpdateUVs()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1E3A3B8", Offset = "0x1E3A3B8", VA = "0x1E3A3B8")]
	public void UpdateColors()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1E3A3C4", Offset = "0x1E3A3C4", VA = "0x1E3A3C4")]
	public void UpdateBounds()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x1E3A3D0", Offset = "0x1E3A3D0", VA = "0x1E3A3D0")]
	public void ScheduleBoundsUpdate(float seconds)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1E3A438", Offset = "0x1E3A438", VA = "0x1E3A438")]
	public void CancelBoundsUpdate()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1E3A544", Offset = "0x1E3A544", VA = "0x1E3A544", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1E3A6D8", Offset = "0x1E3A6D8", VA = "0x1E3A6D8", Slot = "5")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1E3A854", Offset = "0x1E3A854", VA = "0x1E3A854", Slot = "6")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1E3ACB8", Offset = "0x1E3ACB8", VA = "0x1E3ACB8")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1E3A940", Offset = "0x1E3A940", VA = "0x1E3A940")]
	protected void DrawCenter()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1E3AD9C", Offset = "0x1E3AD9C", VA = "0x1E3AD9C")]
	public SpriteManager()
	{
	}
}
[Token(Token = "0x20000D3")]
public class SpriteDrawLayerComparer : IComparer<SpriteMesh_Managed>
{
	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1E34698", Offset = "0x1E34698", VA = "0x1E34698", Slot = "4")]
	public int Compare(SpriteMesh_Managed a, SpriteMesh_Managed b)
	{
		return default(int);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1E346D4", Offset = "0x1E346D4", VA = "0x1E346D4")]
	public SpriteDrawLayerComparer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D4")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C88CC", Offset = "0x8C88CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C88CC", Offset = "0x8C88CC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C88CC", Offset = "0x8C88CC")]
public class SpriteText : UITextBase
{
	[Token(Token = "0x20001A1")]
	public enum Anchor_Pos
	{
		[Token(Token = "0x40009FB")]
		Upper_Left,
		[Token(Token = "0x40009FC")]
		Upper_Center,
		[Token(Token = "0x40009FD")]
		Upper_Right,
		[Token(Token = "0x40009FE")]
		Middle_Left,
		[Token(Token = "0x40009FF")]
		Middle_Center,
		[Token(Token = "0x4000A00")]
		Middle_Right,
		[Token(Token = "0x4000A01")]
		Lower_Left,
		[Token(Token = "0x4000A02")]
		Lower_Center,
		[Token(Token = "0x4000A03")]
		Lower_Right
	}

	[Token(Token = "0x20001A2")]
	public enum Alignment_Type
	{
		[Token(Token = "0x4000A05")]
		Left,
		[Token(Token = "0x4000A06")]
		Center,
		[Token(Token = "0x4000A07")]
		Right
	}

	[Token(Token = "0x20001A3")]
	protected struct NewlineInsertInfo
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int charDelta;

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1FE95F0", Offset = "0x1FE95F0", VA = "0x1FE95F0")]
		public NewlineInsertInfo(int idx, int delta)
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Multiline]
	public string text;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetZ;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float characterSize;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float characterSpacing;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lineSpacing;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float lineSpaceSize;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Anchor_Pos anchor;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Alignment_Type alignment;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int tabSize;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected string tabSpaces;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextAsset font;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color color;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color originalColor;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool pixelPerfect;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxWidth;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool maxWidthInPixels;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool multiline;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool dynamicLength;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool removeUnsupportedCharacters;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool parseColorTags;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool password;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string maskingCharacter;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected EZScreenPlacement screenPlacer;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool clipped;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	protected bool updateClipping;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Rect3D clippingRect;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected Rect localClipRect;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Vector3 topLeft;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Vector3 bottomRight;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected Vector3 unclippedTL;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected Vector3 unclippedBR;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected Color[] colors;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected bool updateColors;

	[Token(Token = "0x400057C")]
	[HideInInspector]
	public const string colorTag = "[#";

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static string[] colDel;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static char[] newLineDelimiter;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static char[] commaDelimiter;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool isClone;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	protected bool m_awake;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	protected bool m_started;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected bool stringContentChanged;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Vector2 screenSize;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Camera renderCamera;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public Vector2 pixelsPerUV;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected float worldUnitsPerScreenPixel;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected float worldUnitsPerTexel;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected Vector2 worldUnitsPerUV;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool hideAtStart;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	protected bool m_hidden;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	public bool ignoreClipping;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected int capacity;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected string meshString;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected string plainText;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected string displayString;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected List<NewlineInsertInfo> newLineInserts;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected float totalWidth;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected SpriteFont spriteFont;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected SpriteTextMirror mirror;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected Mesh oldMesh;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected Mesh mesh;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected Texture texture;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected Vector3[] vertices;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected int[] faces;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	protected Vector2[] UVs;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected Color[] meshColors;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private StringBuilder displaySB;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private StringBuilder plainSB;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private List<int> colorInserts;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private List<int> colorTags;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private List<Color> cols;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private string[] lines;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool ignoreLocalization;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool customLocalization;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public string customLocalizationTag;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private TextAsset originalFont;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Material originalMaterial;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Language currentLanguage;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private bool localeSubbed;

	[Token(Token = "0x17000136")]
	public override Color Color
	{
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1C9254C", Offset = "0x1C9254C", VA = "0x1C9254C", Slot = "60")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x1C92558", Offset = "0x1C92558", VA = "0x1C92558", Slot = "61")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public override Color OriginalColor
	{
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1C92568", Offset = "0x1C92568", VA = "0x1C92568", Slot = "62")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1C92574", Offset = "0x1C92574", VA = "0x1C92574", Slot = "63")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public override float ZOffset
	{
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1C92580", Offset = "0x1C92580", VA = "0x1C92580", Slot = "78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1C92588", Offset = "0x1C92588", VA = "0x1C92588", Slot = "79")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public override bool IsWidthLimited
	{
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1C92590", Offset = "0x1C92590", VA = "0x1C92590", Slot = "76")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013A")]
	public override float MaxWidth
	{
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1C925A0", Offset = "0x1C925A0", VA = "0x1C925A0", Slot = "94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1C925A8", Offset = "0x1C925A8", VA = "0x1C925A8", Slot = "95")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public override string MaskingCharacter
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1C925C0", Offset = "0x1C925C0", VA = "0x1C925C0", Slot = "88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1C925C8", Offset = "0x1C925C8", VA = "0x1C925C8", Slot = "89")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public override bool Multiline
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1C92640", Offset = "0x1C92640", VA = "0x1C92640", Slot = "90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1C92648", Offset = "0x1C92648", VA = "0x1C92648", Slot = "91")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public override bool RemoveUnsupportedCharacters
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1C9267C", Offset = "0x1C9267C", VA = "0x1C9267C", Slot = "96")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1C92684", Offset = "0x1C92684", VA = "0x1C92684", Slot = "97")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public override bool ParseTags
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1C926B8", Offset = "0x1C926B8", VA = "0x1C926B8", Slot = "98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1C926C0", Offset = "0x1C926C0", VA = "0x1C926C0", Slot = "99")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public override Camera RenderCamera
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1C9296C", Offset = "0x1C9296C", VA = "0x1C9296C", Slot = "104")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1C92974", Offset = "0x1C92974", VA = "0x1C92974", Slot = "105")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public override bool Persistent
	{
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1C92E68", Offset = "0x1C92E68", VA = "0x1C92E68", Slot = "56")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1C92E70", Offset = "0x1C92E70", VA = "0x1C92E70", Slot = "57")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public override string Text
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1C92EFC", Offset = "0x1C92EFC", VA = "0x1C92EFC", Slot = "54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1C92F04", Offset = "0x1C92F04", VA = "0x1C92F04", Slot = "55")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public string PlainText
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1C92FB4", Offset = "0x1C92FB4", VA = "0x1C92FB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000143")]
	public string DisplayString
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1C92FBC", Offset = "0x1C92FBC", VA = "0x1C92FBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1C92FC4", Offset = "0x1C92FC4", VA = "0x1C92FC4", Slot = "68")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1C92FE4", Offset = "0x1C92FE4", VA = "0x1C92FE4", Slot = "69")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public override bool Clipped
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1C93018", Offset = "0x1C93018", VA = "0x1C93018", Slot = "66")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1C93020", Offset = "0x1C93020", VA = "0x1C93020", Slot = "67")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public override float BaseHeight
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1C9364C", Offset = "0x1C9364C", VA = "0x1C9364C", Slot = "82")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000147")]
	public override float LineSpan
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1C93670", Offset = "0x1C93670", VA = "0x1C93670", Slot = "83")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000148")]
	public override Vector3 TopLeft
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1C936C0", Offset = "0x1C936C0", VA = "0x1C936C0", Slot = "72")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000149")]
	public override Vector3 BottomRight
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1C936CC", Offset = "0x1C936CC", VA = "0x1C936CC", Slot = "73")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014A")]
	public override Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1C936D8", Offset = "0x1C936D8", VA = "0x1C936D8", Slot = "74")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014B")]
	public override Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1C9371C", Offset = "0x1C9371C", VA = "0x1C9371C", Slot = "75")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014C")]
	public float TotalWidth
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1C93760", Offset = "0x1C93760", VA = "0x1C93760")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014D")]
	public float TotalScreenWidth
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1C93768", Offset = "0x1C93768", VA = "0x1C93768")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014E")]
	public Vector2 PixelSize
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1C93B84", Offset = "0x1C93B84", VA = "0x1C93B84")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700014F")]
	public override bool Password
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1C93BA4", Offset = "0x1C93BA4", VA = "0x1C93BA4", Slot = "86")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1C93BAC", Offset = "0x1C93BAC", VA = "0x1C93BAC", Slot = "87")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public override Anchor_Pos Anchor
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1C93C2C", Offset = "0x1C93C2C", VA = "0x1C93C2C", Slot = "92")]
		get
		{
			return default(Anchor_Pos);
		}
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1C93C34", Offset = "0x1C93C34", VA = "0x1C93C34", Slot = "93")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public float CharacterSpacing
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1C93CA4", Offset = "0x1C93CA4", VA = "0x1C93CA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1C93CAC", Offset = "0x1C93CAC", VA = "0x1C93CAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public override IControl Parent
	{
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1C93CE0", Offset = "0x1C93CE0", VA = "0x1C93CE0", Slot = "58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1C93CE8", Offset = "0x1C93CE8", VA = "0x1C93CE8", Slot = "59")]
		set
		{
		}
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1C8D174", Offset = "0x1C8D174", VA = "0x1C8D174", Slot = "107")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x1C8D370", Offset = "0x1C8D370", VA = "0x1C8D370", Slot = "106")]
	public override void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1C8D588", Offset = "0x1C8D588", VA = "0x1C8D588")]
	private void StartLanguage()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1C8F04C", Offset = "0x1C8F04C", VA = "0x1C8F04C")]
	public void RefreshLanguage()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1C8F344", Offset = "0x1C8F344", VA = "0x1C8F344", Slot = "108")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1C8FB0C", Offset = "0x1C8FB0C", VA = "0x1C8FB0C")]
	protected void CreateMesh()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1C8D7EC", Offset = "0x1C8D7EC", VA = "0x1C8D7EC")]
	protected void ProcessString(string str)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1C8FD34", Offset = "0x1C8FD34", VA = "0x1C8FD34")]
	protected void DoSingleLineTruncation()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1C8FFA4", Offset = "0x1C8FFA4", VA = "0x1C8FFA4")]
	protected Color ParseColor(string str)
	{
		return default(Color);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1C9013C", Offset = "0x1C9013C", VA = "0x1C9013C")]
	protected Color ParseHexColor(string str)
	{
		return default(Color);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1C90338", Offset = "0x1C90338", VA = "0x1C90338")]
	protected void EnlargeMesh()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1C8EBD4", Offset = "0x1C8EBD4", VA = "0x1C8EBD4")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1C90DBC", Offset = "0x1C90DBC", VA = "0x1C90DBC")]
	protected Vector3 GetStartPos_SingleLine(float baseHeight, float width)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1C90E40", Offset = "0x1C90E40", VA = "0x1C90E40")]
	public int GetDisplayLineCount(int charIndex, out int charLine, out int lineStart, out int lineEnd)
	{
		return default(int);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1C90F58", Offset = "0x1C90F58", VA = "0x1C90F58")]
	public int GetDisplayLineCount()
	{
		return default(int);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1C90FC8", Offset = "0x1C90FC8", VA = "0x1C90FC8", Slot = "84")]
	public override int PlainIndexToDisplayIndex(int plainCharIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1C910B0", Offset = "0x1C910B0", VA = "0x1C910B0", Slot = "85")]
	public override int DisplayIndexToPlainIndex(int dispCharIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1C91198", Offset = "0x1C91198", VA = "0x1C91198")]
	protected float GetLineBaseline(int numLines, int lineNum)
	{
		return default(float);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1C90668", Offset = "0x1C90668", VA = "0x1C90668")]
	protected void Layout_Single_Line()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1C90820", Offset = "0x1C90820", VA = "0x1C90820")]
	protected void Layout_Multiline(string[] lines)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x1C91400", Offset = "0x1C91400", VA = "0x1C91400")]
	protected void ZeroQuad(int i)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1C914C8", Offset = "0x1C914C8", VA = "0x1C914C8")]
	protected void BuildCharacter(int vertNum, int charNum, Vector3 upperLeft, ref SpriteChar ch)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1C91248", Offset = "0x1C91248", VA = "0x1C91248")]
	protected void Layout_Line(Vector3 startPos, string txt, int charIdx)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1C90570", Offset = "0x1C90570", VA = "0x1C90570")]
	protected void ClearMesh()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1C91F7C", Offset = "0x1C91F7C", VA = "0x1C91F7C", Slot = "65")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1C91F94", Offset = "0x1C91F94", VA = "0x1C91F94")]
	public void Delete()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1C920B0", Offset = "0x1C920B0", VA = "0x1C920B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1C92148", Offset = "0x1C92148", VA = "0x1C92148", Slot = "109")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1C92224", Offset = "0x1C92224", VA = "0x1C92224", Slot = "110")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1C92228", Offset = "0x1C92228", VA = "0x1C92228", Slot = "77")]
	public override void Copy(IUIText text)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1C922CC", Offset = "0x1C922CC", VA = "0x1C922CC", Slot = "111")]
	public virtual void Copy(SpriteText s)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1C9249C", Offset = "0x1C9249C", VA = "0x1C9249C")]
	public void CalcSize()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1C924F8", Offset = "0x1C924F8", VA = "0x1C924F8")]
	protected void LayoutText()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1C92528", Offset = "0x1C92528", VA = "0x1C92528", Slot = "64")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1C926F4", Offset = "0x1C926F4", VA = "0x1C926F4")]
	public void SetCharacterSize(float size)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1C92774", Offset = "0x1C92774", VA = "0x1C92774")]
	public void SetLineSpacing(float spacing)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1C927CC", Offset = "0x1C927CC", VA = "0x1C927CC")]
	public void SetMaxWidth(float width)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1C8EFB8", Offset = "0x1C8EFB8", VA = "0x1C8EFB8")]
	public void SetFont(TextAsset newFont, Material fontMaterial)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1C927E4", Offset = "0x1C927E4", VA = "0x1C927E4")]
	public void SetFont(SpriteFont newFont, Material fontMaterial)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1C928EC", Offset = "0x1C928EC", VA = "0x1C928EC")]
	public void SetFontAndText(string newText, TextAsset newFont, Material fontMaterial)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1C9292C", Offset = "0x1C9292C", VA = "0x1C9292C")]
	public void SetPixelToUV(int texWidth, int texHeight)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1C8FC50", Offset = "0x1C8FC50", VA = "0x1C8FC50")]
	public void SetPixelToUV(Texture tex)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1C929B4", Offset = "0x1C929B4", VA = "0x1C929B4", Slot = "101")]
	public override void UpdateCamera()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1C929C8", Offset = "0x1C929C8", VA = "0x1C929C8", Slot = "102")]
	public override void SetCamera()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1C929DC", Offset = "0x1C929DC", VA = "0x1C929DC", Slot = "103")]
	public override void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1C92CFC", Offset = "0x1C92CFC", VA = "0x1C92CFC", Slot = "70")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1C92E60", Offset = "0x1C92E60", VA = "0x1C92E60", Slot = "71")]
	public override bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1C93058", Offset = "0x1C93058", VA = "0x1C93058", Slot = "80")]
	public override Vector3 GetInsertionPointPos(int charIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1C93388", Offset = "0x1C93388", VA = "0x1C93388")]
	public Vector3 GetNearestInsertionPointPos(Vector3 point, ref int insertionPt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1C933D0", Offset = "0x1C933D0", VA = "0x1C933D0", Slot = "81")]
	public override int GetNearestInsertionPoint(Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1C93678", Offset = "0x1C93678", VA = "0x1C93678")]
	public Vector3[] GetVertices()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1C93694", Offset = "0x1C93694", VA = "0x1C93694")]
	public Vector3 GetCenterPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1C93934", Offset = "0x1C93934", VA = "0x1C93934")]
	public float GetWidth(string s)
	{
		return default(float);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1C93970", Offset = "0x1C93970", VA = "0x1C93970")]
	public float GetScreenWidth(string s)
	{
		return default(float);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1C93BF4", Offset = "0x1C93BF4", VA = "0x1C93BF4")]
	public void SetAnchor(Anchor_Pos a)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1C93C6C", Offset = "0x1C93C6C", VA = "0x1C93C6C")]
	public void SetAlignment(Alignment_Type a)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1C93CF0", Offset = "0x1C93CF0", VA = "0x1C93CF0")]
	public Vector2 PixelSpaceToUVSpace(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1C93D2C", Offset = "0x1C93D2C", VA = "0x1C93D2C")]
	public Vector2 PixelSpaceToUVSpace(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1C93D38", Offset = "0x1C93D38", VA = "0x1C93D38")]
	public Vector2 PixelCoordToUVCoord(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1C93D88", Offset = "0x1C93D88", VA = "0x1C93D88")]
	public Vector2 PixelCoordToUVCoord(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1C93D94", Offset = "0x1C93D94", VA = "0x1C93D94")]
	public static SpriteText CreateInstance(IControl control)
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1C944D4", Offset = "0x1C944D4", VA = "0x1C944D4", Slot = "112")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1C94658", Offset = "0x1C94658", VA = "0x1C94658", Slot = "113")]
	public virtual void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1C94668", Offset = "0x1C94668", VA = "0x1C94668", Slot = "114")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1C94678", Offset = "0x1C94678", VA = "0x1C94678")]
	public SpriteText()
	{
	}
}
[Token(Token = "0x20000D5")]
public class SpriteTextMirror
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string text;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset font;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offsetZ;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float characterSize;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float characterSpacing;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lineSpacing;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteText.Anchor_Pos anchor;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public SpriteText.Alignment_Type alignment;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int tabSize;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color color;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxWidth;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool maxWidthInPixels;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool pixelPerfect;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera renderCamera;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool hideAtStart;

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1C94BB0", Offset = "0x1C94BB0", VA = "0x1C94BB0", Slot = "4")]
	public virtual void Mirror(SpriteText s)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1C94C68", Offset = "0x1C94C68", VA = "0x1C94C68", Slot = "5")]
	public virtual bool Validate(SpriteText s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1C94C70", Offset = "0x1C94C70", VA = "0x1C94C70", Slot = "6")]
	public virtual bool DidChange(SpriteText s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1C94650", Offset = "0x1C94650", VA = "0x1C94650")]
	public SpriteTextMirror()
	{
	}
}
[Token(Token = "0x20000D6")]
public class AutoSprite : AutoSpriteBase
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public TextureAnim[] textureAnimations;

	[Token(Token = "0x17000153")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1EAC190", Offset = "0x1EAC190", VA = "0x1EAC190", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1EAC198", Offset = "0x1EAC198", VA = "0x1EAC198", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1EAC1A8", Offset = "0x1EAC1A8", VA = "0x1EAC1A8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1EAC424", Offset = "0x1EAC424", VA = "0x1EAC424", Slot = "14")]
	protected override void Init()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1EAC42C", Offset = "0x1EAC42C", VA = "0x1EAC42C")]
	public AutoSprite()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D7")]
public class TextureAnim
{
	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int loopCycles;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool loopReverse;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framerate;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UVAnimation.ANIM_END_ACTION onAnimEnd;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string[] framePaths;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string[] frameGUIDs;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public CSpriteFrame[] spriteFrames;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool useUnitySprite;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Sprite unitySprite;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1C9E754", Offset = "0x1C9E754", VA = "0x1C9E754")]
	public void Allocate()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1C9E934", Offset = "0x1C9E934", VA = "0x1C9E934")]
	public TextureAnim()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1C9E964", Offset = "0x1C9E964", VA = "0x1C9E964")]
	public TextureAnim(string n)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1C9E9A8", Offset = "0x1C9E9A8", VA = "0x1C9E9A8")]
	public void RefreshUnitySprite()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1C9EB84", Offset = "0x1C9EB84", VA = "0x1C9EB84")]
	public void Copy(TextureAnim a)
	{
	}
}
[Token(Token = "0x20000D8")]
public abstract class AutoSpriteBase : SpriteBase, ISpriteAggregator, ISpritePackable
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	protected Texture2D[] sourceTextures;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	protected CSpriteFrame[] spriteFrames;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public bool doNotTrimImages;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public UVAnimation[] animations;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	protected UVAnimation curAnim;

	[Token(Token = "0x17000154")]
	public abstract TextureAnim[] States
	{
		[Token(Token = "0x6000723")]
		get;
		[Token(Token = "0x6000724")]
		set;
	}

	[Token(Token = "0x17000155")]
	public virtual CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1EAC43C", Offset = "0x1EAC43C", VA = "0x1EAC43C", Slot = "81")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	public virtual TextureAnim DefaultState
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1EAC4E0", Offset = "0x1EAC4E0", VA = "0x1EAC4E0", Slot = "82")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000157")]
	public virtual bool SupportsArbitraryAnimations
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1EAE940", Offset = "0x1EAE940", VA = "0x1EAE940", Slot = "84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000158")]
	public virtual bool DoNotTrimImages
	{
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1EAEB58", Offset = "0x1EAEB58", VA = "0x1EAEB58", Slot = "86")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1EAEB60", Offset = "0x1EAEB60", VA = "0x1EAEB60", Slot = "87")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public Texture2D[] SourceTextures
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1EAF4D4", Offset = "0x1EAF4D4", VA = "0x1EAF4D4", Slot = "65")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015A")]
	public CSpriteFrame[] SpriteFrames
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1EAF4DC", Offset = "0x1EAF4DC", VA = "0x1EAF4DC", Slot = "66")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1EAC56C", Offset = "0x1EAC56C", VA = "0x1EAC56C", Slot = "45")]
	public override Vector2 GetDefaultPixelSize(PathFromGUIDDelegate guid2Path, AssetLoaderDelegate loader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1EAC22C", Offset = "0x1EAC22C", VA = "0x1EAC22C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1EAC954", Offset = "0x1EAC954", VA = "0x1EAC954", Slot = "15")]
	public override void Clear()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1EAC9A8", Offset = "0x1EAC9A8", VA = "0x1EAC9A8")]
	public void Setup(float w, float h)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1EACA7C", Offset = "0x1EACA7C", VA = "0x1EACA7C")]
	public void Setup(float w, float h, Material material)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1EACB6C", Offset = "0x1EACB6C", VA = "0x1EACB6C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1EACE5C", Offset = "0x1EACE5C", VA = "0x1EACE5C", Slot = "83")]
	public virtual void CopyAll(SpriteRoot s)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1EAD1D4", Offset = "0x1EAD1D4", VA = "0x1EAD1D4", Slot = "56")]
	public override bool StepAnim(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1EAD720", Offset = "0x1EAD720", VA = "0x1EAD720")]
	protected void CallAnimCompleteDelegate()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1EAD738", Offset = "0x1EAD738", VA = "0x1EAD738")]
	public void PlayAnim(UVAnimation anim, int frame)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1EAD90C", Offset = "0x1EAD90C", VA = "0x1EAD90C")]
	public void PlayAnim(UVAnimation anim)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1EAD914", Offset = "0x1EAD914", VA = "0x1EAD914")]
	public void PlayAnim(int index, int frame)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1EADA38", Offset = "0x1EADA38", VA = "0x1EADA38", Slot = "57")]
	public override void PlayAnim(int index)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1EADB4C", Offset = "0x1EADB4C", VA = "0x1EADB4C")]
	public void PlayAnim(string name, int frame)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1EADC9C", Offset = "0x1EADC9C", VA = "0x1EADC9C", Slot = "58")]
	public override void PlayAnim(string name)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1EADCA4", Offset = "0x1EADCA4", VA = "0x1EADCA4")]
	public void PlayAnimInReverse(UVAnimation anim)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1EADDF0", Offset = "0x1EADDF0", VA = "0x1EADDF0")]
	public void PlayAnimInReverse(UVAnimation anim, int frame)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1EADF5C", Offset = "0x1EADF5C", VA = "0x1EADF5C", Slot = "59")]
	public override void PlayAnimInReverse(int index)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1EAE06C", Offset = "0x1EAE06C", VA = "0x1EAE06C")]
	public void PlayAnimInReverse(int index, int frame)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1EAE190", Offset = "0x1EAE190", VA = "0x1EAE190", Slot = "60")]
	public override void PlayAnimInReverse(string name)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1EAE2F0", Offset = "0x1EAE2F0", VA = "0x1EAE2F0")]
	public void PlayAnimInReverse(string name, int frame)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1EAE464", Offset = "0x1EAE464", VA = "0x1EAE464")]
	public void DoAnim(int index)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1EAE494", Offset = "0x1EAE494", VA = "0x1EAE494")]
	public void DoAnim(string name)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1EAE4F8", Offset = "0x1EAE4F8", VA = "0x1EAE4F8")]
	public void DoAnim(UVAnimation anim)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1EAE518", Offset = "0x1EAE518", VA = "0x1EAE518")]
	public void SetCurFrame(int index)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1EAE5A0", Offset = "0x1EAE5A0", VA = "0x1EAE5A0")]
	public void SetFrame(UVAnimation anim, int frameNum)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1EAE5E4", Offset = "0x1EAE5E4", VA = "0x1EAE5E4")]
	public void SetFrame(string anim, int frameNum)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1EAE630", Offset = "0x1EAE630", VA = "0x1EAE630")]
	public void SetFrame(int anim, int frameNum)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1EAE67C", Offset = "0x1EAE67C", VA = "0x1EAE67C", Slot = "61")]
	public override void StopAnim()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1EAE6C0", Offset = "0x1EAE6C0", VA = "0x1EAE6C0")]
	public void UnpauseAnim()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1EAE6DC", Offset = "0x1EAE6DC", VA = "0x1EAE6DC", Slot = "62")]
	protected override void AddToAnimatedList()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1EAE788", Offset = "0x1EAE788", VA = "0x1EAE788", Slot = "63")]
	protected override void RemoveFromAnimatedList()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1EAE7F4", Offset = "0x1EAE7F4", VA = "0x1EAE7F4")]
	public UVAnimation GetCurAnim()
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1EAE7FC", Offset = "0x1EAE7FC", VA = "0x1EAE7FC")]
	public UVAnimation GetAnim(string name)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1EAE8A0", Offset = "0x1EAE8A0", VA = "0x1EAE8A0", Slot = "46")]
	public override int GetStateIndex(string stateName)
	{
		return default(int);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1EAE930", Offset = "0x1EAE930", VA = "0x1EAE930", Slot = "47")]
	public override void SetState(int index)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1EAE948", Offset = "0x1EAE948", VA = "0x1EAE948", Slot = "85")]
	public virtual Material GetPackedMaterial(out string errString)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1EAEB6C", Offset = "0x1EAEB6C", VA = "0x1EAEB6C", Slot = "88")]
	public virtual void Aggregate(PathFromGUIDDelegate guid2Path, LoadAssetDelegate load, GUIDFromPathDelegate path2Guid)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1EAC434", Offset = "0x1EAC434", VA = "0x1EAC434")]
	protected AutoSpriteBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1EAF4E4", Offset = "0x1EAF4E4", VA = "0x1EAF4E4", Slot = "70")]
	private GameObject ISpriteAggregator.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1EAF4EC", Offset = "0x1EAF4EC", VA = "0x1EAF4EC", Slot = "72")]
	private GameObject ISpritePackable.get_gameObject()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000D9")]
public class EZTransitionList
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EZTransition[] list;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1670320", Offset = "0x1670320", VA = "0x1670320")]
	public EZTransitionList(EZTransition[] l)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x16703A8", Offset = "0x16703A8", VA = "0x16703A8")]
	public EZTransitionList()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1670438", Offset = "0x1670438", VA = "0x1670438")]
	public void Clone(int source, bool force)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1670528", Offset = "0x1670528", VA = "0x1670528")]
	public void CloneAsNeeded(int source)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1670530", Offset = "0x1670530", VA = "0x1670530")]
	public void CloneAll(int source)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1670538", Offset = "0x1670538", VA = "0x1670538")]
	public void MarkAllInitialized()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1670598", Offset = "0x1670598", VA = "0x1670598")]
	public string[] GetTransitionNames()
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x16706A8", Offset = "0x16706A8", VA = "0x16706A8")]
	public void CopyTo(EZTransitionList target)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x16706B0", Offset = "0x16706B0", VA = "0x16706B0")]
	public void CopyTo(EZTransitionList target, bool copyInit)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x16707A0", Offset = "0x16707A0", VA = "0x16707A0")]
	public void CopyToNew(EZTransitionList target)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x16707A8", Offset = "0x16707A8", VA = "0x16707A8")]
	public void CopyToNew(EZTransitionList target, bool copyInit)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DA")]
public class EZTransition
{
	[Token(Token = "0x20001A4")]
	public delegate void OnTransitionEndDelegate(EZTransition transition);

	[Token(Token = "0x20001A5")]
	public delegate void OnTransitionStartDelegate(EZTransition transition);

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EZAnimation.ANIM_TYPE[] animationTypes;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimParams[] animParams;

	[NonSerialized]
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected EZLinkedList<EZLinkedListNode<EZAnimation>> runningAnims;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected EZLinkedList<EZLinkedListNode<EZAnimation>> idleAnims;

	[NonSerialized]
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected GameObject mainSubject;

	[NonSerialized]
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected EZLinkedList<EZLinkedListNode<GameObject>> subSubjects;

	[NonSerialized]
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected OnTransitionEndDelegate onEndDelegates;

	[NonSerialized]
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OnTransitionStartDelegate onStartDelegates;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool initialized;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	protected bool forcedStop;

	[Token(Token = "0x1700015B")]
	public EZLinkedList<EZLinkedListNode<GameObject>> SubSubjects
	{
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x166EF38", Offset = "0x166EF38", VA = "0x166EF38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015C")]
	public GameObject MainSubject
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x166EF40", Offset = "0x166EF40", VA = "0x166EF40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x166EF48", Offset = "0x166EF48", VA = "0x166EF48")]
		set
		{
		}
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x166E9B4", Offset = "0x166E9B4", VA = "0x166E9B4")]
	public EZTransition(string n)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x166EB40", Offset = "0x166EB40", VA = "0x166EB40")]
	public void AddTransitionStartDelegate(OnTransitionStartDelegate del)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x166EBCC", Offset = "0x166EBCC", VA = "0x166EBCC")]
	public void RemoveTransitionStartDelegate(OnTransitionStartDelegate del)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x166EC58", Offset = "0x166EC58", VA = "0x166EC58")]
	public void AddTransitionEndDelegate(OnTransitionEndDelegate del)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x166ECE4", Offset = "0x166ECE4", VA = "0x166ECE4")]
	public void RemoveTransitionEndDelegate(OnTransitionEndDelegate del)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x166ED70", Offset = "0x166ED70", VA = "0x166ED70")]
	public void Copy(EZTransition src)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x166EF50", Offset = "0x166EF50", VA = "0x166EF50")]
	public void AddSubSubject(GameObject go)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x166F04C", Offset = "0x166F04C", VA = "0x166F04C")]
	public void RemoveSubSubject(GameObject go)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x166F1A8", Offset = "0x166F1A8", VA = "0x166F1A8")]
	public void OnAnimEnd(EZAnimation anim)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x166A490", Offset = "0x166A490", VA = "0x166A490")]
	public EZLinkedListNode<EZAnimation> AddRunningAnim()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x166F398", Offset = "0x166F398", VA = "0x166F398")]
	public void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x166F6D4", Offset = "0x166F6D4", VA = "0x166F6D4")]
	public void End()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x166F4CC", Offset = "0x166F4CC", VA = "0x166F4CC")]
	public void StopSafe()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x166F87C", Offset = "0x166F87C", VA = "0x166F87C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x166F974", Offset = "0x166F974", VA = "0x166F974")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x166FA68", Offset = "0x166FA68", VA = "0x166FA68")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x166FB88", Offset = "0x166FB88", VA = "0x166FB88")]
	public bool IsRunningAtAll()
	{
		return default(bool);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x166F378", Offset = "0x166F378", VA = "0x166F378")]
	protected void CallEndDelegates()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x166FBE0", Offset = "0x166FBE0", VA = "0x166FBE0")]
	public int Add()
	{
		return default(int);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x166FE04", Offset = "0x166FE04", VA = "0x166FE04")]
	public AnimParams AddElement(EZAnimation.ANIM_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x166FE74", Offset = "0x166FE74", VA = "0x166FE74")]
	public void Remove(int index)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1670054", Offset = "0x1670054", VA = "0x1670054")]
	public void SetElementType(int index, EZAnimation.ANIM_TYPE type)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x16700B4", Offset = "0x16700B4", VA = "0x16700B4")]
	public string[] GetNames()
	{
		return null;
	}
}
[Token(Token = "0x20000DB")]
public interface IGUIHelper
{
	[Token(Token = "0x600077A")]
	Enum EnumField(string label, Enum selected);

	[Token(Token = "0x600077B")]
	Color ColorField(string label, Color color);

	[Token(Token = "0x600077C")]
	Vector3 Vector3Field(string label, Vector3 val);

	[Token(Token = "0x600077D")]
	float FloatField(string label, float val);

	[Token(Token = "0x600077E")]
	string TextField(string label, string val);

	[Token(Token = "0x600077F")]
	UnityEngine.Object ObjectField(string label, Type type, UnityEngine.Object obj);
}
[Token(Token = "0x20000DC")]
public class EZAnimator : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8E9C", Offset = "0x8C8E9C")]
	private sealed class <AnimPump>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EZLinkedListIterator<EZAnimation> <i>5__2;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x198ED4C", Offset = "0x198ED4C", VA = "0x198ED4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x198ED94", Offset = "0x198ED94", VA = "0x198ED94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x198E9EC", Offset = "0x198E9EC", VA = "0x198E9EC")]
		[DebuggerHidden]
		public <AnimPump>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x198EA18", Offset = "0x198EA18", VA = "0x198EA18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x198EA1C", Offset = "0x198EA1C", VA = "0x198EA1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x198ED54", Offset = "0x198ED54", VA = "0x198ED54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EAC", Offset = "0x8C8EAC")]
	private sealed class <PumpStarter>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EZAnimator <>4__this;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x198EEAC", Offset = "0x198EEAC", VA = "0x198EEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x198EEF4", Offset = "0x198EEF4", VA = "0x198EEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x198ED9C", Offset = "0x198ED9C", VA = "0x198ED9C")]
		[DebuggerHidden]
		public <PumpStarter>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x198EDC8", Offset = "0x198EDC8", VA = "0x198EDC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x198EDCC", Offset = "0x198EDCC", VA = "0x198EDCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x198EEB4", Offset = "0x198EEB4", VA = "0x198EEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EZAnimator s_Instance;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static Dictionary<EZAnimation.ANIM_TYPE, EZLinkedList<EZAnimation>> freeAnimPool;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static EZLinkedList<EZAnimation> animations;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static bool pumpIsRunning;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected static bool pumpIsDone;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected static float _timeScale;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static float startTime;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected static float time;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static float elapsed;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static EZAnimation anim;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static float timePaused;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int i;

	[Token(Token = "0x1700015D")]
	public static EZAnimator instance
	{
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1664B60", Offset = "0x1664B60", VA = "0x1664B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015E")]
	public static float timeScale
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1669414", Offset = "0x1669414", VA = "0x1669414")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1669478", Offset = "0x1669478", VA = "0x1669478")]
		set
		{
		}
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x16692D0", Offset = "0x16692D0", VA = "0x16692D0")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1669370", Offset = "0x1669370", VA = "0x1669370")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x16694FC", Offset = "0x16694FC", VA = "0x16694FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1669618", Offset = "0x1669618", VA = "0x1669618")]
	private void OnLevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x166991C", Offset = "0x166991C", VA = "0x166991C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x16699CC", Offset = "0x16699CC", VA = "0x16699CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA35C", Offset = "0x8CA35C")]
	protected static IEnumerator AnimPump()
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1669A28", Offset = "0x1669A28", VA = "0x1669A28")]
	public void StartAnimationPump()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1669AFC", Offset = "0x1669AFC", VA = "0x1669AFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA3BC", Offset = "0x8CA3BC")]
	protected IEnumerator PumpStarter()
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x1669B74", Offset = "0x1669B74", VA = "0x1669B74")]
	public static void StopAnimationPump()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1669B78", Offset = "0x1669B78", VA = "0x1669B78")]
	protected EZAnimation CreateNewAnimation(EZAnimation.ANIM_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1664D44", Offset = "0x1664D44", VA = "0x1664D44")]
	public EZAnimation GetAnimation(EZAnimation.ANIM_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x16697B0", Offset = "0x16697B0", VA = "0x16697B0")]
	protected static void ReturnAnimToPool(EZAnimation anim)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1665510", Offset = "0x1665510", VA = "0x1665510")]
	public void AddAnimation(EZAnimation a)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x166A180", Offset = "0x166A180", VA = "0x166A180")]
	public void AddTransition(EZTransition t)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x166A624", Offset = "0x166A624", VA = "0x166A624")]
	public void Cancel(object obj)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1667818", Offset = "0x1667818", VA = "0x1667818")]
	public void StopAnimation(EZAnimation a)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1667890", Offset = "0x1667890", VA = "0x1667890")]
	public void StopAnimation(EZAnimation a, bool end)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x166A7D8", Offset = "0x166A7D8", VA = "0x166A7D8")]
	public void Stop(object obj)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x166A7E0", Offset = "0x166A7E0", VA = "0x166A7E0")]
	public void Stop(object obj, bool end)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1665318", Offset = "0x1665318", VA = "0x1665318")]
	public void Stop(object obj, EZAnimation.ANIM_TYPE type, bool end)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x166A9BC", Offset = "0x166A9BC", VA = "0x166A9BC")]
	public void End(object obj)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x166A9C4", Offset = "0x166A9C4", VA = "0x166A9C4")]
	public void EndAll()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x166AAB0", Offset = "0x166AAB0", VA = "0x166AAB0")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x166ABA4", Offset = "0x166ABA4", VA = "0x166ABA4")]
	public void PauseAll()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x166ACC4", Offset = "0x166ACC4", VA = "0x166ACC4")]
	public void UnpauseAll()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x166ADE0", Offset = "0x166ADE0", VA = "0x166ADE0")]
	public static int GetNumAnimations()
	{
		return default(int);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x166AE5C", Offset = "0x166AE5C", VA = "0x166AE5C")]
	public EZAnimator()
	{
	}
}
[Token(Token = "0x20000DD")]
public abstract class EZAnimation : IEZLinkedListItem<EZAnimation>
{
	[Token(Token = "0x20001A8")]
	public enum ANIM_TYPE
	{
		[Token(Token = "0x4000A11")]
		AnimClip,
		[Token(Token = "0x4000A12")]
		FadeSprite,
		[Token(Token = "0x4000A13")]
		FadeMaterial,
		[Token(Token = "0x4000A14")]
		FadeText,
		[Token(Token = "0x4000A15")]
		Translate,
		[Token(Token = "0x4000A16")]
		PunchPosition,
		[Token(Token = "0x4000A17")]
		Crash,
		[Token(Token = "0x4000A18")]
		SmoothCrash,
		[Token(Token = "0x4000A19")]
		Shake,
		[Token(Token = "0x4000A1A")]
		Scale,
		[Token(Token = "0x4000A1B")]
		PunchScale,
		[Token(Token = "0x4000A1C")]
		Rotate,
		[Token(Token = "0x4000A1D")]
		PunchRotation,
		[Token(Token = "0x4000A1E")]
		ShakeRotation,
		[Token(Token = "0x4000A1F")]
		CrashRotation,
		[Token(Token = "0x4000A20")]
		FadeAudio,
		[Token(Token = "0x4000A21")]
		TuneAudio,
		[Token(Token = "0x4000A22")]
		TranslateScreen,
		[Token(Token = "0x4000A23")]
		FadeSpriteAlpha,
		[Token(Token = "0x4000A24")]
		FadeTextAlpha,
		[Token(Token = "0x4000A25")]
		RotateEuler
	}

	[Token(Token = "0x20001A9")]
	public enum ANIM_MODE
	{
		[Token(Token = "0x4000A27")]
		By,
		[Token(Token = "0x4000A28")]
		To,
		[Token(Token = "0x4000A29")]
		FromTo
	}

	[Token(Token = "0x20001AA")]
	public delegate void CompletionDelegate(EZAnimation anim);

	[Token(Token = "0x20001AB")]
	public delegate float Interpolator(float time, float start, float delta, float duration);

	[Token(Token = "0x20001AC")]
	public enum EASING_TYPE
	{
		[Token(Token = "0x4000A2B")]
		Default = -1,
		[Token(Token = "0x4000A2C")]
		Linear,
		[Token(Token = "0x4000A2D")]
		BackIn,
		[Token(Token = "0x4000A2E")]
		BackOut,
		[Token(Token = "0x4000A2F")]
		BackInOut,
		[Token(Token = "0x4000A30")]
		BackOutIn,
		[Token(Token = "0x4000A31")]
		BounceIn,
		[Token(Token = "0x4000A32")]
		BounceOut,
		[Token(Token = "0x4000A33")]
		BounceInOut,
		[Token(Token = "0x4000A34")]
		BounceOutIn,
		[Token(Token = "0x4000A35")]
		CircularIn,
		[Token(Token = "0x4000A36")]
		CircularOut,
		[Token(Token = "0x4000A37")]
		CircularInOut,
		[Token(Token = "0x4000A38")]
		CircularOutIn,
		[Token(Token = "0x4000A39")]
		CubicIn,
		[Token(Token = "0x4000A3A")]
		CubicOut,
		[Token(Token = "0x4000A3B")]
		CubicInOut,
		[Token(Token = "0x4000A3C")]
		CubicOutIn,
		[Token(Token = "0x4000A3D")]
		ElasticIn,
		[Token(Token = "0x4000A3E")]
		ElasticOut,
		[Token(Token = "0x4000A3F")]
		ElasticInOut,
		[Token(Token = "0x4000A40")]
		ElasticOutIn,
		[Token(Token = "0x4000A41")]
		ExponentialIn,
		[Token(Token = "0x4000A42")]
		ExponentialOut,
		[Token(Token = "0x4000A43")]
		ExponentialInOut,
		[Token(Token = "0x4000A44")]
		ExponentialOutIn,
		[Token(Token = "0x4000A45")]
		QuadraticIn,
		[Token(Token = "0x4000A46")]
		QuadraticOut,
		[Token(Token = "0x4000A47")]
		QuadraticInOut,
		[Token(Token = "0x4000A48")]
		QuadraticOutIn,
		[Token(Token = "0x4000A49")]
		QuarticIn,
		[Token(Token = "0x4000A4A")]
		QuarticOut,
		[Token(Token = "0x4000A4B")]
		QuarticInOut,
		[Token(Token = "0x4000A4C")]
		QuarticOutIn,
		[Token(Token = "0x4000A4D")]
		QuinticIn,
		[Token(Token = "0x4000A4E")]
		QuinticOut,
		[Token(Token = "0x4000A4F")]
		QuinticInOut,
		[Token(Token = "0x4000A50")]
		QuinticOutIn,
		[Token(Token = "0x4000A51")]
		SinusoidalIn,
		[Token(Token = "0x4000A52")]
		SinusoidalOut,
		[Token(Token = "0x4000A53")]
		SinusoidalInOut,
		[Token(Token = "0x4000A54")]
		SinusoidalOutIn,
		[Token(Token = "0x4000A55")]
		Spring
	}

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ANIM_TYPE type;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool pingPong;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool repeatDelay;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool restartOnRepeat;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool running;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_paused;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected object data;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected ANIM_MODE m_mode;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float direction;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float timeElapsed;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float wait;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float m_wait;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float duration;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float interval;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected CompletionDelegate completedDelegate;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected CompletionDelegate startDelegate;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Interpolator interpolator;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected EZAnimation m_prev;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected EZAnimation m_next;

	[Token(Token = "0x1700015F")]
	public object Data
	{
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1667568", Offset = "0x1667568", VA = "0x1667568")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1667570", Offset = "0x1667570", VA = "0x1667570")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public float Duration
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1667578", Offset = "0x1667578", VA = "0x1667578")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000161")]
	public float Wait
	{
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1667580", Offset = "0x1667580", VA = "0x1667580")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000162")]
	public bool Paused
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1667588", Offset = "0x1667588", VA = "0x1667588")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1667590", Offset = "0x1667590", VA = "0x1667590")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public ANIM_MODE Mode
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x16675A8", Offset = "0x16675A8", VA = "0x16675A8")]
		get
		{
			return default(ANIM_MODE);
		}
	}

	[Token(Token = "0x17000164")]
	public CompletionDelegate CompletedDelegate
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x16675B0", Offset = "0x16675B0", VA = "0x16675B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x16675B8", Offset = "0x16675B8", VA = "0x16675B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public CompletionDelegate StartDelegate
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x16675C0", Offset = "0x16675C0", VA = "0x16675C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x16675C8", Offset = "0x16675C8", VA = "0x16675C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public EZAnimation prev
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x16692B0", Offset = "0x16692B0", VA = "0x16692B0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x16692B8", Offset = "0x16692B8", VA = "0x16692B8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000167")]
	public EZAnimation next
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x16692C0", Offset = "0x16692C0", VA = "0x16692C0", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x16692C8", Offset = "0x16692C8", VA = "0x16692C8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x16675D0", Offset = "0x16675D0", VA = "0x16675D0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007AB")]
	public abstract bool Start(GameObject sub, AnimParams parms);

	[Token(Token = "0x60007AC")]
	protected abstract void DoAnim();

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1667614", Offset = "0x1667614", VA = "0x1667614", Slot = "10")]
	public virtual bool Step(float timeDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x16677A8", Offset = "0x16677A8", VA = "0x16677A8", Slot = "11")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1664A1C", Offset = "0x1664A1C", VA = "0x1664A1C")]
	public void _stop()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1667820", Offset = "0x1667820", VA = "0x1667820")]
	public void End()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x16679C4", Offset = "0x16679C4", VA = "0x16679C4")]
	public void _cancel()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x16647FC", Offset = "0x16647FC", VA = "0x16647FC", Slot = "12")]
	public virtual void _end()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x16679CC", Offset = "0x16679CC", VA = "0x16679CC", Slot = "13")]
	protected virtual void LoopReset()
	{
	}

	[Token(Token = "0x60007B4")]
	public abstract object GetSubject();

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x16648A8", Offset = "0x16648A8", VA = "0x16648A8", Slot = "15")]
	protected virtual void WaitDone()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x16652BC", Offset = "0x16652BC", VA = "0x16652BC")]
	protected void StartCommon()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x16679D0", Offset = "0x16679D0", VA = "0x16679D0")]
	public void ResetDefaults()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1667A20", Offset = "0x1667A20", VA = "0x1667A20")]
	public static float linear(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1667A30", Offset = "0x1667A30", VA = "0x1667A30")]
	public static float quadraticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1667A44", Offset = "0x1667A44", VA = "0x1667A44")]
	public static float quadraticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1667A60", Offset = "0x1667A60", VA = "0x1667A60")]
	public static float quadraticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1667AB0", Offset = "0x1667AB0", VA = "0x1667AB0")]
	public static float quadraticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1667B04", Offset = "0x1667B04", VA = "0x1667B04")]
	public static float cubicIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1667B1C", Offset = "0x1667B1C", VA = "0x1667B1C")]
	public static float cubicOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1667B44", Offset = "0x1667B44", VA = "0x1667B44")]
	public static float cubicInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1667B98", Offset = "0x1667B98", VA = "0x1667B98")]
	public static float cubicOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1667BF8", Offset = "0x1667BF8", VA = "0x1667BF8")]
	public static float quarticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1667C14", Offset = "0x1667C14", VA = "0x1667C14")]
	public static float quarticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1667C3C", Offset = "0x1667C3C", VA = "0x1667C3C")]
	public static float quarticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1667C98", Offset = "0x1667C98", VA = "0x1667C98")]
	public static float quarticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1667D00", Offset = "0x1667D00", VA = "0x1667D00")]
	public static float quinticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1667D20", Offset = "0x1667D20", VA = "0x1667D20")]
	public static float quinticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1667D50", Offset = "0x1667D50", VA = "0x1667D50")]
	public static float quinticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1667DB4", Offset = "0x1667DB4", VA = "0x1667DB4")]
	public static float quinticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1667E24", Offset = "0x1667E24", VA = "0x1667E24")]
	public static float sinusIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1667E64", Offset = "0x1667E64", VA = "0x1667E64")]
	public static float sinusOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1667EA0", Offset = "0x1667EA0", VA = "0x1667EA0")]
	public static float sinusInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1667EEC", Offset = "0x1667EEC", VA = "0x1667EEC")]
	public static float sinusOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1667F6C", Offset = "0x1667F6C", VA = "0x1667F6C")]
	public static float expIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1667FAC", Offset = "0x1667FAC", VA = "0x1667FAC")]
	public static float expOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1667FEC", Offset = "0x1667FEC", VA = "0x1667FEC")]
	public static float expInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1668068", Offset = "0x1668068", VA = "0x1668068")]
	public static float expOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x16680F0", Offset = "0x16680F0", VA = "0x16680F0")]
	public static float circIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1668144", Offset = "0x1668144", VA = "0x1668144")]
	public static float circOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1668198", Offset = "0x1668198", VA = "0x1668198")]
	public static float circInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1668220", Offset = "0x1668220", VA = "0x1668220")]
	public static float circOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x16682CC", Offset = "0x16682CC", VA = "0x16682CC")]
	public static float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1668340", Offset = "0x1668340", VA = "0x1668340")]
	public static float spring(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x16683F0", Offset = "0x16683F0", VA = "0x16683F0")]
	public static float elasticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1668404", Offset = "0x1668404", VA = "0x1668404")]
	public static float elasticIn(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x16684E8", Offset = "0x16684E8", VA = "0x16684E8")]
	public static float elasticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x16684FC", Offset = "0x16684FC", VA = "0x16684FC")]
	public static float elasticOut(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x16685DC", Offset = "0x16685DC", VA = "0x16685DC")]
	public static float elasticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x16685F8", Offset = "0x16685F8", VA = "0x16685F8")]
	public static float elasticInOut(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1668748", Offset = "0x1668748", VA = "0x1668748")]
	public static float elasticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x166875C", Offset = "0x166875C", VA = "0x166875C")]
	public static float elasticOutIn(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1668788", Offset = "0x1668788", VA = "0x1668788")]
	public static float backIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x16687B8", Offset = "0x16687B8", VA = "0x16687B8")]
	public static float backIn(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x16687E0", Offset = "0x16687E0", VA = "0x16687E0")]
	public static float backOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1668820", Offset = "0x1668820", VA = "0x1668820")]
	public static float backOut(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1668854", Offset = "0x1668854", VA = "0x1668854")]
	public static float backInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x16688D4", Offset = "0x16688D4", VA = "0x16688D4")]
	public static float backInOut(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1668954", Offset = "0x1668954", VA = "0x1668954")]
	public static float backOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1668960", Offset = "0x1668960", VA = "0x1668960")]
	public static float backOutIn(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x16689DC", Offset = "0x16689DC", VA = "0x16689DC")]
	public static float bounceIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1668A10", Offset = "0x1668A10", VA = "0x1668A10")]
	public static float bounceOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1668AD8", Offset = "0x1668AD8", VA = "0x1668AD8")]
	public static float bounceInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1668B58", Offset = "0x1668B58", VA = "0x1668B58")]
	public static float bounceOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1668BB0", Offset = "0x1668BB0", VA = "0x1668BB0")]
	public static Interpolator GetInterpolator(EASING_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1665604", Offset = "0x1665604", VA = "0x1665604")]
	protected EZAnimation()
	{
	}
}
[Token(Token = "0x20000DE")]
public class FadeSprite : EZAnimation
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SpriteRoot sprite;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1675260", Offset = "0x1675260", VA = "0x1675260", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1675268", Offset = "0x1675268", VA = "0x1675268", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1675320", Offset = "0x1675320", VA = "0x1675320", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1675374", Offset = "0x1675374", VA = "0x1675374", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x167543C", Offset = "0x167543C", VA = "0x167543C", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1675590", Offset = "0x1675590", VA = "0x1675590")]
	public static FadeSprite Do(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1675914", Offset = "0x1675914", VA = "0x1675914")]
	public static FadeSprite Do(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1675AB0", Offset = "0x1675AB0", VA = "0x1675AB0", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1675A5C", Offset = "0x1675A5C", VA = "0x1675A5C")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1675708", Offset = "0x1675708", VA = "0x1675708")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1675DF4", Offset = "0x1675DF4", VA = "0x1675DF4")]
	public void Start()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x166A058", Offset = "0x166A058", VA = "0x166A058")]
	public FadeSprite()
	{
	}
}
[Token(Token = "0x20000DF")]
public class FadeSpriteAlpha : EZAnimation
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SpriteRoot sprite;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1675F04", Offset = "0x1675F04", VA = "0x1675F04", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1675F0C", Offset = "0x1675F0C", VA = "0x1675F0C", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1675FC4", Offset = "0x1675FC4", VA = "0x1675FC4", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1676018", Offset = "0x1676018", VA = "0x1676018", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x16760FC", Offset = "0x16760FC", VA = "0x16760FC", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x16761E4", Offset = "0x16761E4", VA = "0x16761E4")]
	public static FadeSpriteAlpha Do(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1676544", Offset = "0x1676544", VA = "0x1676544")]
	public static FadeSpriteAlpha Do(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x16766E0", Offset = "0x16766E0", VA = "0x16766E0", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x167668C", Offset = "0x167668C", VA = "0x167668C")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x167635C", Offset = "0x167635C", VA = "0x167635C")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1676A24", Offset = "0x1676A24", VA = "0x1676A24")]
	public void Start()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x166A108", Offset = "0x166A108", VA = "0x166A108")]
	public FadeSpriteAlpha()
	{
	}
}
[Token(Token = "0x20000E0")]
public class FadeMaterial : EZAnimation
{
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Material mat;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x16745D4", Offset = "0x16745D4", VA = "0x16745D4", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x16745DC", Offset = "0x16745DC", VA = "0x16745DC", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x167468C", Offset = "0x167468C", VA = "0x167468C", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x16746E0", Offset = "0x16746E0", VA = "0x16746E0", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1674794", Offset = "0x1674794", VA = "0x1674794", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x16748E0", Offset = "0x16748E0", VA = "0x16748E0")]
	public static FadeMaterial Do(Material material, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1674C5C", Offset = "0x1674C5C", VA = "0x1674C5C")]
	public static FadeMaterial Do(Material material, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1674E64", Offset = "0x1674E64", VA = "0x1674E64", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1674DA4", Offset = "0x1674DA4", VA = "0x1674DA4")]
	public void Start(Material material, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1674A58", Offset = "0x1674A58", VA = "0x1674A58")]
	public void Start(Material material, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1675158", Offset = "0x1675158", VA = "0x1675158")]
	public void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x166A090", Offset = "0x166A090", VA = "0x166A090")]
	public FadeMaterial()
	{
	}
}
[Token(Token = "0x20000E1")]
public class FadeText : EZAnimation
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected UITextBase text;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1676B34", Offset = "0x1676B34", VA = "0x1676B34", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1676B3C", Offset = "0x1676B3C", VA = "0x1676B3C", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1676BF4", Offset = "0x1676BF4", VA = "0x1676BF4", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1676C48", Offset = "0x1676C48", VA = "0x1676C48", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1676D04", Offset = "0x1676D04", VA = "0x1676D04", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1676E58", Offset = "0x1676E58", VA = "0x1676E58")]
	public static FadeText Do(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x16771DC", Offset = "0x16771DC", VA = "0x16771DC")]
	public static FadeText Do(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x16773EC", Offset = "0x16773EC", VA = "0x16773EC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1677324", Offset = "0x1677324", VA = "0x1677324")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1676FD0", Offset = "0x1676FD0", VA = "0x1676FD0")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x166A0CC", Offset = "0x166A0CC", VA = "0x166A0CC")]
	public FadeText()
	{
	}
}
[Token(Token = "0x20000E2")]
public class FadeTextAlpha : EZAnimation
{
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected UITextBase text;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1677738", Offset = "0x1677738", VA = "0x1677738", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1677740", Offset = "0x1677740", VA = "0x1677740", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x16777F8", Offset = "0x16777F8", VA = "0x16777F8", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x167784C", Offset = "0x167784C", VA = "0x167784C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1677910", Offset = "0x1677910", VA = "0x1677910", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x16779F8", Offset = "0x16779F8", VA = "0x16779F8")]
	public static FadeTextAlpha Do(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1677D58", Offset = "0x1677D58", VA = "0x1677D58")]
	public static FadeTextAlpha Do(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1677F68", Offset = "0x1677F68", VA = "0x1677F68", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1677EA0", Offset = "0x1677EA0", VA = "0x1677EA0")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1677B70", Offset = "0x1677B70", VA = "0x1677B70")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x166A144", Offset = "0x166A144", VA = "0x166A144")]
	public FadeTextAlpha()
	{
	}
}
[Token(Token = "0x20000E3")]
public class AnimateRotation : EZAnimation
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GameObject subject;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Transform subTrans;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Quaternion temp;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Quaternion delta;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Quaternion start;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Quaternion end;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1EA872C", Offset = "0x1EA872C", VA = "0x1EA872C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1EA8734", Offset = "0x1EA8734", VA = "0x1EA8734", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1EA87F8", Offset = "0x1EA87F8", VA = "0x1EA87F8", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1EA8824", Offset = "0x1EA8824", VA = "0x1EA8824", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1EA88E4", Offset = "0x1EA88E4", VA = "0x1EA88E4", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1EA8A48", Offset = "0x1EA8A48", VA = "0x1EA8A48")]
	public static AnimateRotation Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1EA8DEC", Offset = "0x1EA8DEC", VA = "0x1EA8DEC")]
	public static AnimateRotation Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1EA906C", Offset = "0x1EA906C", VA = "0x1EA906C", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1EA8F34", Offset = "0x1EA8F34", VA = "0x1EA8F34")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1EA8BB0", Offset = "0x1EA8BB0", VA = "0x1EA8BB0")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1EA92A8", Offset = "0x1EA92A8", VA = "0x1EA92A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1EA93C4", Offset = "0x1EA93C4", VA = "0x1EA93C4")]
	public AnimateRotation()
	{
	}
}
[Token(Token = "0x20000E4")]
public class AnimateRotationEuler : EZAnimation
{
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GameObject subject;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Transform subTrans;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 start;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 delta;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 end;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector3 temp;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1EA93F0", Offset = "0x1EA93F0", VA = "0x1EA93F0", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1EA93F8", Offset = "0x1EA93F8", VA = "0x1EA93F8", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1EA94BC", Offset = "0x1EA94BC", VA = "0x1EA94BC", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1EA94FC", Offset = "0x1EA94FC", VA = "0x1EA94FC", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1EA95C0", Offset = "0x1EA95C0", VA = "0x1EA95C0", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1EA96F8", Offset = "0x1EA96F8", VA = "0x1EA96F8")]
	public static AnimateRotationEuler Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1EA9A14", Offset = "0x1EA9A14", VA = "0x1EA9A14")]
	public static AnimateRotationEuler Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1EA9C94", Offset = "0x1EA9C94", VA = "0x1EA9C94", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1EA9B5C", Offset = "0x1EA9B5C", VA = "0x1EA9B5C")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1EA9860", Offset = "0x1EA9860", VA = "0x1EA9860")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1EA9ED0", Offset = "0x1EA9ED0", VA = "0x1EA9ED0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1EA9FF0", Offset = "0x1EA9FF0", VA = "0x1EA9FF0")]
	public AnimateRotationEuler()
	{
	}
}
[Token(Token = "0x20000E5")]
public class AnimatePosition : EZAnimation
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 delta;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 end;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1EA7B00", Offset = "0x1EA7B00", VA = "0x1EA7B00", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1EA7B08", Offset = "0x1EA7B08", VA = "0x1EA7B08", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1EA7BCC", Offset = "0x1EA7BCC", VA = "0x1EA7BCC", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1EA7C0C", Offset = "0x1EA7C0C", VA = "0x1EA7C0C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1EA7CD0", Offset = "0x1EA7CD0", VA = "0x1EA7CD0", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1EA7E08", Offset = "0x1EA7E08", VA = "0x1EA7E08")]
	public static AnimatePosition Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1EA8124", Offset = "0x1EA8124", VA = "0x1EA8124")]
	public static AnimatePosition Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1EA83A4", Offset = "0x1EA83A4", VA = "0x1EA83A4", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1EA826C", Offset = "0x1EA826C", VA = "0x1EA826C")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1EA7F70", Offset = "0x1EA7F70", VA = "0x1EA7F70")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1EA85E0", Offset = "0x1EA85E0", VA = "0x1EA85E0")]
	public void Start()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1EA8700", Offset = "0x1EA8700", VA = "0x1EA8700")]
	public AnimatePosition()
	{
	}
}
[Token(Token = "0x20000E6")]
public class AnimateScreenPosition : EZAnimation
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 delta;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 end;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected EZScreenPlacement subSP;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1EAAC54", Offset = "0x1EAAC54", VA = "0x1EAAC54", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1EAAC5C", Offset = "0x1EAAC5C", VA = "0x1EAAC5C", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1EAAD40", Offset = "0x1EAAD40", VA = "0x1EAAD40", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1EAAD80", Offset = "0x1EAAD80", VA = "0x1EAAD80", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1EAAE40", Offset = "0x1EAAE40", VA = "0x1EAAE40", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1EAAF84", Offset = "0x1EAAF84", VA = "0x1EAAF84")]
	public static AnimateScreenPosition Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1EAB46C", Offset = "0x1EAB46C", VA = "0x1EAB46C")]
	public static AnimateScreenPosition Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1EAB850", Offset = "0x1EAB850", VA = "0x1EAB850", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1EAB5B4", Offset = "0x1EAB5B4", VA = "0x1EAB5B4")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1EAB0EC", Offset = "0x1EAB0EC", VA = "0x1EAB0EC")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1EABBC4", Offset = "0x1EABBC4", VA = "0x1EABBC4")]
	public void Start()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1EABCE4", Offset = "0x1EABCE4", VA = "0x1EABCE4")]
	public AnimateScreenPosition()
	{
	}
}
[Token(Token = "0x20000E7")]
public class AnimateScale : EZAnimation
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 delta;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 end;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1EAA01C", Offset = "0x1EAA01C", VA = "0x1EAA01C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1EAA024", Offset = "0x1EAA024", VA = "0x1EAA024", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1EAA0E8", Offset = "0x1EAA0E8", VA = "0x1EAA0E8", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1EAA128", Offset = "0x1EAA128", VA = "0x1EAA128", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1EAA1EC", Offset = "0x1EAA1EC", VA = "0x1EAA1EC", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1EAA324", Offset = "0x1EAA324", VA = "0x1EAA324")]
	public static AnimateScale Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1EAA64C", Offset = "0x1EAA64C", VA = "0x1EAA64C")]
	public static AnimateScale Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1EAA8CC", Offset = "0x1EAA8CC", VA = "0x1EAA8CC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1EAA794", Offset = "0x1EAA794", VA = "0x1EAA794")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1EAA48C", Offset = "0x1EAA48C", VA = "0x1EAA48C")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1EAAB08", Offset = "0x1EAAB08", VA = "0x1EAAB08")]
	public void Start()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1EAAC28", Offset = "0x1EAAC28", VA = "0x1EAAC28")]
	public AnimateScale()
	{
	}
}
[Token(Token = "0x20000E8")]
public class PunchPosition : EZAnimation
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 temp;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float factor;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x15E85A0", Offset = "0x15E85A0", VA = "0x15E85A0", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x15E85A8", Offset = "0x15E85A8", VA = "0x15E85A8", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x15E866C", Offset = "0x15E866C", VA = "0x15E866C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x15E8708", Offset = "0x15E8708", VA = "0x15E8708", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x15E8844", Offset = "0x15E8844", VA = "0x15E8844")]
	public static PunchPosition Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x15E8A90", Offset = "0x15E8A90", VA = "0x15E8A90", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x15E8974", Offset = "0x15E8974", VA = "0x15E8974")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x15E8C0C", Offset = "0x15E8C0C", VA = "0x15E8C0C")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x15E8DE8", Offset = "0x15E8DE8", VA = "0x15E8DE8")]
	public PunchPosition()
	{
	}
}
[Token(Token = "0x20000E9")]
public class PunchScale : EZAnimation
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 temp;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float factor;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x15E9698", Offset = "0x15E9698", VA = "0x15E9698", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x15E96A0", Offset = "0x15E96A0", VA = "0x15E96A0", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x15E9764", Offset = "0x15E9764", VA = "0x15E9764", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x15E9800", Offset = "0x15E9800", VA = "0x15E9800", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x15E993C", Offset = "0x15E993C", VA = "0x15E993C")]
	public static PunchScale Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x15E9B88", Offset = "0x15E9B88", VA = "0x15E9B88", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x15E9A6C", Offset = "0x15E9A6C", VA = "0x15E9A6C")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x15E9D04", Offset = "0x15E9D04", VA = "0x15E9D04")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x15E9EE0", Offset = "0x15E9EE0", VA = "0x15E9EE0")]
	public PunchScale()
	{
	}
}
[Token(Token = "0x20000EA")]
public class PunchRotation : EZAnimation
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 temp;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float factor;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x15E8E14", Offset = "0x15E8E14", VA = "0x15E8E14", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x15E8E1C", Offset = "0x15E8E1C", VA = "0x15E8E1C", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x15E8EE0", Offset = "0x15E8EE0", VA = "0x15E8EE0", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x15E8F7C", Offset = "0x15E8F7C", VA = "0x15E8F7C", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x15E90C8", Offset = "0x15E90C8", VA = "0x15E90C8")]
	public static PunchRotation Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x15E9314", Offset = "0x15E9314", VA = "0x15E9314", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x15E91F8", Offset = "0x15E91F8", VA = "0x15E91F8")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x15E9490", Offset = "0x15E9490", VA = "0x15E9490")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x15E966C", Offset = "0x15E966C", VA = "0x15E966C")]
	public PunchRotation()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Crash : EZAnimation
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 tempMag;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector3 temp;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected float factor;

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1664718", Offset = "0x1664718", VA = "0x1664718", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1664720", Offset = "0x1664720", VA = "0x1664720", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1664818", Offset = "0x1664818", VA = "0x1664818", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x16648AC", Offset = "0x16648AC", VA = "0x16648AC", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1664A38", Offset = "0x1664A38", VA = "0x1664A38")]
	public static Crash Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1664F78", Offset = "0x1664F78", VA = "0x1664F78", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1664E5C", Offset = "0x1664E5C", VA = "0x1664E5C")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x16650F4", Offset = "0x16650F4", VA = "0x16650F4")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x16655C4", Offset = "0x16655C4", VA = "0x16655C4")]
	public Crash()
	{
	}
}
[Token(Token = "0x20000EC")]
public class SmoothCrash : EZAnimation
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 oscillations;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float factor;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float invFactor;

	[Token(Token = "0x400064D")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1E315A0", Offset = "0x1E315A0", VA = "0x1E315A0", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1E315A8", Offset = "0x1E315A8", VA = "0x1E315A8", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1E3166C", Offset = "0x1E3166C", VA = "0x1E3166C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1E31708", Offset = "0x1E31708", VA = "0x1E31708", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1E31878", Offset = "0x1E31878", VA = "0x1E31878")]
	public static SmoothCrash Do(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1E31AEC", Offset = "0x1E31AEC", VA = "0x1E31AEC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1E319C8", Offset = "0x1E319C8", VA = "0x1E319C8")]
	public void Start(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1E31C88", Offset = "0x1E31C88", VA = "0x1E31C88")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1E31EEC", Offset = "0x1E31EEC", VA = "0x1E31EEC")]
	public SmoothCrash()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Shake : EZAnimation
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float oscillations;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject subject;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform subTrans;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 temp;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected float factor;

	[Token(Token = "0x4000655")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1E2E56C", Offset = "0x1E2E56C", VA = "0x1E2E56C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1E2E574", Offset = "0x1E2E574", VA = "0x1E2E574", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1E2E638", Offset = "0x1E2E638", VA = "0x1E2E638", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1E2E6D4", Offset = "0x1E2E6D4", VA = "0x1E2E6D4", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1E2E7EC", Offset = "0x1E2E7EC", VA = "0x1E2E7EC")]
	public static Shake Do(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1E2EA34", Offset = "0x1E2EA34", VA = "0x1E2EA34", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1E2E924", Offset = "0x1E2E924", VA = "0x1E2E924")]
	public void Start(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1E2EBC0", Offset = "0x1E2EBC0", VA = "0x1E2EBC0")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1E2EDC0", Offset = "0x1E2EDC0", VA = "0x1E2EDC0")]
	public Shake()
	{
	}
}
[Token(Token = "0x20000EE")]
public class CrashRotation : EZAnimation
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 oscillations;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float factor;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float invFactor;

	[Token(Token = "0x400065E")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x166561C", Offset = "0x166561C", VA = "0x166561C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1665624", Offset = "0x1665624", VA = "0x1665624", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1665700", Offset = "0x1665700", VA = "0x1665700", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1665790", Offset = "0x1665790", VA = "0x1665790", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1665928", Offset = "0x1665928", VA = "0x1665928")]
	public static CrashRotation Do(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1665B94", Offset = "0x1665B94", VA = "0x1665B94", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1665A70", Offset = "0x1665A70", VA = "0x1665A70")]
	public void Start(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1665D30", Offset = "0x1665D30", VA = "0x1665D30")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1665F78", Offset = "0x1665F78", VA = "0x1665F78")]
	public CrashRotation()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ShakeRotation : EZAnimation
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float oscillations;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject subject;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform subTrans;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 temp;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected float factor;

	[Token(Token = "0x4000666")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1E2EDF0", Offset = "0x1E2EDF0", VA = "0x1E2EDF0", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1E2EDF8", Offset = "0x1E2EDF8", VA = "0x1E2EDF8", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1E2EEBC", Offset = "0x1E2EEBC", VA = "0x1E2EEBC", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1E2EF58", Offset = "0x1E2EF58", VA = "0x1E2EF58", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1E2F07C", Offset = "0x1E2F07C", VA = "0x1E2F07C")]
	public static ShakeRotation Do(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1E2F2C4", Offset = "0x1E2F2C4", VA = "0x1E2F2C4", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1E2F1B4", Offset = "0x1E2F1B4", VA = "0x1E2F1B4")]
	public void Start(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1E2F450", Offset = "0x1E2F450", VA = "0x1E2F450")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1E2F5E0", Offset = "0x1E2F5E0", VA = "0x1E2F5E0")]
	public ShakeRotation()
	{
	}
}
[Token(Token = "0x20000F0")]
public class RunAnimClip : EZAnimation
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GameObject subject;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected string m_clip;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected bool waitForClip;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	protected bool playedYet;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float blending;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Animation subAnim;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1E2D2E4", Offset = "0x1E2D2E4", VA = "0x1E2D2E4", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1E2D2EC", Offset = "0x1E2D2EC", VA = "0x1E2D2EC", Slot = "10")]
	public override bool Step(float timeDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1E2D3B8", Offset = "0x1E2D3B8", VA = "0x1E2D3B8", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1E2D3BC", Offset = "0x1E2D3BC", VA = "0x1E2D3BC")]
	public static RunAnimClip Do(GameObject sub, string clip, float blend, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1E2D6BC", Offset = "0x1E2D6BC", VA = "0x1E2D6BC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1E2D4E4", Offset = "0x1E2D4E4", VA = "0x1E2D4E4")]
	public void Start(GameObject sub, string clip, float blend, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1E2D850", Offset = "0x1E2D850", VA = "0x1E2D850")]
	public RunAnimClip()
	{
	}
}
[Token(Token = "0x20000F1")]
public class FadeAudio : EZAnimation
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float start;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource subject;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float delta;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float end;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1673C88", Offset = "0x1673C88", VA = "0x1673C88", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1673C90", Offset = "0x1673C90", VA = "0x1673C90", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1673D3C", Offset = "0x1673D3C", VA = "0x1673D3C", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1673D64", Offset = "0x1673D64", VA = "0x1673D64", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1673E08", Offset = "0x1673E08", VA = "0x1673E08", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1673EDC", Offset = "0x1673EDC", VA = "0x1673EDC")]
	public static FadeAudio Do(AudioSource audio, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1674154", Offset = "0x1674154", VA = "0x1674154")]
	public static FadeAudio Do(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1674310", Offset = "0x1674310", VA = "0x1674310", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x167427C", Offset = "0x167427C", VA = "0x167427C")]
	public void Start(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x167400C", Offset = "0x167400C", VA = "0x167400C")]
	public void Start(AudioSource sub, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x166A018", Offset = "0x166A018", VA = "0x166A018")]
	public FadeAudio()
	{
	}
}
[Token(Token = "0x20000F2")]
public class TuneAudio : EZAnimation
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float start;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource subject;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float delta;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float end;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1C9FD54", Offset = "0x1C9FD54", VA = "0x1C9FD54", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1C9FD5C", Offset = "0x1C9FD5C", VA = "0x1C9FD5C", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1C9FDF0", Offset = "0x1C9FDF0", VA = "0x1C9FDF0", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1C9FE18", Offset = "0x1C9FE18", VA = "0x1C9FE18", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1C9FEC8", Offset = "0x1C9FEC8", VA = "0x1C9FEC8", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1C9FF84", Offset = "0x1C9FF84", VA = "0x1C9FF84")]
	public static TuneAudio Do(AudioSource audio, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1CA0210", Offset = "0x1CA0210", VA = "0x1CA0210")]
	public static TuneAudio Do(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1CA03D4", Offset = "0x1CA03D4", VA = "0x1CA03D4", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1CA0340", Offset = "0x1CA0340", VA = "0x1CA0340")]
	public void Start(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1CA00BC", Offset = "0x1CA00BC", VA = "0x1CA00BC")]
	public void Start(AudioSource sub, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1CA06A0", Offset = "0x1CA06A0", VA = "0x1CA06A0")]
	public TuneAudio()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F3")]
public class AnimParams
{
	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EZAnimation.ANIM_MODE mode;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float delay;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool pingPong;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool restartOnRepeat;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool repeatDelay;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EZAnimation.EASING_TYPE easing;

	[NonSerialized]
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected EZTransition m_transition;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color color2;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 vec;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 vec2;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 axis;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float floatVal;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float floatVal2;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string strVal;

	[Token(Token = "0x17000168")]
	public EZTransition transition
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1EA3E74", Offset = "0x1EA3E74", VA = "0x1EA3E74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1EA3E7C", Offset = "0x1EA3E7C", VA = "0x1EA3E7C")]
		set
		{
		}
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1EA3D04", Offset = "0x1EA3D04", VA = "0x1EA3D04")]
	public AnimParams(EZTransition trans)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1EA3DA4", Offset = "0x1EA3DA4", VA = "0x1EA3DA4")]
	public void Copy(AnimParams src)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1EA3E84", Offset = "0x1EA3E84", VA = "0x1EA3E84", Slot = "4")]
	public virtual void DrawGUI(EZAnimation.ANIM_TYPE type, GameObject go, IGUIHelper gui, bool inspector)
	{
	}
}
[Serializable]
[Token(Token = "0x20000F4")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8994", Offset = "0x8C8994")]
public class EZScreenPlacement : MonoBehaviour, IUseCamera
{
	[Token(Token = "0x20001AD")]
	public enum HORIZONTAL_ALIGN
	{
		[Token(Token = "0x4000A57")]
		NONE,
		[Token(Token = "0x4000A58")]
		SCREEN_LEFT,
		[Token(Token = "0x4000A59")]
		SCREEN_RIGHT,
		[Token(Token = "0x4000A5A")]
		SCREEN_CENTER,
		[Token(Token = "0x4000A5B")]
		OBJECT
	}

	[Token(Token = "0x20001AE")]
	public enum VERTICAL_ALIGN
	{
		[Token(Token = "0x4000A5D")]
		NONE,
		[Token(Token = "0x4000A5E")]
		SCREEN_TOP,
		[Token(Token = "0x4000A5F")]
		SCREEN_BOTTOM,
		[Token(Token = "0x4000A60")]
		SCREEN_CENTER,
		[Token(Token = "0x4000A61")]
		OBJECT
	}

	[Serializable]
	[Token(Token = "0x20001AF")]
	public class RelativeTo
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HORIZONTAL_ALIGN horizontal;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VERTICAL_ALIGN vertical;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected EZScreenPlacement script;

		[Token(Token = "0x1700022B")]
		public EZScreenPlacement Script
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x198F5A0", Offset = "0x198F5A0", VA = "0x198F5A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x198F5A8", Offset = "0x198F5A8", VA = "0x198F5A8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x198F5AC", Offset = "0x198F5AC", VA = "0x198F5AC")]
		public bool Equals(RelativeTo rt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x198F5DC", Offset = "0x198F5DC", VA = "0x198F5DC")]
		public void Copy(RelativeTo rt)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x198F5F4", Offset = "0x198F5F4", VA = "0x198F5F4")]
		public RelativeTo(EZScreenPlacement sp, RelativeTo rt)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x198F654", Offset = "0x198F654", VA = "0x198F654")]
		public RelativeTo(EZScreenPlacement sp)
		{
		}
	}

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera renderCamera;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 screenPos;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ignoreZ;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RelativeTo relativeTo;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform relativeObject;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool alwaysRecursive;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool allowTransformDrag;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected Vector2 viewportPixels;

	[NonSerialized]
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool justEnabled;

	[NonSerialized]
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected EZScreenPlacementMirror mirror;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_awake;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	protected bool m_started;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public EZScreenPlacement[] dependents;

	[Token(Token = "0x17000169")]
	public Camera RenderCamera
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x166DAB8", Offset = "0x166DAB8", VA = "0x166DAB8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x166DAC0", Offset = "0x166DAC0", VA = "0x166DAC0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public Vector3 ScreenCoord
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x166DEA4", Offset = "0x166DEA4", VA = "0x166DEA4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x166CF78", Offset = "0x166CF78", VA = "0x166CF78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x166D200", Offset = "0x166D200", VA = "0x166D200")]
	public void Start()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x166D2CC", Offset = "0x166D2CC", VA = "0x166D2CC")]
	public void PositionOnScreenRecursively()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x166D5F0", Offset = "0x166D5F0", VA = "0x166D5F0")]
	public Vector3 ScreenPosToLocalPos(Vector3 screenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x166DA34", Offset = "0x166DA34", VA = "0x166DA34")]
	public Vector3 ScreenPosToParentPos(Vector3 screenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x166D658", Offset = "0x166D658", VA = "0x166D658")]
	public Vector3 ScreenPosToWorldPos(Vector3 screenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x166D44C", Offset = "0x166D44C", VA = "0x166D44C")]
	public void PositionOnScreen()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x166DA98", Offset = "0x166DA98", VA = "0x166DA98")]
	public void PositionOnScreen(int x, int y, float depth)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x166DAAC", Offset = "0x166DAAC", VA = "0x166DAAC")]
	public void PositionOnScreen(Vector3 pos)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x166DBE4", Offset = "0x166DBE4", VA = "0x166DBE4")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x166DBEC", Offset = "0x166DBEC", VA = "0x166DBEC", Slot = "4")]
	public void SetCamera()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x166DAC4", Offset = "0x166DAC4", VA = "0x166DAC4", Slot = "5")]
	public void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x166DBF4", Offset = "0x166DBF4", VA = "0x166DBF4")]
	public void WorldToScreenPos(Vector3 worldPos)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x166DEE4", Offset = "0x166DEE4", VA = "0x166DEE4")]
	public static bool TestDepenency(EZScreenPlacement sp)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x166E1B8", Offset = "0x166E1B8", VA = "0x166E1B8", Slot = "8")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x166E330", Offset = "0x166E330", VA = "0x166E330", Slot = "9")]
	public virtual void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x166E33C", Offset = "0x166E33C", VA = "0x166E33C", Slot = "10")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x166E348", Offset = "0x166E348", VA = "0x166E348")]
	public EZScreenPlacement()
	{
	}
}
[Token(Token = "0x20000F5")]
public class EZScreenPlacementMirror
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 worldPos;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 screenPos;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EZScreenPlacement.RelativeTo relativeTo;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform relativeObject;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera renderCamera;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 screenSize;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x166E2BC", Offset = "0x166E2BC", VA = "0x166E2BC")]
	public EZScreenPlacementMirror()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x166E400", Offset = "0x166E400", VA = "0x166E400", Slot = "4")]
	public virtual void Mirror(EZScreenPlacement sp)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x166E4CC", Offset = "0x166E4CC", VA = "0x166E4CC", Slot = "5")]
	public virtual bool Validate(EZScreenPlacement sp)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x166E7A8", Offset = "0x166E7A8", VA = "0x166E7A8", Slot = "6")]
	public virtual bool DidChange(EZScreenPlacement sp)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F6")]
public static class FontStore
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpriteFont[] fonts;

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x16782E4", Offset = "0x16782E4", VA = "0x16782E4")]
	public static SpriteFont GetFont(TextAsset fontDef)
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1678560", Offset = "0x1678560", VA = "0x1678560")]
	private static void AddFont(SpriteFont f)
	{
	}
}
[Token(Token = "0x20000F7")]
public delegate UnityEngine.Object LoadAssetDelegate(string path, Type type);
[Token(Token = "0x20000F8")]
public delegate string PathFromGUIDDelegate(string path);
[Token(Token = "0x20000F9")]
public delegate string GUIDFromPathDelegate(string guid);
[Token(Token = "0x20000FA")]
public delegate string GetAssetPathDelegate(UnityEngine.Object asset);
[Token(Token = "0x20000FB")]
public interface ISpriteAggregator
{
	[Token(Token = "0x1700016B")]
	Texture2D[] SourceTextures
	{
		[Token(Token = "0x60008FE")]
		get;
	}

	[Token(Token = "0x1700016C")]
	CSpriteFrame[] SpriteFrames
	{
		[Token(Token = "0x60008FF")]
		get;
	}

	[Token(Token = "0x1700016D")]
	CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x6000901")]
		get;
	}

	[Token(Token = "0x1700016E")]
	GameObject gameObject
	{
		[Token(Token = "0x6000903")]
		get;
	}

	[Token(Token = "0x1700016F")]
	bool DoNotTrimImages
	{
		[Token(Token = "0x6000904")]
		get;
	}

	[Token(Token = "0x60008FD")]
	void Aggregate(PathFromGUIDDelegate guid2Path, LoadAssetDelegate load, GUIDFromPathDelegate path2Guid);

	[Token(Token = "0x6000900")]
	Material GetPackedMaterial(out string errString);

	[Token(Token = "0x6000902")]
	void SetUVs(Rect uvs);
}
[Token(Token = "0x20000FC")]
public interface ISpriteAnimatable
{
	[Token(Token = "0x17000170")]
	ISpriteAnimatable prev
	{
		[Token(Token = "0x6000906")]
		get;
		[Token(Token = "0x6000907")]
		set;
	}

	[Token(Token = "0x17000171")]
	ISpriteAnimatable next
	{
		[Token(Token = "0x6000908")]
		get;
		[Token(Token = "0x6000909")]
		set;
	}

	[Token(Token = "0x6000905")]
	bool StepAnim(float time);
}
[Token(Token = "0x20000FD")]
public interface ISpriteMesh
{
	[Token(Token = "0x17000172")]
	SpriteRoot sprite
	{
		[Token(Token = "0x600090A")]
		get;
		[Token(Token = "0x600090B")]
		set;
	}

	[Token(Token = "0x17000173")]
	Texture texture
	{
		[Token(Token = "0x600090C")]
		get;
	}

	[Token(Token = "0x17000174")]
	Material material
	{
		[Token(Token = "0x600090D")]
		get;
	}

	[Token(Token = "0x17000175")]
	Vector3[] vertices
	{
		[Token(Token = "0x600090E")]
		get;
	}

	[Token(Token = "0x17000176")]
	Vector2[] uvs
	{
		[Token(Token = "0x600090F")]
		get;
	}

	[Token(Token = "0x17000177")]
	Vector2[] uvs2
	{
		[Token(Token = "0x6000910")]
		get;
	}

	[Token(Token = "0x17000178")]
	bool UseUV2
	{
		[Token(Token = "0x6000911")]
		get;
		[Token(Token = "0x6000912")]
		set;
	}

	[Token(Token = "0x6000913")]
	void Init();

	[Token(Token = "0x6000914")]
	void UpdateVerts();

	[Token(Token = "0x6000915")]
	void UpdateUVs();

	[Token(Token = "0x6000916")]
	void UpdateColors(Color color);

	[Token(Token = "0x6000917")]
	void Hide(bool tf);

	[Token(Token = "0x6000918")]
	bool IsHidden();
}
[Token(Token = "0x20000FE")]
public interface ISpritePackable
{
	[Token(Token = "0x17000179")]
	GameObject gameObject
	{
		[Token(Token = "0x6000919")]
		get;
	}

	[Token(Token = "0x1700017A")]
	TextureAnim[] States
	{
		[Token(Token = "0x600091A")]
		get;
		[Token(Token = "0x600091B")]
		set;
	}

	[Token(Token = "0x1700017B")]
	SpriteRoot.ANCHOR_METHOD Anchor
	{
		[Token(Token = "0x600091C")]
		get;
	}

	[Token(Token = "0x1700017C")]
	Color Color
	{
		[Token(Token = "0x600091D")]
		get;
		[Token(Token = "0x600091E")]
		set;
	}

	[Token(Token = "0x1700017D")]
	bool SupportsArbitraryAnimations
	{
		[Token(Token = "0x600091F")]
		get;
	}
}
[Token(Token = "0x20000FF")]
public interface IUseCamera
{
	[Token(Token = "0x1700017E")]
	Camera RenderCamera
	{
		[Token(Token = "0x6000922")]
		get;
		[Token(Token = "0x6000923")]
		set;
	}

	[Token(Token = "0x6000920")]
	void SetCamera();

	[Token(Token = "0x6000921")]
	void SetCamera(Camera c);
}
[Token(Token = "0x2000100")]
public abstract class PackableStub : MonoBehaviour
{
	[Token(Token = "0x1700017F")]
	public abstract Texture2D[] SourceTextures
	{
		[Token(Token = "0x6000925")]
		get;
	}

	[Token(Token = "0x17000180")]
	public abstract CSpriteFrame[] SpriteFrames
	{
		[Token(Token = "0x6000926")]
		get;
	}

	[Token(Token = "0x17000181")]
	public abstract CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x6000928")]
		get;
	}

	[Token(Token = "0x17000182")]
	public abstract bool DoNotTrimImages
	{
		[Token(Token = "0x600092A")]
		get;
		[Token(Token = "0x600092B")]
		set;
	}

	[Token(Token = "0x6000924")]
	public abstract void Aggregate(PathFromGUIDDelegate guid2Path, LoadAssetDelegate load, GUIDFromPathDelegate path2Guid);

	[Token(Token = "0x6000927")]
	public abstract Material GetPackedMaterial(out string errString);

	[Token(Token = "0x6000929")]
	public abstract void SetUVs(Rect uvs);

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x15DD5A0", Offset = "0x15DD5A0", VA = "0x15DD5A0")]
	protected PackableStub()
	{
	}
}
[Token(Token = "0x2000101")]
public class SpriteAnimationPump : MonoBehaviour
{
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EBC", Offset = "0x8C8EBC")]
	private sealed class <PumpStarter>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteAnimationPump <>4__this;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x1FE86C0", Offset = "0x1FE86C0", VA = "0x1FE86C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x1FE8708", Offset = "0x1FE8708", VA = "0x1FE8708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1FE85B0", Offset = "0x1FE85B0", VA = "0x1FE85B0")]
		[DebuggerHidden]
		public <PumpStarter>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1FE85DC", Offset = "0x1FE85DC", VA = "0x1FE85DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1FE85E0", Offset = "0x1FE85E0", VA = "0x1FE85E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1FE86C8", Offset = "0x1FE86C8", VA = "0x1FE86C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8ECC", Offset = "0x8C8ECC")]
	private sealed class <AnimationPump>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1FE8560", Offset = "0x1FE8560", VA = "0x1FE8560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1FE85A8", Offset = "0x1FE85A8", VA = "0x1FE85A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1FE813C", Offset = "0x1FE813C", VA = "0x1FE813C")]
		[DebuggerHidden]
		public <AnimationPump>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1FE8168", Offset = "0x1FE8168", VA = "0x1FE8168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1FE816C", Offset = "0x1FE816C", VA = "0x1FE816C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1FE8568", Offset = "0x1FE8568", VA = "0x1FE8568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpriteAnimationPump instance;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static ISpriteAnimatable head;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static ISpriteAnimatable cur;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float _timeScale;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float startTime;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float time;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float elapsed;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float timePaused;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool isPaused;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ISpriteAnimatable next;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static bool pumpIsRunning;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected static bool pumpIsDone;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float animationPumpInterval;

	[Token(Token = "0x17000183")]
	public bool IsRunning
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1E32D08", Offset = "0x1E32D08", VA = "0x1E32D08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000184")]
	public static float timeScale
	{
		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1E32D6C", Offset = "0x1E32D6C", VA = "0x1E32D6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1E32DD0", Offset = "0x1E32DD0", VA = "0x1E32DD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public static SpriteAnimationPump Instance
	{
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1E331A4", Offset = "0x1E331A4", VA = "0x1E331A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1E32E54", Offset = "0x1E32E54", VA = "0x1E32E54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1E32EE8", Offset = "0x1E32EE8", VA = "0x1E32EE8")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1E33018", Offset = "0x1E33018", VA = "0x1E33018")]
	public void StartAnimationPump()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1E330CC", Offset = "0x1E330CC", VA = "0x1E330CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA41C", Offset = "0x8CA41C")]
	protected IEnumerator PumpStarter()
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1E33144", Offset = "0x1E33144", VA = "0x1E33144")]
	public static void StopAnimationPump()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1E33148", Offset = "0x1E33148", VA = "0x1E33148")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA47C", Offset = "0x8CA47C")]
	protected static IEnumerator AnimationPump()
	{
		return null;
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1E33388", Offset = "0x1E33388", VA = "0x1E33388")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1E3342C", Offset = "0x1E3342C", VA = "0x1E3342C")]
	public static void Add(ISpriteAnimatable s)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1E3361C", Offset = "0x1E3361C", VA = "0x1E3361C")]
	public static void Remove(ISpriteAnimatable s)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1E33BF4", Offset = "0x1E33BF4", VA = "0x1E33BF4")]
	public SpriteAnimationPump()
	{
	}
}
[Serializable]
[Token(Token = "0x2000102")]
public class UVAnimation
{
	[Token(Token = "0x20001B2")]
	public enum ANIM_END_ACTION
	{
		[Token(Token = "0x4000A6B")]
		Do_Nothing,
		[Token(Token = "0x4000A6C")]
		Revert_To_Static,
		[Token(Token = "0x4000A6D")]
		Play_Default_Anim,
		[Token(Token = "0x4000A6E")]
		Hide,
		[Token(Token = "0x4000A6F")]
		Deactivate,
		[Token(Token = "0x4000A70")]
		Destroy
	}

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected SPRITE_FRAME[] frames;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int curFrame;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int stepDir;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int numLoops;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool playInReverse;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float length;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCycles;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool loopReverse;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float framerate;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public ANIM_END_ACTION onAnimEnd;

	[Token(Token = "0x17000186")]
	public int StepDirection
	{
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x198A9C4", Offset = "0x198A9C4", VA = "0x198A9C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x198A9CC", Offset = "0x198A9CC", VA = "0x198A9CC")]
		set
		{
		}
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x198AA14", Offset = "0x198AA14", VA = "0x198AA14")]
	public UVAnimation(UVAnimation anim)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x198AB78", Offset = "0x198AB78", VA = "0x198AB78")]
	public UVAnimation Clone()
	{
		return null;
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x197E9EC", Offset = "0x197E9EC", VA = "0x197E9EC")]
	public UVAnimation()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x198ABD4", Offset = "0x198ABD4", VA = "0x198ABD4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x198ABEC", Offset = "0x198ABEC", VA = "0x198ABEC")]
	public void PlayInReverse()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x198A9F0", Offset = "0x198A9F0", VA = "0x198A9F0")]
	public void SetStepDir(int dir)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x198AC20", Offset = "0x198AC20", VA = "0x198AC20")]
	public bool GetNextFrame(ref SPRITE_FRAME nextFrame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x198AD58", Offset = "0x198AD58", VA = "0x198AD58")]
	public SPRITE_FRAME GetCurrentFrame()
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x198ADC4", Offset = "0x198ADC4", VA = "0x198ADC4")]
	public SPRITE_FRAME GetFrame(int frame)
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x198AE10", Offset = "0x198AE10", VA = "0x198AE10")]
	public SPRITE_FRAME[] BuildUVAnim(Vector2 start, Vector2 cellSize, int cols, int rows, int totalCells)
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x198B17C", Offset = "0x198B17C", VA = "0x198B17C")]
	public SPRITE_FRAME[] BuildWrappedUVAnim(Vector2 start, Vector2 cellSize, int cols, int rows, int totalCells)
	{
		return null;
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x198B184", Offset = "0x198B184", VA = "0x198B184")]
	public SPRITE_FRAME[] BuildWrappedUVAnim(Vector2 start, Vector2 cellSize, int totalCells)
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x198B454", Offset = "0x198B454", VA = "0x198B454")]
	public void SetAnim(SPRITE_FRAME[] anim)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x197E754", Offset = "0x197E754", VA = "0x197E754")]
	public void SetAnim(TextureAnim anim, int idx)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x198B4A8", Offset = "0x198B4A8", VA = "0x198B4A8")]
	public void AppendAnim(SPRITE_FRAME[] anim)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x198B57C", Offset = "0x198B57C", VA = "0x198B57C")]
	public void SetCurrentFrame(int f)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x198B5C0", Offset = "0x198B5C0", VA = "0x198B5C0")]
	public void SetPosition(float pos)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x198B6DC", Offset = "0x198B6DC", VA = "0x198B6DC")]
	public void SetClipPosition(float pos)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x198AB44", Offset = "0x198AB44", VA = "0x198AB44")]
	protected void CalcLength()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x198B710", Offset = "0x198B710", VA = "0x198B710")]
	public float GetLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x198B718", Offset = "0x198B718", VA = "0x198B718")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x198B74C", Offset = "0x198B74C", VA = "0x198B74C")]
	public int GetFrameCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x198B768", Offset = "0x198B768", VA = "0x198B768")]
	public int GetFramesDisplayed()
	{
		return default(int);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x198B7A4", Offset = "0x198B7A4", VA = "0x198B7A4")]
	public int GetCurPosition()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x2000103")]
public class UVAnimation_Auto : UVAnimation
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 start;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 pixelsToNextColumnAndRow;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int cols;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int rows;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int totalCells;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x198B7AC", Offset = "0x198B7AC", VA = "0x198B7AC")]
	public UVAnimation_Auto()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x198B7B0", Offset = "0x198B7B0", VA = "0x198B7B0")]
	public UVAnimation_Auto(UVAnimation_Auto anim)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x198B804", Offset = "0x198B804", VA = "0x198B804")]
	public new UVAnimation_Auto Clone()
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x198B860", Offset = "0x198B860", VA = "0x198B860")]
	public SPRITE_FRAME[] BuildUVAnim(SpriteRoot s)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000104")]
public class UVAnimation_Multi
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int loopCycles;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool loopReverse;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framerate;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UVAnimation.ANIM_END_ACTION onAnimEnd;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UVAnimation_Auto[] clips;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int curClip;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int stepDir;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int numLoops;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float duration;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool ret;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int i;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int framePos;

	[Token(Token = "0x17000187")]
	public int StepDirection
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x198BCA4", Offset = "0x198BCA4", VA = "0x198BCA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x198BCAC", Offset = "0x198BCAC", VA = "0x198BCAC")]
		set
		{
		}
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x198B8F8", Offset = "0x198B8F8", VA = "0x198B8F8")]
	public UVAnimation_Multi()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x198B98C", Offset = "0x198B98C", VA = "0x198B98C")]
	public UVAnimation_Multi(UVAnimation_Multi anim)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x198BC08", Offset = "0x198BC08", VA = "0x198BC08")]
	public UVAnimation_Multi Clone()
	{
		return null;
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x198BC64", Offset = "0x198BC64", VA = "0x198BC64")]
	public UVAnimation_Auto GetCurrentClip()
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x198BCB4", Offset = "0x198BCB4", VA = "0x198BCB4")]
	public UVAnimation_Auto[] BuildUVAnim(SpriteRoot s)
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x198BD38", Offset = "0x198BD38", VA = "0x198BD38")]
	public bool GetNextFrame(ref SPRITE_FRAME nextFrame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x198BFF8", Offset = "0x198BFF8", VA = "0x198BFF8")]
	public SPRITE_FRAME GetCurrentFrame()
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x198C07C", Offset = "0x198C07C", VA = "0x198C07C")]
	public void AppendAnim(int index, SPRITE_FRAME[] anim)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x198C0E4", Offset = "0x198C0E4", VA = "0x198C0E4")]
	public void AppendClip(UVAnimation clip)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x198C248", Offset = "0x198C248", VA = "0x198C248")]
	public void PlayInReverse()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x198C380", Offset = "0x198C380", VA = "0x198C380")]
	public void SetAnim(int index, SPRITE_FRAME[] frames)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x198C3E8", Offset = "0x198C3E8", VA = "0x198C3E8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x198C470", Offset = "0x198C470", VA = "0x198C470")]
	public void SetPosition(float pos)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x198C4EC", Offset = "0x198C4EC", VA = "0x198C4EC")]
	public void SetAnimPosition(float pos)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x198BB34", Offset = "0x198BB34", VA = "0x198BB34")]
	protected void CalcDuration()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x198C774", Offset = "0x198C774", VA = "0x198C774")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x198C304", Offset = "0x198C304", VA = "0x198C304")]
	public int GetFrameCount()
	{
		return default(int);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x198C77C", Offset = "0x198C77C", VA = "0x198C77C")]
	public int GetCurPosition()
	{
		return default(int);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x198C784", Offset = "0x198C784", VA = "0x198C784")]
	public int GetCurClipNum()
	{
		return default(int);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x198C78C", Offset = "0x198C78C", VA = "0x198C78C")]
	public void SetCurClipNum(int index)
	{
	}
}
[Token(Token = "0x2000105")]
[ExecuteInEditMode]
public abstract class SpriteBase : SpriteRoot, ISpriteAnimatable
{
	[Token(Token = "0x20001B3")]
	public delegate void AnimCompleteDelegate(SpriteBase sprite);

	[Token(Token = "0x20001B4")]
	public delegate void AnimFrameDelegate(SpriteBase sprite, int frame);

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool playAnimOnStart;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
	[HideInInspector]
	public bool crossfadeFrames;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int defaultAnim;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected int curAnimIndex;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected AnimCompleteDelegate animCompleteDelegate;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected AnimFrameDelegate animFrameDelegate;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected float timeSinceLastFrame;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	protected float timeBetweenAnimFrames;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected float framesToAdvance;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	protected bool animating;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	protected bool currentlyAnimating;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected SPRITE_FRAME nextFrameInfo;

	[Token(Token = "0x17000188")]
	public bool Animating
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1E3456C", Offset = "0x1E3456C", VA = "0x1E3456C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1E34574", Offset = "0x1E34574", VA = "0x1E34574")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public int CurAnimIndex
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1E34590", Offset = "0x1E34590", VA = "0x1E34590")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1E34598", Offset = "0x1E34598", VA = "0x1E34598")]
		set
		{
		}
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1E33C8C", Offset = "0x1E33C8C", VA = "0x1E33C8C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1E33C90", Offset = "0x1E33C90", VA = "0x1E33C90", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1E33D5C", Offset = "0x1E33D5C", VA = "0x1E33D5C", Slot = "15")]
	public override void Clear()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1E33D88", Offset = "0x1E33D88", VA = "0x1E33D88", Slot = "18")]
	public override void Delete()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1E33F2C", Offset = "0x1E33F2C", VA = "0x1E33F2C", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1E34018", Offset = "0x1E34018", VA = "0x1E34018", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1E341A0", Offset = "0x1E341A0", VA = "0x1E341A0", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1E3423C", Offset = "0x1E3423C", VA = "0x1E3423C", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1E34370", Offset = "0x1E34370", VA = "0x1E34370")]
	public void SetAnimCompleteDelegate(AnimCompleteDelegate del)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1E34380", Offset = "0x1E34380", VA = "0x1E34380")]
	public void SetAnimFrameDelegate(AnimFrameDelegate del)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1E34390", Offset = "0x1E34390", VA = "0x1E34390")]
	public void SetSpriteResizedDelegate(SpriteResizedDelegate del)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1E343A0", Offset = "0x1E343A0", VA = "0x1E343A0")]
	public void AddSpriteResizedDelegate(SpriteResizedDelegate del)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1E3442C", Offset = "0x1E3442C", VA = "0x1E3442C")]
	public void RemoveSpriteresizedDelegate(SpriteResizedDelegate del)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1E344B8", Offset = "0x1E344B8", VA = "0x1E344B8", Slot = "56")]
	public virtual bool StepAnim(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1E344C0", Offset = "0x1E344C0", VA = "0x1E344C0", Slot = "57")]
	public virtual void PlayAnim(int index)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1E344C4", Offset = "0x1E344C4", VA = "0x1E344C4", Slot = "58")]
	public virtual void PlayAnim(string name)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1E344C8", Offset = "0x1E344C8", VA = "0x1E344C8", Slot = "59")]
	public virtual void PlayAnimInReverse(int index)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1E344CC", Offset = "0x1E344CC", VA = "0x1E344CC", Slot = "60")]
	public virtual void PlayAnimInReverse(string name)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1E344D0", Offset = "0x1E344D0", VA = "0x1E344D0")]
	public void SetFramerate(float fps)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1E34354", Offset = "0x1E34354", VA = "0x1E34354")]
	public void PauseAnim()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1E344E0", Offset = "0x1E344E0", VA = "0x1E344E0", Slot = "61")]
	public virtual void StopAnim()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1E344E4", Offset = "0x1E344E4", VA = "0x1E344E4")]
	public void RevertToStatic()
	{
	}

	[Token(Token = "0x6000986")]
	protected abstract void AddToAnimatedList();

	[Token(Token = "0x6000987")]
	protected abstract void RemoveFromAnimatedList();

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1E34564", Offset = "0x1E34564", VA = "0x1E34564")]
	public bool IsAnimating()
	{
		return default(bool);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1E345A0", Offset = "0x1E345A0", VA = "0x1E345A0")]
	protected SpriteBase()
	{
	}
}
[Token(Token = "0x2000106")]
public class SpriteChar
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rect UVs;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xOffset;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yOffset;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float xAdvance;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<int, float> kernings;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<int, float> origKernings;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1E34614", Offset = "0x1E34614", VA = "0x1E34614")]
	public float GetKerning(int prevChar)
	{
		return default(float);
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1E34690", Offset = "0x1E34690", VA = "0x1E34690")]
	public SpriteChar()
	{
	}
}
[Token(Token = "0x2000107")]
public class SpriteFont
{
	[Token(Token = "0x20001B5")]
	protected delegate void ParserDel(string line);

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset fontDef;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Dictionary<int, int> charMap;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected SpriteChar[] chars;

	[Token(Token = "0x40006DB")]
	protected const float bleedCompensation = 0f;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector2 bleedCompUV;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector2 bleedCompUVMax;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int lineHeight;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int baseHeight;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int texWidth;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int texHeight;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected string face;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int pxSize;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float charSpacing;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int kerningsCount;

	[Token(Token = "0x1700018A")]
	public int LineHeight
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1E346DC", Offset = "0x1E346DC", VA = "0x1E346DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1E346E4", Offset = "0x1E346E4", VA = "0x1E346E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public int BaseHeight
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1E346EC", Offset = "0x1E346EC", VA = "0x1E346EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018C")]
	public int PixelSize
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x1E346F4", Offset = "0x1E346F4", VA = "0x1E346F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018D")]
	public float CharacterSpacing
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1E346FC", Offset = "0x1E346FC", VA = "0x1E346FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1E34704", Offset = "0x1E34704", VA = "0x1E34704")]
		set
		{
		}
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1E34960", Offset = "0x1E34960", VA = "0x1E34960")]
	public SpriteFont(TextAsset def)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1E34A04", Offset = "0x1E34A04", VA = "0x1E34A04")]
	public void Load(TextAsset def)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1E34DB8", Offset = "0x1E34DB8", VA = "0x1E34DB8")]
	private int ParseSection(string tag, string[] lines, ParserDel parser, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1E3580C", Offset = "0x1E3580C", VA = "0x1E3580C")]
	private int FindField(string label, string[] fields, int pos, bool logError)
	{
		return default(int);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1E35AB4", Offset = "0x1E35AB4", VA = "0x1E35AB4")]
	private int FindField(string label, string[] fields, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1E35ABC", Offset = "0x1E35ABC", VA = "0x1E35ABC")]
	private int FindFieldOptional(string label, string[] fields, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1E35AC4", Offset = "0x1E35AC4", VA = "0x1E35AC4")]
	private void HeaderParser(string line)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1E35CBC", Offset = "0x1E35CBC", VA = "0x1E35CBC")]
	private void CommonParser(string line)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1E35F94", Offset = "0x1E35F94", VA = "0x1E35F94")]
	private void CharCountParser(string line)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1E34E84", Offset = "0x1E34E84", VA = "0x1E34E84")]
	private bool CharParser(string line, int charNum)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1E36110", Offset = "0x1E36110", VA = "0x1E36110")]
	private void KerningCountParser(string line)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1E354D0", Offset = "0x1E354D0", VA = "0x1E354D0")]
	private bool KerningParser(string line)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1E361C4", Offset = "0x1E361C4", VA = "0x1E361C4")]
	public SpriteChar GetSpriteChar(char ch)
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1E3626C", Offset = "0x1E3626C", VA = "0x1E3626C")]
	public bool ContainsCharacter(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1E362D0", Offset = "0x1E362D0", VA = "0x1E362D0")]
	public float GetWidth(string str)
	{
		return default(float);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1E362D8", Offset = "0x1E362D8", VA = "0x1E362D8")]
	public float GetWidth(string str, float spacingCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1E363E4", Offset = "0x1E363E4", VA = "0x1E363E4")]
	public float GetWidth(string str, int start, int end)
	{
		return default(float);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1E363EC", Offset = "0x1E363EC", VA = "0x1E363EC")]
	public float GetWidth(string str, int start, int end, float spacingCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1E36520", Offset = "0x1E36520", VA = "0x1E36520")]
	public float GetWidth(StringBuilder sb, int start, int end)
	{
		return default(float);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1E36528", Offset = "0x1E36528", VA = "0x1E36528")]
	public float GetWidth(StringBuilder sb, int start, int end, float spacingCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1E36674", Offset = "0x1E36674", VA = "0x1E36674")]
	public float GetWidth(char prevChar, char c)
	{
		return default(float);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1E366BC", Offset = "0x1E366BC", VA = "0x1E366BC")]
	public float GetAdvance(char c)
	{
		return default(float);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1E366E0", Offset = "0x1E366E0", VA = "0x1E366E0")]
	public string RemoveUnsupportedCharacters(string str)
	{
		return null;
	}
}
[Token(Token = "0x2000108")]
public class SpriteMesh : ISpriteMesh
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected SpriteRoot m_sprite;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Mesh m_mesh;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Texture m_texture;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector3[] m_vertices;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Color[] m_colors;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2[] m_uvs;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2[] m_uvs2;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int[] m_faces;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_useUV2;

	[Token(Token = "0x1700018E")]
	public virtual SpriteRoot sprite
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1E3AEE4", Offset = "0x1E3AEE4", VA = "0x1E3AEE4", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1E3AEEC", Offset = "0x1E3AEEC", VA = "0x1E3AEEC", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public virtual Texture texture
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1E3B390", Offset = "0x1E3B390", VA = "0x1E3B390", Slot = "21")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public virtual Material material
	{
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1E3B398", Offset = "0x1E3B398", VA = "0x1E3B398", Slot = "22")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1E3B3B4", Offset = "0x1E3B3B4", VA = "0x1E3B3B4", Slot = "23")]
		set
		{
		}
	}

	[Token(Token = "0x17000191")]
	public virtual Vector3[] vertices
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x1E3B58C", Offset = "0x1E3B58C", VA = "0x1E3B58C", Slot = "24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public virtual Vector2[] uvs
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1E3B594", Offset = "0x1E3B594", VA = "0x1E3B594", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000193")]
	public virtual Vector2[] uvs2
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1E3B59C", Offset = "0x1E3B59C", VA = "0x1E3B59C", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public virtual bool UseUV2
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1E3B5A4", Offset = "0x1E3B5A4", VA = "0x1E3B5A4", Slot = "27")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1E3B5AC", Offset = "0x1E3B5AC", VA = "0x1E3B5AC", Slot = "28")]
		set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public virtual Mesh mesh
	{
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1E3B5B8", Offset = "0x1E3B5B8", VA = "0x1E3B5B8", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1E3B740", Offset = "0x1E3B740", VA = "0x1E3B740", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1E3B748", Offset = "0x1E3B748", VA = "0x1E3B748", Slot = "31")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1E3B638", Offset = "0x1E3B638", VA = "0x1E3B638")]
	protected void CreateMesh()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1E3BA74", Offset = "0x1E3BA74", VA = "0x1E3BA74", Slot = "32")]
	public virtual void UpdateVerts()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1E3BB14", Offset = "0x1E3BB14", VA = "0x1E3BB14", Slot = "33")]
	public virtual void UpdateUVs()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1E3BBC4", Offset = "0x1E3BBC4", VA = "0x1E3BBC4", Slot = "34")]
	public virtual void UpdateColors(Color color)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x1E3BCF8", Offset = "0x1E3BCF8", VA = "0x1E3BCF8", Slot = "35")]
	public virtual void Hide(bool tf)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x1E3BDA0", Offset = "0x1E3BDA0", VA = "0x1E3BDA0", Slot = "36")]
	public virtual bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1E3BE38", Offset = "0x1E3BE38", VA = "0x1E3BE38")]
	public void SetPersistent()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1E3BEE8", Offset = "0x1E3BEE8", VA = "0x1E3BEE8", Slot = "37")]
	public virtual void SetWindingOrder(SpriteRoot.WINDING_ORDER winding)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1E3C028", Offset = "0x1E3C028", VA = "0x1E3C028")]
	public SpriteMesh()
	{
	}
}
[Token(Token = "0x2000109")]
public class SpriteMesh_Managed : ISpriteMesh, IEZLinkedListItem<SpriteMesh_Managed>
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected SpriteRoot m_sprite;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool hidden;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int index;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int drawLayer;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteManager m_manager;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteMesh_Managed m_next;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteMesh_Managed m_prev;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3[] m_vertices;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2[] m_uvs;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2[] m_uvs2;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_useUV2;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Material m_material;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Texture m_texture;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3[] meshVerts;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector2[] meshUVs;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector2[] meshUVs2;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Color[] meshColors;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int mv1;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int mv2;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int mv3;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int mv4;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int uv1;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int uv2;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int uv3;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int uv4;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int cv1;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int cv2;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int cv3;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int cv4;

	[Token(Token = "0x17000196")]
	public SpriteManager manager
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1E3C13C", Offset = "0x1E3C13C", VA = "0x1E3C13C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1E38158", Offset = "0x1E38158", VA = "0x1E38158")]
		set
		{
		}
	}

	[Token(Token = "0x17000197")]
	public virtual SpriteRoot sprite
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1E3C144", Offset = "0x1E3C144", VA = "0x1E3C144", Slot = "23")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x1E3C14C", Offset = "0x1E3C14C", VA = "0x1E3C14C", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000198")]
	public virtual Texture texture
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1E3C21C", Offset = "0x1E3C21C", VA = "0x1E3C21C", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000199")]
	public virtual Material material
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1E3C224", Offset = "0x1E3C224", VA = "0x1E3C224", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public virtual Vector3[] vertices
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1E3C22C", Offset = "0x1E3C22C", VA = "0x1E3C22C", Slot = "27")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019B")]
	public virtual Vector2[] uvs
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1E3C234", Offset = "0x1E3C234", VA = "0x1E3C234", Slot = "28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019C")]
	public virtual Vector2[] uvs2
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x1E3C23C", Offset = "0x1E3C23C", VA = "0x1E3C23C", Slot = "29")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019D")]
	public virtual bool UseUV2
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x1E3C244", Offset = "0x1E3C244", VA = "0x1E3C244", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x1E3C24C", Offset = "0x1E3C24C", VA = "0x1E3C24C", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public SpriteMesh_Managed prev
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x1E3C9AC", Offset = "0x1E3C9AC", VA = "0x1E3C9AC", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1E3C9B4", Offset = "0x1E3C9B4", VA = "0x1E3C9B4", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public SpriteMesh_Managed next
	{
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1E3C9BC", Offset = "0x1E3C9BC", VA = "0x1E3C9BC", Slot = "21")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1E3C9C4", Offset = "0x1E3C9C4", VA = "0x1E3C9C4", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1E380F4", Offset = "0x1E380F4", VA = "0x1E380F4")]
	public void SetBuffers(Vector3[] verts, Vector2[] uvs, Vector2[] uvs2, Color[] cols)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1E38F6C", Offset = "0x1E38F6C", VA = "0x1E38F6C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1E3C258", Offset = "0x1E3C258", VA = "0x1E3C258", Slot = "32")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1E3C40C", Offset = "0x1E3C40C", VA = "0x1E3C40C", Slot = "33")]
	public virtual void UpdateVerts()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1E3C550", Offset = "0x1E3C550", VA = "0x1E3C550", Slot = "34")]
	public virtual void UpdateUVs()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1E3C7D0", Offset = "0x1E3C7D0", VA = "0x1E3C7D0", Slot = "35")]
	public virtual void UpdateColors(Color color)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1E3C890", Offset = "0x1E3C890", VA = "0x1E3C890", Slot = "36")]
	public virtual void Hide(bool tf)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1E3C9A4", Offset = "0x1E3C9A4", VA = "0x1E3C9A4", Slot = "37")]
	public virtual bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1E38040", Offset = "0x1E38040", VA = "0x1E38040")]
	public SpriteMesh_Managed()
	{
	}
}
[Token(Token = "0x200010A")]
public delegate UnityEngine.Object AssetLoaderDelegate(string path, Type type);
[Serializable]
[Token(Token = "0x200010B")]
public struct SPRITE_FRAME
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rect uvs;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 scaleFactor;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 topLeftOffset;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 bottomRightOffset;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1E2D88C", Offset = "0x1E2D88C", VA = "0x1E2D88C")]
	public SPRITE_FRAME(float dummy)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1E2D8EC", Offset = "0x1E2D8EC", VA = "0x1E2D8EC")]
	public void Copy(CSpriteFrame f)
	{
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class SpriteState
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string imgPath;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CSpriteFrame frameInfo;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1C8D124", Offset = "0x1C8D124", VA = "0x1C8D124")]
	public SpriteState(string n, string p)
	{
	}
}
[Serializable]
[Token(Token = "0x200010D")]
public class CSpriteFrame
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect uvs;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 scaleFactor;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 topLeftOffset;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 bottomRightOffset;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1EB43FC", Offset = "0x1EB43FC", VA = "0x1EB43FC")]
	public void Copy(SPRITE_FRAME f)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1EB4420", Offset = "0x1EB4420", VA = "0x1EB4420")]
	public void Copy(CSpriteFrame f)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1EB4454", Offset = "0x1EB4454", VA = "0x1EB4454")]
	public SPRITE_FRAME ToStruct()
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1EAF468", Offset = "0x1EAF468", VA = "0x1EAF468")]
	public CSpriteFrame()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1EB4468", Offset = "0x1EB4468", VA = "0x1EB4468")]
	public CSpriteFrame(CSpriteFrame f)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1EB44E4", Offset = "0x1EB44E4", VA = "0x1EB44E4")]
	public CSpriteFrame(SPRITE_FRAME f)
	{
	}
}
[Token(Token = "0x200010E")]
public interface IEZLinkedListItem<T>
{
	[Token(Token = "0x170001A0")]
	T prev
	{
		[Token(Token = "0x60009E8")]
		get;
		[Token(Token = "0x60009E9")]
		set;
	}

	[Token(Token = "0x170001A1")]
	T next
	{
		[Token(Token = "0x60009EA")]
		get;
		[Token(Token = "0x60009EB")]
		set;
	}
}
[Token(Token = "0x200010F")]
public class EZLinkedListIterator<T> where T : IEZLinkedListItem<T>
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T cur;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected EZLinkedList<T> list;

	[Token(Token = "0x170001A2")]
	public T Current
	{
		[Token(Token = "0x60009EC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60009ED")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public bool Done
	{
		[Token(Token = "0x60009F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009EE")]
	public bool Begin(EZLinkedList<T> l)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EF")]
	public void End()
	{
	}

	[Token(Token = "0x60009F1")]
	public bool Next()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F2")]
	public bool NextNoRemove()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F3")]
	public EZLinkedListIterator()
	{
	}
}
[Token(Token = "0x2000110")]
public class EZLinkedListNode<T> : IEZLinkedListItem<EZLinkedListNode<T>>
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T val;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EZLinkedListNode<T> m_prev;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EZLinkedListNode<T> m_next;

	[Token(Token = "0x170001A4")]
	public EZLinkedListNode<T> prev
	{
		[Token(Token = "0x60009F5")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F6")]
		set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public EZLinkedListNode<T> next
	{
		[Token(Token = "0x60009F7")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F8")]
		set
		{
		}
	}

	[Token(Token = "0x60009F4")]
	public EZLinkedListNode(T v)
	{
	}
}
[Token(Token = "0x2000111")]
public class EZLinkedList<T> where T : IEZLinkedListItem<T>
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<EZLinkedListIterator<T>> iters;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<EZLinkedListIterator<T>> freeIters;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T head;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T cur;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T nextItem;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int count;

	[Token(Token = "0x170001A6")]
	public int Count
	{
		[Token(Token = "0x60009F9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A7")]
	public bool Empty
	{
		[Token(Token = "0x60009FA")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A8")]
	public T Head
	{
		[Token(Token = "0x60009FB")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x170001A9")]
	public T Current
	{
		[Token(Token = "0x60009FC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60009FD")]
		set
		{
		}
	}

	[Token(Token = "0x60009FE")]
	public EZLinkedListIterator<T> Begin()
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	public void End(EZLinkedListIterator<T> it)
	{
	}

	[Token(Token = "0x6000A00")]
	public bool Rewind()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	public bool MoveNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A02")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000A03")]
	public void Remove(T item)
	{
	}

	[Token(Token = "0x6000A04")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A05")]
	public EZLinkedList()
	{
	}
}
[Token(Token = "0x2000112")]
public struct Rect3D
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 m_tl;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 m_tr;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_bl;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_br;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_width;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_height;

	[Token(Token = "0x170001AA")]
	public Vector3 topLeft
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1E2B830", Offset = "0x1E2B830", VA = "0x1E2B830")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AB")]
	public Vector3 topRight
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1E2B83C", Offset = "0x1E2B83C", VA = "0x1E2B83C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AC")]
	public Vector3 bottomLeft
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1E2B848", Offset = "0x1E2B848", VA = "0x1E2B848")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AD")]
	public Vector3 bottomRight
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1E2B854", Offset = "0x1E2B854", VA = "0x1E2B854")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AE")]
	public float width
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1E2B860", Offset = "0x1E2B860", VA = "0x1E2B860")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AF")]
	public float height
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1E2B8AC", Offset = "0x1E2B8AC", VA = "0x1E2B8AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x1E2B8FC", Offset = "0x1E2B8FC", VA = "0x1E2B8FC")]
	public void FromPoints(Vector3 tl, Vector3 tr, Vector3 bl)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x1E2B944", Offset = "0x1E2B944", VA = "0x1E2B944")]
	public Rect3D(Vector3 tl, Vector3 tr, Vector3 bl)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1E2BA08", Offset = "0x1E2BA08", VA = "0x1E2BA08")]
	public Rect3D(Rect r)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1E2BB64", Offset = "0x1E2BB64", VA = "0x1E2BB64")]
	public Rect GetRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x1E2BA9C", Offset = "0x1E2BA9C", VA = "0x1E2BA9C")]
	public void FromRect(Rect r)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x1E2BB78", Offset = "0x1E2BB78", VA = "0x1E2BB78")]
	public void MultFast(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x1E2BC38", Offset = "0x1E2BC38", VA = "0x1E2BC38")]
	public static Rect3D MultFast(Rect3D rect, Matrix4x4 matrix)
	{
		return default(Rect3D);
	}
}
[Token(Token = "0x2000113")]
[ExecuteInEditMode]
public abstract class SpriteRoot : MonoBehaviour, IEZLinkedListItem<ISpriteAnimatable>, IUseCamera
{
	[Token(Token = "0x20001B6")]
	public enum SPRITE_PLANE
	{
		[Token(Token = "0x4000A72")]
		XY,
		[Token(Token = "0x4000A73")]
		XZ,
		[Token(Token = "0x4000A74")]
		YZ
	}

	[Token(Token = "0x20001B7")]
	public enum ANCHOR_METHOD
	{
		[Token(Token = "0x4000A76")]
		UPPER_LEFT,
		[Token(Token = "0x4000A77")]
		UPPER_CENTER,
		[Token(Token = "0x4000A78")]
		UPPER_RIGHT,
		[Token(Token = "0x4000A79")]
		MIDDLE_LEFT,
		[Token(Token = "0x4000A7A")]
		MIDDLE_CENTER,
		[Token(Token = "0x4000A7B")]
		MIDDLE_RIGHT,
		[Token(Token = "0x4000A7C")]
		BOTTOM_LEFT,
		[Token(Token = "0x4000A7D")]
		BOTTOM_CENTER,
		[Token(Token = "0x4000A7E")]
		BOTTOM_RIGHT,
		[Token(Token = "0x4000A7F")]
		TEXTURE_OFFSET
	}

	[Token(Token = "0x20001B8")]
	public enum WINDING_ORDER
	{
		[Token(Token = "0x4000A81")]
		CCW,
		[Token(Token = "0x4000A82")]
		CW
	}

	[Token(Token = "0x20001B9")]
	public delegate void SpriteResizedDelegate(float newWidth, float newHeight, SpriteRoot sprite);

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool managed;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteManager manager;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool addedToManager;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int drawLayer;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool persistent;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public SPRITE_PLANE plane;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WINDING_ORDER winding;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float width;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float height;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 bleedCompensation;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ANCHOR_METHOD anchor;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool pixelPerfect;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool autoResize;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector2 bleedCompensationUV;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Vector2 bleedCompensationUVMax;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected SPRITE_FRAME frameInfo;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Rect uvRect;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Vector2 scaleFactor;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector2 topLeftOffset;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected Vector2 bottomRightOffset;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Vector3 topLeft;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3 bottomRight;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 unclippedTopLeft;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Vector3 unclippedBottomRight;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected Vector2 tlTruncate;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Vector2 brTruncate;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected bool truncated;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Rect3D clippingRect;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Rect localClipRect;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected float leftClipPct;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected float rightClipPct;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected float topClipPct;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected float bottomClipPct;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool clipped;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	[HideInInspector]
	public bool billboarded;

	[NonSerialized]
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	public bool isClone;

	[NonSerialized]
	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	public bool uvsInitialized;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected bool m_started;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	protected bool deleted;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3 offset;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Color color;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected ISpriteMesh m_spriteMesh;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected ISpriteAnimatable m_prev;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected ISpriteAnimatable m_next;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected Vector2 screenSize;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Camera renderCamera;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected Vector2 sizeUnitsPerUV;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public Vector2 pixelsPerUV;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[HideInInspector]
	public Renderer _renderer;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected float worldUnitsPerScreenPixel;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected SpriteResizedDelegate resizedDelegate;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected EZScreenPlacement screenPlacer;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool hideAtStart;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	protected bool m_hidden;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	public bool ignoreClipping;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected SpriteRootMirror mirror;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected Vector2 tempUV;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected Mesh oldMesh;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	protected SpriteManager savedManager;

	[Token(Token = "0x170001B0")]
	public Color Color
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1E3E078", Offset = "0x1E3E078", VA = "0x1E3E078", Slot = "31")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1E3E08C", Offset = "0x1E3E08C", VA = "0x1E3E08C", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public virtual Camera RenderCamera
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1E3E678", Offset = "0x1E3E678", VA = "0x1E3E678", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1E3E680", Offset = "0x1E3E680", VA = "0x1E3E680", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public Vector2 PixelSize
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1E3EA20", Offset = "0x1E3EA20", VA = "0x1E3EA20")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1E3EA34", Offset = "0x1E3EA34", VA = "0x1E3EA34")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public Vector2 ImageSize
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x1E3EA50", Offset = "0x1E3EA50", VA = "0x1E3EA50")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170001B4")]
	public bool Managed
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1E3EAA8", Offset = "0x1E3EAA8", VA = "0x1E3EAA8", Slot = "38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1E3EAB0", Offset = "0x1E3EAB0", VA = "0x1E3EAB0")]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public bool Started
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1E3EE64", Offset = "0x1E3EE64", VA = "0x1E3EE64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B6")]
	public virtual Rect3D ClippingRect
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x1E3F520", Offset = "0x1E3F520", VA = "0x1E3F520", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1E3F548", Offset = "0x1E3F548", VA = "0x1E3F548", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public virtual bool Clipped
	{
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1E3F690", Offset = "0x1E3F690", VA = "0x1E3F690", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1E3F698", Offset = "0x1E3F698", VA = "0x1E3F698", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public ANCHOR_METHOD Anchor
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1E3F6E8", Offset = "0x1E3F6E8", VA = "0x1E3F6E8", Slot = "44")]
		get
		{
			return default(ANCHOR_METHOD);
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1E3F6F0", Offset = "0x1E3F6F0", VA = "0x1E3F6F0")]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1E3F728", Offset = "0x1E3F728", VA = "0x1E3F728")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BA")]
	public Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1E3F768", Offset = "0x1E3F768", VA = "0x1E3F768")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BB")]
	public Vector3 TopLeft
	{
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1E3F7A8", Offset = "0x1E3F7A8", VA = "0x1E3F7A8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BC")]
	public Vector3 BottomRight
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1E3F888", Offset = "0x1E3F888", VA = "0x1E3F888")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BD")]
	public ISpriteMesh spriteMesh
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1E3F96C", Offset = "0x1E3F96C", VA = "0x1E3F96C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1E384C8", Offset = "0x1E384C8", VA = "0x1E384C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public bool AddedToManager
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1E3F974", Offset = "0x1E3F974", VA = "0x1E3F974")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1E3F97C", Offset = "0x1E3F97C", VA = "0x1E3F97C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public ISpriteAnimatable prev
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1E3F994", Offset = "0x1E3F994", VA = "0x1E3F994", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1E3F99C", Offset = "0x1E3F99C", VA = "0x1E3F99C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public ISpriteAnimatable next
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1E3F9AC", Offset = "0x1E3F9AC", VA = "0x1E3F9AC", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1E3F9B4", Offset = "0x1E3F9B4", VA = "0x1E3F9B4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x1E2F64C", Offset = "0x1E2F64C", VA = "0x1E2F64C", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1E2FE1C", Offset = "0x1E2FE1C", VA = "0x1E2FE1C", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1E3CB00", Offset = "0x1E3CB00", VA = "0x1E3CB00")]
	protected void CalcSizeUnitsPerUV()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1E2F930", Offset = "0x1E2F930", VA = "0x1E2F930", Slot = "14")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1E30184", Offset = "0x1E30184", VA = "0x1E30184", Slot = "15")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1E30530", Offset = "0x1E30530", VA = "0x1E30530", Slot = "16")]
	public virtual void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1E30D3C", Offset = "0x1E30D3C", VA = "0x1E30D3C", Slot = "17")]
	public virtual void InitUVs()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1E33DC4", Offset = "0x1E33DC4", VA = "0x1E33DC4", Slot = "18")]
	public virtual void Delete()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1E3406C", Offset = "0x1E3406C", VA = "0x1E3406C", Slot = "19")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1E33F70", Offset = "0x1E33F70", VA = "0x1E33F70", Slot = "20")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1E3CBC8", Offset = "0x1E3CBC8", VA = "0x1E3CBC8", Slot = "21")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x1E3CBD8", Offset = "0x1E3CBD8", VA = "0x1E3CBD8")]
	public void CalcEdges()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1E30AE0", Offset = "0x1E30AE0", VA = "0x1E30AE0")]
	public void CalcSize()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1E3D164", Offset = "0x1E3D164", VA = "0x1E3D164", Slot = "22")]
	public virtual void SetSize(float w, float h)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x1E3D1E8", Offset = "0x1E3D1E8", VA = "0x1E3D1E8")]
	protected void SetSizeXY(float w, float h)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1E3D3E4", Offset = "0x1E3D3E4", VA = "0x1E3D3E4")]
	protected void SetSizeXZ(float w, float h)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x1E3D5E0", Offset = "0x1E3D5E0", VA = "0x1E3D5E0")]
	protected void SetSizeYZ(float w, float h)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1E3D7DC", Offset = "0x1E3D7DC", VA = "0x1E3D7DC", Slot = "23")]
	public virtual void TruncateRight(float pct)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1E3D86C", Offset = "0x1E3D86C", VA = "0x1E3D86C", Slot = "24")]
	public virtual void TruncateLeft(float pct)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1E3D8FC", Offset = "0x1E3D8FC", VA = "0x1E3D8FC", Slot = "25")]
	public virtual void TruncateTop(float pct)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1E3D98C", Offset = "0x1E3D98C", VA = "0x1E3D98C", Slot = "26")]
	public virtual void TruncateBottom(float pct)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x1E3DA1C", Offset = "0x1E3DA1C", VA = "0x1E3DA1C", Slot = "27")]
	public virtual void Untruncate()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1E3DA58", Offset = "0x1E3DA58", VA = "0x1E3DA58", Slot = "28")]
	public virtual void Unclip()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1E3DAA0", Offset = "0x1E3DAA0", VA = "0x1E3DAA0", Slot = "29")]
	public virtual void UpdateUVs()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1E3DF74", Offset = "0x1E3DF74", VA = "0x1E3DF74")]
	public void TransformBillboarded(Transform t)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1E3DF78", Offset = "0x1E3DF78", VA = "0x1E3DF78", Slot = "30")]
	public virtual void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1E3E09C", Offset = "0x1E3E09C", VA = "0x1E3E09C")]
	public void SetPixelToUV(int texWidth, int texHeight)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x1E3B4C8", Offset = "0x1E3B4C8", VA = "0x1E3B4C8")]
	public void SetPixelToUV(Texture tex)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1E3E17C", Offset = "0x1E3E17C", VA = "0x1E3E17C")]
	public void CalcPixelToUV()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1E3E4A8", Offset = "0x1E3E4A8", VA = "0x1E3E4A8")]
	public void SetTexture(Texture2D tex)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1E3E598", Offset = "0x1E3E598", VA = "0x1E3E598")]
	public void SetMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1E3E6C0", Offset = "0x1E3E6C0", VA = "0x1E3E6C0", Slot = "35")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1E3E584", Offset = "0x1E3E584", VA = "0x1E3E584", Slot = "8")]
	public void SetCamera()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1E3E6D4", Offset = "0x1E3E6D4", VA = "0x1E3E6D4", Slot = "36")]
	public virtual void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1E3428C", Offset = "0x1E3428C", VA = "0x1E3428C", Slot = "37")]
	public virtual void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1E3EA18", Offset = "0x1E3EA18", VA = "0x1E3EA18")]
	public bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1E3EBD8", Offset = "0x1E3EBD8", VA = "0x1E3EBD8")]
	protected void DestroyMesh()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1E3CA18", Offset = "0x1E3CA18", VA = "0x1E3CA18")]
	protected void AddMesh()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1E3455C", Offset = "0x1E3455C", VA = "0x1E3455C")]
	public void SetBleedCompensation()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1E3EE6C", Offset = "0x1E3EE6C", VA = "0x1E3EE6C")]
	public void SetBleedCompensation(float x, float y)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1E30A14", Offset = "0x1E30A14", VA = "0x1E30A14")]
	public void SetBleedCompensation(Vector2 xy)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1E3EE70", Offset = "0x1E3EE70", VA = "0x1E3EE70")]
	public void SetPlane(SPRITE_PLANE p)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1E3EE88", Offset = "0x1E3EE88", VA = "0x1E3EE88")]
	public void SetWindingOrder(WINDING_ORDER order)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1E3EF38", Offset = "0x1E3EF38", VA = "0x1E3EF38")]
	public void SetDrawLayer(int layer)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1E3F030", Offset = "0x1E3F030", VA = "0x1E3F030")]
	public void SetFrameInfo(SPRITE_FRAME fInfo)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1E3F090", Offset = "0x1E3F090", VA = "0x1E3F090", Slot = "39")]
	public void SetUVs(Rect uv)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1E3F100", Offset = "0x1E3F100", VA = "0x1E3F100")]
	public void SetUVsFromPixelCoords(Rect pxCoords)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1E3F220", Offset = "0x1E3F220", VA = "0x1E3F220")]
	public Rect GetUVs()
	{
		return default(Rect);
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1E3F22C", Offset = "0x1E3F22C", VA = "0x1E3F22C")]
	public Vector3[] GetVertices()
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1E3F37C", Offset = "0x1E3F37C", VA = "0x1E3F37C")]
	public Vector3 GetCenterPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1E3F6D0", Offset = "0x1E3F6D0", VA = "0x1E3F6D0")]
	public void SetAnchor(ANCHOR_METHOD a)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1E3F708", Offset = "0x1E3F708", VA = "0x1E3F708")]
	public void SetOffset(Vector3 o)
	{
	}

	[Token(Token = "0x6000A5F")]
	public abstract Vector2 GetDefaultPixelSize(PathFromGUIDDelegate guid2Path, AssetLoaderDelegate loader);

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1E30D00", Offset = "0x1E30D00", VA = "0x1E30D00")]
	public Vector2 PixelSpaceToUVSpace(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1E3F988", Offset = "0x1E3F988", VA = "0x1E3F988")]
	public Vector2 PixelSpaceToUVSpace(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1E30CB8", Offset = "0x1E30CB8", VA = "0x1E30CB8")]
	public Vector2 PixelCoordToUVCoord(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1E3F214", Offset = "0x1E3F214", VA = "0x1E3F214")]
	public Vector2 PixelCoordToUVCoord(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A64")]
	public abstract int GetStateIndex(string stateName);

	[Token(Token = "0x6000A65")]
	public abstract void SetState(int index);

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1E3F9C4", Offset = "0x1E3F9C4", VA = "0x1E3F9C4", Slot = "48")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1E3FB00", Offset = "0x1E3FB00", VA = "0x1E3FB00", Slot = "49")]
	public virtual void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1E3FB10", Offset = "0x1E3FB10", VA = "0x1E3FB10", Slot = "50")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1E31300", Offset = "0x1E31300", VA = "0x1E31300")]
	protected SpriteRoot()
	{
	}
}
[Token(Token = "0x2000114")]
public class SpriteRootMirror
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool managed;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteManager manager;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int drawLayer;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SpriteRoot.SPRITE_PLANE plane;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRoot.WINDING_ORDER winding;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float width;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float height;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 bleedCompensation;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SpriteRoot.ANCHOR_METHOD anchor;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 offset;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color color;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool pixelPerfect;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool autoResize;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera renderCamera;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool hideAtStart;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1C8CC30", Offset = "0x1C8CC30", VA = "0x1C8CC30", Slot = "4")]
	public virtual void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1C8CCF8", Offset = "0x1C8CCF8", VA = "0x1C8CCF8", Slot = "5")]
	public virtual bool Validate(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1C8CD20", Offset = "0x1C8CD20", VA = "0x1C8CD20", Slot = "6")]
	public virtual bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1C8CFA4", Offset = "0x1C8CFA4", VA = "0x1C8CFA4", Slot = "7")]
	protected virtual void HandleManageState(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1C8CFD8", Offset = "0x1C8CFD8", VA = "0x1C8CFD8", Slot = "8")]
	public virtual void UpdateManager(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1C8D0E8", Offset = "0x1C8D0E8", VA = "0x1C8D0E8", Slot = "9")]
	protected virtual void HandleDrawLayerChange(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1C8D11C", Offset = "0x1C8D11C", VA = "0x1C8D11C")]
	public SpriteRootMirror()
	{
	}
}
[Token(Token = "0x2000115")]
public class StorageManager : MonoBehaviour
{
	[Token(Token = "0x20001BA")]
	private class TypeNameConverter : SerializationBinder
	{
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1FEB714", Offset = "0x1FEB714", VA = "0x1FEB714", Slot = "5")]
		public override Type BindToType(string assemblyName, string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1FEB84C", Offset = "0x1FEB84C", VA = "0x1FEB84C")]
		public TypeNameConverter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001BB")]
	public class RangeResultBase : ISerializable
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Score;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float AccuracyPercentage;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BonusPoints;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int GunId;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ScopeId;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int LaserId;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int StockId;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MagazineId;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int GripId;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int BulletsFired;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TargetsHit;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int TargetsMissed;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int LongestStreak;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ExtraBonuses extraBonuses;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float AverageTime;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float AverageDistance;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Time;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float BestShot;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int RangeId;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ulong UserId;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1FEA768", Offset = "0x1FEA768", VA = "0x1FEA768")]
		public RangeResultBase()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1FE17F0", Offset = "0x1FE17F0", VA = "0x1FE17F0")]
		public RangeResultBase(RangeResult clientResult)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1FEAC00", Offset = "0x1FEAC00", VA = "0x1FEAC00")]
		public RangeResultBase(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1FEB2C0", Offset = "0x1FEB2C0", VA = "0x1FEB2C0", Slot = "5")]
		public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001BC")]
	public class RangeResult : RangeResultBase, ISerializable
	{
		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isNew;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int topScore;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int scorePercent;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string scoreResult;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int totalReloads;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int perfectReloads;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int bullseyes;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float maxTimeBonus;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float accuracyBonus;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float maxAccuracyBonus;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float maxRunningScore;

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1FEA5F8", Offset = "0x1FEA5F8", VA = "0x1FEA5F8")]
		public RangeResult(bool data_isNew, int data_score, int data_topScore, int data_scorePercent, string data_scoreResult, float data_accuracy, int data_bonusPoints, int data_gunUsed, int data_scopeUsed, int data_laserUsed, int data_stockUsed, int data_magazineUsed, int data_gripUsed, int data_totalShotsFired, int data_shotsOnTargetFired, int data_targetsMissed, int data_totalReloads, int data_perfectReloads, int data_longestStreak, int data_bullseyes, float data_averageTimeToTarget, float data_averageDistanceToTarget, float data_totalTimeTaken, float data_bestShot, int data_rangeID)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1FEA828", Offset = "0x1FEA828", VA = "0x1FEA828")]
		public RangeResult()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1FEA82C", Offset = "0x1FEA82C", VA = "0x1FEA82C")]
		public RangeResult(RangeResult rangeResult)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1FEA928", Offset = "0x1FEA928", VA = "0x1FEA928")]
		public RangeResult(RangeResultBase rangeResultBase)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1FEA9E4", Offset = "0x1FEA9E4", VA = "0x1FEA9E4")]
		public RangeResult(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1FEB184", Offset = "0x1FEB184", VA = "0x1FEB184", Slot = "5")]
		public override void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001BD")]
	public class PlaybackStorage : ISerializable
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int challengeRange;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int challengeScore;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int challengeWeapon;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] replayData;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1FEA398", Offset = "0x1FEA398", VA = "0x1FEA398")]
		public PlaybackStorage()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1FEA3A0", Offset = "0x1FEA3A0", VA = "0x1FEA3A0")]
		protected PlaybackStorage(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1FEA518", Offset = "0x1FEA518", VA = "0x1FEA518", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001BE")]
	public class WeaponConfig : ISerializable
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int versionReference;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int weaponIndex;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] railNames;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] railAttachmentNames;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] upgradeNames;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] upgradeRails;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] upgradeRailAttachmentNames;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] customComponents;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string nativeStock;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string ammunitionUpgrade;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string camouflageTexture;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float camouflageTiling;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float reloadSpeedMultiplier;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float sightingSpeedMultiplier;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float actionSpeedMultiplier;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float accuracyMultiplier;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float holdBreathMultiplier;

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1FEBC48", Offset = "0x1FEBC48", VA = "0x1FEBC48")]
		public WeaponConfig(bool data_isNew, int data_versionReference, string[] data_railNames, string[] data_railAttachmentNames, string[] data_upgradeNames, string[] data_upgradeRails, string[] data_upgradeRailAttachmentNames, string[] data_customComponents, string data_nativeStock, string data_ammunitionUpgrade, string data_camouflageTexture, float data_camouflageTiling, float data_reloadSpeedMultiplier, float data_sightingSpeedMultiplier, float data_actionSpeedMultiplier, float data_accuracyMultiplier, float data_holdBreathMultiplier)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1FEBDA4", Offset = "0x1FEBDA4", VA = "0x1FEBDA4")]
		public WeaponConfig()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1FEBDB4", Offset = "0x1FEBDB4", VA = "0x1FEBDB4")]
		protected WeaponConfig(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1FEC530", Offset = "0x1FEC530", VA = "0x1FEC530", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001BF")]
	public class WeaponStatistic : ISerializable
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bulletsFired;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int timesReloaded;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int timeSpent;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int rangesCompleted;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int attachmentsOwned;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int skinsOwned;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int weaponLevel;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int bullseyes;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int zombieHeadshots;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int rangeAccuracy;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int laddersComplete;

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1FEC95C", Offset = "0x1FEC95C", VA = "0x1FEC95C")]
		public WeaponStatistic(int data_bulletsFired, int data_timesReloaded, int data_timeSpent, int data_rangesCompleted, int data_attachmentsOwned, int data_skinsOwned, int data_weaponLevel, int data_bullseyes, int data_zombieHeadshots, int data_rangeAccuracy, int data_laddersComplete)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1FEC9F0", Offset = "0x1FEC9F0", VA = "0x1FEC9F0")]
		public WeaponStatistic()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1FECA24", Offset = "0x1FECA24", VA = "0x1FECA24")]
		protected WeaponStatistic(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1FECEC4", Offset = "0x1FECEC4", VA = "0x1FECEC4", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C0")]
	public class WeaponStatistics : ISerializable, IEnumerable
	{
		[Token(Token = "0x20001F1")]
		private class WeaponStatisticsEnumerator : IEnumerator
		{
			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _position;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly WeaponStatistics _ws;

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001077")]
				[Address(RVA = "0x1FF02DC", Offset = "0x1FF02DC", VA = "0x1FF02DC", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x1FED3A8", Offset = "0x1FED3A8", VA = "0x1FED3A8")]
			public WeaponStatisticsEnumerator(WeaponStatistics ws)
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x1FF0324", Offset = "0x1FF0324", VA = "0x1FF0324", Slot = "4")]
			private bool System.Collections.IEnumerator.MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x1FF0370", Offset = "0x1FF0370", VA = "0x1FF0370", Slot = "6")]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponStatistic[] storedWeaponStatistics;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1FED0BC", Offset = "0x1FED0BC", VA = "0x1FED0BC")]
		public WeaponStatistics(bool data_isNew, WeaponStatistic[] data_storedWeaponStatistics)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1FED104", Offset = "0x1FED104", VA = "0x1FED104")]
		public WeaponStatistics()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1FED10C", Offset = "0x1FED10C", VA = "0x1FED10C")]
		protected WeaponStatistics(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1FED2A4", Offset = "0x1FED2A4", VA = "0x1FED2A4", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1FED334", Offset = "0x1FED334", VA = "0x1FED334", Slot = "5")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x20001C1")]
	public class UserScores : ISerializable
	{
		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int versionReference;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] storedUserScores;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] storedEventScores;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] storedEventResult;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1FEB854", Offset = "0x1FEB854", VA = "0x1FEB854")]
		public UserScores(int data_versionReference, int[] data_storedUserScores, int[] data_storedEventScores, string[] data_storedEventResult)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x1FEB8C8", Offset = "0x1FEB8C8", VA = "0x1FEB8C8")]
		public UserScores()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1FEB8D0", Offset = "0x1FEB8D0", VA = "0x1FEB8D0")]
		protected UserScores(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1FEBB68", Offset = "0x1FEBB68", VA = "0x1FEBB68", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C2")]
	public class Challenge : ISerializable
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackStorage playback;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RangeResult result;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string UserName;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int UserId;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1FE95F8", Offset = "0x1FE95F8", VA = "0x1FE95F8")]
		public Challenge(PlaybackStorage data_playback, RangeResult data_result, string data_UserName, int data_UserId)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1FE9670", Offset = "0x1FE9670", VA = "0x1FE9670")]
		public Challenge()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1FE9678", Offset = "0x1FE9678", VA = "0x1FE9678")]
		protected Challenge(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1FE9948", Offset = "0x1FE9948", VA = "0x1FE9948", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x20001C3")]
	public class ChallengeDetail
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BBC", Offset = "0x8C9BBC")]
		private int <UCId>k__BackingField;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BCC", Offset = "0x8C9BCC")]
		private int <CId>k__BackingField;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BDC", Offset = "0x8C9BDC")]
		private string <Chgr>k__BackingField;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BEC", Offset = "0x8C9BEC")]
		private int <UId>k__BackingField;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9BFC", Offset = "0x8C9BFC")]
		private int <RId>k__BackingField;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C0C", Offset = "0x8C9C0C")]
		private int <State>k__BackingField;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C1C", Offset = "0x8C9C1C")]
		private int <Prize>k__BackingField;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C2C", Offset = "0x8C9C2C")]
		private DateTime <ChgeDt>k__BackingField;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C3C", Offset = "0x8C9C3C")]
		private string <ChallengeMode>k__BackingField;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C4C", Offset = "0x8C9C4C")]
		private string <ChallengeWeapon>k__BackingField;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C5C", Offset = "0x8C9C5C")]
		private int <ChallengePrize>k__BackingField;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C6C", Offset = "0x8C9C6C")]
		private int <ChallengePercentage>k__BackingField;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C7C", Offset = "0x8C9C7C")]
		private int <Win>k__BackingField;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C8C", Offset = "0x8C9C8C")]
		private string <EventType>k__BackingField;

		[Token(Token = "0x17000230")]
		public int UCId
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x1FE9A28", Offset = "0x1FE9A28", VA = "0x1FE9A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB1EC", Offset = "0x8CB1EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x1FE9A30", Offset = "0x1FE9A30", VA = "0x1FE9A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB1FC", Offset = "0x8CB1FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public int CId
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x1FE9A38", Offset = "0x1FE9A38", VA = "0x1FE9A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB20C", Offset = "0x8CB20C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x1FE9A40", Offset = "0x1FE9A40", VA = "0x1FE9A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB21C", Offset = "0x8CB21C")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public string Chgr
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1FE9A48", Offset = "0x1FE9A48", VA = "0x1FE9A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB22C", Offset = "0x8CB22C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1FE9A50", Offset = "0x1FE9A50", VA = "0x1FE9A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB23C", Offset = "0x8CB23C")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public int UId
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1FE9A58", Offset = "0x1FE9A58", VA = "0x1FE9A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB24C", Offset = "0x8CB24C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1FE9A60", Offset = "0x1FE9A60", VA = "0x1FE9A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB25C", Offset = "0x8CB25C")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public int RId
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1FE9A68", Offset = "0x1FE9A68", VA = "0x1FE9A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB26C", Offset = "0x8CB26C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1FE9A70", Offset = "0x1FE9A70", VA = "0x1FE9A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB27C", Offset = "0x8CB27C")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public int State
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1FE9A78", Offset = "0x1FE9A78", VA = "0x1FE9A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB28C", Offset = "0x8CB28C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1FE9A80", Offset = "0x1FE9A80", VA = "0x1FE9A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB29C", Offset = "0x8CB29C")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public int Prize
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1FE9A88", Offset = "0x1FE9A88", VA = "0x1FE9A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2AC", Offset = "0x8CB2AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1FE9A90", Offset = "0x1FE9A90", VA = "0x1FE9A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2BC", Offset = "0x8CB2BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public DateTime ChgeDt
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1FE9A98", Offset = "0x1FE9A98", VA = "0x1FE9A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2CC", Offset = "0x8CB2CC")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1FE9AA0", Offset = "0x1FE9AA0", VA = "0x1FE9AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2DC", Offset = "0x8CB2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public string ChallengeMode
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1FE9AA8", Offset = "0x1FE9AA8", VA = "0x1FE9AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2EC", Offset = "0x8CB2EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x1FE9AB0", Offset = "0x1FE9AB0", VA = "0x1FE9AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB2FC", Offset = "0x8CB2FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public string ChallengeWeapon
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1FE9AB8", Offset = "0x1FE9AB8", VA = "0x1FE9AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB30C", Offset = "0x8CB30C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1FE9AC0", Offset = "0x1FE9AC0", VA = "0x1FE9AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB31C", Offset = "0x8CB31C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public int ChallengePrize
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1FE9AC8", Offset = "0x1FE9AC8", VA = "0x1FE9AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB32C", Offset = "0x8CB32C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1FE9AD0", Offset = "0x1FE9AD0", VA = "0x1FE9AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB33C", Offset = "0x8CB33C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public int ChallengePercentage
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x1FE9AD8", Offset = "0x1FE9AD8", VA = "0x1FE9AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB34C", Offset = "0x8CB34C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1FE9AE0", Offset = "0x1FE9AE0", VA = "0x1FE9AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB35C", Offset = "0x8CB35C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public int Win
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x1FE9AE8", Offset = "0x1FE9AE8", VA = "0x1FE9AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB36C", Offset = "0x8CB36C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x1FE9AF0", Offset = "0x1FE9AF0", VA = "0x1FE9AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB37C", Offset = "0x8CB37C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public string EventType
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x1FE9AF8", Offset = "0x1FE9AF8", VA = "0x1FE9AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB38C", Offset = "0x8CB38C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x1FE9B00", Offset = "0x1FE9B00", VA = "0x1FE9B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB39C", Offset = "0x8CB39C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1FE9B08", Offset = "0x1FE9B08", VA = "0x1FE9B08")]
		public ChallengeDetail()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1FE9B10", Offset = "0x1FE9B10", VA = "0x1FE9B10")]
		public ChallengeDetail(int uCId, int cId, string chgr, int uId, int rId, int state, int prize, DateTime chgeDt)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1FE9B94", Offset = "0x1FE9B94", VA = "0x1FE9B94")]
		public ChallengeDetail(ChallengeResult challengeDetail)
		{
		}
	}

	[Token(Token = "0x20001C4")]
	public class ChallengeResult
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9C9C", Offset = "0x8C9C9C")]
		private int <UCID>k__BackingField;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CAC", Offset = "0x8C9CAC")]
		private int <CID>k__BackingField;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CBC", Offset = "0x8C9CBC")]
		private string <User>k__BackingField;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CCC", Offset = "0x8C9CCC")]
		private int <UID>k__BackingField;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CDC", Offset = "0x8C9CDC")]
		private int <RID>k__BackingField;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CEC", Offset = "0x8C9CEC")]
		private int <State>k__BackingField;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9CFC", Offset = "0x8C9CFC")]
		private int <Prize>k__BackingField;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D0C", Offset = "0x8C9D0C")]
		private DateTime <ChgeDt>k__BackingField;

		[Token(Token = "0x1700023E")]
		public int UCID
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x1FE9C0C", Offset = "0x1FE9C0C", VA = "0x1FE9C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3AC", Offset = "0x8CB3AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x1FE9C14", Offset = "0x1FE9C14", VA = "0x1FE9C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3BC", Offset = "0x8CB3BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public int CID
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x1FE9C1C", Offset = "0x1FE9C1C", VA = "0x1FE9C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3CC", Offset = "0x8CB3CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x1FE9C24", Offset = "0x1FE9C24", VA = "0x1FE9C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3DC", Offset = "0x8CB3DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public string User
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x1FE9C2C", Offset = "0x1FE9C2C", VA = "0x1FE9C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3EC", Offset = "0x8CB3EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x1FE9C34", Offset = "0x1FE9C34", VA = "0x1FE9C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB3FC", Offset = "0x8CB3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public int UID
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1FE9C3C", Offset = "0x1FE9C3C", VA = "0x1FE9C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB40C", Offset = "0x8CB40C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1FE9C44", Offset = "0x1FE9C44", VA = "0x1FE9C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB41C", Offset = "0x8CB41C")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public int RID
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1FE9C4C", Offset = "0x1FE9C4C", VA = "0x1FE9C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB42C", Offset = "0x8CB42C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1FE9C54", Offset = "0x1FE9C54", VA = "0x1FE9C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB43C", Offset = "0x8CB43C")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public int State
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1FE9C5C", Offset = "0x1FE9C5C", VA = "0x1FE9C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB44C", Offset = "0x8CB44C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1FE9C64", Offset = "0x1FE9C64", VA = "0x1FE9C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB45C", Offset = "0x8CB45C")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public int Prize
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1FE9C6C", Offset = "0x1FE9C6C", VA = "0x1FE9C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB46C", Offset = "0x8CB46C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1FE9C74", Offset = "0x1FE9C74", VA = "0x1FE9C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB47C", Offset = "0x8CB47C")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public DateTime ChgeDt
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x1FE9C7C", Offset = "0x1FE9C7C", VA = "0x1FE9C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB48C", Offset = "0x8CB48C")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x1FE9C84", Offset = "0x1FE9C84", VA = "0x1FE9C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB49C", Offset = "0x8CB49C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1FE9C8C", Offset = "0x1FE9C8C", VA = "0x1FE9C8C")]
		public ChallengeResult()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1FE9C94", Offset = "0x1FE9C94", VA = "0x1FE9C94")]
		public ChallengeResult(int uCID, int cID, string user, int uID, int rID, int state, int prize, DateTime chgeDt)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C5")]
	public class GatedPurchase : ISerializable
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int itemID;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime unlockTime;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int weapon;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int priceOfItem;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hasUnlocked;

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1FE9D18", Offset = "0x1FE9D18", VA = "0x1FE9D18")]
		public GatedPurchase(int data_itemID, DateTime data_unlockTime, int data_weapon, int data_priceOfItem, int data_hasUnlocked)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1FE9D70", Offset = "0x1FE9D70", VA = "0x1FE9D70")]
		public GatedPurchase()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1FE9D78", Offset = "0x1FE9D78", VA = "0x1FE9D78")]
		protected GatedPurchase(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1FEA018", Offset = "0x1FEA018", VA = "0x1FEA018", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C6")]
	public class GatedPurchases : ISerializable
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GatedPurchase[] storedGatedPurchases;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1FEA120", Offset = "0x1FEA120", VA = "0x1FEA120")]
		public GatedPurchases(bool data_isNew, GatedPurchase[] data_storedGatedPurchases)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1FEA168", Offset = "0x1FEA168", VA = "0x1FEA168")]
		public GatedPurchases()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1FEA170", Offset = "0x1FEA170", VA = "0x1FEA170")]
		protected GatedPurchases(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1FEA308", Offset = "0x1FEA308", VA = "0x1FEA308", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _saveLocationPrefix;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StorageManager instance;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static RangeResult rangeResult;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string cachedFilename;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool saveLastResult;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlaybackStorage playbackStorage;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WeaponConfig weaponConfig;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasConfigChanged;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WeaponStatistics weaponStatistics;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool shouldSaveStats;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UserScores userScores;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Challenge challenge;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Challenge downloadedChallenge;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GatedPurchase gatedpurchase;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GatedPurchases gatedpurchases;

	[Token(Token = "0x170001C1")]
	public static StorageManager Instance
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1C953A0", Offset = "0x1C953A0", VA = "0x1C953A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1C95114", Offset = "0x1C95114", VA = "0x1C95114")]
	public static string GetSaveLocationPrefix()
	{
		return null;
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1C954CC", Offset = "0x1C954CC", VA = "0x1C954CC")]
	public static string UrlEncodeString(string str)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1C955B4", Offset = "0x1C955B4", VA = "0x1C955B4")]
	public static void WriteStringToFile(string str, string fileName, bool absolutePath = false)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1C956B0", Offset = "0x1C956B0", VA = "0x1C956B0")]
	public static string ReadStringFromFile(string fileName, bool absolutePath = false)
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1C957CC", Offset = "0x1C957CC", VA = "0x1C957CC")]
	public static void WriteBytesToFile(byte[] bytes, string fileName)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1C95890", Offset = "0x1C95890", VA = "0x1C95890")]
	public static byte[] ReadBytesFromFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x1C959B4", Offset = "0x1C959B4", VA = "0x1C959B4")]
	public static void removeFile(string fileName)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1C95A04", Offset = "0x1C95A04", VA = "0x1C95A04")]
	public static void RemoveAllFiles()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x1C95AD0", Offset = "0x1C95AD0", VA = "0x1C95AD0")]
	public static byte[] SerializeToBytes(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1C95BA0", Offset = "0x1C95BA0", VA = "0x1C95BA0")]
	public static string SerializeToString(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1C95DB0", Offset = "0x1C95DB0", VA = "0x1C95DB0")]
	public static string CompressToString(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x1C95E28", Offset = "0x1C95E28", VA = "0x1C95E28")]
	public static object Decompress(string objAsCompressedString)
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x1C961F4", Offset = "0x1C961F4", VA = "0x1C961F4")]
	public static object SafeDecompress(string unSafeObjAsCompressedString)
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1C960B8", Offset = "0x1C960B8", VA = "0x1C960B8")]
	public static object Deserialize(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x1C95EBC", Offset = "0x1C95EBC", VA = "0x1C95EBC")]
	public static object Deserialize(string serializedObj)
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x1C957C4", Offset = "0x1C957C4", VA = "0x1C957C4")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x1C962D0", Offset = "0x1C962D0", VA = "0x1C962D0")]
	public static void BackupPlayer(string playerFileName, string playerBackupFileName)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x1C963B4", Offset = "0x1C963B4", VA = "0x1C963B4")]
	public RangeResult loadResult(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1C96514", Offset = "0x1C96514", VA = "0x1C96514")]
	public void cacheResult(string fileName)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1C9651C", Offset = "0x1C9651C", VA = "0x1C9651C")]
	public void SaveLastResult(bool save)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1C96528", Offset = "0x1C96528", VA = "0x1C96528")]
	public void saveCachedResults()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1C96628", Offset = "0x1C96628", VA = "0x1C96628")]
	public void cacheLastResult(string filename)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1C965CC", Offset = "0x1C965CC", VA = "0x1C965CC")]
	public void saveResult(string fileName)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1C9662C", Offset = "0x1C9662C", VA = "0x1C9662C")]
	public void saveReplay(string fileName)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1C966C4", Offset = "0x1C966C4", VA = "0x1C966C4")]
	public static WeaponConfig loadConfig(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1C967B4", Offset = "0x1C967B4", VA = "0x1C967B4")]
	public static void saveConfig(string fileName)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1C968D8", Offset = "0x1C968D8", VA = "0x1C968D8")]
	public WeaponStatistics loadStats(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1C96A1C", Offset = "0x1C96A1C", VA = "0x1C96A1C")]
	public void ShouldSaveStats(bool save)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1C96A28", Offset = "0x1C96A28", VA = "0x1C96A28")]
	public void saveStats(string fileName)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1C96AE8", Offset = "0x1C96AE8", VA = "0x1C96AE8")]
	public UserScores loadScores(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1C96C5C", Offset = "0x1C96C5C", VA = "0x1C96C5C")]
	public void saveScores(string fileName)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1C96CF4", Offset = "0x1C96CF4", VA = "0x1C96CF4")]
	public Challenge loadChallenge(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1C96E68", Offset = "0x1C96E68", VA = "0x1C96E68")]
	public void saveChallenge(string fileName)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1C96F00", Offset = "0x1C96F00", VA = "0x1C96F00")]
	public GatedPurchases loadGatedPurchases(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1C97084", Offset = "0x1C97084", VA = "0x1C97084")]
	public void saveGatedPurchases(string fileName)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1C9711C", Offset = "0x1C9711C", VA = "0x1C9711C")]
	public StorageManager()
	{
	}
}
[Token(Token = "0x2000116")]
public static class StringCompression
{
	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1C97180", Offset = "0x1C97180", VA = "0x1C97180")]
	public static string CompressString(string text, bool secure = true)
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1C97208", Offset = "0x1C97208", VA = "0x1C97208")]
	public static string DecompressString(string compressedText)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000117")]
public class DataPrefs
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, int> _intPrefs;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, float> _floatPrefs;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> _stringPrefs;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, byte[]> _bytePrefs;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1665FB8", Offset = "0x1665FB8", VA = "0x1665FB8")]
	public void SetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1666088", Offset = "0x1666088", VA = "0x1666088")]
	public void SetFloat(string key, float value)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1666164", Offset = "0x1666164", VA = "0x1666164")]
	public void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1666234", Offset = "0x1666234", VA = "0x1666234")]
	public void SetBytes(string key, byte[] value)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1666304", Offset = "0x1666304", VA = "0x1666304")]
	public int GetInt(string key, int defaultVal = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x16663AC", Offset = "0x16663AC", VA = "0x16663AC")]
	public float GetFloat(string key, float defaultVal = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x1666460", Offset = "0x1666460", VA = "0x1666460")]
	public string GetString(string key, string defaultVal = "")
	{
		return null;
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x1666500", Offset = "0x1666500", VA = "0x1666500")]
	public byte[] GetBytes(string key, [Optional] byte[] defaultVal)
	{
		return null;
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x16665A0", Offset = "0x16665A0", VA = "0x16665A0")]
	public bool ContainsKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x166669C", Offset = "0x166669C", VA = "0x166669C")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x1666838", Offset = "0x1666838", VA = "0x1666838")]
	public DataPrefs()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x1666840", Offset = "0x1666840", VA = "0x1666840")]
	public DataPrefs(bool init)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1666A30", Offset = "0x1666A30", VA = "0x1666A30")]
	public void Validate()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x1666BD0", Offset = "0x1666BD0", VA = "0x1666BD0")]
	public void Merge(DataPrefs altPrefs)
	{
	}
}
[Token(Token = "0x2000118")]
public static class QuickJson
{
	[Token(Token = "0x20001C7")]
	public enum EnumSerializationMethod
	{
		[Token(Token = "0x4000AEB")]
		Name,
		[Token(Token = "0x4000AEC")]
		UnderlyingValue
	}

	[Token(Token = "0x20001C8")]
	public delegate void Serializer(StringBuilder sb, object obj);

	[Token(Token = "0x20001C9")]
	public delegate object Deserializer(Type type, JsonParser parser);

	[Token(Token = "0x20001CA")]
	private class FieldSerializer
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameAndColon;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FieldInfo fieldInfo;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Serializer serializer;

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1FE4EF0", Offset = "0x1FE4EF0", VA = "0x1FE4EF0")]
		public FieldSerializer(string nameAndColon, FieldInfo fieldInfo, Serializer serializer)
		{
		}
	}

	[Token(Token = "0x20001CB")]
	public class JsonParser
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int count;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int textLength;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string jsonText;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder subStringBuilder;

		[Token(Token = "0x17000246")]
		public bool End
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x1FE5B34", Offset = "0x1FE5B34", VA = "0x1FE5B34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1FE4F54", Offset = "0x1FE4F54", VA = "0x1FE4F54")]
		public JsonParser(string jsonText)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1FE4FF8", Offset = "0x1FE4FF8", VA = "0x1FE4FF8")]
		public char Peek()
		{
			return default(char);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1FE501C", Offset = "0x1FE501C", VA = "0x1FE501C")]
		public char Read()
		{
			return default(char);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1FE5048", Offset = "0x1FE5048", VA = "0x1FE5048")]
		public char PeekWithTrim()
		{
			return default(char);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1FE5094", Offset = "0x1FE5094", VA = "0x1FE5094")]
		public char ReadWithTrim()
		{
			return default(char);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1FE50C4", Offset = "0x1FE50C4", VA = "0x1FE50C4")]
		public void Trim()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1FE5114", Offset = "0x1FE5114", VA = "0x1FE5114")]
		private void _Skip()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1FE51B8", Offset = "0x1FE51B8", VA = "0x1FE51B8")]
		public string ReadToken()
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1FE5200", Offset = "0x1FE5200", VA = "0x1FE5200")]
		public bool ReadIfNull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1FE5224", Offset = "0x1FE5224", VA = "0x1FE5224")]
		private bool _ReadIfNull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1FE52F4", Offset = "0x1FE52F4", VA = "0x1FE52F4")]
		public void ReadSpecifyChar(char spec)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1FE5584", Offset = "0x1FE5584", VA = "0x1FE5584")]
		public string ReadString()
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1FE58B0", Offset = "0x1FE58B0", VA = "0x1FE58B0")]
		public void SkipValue()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1FE5840", Offset = "0x1FE5840", VA = "0x1FE5840")]
		public FormatException CreateFormatException()
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1FE5D7C", Offset = "0x1FE5D7C", VA = "0x1FE5D7C")]
		public OverflowException CreateOverflowException()
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1FE5B44", Offset = "0x1FE5B44", VA = "0x1FE5B44")]
		private string _GetExceptionText()
		{
			return null;
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1FE5DEC", Offset = "0x1FE5DEC", VA = "0x1FE5DEC")]
		public bool ReadBool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1FE5F70", Offset = "0x1FE5F70", VA = "0x1FE5F70")]
		private bool _ReadNegativeSign()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1FE5FC4", Offset = "0x1FE5FC4", VA = "0x1FE5FC4")]
		public sbyte ReadInt8()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1FE623C", Offset = "0x1FE623C", VA = "0x1FE623C")]
		public short ReadInt16()
		{
			return default(short);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1FE64BC", Offset = "0x1FE64BC", VA = "0x1FE64BC")]
		public int ReadInt32()
		{
			return default(int);
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1FE6754", Offset = "0x1FE6754", VA = "0x1FE6754")]
		public long ReadInt64()
		{
			return default(long);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1FE69E8", Offset = "0x1FE69E8", VA = "0x1FE69E8")]
		public byte ReadUInt8()
		{
			return default(byte);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1FE6C28", Offset = "0x1FE6C28", VA = "0x1FE6C28")]
		public ushort ReadUInt16()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1FE6E68", Offset = "0x1FE6E68", VA = "0x1FE6E68")]
		public uint ReadUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1FE70B4", Offset = "0x1FE70B4", VA = "0x1FE70B4")]
		public ulong ReadUInt64()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x20001CC")]
	public class DeserializeEnumerator<T> : IEnumerator<T>, IEnumerator, IDisposable, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T current;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Deserializer deserializer;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private JsonParser parser;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type type;

		[Token(Token = "0x17000247")]
		public T Current
		{
			[Token(Token = "0x6000FF3")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF1")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FF2")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		public DeserializeEnumerator(JsonParser parser, Type type)
		{
		}

		[Token(Token = "0x6000FF6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000FF8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnumSerializationMethod enumSerializationMethod;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Type[] serializerrArgs;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Type[] deserializerArgs;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<Type, List<FieldSerializer>> fieldSerializerCache;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<Type, Serializer> serializerCache;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<Type, Deserializer> deserializerCache;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static byte[] encodeCharaTable;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static byte[] decodeCharaTable;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static byte[] hexDecodeTable;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool[] jsonSeparator;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static char[] hexBuff;

	[Token(Token = "0x4000793")]
	public const string DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";

	[Token(Token = "0x4000794")]
	public const BindingFlags BINDING_FLAGS = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static char[] numberBuff;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static FieldInfo[] hash128Fields;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static char[] hash128Buff;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x15E9F0C", Offset = "0x15E9F0C", VA = "0x15E9F0C")]
	public static void RegisterSerializer(Type type, Serializer serializer)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x15E9FFC", Offset = "0x15E9FFC", VA = "0x15E9FFC")]
	public static void RegisterDeserializer(Type type, Deserializer deserializer)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x15EA0EC", Offset = "0x15EA0EC", VA = "0x15EA0EC")]
	public static string Serialize(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x15EA190", Offset = "0x15EA190", VA = "0x15EA190")]
	private static void _Serialize(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x15EA2DC", Offset = "0x15EA2DC", VA = "0x15EA2DC")]
	private static Serializer _GetSerializer(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x15EA97C", Offset = "0x15EA97C", VA = "0x15EA97C")]
	private static void _SerializeArray(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x15EAEA8", Offset = "0x15EAEA8", VA = "0x15EAEA8")]
	private static void _SerializeList(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x15EB238", Offset = "0x15EB238", VA = "0x15EB238")]
	private static void _SerializeDictionary(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x15EB7C0", Offset = "0x15EB7C0", VA = "0x15EB7C0")]
	private static void _SerializeHashSet(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x15EBBA0", Offset = "0x15EBBA0", VA = "0x15EBBA0")]
	private static void _SerializeObject(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x15EA264", Offset = "0x15EA264", VA = "0x15EA264")]
	private static bool _SerializeIfNull(StringBuilder sb, object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x15EC054", Offset = "0x15EC054", VA = "0x15EC054")]
	private static void _Register(Type type, Serializer serializer, Deserializer deserializer)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x15EC128", Offset = "0x15EC128", VA = "0x15EC128")]
	static QuickJson()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x15EDB30", Offset = "0x15EDB30", VA = "0x15EDB30")]
	public static int HexToInt(char ch)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x15EDC04", Offset = "0x15EDC04", VA = "0x15EDC04")]
	public static char IntToHex(int i)
	{
		return default(char);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x15EDC1C", Offset = "0x15EDC1C", VA = "0x15EDC1C")]
	public static char IntToHex(uint i)
	{
		return default(char);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x15EDC34", Offset = "0x15EDC34", VA = "0x15EDC34")]
	public static bool IsDigit(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x15EDC48", Offset = "0x15EDC48", VA = "0x15EDC48")]
	public static bool IsSpace(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x15EDC58", Offset = "0x15EDC58", VA = "0x15EDC58")]
	public static bool IsJsonSeparator(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x15EDD34", Offset = "0x15EDD34", VA = "0x15EDD34")]
	public static char ToUpper(char ch)
	{
		return default(char);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x15EDD3C", Offset = "0x15EDD3C", VA = "0x15EDD3C")]
	private static void _ToString(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x15EDD84", Offset = "0x15EDD84", VA = "0x15EDD84")]
	private static void _SerializeSByte(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x15EDFF8", Offset = "0x15EDFF8", VA = "0x15EDFF8")]
	private static void _SerializeInt16(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x15EE26C", Offset = "0x15EE26C", VA = "0x15EE26C")]
	private static void _SerializeInt32(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x15EE4E0", Offset = "0x15EE4E0", VA = "0x15EE4E0")]
	private static void _SerializeInt64(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x15EE74C", Offset = "0x15EE74C", VA = "0x15EE74C")]
	private static void _SerializeByte(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x15EE8F8", Offset = "0x15EE8F8", VA = "0x15EE8F8")]
	private static void _SerializeUInt16(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x15EEAA0", Offset = "0x15EEAA0", VA = "0x15EEAA0")]
	private static void _SerializeUInt32(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x15EEC40", Offset = "0x15EEC40", VA = "0x15EEC40")]
	private static void _SerializeUInt64(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x15EEDE0", Offset = "0x15EEDE0", VA = "0x15EEDE0")]
	private static void _SerializeBool(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x15EEEA0", Offset = "0x15EEEA0", VA = "0x15EEEA0")]
	private static void _SerializeChar(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x15EEF48", Offset = "0x15EEF48", VA = "0x15EEF48")]
	private static void _SerializeString(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x15EF26C", Offset = "0x15EF26C", VA = "0x15EF26C")]
	private static void _SerializeEnumName(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x15EF2D0", Offset = "0x15EF2D0", VA = "0x15EF2D0")]
	private static void _SerializeVector2(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x15EF3A8", Offset = "0x15EF3A8", VA = "0x15EF3A8")]
	private static void _SerializeVector3(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x15EF4AC", Offset = "0x15EF4AC", VA = "0x15EF4AC")]
	private static void _SerializeVector4(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x15EF5D0", Offset = "0x15EF5D0", VA = "0x15EF5D0")]
	private static void _SerializeQuaternion(StringBuilder sb, object q)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x15EF6F4", Offset = "0x15EF6F4", VA = "0x15EF6F4")]
	private static void _SerializeRect(StringBuilder sb, object rect)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x15EF838", Offset = "0x15EF838", VA = "0x15EF838")]
	private static void _SerializeColor(StringBuilder sb, object color)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x15EF95C", Offset = "0x15EF95C", VA = "0x15EF95C")]
	private static void _SerializeColor32(StringBuilder sb, object color)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x15EFB80", Offset = "0x15EFB80", VA = "0x15EFB80")]
	public static string Hash128ToString(Hash128 hash)
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x15EFDBC", Offset = "0x15EFDBC", VA = "0x15EFDBC")]
	private static void _SerializeHash128(StringBuilder sb, object hash)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x15EFF78", Offset = "0x15EFF78", VA = "0x15EFF78")]
	private static void _SerializeDate(StringBuilder sb, object date)
	{
	}

	[Token(Token = "0x6000AD5")]
	public static T Deserialize<T>(string jsonText)
	{
		return (T)null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x15F0058", Offset = "0x15F0058", VA = "0x15F0058")]
	public static object Deserialize(string jsonText, Type type)
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x15F00F4", Offset = "0x15F00F4", VA = "0x15F00F4")]
	private static object _Deserialize(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x15F07AC", Offset = "0x15F07AC", VA = "0x15F07AC")]
	private static object _GetDefault(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x15F01A0", Offset = "0x15F01A0", VA = "0x15F01A0")]
	private static Deserializer _GetDeserializer(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x15F07F4", Offset = "0x15F07F4", VA = "0x15F07F4")]
	private static object _DeserializeArray(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x15F0B24", Offset = "0x15F0B24", VA = "0x15F0B24")]
	private static List<object> _ParseArray(JsonParser parser, Type elementType, Deserializer deserializer, int nest, ref int[] length)
	{
		return null;
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x15F0D60", Offset = "0x15F0D60", VA = "0x15F0D60")]
	private static void _SetArray(Array array, int[] indices, List<object> listList, int nest)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x15F0F64", Offset = "0x15F0F64", VA = "0x15F0F64")]
	private static object _DeserializeList(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x15F1194", Offset = "0x15F1194", VA = "0x15F1194")]
	private static object _DeserializeHashSet(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x15F13B0", Offset = "0x15F13B0", VA = "0x15F13B0")]
	private static object _DeserializeDictionary(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x15F1634", Offset = "0x15F1634", VA = "0x15F1634")]
	private static object _DeserializeEnum(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x15F1754", Offset = "0x15F1754", VA = "0x15F1754")]
	private static object _DeserializeObject(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x15F1924", Offset = "0x15F1924", VA = "0x15F1924")]
	private static object _DeserializeInt16(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x15F1998", Offset = "0x15F1998", VA = "0x15F1998")]
	private static object _DeserializeInt32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x15F1A0C", Offset = "0x15F1A0C", VA = "0x15F1A0C")]
	private static object _DeserializeInt64(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x15F1A80", Offset = "0x15F1A80", VA = "0x15F1A80")]
	private static object _DeserializeUInt16(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x15F1AF4", Offset = "0x15F1AF4", VA = "0x15F1AF4")]
	private static object _DeserializeUInt32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x15F1B68", Offset = "0x15F1B68", VA = "0x15F1B68")]
	private static object _DeserializeUInt64(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x15F1BDC", Offset = "0x15F1BDC", VA = "0x15F1BDC")]
	private static object _DeserializeString(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x15F1C14", Offset = "0x15F1C14", VA = "0x15F1C14")]
	private static object _DeserializeFloat(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x15F1C8C", Offset = "0x15F1C8C", VA = "0x15F1C8C")]
	private static object _DeserializeDouble(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x15F1D28", Offset = "0x15F1D28", VA = "0x15F1D28")]
	private static object _DeserializeByte(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x15F1D9C", Offset = "0x15F1D9C", VA = "0x15F1D9C")]
	private static object _DeserializeSByte(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x15F1E10", Offset = "0x15F1E10", VA = "0x15F1E10")]
	private static object _DeserializeBoolean(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x15F1E88", Offset = "0x15F1E88", VA = "0x15F1E88")]
	private static object _DeserializeDecimal(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x15F1F28", Offset = "0x15F1F28", VA = "0x15F1F28")]
	private static object _DeserializeChar(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x15F1F9C", Offset = "0x15F1F9C", VA = "0x15F1F9C")]
	private static object _DeserializeVector2(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x15F2068", Offset = "0x15F2068", VA = "0x15F2068")]
	private static object _DeserializeVector3(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x15F2168", Offset = "0x15F2168", VA = "0x15F2168")]
	private static object _DeserializeVector4(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x15F22B0", Offset = "0x15F22B0", VA = "0x15F22B0")]
	private static object _DeserializeQuaternion(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x15F23F8", Offset = "0x15F23F8", VA = "0x15F23F8")]
	private static object _DeserializeRect(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x15F2540", Offset = "0x15F2540", VA = "0x15F2540")]
	private static object _DeserializeColor(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x15F2688", Offset = "0x15F2688", VA = "0x15F2688")]
	private static object _DeserializeColor32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x15F2824", Offset = "0x15F2824", VA = "0x15F2824")]
	public static Hash128 ParseHash128(string hex)
	{
		return default(Hash128);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x15F2A2C", Offset = "0x15F2A2C", VA = "0x15F2A2C")]
	private static object _DeserializeHash128(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x15F2C14", Offset = "0x15F2C14", VA = "0x15F2C14")]
	private static object _DeserializeDate(Type type, JsonParser parser)
	{
		return null;
	}
}
[Token(Token = "0x2000119")]
public class TBMDebug
{
	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1C97788", Offset = "0x1C97788", VA = "0x1C97788")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA4DC", Offset = "0x8CA4DC")]
	public static void Log(object message, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x1C977FC", Offset = "0x1C977FC", VA = "0x1C977FC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA514", Offset = "0x8CA514")]
	public static void LogWarning(object message, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x1C97870", Offset = "0x1C97870", VA = "0x1C97870")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8CA54C", Offset = "0x8CA54C")]
	public static void LogError(object message, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x1C978E4", Offset = "0x1C978E4", VA = "0x1C978E4")]
	public TBMDebug()
	{
	}
}
[Token(Token = "0x200011A")]
public class MCVoxelChunk : MonoBehaviour
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter filter;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh mesh;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshCollider col;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint posX;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint posY;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private uint posZ;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool colliderDirty;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1994860", Offset = "0x1994860", VA = "0x1994860")]
	public void Initialize(uint x, uint y, uint z)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x19949E4", Offset = "0x19949E4", VA = "0x19949E4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x1994A58", Offset = "0x1994A58", VA = "0x1994A58")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x1994B40", Offset = "0x1994B40", VA = "0x1994B40")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1994E8C", Offset = "0x1994E8C", VA = "0x1994E8C")]
	public void DoMCVoxelOperation(uint shape, uint type, Vector3 position, float size, bool displace)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1995084", Offset = "0x1995084", VA = "0x1995084")]
	public MCVoxelChunk()
	{
	}
}
[Token(Token = "0x200011B")]
public enum VoxelCollisionType
{
	[Token(Token = "0x40007A1")]
	None,
	[Token(Token = "0x40007A2")]
	Box,
	[Token(Token = "0x40007A3")]
	FullConvexMesh,
	[Token(Token = "0x40007A4")]
	SimplifiedConvexMesh
}
[Token(Token = "0x200011C")]
public enum VoxelLightingType
{
	[Token(Token = "0x40007A6")]
	Default,
	[Token(Token = "0x40007A7")]
	LightProbeProxyVolume,
	[Token(Token = "0x40007A8")]
	ProbeAnchorParent,
	[Token(Token = "0x40007A9")]
	ProbeAnchorTarget
}
[Serializable]
[Token(Token = "0x200011D")]
public class MCVoxelObjectSettings
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint width;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint height;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint depth;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint resolutionX;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint resolutionY;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint resolutionZ;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cellScale;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool initialFill;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string file;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoxelCollisionType destructionCollisionType;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string tag;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VoxelLightingType lightingType;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string lightingTypeTargetName;

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x199792C", Offset = "0x199792C", VA = "0x199792C")]
	public MCVoxelObjectSettings()
	{
	}
}
[Token(Token = "0x200011E")]
public class MCVoxelObject : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MCVoxelShape m_shape;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> m_probeOverrides;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MCVoxelChunk[][][] m_chunks;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_chunkParent;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MCVoxelObjectSettings m_curSettings;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_initialLocation;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MCVoxelShape m_curShape;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> m_disconnectedObjects;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Mesh> m_disconnectedObjectMeshes;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_simplifiedMeshFaceCount;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] m_simplifiedVertices;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] m_simplifiedIndices;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isActive;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject discPrefab;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<IntersectionTest> m_tests;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<float> m_testLife;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, GameObject> m_probeOverrideDict;

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x199508C", Offset = "0x199508C", VA = "0x199508C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x19952D0", Offset = "0x19952D0", VA = "0x19952D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x19952D8", Offset = "0x19952D8", VA = "0x19952D8")]
	public void SetVoxelShape(MCVoxelShape shape)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x1996560", Offset = "0x1996560", VA = "0x1996560")]
	public void ClearDestruction()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x1996568", Offset = "0x1996568", VA = "0x1996568")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x1996DC0", Offset = "0x1996DC0", VA = "0x1996DC0")]
	private void DrawIntersectionTests()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x1996EB8", Offset = "0x1996EB8", VA = "0x1996EB8")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x19972FC", Offset = "0x19972FC", VA = "0x19972FC")]
	private void DebugDrawIntegrityState()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x19966BC", Offset = "0x19966BC", VA = "0x19966BC")]
	private void GetDiscMesh()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x199732C", Offset = "0x199732C", VA = "0x199732C")]
	private Mesh GenerateSimplifiedMesh(Vector3[] vertices, int[] triangles)
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1997670", Offset = "0x1997670", VA = "0x1997670")]
	public MCVoxelObject()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class VoxelShapeOpRepeat
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int count;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 offset;

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x198E12C", Offset = "0x198E12C", VA = "0x198E12C")]
	public VoxelShapeOpRepeat()
	{
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class VoxelShapeOp
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VoxelOpShape shape;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VoxelOpType type;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 size;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool displace;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoxelShapeOpRepeat repeat;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x198E124", Offset = "0x198E124", VA = "0x198E124")]
	public VoxelShapeOp()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C8A00", Offset = "0x8C8A00")]
public class MCVoxelShape : ScriptableObject
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MCVoxelObjectSettings objectSettings;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 shapeOffset;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<VoxelShapeOp> shapeOperations;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x19979D8", Offset = "0x19979D8", VA = "0x19979D8")]
	public MCVoxelShape()
	{
	}
}
[Token(Token = "0x2000122")]
public class RandomVoxelShape : MonoBehaviour
{
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EDC", Offset = "0x8C8EDC")]
	private sealed class <SetRandomShape>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomVoxelShape <>4__this;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x1FE7968", Offset = "0x1FE7968", VA = "0x1FE7968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x1FE79B0", Offset = "0x1FE79B0", VA = "0x1FE79B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1FE76E4", Offset = "0x1FE76E4", VA = "0x1FE76E4")]
		[DebuggerHidden]
		public <SetRandomShape>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x1FE7710", Offset = "0x1FE7710", VA = "0x1FE7710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1FE7714", Offset = "0x1FE7714", VA = "0x1FE7714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1FE7970", Offset = "0x1FE7970", VA = "0x1FE7970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MCVoxelShape[] m_randomShapes;

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x1E2B77C", Offset = "0x1E2B77C", VA = "0x1E2B77C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x1E2B7A8", Offset = "0x1E2B7A8", VA = "0x1E2B7A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA584", Offset = "0x8CA584")]
	private IEnumerator SetRandomShape()
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x1E2B820", Offset = "0x1E2B820", VA = "0x1E2B820")]
	public RandomVoxelShape()
	{
	}
}
[Token(Token = "0x2000123")]
public class SDFDataBuildExport
{
	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x1E2D884", Offset = "0x1E2D884", VA = "0x1E2D884")]
	public SDFDataBuildExport()
	{
	}
}
[Token(Token = "0x2000124")]
public class TBMDynamics : MonoBehaviour
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float m_integrityCheckTime;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int collidersUpdated;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastCheck;

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1C978EC", Offset = "0x1C978EC", VA = "0x1C978EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x1C97960", Offset = "0x1C97960", VA = "0x1C97960")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1C979D4", Offset = "0x1C979D4", VA = "0x1C979D4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1C97B48", Offset = "0x1C97B48", VA = "0x1C97B48")]
	public TBMDynamics()
	{
	}
}
[Token(Token = "0x2000125")]
public struct VoxelVertex
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float u;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float v;
}
[Token(Token = "0x2000126")]
public enum VoxelOpShape
{
	[Token(Token = "0x40007E1")]
	Sphere,
	[Token(Token = "0x40007E2")]
	Cube,
	[Token(Token = "0x40007E3")]
	Cone
}
[Token(Token = "0x2000127")]
public enum VoxelOpType
{
	[Token(Token = "0x40007E5")]
	Add,
	[Token(Token = "0x40007E6")]
	Subtract,
	[Token(Token = "0x40007E7")]
	Intersect
}
[Token(Token = "0x2000128")]
public struct IntersectionTest
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minX;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float minY;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float minZ;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxX;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxY;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxZ;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float posX;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posY;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float posZ;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sphereRadius;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float result;
}
[Token(Token = "0x2000129")]
public static class TBMDynamicsPlugin
{
	[Token(Token = "0x40007F3")]
	private const string dllName = "TBMDynamicsUnityPlugin";

	[PreserveSig]
	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1C978F0", Offset = "0x1C978F0", VA = "0x1C978F0")]
	public static extern void Initialize();

	[PreserveSig]
	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1C97964", Offset = "0x1C97964", VA = "0x1C97964")]
	public static extern void Release();

	[PreserveSig]
	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1C97A68", Offset = "0x1C97A68", VA = "0x1C97A68")]
	public static extern void UpdateDynamics();

	[PreserveSig]
	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1C97B5C", Offset = "0x1C97B5C", VA = "0x1C97B5C")]
	public static extern void Reset();

	[PreserveSig]
	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1C97AD8", Offset = "0x1C97AD8", VA = "0x1C97AD8")]
	public static extern void RunIntegrityCheck();

	[PreserveSig]
	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1C97BCC", Offset = "0x1C97BCC", VA = "0x1C97BCC")]
	public static extern bool HasDisconnectedMesh();

	[PreserveSig]
	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1C97C48", Offset = "0x1C97C48", VA = "0x1C97C48")]
	public unsafe static extern void GetDisconnectedMesh(uint* vertCount, VoxelVertex** vertices, uint* indexCount, ushort** indices, float* x, float* y, float* z);

	[PreserveSig]
	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1C97D10", Offset = "0x1C97D10", VA = "0x1C97D10")]
	public unsafe static extern void GetIntegrityGrid(byte** integrityGrid, uint* gridLength);

	[PreserveSig]
	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1C97D9C", Offset = "0x1C97D9C", VA = "0x1C97D9C")]
	public static extern bool IsChunkDirty(uint x, uint y, uint z);

	[PreserveSig]
	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1C97E38", Offset = "0x1C97E38", VA = "0x1C97E38")]
	public unsafe static extern void GetChunkMesh(uint x, uint y, uint z, uint* vertCount, VoxelVertex** vertices, uint* indexCount, ushort** indices);

	[PreserveSig]
	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1C97F00", Offset = "0x1C97F00", VA = "0x1C97F00")]
	public static extern void NotifyChunkMeshUpdated(uint x, uint y, uint z);

	[PreserveSig]
	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1C97F94", Offset = "0x1C97F94", VA = "0x1C97F94")]
	public static extern bool CreateMCVoxelObject(uint width, uint height, uint depth, uint resX, uint resY, uint resZ, float scale, bool fill);

	[PreserveSig]
	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x1C98074", Offset = "0x1C98074", VA = "0x1C98074")]
	public static extern bool CreateMCVoxelObjectFromFile(uint width, uint height, uint depth, uint resX, uint resY, uint resZ, float scale, bool fill, string file);

	[PreserveSig]
	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x1C9817C", Offset = "0x1C9817C", VA = "0x1C9817C")]
	public static extern void DestroyMCVoxelObject();

	[PreserveSig]
	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x1C981EC", Offset = "0x1C981EC", VA = "0x1C981EC")]
	public static extern void DoMCVoxelOperation(uint shape, uint type, float x, float y, float z, float sx, float sy, float sz, bool displace);

	[PreserveSig]
	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x1C982CC", Offset = "0x1C982CC", VA = "0x1C982CC")]
	public static extern bool HasIntersectionTests();

	[PreserveSig]
	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x1C98348", Offset = "0x1C98348", VA = "0x1C98348")]
	public static extern void GetIntersection(ref IntersectionTest test);
}
[Token(Token = "0x200012A")]
public class RequireInterfaceAttribute : PropertyAttribute
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9490", Offset = "0x8C9490")]
	private Type <requiredType>k__BackingField;

	[Token(Token = "0x170001C2")]
	public Type requiredType
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1E2C100", Offset = "0x1E2C100", VA = "0x1E2C100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5E4", Offset = "0x8CA5E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1E2C108", Offset = "0x1E2C108", VA = "0x1E2C108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA5F4", Offset = "0x8CA5F4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x1E2C110", Offset = "0x1E2C110", VA = "0x1E2C110")]
	public RequireInterfaceAttribute(Type type)
	{
	}
}
[Serializable]
[Token(Token = "0x200012B")]
public class TBMAttachPoint : MonoBehaviour
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected string m_pointName;

	[Token(Token = "0x170001C3")]
	public string pointName
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1C976B0", Offset = "0x1C976B0", VA = "0x1C976B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x1C976B8", Offset = "0x1C976B8", VA = "0x1C976B8")]
	public static TBMAttachPoint GetAttachPoint(GameObject obj, string name)
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1C97780", Offset = "0x1C97780", VA = "0x1C97780")]
	public TBMAttachPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class TBMMath
{
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1C983C8", Offset = "0x1C983C8", VA = "0x1C983C8")]
	public static Vector3 ClosestPointOnLine(Vector3 start, Vector3 end, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1C984F4", Offset = "0x1C984F4", VA = "0x1C984F4")]
	public static float NormalizeValue(float min, float max, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1C98504", Offset = "0x1C98504", VA = "0x1C98504")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1C98520", Offset = "0x1C98520", VA = "0x1C98520")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x1C98594", Offset = "0x1C98594", VA = "0x1C98594")]
	public static Vector3 GetParabolicPosition(Vector3 start, Vector3 initialVelocity, Vector3 acceleration, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1C985E0", Offset = "0x1C985E0", VA = "0x1C985E0")]
	public static float SignedAngleBetween(Vector3 a, Vector3 b, Vector3 n)
	{
		return default(float);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1C9869C", Offset = "0x1C9869C", VA = "0x1C9869C")]
	public static float SignedAngleBetween360(Vector3 a, Vector3 b, Vector3 n)
	{
		return default(float);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1C986DC", Offset = "0x1C986DC", VA = "0x1C986DC")]
	public static bool Between(float num, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1C986F4", Offset = "0x1C986F4", VA = "0x1C986F4")]
	public static bool Between(int num, int min, int max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1C9870C", Offset = "0x1C9870C", VA = "0x1C9870C")]
	public static bool BetweenInclusive(int num, int min, int max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1C98724", Offset = "0x1C98724", VA = "0x1C98724")]
	public static Vector3 RandomNormalisedDirection(Transform point, Transform direction, float distance, float sizeOfUnitSphere, bool debug = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1C988DC", Offset = "0x1C988DC", VA = "0x1C988DC")]
	public static Vector3 GetPosition(Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1C988E8", Offset = "0x1C988E8", VA = "0x1C988E8")]
	public static bool IsInsideCollider(Collider c, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1C98990", Offset = "0x1C98990", VA = "0x1C98990")]
	public TBMMath()
	{
	}
}
[Token(Token = "0x200012D")]
public class BatchMeshGroup
{
	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1EB4180", Offset = "0x1EB4180", VA = "0x1EB4180")]
	public BatchMeshGroup()
	{
	}
}
[Token(Token = "0x200012E")]
public class TBMMeshBatch : MonoBehaviour
{
	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x1C98998", Offset = "0x1C98998", VA = "0x1C98998")]
	public TBMMeshBatch()
	{
	}
}
[Serializable]
[Token(Token = "0x200012F")]
public class TBMRandomTransform : MonoBehaviour
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool local;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected Vector3 minPosition;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Vector3 maxPosition;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected Vector3 minAngle;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Vector3 maxAngle;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected Vector3 minScale;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Vector3 maxScale;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1C9D350", Offset = "0x1C9D350", VA = "0x1C9D350")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x1C9D490", Offset = "0x1C9D490", VA = "0x1C9D490")]
	private Vector3 Range(Vector3 min, Vector3 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1C9D508", Offset = "0x1C9D508", VA = "0x1C9D508")]
	public TBMRandomTransform()
	{
	}
}
[Serializable]
[Token(Token = "0x2000130")]
public class TBMUtility
{
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EEC", Offset = "0x8C8EEC")]
	private sealed class <>c__DisplayClass15_0<T>
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Predicate<T>[] predicates;

		[Token(Token = "0x6000FFF")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001000")]
		internal bool <And>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EFC", Offset = "0x8C8EFC")]
	private sealed class <>c__DisplayClass15_1<T>
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T item;

		[Token(Token = "0x6001001")]
		public <>c__DisplayClass15_1()
		{
		}

		[Token(Token = "0x6001002")]
		internal bool <And>b__1(Predicate<T> predicate)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F0C", Offset = "0x8C8F0C")]
	private sealed class <>c__DisplayClass16_0<T>
	{
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Predicate<T>[] predicates;

		[Token(Token = "0x6001003")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001004")]
		internal bool <Or>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F1C", Offset = "0x8C8F1C")]
	private sealed class <>c__DisplayClass16_1<T>
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T item;

		[Token(Token = "0x6001005")]
		public <>c__DisplayClass16_1()
		{
		}

		[Token(Token = "0x6001006")]
		internal bool <Or>b__1(Predicate<T> predicate)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F2C", Offset = "0x8C8F2C")]
	private sealed class <>c__DisplayClass17_0<T>
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Predicate<T>> predicates;

		[Token(Token = "0x6001007")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6001008")]
		internal bool <And>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F3C", Offset = "0x8C8F3C")]
	private sealed class <>c__DisplayClass18_0<T>
	{
		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Predicate<T>> predicates;

		[Token(Token = "0x6001009")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x600100A")]
		internal bool <Or>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1C9D554", Offset = "0x1C9D554", VA = "0x1C9D554")]
	public static void SetRendererLayers(GameObject obj, string layerName)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1C9D62C", Offset = "0x1C9D62C", VA = "0x1C9D62C")]
	public static void SwapAllMaterials(GameObject obj, Material newMaterial)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x1C9D718", Offset = "0x1C9D718", VA = "0x1C9D718")]
	public static void SwapMaterialsThatMatchTarget(GameObject obj, Material swapMaterial, Material newMaterial, [Optional] List<WeaponSkinPairing> pairings)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1C9DAA4", Offset = "0x1C9DAA4", VA = "0x1C9DAA4")]
	public static void SwapAllMaterials(GameObject obj, string materialPath)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1C9DC08", Offset = "0x1C9DC08", VA = "0x1C9DC08")]
	public static void SetParentWithScale(GameObject obj, Transform parent)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1C9DC98", Offset = "0x1C9DC98", VA = "0x1C9DC98")]
	public static void SetParentZero(GameObject obj, Transform parent)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x1C9DCA0", Offset = "0x1C9DCA0", VA = "0x1C9DCA0")]
	public static void SetParentZero(GameObject obj, Transform parent, bool retainScale)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x1C9DDA8", Offset = "0x1C9DDA8", VA = "0x1C9DDA8")]
	public static void CopyTransform(Transform fromT, Transform toT, bool copyScale)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1C9DE34", Offset = "0x1C9DE34", VA = "0x1C9DE34")]
	public Vector3 CalculateAngularVelocityCorrection(Vector3 currentUp, Vector3 desiredUp, Vector3 currentRight, Vector3 desiredRight, float rotationSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B50")]
	public static T[] Concat<T>(T[] array1, T[] array2)
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	public static T[][] Concat<T>(T[][] array1, T[][] array2)
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	public static T[][][] Concat<T>(T[][][] array1, T[][][] array2)
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	public static T[] MergeArrays<T>(IReadOnlyList<T> array1, IReadOnlyList<T> array2, [Optional] Func<T, T, T> matchingIndexComparison)
	{
		return null;
	}

	[Token(Token = "0x6000B54")]
	public static string LogArray<T>(T[] array1, string prefix, Func<T, string, string> process)
	{
		return null;
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1C9DEF0", Offset = "0x1C9DEF0", VA = "0x1C9DEF0")]
	public static string CapitaliseFirst(string str)
	{
		return null;
	}

	[Token(Token = "0x6000B56")]
	public static Predicate<T> And<T>(params Predicate<T>[] predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B57")]
	public static Predicate<T> Or<T>(params Predicate<T>[] predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B58")]
	public static Predicate<T> And<T>(List<Predicate<T>> predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B59")]
	public static Predicate<T> Or<T>(List<Predicate<T>> predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1C9DFC0", Offset = "0x1C9DFC0", VA = "0x1C9DFC0")]
	public static Quaternion Lerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1C9E10C", Offset = "0x1C9E10C", VA = "0x1C9E10C")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1C9E280", Offset = "0x1C9E280", VA = "0x1C9E280")]
	public static Quaternion Add(Quaternion p, Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1C9E0CC", Offset = "0x1C9E0CC", VA = "0x1C9E0CC")]
	public static Quaternion ScalarMultiply(Quaternion input, float scalar)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1C9E2C0", Offset = "0x1C9E2C0", VA = "0x1C9E2C0")]
	public static string GetHeirachyPathForObject(GameObject target)
	{
		return null;
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1C9E3C8", Offset = "0x1C9E3C8", VA = "0x1C9E3C8")]
	public static string GetHeirachyPathForTransform(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1C9E508", Offset = "0x1C9E508", VA = "0x1C9E508")]
	private static string GetArg(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1C9E5C0", Offset = "0x1C9E5C0", VA = "0x1C9E5C0")]
	public TBMUtility()
	{
	}
}
[Serializable]
[Token(Token = "0x2000131")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C8A6C", Offset = "0x8C8A6C")]
public class WeaponSkinPairing : ScriptableObject
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected MaterialReference m_baseMaterialReference;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected MaterialReference m_skinMaterialReference;

	[Token(Token = "0x170001C4")]
	public Material baseMaterial
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x198E160", Offset = "0x198E160", VA = "0x198E160")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C5")]
	public Material skinMaterial
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x198E1B4", Offset = "0x198E1B4", VA = "0x198E1B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x198E208", Offset = "0x198E208", VA = "0x198E208")]
	public bool CompareAgainstBase(Material material)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x198E2AC", Offset = "0x198E2AC", VA = "0x198E2AC")]
	public WeaponSkinPairing()
	{
	}
}
[Token(Token = "0x2000132")]
public class TBMPrefs
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] PreferenceArray;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string m_savePrefix;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string m_developmentSavePrefix;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool validate;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool init;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string filePath;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static DataPrefs _prefs;

	[Token(Token = "0x170001C6")]
	private static string SavePrefix
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1C989A0", Offset = "0x1C989A0", VA = "0x1C989A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C7")]
	public static DataPrefs Prefs
	{
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1C98C78", Offset = "0x1C98C78", VA = "0x1C98C78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1C98A9C", Offset = "0x1C98A9C", VA = "0x1C98A9C")]
	public static string GetSavePrefix()
	{
		return null;
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1C98AF4", Offset = "0x1C98AF4", VA = "0x1C98AF4")]
	public static void SetSavePrefix(string prefix)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1C98D1C", Offset = "0x1C98D1C", VA = "0x1C98D1C")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1C98DB0", Offset = "0x1C98DB0", VA = "0x1C98DB0")]
	private static void LoadPrefs()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x1C99284", Offset = "0x1C99284", VA = "0x1C99284")]
	private static void SavePrefs()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x1C99338", Offset = "0x1C99338", VA = "0x1C99338")]
	public static void Merge(DataPrefs altPrefs)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1C993EC", Offset = "0x1C993EC", VA = "0x1C993EC")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1C9948C", Offset = "0x1C9948C", VA = "0x1C9948C")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1C9952C", Offset = "0x1C9952C", VA = "0x1C9952C")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1C9969C", Offset = "0x1C9969C", VA = "0x1C9969C")]
	public static bool GetBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1C9981C", Offset = "0x1C9981C", VA = "0x1C9981C")]
	public static float GetFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1C9997C", Offset = "0x1C9997C", VA = "0x1C9997C")]
	public static float GetFloat(string key, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1C99AEC", Offset = "0x1C99AEC", VA = "0x1C99AEC")]
	public static int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1C99C50", Offset = "0x1C99C50", VA = "0x1C99C50")]
	public static int GetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1C99DF4", Offset = "0x1C99DF4", VA = "0x1C99DF4")]
	public static string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1C99FA0", Offset = "0x1C99FA0", VA = "0x1C99FA0")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1C9A078", Offset = "0x1C9A078", VA = "0x1C9A078")]
	public static void SetBool(string key, bool val)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1C9A110", Offset = "0x1C9A110", VA = "0x1C9A110")]
	public static void SetFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1C9A1A8", Offset = "0x1C9A1A8", VA = "0x1C9A1A8")]
	public static void SetInt(string key, int val)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1C9A240", Offset = "0x1C9A240", VA = "0x1C9A240")]
	public static void SetString(string key, string val)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x1C9A2D8", Offset = "0x1C9A2D8", VA = "0x1C9A2D8")]
	public static void DeleteGlobalKey(string key)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1C9A354", Offset = "0x1C9A354", VA = "0x1C9A354")]
	public static float GetGlobalFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1C9A464", Offset = "0x1C9A464", VA = "0x1C9A464")]
	public static bool GetGlobalBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x1C9A584", Offset = "0x1C9A584", VA = "0x1C9A584")]
	public static int GetGlobalInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1C9A698", Offset = "0x1C9A698", VA = "0x1C9A698")]
	public static string GetGlobalString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1C9A7C0", Offset = "0x1C9A7C0", VA = "0x1C9A7C0")]
	public static bool HasGlobalKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1C9A850", Offset = "0x1C9A850", VA = "0x1C9A850")]
	public static void SetGlobalFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1C9A8D0", Offset = "0x1C9A8D0", VA = "0x1C9A8D0")]
	public static void SetGlobalInt(string key, int val)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x1C9A950", Offset = "0x1C9A950", VA = "0x1C9A950")]
	public static void SetGlobalString(string key, string val)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x1C9A9D0", Offset = "0x1C9A9D0", VA = "0x1C9A9D0")]
	public static void SetGlobalBool(string key, bool val)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1C9AA50", Offset = "0x1C9AA50", VA = "0x1C9AA50")]
	public static void DeleteObscuredKey(string key)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x1C9ABA4", Offset = "0x1C9ABA4", VA = "0x1C9ABA4")]
	public static int GetObscuredInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1C9AD90", Offset = "0x1C9AD90", VA = "0x1C9AD90")]
	public static void SetObscuredInt(string key, int value)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x1C9AFE0", Offset = "0x1C9AFE0", VA = "0x1C9AFE0")]
	public static string GetObscuredString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x1C9B1AC", Offset = "0x1C9B1AC", VA = "0x1C9B1AC")]
	public static void SetObscuredString(string key, string value)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x1C9AE74", Offset = "0x1C9AE74", VA = "0x1C9AE74")]
	private static string GetData(string key, string defaultValueRaw)
	{
		return null;
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x1C9B284", Offset = "0x1C9B284", VA = "0x1C9B284")]
	public static void ClearAllPreferences()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1C98FA4", Offset = "0x1C98FA4", VA = "0x1C98FA4")]
	public static void Validate()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x1C9B3B4", Offset = "0x1C9B3B4", VA = "0x1C9B3B4")]
	public TBMPrefs()
	{
	}
}
[Token(Token = "0x2000133")]
public enum HandPoseId
{
	[Token(Token = "0x4000807")]
	Default,
	[Token(Token = "0x4000808")]
	Generic,
	[Token(Token = "0x4000809")]
	PingPongBall,
	[Token(Token = "0x400080A")]
	Controller,
	[Token(Token = "0x400080B")]
	PistolGrip,
	[Token(Token = "0x400080C")]
	BarrelGrip,
	[Token(Token = "0x400080D")]
	M870Grip,
	[Token(Token = "0x400080E")]
	P90Grip,
	[Token(Token = "0x400080F")]
	DESERTEAGLE,
	[Token(Token = "0x4000810")]
	MP5A3,
	[Token(Token = "0x4000811")]
	CylinderGrip,
	[Token(Token = "0x4000812")]
	Flashbang,
	[Token(Token = "0x4000813")]
	GrenadeMk2,
	[Token(Token = "0x4000814")]
	GrenadeM67,
	[Token(Token = "0x4000815")]
	SprayCanGrip,
	[Token(Token = "0x4000816")]
	AngledForgrip,
	[Token(Token = "0x4000817")]
	WA2000,
	[Token(Token = "0x4000818")]
	Magazine_Pistol,
	[Token(Token = "0x4000819")]
	Magazine_SMG,
	[Token(Token = "0x400081A")]
	Magazine_SMG_Curved,
	[Token(Token = "0x400081B")]
	Magazine_Pistol_Large,
	[Token(Token = "0x400081C")]
	Magazine_SMG_Drum,
	[Token(Token = "0x400081D")]
	Magazine_Assault_Curved,
	[Token(Token = "0x400081E")]
	Magazine_Assault,
	[Token(Token = "0x400081F")]
	Magazine_Sniper,
	[Token(Token = "0x4000820")]
	Magazine_Clip,
	[Token(Token = "0x4000821")]
	Magazine_Shotgun,
	[Token(Token = "0x4000822")]
	Force_Closed_Fist,
	[Token(Token = "0x4000823")]
	Axis_Pistol_Slide,
	[Token(Token = "0x4000824")]
	Axis_Small_Knob,
	[Token(Token = "0x4000825")]
	Axis_Hook_2_Fingers,
	[Token(Token = "0x4000826")]
	Pivot_MagazineWell,
	[Token(Token = "0x4000827")]
	Hold_Pinch,
	[Token(Token = "0x4000828")]
	Hold_ASS12_Grip,
	[Token(Token = "0x4000829")]
	Hold_RoundObject,
	[Token(Token = "0x400082A")]
	Hold_FlatObject,
	[Token(Token = "0x400082B")]
	Hold_LeverAction_Grip,
	[Token(Token = "0x400082C")]
	Hold_LeverAction_Lever,
	[Token(Token = "0x400082D")]
	Complementary_Pistol_Grip,
	[Token(Token = "0x400082E")]
	L_Shaped_Grip,
	[Token(Token = "0x400082F")]
	Single_Shell_Grip,
	[Token(Token = "0x4000830")]
	PistolHammerInteract,
	[Token(Token = "0x4000831")]
	Hold_LeverAction_PistolGrip,
	[Token(Token = "0x4000832")]
	M870HammerInteract,
	[Token(Token = "0x4000833")]
	M870DoubleTrigger
}
[Token(Token = "0x2000134")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C8AD8", Offset = "0x8C8AD8")]
public class TBMVRHandPose : ScriptableObject
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float m_handClosedAmount;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_allowPointing;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool m_allowThumbsUp;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HandPoseId m_poseId;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9580", Offset = "0x8C9580")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C9580", Offset = "0x8C9580")]
	private float m_maxIndexFingerBlend;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C95E4", Offset = "0x8C95E4")]
	private float m_maxMiddleFingerBlend;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C9624", Offset = "0x8C9624")]
	private float m_maxRingFingerBlend;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C9664", Offset = "0x8C9664")]
	private float m_maxPinkyFingerBlend;

	[Token(Token = "0x170001C8")]
	public bool AllowPointing
	{
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1C9E5C8", Offset = "0x1C9E5C8", VA = "0x1C9E5C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C9")]
	public bool AllowThumbsUp
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1C9E5D0", Offset = "0x1C9E5D0", VA = "0x1C9E5D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CA")]
	public HandPoseId PoseId
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1C9E5D8", Offset = "0x1C9E5D8", VA = "0x1C9E5D8")]
		get
		{
			return default(HandPoseId);
		}
	}

	[Token(Token = "0x170001CB")]
	public float handClosedAmount
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1C9E5E0", Offset = "0x1C9E5E0", VA = "0x1C9E5E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CC")]
	public float maxIndexFingerBlend
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1C9E5E8", Offset = "0x1C9E5E8", VA = "0x1C9E5E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CD")]
	public float maxMiddleFingerBlend
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1C9E5F0", Offset = "0x1C9E5F0", VA = "0x1C9E5F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CE")]
	public float maxRingFingerBlend
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1C9E5F8", Offset = "0x1C9E5F8", VA = "0x1C9E5F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CF")]
	public float maxPinkyFingerBlend
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1C9E600", Offset = "0x1C9E600", VA = "0x1C9E600")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x1C9E608", Offset = "0x1C9E608", VA = "0x1C9E608")]
	public TBMVRHandPose()
	{
	}
}
[Token(Token = "0x2000135")]
public class TestServerMessage : MonoBehaviour
{
	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x1C9E620", Offset = "0x1C9E620", VA = "0x1C9E620")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x1C9E700", Offset = "0x1C9E700", VA = "0x1C9E700")]
	public TestServerMessage()
	{
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8B44", Offset = "0x8C8B44")]
public class VersionDisplay : MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteText textObject;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool noDevNum;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x198CE8C", Offset = "0x198CE8C", VA = "0x198CE8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x198D138", Offset = "0x198D138", VA = "0x198D138")]
	private void SetText(string newText = "")
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x198D1F4", Offset = "0x198D1F4", VA = "0x198D1F4")]
	public VersionDisplay()
	{
	}
}
namespace VersionManager
{
	[Token(Token = "0x2000137")]
	public class Versioning
	{
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C96B4", Offset = "0x8C96B4")]
		private static VersionInfo <Version>k__BackingField;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C96C4", Offset = "0x8C96C4")]
		private static string <CoreVersion>k__BackingField;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C96D4", Offset = "0x8C96D4")]
		private static string <DeveloperVersion>k__BackingField;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C96E4", Offset = "0x8C96E4")]
		private static string <FullVersion>k__BackingField;

		[Token(Token = "0x170001D0")]
		public static VersionInfo Version
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x198D82C", Offset = "0x198D82C", VA = "0x198D82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA604", Offset = "0x8CA604")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x198D890", Offset = "0x198D890", VA = "0x198D890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA614", Offset = "0x8CA614")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public static string CoreVersion
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x198D8FC", Offset = "0x198D8FC", VA = "0x198D8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA624", Offset = "0x8CA624")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x198D960", Offset = "0x198D960", VA = "0x198D960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA634", Offset = "0x8CA634")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public static string DeveloperVersion
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x198D9CC", Offset = "0x198D9CC", VA = "0x198D9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA644", Offset = "0x8CA644")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x198DA30", Offset = "0x198DA30", VA = "0x198DA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA654", Offset = "0x8CA654")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public static string FullVersion
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x198DA9C", Offset = "0x198DA9C", VA = "0x198DA9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA664", Offset = "0x8CA664")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x198DB00", Offset = "0x198DB00", VA = "0x198DB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA674", Offset = "0x8CA674")]
			set
			{
			}
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x198DB6C", Offset = "0x198DB6C", VA = "0x198DB6C")]
		static Versioning()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x198DE2C", Offset = "0x198DE2C", VA = "0x198DE2C")]
		private static string LoadVersion()
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x198DFA4", Offset = "0x198DFA4", VA = "0x198DFA4")]
		private static string LoadDeveloperVersion()
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x198E11C", Offset = "0x198E11C", VA = "0x198E11C")]
		public Versioning()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class VersionInfo : IComparable
	{
		[Token(Token = "0x20001D4")]
		public enum VersionClass
		{
			[Token(Token = "0x4000B02")]
			Major,
			[Token(Token = "0x4000B03")]
			Minor,
			[Token(Token = "0x4000B04")]
			Revision
		}

		[Token(Token = "0x4000842")]
		public const string EMPTY_VERSION = "0.0.0";

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C96F4", Offset = "0x8C96F4")]
		private int <MajorVersion>k__BackingField;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9704", Offset = "0x8C9704")]
		private int <MinorVersion>k__BackingField;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9714", Offset = "0x8C9714")]
		private int <RevisionVersion>k__BackingField;

		[Token(Token = "0x170001D4")]
		public int MajorVersion
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x198D1FC", Offset = "0x198D1FC", VA = "0x198D1FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA684", Offset = "0x8CA684")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x198D204", Offset = "0x198D204", VA = "0x198D204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA694", Offset = "0x8CA694")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public int MinorVersion
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x198D20C", Offset = "0x198D20C", VA = "0x198D20C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6A4", Offset = "0x8CA6A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x198D214", Offset = "0x198D214", VA = "0x198D214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6B4", Offset = "0x8CA6B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public int RevisionVersion
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x198D21C", Offset = "0x198D21C", VA = "0x198D21C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6C4", Offset = "0x8CA6C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x198D224", Offset = "0x198D224", VA = "0x198D224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6D4", Offset = "0x8CA6D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x198D22C", Offset = "0x198D22C", VA = "0x198D22C")]
		public VersionInfo(string versionInfoStr)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x198D4C8", Offset = "0x198D4C8", VA = "0x198D4C8", Slot = "4")]
		public int CompareTo(object other)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x198D630", Offset = "0x198D630", VA = "0x198D630", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000139")]
	public class TouchScreenEventData : PointerEventData
	{
		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 m_sourcePosition;

		[Token(Token = "0x170001D7")]
		public Vector3 SourcePosition
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1C9EDCC", Offset = "0x1C9EDCC", VA = "0x1C9EDCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x1C9EDDC", Offset = "0x1C9EDDC", VA = "0x1C9EDDC")]
			set
			{
			}
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x1C9EDC4", Offset = "0x1C9EDC4", VA = "0x1C9EDC4")]
		public TouchScreenEventData([Optional] EventSystem e)
		{
		}
	}
	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8BA4", Offset = "0x8C8BA4")]
	public class VRTouchScreenRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x20001D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F4C", Offset = "0x8C8F4C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__31_0;

			[Token(Token = "0x600100C")]
			[Address(RVA = "0x1FEFEAC", Offset = "0x1FEFEAC", VA = "0x1FEFEAC")]
			public <>c()
			{
			}

			[Token(Token = "0x600100D")]
			[Address(RVA = "0x1FEFEB4", Offset = "0x1FEFEB4", VA = "0x1FEFEB4")]
			internal int <Raycast>b__31_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000847")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int m_depth;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float m_rayDistance;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform m_source;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Transform m_rayDirection;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventTrigger m_activeTrigger;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchScreenEventData m_lastEventData;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Selectable m_selectable;

		[Token(Token = "0x170001D8")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x198C7D0", Offset = "0x198C7D0", VA = "0x198C7D0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public virtual int depth
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x198C7D8", Offset = "0x198C7D8", VA = "0x198C7D8", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DA")]
		public int finalEventMask
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x198C7E0", Offset = "0x198C7E0", VA = "0x198C7E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DB")]
		public LayerMask eventMask
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x198C7EC", Offset = "0x198C7EC", VA = "0x198C7EC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x198C7F4", Offset = "0x198C7F4", VA = "0x198C7F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public Transform RaySource
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x198C7FC", Offset = "0x198C7FC", VA = "0x198C7FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x198C804", Offset = "0x198C804", VA = "0x198C804")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public Transform RayDirection
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x198C80C", Offset = "0x198C80C", VA = "0x198C80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x198C814", Offset = "0x198C814", VA = "0x198C814")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public PointerEventData EventData
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x198C81C", Offset = "0x198C81C", VA = "0x198C81C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public EventTrigger ActiveTrigger
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x198C824", Offset = "0x198C824", VA = "0x198C824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public Selectable attachedSelectable
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x198C82C", Offset = "0x198C82C", VA = "0x198C82C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x198C794", Offset = "0x198C794", VA = "0x198C794")]
		protected VRTouchScreenRaycaster()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x198C834", Offset = "0x198C834", VA = "0x198C834", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
}
namespace TBMPlugins.Attributes
{
	[Token(Token = "0x200013B")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1E2B828", Offset = "0x1E2B828", VA = "0x1E2B828")]
		public ReadOnlyAttribute()
		{
		}
	}
}
namespace Plugins.ProjectileMath
{
	[Token(Token = "0x200013C")]
	public class Math3d : MonoBehaviour
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform tempChild;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform tempParent;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1997AA8", Offset = "0x1997AA8", VA = "0x1997AA8")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1997CAC", Offset = "0x1997CAC", VA = "0x1997CAC")]
		public static Vector3 AddVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1997D70", Offset = "0x1997D70", VA = "0x1997D70")]
		public static Vector3 SetVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1997DA0", Offset = "0x1997DA0", VA = "0x1997DA0")]
		public static Quaternion SubtractRotation(Quaternion B, Quaternion A)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1997DFC", Offset = "0x1997DFC", VA = "0x1997DFC")]
		public static bool PlanePlaneIntersection(out Vector3 linePoint, out Vector3 lineVec, Vector3 plane1Normal, Vector3 plane1Position, Vector3 plane2Normal, Vector3 plane2Position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1997F50", Offset = "0x1997F50", VA = "0x1997F50")]
		public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1998094", Offset = "0x1998094", VA = "0x1998094")]
		public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x199825C", Offset = "0x199825C", VA = "0x199825C")]
		public static bool ClosestPointsOnTwoLines(out Vector3 closestPointLine1, out Vector3 closestPointLine2, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x19983E4", Offset = "0x19983E4", VA = "0x19983E4")]
		public static Vector3 ProjectPointOnLine(Vector3 linePoint, Vector3 lineVec, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1998428", Offset = "0x1998428", VA = "0x1998428")]
		public static Vector3 ProjectPointOnLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x199863C", Offset = "0x199863C", VA = "0x199863C")]
		public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1998758", Offset = "0x1998758", VA = "0x1998758")]
		public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x199872C", Offset = "0x199872C", VA = "0x199872C")]
		public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1998788", Offset = "0x1998788", VA = "0x1998788")]
		public static float SignedDotProduct(Vector3 vectorA, Vector3 vectorB, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x19987EC", Offset = "0x19987EC", VA = "0x19987EC")]
		public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x19988B0", Offset = "0x19988B0", VA = "0x19988B0")]
		public static float AngleVectorPlane(Vector3 vector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1998964", Offset = "0x1998964", VA = "0x1998964")]
		public static float DotProductAngle(Vector3 vec1, Vector3 vec2)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1998A20", Offset = "0x1998A20", VA = "0x1998A20")]
		public static void PlaneFrom3Points(out Vector3 planeNormal, out Vector3 planePoint, Vector3 pointA, Vector3 pointB, Vector3 pointC)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1998C0C", Offset = "0x1998C0C", VA = "0x1998C0C")]
		public static Vector3 GetForwardVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1998C64", Offset = "0x1998C64", VA = "0x1998C64")]
		public static Vector3 GetUpVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1998CBC", Offset = "0x1998CBC", VA = "0x1998CBC")]
		public static Vector3 GetRightVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1998D14", Offset = "0x1998D14", VA = "0x1998D14")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1998D94", Offset = "0x1998D94", VA = "0x1998D94")]
		public static Vector3 PositionFromMatrix(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1998DA0", Offset = "0x1998DA0", VA = "0x1998DA0")]
		public static void LookRotationExtended(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 customForward, Vector3 customUp)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1998E90", Offset = "0x1998E90", VA = "0x1998E90")]
		public static void TransformWithParent(out Quaternion childRotation, out Vector3 childPosition, Quaternion parentRotation, Vector3 parentPosition, Quaternion startParentRotation, Vector3 startParentPosition, Quaternion startChildRotation, Vector3 startChildPosition)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x19990AC", Offset = "0x19990AC", VA = "0x19990AC")]
		public static void PreciseAlign(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 alignWithPosition, Vector3 triangleForward, Vector3 triangleNormal, Vector3 trianglePosition)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1999244", Offset = "0x1999244", VA = "0x1999244")]
		private void VectorsToTransform(ref GameObject gameObjectInOut, Vector3 positionVector, Vector3 directionVector, Vector3 normalVector)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x19985A0", Offset = "0x19985A0", VA = "0x19985A0")]
		public static int PointOnWhichSideOfLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x199930C", Offset = "0x199930C", VA = "0x199930C")]
		public static float MouseDistanceToLine(Vector3 linePoint1, Vector3 linePoint2)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x199946C", Offset = "0x199946C", VA = "0x199946C")]
		public static float MouseDistanceToCircle(Vector3 point, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x199952C", Offset = "0x199952C", VA = "0x199952C")]
		public static bool IsLineInRectangle(Vector3 linePoint1, Vector3 linePoint2, Vector3 rectA, Vector3 rectB, Vector3 rectC, Vector3 rectD)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1999804", Offset = "0x1999804", VA = "0x1999804")]
		public static bool IsPointInRectangle(Vector3 point, Vector3 rectA, Vector3 rectC, Vector3 rectB, Vector3 rectD)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1999A64", Offset = "0x1999A64", VA = "0x1999A64")]
		public static bool AreLineSegmentsCrossing(Vector3 pointA1, Vector3 pointA2, Vector3 pointB1, Vector3 pointB2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1999C60", Offset = "0x1999C60", VA = "0x1999C60")]
		public static bool LineSphereIntersection(Ray ray, Vector3 center, float radius, out float t0, out float t1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1999D54", Offset = "0x1999D54", VA = "0x1999D54")]
		public static void ClosestPointOnTriangleToPoint(Vector3 vertex1, Vector3 vertex2, Vector3 vertex3, Vector3 point, out Vector3 result)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1999F84", Offset = "0x1999F84", VA = "0x1999F84")]
		public Math3d()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public static class ProjectileMath
	{
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x15E7B98", Offset = "0x15E7B98", VA = "0x15E7B98")]
		public static bool LaunchAngle(float speed, float distance, float yOffset, float gravity, out float angle0, out float angle1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x15E7C4C", Offset = "0x15E7C4C", VA = "0x15E7C4C")]
		public static float LaunchSpeed(float distance, float yOffset, float gravity, float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x15E7D04", Offset = "0x15E7D04", VA = "0x15E7D04")]
		public static float TimeOfFlight(float speed, float angle, float yOffset, float gravity)
		{
			return default(float);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x15E7D68", Offset = "0x15E7D68", VA = "0x15E7D68")]
		public static Vector2[] ProjectileArcPoints(int iterations, float speed, float distance, float gravity, float angle)
		{
			return null;
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x15E7E78", Offset = "0x15E7E78", VA = "0x15E7E78")]
		public static void ProjectileArcPointsLowAlloc(ref Vector2[] buffer, float speed, float distance, float gravity, float angle)
		{
		}
	}
}
namespace GunClub
{
	[Serializable]
	[Token(Token = "0x200013E")]
	public class Player : ISerializable
	{
		[Serializable]
		[Token(Token = "0x20001D6")]
		public class ProductSubmit : ISerializable
		{
			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int? AssociatedProductId;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool PayUsingCoins;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ScoreAmount;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ProductId;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string SaleDate;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ulong UserId;

			[Token(Token = "0x600100E")]
			[Address(RVA = "0x1FE38D4", Offset = "0x1FE38D4", VA = "0x1FE38D4")]
			public ProductSubmit()
			{
			}

			[Token(Token = "0x600100F")]
			[Address(RVA = "0x1FE3994", Offset = "0x1FE3994", VA = "0x1FE3994")]
			public ProductSubmit(bool payUsingCoins, int productReward, int productId, int? associatedProductId)
			{
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0x1FE3B88", Offset = "0x1FE3B88", VA = "0x1FE3B88")]
			public ProductSubmit(bool payUsingCoins, int productReward, int productId)
			{
			}

			[Token(Token = "0x6001011")]
			[Address(RVA = "0x1FE3D30", Offset = "0x1FE3D30", VA = "0x1FE3D30", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x1FE3E64", Offset = "0x1FE3E64", VA = "0x1FE3E64")]
			public ProductSubmit(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x20001D7")]
		public class ProductFetch
		{
			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int SId;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int WId;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] Accs;

			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1FE30C8", Offset = "0x1FE30C8", VA = "0x1FE30C8")]
			public ProductFetch()
			{
			}

			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1FE30D0", Offset = "0x1FE30D0", VA = "0x1FE30D0")]
			public ProductFetch(int wId)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D8")]
		public class ProductIATSubmit : ISerializable
		{
			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int IATProductId;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int SaleId;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong UserId;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string SaleDate;

			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1FE3150", Offset = "0x1FE3150", VA = "0x1FE3150")]
			public ProductIATSubmit(int productId, int saleId)
			{
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x1FE32E4", Offset = "0x1FE32E4", VA = "0x1FE32E4", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x1FE33C4", Offset = "0x1FE33C4", VA = "0x1FE33C4")]
			public ProductIATSubmit(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x20001D9")]
		public class ProductIATFetch
		{
			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int SId;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PId;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int TId;

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x1FE3148", Offset = "0x1FE3148", VA = "0x1FE3148")]
			public ProductIATFetch()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DA")]
		public class AchievementData : ISerializable
		{
			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D1C", Offset = "0x8C9D1C")]
			private ulong <UserId>k__BackingField;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D2C", Offset = "0x8C9D2C")]
			private int <AssociatedProductId>k__BackingField;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D3C", Offset = "0x8C9D3C")]
			private int <ScoreAmount>k__BackingField;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string AchievementEarnedDate;

			[Token(Token = "0x1700024B")]
			public ulong UserId
			{
				[Token(Token = "0x600101B")]
				[Address(RVA = "0x1FE25D0", Offset = "0x1FE25D0", VA = "0x1FE25D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB4FC", Offset = "0x8CB4FC")]
				get
				{
					return default(ulong);
				}
				[Token(Token = "0x600101C")]
				[Address(RVA = "0x1FE25D8", Offset = "0x1FE25D8", VA = "0x1FE25D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB50C", Offset = "0x8CB50C")]
				set
				{
				}
			}

			[Token(Token = "0x1700024C")]
			public int AssociatedProductId
			{
				[Token(Token = "0x600101D")]
				[Address(RVA = "0x1FE25E0", Offset = "0x1FE25E0", VA = "0x1FE25E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB51C", Offset = "0x8CB51C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600101E")]
				[Address(RVA = "0x1FE25E8", Offset = "0x1FE25E8", VA = "0x1FE25E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB52C", Offset = "0x8CB52C")]
				set
				{
				}
			}

			[Token(Token = "0x1700024D")]
			public int ScoreAmount
			{
				[Token(Token = "0x600101F")]
				[Address(RVA = "0x1FE25F0", Offset = "0x1FE25F0", VA = "0x1FE25F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB53C", Offset = "0x8CB53C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001020")]
				[Address(RVA = "0x1FE25F8", Offset = "0x1FE25F8", VA = "0x1FE25F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB54C", Offset = "0x8CB54C")]
				set
				{
				}
			}

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x1FE2580", Offset = "0x1FE2580", VA = "0x1FE2580")]
			public AchievementData()
			{
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x1FE2588", Offset = "0x1FE2588", VA = "0x1FE2588")]
			public AchievementData(int pProdId, int pScore, string pDate)
			{
			}

			[Token(Token = "0x6001021")]
			[Address(RVA = "0x1FE2600", Offset = "0x1FE2600", VA = "0x1FE2600", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001022")]
			[Address(RVA = "0x1FE26E0", Offset = "0x1FE26E0", VA = "0x1FE26E0")]
			public AchievementData(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DB")]
		public class PlayerProgressSubmit : ISerializable
		{
			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[][] LadderProgress;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EventHighScore[][][] LadderEventScores;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[][] LadderHighScores;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] WeaponExperience;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int TutorialStage;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int PreviousRank;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool FirstWeaponRecieved;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool IsFreeAmmoRefillUsed;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool FacebookCoinsClaimed;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Hashtable ExtraData;

			[Token(Token = "0x6001023")]
			[Address(RVA = "0x1FE28F4", Offset = "0x1FE28F4", VA = "0x1FE28F4")]
			public PlayerProgressSubmit(int[][] ladderProgress, EventHighScore[][][] ladderEventScores, int[][] ladderHighScores, int[] weaponExperience, bool firstWeaponRecieved, bool isFreeAmmoRefillUsed, bool facebookCoinsClaimed, int tutorialStage, int previousRank, Hashtable extraData)
			{
			}

			[Token(Token = "0x6001024")]
			[Address(RVA = "0x1FE29D4", Offset = "0x1FE29D4", VA = "0x1FE29D4")]
			public PlayerProgressSubmit(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001025")]
			[Address(RVA = "0x1FE2E14", Offset = "0x1FE2E14", VA = "0x1FE2E14", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DC")]
		public class RangeResultSubmit : ISerializable
		{
			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D4C", Offset = "0x8C9D4C")]
			private int <LadderPack>k__BackingField;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D5C", Offset = "0x8C9D5C")]
			private int <LadderNumber>k__BackingField;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D6C", Offset = "0x8C9D6C")]
			private int <PlaysSinceLadderSubmission>k__BackingField;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D7C", Offset = "0x8C9D7C")]
			private bool <Submitted>k__BackingField;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9D8C", Offset = "0x8C9D8C")]
			private StorageManager.RangeResult <RangeResult>k__BackingField;

			[Token(Token = "0x1700024E")]
			public int LadderPack
			{
				[Token(Token = "0x6001026")]
				[Address(RVA = "0x1FE4178", Offset = "0x1FE4178", VA = "0x1FE4178")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB55C", Offset = "0x8CB55C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001027")]
				[Address(RVA = "0x1FE4180", Offset = "0x1FE4180", VA = "0x1FE4180")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB56C", Offset = "0x8CB56C")]
				set
				{
				}
			}

			[Token(Token = "0x1700024F")]
			public int LadderNumber
			{
				[Token(Token = "0x6001028")]
				[Address(RVA = "0x1FE4188", Offset = "0x1FE4188", VA = "0x1FE4188")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB57C", Offset = "0x8CB57C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001029")]
				[Address(RVA = "0x1FE4190", Offset = "0x1FE4190", VA = "0x1FE4190")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB58C", Offset = "0x8CB58C")]
				set
				{
				}
			}

			[Token(Token = "0x17000250")]
			public int PlaysSinceLadderSubmission
			{
				[Token(Token = "0x600102A")]
				[Address(RVA = "0x1FE4198", Offset = "0x1FE4198", VA = "0x1FE4198")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB59C", Offset = "0x8CB59C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600102B")]
				[Address(RVA = "0x1FE41A0", Offset = "0x1FE41A0", VA = "0x1FE41A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5AC", Offset = "0x8CB5AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000251")]
			public bool Submitted
			{
				[Token(Token = "0x600102C")]
				[Address(RVA = "0x1FE41A8", Offset = "0x1FE41A8", VA = "0x1FE41A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5BC", Offset = "0x8CB5BC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600102D")]
				[Address(RVA = "0x1FE41B0", Offset = "0x1FE41B0", VA = "0x1FE41B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5CC", Offset = "0x8CB5CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000252")]
			public StorageManager.RangeResult RangeResult
			{
				[Token(Token = "0x600102E")]
				[Address(RVA = "0x1FE41BC", Offset = "0x1FE41BC", VA = "0x1FE41BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5DC", Offset = "0x8CB5DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600102F")]
				[Address(RVA = "0x1FE41C4", Offset = "0x1FE41C4", VA = "0x1FE41C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5EC", Offset = "0x8CB5EC")]
				set
				{
				}
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0x1FE41CC", Offset = "0x1FE41CC", VA = "0x1FE41CC")]
			public RangeResultSubmit(StorageManager.RangeResult rangeResult, int ladderPack, int ladderNumber, bool submitted, int playsSinceLadderSubmission)
			{
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x1FE4234", Offset = "0x1FE4234", VA = "0x1FE4234")]
			public RangeResultSubmit(RangeResultSubmit rangeResultSent, bool submitted, int playsSinceLadderSubmission)
			{
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x1FE429C", Offset = "0x1FE429C", VA = "0x1FE429C", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x1FE43A4", Offset = "0x1FE43A4", VA = "0x1FE43A4")]
			public RangeResultSubmit(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x20001DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F5C", Offset = "0x8C8F5C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int weaponId;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int? assProdId;

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x1FE24BC", Offset = "0x1FE24BC", VA = "0x1FE24BC")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0x1FE24C4", Offset = "0x1FE24C4", VA = "0x1FE24C4")]
			internal bool <IsProductOwned>b__0(ProductSubmit p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x1FE24E8", Offset = "0x1FE24E8", VA = "0x1FE24E8")]
			internal bool <IsProductOwned>b__1(ProductSubmit p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F6C", Offset = "0x8C8F6C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ProductSubmit, bool> <>9__43_0;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ProductSubmit, int> <>9__43_1;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<int, ProductSubmit>, ProductSubmit> <>9__43_2;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ProductSubmit, bool> <>9__43_3;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ProductSubmit, int> <>9__43_4;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ProductSubmit, int?> <>9__43_5;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<IGrouping<int?, ProductSubmit>, ProductSubmit> <>9__43_6;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<StorageManager.RangeResult[], IEnumerable<StorageManager.RangeResult>> <>9__75_0;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<StorageManager.RangeResult[], StorageManager.RangeResult, <>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>> <>9__75_1;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>, bool> <>9__75_2;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>, bool> <>9__75_3;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>, StorageManager.RangeResultBase> <>9__75_4;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<StorageManager.RangeResultBase, int> <>9__75_5;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<IGrouping<int, StorageManager.RangeResultBase>, StorageManager.RangeResultBase> <>9__75_6;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<EventHighScore, EventHighScore, EventHighScore> <>9__132_4;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<EventHighScore[], EventHighScore[], EventHighScore[]> <>9__132_3;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<EventHighScore[][], EventHighScore[][], EventHighScore[][]> <>9__132_1;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<StorageManager.RangeResult, StorageManager.RangeResult, StorageManager.RangeResult> <>9__132_5;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<StorageManager.RangeResult[], StorageManager.RangeResult[], StorageManager.RangeResult[]> <>9__132_2;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static Func<int[], int> <>9__133_0;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static Func<int, string, string> <>9__133_5;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static Func<int[], string, string> <>9__133_1;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static Func<EventHighScore, string, string> <>9__133_7;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static Func<EventHighScore[], string, string> <>9__133_6;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static Func<EventHighScore[][], string, string> <>9__133_2;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static Func<int, string, string> <>9__133_3;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public static Func<StorageManager.RangeResult, string, string> <>9__133_8;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public static Func<StorageManager.RangeResult[], string, string> <>9__133_4;

			[Token(Token = "0x6001038")]
			[Address(RVA = "0x1FE14C8", Offset = "0x1FE14C8", VA = "0x1FE14C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001039")]
			[Address(RVA = "0x1FE14D0", Offset = "0x1FE14D0", VA = "0x1FE14D0")]
			internal bool <SanitizePurchasedProducts>b__43_0(ProductSubmit p)
			{
				return default(bool);
			}

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x1FE1520", Offset = "0x1FE1520", VA = "0x1FE1520")]
			internal int <SanitizePurchasedProducts>b__43_1(ProductSubmit w)
			{
				return default(int);
			}

			[Token(Token = "0x600103B")]
			[Address(RVA = "0x1FE1538", Offset = "0x1FE1538", VA = "0x1FE1538")]
			internal ProductSubmit <SanitizePurchasedProducts>b__43_2(IGrouping<int, ProductSubmit> w)
			{
				return null;
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x1FE1584", Offset = "0x1FE1584", VA = "0x1FE1584")]
			internal bool <SanitizePurchasedProducts>b__43_3(ProductSubmit p)
			{
				return default(bool);
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0x1FE15CC", Offset = "0x1FE15CC", VA = "0x1FE15CC")]
			internal int <SanitizePurchasedProducts>b__43_4(ProductSubmit a)
			{
				return default(int);
			}

			[Token(Token = "0x600103E")]
			[Address(RVA = "0x1FE15E4", Offset = "0x1FE15E4", VA = "0x1FE15E4")]
			internal int? <SanitizePurchasedProducts>b__43_5(ProductSubmit a)
			{
				return null;
			}

			[Token(Token = "0x600103F")]
			[Address(RVA = "0x1FE15FC", Offset = "0x1FE15FC", VA = "0x1FE15FC")]
			internal ProductSubmit <SanitizePurchasedProducts>b__43_6(IGrouping<int?, ProductSubmit> a)
			{
				return null;
			}

			[Token(Token = "0x6001040")]
			[Address(RVA = "0x1FE1648", Offset = "0x1FE1648", VA = "0x1FE1648")]
			internal IEnumerable<StorageManager.RangeResult> <get_RangeResultsFlat>b__75_0(StorageManager.RangeResult[] rangeResultLadder)
			{
				return null;
			}

			[Token(Token = "0x6001041")]
			[Address(RVA = "0x1FE1650", Offset = "0x1FE1650", VA = "0x1FE1650")]
			internal <>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <get_RangeResultsFlat>b__75_1(StorageManager.RangeResult[] rangeResultLadder, StorageManager.RangeResult result)
			{
				return null;
			}

			[Token(Token = "0x6001042")]
			[Address(RVA = "0x1FE16D4", Offset = "0x1FE16D4", VA = "0x1FE16D4")]
			internal bool <get_RangeResultsFlat>b__75_2(<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}

			[Token(Token = "0x6001043")]
			[Address(RVA = "0x1FE1724", Offset = "0x1FE1724", VA = "0x1FE1724")]
			internal bool <get_RangeResultsFlat>b__75_3(<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}

			[Token(Token = "0x6001044")]
			[Address(RVA = "0x1FE177C", Offset = "0x1FE177C", VA = "0x1FE177C")]
			internal StorageManager.RangeResultBase <get_RangeResultsFlat>b__75_4(<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <>h__TransparentIdentifier0)
			{
				return null;
			}

			[Token(Token = "0x6001045")]
			[Address(RVA = "0x1FE194C", Offset = "0x1FE194C", VA = "0x1FE194C")]
			internal int <get_RangeResultsFlat>b__75_5(StorageManager.RangeResultBase r)
			{
				return default(int);
			}

			[Token(Token = "0x6001046")]
			[Address(RVA = "0x1FE1964", Offset = "0x1FE1964", VA = "0x1FE1964")]
			internal StorageManager.RangeResultBase <get_RangeResultsFlat>b__75_6(IGrouping<int, StorageManager.RangeResultBase> rid)
			{
				return null;
			}

			[Token(Token = "0x6001047")]
			[Address(RVA = "0x1FE19B0", Offset = "0x1FE19B0", VA = "0x1FE19B0")]
			internal EventHighScore[][] <MergePlayerData>b__132_1(EventHighScore[][] curPlayerScore, EventHighScore[][] otherPlayerScore)
			{
				return null;
			}

			[Token(Token = "0x6001048")]
			[Address(RVA = "0x1FE1AE0", Offset = "0x1FE1AE0", VA = "0x1FE1AE0")]
			internal EventHighScore[] <MergePlayerData>b__132_3(EventHighScore[] scores, EventHighScore[] highScores)
			{
				return null;
			}

			[Token(Token = "0x6001049")]
			[Address(RVA = "0x1FE1C10", Offset = "0x1FE1C10", VA = "0x1FE1C10")]
			internal EventHighScore <MergePlayerData>b__132_4(EventHighScore score, EventHighScore highScore)
			{
				return null;
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x1FE1CDC", Offset = "0x1FE1CDC", VA = "0x1FE1CDC")]
			internal StorageManager.RangeResult[] <MergePlayerData>b__132_2(StorageManager.RangeResult[] curResults, StorageManager.RangeResult[] otherResults)
			{
				return null;
			}

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x1FE1E0C", Offset = "0x1FE1E0C", VA = "0x1FE1E0C")]
			internal StorageManager.RangeResult <MergePlayerData>b__132_5(StorageManager.RangeResult result1, StorageManager.RangeResult result2)
			{
				return null;
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x1FE1ED8", Offset = "0x1FE1ED8", VA = "0x1FE1ED8")]
			internal int <LogPlayer>b__133_0(int[] ints)
			{
				return default(int);
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x1FE1EE4", Offset = "0x1FE1EE4", VA = "0x1FE1EE4")]
			internal string <LogPlayer>b__133_1(int[] ints, string s)
			{
				return null;
			}

			[Token(Token = "0x600104E")]
			[Address(RVA = "0x1FE2014", Offset = "0x1FE2014", VA = "0x1FE2014")]
			internal string <LogPlayer>b__133_5(int i, string s1)
			{
				return null;
			}

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x1FE203C", Offset = "0x1FE203C", VA = "0x1FE203C")]
			internal string <LogPlayer>b__133_2(EventHighScore[][] scores1, string s)
			{
				return null;
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x1FE216C", Offset = "0x1FE216C", VA = "0x1FE216C")]
			internal string <LogPlayer>b__133_6(EventHighScore[] scores2, string s1)
			{
				return null;
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x1FE229C", Offset = "0x1FE229C", VA = "0x1FE229C")]
			internal string <LogPlayer>b__133_7(EventHighScore score, string s2)
			{
				return null;
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x1FE22FC", Offset = "0x1FE22FC", VA = "0x1FE22FC")]
			internal string <LogPlayer>b__133_3(int i, string s)
			{
				return null;
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x1FE2324", Offset = "0x1FE2324", VA = "0x1FE2324")]
			internal string <LogPlayer>b__133_4(StorageManager.RangeResult[] results, string s)
			{
				return null;
			}

			[Token(Token = "0x6001054")]
			[Address(RVA = "0x1FE2454", Offset = "0x1FE2454", VA = "0x1FE2454")]
			internal string <LogPlayer>b__133_8(StorageManager.RangeResult result, string s1)
			{
				return null;
			}
		}

		[Token(Token = "0x4000852")]
		private const string PLAYER_FILE_NAME = "Player";

		[Token(Token = "0x4000853")]
		private const string PLAYER_BACKUP_FILE_NAME = "PlayerBackup";

		[Token(Token = "0x4000854")]
		private const string PLAYER_BACKUP_LAST_RESORT_FILE_NAME = "PlayerBackupArchived";

		[Token(Token = "0x4000855")]
		private const string PLAYER_BACKUP_MAJOR_UPDATE = "PlayerBackupPriorTo_";

		[Token(Token = "0x4000856")]
		private const string UPDATESUFFIX = ".ubak";

		[Token(Token = "0x4000857")]
		private const string GCVR_PLAYER_MIGRATION_FLAG = "GCVR_PLAYER_MIGRATION_FLAG";

		[Token(Token = "0x4000858")]
		public const string FIRSTVERSION = "FirstVersion";

		[Token(Token = "0x4000859")]
		public const string PROFILE_FIRST_VERSION = "ProfileFirstVersion";

		[Token(Token = "0x400085A")]
		public const int AMMO_BOX_MAXIMUM = 10;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject _globalControl;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _activeWeaponId;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[,] _ownershipMatrix;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StorageManager.GatedPurchase[] storedGatedPurchases;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StorageManager.WeaponConfig[] _weaponConfigs;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public readonly List<ProductIATSubmit> _purchasedIAT;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<ProductSubmit> _purchasedProducts;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[][] _ladderProgress;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventHighScore[][][] _ladderEventScores;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[][] _ladderHighScores;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int[] weaponExperience;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] weaponsRangesCompleted;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int previousRank;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int tutorialStage;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StorageManager.RangeResult[][] _rangeResults;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool firstWeaponRecieved;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int fruitDestroyed;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AchievementData[] achievementsUnlocked;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int coinsSpent;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int coinsEarned;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int coinsPurchased;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int prizeMoneySpent;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int prizeMoneyEarned;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int prizeMoneyPurchased;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isFreeAmmoRefillUsed;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool facebookCoinsClaimed;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _prizeMoneyOwned;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _coinsOwned;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _ammunitionTokens;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool allowInfiniteCash;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Hashtable extraData;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static BackgroundWorker bw;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isSerializing;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool isDeserializing;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private static bool m_playerWasSerialized;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string tempPlayerDataStr;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Player m_deserializedPlayer;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityEvent OnSaveRequested;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static UnityEvent OnLoadRequested;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static UnityEvent OnMigrateProducts;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string m_playerName;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string m_displayName;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string m_curPlayerDataStr;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string tempName;

		[Token(Token = "0x170001E1")]
		public static Player Instance
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x15E07AC", Offset = "0x15E07AC", VA = "0x15E07AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x15E0FF0", Offset = "0x15E0FF0", VA = "0x15E0FF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public string playerName
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x15E1480", Offset = "0x15E1480", VA = "0x15E1480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x15E1568", Offset = "0x15E1568", VA = "0x15E1568")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public int activeWeaponID
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x15E1610", Offset = "0x15E1610", VA = "0x15E1610")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x15E1834", Offset = "0x15E1834", VA = "0x15E1834")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public StorageManager.WeaponConfig[] WeaponConfigs
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x15E1AC4", Offset = "0x15E1AC4", VA = "0x15E1AC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x15E1B58", Offset = "0x15E1B58", VA = "0x15E1B58")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		private StorageManager.WeaponStatistics WeaponStatistics
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x15E1B60", Offset = "0x15E1B60", VA = "0x15E1B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x15E1B84", Offset = "0x15E1B84", VA = "0x15E1B84")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public ProductSubmit[] PurchasedProducts
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x15E1C50", Offset = "0x15E1C50", VA = "0x15E1C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public int FirstPurchasedWeaponID
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x15E17A8", Offset = "0x15E17A8", VA = "0x15E17A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E8")]
		public int Score
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x15E2804", Offset = "0x15E2804", VA = "0x15E2804")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E9")]
		public int localScore
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x15E2870", Offset = "0x15E2870", VA = "0x15E2870")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EA")]
		public static int[][] LadderProgress
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x15E287C", Offset = "0x15E287C", VA = "0x15E287C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x15E28E4", Offset = "0x15E28E4", VA = "0x15E28E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public int[][] ladderProgress
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x15E2954", Offset = "0x15E2954", VA = "0x15E2954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public static EventHighScore[][][] LadderEventScores
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x15E295C", Offset = "0x15E295C", VA = "0x15E295C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x15E29C4", Offset = "0x15E29C4", VA = "0x15E29C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public EventHighScore[][][] ladderEventScores
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x15E2A34", Offset = "0x15E2A34", VA = "0x15E2A34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public static int[][] LadderHighScores
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x15E2A3C", Offset = "0x15E2A3C", VA = "0x15E2A3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x15E2AA4", Offset = "0x15E2AA4", VA = "0x15E2AA4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		private PlayerProgressSubmit PlayerProgress
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x15E2B14", Offset = "0x15E2B14", VA = "0x15E2B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public static StorageManager.RangeResult[][] RangeResults
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x15E2C4C", Offset = "0x15E2C4C", VA = "0x15E2C4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x15E2BDC", Offset = "0x15E2BDC", VA = "0x15E2BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		private StorageManager.RangeResultBase[] RangeResultsFlat
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x15E2CB4", Offset = "0x15E2CB4", VA = "0x15E2CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public static int PrizeMoneyOwned
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x15E32FC", Offset = "0x15E32FC", VA = "0x15E32FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x15E33D0", Offset = "0x15E33D0", VA = "0x15E33D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public static int CoinsOwned
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x15E343C", Offset = "0x15E343C", VA = "0x15E343C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x15E34A4", Offset = "0x15E34A4", VA = "0x15E34A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public static int AmmunitionTokens
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x15E3510", Offset = "0x15E3510", VA = "0x15E3510")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x15E3578", Offset = "0x15E3578", VA = "0x15E3578")]
			set
			{
			}
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x15E1084", Offset = "0x15E1084", VA = "0x15E1084")]
		public Player()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x15E11C4", Offset = "0x15E11C4", VA = "0x15E11C4")]
		public Player(int weaponAllocation, int productAllocation, int[][] ladderProgress, EventHighScore[][][] ladderEventScores, int[][] ladderHighScores, StorageManager.RangeResult[][] rangeResults)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x15E183C", Offset = "0x15E183C", VA = "0x15E183C")]
		public static int GetAttachmentUnlockProgress(int weaponId)
		{
			return default(int);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x15E18E0", Offset = "0x15E18E0", VA = "0x15E18E0")]
		public static int GetAttachmentId(int weaponId, int attachmentIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x15E1998", Offset = "0x15E1998", VA = "0x15E1998")]
		public static void SetProductOwned(int productId, int weaponId = -1)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x15E1BB8", Offset = "0x15E1BB8", VA = "0x15E1BB8")]
		public void AddPurchasedProduct(int iatProductId, int saleId)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x15E1CA4", Offset = "0x15E1CA4", VA = "0x15E1CA4")]
		public void AddPurcahsedProduct(ProductSubmit product)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x15E1D30", Offset = "0x15E1D30", VA = "0x15E1D30")]
		public bool IsProductOwned(int weaponId, int? assProdId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x15E1E70", Offset = "0x15E1E70", VA = "0x15E1E70")]
		public void SanitizePurchasedProducts()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x15E35E4", Offset = "0x15E35E4", VA = "0x15E35E4")]
		public static void Save()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x15E39D4", Offset = "0x15E39D4", VA = "0x15E39D4")]
		public static void DeserializePlayerThreaded()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x15E3BF4", Offset = "0x15E3BF4", VA = "0x15E3BF4")]
		public static void SerializePlayerThreaded()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x15E3CA4", Offset = "0x15E3CA4", VA = "0x15E3CA4")]
		private static void DoSerializationWork(object sender, DoWorkEventArgs e)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x15E3AC8", Offset = "0x15E3AC8", VA = "0x15E3AC8")]
		private static void InitSerializationThread()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x15E0880", Offset = "0x15E0880", VA = "0x15E0880")]
		public static void Load()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x15E46FC", Offset = "0x15E46FC", VA = "0x15E46FC")]
		public static Player RegressionCheck(Player loadedPlayer, bool playerFileValid = true)
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x15E5178", Offset = "0x15E5178", VA = "0x15E5178")]
		public static void HandleUpdateBackup()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x15E517C", Offset = "0x15E517C", VA = "0x15E517C")]
		public static void SetPlayerName(string name)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x15E51E8", Offset = "0x15E51E8", VA = "0x15E51E8")]
		public static string GetPlayerName()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x15E524C", Offset = "0x15E524C", VA = "0x15E524C")]
		public static void SetDisplayName(string name)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x15E5310", Offset = "0x15E5310", VA = "0x15E5310")]
		public static void SetPlayerData(string dataStr)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x15E537C", Offset = "0x15E537C", VA = "0x15E537C")]
		public static string GetPlayerData()
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x15E3FFC", Offset = "0x15E3FFC", VA = "0x15E3FFC")]
		public static Player GetPlayerFromFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x15E4F44", Offset = "0x15E4F44", VA = "0x15E4F44")]
		public static Player GetLastResortBackupPlayer()
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x15E53E0", Offset = "0x15E53E0", VA = "0x15E53E0")]
		public static void Delete()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x15E4294", Offset = "0x15E4294", VA = "0x15E4294")]
		private static void Init()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x15E54C8", Offset = "0x15E54C8", VA = "0x15E54C8")]
		protected Player(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x15E63A0", Offset = "0x15E63A0", VA = "0x15E63A0")]
		public void MergePlayerData(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x15E67E0", Offset = "0x15E67E0", VA = "0x15E67E0")]
		public void LogPlayer(string prefix = "")
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x15E6FE0", Offset = "0x15E6FE0", VA = "0x15E6FE0", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x15E781C", Offset = "0x15E781C", VA = "0x15E781C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6E4", Offset = "0x8CA6E4")]
		internal static int[] <MergePlayerData>g__MergeCompareInts|132_0(int[] ar1, int[] ar2)
		{
			return null;
		}
	}
}
namespace MiniLocale
{
	[Token(Token = "0x200013F")]
	public static class Localizer
	{
		[Token(Token = "0x20001DF")]
		public delegate void LanguageEvent();

		[Token(Token = "0x4000887")]
		private const string _NO_STRING_FOUND = "";

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> _strings;

		[Token(Token = "0x14000001")]
		public static event LanguageEvent SourceChanged
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x1993338", Offset = "0x1993338", VA = "0x1993338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA6F4", Offset = "0x8CA6F4")]
			add
			{
			}
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x1993430", Offset = "0x1993430", VA = "0x1993430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA704", Offset = "0x8CA704")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1992D18", Offset = "0x1992D18", VA = "0x1992D18")]
		public static string GetString(string tag)
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x199452C", Offset = "0x199452C", VA = "0x199452C")]
		public static void LoadSource(LanguageData data)
		{
		}
	}
}
namespace MiniLocale.Serialization
{
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C8BDC", Offset = "0x8C8BDC")]
	public class LanguageData : ScriptableObject
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringData[] strings;

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x167AEBC", Offset = "0x167AEBC", VA = "0x167AEBC")]
		public LanguageData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000141")]
	public class StringData
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Multiline]
		public string tag;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x170001F5")]
		public string Tag
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x1C97688", Offset = "0x1C97688", VA = "0x1C97688")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x1C97690", Offset = "0x1C97690", VA = "0x1C97690")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public string Text
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x1C97698", Offset = "0x1C97698", VA = "0x1C97698")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x1C976A0", Offset = "0x1C976A0", VA = "0x1C976A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1C976A8", Offset = "0x1C976A8", VA = "0x1C976A8")]
		public StringData()
		{
		}
	}
}
namespace MiniLocale.Serialization.Editor
{
	[Token(Token = "0x2000142")]
	public static class CsvParser
	{
	}
	[Token(Token = "0x2000143")]
	public static class TsvParser
	{
		[Token(Token = "0x400088D")]
		private const char _DELIMINATOR = '\t';

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1C9F924", Offset = "0x1C9F924", VA = "0x1C9F924")]
		public static StringData[] ParseTsv(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1C9F93C", Offset = "0x1C9F93C", VA = "0x1C9F93C")]
		public static StringData[] ParseLines(string[] lines)
		{
			return null;
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1C9FA54", Offset = "0x1C9FA54", VA = "0x1C9FA54")]
		public static StringData ParseLine(string line)
		{
			return null;
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1C9FB70", Offset = "0x1C9FB70", VA = "0x1C9FB70")]
		public static bool WriteTsv(string path, StringData[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1C9FBB4", Offset = "0x1C9FBB4", VA = "0x1C9FBB4")]
		public static string[] ToLines(StringData[] data)
		{
			return null;
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1C9FCD8", Offset = "0x1C9FCD8", VA = "0x1C9FCD8")]
		public static string ToLine(StringData data)
		{
			return null;
		}
	}
}
namespace MiniLocale.Components
{
	[Token(Token = "0x2000144")]
	public abstract class LocalizeComponent : MonoBehaviour
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string textTag;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _subscribed;

		[Token(Token = "0x170001F7")]
		public string Tag
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x19930E8", Offset = "0x19930E8", VA = "0x19930E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x19930F0", Offset = "0x19930F0", VA = "0x19930F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C42")]
		public abstract void SetText(string text);

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1993190", Offset = "0x1993190", VA = "0x1993190", Slot = "5")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1993118", Offset = "0x1993118", VA = "0x1993118")]
		public void Localize()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1993194", Offset = "0x1993194", VA = "0x1993194")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1993280", Offset = "0x1993280", VA = "0x1993280")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x19931C8", Offset = "0x19931C8", VA = "0x19931C8")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1993284", Offset = "0x1993284", VA = "0x1993284")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1993528", Offset = "0x1993528", VA = "0x1993528")]
		protected LocalizeComponent()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class LocalizeUguiText : LocalizeComponent
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1993530", Offset = "0x1993530", VA = "0x1993530", Slot = "4")]
		public override void SetText(string text)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1993554", Offset = "0x1993554", VA = "0x1993554")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1993610", Offset = "0x1993610", VA = "0x1993610")]
		public LocalizeUguiText()
		{
		}
	}
}
namespace Localization
{
	[Token(Token = "0x2000146")]
	public enum Language
	{
		[Token(Token = "0x4000892")]
		English,
		[Token(Token = "0x4000893")]
		French,
		[Token(Token = "0x4000894")]
		Spanish,
		[Token(Token = "0x4000895")]
		German,
		[Token(Token = "0x4000896")]
		Korean,
		[Token(Token = "0x4000897")]
		Japanese,
		[Token(Token = "0x4000898")]
		Chinese,
		[Token(Token = "0x4000899")]
		TradChinese,
		[Token(Token = "0x400089A")]
		Italian,
		[Token(Token = "0x400089B")]
		Portuguese,
		[Token(Token = "0x400089C")]
		Thai
	}
	[Token(Token = "0x2000147")]
	public class LanguageManager : MonoBehaviour
	{
		[Token(Token = "0x20001E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8F7C", Offset = "0x8C8F7C")]
		private sealed class <ChangeLanguageRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Language lang;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <fontResource>5__2;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ResourceRequest <sourceOp>5__3;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ResourceRequest <fontOp>5__4;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600105C")]
				[Address(RVA = "0x19905A4", Offset = "0x19905A4", VA = "0x19905A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105E")]
				[Address(RVA = "0x19905EC", Offset = "0x19905EC", VA = "0x19905EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x19902CC", Offset = "0x19902CC", VA = "0x19902CC")]
			[DebuggerHidden]
			public <ChangeLanguageRoutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x19902F8", Offset = "0x19902F8", VA = "0x19902F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600105B")]
			[Address(RVA = "0x19902FC", Offset = "0x19902FC", VA = "0x19902FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105D")]
			[Address(RVA = "0x19905AC", Offset = "0x19905AC", VA = "0x19905AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LanguageManager instance;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool spawned;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Language current;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool init;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine routine;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C97E4", Offset = "0x8C97E4")]
		private static EzguiLanguageFallback <FontFallback>k__BackingField;

		[Token(Token = "0x40008A4")]
		private const string PPREF = "GCL_OverrideLang";

		[Token(Token = "0x170001F8")]
		public static bool EnableLocalization
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x167AEC4", Offset = "0x167AEC4", VA = "0x167AEC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		public static Language Current
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x167AECC", Offset = "0x167AECC", VA = "0x167AECC")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x167AF30", Offset = "0x167AF30", VA = "0x167AF30")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public static bool Init
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x167AF98", Offset = "0x167AF98", VA = "0x167AF98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FB")]
		public static EzguiLanguageFallback FontFallback
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x167AFFC", Offset = "0x167AFFC", VA = "0x167AFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA714", Offset = "0x8CA714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x167B060", Offset = "0x167B060", VA = "0x167B060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA724", Offset = "0x8CA724")]
			private set
			{
			}
		}

		[Token(Token = "0x14000002")]
		public static event Action RefreshLanguage
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x167B0CC", Offset = "0x167B0CC", VA = "0x167B0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA734", Offset = "0x8CA734")]
			add
			{
			}
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x167B1C4", Offset = "0x167B1C4", VA = "0x167B1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA744", Offset = "0x8CA744")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x167B2BC", Offset = "0x167B2BC", VA = "0x167B2BC")]
		public static void ChangeLanguageSync(Language lang)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x167B754", Offset = "0x167B754", VA = "0x167B754")]
		public static void ChangeLanguageAsync(Language lang, Action callback)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x167BA2C", Offset = "0x167BA2C", VA = "0x167BA2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CA754", Offset = "0x8CA754")]
		private IEnumerator ChangeLanguageRoutine(Language lang, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x167B548", Offset = "0x167B548", VA = "0x167B548")]
		private static void ChangeLanguage(Language lang, LanguageData source, EzguiLanguageFallback font)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x167B438", Offset = "0x167B438", VA = "0x167B438")]
		private static string GetSourceResource(Language lang)
		{
			return null;
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x167B4C0", Offset = "0x167B4C0", VA = "0x167B4C0")]
		private static string GetFontResource(Language lang)
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x167BAB4", Offset = "0x167BAB4", VA = "0x167BAB4")]
		private static string TagFromLanguage(Language lang)
		{
			return null;
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x167BB90", Offset = "0x167BB90", VA = "0x167BB90")]
		public static string DisplayNameFromLanguage(Language lang)
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x167BC6C", Offset = "0x167BC6C", VA = "0x167BC6C")]
		public static bool HasPref()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x167BCE0", Offset = "0x167BCE0", VA = "0x167BCE0")]
		public static int GetPrefInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x167BD54", Offset = "0x167BD54", VA = "0x167BD54")]
		public static Language GetPref()
		{
			return default(Language);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x167BDAC", Offset = "0x167BDAC", VA = "0x167BDAC")]
		public static void SetPref(Language lang)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x167BE0C", Offset = "0x167BE0C", VA = "0x167BE0C")]
		public static void SetPref(int lang)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x167BE88", Offset = "0x167BE88", VA = "0x167BE88")]
		public LanguageManager()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public static class NumFormat
	{
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x199C744", Offset = "0x199C744", VA = "0x199C744")]
		public static string Get(int num)
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x199C76C", Offset = "0x199C76C", VA = "0x199C76C")]
		public static string GetCash(int num)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8C48", Offset = "0x8C8C48")]
	public class LocalizableText : Text
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8C9804", Offset = "0x8C9804")]
		[SerializeField]
		protected string m_OriginalText;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_Localized;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_LocalizationSubscribed;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Language m_LastLanguage;

		[Token(Token = "0x170001FC")]
		public override string text
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x1992BDC", Offset = "0x1992BDC", VA = "0x1992BDC", Slot = "74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x1992BE4", Offset = "0x1992BE4", VA = "0x1992BE4", Slot = "75")]
			set
			{
			}
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1992DDC", Offset = "0x1992DDC", VA = "0x1992DDC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1992EB4", Offset = "0x1992EB4", VA = "0x1992EB4", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1992F78", Offset = "0x1992F78", VA = "0x1992F78")]
		private void RefreshLanguage()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1993058", Offset = "0x1993058", VA = "0x1993058")]
		public LocalizableText()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class LocalizedObjectMover : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E1")]
		public struct LocalPositionOverride
		{
			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Language language;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 localPosition;
		}

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalPositionOverride[] overrides;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultPosition;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1993618", Offset = "0x1993618", VA = "0x1993618")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x19936C0", Offset = "0x19936C0", VA = "0x19936C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x19938DC", Offset = "0x19938DC", VA = "0x19938DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x199378C", Offset = "0x199378C", VA = "0x199378C")]
		public void RefreshPosition()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x19939A0", Offset = "0x19939A0", VA = "0x19939A0")]
		public LocalizedObjectMover()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class LocalizedSpriteTextMaxWidth : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E2")]
		public struct MaxWidthOverride
		{
			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Language language;

			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float maxWidth;
		}

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteText target;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MaxWidthOverride[] overrides;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float defaultMaxWidth;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x19939A8", Offset = "0x19939A8", VA = "0x19939A8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1993A64", Offset = "0x1993A64", VA = "0x1993A64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1993C90", Offset = "0x1993C90", VA = "0x1993C90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1993B28", Offset = "0x1993B28", VA = "0x1993B28")]
		public void RefreshSize()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1993D88", Offset = "0x1993D88", VA = "0x1993D88")]
		public LocalizedSpriteTextMaxWidth()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class LocalizedSpriteTextSizer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E3")]
		public struct SizeOverride
		{
			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Language language;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float size;
		}

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteText target;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SizeOverride[] overrides;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float defaultSize;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1993D98", Offset = "0x1993D98", VA = "0x1993D98")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1993E54", Offset = "0x1993E54", VA = "0x1993E54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1994080", Offset = "0x1994080", VA = "0x1994080")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1993F18", Offset = "0x1993F18", VA = "0x1993F18")]
		public void RefreshSize()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1994178", Offset = "0x1994178", VA = "0x1994178")]
		public LocalizedSpriteTextSizer()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class LocalizedTextSizer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E4")]
		public struct SizeOverride
		{
			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Language language;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int size;
		}

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text target;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SizeOverride[] overrides;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int defaultSize;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1994188", Offset = "0x1994188", VA = "0x1994188")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1994244", Offset = "0x1994244", VA = "0x1994244")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1994448", Offset = "0x1994448", VA = "0x1994448")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x199430C", Offset = "0x199430C", VA = "0x199430C")]
		public void RefreshSize()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x199451C", Offset = "0x199451C", VA = "0x199451C")]
		public LocalizedTextSizer()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class OnlyEnableIfLocalized : MonoBehaviour
	{
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x15DB4F4", Offset = "0x15DB4F4", VA = "0x15DB4F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x15DB584", Offset = "0x15DB584", VA = "0x15DB584")]
		public OnlyEnableIfLocalized()
		{
		}
	}
}
namespace TBM.PlayerOptions
{
	[Token(Token = "0x200014F")]
	public static class Options
	{
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly HolsterWidth HolsterWidth;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly AllowHolsteredReloads HolsteredReloads;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly PlayerOption[] OPTIONS;

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x15DB58C", Offset = "0x15DB58C", VA = "0x15DB58C")]
		public static void LoadAll()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x15DB644", Offset = "0x15DB644", VA = "0x15DB644")]
		public static void ClearAll()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public static class Constants
	{
		[Token(Token = "0x20001E5")]
		public static class PrefNames
		{
			[Token(Token = "0x4000B58")]
			public const string ALLOW_HOLSTERED_RELOADS_KEY = "HOLSTER_RELOADING_ENABLED";

			[Token(Token = "0x4000B59")]
			public const string HOLSTER_WIDTH_KEY = "HOLSTER_WIDTH_SETTING";
		}
	}
	[Token(Token = "0x2000151")]
	public class AllowHolsteredReloads : PlayerBoolOption
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1EA3A9C", Offset = "0x1EA3A9C", VA = "0x1EA3A9C")]
		public AllowHolsteredReloads()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1EA3B44", Offset = "0x1EA3B44", VA = "0x1EA3B44", Slot = "5")]
		public override void LoadFromPrefs()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1EA3BD8", Offset = "0x1EA3BD8", VA = "0x1EA3BD8", Slot = "6")]
		public override void ClearPref()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1EA3C80", Offset = "0x1EA3C80", VA = "0x1EA3C80", Slot = "4")]
		protected override void SaveToPrefs()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1EA3ACC", Offset = "0x1EA3ACC", VA = "0x1EA3ACC")]
		protected bool GetInitialValue()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000152")]
	public class HolsterWidth : PlayerIntOption
	{
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1679A1C", Offset = "0x1679A1C", VA = "0x1679A1C")]
		public HolsterWidth()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1679AC0", Offset = "0x1679AC0", VA = "0x1679AC0", Slot = "5")]
		public override void LoadFromPrefs()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1679B54", Offset = "0x1679B54", VA = "0x1679B54", Slot = "6")]
		public override void ClearPref()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1679BFC", Offset = "0x1679BFC", VA = "0x1679BFC", Slot = "4")]
		protected override void SaveToPrefs()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1679C7C", Offset = "0x1679C7C", VA = "0x1679C7C", Slot = "8")]
		protected override int GetMaxValue()
		{
			return default(int);
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1679A48", Offset = "0x1679A48", VA = "0x1679A48")]
		protected int GetInitialValue()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000153")]
	public abstract class PlayerOption
	{
		[Token(Token = "0x6000C90")]
		protected abstract void SaveToPrefs();

		[Token(Token = "0x6000C91")]
		public abstract void LoadFromPrefs();

		[Token(Token = "0x6000C92")]
		public abstract void ClearPref();

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x15E7B88", Offset = "0x15E7B88", VA = "0x15E7B88")]
		protected PlayerOption()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public abstract class PlayerOption<T> : PlayerOption
	{
		[Token(Token = "0x20001E6")]
		public class PlayerOptionEventArgs : EventArgs
		{
			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T prevValue;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool forced;

			[Token(Token = "0x600105F")]
			public PlayerOptionEventArgs(T previous, T curr, bool forced = false)
			{
			}
		}

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x14000003")]
		public event EventHandler<PlayerOptionEventArgs> ValueChanged
		{
			[Token(Token = "0x6000C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7B4", Offset = "0x8CA7B4")]
			add
			{
			}
			[Token(Token = "0x6000C95")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA7C4", Offset = "0x8CA7C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C96")]
		public virtual void SetValue(T newValue, bool forceChanges = false)
		{
		}

		[Token(Token = "0x6000C97")]
		public static implicit operator T(PlayerOption<T> option)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C98")]
		protected PlayerOption()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public abstract class PlayerIntOption : PlayerOption<int>
	{
		[Token(Token = "0x6000C99")]
		protected abstract int GetMaxValue();

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x15E7920", Offset = "0x15E7920", VA = "0x15E7920", Slot = "7")]
		public override void SetValue(int newValue, bool forceChanges = false)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x15E79A8", Offset = "0x15E79A8", VA = "0x15E79A8")]
		public void IncreaseValue(bool wrap = false)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x15E7A80", Offset = "0x15E7A80", VA = "0x15E7A80")]
		public void DecreaseValue(bool wrap = false)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x15E7B3C", Offset = "0x15E7B3C", VA = "0x15E7B3C")]
		protected PlayerIntOption()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public abstract class PlayerBoolOption : PlayerOption<bool>
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x15E78D4", Offset = "0x15E78D4", VA = "0x15E78D4")]
		protected PlayerBoolOption()
		{
		}
	}
}
namespace TBM.Extensions
{
	[Token(Token = "0x2000157")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6000C9F")]
		public static T NextEnum<T>(this T src) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x6000CA0")]
		public static T PrevEnum<T>(this T src) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x6000CA1")]
		public static T RandomEnum<T>() where T : struct
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000158")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1679244", Offset = "0x1679244", VA = "0x1679244")]
		public static bool IsInLayerMask(this GameObject obj, int layerMask)
		{
			return default(bool);
		}
	}
}
namespace CodeStage.AntiCheat.ObscuredTypes
{
	[Serializable]
	[Token(Token = "0x2000159")]
	public struct ObscuredBool : IEquatable<ObscuredBool>
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte cryptoKey;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private byte currentCryptoKey;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private int hiddenValue;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool fakeValue;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[SerializeField]
		private bool fakeValueChanged;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x199C8A8", Offset = "0x199C8A8", VA = "0x199C8A8")]
		private ObscuredBool(int value)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x199C930", Offset = "0x199C930", VA = "0x199C930")]
		public static void SetNewCryptoKey(byte newKey)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x199C998", Offset = "0x199C998", VA = "0x199C998")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x199CC40", Offset = "0x199CC40", VA = "0x199CC40")]
		public static int Encrypt(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x199CBAC", Offset = "0x199CBAC", VA = "0x199CBAC")]
		public static int Encrypt(bool value, byte key)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x199CCA4", Offset = "0x199CCA4", VA = "0x199CCA4")]
		public static bool Decrypt(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x199CD08", Offset = "0x199CD08", VA = "0x199CD08")]
		public static bool Decrypt(int value, byte key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x199CD94", Offset = "0x199CD94", VA = "0x199CD94")]
		public int GetEncrypted()
		{
			return default(int);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x199CDB8", Offset = "0x199CDB8", VA = "0x199CDB8")]
		public void SetEncrypted(int encrypted)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x199CA64", Offset = "0x199CA64", VA = "0x199CA64")]
		private bool InternalDecrypt()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x199CE80", Offset = "0x199CE80", VA = "0x199CE80")]
		public static implicit operator ObscuredBool(bool value)
		{
			return default(ObscuredBool);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x199CF4C", Offset = "0x199CF4C", VA = "0x199CF4C")]
		public static implicit operator bool(ObscuredBool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x199CF78", Offset = "0x199CF78", VA = "0x199CF78", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x199CFFC", Offset = "0x199CFFC", VA = "0x199CFFC", Slot = "4")]
		public bool Equals(ObscuredBool obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x199D010", Offset = "0x199D010", VA = "0x199D010", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x199D040", Offset = "0x199D040", VA = "0x199D040", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public struct ObscuredByte : IEquatable<ObscuredByte>, IFormattable
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte cryptoKey;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte currentCryptoKey;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private byte hiddenValue;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private byte fakeValue;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private bool inited;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x199D0C0", Offset = "0x199D0C0", VA = "0x199D0C0")]
		private ObscuredByte(byte value)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x199D144", Offset = "0x199D144", VA = "0x199D144")]
		public static void SetNewCryptoKey(byte newKey)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x199D1AC", Offset = "0x199D1AC", VA = "0x199D1AC")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x199D460", Offset = "0x199D460", VA = "0x199D460")]
		public static byte EncryptDecrypt(byte value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x199D3E0", Offset = "0x199D3E0", VA = "0x199D3E0")]
		public static byte EncryptDecrypt(byte value, byte key)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x199D4C4", Offset = "0x199D4C4", VA = "0x199D4C4")]
		public byte GetEncrypted()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x199D4E8", Offset = "0x199D4E8", VA = "0x199D4E8")]
		public void SetEncrypted(byte encrypted)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x199D278", Offset = "0x199D278", VA = "0x199D278")]
		private byte InternalDecrypt()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x199D558", Offset = "0x199D558", VA = "0x199D558")]
		public static implicit operator ObscuredByte(byte value)
		{
			return default(ObscuredByte);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x199D600", Offset = "0x199D600", VA = "0x199D600")]
		public static implicit operator byte(ObscuredByte value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x199D624", Offset = "0x199D624", VA = "0x199D624")]
		public static ObscuredByte operator ++(ObscuredByte input)
		{
			return default(ObscuredByte);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x199D6D8", Offset = "0x199D6D8", VA = "0x199D6D8")]
		public static ObscuredByte operator --(ObscuredByte input)
		{
			return default(ObscuredByte);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x199D78C", Offset = "0x199D78C", VA = "0x199D78C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x199D810", Offset = "0x199D810", VA = "0x199D810", Slot = "4")]
		public bool Equals(ObscuredByte obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x199D824", Offset = "0x199D824", VA = "0x199D824", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x199D850", Offset = "0x199D850", VA = "0x199D850")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x199D884", Offset = "0x199D884", VA = "0x199D884", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x199D8B0", Offset = "0x199D8B0", VA = "0x199D8B0")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x199D8E4", Offset = "0x199D8E4", VA = "0x199D8E4", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015B")]
	public struct ObscuredChar : IEquatable<ObscuredChar>
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char cryptoKey;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private char currentCryptoKey;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private char hiddenValue;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private char fakeValue;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private bool inited;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x199D978", Offset = "0x199D978", VA = "0x199D978")]
		private ObscuredChar(char value)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x199DA00", Offset = "0x199DA00", VA = "0x199DA00")]
		public static void SetNewCryptoKey(char newKey)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x199DA68", Offset = "0x199DA68", VA = "0x199DA68")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x199DD20", Offset = "0x199DD20", VA = "0x199DD20")]
		public static char EncryptDecrypt(char value)
		{
			return default(char);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x199DCA0", Offset = "0x199DCA0", VA = "0x199DCA0")]
		public static char EncryptDecrypt(char value, char key)
		{
			return default(char);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x199DD84", Offset = "0x199DD84", VA = "0x199DD84")]
		public char GetEncrypted()
		{
			return default(char);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x199DDA8", Offset = "0x199DDA8", VA = "0x199DDA8")]
		public void SetEncrypted(char encrypted)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x199DB34", Offset = "0x199DB34", VA = "0x199DB34")]
		private char InternalDecrypt()
		{
			return default(char);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x199DE18", Offset = "0x199DE18", VA = "0x199DE18")]
		public static implicit operator ObscuredChar(char value)
		{
			return default(ObscuredChar);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x199DEC0", Offset = "0x199DEC0", VA = "0x199DEC0")]
		public static implicit operator char(ObscuredChar value)
		{
			return default(char);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x199DEE4", Offset = "0x199DEE4", VA = "0x199DEE4")]
		public static ObscuredChar operator ++(ObscuredChar input)
		{
			return default(ObscuredChar);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x199DF98", Offset = "0x199DF98", VA = "0x199DF98")]
		public static ObscuredChar operator --(ObscuredChar input)
		{
			return default(ObscuredChar);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x199E04C", Offset = "0x199E04C", VA = "0x199E04C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x199E0D0", Offset = "0x199E0D0", VA = "0x199E0D0", Slot = "4")]
		public bool Equals(ObscuredChar obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x199E0E0", Offset = "0x199E0E0", VA = "0x199E0E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x199E10C", Offset = "0x199E10C", VA = "0x199E10C")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x199E140", Offset = "0x199E140", VA = "0x199E140", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public struct ObscuredDecimal : IEquatable<ObscuredDecimal>, IFormattable
	{
		[StructLayout(2)]
		[Token(Token = "0x20001E7")]
		private struct DecimalLongBytesUnion
		{
			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public decimal d;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long l1;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long l2;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte b1;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte b2;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte b3;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte b4;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public byte b5;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public byte b6;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public byte b7;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public byte b8;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte b9;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public byte b10;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public byte b11;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			public byte b12;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public byte b13;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public byte b14;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public byte b15;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public byte b16;
		}

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long cryptoKey;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long currentCryptoKey;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private byte[] hiddenValue;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private decimal fakeValue;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool inited;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x199E9BC", Offset = "0x199E9BC", VA = "0x199E9BC")]
		private ObscuredDecimal(byte[] value)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x199EA50", Offset = "0x199EA50", VA = "0x199EA50")]
		public static void SetNewCryptoKey(long newKey)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x199EAB8", Offset = "0x199EAB8", VA = "0x199EAB8")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x199F00C", Offset = "0x199F00C", VA = "0x199F00C")]
		public static decimal Encrypt(decimal value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x199F088", Offset = "0x199F088", VA = "0x199F088")]
		public static decimal Encrypt(decimal value, long key)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x199F094", Offset = "0x199F094", VA = "0x199F094")]
		private static byte[] InternalEncrypt(decimal value)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x199EE5C", Offset = "0x199EE5C", VA = "0x199EE5C")]
		private static byte[] InternalEncrypt(decimal value, long key)
		{
			return null;
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x199F108", Offset = "0x199F108", VA = "0x199F108")]
		public static decimal Decrypt(decimal value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x199F184", Offset = "0x199F184", VA = "0x199F184")]
		public static decimal Decrypt(decimal value, long key)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x199F190", Offset = "0x199F190", VA = "0x199F190")]
		public decimal GetEncrypted()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x199F288", Offset = "0x199F288", VA = "0x199F288")]
		public void SetEncrypted(decimal encrypted)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x199EB94", Offset = "0x199EB94", VA = "0x199EB94")]
		private decimal InternalDecrypt()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x199F434", Offset = "0x199F434", VA = "0x199F434")]
		public static implicit operator ObscuredDecimal(decimal value)
		{
			return default(ObscuredDecimal);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x199F50C", Offset = "0x199F50C", VA = "0x199F50C")]
		public static implicit operator decimal(ObscuredDecimal value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x199F510", Offset = "0x199F510", VA = "0x199F510")]
		public static ObscuredDecimal operator ++(ObscuredDecimal input)
		{
			return default(ObscuredDecimal);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x199F640", Offset = "0x199F640", VA = "0x199F640")]
		public static ObscuredDecimal operator --(ObscuredDecimal input)
		{
			return default(ObscuredDecimal);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x199F770", Offset = "0x199F770", VA = "0x199F770", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x199F79C", Offset = "0x199F79C", VA = "0x199F79C")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x199F7D8", Offset = "0x199F7D8", VA = "0x199F7D8")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x199F814", Offset = "0x199F814", VA = "0x199F814", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x199F858", Offset = "0x199F858", VA = "0x199F858", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x199F928", Offset = "0x199F928", VA = "0x199F928", Slot = "4")]
		public bool Equals(ObscuredDecimal obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x199F980", Offset = "0x199F980", VA = "0x199F980", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public struct ObscuredDouble : IEquatable<ObscuredDouble>, IFormattable
	{
		[StructLayout(2)]
		[Token(Token = "0x20001E8")]
		private struct DoubleLongBytesUnion
		{
			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double d;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long l;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte b1;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte b2;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte b3;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte b4;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public byte b5;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public byte b6;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public byte b7;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public byte b8;
		}

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long cryptoKey;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long currentCryptoKey;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private byte[] hiddenValue;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double fakeValue;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x199FA00", Offset = "0x199FA00", VA = "0x199FA00")]
		private ObscuredDouble(byte[] value)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x199FA94", Offset = "0x199FA94", VA = "0x199FA94")]
		public static void SetNewCryptoKey(long newKey)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x199FAFC", Offset = "0x199FAFC", VA = "0x199FAFC")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x199FF10", Offset = "0x199FF10", VA = "0x199FF10")]
		public static long Encrypt(double value)
		{
			return default(long);
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x199FF88", Offset = "0x199FF88", VA = "0x199FF88")]
		public static long Encrypt(double value, long key)
		{
			return default(long);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x199FF94", Offset = "0x199FF94", VA = "0x199FF94")]
		private static byte[] InternalEncrypt(double value)
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x199FDE0", Offset = "0x199FDE0", VA = "0x199FDE0")]
		private static byte[] InternalEncrypt(double value, long key)
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x19A0000", Offset = "0x19A0000", VA = "0x19A0000")]
		public static double Decrypt(long value)
		{
			return default(double);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x19A0070", Offset = "0x19A0070", VA = "0x19A0070")]
		public static double Decrypt(long value, long key)
		{
			return default(double);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x19A007C", Offset = "0x19A007C", VA = "0x19A007C")]
		public long GetEncrypted()
		{
			return default(long);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x19A0130", Offset = "0x19A0130", VA = "0x19A0130")]
		public void SetEncrypted(long encrypted)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x199FBD8", Offset = "0x199FBD8", VA = "0x199FBD8")]
		private double InternalDecrypt()
		{
			return default(double);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x19A025C", Offset = "0x19A025C", VA = "0x19A025C")]
		public static implicit operator ObscuredDouble(double value)
		{
			return default(ObscuredDouble);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x19A0318", Offset = "0x19A0318", VA = "0x19A0318")]
		public static implicit operator double(ObscuredDouble value)
		{
			return default(double);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x19A031C", Offset = "0x19A031C", VA = "0x19A031C")]
		public static ObscuredDouble operator ++(ObscuredDouble input)
		{
			return default(ObscuredDouble);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x19A03F0", Offset = "0x19A03F0", VA = "0x19A03F0")]
		public static ObscuredDouble operator --(ObscuredDouble input)
		{
			return default(ObscuredDouble);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x19A04C4", Offset = "0x19A04C4", VA = "0x19A04C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x19A04F0", Offset = "0x19A04F0", VA = "0x19A04F0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x19A0524", Offset = "0x19A0524", VA = "0x19A0524")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x19A0558", Offset = "0x19A0558", VA = "0x19A0558", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x19A059C", Offset = "0x19A059C", VA = "0x19A059C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x19A06BC", Offset = "0x19A06BC", VA = "0x19A06BC", Slot = "4")]
		public bool Equals(ObscuredDouble obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x19A079C", Offset = "0x19A079C", VA = "0x19A079C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public struct ObscuredFloat : IEquatable<ObscuredFloat>, IFormattable
	{
		[StructLayout(2)]
		[Token(Token = "0x20001E9")]
		private struct FloatIntBytesUnion
		{
			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float f;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte b1;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte b2;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte b3;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte b4;
		}

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int currentCryptoKey;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private byte[] hiddenValue;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float fakeValue;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x19A081C", Offset = "0x19A081C", VA = "0x19A081C")]
		private ObscuredFloat(byte[] value)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x19A08B0", Offset = "0x19A08B0", VA = "0x19A08B0")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x19A0918", Offset = "0x19A0918", VA = "0x19A0918")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x19A0CA8", Offset = "0x19A0CA8", VA = "0x19A0CA8")]
		public static int Encrypt(float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x19A0D20", Offset = "0x19A0D20", VA = "0x19A0D20")]
		public static int Encrypt(float value, int key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x19A0D2C", Offset = "0x19A0D2C", VA = "0x19A0D2C")]
		private static byte[] InternalEncrypt(float value)
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x19A0BB8", Offset = "0x19A0BB8", VA = "0x19A0BB8")]
		private static byte[] InternalEncrypt(float value, int key)
		{
			return null;
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x19A0D98", Offset = "0x19A0D98", VA = "0x19A0D98")]
		public static float Decrypt(int value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x19A0E08", Offset = "0x19A0E08", VA = "0x19A0E08")]
		public static float Decrypt(int value, int key)
		{
			return default(float);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x19A0E14", Offset = "0x19A0E14", VA = "0x19A0E14")]
		public int GetEncrypted()
		{
			return default(int);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x19A0E88", Offset = "0x19A0E88", VA = "0x19A0E88")]
		public void SetEncrypted(int encrypted)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x19A09F4", Offset = "0x19A09F4", VA = "0x19A09F4")]
		private float InternalDecrypt()
		{
			return default(float);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x19A0F74", Offset = "0x19A0F74", VA = "0x19A0F74")]
		public static implicit operator ObscuredFloat(float value)
		{
			return default(ObscuredFloat);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x19A1038", Offset = "0x19A1038", VA = "0x19A1038")]
		public static implicit operator float(ObscuredFloat value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x19A103C", Offset = "0x19A103C", VA = "0x19A103C")]
		public static ObscuredFloat operator ++(ObscuredFloat input)
		{
			return default(ObscuredFloat);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x19A1114", Offset = "0x19A1114", VA = "0x19A1114")]
		public static ObscuredFloat operator --(ObscuredFloat input)
		{
			return default(ObscuredFloat);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x19A11EC", Offset = "0x19A11EC", VA = "0x19A11EC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x19A12D0", Offset = "0x19A12D0", VA = "0x19A12D0", Slot = "4")]
		public bool Equals(ObscuredFloat obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x19A1348", Offset = "0x19A1348", VA = "0x19A1348", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x19A1374", Offset = "0x19A1374", VA = "0x19A1374", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x19A13A0", Offset = "0x19A13A0", VA = "0x19A13A0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x19A13D4", Offset = "0x19A13D4", VA = "0x19A13D4")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x19A1408", Offset = "0x19A1408", VA = "0x19A1408", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public struct ObscuredInt : IEquatable<ObscuredInt>, IFormattable
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int currentCryptoKey;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private int hiddenValue;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int fakeValue;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x19A1B00", Offset = "0x19A1B00", VA = "0x19A1B00")]
		private ObscuredInt(int value)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x19A1B84", Offset = "0x19A1B84", VA = "0x19A1B84")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x19A1BEC", Offset = "0x19A1BEC", VA = "0x19A1BEC")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x19A1E8C", Offset = "0x19A1E8C", VA = "0x19A1E8C")]
		public static int Encrypt(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x19A1E10", Offset = "0x19A1E10", VA = "0x19A1E10")]
		public static int Encrypt(int value, int key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x19A1EF0", Offset = "0x19A1EF0", VA = "0x19A1EF0")]
		public static int Decrypt(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x19A1F54", Offset = "0x19A1F54", VA = "0x19A1F54")]
		public static int Decrypt(int value, int key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x19A1FD0", Offset = "0x19A1FD0", VA = "0x19A1FD0")]
		public int GetEncrypted()
		{
			return default(int);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x19A1FF4", Offset = "0x19A1FF4", VA = "0x19A1FF4")]
		public void SetEncrypted(int encrypted)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x19A1CB8", Offset = "0x19A1CB8", VA = "0x19A1CB8")]
		private int InternalDecrypt()
		{
			return default(int);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x19A2064", Offset = "0x19A2064", VA = "0x19A2064")]
		public static implicit operator ObscuredInt(int value)
		{
			return default(ObscuredInt);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x19A210C", Offset = "0x19A210C", VA = "0x19A210C")]
		public static implicit operator int(ObscuredInt value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x19A2130", Offset = "0x19A2130", VA = "0x19A2130")]
		public static ObscuredInt operator ++(ObscuredInt input)
		{
			return default(ObscuredInt);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x19A21E4", Offset = "0x19A21E4", VA = "0x19A21E4")]
		public static ObscuredInt operator --(ObscuredInt input)
		{
			return default(ObscuredInt);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x19A2298", Offset = "0x19A2298", VA = "0x19A2298", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x19A231C", Offset = "0x19A231C", VA = "0x19A231C", Slot = "4")]
		public bool Equals(ObscuredInt obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x19A2330", Offset = "0x19A2330", VA = "0x19A2330", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x19A235C", Offset = "0x19A235C", VA = "0x19A235C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x19A2388", Offset = "0x19A2388", VA = "0x19A2388")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x19A23BC", Offset = "0x19A23BC", VA = "0x19A23BC")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x19A23F0", Offset = "0x19A23F0", VA = "0x19A23F0", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public struct ObscuredLong : IEquatable<ObscuredLong>, IFormattable
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long cryptoKey;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long currentCryptoKey;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private long hiddenValue;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long fakeValue;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x19A2C20", Offset = "0x19A2C20", VA = "0x19A2C20")]
		private ObscuredLong(long value)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x19A2CA4", Offset = "0x19A2CA4", VA = "0x19A2CA4")]
		public static void SetNewCryptoKey(long newKey)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x19A2D0C", Offset = "0x19A2D0C", VA = "0x19A2D0C")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x19A2FAC", Offset = "0x19A2FAC", VA = "0x19A2FAC")]
		public static long Encrypt(long value)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x19A3010", Offset = "0x19A3010", VA = "0x19A3010")]
		public static long Decrypt(long value)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x19A2F30", Offset = "0x19A2F30", VA = "0x19A2F30")]
		public static long Encrypt(long value, long key)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x19A3074", Offset = "0x19A3074", VA = "0x19A3074")]
		public static long Decrypt(long value, long key)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x19A30F0", Offset = "0x19A30F0", VA = "0x19A30F0")]
		public long GetEncrypted()
		{
			return default(long);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x19A3114", Offset = "0x19A3114", VA = "0x19A3114")]
		public void SetEncrypted(long encrypted)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x19A2DD8", Offset = "0x19A2DD8", VA = "0x19A2DD8")]
		private long InternalDecrypt()
		{
			return default(long);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x19A3184", Offset = "0x19A3184", VA = "0x19A3184")]
		public static implicit operator ObscuredLong(long value)
		{
			return default(ObscuredLong);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x19A3240", Offset = "0x19A3240", VA = "0x19A3240")]
		public static implicit operator long(ObscuredLong value)
		{
			return default(long);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x19A3244", Offset = "0x19A3244", VA = "0x19A3244")]
		public static ObscuredLong operator ++(ObscuredLong input)
		{
			return default(ObscuredLong);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x19A3300", Offset = "0x19A3300", VA = "0x19A3300")]
		public static ObscuredLong operator --(ObscuredLong input)
		{
			return default(ObscuredLong);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x19A33BC", Offset = "0x19A33BC", VA = "0x19A33BC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x19A3440", Offset = "0x19A3440", VA = "0x19A3440", Slot = "4")]
		public bool Equals(ObscuredLong obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x19A3454", Offset = "0x19A3454", VA = "0x19A3454", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x19A3480", Offset = "0x19A3480", VA = "0x19A3480", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x19A34AC", Offset = "0x19A34AC", VA = "0x19A34AC")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x19A34E0", Offset = "0x19A34E0", VA = "0x19A34E0")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x19A3514", Offset = "0x19A3514", VA = "0x19A3514", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Token(Token = "0x2000161")]
	public static class ObscuredPrefs
	{
		[Token(Token = "0x20001EA")]
		public enum DeviceLockLevel : byte
		{
			[Token(Token = "0x4000B81")]
			None,
			[Token(Token = "0x4000B82")]
			Soft,
			[Token(Token = "0x4000B83")]
			Strict
		}

		[Token(Token = "0x40008E3")]
		private const string RAW_NOT_FOUND = "{not_found}";

		[Token(Token = "0x40008E4")]
		private const string DATA_SEPARATOR = "|";

		[Token(Token = "0x40008E5")]
		private const char RAW_SEPARATOR = ':';

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string encryptionKey;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool savesAlterationReported;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool foreignSavesReported;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string deviceHash;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action onAlterationDetected;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool preservePlayerPrefs;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action onPossibleForeignSavesDetected;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static DeviceLockLevel lockToDevice;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public static bool readForeignSaves;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public static bool emergencyMode;

		[Token(Token = "0x170001FD")]
		private static string DeviceHash
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x19A35AC", Offset = "0x19A35AC", VA = "0x19A35AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x19A3704", Offset = "0x19A3704", VA = "0x19A3704")]
		public static void ForceLockToDeviceInit()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x19A37F8", Offset = "0x19A37F8", VA = "0x19A37F8")]
		public static void ForceDeviceID(string newDeviceID)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x19A3864", Offset = "0x19A3864", VA = "0x19A3864")]
		public static void SetNewCryptoKey(string newKey)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x19A38D0", Offset = "0x19A38D0", VA = "0x19A38D0")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x19A39E0", Offset = "0x19A39E0", VA = "0x19A39E0")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x19A3A44", Offset = "0x19A3A44", VA = "0x19A3A44")]
		public static int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x19A3E94", Offset = "0x19A3E94", VA = "0x19A3E94")]
		public static void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x19A3F04", Offset = "0x19A3F04", VA = "0x19A3F04")]
		public static string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x19A3F7C", Offset = "0x19A3F7C", VA = "0x19A3F7C")]
		public static string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x19A40B0", Offset = "0x19A40B0", VA = "0x19A40B0")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x19A4138", Offset = "0x19A4138", VA = "0x19A4138")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x19A419C", Offset = "0x19A419C", VA = "0x19A419C")]
		public static float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x19A42FC", Offset = "0x19A42FC", VA = "0x19A42FC")]
		public static void SetDouble(string key, double value)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x19A4384", Offset = "0x19A4384", VA = "0x19A4384")]
		public static double GetDouble(string key)
		{
			return default(double);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x19A43E8", Offset = "0x19A43E8", VA = "0x19A43E8")]
		public static double GetDouble(string key, double defaultValue)
		{
			return default(double);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x19A44C0", Offset = "0x19A44C0", VA = "0x19A44C0")]
		public static void SetLong(string key, long value)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x19A4548", Offset = "0x19A4548", VA = "0x19A4548")]
		public static long GetLong(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x19A45AC", Offset = "0x19A45AC", VA = "0x19A45AC")]
		public static long GetLong(string key, long defaultValue)
		{
			return default(long);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x19A464C", Offset = "0x19A464C", VA = "0x19A464C")]
		public static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x19A46C0", Offset = "0x19A46C0", VA = "0x19A46C0")]
		public static bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x19A4724", Offset = "0x19A4724", VA = "0x19A4724")]
		public static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x19A47D0", Offset = "0x19A47D0", VA = "0x19A47D0")]
		public static void SetByteArray(string key, byte[] value)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x19A4878", Offset = "0x19A4878", VA = "0x19A4878")]
		public static byte[] GetByteArray(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x19A48E0", Offset = "0x19A48E0", VA = "0x19A48E0")]
		public static byte[] GetByteArray(string key, byte defaultValue, int defaultLength)
		{
			return null;
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x19A4A14", Offset = "0x19A4A14", VA = "0x19A4A14")]
		public static void SetVector2(string key, Vector2 value)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x19A4ADC", Offset = "0x19A4ADC", VA = "0x19A4ADC")]
		public static Vector2 GetVector2(string key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x19A4B5C", Offset = "0x19A4B5C", VA = "0x19A4B5C")]
		public static Vector2 GetVector2(string key, Vector2 defaultValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x19A4CD8", Offset = "0x19A4CD8", VA = "0x19A4CD8")]
		public static void SetVector3(string key, Vector3 value)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x19A4F18", Offset = "0x19A4F18", VA = "0x19A4F18")]
		public static Vector3 GetVector3(string key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x19A4FA8", Offset = "0x19A4FA8", VA = "0x19A4FA8")]
		public static Vector3 GetVector3(string key, Vector3 defaultValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x19A5158", Offset = "0x19A5158", VA = "0x19A5158")]
		public static void SetQuaternion(string key, Quaternion value)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x19A541C", Offset = "0x19A541C", VA = "0x19A541C")]
		public static Quaternion GetQuaternion(string key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x19A54B4", Offset = "0x19A54B4", VA = "0x19A54B4")]
		public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x19A56B0", Offset = "0x19A56B0", VA = "0x19A56B0")]
		public static void SetColor(string key, Color value)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x19A5974", Offset = "0x19A5974", VA = "0x19A5974")]
		public static Color GetColor(string key)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x19A5A0C", Offset = "0x19A5A0C", VA = "0x19A5A0C")]
		public static Color GetColor(string key, Color defaultValue)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x19A5C08", Offset = "0x19A5C08", VA = "0x19A5C08")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x19A5C90", Offset = "0x19A5C90", VA = "0x19A5C90")]
		public static void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x19A5D04", Offset = "0x19A5D04", VA = "0x19A5D04")]
		public static void DeleteAll()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x19A5D0C", Offset = "0x19A5D0C", VA = "0x19A5D0C")]
		public static void Save()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x19A3958", Offset = "0x19A3958", VA = "0x19A3958")]
		private static void SetStringValue(string key, string value)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x19A3CAC", Offset = "0x19A3CAC", VA = "0x19A3CAC")]
		public static string GetData(string key, string defaultValueRaw)
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x19A3BA4", Offset = "0x19A3BA4", VA = "0x19A3BA4")]
		public static string EncryptKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x19A650C", Offset = "0x19A650C", VA = "0x19A650C")]
		public static string DecryptKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x19A5D14", Offset = "0x19A5D14", VA = "0x19A5D14")]
		public static string EncryptValue(string value, string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x19A602C", Offset = "0x19A602C", VA = "0x19A602C")]
		public static string DecryptValue(string value, string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x19A6A90", Offset = "0x19A6A90", VA = "0x19A6A90")]
		private static string CalculateChecksum(string input)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x19A6BE0", Offset = "0x19A6BE0", VA = "0x19A6BE0")]
		private static void SavesTampered()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x19A6CBC", Offset = "0x19A6CBC", VA = "0x19A6CBC")]
		private static void PossibleForeignSavesDetected()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x19A3674", Offset = "0x19A3674", VA = "0x19A3674")]
		private static string GetDeviceID()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x19A661C", Offset = "0x19A661C", VA = "0x19A661C")]
		private static string EncryptKeyDeprecated(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x19A677C", Offset = "0x19A677C", VA = "0x19A677C")]
		private static string DecryptValueDeprecated(string value)
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x19A6E10", Offset = "0x19A6E10", VA = "0x19A6E10")]
		private static string GetDeviceIDDeprecated()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000162")]
	public struct ObscuredQuaternion
	{
		[Token(Token = "0x20001EB")]
		public struct RawEncryptedQuaternion
		{
			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int x;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int y;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int z;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int w;

			[Token(Token = "0x6001060")]
			[Address(RVA = "0x199084C", Offset = "0x199084C", VA = "0x199084C")]
			private RawEncryptedQuaternion(float x, float y, float z, float w)
			{
			}

			[Token(Token = "0x6001061")]
			[Address(RVA = "0x1990868", Offset = "0x1990868", VA = "0x1990868")]
			public static explicit operator Quaternion(RawEncryptedQuaternion value)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x19908B0", Offset = "0x19908B0", VA = "0x19908B0")]
			public static explicit operator RawEncryptedQuaternion(Quaternion value)
			{
				return default(RawEncryptedQuaternion);
			}
		}

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Quaternion initialFakeValue;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCryptoKey;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RawEncryptedQuaternion hiddenValue;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion fakeValue;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool inited;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x19A7D48", Offset = "0x19A7D48", VA = "0x19A7D48")]
		private ObscuredQuaternion(RawEncryptedQuaternion value)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x19A7DE4", Offset = "0x19A7DE4", VA = "0x19A7DE4")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x19A7E4C", Offset = "0x19A7E4C", VA = "0x19A7E4C")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x19A821C", Offset = "0x19A821C", VA = "0x19A821C")]
		public static RawEncryptedQuaternion Encrypt(Quaternion value)
		{
			return default(RawEncryptedQuaternion);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x19A813C", Offset = "0x19A813C", VA = "0x19A813C")]
		public static RawEncryptedQuaternion Encrypt(Quaternion value, int key)
		{
			return default(RawEncryptedQuaternion);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x19A82A8", Offset = "0x19A82A8", VA = "0x19A82A8")]
		public static Quaternion Decrypt(RawEncryptedQuaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x19A831C", Offset = "0x19A831C", VA = "0x19A831C")]
		public static Quaternion Decrypt(RawEncryptedQuaternion value, int key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x19A83EC", Offset = "0x19A83EC", VA = "0x19A83EC")]
		public RawEncryptedQuaternion GetEncrypted()
		{
			return default(RawEncryptedQuaternion);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x19A8414", Offset = "0x19A8414", VA = "0x19A8414")]
		public void SetEncrypted(RawEncryptedQuaternion encrypted)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x19A7F40", Offset = "0x19A7F40", VA = "0x19A7F40")]
		private Quaternion InternalDecrypt()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x19A8490", Offset = "0x19A8490", VA = "0x19A8490")]
		private bool CompareQuaternionsWithTolerance(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x19A85EC", Offset = "0x19A85EC", VA = "0x19A85EC")]
		public static implicit operator ObscuredQuaternion(Quaternion value)
		{
			return default(ObscuredQuaternion);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x19A86EC", Offset = "0x19A86EC", VA = "0x19A86EC")]
		public static implicit operator Quaternion(ObscuredQuaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x19A86F0", Offset = "0x19A86F0", VA = "0x19A86F0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x19A8720", Offset = "0x19A8720", VA = "0x19A8720", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x19A8750", Offset = "0x19A8750", VA = "0x19A8750")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x19A8790", Offset = "0x19A8790", VA = "0x19A8790")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA804", Offset = "0x8CA804")]
		public static Quaternion EncryptDeprecated(Quaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x19A881C", Offset = "0x19A881C", VA = "0x19A881C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA840", Offset = "0x8CA840")]
		public static Quaternion EncryptDeprecated(Quaternion value, int key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x19A8904", Offset = "0x19A8904", VA = "0x19A8904")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA87C", Offset = "0x8CA87C")]
		public static Quaternion DecryptDeprecated(Quaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x19A8990", Offset = "0x19A8990", VA = "0x19A8990")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA8B8", Offset = "0x8CA8B8")]
		public static Quaternion DecryptDeprecated(Quaternion value, int key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x19A8A78", Offset = "0x19A8A78", VA = "0x19A8A78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA8F4", Offset = "0x8CA8F4")]
		public Quaternion GetEncryptedDeprecated()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x19A8AA4", Offset = "0x19A8AA4", VA = "0x19A8AA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA930", Offset = "0x8CA930")]
		public void SetEncryptedDeprecated(Quaternion encrypted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public struct ObscuredSByte : IEquatable<ObscuredSByte>, IFormattable
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static sbyte cryptoKey;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private sbyte currentCryptoKey;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private sbyte hiddenValue;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private sbyte fakeValue;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private bool inited;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x19A8BB4", Offset = "0x19A8BB4", VA = "0x19A8BB4")]
		private ObscuredSByte(sbyte value)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x19A8C38", Offset = "0x19A8C38", VA = "0x19A8C38")]
		public static void SetNewCryptoKey(sbyte newKey)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x19A8CA0", Offset = "0x19A8CA0", VA = "0x19A8CA0")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x19A8F54", Offset = "0x19A8F54", VA = "0x19A8F54")]
		public static sbyte EncryptDecrypt(sbyte value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x19A8ED4", Offset = "0x19A8ED4", VA = "0x19A8ED4")]
		public static sbyte EncryptDecrypt(sbyte value, sbyte key)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x19A8FB8", Offset = "0x19A8FB8", VA = "0x19A8FB8")]
		public sbyte GetEncrypted()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x19A8FDC", Offset = "0x19A8FDC", VA = "0x19A8FDC")]
		public void SetEncrypted(sbyte encrypted)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x19A8D6C", Offset = "0x19A8D6C", VA = "0x19A8D6C")]
		private sbyte InternalDecrypt()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x19A904C", Offset = "0x19A904C", VA = "0x19A904C")]
		public static implicit operator ObscuredSByte(sbyte value)
		{
			return default(ObscuredSByte);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x19A90F4", Offset = "0x19A90F4", VA = "0x19A90F4")]
		public static implicit operator sbyte(ObscuredSByte value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x19A9118", Offset = "0x19A9118", VA = "0x19A9118")]
		public static ObscuredSByte operator ++(ObscuredSByte input)
		{
			return default(ObscuredSByte);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x19A91CC", Offset = "0x19A91CC", VA = "0x19A91CC")]
		public static ObscuredSByte operator --(ObscuredSByte input)
		{
			return default(ObscuredSByte);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x19A9280", Offset = "0x19A9280", VA = "0x19A9280", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x19A9304", Offset = "0x19A9304", VA = "0x19A9304", Slot = "4")]
		public bool Equals(ObscuredSByte obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x19A9318", Offset = "0x19A9318", VA = "0x19A9318", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x19A9344", Offset = "0x19A9344", VA = "0x19A9344")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x19A9378", Offset = "0x19A9378", VA = "0x19A9378", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x19A93A4", Offset = "0x19A93A4", VA = "0x19A93A4")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x19A93D8", Offset = "0x19A93D8", VA = "0x19A93D8", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public struct ObscuredShort : IEquatable<ObscuredShort>, IFormattable
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static short cryptoKey;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private short currentCryptoKey;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private short hiddenValue;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private short fakeValue;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private bool inited;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x19A946C", Offset = "0x19A946C", VA = "0x19A946C")]
		private ObscuredShort(short value)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x19A94F4", Offset = "0x19A94F4", VA = "0x19A94F4")]
		public static void SetNewCryptoKey(short newKey)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x19A955C", Offset = "0x19A955C", VA = "0x19A955C")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x19A9814", Offset = "0x19A9814", VA = "0x19A9814")]
		public static short EncryptDecrypt(short value)
		{
			return default(short);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x19A9794", Offset = "0x19A9794", VA = "0x19A9794")]
		public static short EncryptDecrypt(short value, short key)
		{
			return default(short);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x19A9878", Offset = "0x19A9878", VA = "0x19A9878")]
		public short GetEncrypted()
		{
			return default(short);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x19A989C", Offset = "0x19A989C", VA = "0x19A989C")]
		public void SetEncrypted(short encrypted)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x19A9628", Offset = "0x19A9628", VA = "0x19A9628")]
		private short InternalDecrypt()
		{
			return default(short);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x19A990C", Offset = "0x19A990C", VA = "0x19A990C")]
		public static implicit operator ObscuredShort(short value)
		{
			return default(ObscuredShort);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x19A99B4", Offset = "0x19A99B4", VA = "0x19A99B4")]
		public static implicit operator short(ObscuredShort value)
		{
			return default(short);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x19A99D8", Offset = "0x19A99D8", VA = "0x19A99D8")]
		public static ObscuredShort operator ++(ObscuredShort input)
		{
			return default(ObscuredShort);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x19A9A7C", Offset = "0x19A9A7C", VA = "0x19A9A7C")]
		public static ObscuredShort operator --(ObscuredShort input)
		{
			return default(ObscuredShort);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x19A9B20", Offset = "0x19A9B20", VA = "0x19A9B20", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x19A9BA4", Offset = "0x19A9BA4", VA = "0x19A9BA4", Slot = "4")]
		public bool Equals(ObscuredShort obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x19A9BB4", Offset = "0x19A9BB4", VA = "0x19A9BB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x19A9BE0", Offset = "0x19A9BE0", VA = "0x19A9BE0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x19A9C14", Offset = "0x19A9C14", VA = "0x19A9C14", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x19A9C40", Offset = "0x19A9C40", VA = "0x19A9C40")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x19A9C74", Offset = "0x19A9C74", VA = "0x19A9C74", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public sealed class ObscuredString
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string cryptoKey;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string currentCryptoKey;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private byte[] hiddenValue;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string fakeValue;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x19A9D08", Offset = "0x19A9D08", VA = "0x19A9D08")]
		private ObscuredString(byte[] value)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x19A9DBC", Offset = "0x19A9DBC", VA = "0x19A9DBC")]
		public static void SetNewCryptoKey(string newKey)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x19A9E28", Offset = "0x19A9E28", VA = "0x19A9E28")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x19A6D98", Offset = "0x19A6D98", VA = "0x19A6D98")]
		public static string EncryptDecrypt(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x19A6918", Offset = "0x19A6918", VA = "0x19A6918")]
		public static string EncryptDecrypt(string value, string key)
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x19AA180", Offset = "0x19AA180", VA = "0x19AA180")]
		public string GetEncrypted()
		{
			return null;
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x19AA27C", Offset = "0x19AA27C", VA = "0x19AA27C")]
		public void SetEncrypted(string encrypted)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x19AA110", Offset = "0x19AA110", VA = "0x19AA110")]
		private static byte[] InternalEncrypt(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x19A9F14", Offset = "0x19A9F14", VA = "0x19A9F14")]
		private string InternalDecrypt()
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x19AA3D0", Offset = "0x19AA3D0", VA = "0x19AA3D0")]
		public static implicit operator ObscuredString(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x19AA4A4", Offset = "0x19AA4A4", VA = "0x19AA4A4")]
		public static implicit operator string(ObscuredString value)
		{
			return null;
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x19AA5D8", Offset = "0x19AA5D8", VA = "0x19AA5D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x19AA538", Offset = "0x19AA538", VA = "0x19AA538")]
		public static bool operator ==(ObscuredString a, ObscuredString b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x19AA660", Offset = "0x19AA660", VA = "0x19AA660")]
		public static bool operator !=(ObscuredString a, ObscuredString b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x19AA6DC", Offset = "0x19AA6DC", VA = "0x19AA6DC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x19AA7A0", Offset = "0x19AA7A0", VA = "0x19AA7A0")]
		public bool Equals(ObscuredString value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x19AA84C", Offset = "0x19AA84C", VA = "0x19AA84C")]
		public bool Equals(ObscuredString value, StringComparison comparisonType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x19AA8F4", Offset = "0x19AA8F4", VA = "0x19AA8F4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x19AA344", Offset = "0x19AA344", VA = "0x19AA344")]
		private static byte[] GetBytes(string str)
		{
			return null;
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x19AA1EC", Offset = "0x19AA1EC", VA = "0x19AA1EC")]
		private static string GetString(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x19AA5DC", Offset = "0x19AA5DC", VA = "0x19AA5DC")]
		private static bool ArraysEquals(byte[] a1, byte[] a2)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	public struct ObscuredULong : IEquatable<ObscuredULong>, IFormattable
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ulong cryptoKey;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong currentCryptoKey;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong hiddenValue;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong fakeValue;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x15D6978", Offset = "0x15D6978", VA = "0x15D6978")]
		private ObscuredULong(ulong value)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x15D69FC", Offset = "0x15D69FC", VA = "0x15D69FC")]
		public static void SetNewCryptoKey(ulong newKey)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x15D6A64", Offset = "0x15D6A64", VA = "0x15D6A64")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x15D6D08", Offset = "0x15D6D08", VA = "0x15D6D08")]
		public static ulong Encrypt(ulong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x15D6D6C", Offset = "0x15D6D6C", VA = "0x15D6D6C")]
		public static ulong Decrypt(ulong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x15D6C8C", Offset = "0x15D6C8C", VA = "0x15D6C8C")]
		public static ulong Encrypt(ulong value, ulong key)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x15D6DD0", Offset = "0x15D6DD0", VA = "0x15D6DD0")]
		public static ulong Decrypt(ulong value, ulong key)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x15D6E4C", Offset = "0x15D6E4C", VA = "0x15D6E4C")]
		public ulong GetEncrypted()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x15D6E70", Offset = "0x15D6E70", VA = "0x15D6E70")]
		public void SetEncrypted(ulong encrypted)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x15D6B30", Offset = "0x15D6B30", VA = "0x15D6B30")]
		private ulong InternalDecrypt()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x15D6EE0", Offset = "0x15D6EE0", VA = "0x15D6EE0")]
		public static implicit operator ObscuredULong(ulong value)
		{
			return default(ObscuredULong);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x15D6F9C", Offset = "0x15D6F9C", VA = "0x15D6F9C")]
		public static implicit operator ulong(ObscuredULong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x15D6FA0", Offset = "0x15D6FA0", VA = "0x15D6FA0")]
		public static ObscuredULong operator ++(ObscuredULong input)
		{
			return default(ObscuredULong);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x15D705C", Offset = "0x15D705C", VA = "0x15D705C")]
		public static ObscuredULong operator --(ObscuredULong input)
		{
			return default(ObscuredULong);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x15D7118", Offset = "0x15D7118", VA = "0x15D7118", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x15D719C", Offset = "0x15D719C", VA = "0x15D719C", Slot = "4")]
		public bool Equals(ObscuredULong obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x15D71B0", Offset = "0x15D71B0", VA = "0x15D71B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x15D71DC", Offset = "0x15D71DC", VA = "0x15D71DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x15D7208", Offset = "0x15D7208", VA = "0x15D7208")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x15D723C", Offset = "0x15D723C", VA = "0x15D723C")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x15D7270", Offset = "0x15D7270", VA = "0x15D7270", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000167")]
	public struct ObscuredUInt : IEquatable<ObscuredUInt>, IFormattable
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint cryptoKey;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint currentCryptoKey;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private uint hiddenValue;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private uint fakeValue;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inited;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x19AADB0", Offset = "0x19AADB0", VA = "0x19AADB0")]
		private ObscuredUInt(uint value)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x19AAE34", Offset = "0x19AAE34", VA = "0x19AAE34")]
		public static void SetNewCryptoKey(uint newKey)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x19AAE9C", Offset = "0x19AAE9C", VA = "0x19AAE9C")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x19AB13C", Offset = "0x19AB13C", VA = "0x19AB13C")]
		public static uint Encrypt(uint value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x19AB1A0", Offset = "0x19AB1A0", VA = "0x19AB1A0")]
		public static uint Decrypt(uint value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x19AB0C0", Offset = "0x19AB0C0", VA = "0x19AB0C0")]
		public static uint Encrypt(uint value, uint key)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x19AB204", Offset = "0x19AB204", VA = "0x19AB204")]
		public static uint Decrypt(uint value, uint key)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x19AB280", Offset = "0x19AB280", VA = "0x19AB280")]
		public uint GetEncrypted()
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x19AB2A4", Offset = "0x19AB2A4", VA = "0x19AB2A4")]
		public void SetEncrypted(uint encrypted)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x19AAF68", Offset = "0x19AAF68", VA = "0x19AAF68")]
		private uint InternalDecrypt()
		{
			return default(uint);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x19AB314", Offset = "0x19AB314", VA = "0x19AB314")]
		public static implicit operator ObscuredUInt(uint value)
		{
			return default(ObscuredUInt);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x19AB3BC", Offset = "0x19AB3BC", VA = "0x19AB3BC")]
		public static implicit operator uint(ObscuredUInt value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x19AB3E0", Offset = "0x19AB3E0", VA = "0x19AB3E0")]
		public static ObscuredUInt operator ++(ObscuredUInt input)
		{
			return default(ObscuredUInt);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x19AB494", Offset = "0x19AB494", VA = "0x19AB494")]
		public static ObscuredUInt operator --(ObscuredUInt input)
		{
			return default(ObscuredUInt);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x19AB548", Offset = "0x19AB548", VA = "0x19AB548", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x19AB5CC", Offset = "0x19AB5CC", VA = "0x19AB5CC", Slot = "4")]
		public bool Equals(ObscuredUInt obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x19AB5E0", Offset = "0x19AB5E0", VA = "0x19AB5E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x19AB60C", Offset = "0x19AB60C", VA = "0x19AB60C")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x19AB640", Offset = "0x19AB640", VA = "0x19AB640", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x19AB66C", Offset = "0x19AB66C", VA = "0x19AB66C")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x19AB6A0", Offset = "0x19AB6A0", VA = "0x19AB6A0", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	public struct ObscuredUShort : IEquatable<ObscuredUShort>, IFormattable
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ushort cryptoKey;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort currentCryptoKey;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private ushort hiddenValue;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private ushort fakeValue;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private bool inited;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x15D7308", Offset = "0x15D7308", VA = "0x15D7308")]
		private ObscuredUShort(ushort value)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x15D7390", Offset = "0x15D7390", VA = "0x15D7390")]
		public static void SetNewCryptoKey(ushort newKey)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x15D73F8", Offset = "0x15D73F8", VA = "0x15D73F8")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x15D76B4", Offset = "0x15D76B4", VA = "0x15D76B4")]
		public static ushort EncryptDecrypt(ushort value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x15D7634", Offset = "0x15D7634", VA = "0x15D7634")]
		public static ushort EncryptDecrypt(ushort value, ushort key)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x15D7718", Offset = "0x15D7718", VA = "0x15D7718")]
		public ushort GetEncrypted()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x15D773C", Offset = "0x15D773C", VA = "0x15D773C")]
		public void SetEncrypted(ushort encrypted)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x15D74C4", Offset = "0x15D74C4", VA = "0x15D74C4")]
		private ushort InternalDecrypt()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x15D77AC", Offset = "0x15D77AC", VA = "0x15D77AC")]
		public static implicit operator ObscuredUShort(ushort value)
		{
			return default(ObscuredUShort);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x15D7854", Offset = "0x15D7854", VA = "0x15D7854")]
		public static implicit operator ushort(ObscuredUShort value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x15D7878", Offset = "0x15D7878", VA = "0x15D7878")]
		public static ObscuredUShort operator ++(ObscuredUShort input)
		{
			return default(ObscuredUShort);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x15D792C", Offset = "0x15D792C", VA = "0x15D792C")]
		public static ObscuredUShort operator --(ObscuredUShort input)
		{
			return default(ObscuredUShort);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x15D79E0", Offset = "0x15D79E0", VA = "0x15D79E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x15D7A64", Offset = "0x15D7A64", VA = "0x15D7A64", Slot = "4")]
		public bool Equals(ObscuredUShort obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x15D7A74", Offset = "0x15D7A74", VA = "0x15D7A74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x15D7AA0", Offset = "0x15D7AA0", VA = "0x15D7AA0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x15D7AD4", Offset = "0x15D7AD4", VA = "0x15D7AD4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x15D7B00", Offset = "0x15D7B00", VA = "0x15D7B00")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x15D7B34", Offset = "0x15D7B34", VA = "0x15D7B34", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C8CA4", Offset = "0x8C8CA4")]
	public struct ObscuredVector2
	{
		[Token(Token = "0x20001EC")]
		public struct RawEncryptedVector2
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int x;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int y;

			[Token(Token = "0x6001063")]
			[Address(RVA = "0x19908CC", Offset = "0x19908CC", VA = "0x19908CC")]
			private RawEncryptedVector2(float x, float y)
			{
			}

			[Token(Token = "0x6001064")]
			[Address(RVA = "0x19908DC", Offset = "0x19908DC", VA = "0x19908DC")]
			public static explicit operator Vector2(RawEncryptedVector2 value)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x19908EC", Offset = "0x19908EC", VA = "0x19908EC")]
			public static explicit operator RawEncryptedVector2(Vector2 value)
			{
				return default(RawEncryptedVector2);
			}
		}

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Vector2 initialFakeValue;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCryptoKey;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RawEncryptedVector2 hiddenValue;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector2 fakeValue;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool inited;

		[Token(Token = "0x170001FE")]
		public float x
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x15D7C5C", Offset = "0x15D7C5C", VA = "0x15D7C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x15D7E44", Offset = "0x15D7E44", VA = "0x15D7E44")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float y
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x15D7F60", Offset = "0x15D7F60", VA = "0x15D7F60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x15D80AC", Offset = "0x15D80AC", VA = "0x15D80AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public float Item
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x15D811C", Offset = "0x15D811C", VA = "0x15D811C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x15D8184", Offset = "0x15D8184", VA = "0x15D8184")]
			set
			{
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x15D7BC8", Offset = "0x15D7BC8", VA = "0x15D7BC8")]
		private ObscuredVector2(RawEncryptedVector2 value)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x15D81EC", Offset = "0x15D81EC", VA = "0x15D81EC")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x15D8254", Offset = "0x15D8254", VA = "0x15D8254")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x15D85E0", Offset = "0x15D85E0", VA = "0x15D85E0")]
		public static RawEncryptedVector2 Encrypt(Vector2 value)
		{
			return default(RawEncryptedVector2);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x15D8508", Offset = "0x15D8508", VA = "0x15D8508")]
		public static RawEncryptedVector2 Encrypt(Vector2 value, int key)
		{
			return default(RawEncryptedVector2);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x15D8654", Offset = "0x15D8654", VA = "0x15D8654")]
		public static Vector2 Decrypt(RawEncryptedVector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x15D86B8", Offset = "0x15D86B8", VA = "0x15D86B8")]
		public static Vector2 Decrypt(RawEncryptedVector2 value, int key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x15D8794", Offset = "0x15D8794", VA = "0x15D8794")]
		public RawEncryptedVector2 GetEncrypted()
		{
			return default(RawEncryptedVector2);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x15D87B8", Offset = "0x15D87B8", VA = "0x15D87B8")]
		public void SetEncrypted(RawEncryptedVector2 encrypted)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x15D832C", Offset = "0x15D832C", VA = "0x15D832C")]
		private Vector2 InternalDecrypt()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x15D8828", Offset = "0x15D8828", VA = "0x15D8828")]
		private bool CompareVectorsWithTolerance(Vector2 vector1, Vector2 vector2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x15D7DA0", Offset = "0x15D7DA0", VA = "0x15D7DA0")]
		private float InternalDecryptField(int encrypted)
		{
			return default(float);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x15D7EB4", Offset = "0x15D7EB4", VA = "0x15D7EB4")]
		private int InternalEncryptField(float encrypted)
		{
			return default(int);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x15D8920", Offset = "0x15D8920", VA = "0x15D8920")]
		public static implicit operator ObscuredVector2(Vector2 value)
		{
			return default(ObscuredVector2);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x15D89EC", Offset = "0x15D89EC", VA = "0x15D89EC")]
		public static implicit operator Vector2(ObscuredVector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x15D89F0", Offset = "0x15D89F0", VA = "0x15D89F0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x15D8A1C", Offset = "0x15D8A1C", VA = "0x15D8A1C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x15D8A48", Offset = "0x15D8A48", VA = "0x15D8A48")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x15D8A7C", Offset = "0x15D8A7C", VA = "0x15D8A7C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA96C", Offset = "0x8CA96C")]
		public static Vector2 EncryptDeprecated(Vector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x15D8AF0", Offset = "0x15D8AF0", VA = "0x15D8AF0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA9A8", Offset = "0x8CA9A8")]
		public static Vector2 EncryptDeprecated(Vector2 value, int key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x15D8BC4", Offset = "0x15D8BC4", VA = "0x15D8BC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CA9E4", Offset = "0x8CA9E4")]
		public static Vector2 DecryptDeprecated(Vector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x15D8C38", Offset = "0x15D8C38", VA = "0x15D8C38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAA20", Offset = "0x8CAA20")]
		public static Vector2 DecryptDeprecated(Vector2 value, int key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x15D8CF4", Offset = "0x15D8CF4", VA = "0x15D8CF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAA5C", Offset = "0x8CAA5C")]
		public Vector2 GetEncryptedDeprecated()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x15D8D1C", Offset = "0x15D8D1C", VA = "0x15D8D1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAA98", Offset = "0x8CAA98")]
		public void SetEncryptedDeprecated(Vector2 encrypted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C8CDC", Offset = "0x8C8CDC")]
	public struct ObscuredVector3
	{
		[Token(Token = "0x20001ED")]
		public struct RawEncryptedVector3
		{
			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int x;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int y;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int z;

			[Token(Token = "0x6001066")]
			[Address(RVA = "0x19908FC", Offset = "0x19908FC", VA = "0x19908FC")]
			private RawEncryptedVector3(float x, float y, float z)
			{
			}

			[Token(Token = "0x6001067")]
			[Address(RVA = "0x1990914", Offset = "0x1990914", VA = "0x1990914")]
			public static explicit operator Vector3(RawEncryptedVector3 value)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001068")]
			[Address(RVA = "0x1990928", Offset = "0x1990928", VA = "0x1990928")]
			public static explicit operator RawEncryptedVector3(Vector3 value)
			{
				return default(RawEncryptedVector3);
			}
		}

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Vector3 initialFakeValue;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCryptoKey;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RawEncryptedVector3 hiddenValue;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 fakeValue;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool inited;

		[Token(Token = "0x17000201")]
		public float x
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x15D8EAC", Offset = "0x15D8EAC", VA = "0x15D8EAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x15D9094", Offset = "0x15D9094", VA = "0x15D9094")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float y
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x15D91B0", Offset = "0x15D91B0", VA = "0x15D91B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x15D92F4", Offset = "0x15D92F4", VA = "0x15D92F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public float z
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x15D9364", Offset = "0x15D9364", VA = "0x15D9364")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x15D94A8", Offset = "0x15D94A8", VA = "0x15D94A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public float Item
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x15D9518", Offset = "0x15D9518", VA = "0x15D9518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x15D958C", Offset = "0x15D958C", VA = "0x15D958C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x15D8E08", Offset = "0x15D8E08", VA = "0x15D8E08")]
		private ObscuredVector3(RawEncryptedVector3 encrypted)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x15D9600", Offset = "0x15D9600", VA = "0x15D9600")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x15D9668", Offset = "0x15D9668", VA = "0x15D9668")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x15D9A48", Offset = "0x15D9A48", VA = "0x15D9A48")]
		public static RawEncryptedVector3 Encrypt(Vector3 value)
		{
			return default(RawEncryptedVector3);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x15D9944", Offset = "0x15D9944", VA = "0x15D9944")]
		public static RawEncryptedVector3 Encrypt(Vector3 value, int key)
		{
			return default(RawEncryptedVector3);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x15D9AD4", Offset = "0x15D9AD4", VA = "0x15D9AD4")]
		public static Vector3 Decrypt(RawEncryptedVector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x15D9B48", Offset = "0x15D9B48", VA = "0x15D9B48")]
		public static Vector3 Decrypt(RawEncryptedVector3 value, int key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x15D9C40", Offset = "0x15D9C40", VA = "0x15D9C40")]
		public RawEncryptedVector3 GetEncrypted()
		{
			return default(RawEncryptedVector3);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x15D9C68", Offset = "0x15D9C68", VA = "0x15D9C68")]
		public void SetEncrypted(RawEncryptedVector3 encrypted)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x15D9754", Offset = "0x15D9754", VA = "0x15D9754")]
		private Vector3 InternalDecrypt()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x15D9CE4", Offset = "0x15D9CE4", VA = "0x15D9CE4")]
		private bool CompareVectorsWithTolerance(Vector3 vector1, Vector3 vector2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x15D8FF0", Offset = "0x15D8FF0", VA = "0x15D8FF0")]
		private float InternalDecryptField(int encrypted)
		{
			return default(float);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x15D9104", Offset = "0x15D9104", VA = "0x15D9104")]
		private int InternalEncryptField(float encrypted)
		{
			return default(int);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x15D9E10", Offset = "0x15D9E10", VA = "0x15D9E10")]
		public static implicit operator ObscuredVector3(Vector3 value)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x15D9EFC", Offset = "0x15D9EFC", VA = "0x15D9EFC")]
		public static implicit operator Vector3(ObscuredVector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x15D9F00", Offset = "0x15D9F00", VA = "0x15D9F00")]
		public static ObscuredVector3 operator +(ObscuredVector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x15D9FC8", Offset = "0x15D9FC8", VA = "0x15D9FC8")]
		public static ObscuredVector3 operator +(Vector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x15DA084", Offset = "0x15DA084", VA = "0x15DA084")]
		public static ObscuredVector3 operator +(ObscuredVector3 a, Vector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x15DA140", Offset = "0x15DA140", VA = "0x15DA140")]
		public static ObscuredVector3 operator -(ObscuredVector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x15DA208", Offset = "0x15DA208", VA = "0x15DA208")]
		public static ObscuredVector3 operator -(Vector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x15DA2C4", Offset = "0x15DA2C4", VA = "0x15DA2C4")]
		public static ObscuredVector3 operator -(ObscuredVector3 a, Vector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x15DA380", Offset = "0x15DA380", VA = "0x15DA380")]
		public static ObscuredVector3 operator -(ObscuredVector3 a)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x15DA430", Offset = "0x15DA430", VA = "0x15DA430")]
		public static ObscuredVector3 operator *(ObscuredVector3 a, float d)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x15DA4E4", Offset = "0x15DA4E4", VA = "0x15DA4E4")]
		public static ObscuredVector3 operator *(float d, ObscuredVector3 a)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x15DA598", Offset = "0x15DA598", VA = "0x15DA598")]
		public static ObscuredVector3 operator /(ObscuredVector3 a, float d)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x15DA64C", Offset = "0x15DA64C", VA = "0x15DA64C")]
		public static bool operator ==(ObscuredVector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x15DA6AC", Offset = "0x15DA6AC", VA = "0x15DA6AC")]
		public static bool operator ==(Vector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x15DA6F8", Offset = "0x15DA6F8", VA = "0x15DA6F8")]
		public static bool operator ==(ObscuredVector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x15DA738", Offset = "0x15DA738", VA = "0x15DA738")]
		public static bool operator !=(ObscuredVector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x15DA798", Offset = "0x15DA798", VA = "0x15DA798")]
		public static bool operator !=(Vector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x15DA7E4", Offset = "0x15DA7E4", VA = "0x15DA7E4")]
		public static bool operator !=(ObscuredVector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x15DA824", Offset = "0x15DA824", VA = "0x15DA824", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x15DA868", Offset = "0x15DA868", VA = "0x15DA868", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x15DA898", Offset = "0x15DA898", VA = "0x15DA898", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x15DA8C8", Offset = "0x15DA8C8", VA = "0x15DA8C8")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x15DA908", Offset = "0x15DA908", VA = "0x15DA908")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAAD4", Offset = "0x8CAAD4")]
		public static Vector3 EncryptDeprecated(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x15DA98C", Offset = "0x15DA98C", VA = "0x15DA98C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAB10", Offset = "0x8CAB10")]
		public static Vector3 EncryptDeprecated(Vector3 value, int key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x15DAA84", Offset = "0x15DAA84", VA = "0x15DAA84")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAB4C", Offset = "0x8CAB4C")]
		public static Vector3 DecryptDeprecated(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x15DAB08", Offset = "0x15DAB08", VA = "0x15DAB08")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAB88", Offset = "0x8CAB88")]
		public static Vector3 DecryptDeprecated(Vector3 value, int key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x15DAC00", Offset = "0x15DAC00", VA = "0x15DAC00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CABC4", Offset = "0x8CABC4")]
		public Vector3 GetEncryptedDeprecated()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x15DAC2C", Offset = "0x15DAC2C", VA = "0x15DAC2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8CAC00", Offset = "0x8CAC00")]
		public void SetEncryptedDeprecated(Vector3 encrypted)
		{
		}
	}
}
namespace CodeStage.AntiCheat.Detectors
{
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8D14", Offset = "0x8C8D14")]
	public abstract class ActDetectorBase : MonoBehaviour
	{
		[Token(Token = "0x4000920")]
		protected const string CONTAINER_NAME = "Anti-Cheat Toolkit Detectors";

		[Token(Token = "0x4000921")]
		protected const string MENU_PATH = "GameObject/Create Other/Code Stage/Anti-Cheat Toolkit/";

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C99E4", Offset = "0x8C99E4")]
		public bool autoDispose;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9A1C", Offset = "0x8C9A1C")]
		public bool keepAlive;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GameObject detectorsContainer;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Action onDetection;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool inited;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1EA1108", Offset = "0x1EA1108", VA = "0x1EA1108")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1EA1114", Offset = "0x1EA1114", VA = "0x1EA1114", Slot = "4")]
		protected virtual bool Init(ActDetectorBase instance, string detectorName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1EA1234", Offset = "0x1EA1234", VA = "0x1EA1234")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1EA124C", Offset = "0x1EA124C", VA = "0x1EA124C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1EA1258", Offset = "0x1EA1258", VA = "0x1EA1258")]
		private void OnLevelWasLoaded(int index)
		{
		}

		[Token(Token = "0x6000E70")]
		protected abstract void StopDetectionInternal();

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1EA1278", Offset = "0x1EA1278", VA = "0x1EA1278", Slot = "6")]
		protected virtual void DisposeInternal()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1EA12EC", Offset = "0x1EA12EC", VA = "0x1EA12EC", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1EA13C0", Offset = "0x1EA13C0", VA = "0x1EA13C0")]
		protected ActDetectorBase()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[DisallowMultipleComponent]
	public class InjectionDetector : ActDetectorBase
	{
		[Token(Token = "0x20001EE")]
		private class AllowedAssembly
		{
			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string name;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int[] hashes;

			[Token(Token = "0x6001069")]
			[Address(RVA = "0x199027C", Offset = "0x199027C", VA = "0x199027C")]
			public AllowedAssembly(string name, int[] hashes)
			{
			}
		}

		[Token(Token = "0x4000927")]
		private const string COMPONENT_NAME = "Injection Detector";

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool isRunning;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool signaturesAreNotGenuine;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AllowedAssembly[] allowedAssemblies;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] hexTable;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9A54", Offset = "0x8C9A54")]
		private static InjectionDetector <Instance>k__BackingField;

		[Token(Token = "0x17000205")]
		public static InjectionDetector Instance
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x1679C84", Offset = "0x1679C84", VA = "0x1679C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAC3C", Offset = "0x8CAC3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1679CD0", Offset = "0x1679CD0", VA = "0x1679CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAC4C", Offset = "0x8CAC4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		private static InjectionDetector GetOrCreateInstance
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x1679D24", Offset = "0x1679D24", VA = "0x1679D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1667344", Offset = "0x1667344", VA = "0x1667344")]
		public static void StartDetection(Action callback)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x167A0CC", Offset = "0x167A0CC", VA = "0x167A0CC")]
		public static void StopDetection()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x167A1BC", Offset = "0x167A1BC", VA = "0x167A1BC")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x167A2AC", Offset = "0x167A2AC", VA = "0x167A2AC")]
		private InjectionDetector()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x167A2B4", Offset = "0x167A2B4", VA = "0x167A2B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x1679F4C", Offset = "0x1679F4C", VA = "0x1679F4C")]
		private void StartDetectionInternal(Action callback)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x167AA04", Offset = "0x167AA04", VA = "0x167AA04", Slot = "5")]
		protected override void StopDetectionInternal()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x167AAE8", Offset = "0x167AAE8", VA = "0x167AAE8", Slot = "6")]
		protected override void DisposeInternal()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x167A91C", Offset = "0x167A91C", VA = "0x167A91C")]
		private void OnInjectionDetected()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x167ABE0", Offset = "0x167ABE0", VA = "0x167ABE0")]
		private void OnNewAssemblyLoaded(object sender, AssemblyLoadEventArgs args)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x167A968", Offset = "0x167A968", VA = "0x167A968")]
		private bool FindInjectionInCurrentAssemblies()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x167AC20", Offset = "0x167AC20", VA = "0x167AC20")]
		private bool AssemblyAllowed(Assembly ass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x167A38C", Offset = "0x167A38C", VA = "0x167A38C")]
		private void LoadAndParseAllowedAssemblies()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x167AD28", Offset = "0x167AD28", VA = "0x167AD28")]
		private int GetAssemblyHash(Assembly ass)
		{
			return default(int);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x167AE04", Offset = "0x167AE04", VA = "0x167AE04")]
		private string PublicKeyTokenToString(byte[] bytes)
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	[DisallowMultipleComponent]
	public class ObscuredCheatingDetector : ActDetectorBase
	{
		[Token(Token = "0x400092D")]
		private const string COMPONENT_NAME = "Obscured Cheating Detector";

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool isRunning;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float floatEpsilon;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float vector2Epsilon;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float vector3Epsilon;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float quaternionEpsilon;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9AA4", Offset = "0x8C9AA4")]
		private static ObscuredCheatingDetector <Instance>k__BackingField;

		[Token(Token = "0x17000207")]
		public static ObscuredCheatingDetector Instance
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x199E1BC", Offset = "0x199E1BC", VA = "0x199E1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAC5C", Offset = "0x8CAC5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x199E208", Offset = "0x199E208", VA = "0x199E208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAC6C", Offset = "0x8CAC6C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000208")]
		private static ObscuredCheatingDetector GetOrCreateInstance
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x199E25C", Offset = "0x199E25C", VA = "0x199E25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x199E484", Offset = "0x199E484", VA = "0x199E484")]
		public static void StartDetection(Action callback)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x199E588", Offset = "0x199E588", VA = "0x199E588")]
		public static void StopDetection()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x199E678", Offset = "0x199E678", VA = "0x199E678")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x199E768", Offset = "0x199E768", VA = "0x199E768")]
		private ObscuredCheatingDetector()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x199E77C", Offset = "0x199E77C", VA = "0x199E77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x199E4B0", Offset = "0x199E4B0", VA = "0x199E4B0")]
		private void StartDetectionInternal(Action callback)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x199E854", Offset = "0x199E854", VA = "0x199E854", Slot = "5")]
		protected override void StopDetectionInternal()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x199E8C4", Offset = "0x199E8C4", VA = "0x199E8C4", Slot = "6")]
		protected override void DisposeInternal()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x199CE34", Offset = "0x199CE34", VA = "0x199CE34")]
		internal void OnCheatingDetected()
		{
		}
	}
	[Token(Token = "0x200016E")]
	[DisallowMultipleComponent]
	public class SpeedHackDetector : ActDetectorBase
	{
		[Token(Token = "0x4000934")]
		private const string COMPONENT_NAME = "Speed Hack Detector";

		[Token(Token = "0x4000935")]
		private const long TICKS_PER_SECOND = 10000000L;

		[Token(Token = "0x4000936")]
		private const int THRESHOLD = 5000000;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9AB4", Offset = "0x8C9AB4")]
		public float interval;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9AEC", Offset = "0x8C9AEC")]
		public byte maxFalsePositives;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9B24", Offset = "0x8C9B24")]
		public int coolDown;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool isRunning;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte currentFalsePositives;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentCooldownShots;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long ticksOnStart;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private long vulnerableTicksOnStart;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long prevTicks;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private long prevIntervalTicks;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C9B5C", Offset = "0x8C9B5C")]
		private static SpeedHackDetector <Instance>k__BackingField;

		[Token(Token = "0x17000209")]
		public static SpeedHackDetector Instance
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x1E31F1C", Offset = "0x1E31F1C", VA = "0x1E31F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAC7C", Offset = "0x8CAC7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1E31F68", Offset = "0x1E31F68", VA = "0x1E31F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAC8C", Offset = "0x8CAC8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		private static SpeedHackDetector InstanceInternalForced
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x1E31FBC", Offset = "0x1E31FBC", VA = "0x1E31FBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1E321E4", Offset = "0x1E321E4", VA = "0x1E321E4")]
		public static void StartDetection(Action callback)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1E32214", Offset = "0x1E32214", VA = "0x1E32214")]
		public static void StartDetection(Action callback, float checkInterval)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1E32254", Offset = "0x1E32254", VA = "0x1E32254")]
		public static void StartDetection(Action callback, float checkInterval, byte falsePositives)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1E3229C", Offset = "0x1E3229C", VA = "0x1E3229C")]
		public static void StartDetection(Action callback, float checkInterval, byte falsePositives, int shotsTillCooldown)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1E32408", Offset = "0x1E32408", VA = "0x1E32408")]
		public static void StopDetection()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1E324F8", Offset = "0x1E324F8", VA = "0x1E324F8")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1E325E8", Offset = "0x1E325E8", VA = "0x1E325E8")]
		private SpeedHackDetector()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1E32608", Offset = "0x1E32608", VA = "0x1E32608")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1E322F0", Offset = "0x1E322F0", VA = "0x1E322F0")]
		private void StartDetectionInternal(Action callback, float checkInterval, byte falsePositives, int shotsTillCooldown)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1E32780", Offset = "0x1E32780", VA = "0x1E32780", Slot = "5")]
		protected override void StopDetectionInternal()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1E327F0", Offset = "0x1E327F0", VA = "0x1E327F0", Slot = "6")]
		protected override void DisposeInternal()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1E326E0", Offset = "0x1E326E0", VA = "0x1E326E0")]
		private void ResetStartTicks()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1E328E8", Offset = "0x1E328E8", VA = "0x1E328E8")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1E328F4", Offset = "0x1E328F4", VA = "0x1E328F4")]
		private void Update()
		{
		}
	}
}
