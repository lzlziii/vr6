using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Timers;
using System.Xml.Linq;
using BlockEngine;
using BlockEngine.AI;
using Discovery;
using Il2CppDummyDll;
using Ionic.Zip;
using LitJson;
using NWCommon;
using NWCommon.Container;
using Oculus.Platform;
using Oculus.Platform.Models;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using ScionEngine;
using TemplatesDatabase;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityStandardAssets.ImageEffects;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class CaptureFrames : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F48C", Offset = "0x23F48C")]
	private sealed class <Capture>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string <name>__1;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <width>__1;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <height>__1;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Texture2D <tex>__1;

		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal byte[] <pngShot>__1;

		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal CaptureFrames $this;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000008")]
			[Address(RVA = "0x395F80", Offset = "0x395F80", VA = "0x395F80", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000009")]
			[Address(RVA = "0x395F88", Offset = "0x395F88", VA = "0x395F88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0x395A90", Offset = "0x395A90", VA = "0x395A90")]
		[DebuggerHidden]
		public <Capture>c__Iterator0()
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0x395B24", Offset = "0x395B24", VA = "0x395B24", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x395F90", Offset = "0x395F90", VA = "0x395F90", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x395FA4", Offset = "0x395FA4", VA = "0x395FA4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F49C", Offset = "0x23F49C")]
	private sealed class <UpdateOld>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string <name>__1;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <width>__1;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <height>__1;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Texture2D <tex>__1;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Texture2D <tex2>__1;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Color <color>__1;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal byte[] <pngShot>__1;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal CaptureFrames $this;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal object $current;

		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600000E")]
			[Address(RVA = "0x396678", Offset = "0x396678", VA = "0x396678", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000F")]
			[Address(RVA = "0x396680", Offset = "0x396680", VA = "0x396680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x395B1C", Offset = "0x395B1C", VA = "0x395B1C")]
		[DebuggerHidden]
		public <UpdateOld>c__Iterator1()
		{
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x39602C", Offset = "0x39602C", VA = "0x39602C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x396688", Offset = "0x396688", VA = "0x396688", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x39669C", Offset = "0x39669C", VA = "0x39669C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string folder;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int frameRate;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int framesToCapture;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int frame;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string realFolder;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture alphaRenderTexture;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x3957F4", Offset = "0x3957F4", VA = "0x3957F4")]
	public CaptureFrames()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x3958B4", Offset = "0x3958B4", VA = "0x3958B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x3959E8", Offset = "0x3959E8", VA = "0x3959E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x395A0C", Offset = "0x395A0C", VA = "0x395A0C")]
	[DebuggerHidden]
	private IEnumerator Capture()
	{
		return null;
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x395A98", Offset = "0x395A98", VA = "0x395A98")]
	[DebuggerHidden]
	private IEnumerator UpdateOld()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F4AC", Offset = "0x23F4AC")]
[ExecuteInEditMode]
public class AutoBillboard : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public VRControllerAnimation parentCA;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 faceUp;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LineRenderer line;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 invScale;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion invRot;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x384568", Offset = "0x384568", VA = "0x384568")]
	public AutoBillboard()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x38465C", Offset = "0x38465C", VA = "0x38465C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x384838", Offset = "0x384838", VA = "0x384838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x384970", Offset = "0x384970", VA = "0x384970")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x2000006")]
public class AutoBlockPlacement : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float nextReportTime;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float reportInterval;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float nextBlockTime;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blockModInterval;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int instanceCount;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int blockSetCount;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public BlockTerrain t;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Chunk ch;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int blocksToAdd;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int thisInstanceId;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x384C78", Offset = "0x384C78", VA = "0x384C78")]
	public AutoBlockPlacement()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x384C9C", Offset = "0x384C9C", VA = "0x384C9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x384E80", Offset = "0x384E80", VA = "0x384E80")]
	private void FixedUpdate()
	{
	}
}
[Token(Token = "0x2000007")]
public class AutoLevelLoad : MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string[] worldFileNames;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SavingDataScreen sds;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SavingDataScreen lds;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nextIndex;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int worldsLoaded;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool nextIsLoad;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float nextActiveTime;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BlockTerrain terrain;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x385E80", Offset = "0x385E80", VA = "0x385E80")]
	public AutoLevelLoad()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x385E90", Offset = "0x385E90", VA = "0x385E90")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x385F58", Offset = "0x385F58", VA = "0x385F58")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000008")]
public class AutoMassPlacement : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject autoBlock;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x386438", Offset = "0x386438", VA = "0x386438")]
	public AutoMassPlacement()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x386440", Offset = "0x386440", VA = "0x386440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x3864CC", Offset = "0x3864CC", VA = "0x3864CC")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000009")]
public class CameraRayHit : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private UnityStandardAssets.ImageEffects.DepthOfField dof;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float focalDistance;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float aperture;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera mainCam;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x3954A8", Offset = "0x3954A8", VA = "0x3954A8")]
	public CameraRayHit()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x3954C4", Offset = "0x3954C4", VA = "0x3954C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x395578", Offset = "0x395578", VA = "0x395578")]
	private void Update()
	{
	}
}
[Token(Token = "0x200000A")]
public class CheckAllMeshColliders : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<MeshCollider> mcs;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MeshCollider meshColliderToTest;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Rigidbody rb;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController cc;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x396724", Offset = "0x396724", VA = "0x396724")]
	public CheckAllMeshColliders()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x39672C", Offset = "0x39672C", VA = "0x39672C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x396C18", Offset = "0x396C18", VA = "0x396C18")]
	private void Update()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class SceneCombination
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string sceneName;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BinaryDataContainer dataContainer;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CameraPath camPath;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float skyTime;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float skyTimeMulti;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int recordedPlayerCount;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x4D56F0", Offset = "0x4D56F0", VA = "0x4D56F0")]
	public SceneCombination()
	{
	}
}
[Token(Token = "0x200000C")]
public class DemoFuncs : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F534", Offset = "0x23F534")]
	private sealed class <LoadLevel>c__AnonStorey0
	{
		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string levelName;

		[Token(Token = "0x6000031")]
		[Address(RVA = "0x39E810", Offset = "0x39E810", VA = "0x39E810")]
		public <LoadLevel>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x3A10C8", Offset = "0x3A10C8", VA = "0x3A10C8")]
		internal bool <>m__0(SceneCombination a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F544", Offset = "0x23F544")]
	private sealed class <Update>c__AnonStorey1
	{
		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool backup;

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x3A03D0", Offset = "0x3A03D0", VA = "0x3A03D0")]
		public <Update>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x3A1180", Offset = "0x3A1180", VA = "0x3A1180")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F554", Offset = "0x23F554")]
	private sealed class <Load>c__AnonStorey2
	{
		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string objName;

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x3A1010", Offset = "0x3A1010", VA = "0x3A1010")]
		public <Load>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x3A1018", Offset = "0x3A1018", VA = "0x3A1018")]
		internal bool <>m__0(CameraPath p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public KeyCode NextKey;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public KeyCode ResetKey;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public KeyCode GenerateKey;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode GuiKey;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode ReloadKey;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode ScreeShotKey;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode ExitWithoutSave;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SceneCombination> scenePaths;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int activeIndex;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int startIndex;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CameraPath oldCamPath;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float buildTime;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int superSize;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool forceDataContainer;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool showPlayerNames;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int y;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<long, List<uint>> blockData;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastBlockModification;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x39D6CC", Offset = "0x39D6CC", VA = "0x39D6CC")]
	public DemoFuncs()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x39D6EC", Offset = "0x39D6EC", VA = "0x39D6EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x39D7D4", Offset = "0x39D7D4", VA = "0x39D7D4")]
	private void instance_LevelLoaded(object sender, EventArgs<string> e)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x39DCA8", Offset = "0x39DCA8", VA = "0x39DCA8")]
	private void CreateDifferenceData()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x39E578", Offset = "0x39E578", VA = "0x39E578")]
	private void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x39E818", Offset = "0x39E818", VA = "0x39E818")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x39D9D0", Offset = "0x39D9D0", VA = "0x39D9D0")]
	private void ApplySceneCombination(SceneCombination sc)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x3A03D8", Offset = "0x3A03D8", VA = "0x3A03D8")]
	public void Save()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x3A08EC", Offset = "0x3A08EC", VA = "0x3A08EC")]
	public void Load()
	{
	}
}
[Token(Token = "0x2000010")]
public class DiscoveryVR : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public NWVRManager vrManager;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GameObject> vrGameObjects;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PlayerLogic vrPlayer;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera vrMainCam;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTexture uiRenderTexture;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LaserPointer> vrLaserPointers;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public VRPlaySpace vrPlaySpace;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRVignetteFadeLogic vignetteLogic;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject hmdRTPostRepro;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject guiRT;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool rightIsMain;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int gamePadIndex;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private NWGamePadProxy gamePad;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NWGamePadButton virtualVRTrigger;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Dictionary<NWGamePadProxy, VRModelInfo> vrControllers;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRModelInfo vrHeadset;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TrackedXRDevice rightController;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrackedXRDevice leftController;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public VRControllerAnimation fallbackInputMapping;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float controllerCheckTimer;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float controllerCheckTimerOG;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NWGamePadProxy ds4;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private NWGamePadProxy move1;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private NWGamePadProxy move2;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int activePS4Tracker;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool vreLast;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform activeVRGUI;

	[Token(Token = "0x17000005")]
	public Transform VrCameraProxy
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x3AFEE0", Offset = "0x3AFEE0", VA = "0x3AFEE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public Camera VrMainCam
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x3AFFDC", Offset = "0x3AFFDC", VA = "0x3AFFDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x3AFFE4", Offset = "0x3AFFE4", VA = "0x3AFFE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public Camera uiCam
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x3B0CD8", Offset = "0x3B0CD8", VA = "0x3B0CD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public NWGamePadButton VRTrigger
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x3B0E24", Offset = "0x3B0E24", VA = "0x3B0E24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public bool OverGUI
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x3B1080", Offset = "0x3B1080", VA = "0x3B1080")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	public bool Ds4Connected
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x3B1294", Offset = "0x3B1294", VA = "0x3B1294")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000B")]
	public bool Move1Connected
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x3B12A4", Offset = "0x3B12A4", VA = "0x3B12A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000C")]
	public bool Move2Connected
	{
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x3B12B4", Offset = "0x3B12B4", VA = "0x3B12B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000001")]
	public event EventHandler OnVRControllerReparented
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x3B68A8", Offset = "0x3B68A8", VA = "0x3B68A8")]
		add
		{
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x3B69B4", Offset = "0x3B69B4", VA = "0x3B69B4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x3AFE08", Offset = "0x3AFE08", VA = "0x3AFE08")]
	public DiscoveryVR()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x3B12C4", Offset = "0x3B12C4", VA = "0x3B12C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x3B14B0", Offset = "0x3B14B0", VA = "0x3B14B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x3B15E8", Offset = "0x3B15E8", VA = "0x3B15E8")]
	private void Instance_OnJoyStickConnected(int index, NWGamePadProxy gp)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x3B243C", Offset = "0x3B243C", VA = "0x3B243C")]
	private void Instance_OnJoyStickDisconnected(int index, NWGamePadProxy gp)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x3B15F0", Offset = "0x3B15F0", VA = "0x3B15F0")]
	private VRModelInfo InstantiateVRController(NWGamePadProxy gp)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x3B2774", Offset = "0x3B2774", VA = "0x3B2774")]
	private void RemoveVRController(NWGamePadProxy gp, bool umh = true)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x3B3B90", Offset = "0x3B3B90", VA = "0x3B3B90")]
	private void RemoveAllVRController()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x3B3D44", Offset = "0x3B3D44", VA = "0x3B3D44")]
	private void PSVRStatusChange()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x3B3E94", Offset = "0x3B3E94", VA = "0x3B3E94")]
	private void CheckPS4InputChange()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x3B4930", Offset = "0x3B4930", VA = "0x3B4930")]
	private void CheckPCStatus()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x3B4934", Offset = "0x3B4934", VA = "0x3B4934")]
	private void vrManager_VRStatusChanging(object sender, VRStatusEventArgs e)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x3B4C10", Offset = "0x3B4C10", VA = "0x3B4C10")]
	private void vrManager_VRStatusChanged(object sender, VRStatusEventArgs e)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x3B54C0", Offset = "0x3B54C0", VA = "0x3B54C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x3B562C", Offset = "0x3B562C", VA = "0x3B562C")]
	private void UpdateTouch()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x3B59DC", Offset = "0x3B59DC", VA = "0x3B59DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x3B4E1C", Offset = "0x3B4E1C", VA = "0x3B4E1C")]
	private void SetupVRGameObjects(bool vrEnabled)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x3B62A0", Offset = "0x3B62A0", VA = "0x3B62A0")]
	public void UpdateGUIRendering(bool postReprojection)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x3B5A24", Offset = "0x3B5A24", VA = "0x3B5A24")]
	public void SetVRModeForPlayer(BlockPlayerModelMotor p)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x3B0238", Offset = "0x3B0238", VA = "0x3B0238")]
	private void ReparentController()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x3B6AC0", Offset = "0x3B6AC0", VA = "0x3B6AC0")]
	private NWGamePadProxy GetGamePadProxy(VRModelInfo vrController)
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x3B6CB8", Offset = "0x3B6CB8", VA = "0x3B6CB8")]
	private void AssignVRInputMap(TrackedXRDevice mainController, TrackedXRDevice secondController, PlayerLogic pl)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x3B2CA8", Offset = "0x3B2CA8", VA = "0x3B2CA8")]
	public void UpdateMainHandVR()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x3B7FF0", Offset = "0x3B7FF0", VA = "0x3B7FF0")]
	private void OnGUI()
	{
	}
}
[Token(Token = "0x2000011")]
public class DummyVRControllerLogic : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform followTarget;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 offset;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 curPos;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float adaptionSpeed;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x3B81BC", Offset = "0x3B81BC", VA = "0x3B81BC")]
	public DummyVRControllerLogic()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x3B81D0", Offset = "0x3B81D0", VA = "0x3B81D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x3B82B0", Offset = "0x3B82B0", VA = "0x3B82B0")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000012")]
public class HideFromThisCamera : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Renderer> meshRenderer;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x42C598", Offset = "0x42C598", VA = "0x42C598")]
	public HideFromThisCamera()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x42C624", Offset = "0x42C624", VA = "0x42C624")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x42C704", Offset = "0x42C704", VA = "0x42C704")]
	private void OnPostRender()
	{
	}
}
[Token(Token = "0x2000013")]
public class InputAxisDetector : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int joystickCount;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int axisCount;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int buttonCount;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useOnGUI;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text textField;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fpsDelta;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeSinceLast;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fps;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x42CD44", Offset = "0x42CD44", VA = "0x42CD44")]
	public InputAxisDetector()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x42CD74", Offset = "0x42CD74", VA = "0x42CD74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x42CE24", Offset = "0x42CE24", VA = "0x42CE24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x42D58C", Offset = "0x42D58C", VA = "0x42D58C")]
	private void OnGUI()
	{
	}
}
[Token(Token = "0x2000014")]
public class ExamplePlayer : NetworkBehaviour
{
	[Token(Token = "0x6000064")]
	[Address(RVA = "0x3B8FC4", Offset = "0x3B8FC4", VA = "0x3B8FC4")]
	public ExamplePlayer()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x3B9048", Offset = "0x3B9048", VA = "0x3B9048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x3B933C", Offset = "0x3B933C", VA = "0x3B933C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x3B9340", Offset = "0x3B9340", VA = "0x3B9340", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x3B9348", Offset = "0x3B9348", VA = "0x3B9348", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000015")]
public class NewPlayerInfoScreen : NGUIPanelLogic
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float startTime;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float showDuration;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UIPanel panel;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel body;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform spriteProxy;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NewPlayerInfoScreen _instance;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> verts;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<int> indices;

	[Token(Token = "0x1700000D")]
	public static NewPlayerInfoScreen instance
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x7350D4", Offset = "0x7350D4", VA = "0x7350D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x73500C", Offset = "0x73500C", VA = "0x73500C")]
	public NewPlayerInfoScreen()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x7351E8", Offset = "0x7351E8", VA = "0x7351E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x7352C4", Offset = "0x7352C4", VA = "0x7352C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x735400", Offset = "0x735400", VA = "0x735400")]
	public void Show(string bodytext, float duration)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x735928", Offset = "0x735928", VA = "0x735928", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x735930", Offset = "0x735930", VA = "0x735930")]
	public void GoBack()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F564", Offset = "0x23F564")]
public class LaserPointer : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	public enum PointerType
	{
		[Token(Token = "0x40000AE")]
		None,
		[Token(Token = "0x40000AF")]
		Straight,
		[Token(Token = "0x40000B0")]
		Ballistic
	}

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LaserPointer _instance;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PointerType pType;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LineRenderer line;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Material laserMaterial;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material uiLaserMaterial;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RaycastHit hit;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask uiLayers;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask ignoreLayers;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float pickDistance;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float scale;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float startAngle;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float stepAngle;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float speedMeterPerSecond;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float intervalTime;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int steps;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool valid;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color validColor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color invalidColor;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float fadeSpeed;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color currColor;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Transform hitQuad;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 hitPos;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Light pointLight;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Vector3> segments;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float animX;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float animSpeed;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float animScale;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 hitQuadUIScale;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float hitQuadUIDist;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool hitFound;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool overGui;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color straightStart1;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Color straightStart2;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public UICamera.Touch lpTouch;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public NWGamePadButton lpButton;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private GameObject lastWidget;

	[Token(Token = "0x1700000E")]
	public static LaserPointer instance
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x4308CC", Offset = "0x4308CC", VA = "0x4308CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public RaycastHit Hit
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x4309E0", Offset = "0x4309E0", VA = "0x4309E0")]
		get
		{
			return default(RaycastHit);
		}
	}

	[Token(Token = "0x17000010")]
	public Vector3 HitPos
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x430A00", Offset = "0x430A00", VA = "0x430A00")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000011")]
	public bool OverGUI
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x430A14", Offset = "0x430A14", VA = "0x430A14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x430660", Offset = "0x430660", VA = "0x430660")]
	public LaserPointer()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x430A1C", Offset = "0x430A1C", VA = "0x430A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x430B18", Offset = "0x430B18", VA = "0x430B18")]
	private UIWidget GetWidgetIfActive(GameObject hitObj)
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x430C78", Offset = "0x430C78", VA = "0x430C78")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x2000018")]
public class VRStatusEventArgs : EventArgs
{
	[Token(Token = "0x2000019")]
	public enum VRStatus
	{
		[Token(Token = "0x40000B3")]
		Triggered,
		[Token(Token = "0x40000B4")]
		Init,
		[Token(Token = "0x40000B5")]
		Start,
		[Token(Token = "0x40000B6")]
		LateStart,
		[Token(Token = "0x40000B7")]
		Calibration,
		[Token(Token = "0x40000B8")]
		End,
		[Token(Token = "0x40000B9")]
		LateEnd
	}

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public VRStatus status;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x41A0B4", Offset = "0x41A0B4", VA = "0x41A0B4")]
	public VRStatusEventArgs(VRStatus s)
	{
	}
}
[Token(Token = "0x200001A")]
public class NWVRManager : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F5DC", Offset = "0x23F5DC")]
	private sealed class <SetupVR>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string[] $locvar0;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string <device>__1;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string <deviceToLoad>__2;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool <abortCalibration>__0;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal NWVRManager $this;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000095")]
			[Address(RVA = "0x734924", Offset = "0x734924", VA = "0x734924", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000096")]
			[Address(RVA = "0x73492C", Offset = "0x73492C", VA = "0x73492C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x733158", Offset = "0x733158", VA = "0x733158")]
		[DebuggerHidden]
		public <SetupVR>c__Iterator0()
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x733EE4", Offset = "0x733EE4", VA = "0x733EE4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x734934", Offset = "0x734934", VA = "0x734934", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x734948", Offset = "0x734948", VA = "0x734948", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F5EC", Offset = "0x23F5EC")]
	private sealed class <LoadSpecificSDK>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string sdkToLoad;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600009B")]
			[Address(RVA = "0x733A60", Offset = "0x733A60", VA = "0x733A60", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009C")]
			[Address(RVA = "0x733A68", Offset = "0x733A68", VA = "0x733A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x7331E4", Offset = "0x7331E4", VA = "0x7331E4")]
		[DebuggerHidden]
		public <LoadSpecificSDK>c__Iterator1()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x733924", Offset = "0x733924", VA = "0x733924", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x733A70", Offset = "0x733A70", VA = "0x733A70", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x733A84", Offset = "0x733A84", VA = "0x733A84", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200001D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F5FC", Offset = "0x23F5FC")]
	private sealed class <ShutdownVR>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal NWVRManager $this;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0x734ED0", Offset = "0x734ED0", VA = "0x734ED0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A2")]
			[Address(RVA = "0x734ED8", Offset = "0x734ED8", VA = "0x734ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x733540", Offset = "0x733540", VA = "0x733540")]
		[DebuggerHidden]
		public <ShutdownVR>c__Iterator2()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x7349D0", Offset = "0x7349D0", VA = "0x7349D0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x734EE0", Offset = "0x734EE0", VA = "0x734EE0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x734EF4", Offset = "0x734EF4", VA = "0x734EF4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200001E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F60C", Offset = "0x23F60C")]
	private sealed class <RecenterInternal>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform <recenterProxy>__0;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal NWVRManager $this;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60000A7")]
			[Address(RVA = "0x733E38", Offset = "0x733E38", VA = "0x733E38", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A8")]
			[Address(RVA = "0x733E40", Offset = "0x733E40", VA = "0x733E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x7338F8", Offset = "0x7338F8", VA = "0x7338F8")]
		[DebuggerHidden]
		public <RecenterInternal>c__Iterator3()
		{
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x733B0C", Offset = "0x733B0C", VA = "0x733B0C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x733E48", Offset = "0x733E48", VA = "0x733E48", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x733E5C", Offset = "0x733E5C", VA = "0x733E5C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackingSpaceType trackingSpace;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Camera mainCam;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject socialScreenCamera;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject calibrationPS4;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trackingCamera;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fov;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool dummyMode;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool dummyVREnabled;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NWVRManager _instance;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool inShutdown;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string vrLoadedDeviceName;

	[Token(Token = "0x17000012")]
	public bool VRDevicePresent
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0x732C88", Offset = "0x732C88", VA = "0x732C88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public bool VREnabled
	{
		[Token(Token = "0x6000081")]
		[Address(RVA = "0x72EEF4", Offset = "0x72EEF4", VA = "0x72EEF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000014")]
	public bool IsVROnlyPlatform
	{
		[Token(Token = "0x6000082")]
		[Address(RVA = "0x72EEB4", Offset = "0x72EEB4", VA = "0x72EEB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public bool IsVRRoomscale
	{
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x732D24", Offset = "0x732D24", VA = "0x732D24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000016")]
	public static NWVRManager instance
	{
		[Token(Token = "0x6000084")]
		[Address(RVA = "0x7300E8", Offset = "0x7300E8", VA = "0x7300E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public string VrLoadedDeviceName
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x733538", Offset = "0x733538", VA = "0x733538")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000002")]
	public event EventHandler<VRStatusEventArgs> VRStatusChanging
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x73027C", Offset = "0x73027C", VA = "0x73027C")]
		add
		{
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x73274C", Offset = "0x73274C", VA = "0x73274C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event EventHandler<VRStatusEventArgs> VRStatusChanged
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x732858", Offset = "0x732858", VA = "0x732858")]
		add
		{
		}
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x732964", Offset = "0x732964", VA = "0x732964")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event EventHandler<EventArgs> VRRecenter
	{
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x732A70", Offset = "0x732A70", VA = "0x732A70")]
		add
		{
		}
		[Token(Token = "0x600007F")]
		[Address(RVA = "0x732B7C", Offset = "0x732B7C", VA = "0x732B7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x732730", Offset = "0x732730", VA = "0x732730")]
	public NWVRManager()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x732D64", Offset = "0x732D64", VA = "0x732D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x732F38", Offset = "0x732F38", VA = "0x732F38")]
	private void BeginVRSetup()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x7330D4", Offset = "0x7330D4", VA = "0x7330D4")]
	[DebuggerHidden]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x733160", Offset = "0x733160", VA = "0x733160")]
	[DebuggerHidden]
	public IEnumerator LoadSpecificSDK(string sdkToLoad)
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x7331EC", Offset = "0x7331EC", VA = "0x7331EC")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x7334B4", Offset = "0x7334B4", VA = "0x7334B4")]
	[DebuggerHidden]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x733548", Offset = "0x733548", VA = "0x733548")]
	public void SetupHMDDevice()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x733768", Offset = "0x733768", VA = "0x733768")]
	public void ToggleHMDViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x733778", Offset = "0x733778", VA = "0x733778")]
	public void ToggleHMDViewOnMonitor()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x733798", Offset = "0x733798", VA = "0x733798")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x7337A8", Offset = "0x7337A8", VA = "0x7337A8")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x733874", Offset = "0x733874", VA = "0x733874")]
	[DebuggerHidden]
	public IEnumerator RecenterInternal()
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x733900", Offset = "0x733900", VA = "0x733900")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24770C", Offset = "0x24770C")]
	private void <Recenter>m__0()
	{
	}
}
[Token(Token = "0x200001F")]
public class TrackedPlayStationDevices : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum TrackedDevicesType
	{
		[Token(Token = "0x40000E8")]
		DualShock4 = 1,
		[Token(Token = "0x40000E9")]
		Aim = 2,
		[Token(Token = "0x40000EA")]
		Move = 4
	}

	[Serializable]
	[Token(Token = "0x2000021")]
	public class TrackedDevice
	{
		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int handle;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform transform;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer light;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion orientation;

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x412E70", Offset = "0x412E70", VA = "0x412E70")]
		public TrackedDevice()
		{
		}
	}

	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F61C", Offset = "0x23F61C")]
	private sealed class <StartTracking>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TrackedPlayStationDevices $this;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x412DC4", Offset = "0x412DC4", VA = "0x412DC4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C1")]
			[Address(RVA = "0x412DCC", Offset = "0x412DCC", VA = "0x412DCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x411FC8", Offset = "0x411FC8", VA = "0x411FC8")]
		[DebuggerHidden]
		public <StartTracking>c__Iterator0()
		{
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x412778", Offset = "0x412778", VA = "0x412778", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x412DD4", Offset = "0x412DD4", VA = "0x412DD4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x412DE8", Offset = "0x412DE8", VA = "0x412DE8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F62C", Offset = "0x23F62C")]
	private sealed class <RegisterDualShock4Controller>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0x4125C0", Offset = "0x4125C0", VA = "0x4125C0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C7")]
			[Address(RVA = "0x4125C8", Offset = "0x4125C8", VA = "0x4125C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x412430", Offset = "0x412430", VA = "0x412430")]
		[DebuggerHidden]
		public <RegisterDualShock4Controller>c__Iterator1()
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x412560", Offset = "0x412560", VA = "0x412560", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x4125D0", Offset = "0x4125D0", VA = "0x4125D0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x4125E4", Offset = "0x4125E4", VA = "0x4125E4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F63C", Offset = "0x23F63C")]
	private sealed class <RegisterAimController>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60000CC")]
			[Address(RVA = "0x4124B4", Offset = "0x4124B4", VA = "0x4124B4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CD")]
			[Address(RVA = "0x4124BC", Offset = "0x4124BC", VA = "0x4124BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x412438", Offset = "0x412438", VA = "0x412438")]
		[DebuggerHidden]
		public <RegisterAimController>c__Iterator2()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x412454", Offset = "0x412454", VA = "0x412454", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x4124C4", Offset = "0x4124C4", VA = "0x4124C4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x4124D8", Offset = "0x4124D8", VA = "0x4124D8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000025")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F64C", Offset = "0x23F64C")]
	private sealed class <RegisterMoveControllers>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0x4126CC", Offset = "0x4126CC", VA = "0x4126CC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0x4126D4", Offset = "0x4126D4", VA = "0x4126D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x412440", Offset = "0x412440", VA = "0x412440")]
		[DebuggerHidden]
		public <RegisterMoveControllers>c__Iterator3()
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x41266C", Offset = "0x41266C", VA = "0x41266C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x4126DC", Offset = "0x4126DC", VA = "0x4126DC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x4126F0", Offset = "0x4126F0", VA = "0x4126F0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TrackedDevicesType trackedDevicesType;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TrackedDevice deviceDualShock4;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TrackedDevice deviceAim;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackedDevice deviceMovePrimary;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TrackedDevice deviceMoveSecondary;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool enabledModel;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float emissiveBrightness;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x411F28", Offset = "0x411F28", VA = "0x411F28")]
	public TrackedPlayStationDevices()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x411F44", Offset = "0x411F44", VA = "0x411F44")]
	[DebuggerHidden]
	private IEnumerator StartTracking()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x411FD0", Offset = "0x411FD0", VA = "0x411FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x4120D4", Offset = "0x4120D4", VA = "0x4120D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x4120F8", Offset = "0x4120F8", VA = "0x4120F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x41225C", Offset = "0x41225C", VA = "0x41225C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x412260", Offset = "0x412260", VA = "0x412260")]
	public void ResetDeviceTracking()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x4120C8", Offset = "0x4120C8", VA = "0x4120C8")]
	private void UpdateDualShock4Transforms()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x4120CC", Offset = "0x4120CC", VA = "0x4120CC")]
	private void UpdateAimTransforms()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x4120D0", Offset = "0x4120D0", VA = "0x4120D0")]
	private void UpdateMoveTransforms()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x41227C", Offset = "0x41227C", VA = "0x41227C")]
	public void RegisterDevices()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x4122EC", Offset = "0x4122EC", VA = "0x4122EC")]
	[DebuggerHidden]
	private IEnumerator RegisterDualShock4Controller()
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x412358", Offset = "0x412358", VA = "0x412358")]
	[DebuggerHidden]
	private IEnumerator RegisterAimController()
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x4123C4", Offset = "0x4123C4", VA = "0x4123C4")]
	[DebuggerHidden]
	private IEnumerator RegisterMoveControllers()
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x4120FC", Offset = "0x4120FC", VA = "0x4120FC")]
	public void UnregisterDevices()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x412448", Offset = "0x412448", VA = "0x412448")]
	private void UnregisterDualShock4()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x41244C", Offset = "0x41244C", VA = "0x41244C")]
	private void UnregisterAimController()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x412450", Offset = "0x412450", VA = "0x412450")]
	private void UnregisterMoveControllers()
	{
	}
}
[Token(Token = "0x2000026")]
public class VRDeviceNames
{
	[Token(Token = "0x40000FD")]
	public const string None = "None";

	[Token(Token = "0x40000FE")]
	public const string Unknown = "Unknown";

	[Token(Token = "0x40000FF")]
	public const string Oculus = "Oculus";

	[Token(Token = "0x4000100")]
	public const string PlayStationVR = "PlayStationVR";

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x417248", Offset = "0x417248", VA = "0x417248")]
	public VRDeviceNames()
	{
	}
}
[Token(Token = "0x2000027")]
public class VRPlaySpace : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform frustumTransform;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer[] frustumRenderers;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float safeDistance;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeSpeed;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color showColor;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color hideColor;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color curColor;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool showFrustum;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camAcceleration;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 hmdPositionRaw;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion hmdRotationUnity;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion hmdRotationRaw;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion parentTransform;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject longOptionPressIcon;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Camera mainCam;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float recenterInfo;

	[Token(Token = "0x17000028")]
	public Camera MainCam
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x417CB4", Offset = "0x417CB4", VA = "0x417CB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x417CBC", Offset = "0x417CBC", VA = "0x417CBC")]
		set
		{
		}
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x417BD0", Offset = "0x417BD0", VA = "0x417BD0")]
	public VRPlaySpace()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x417CC4", Offset = "0x417CC4", VA = "0x417CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x417D80", Offset = "0x417D80", VA = "0x417D80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x417FDC", Offset = "0x417FDC", VA = "0x417FDC")]
	private void instance_VRRecenter(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x418094", Offset = "0x418094", VA = "0x418094")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x418098", Offset = "0x418098", VA = "0x418098")]
	private void UpdateFrustumTransform()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x41809C", Offset = "0x41809C", VA = "0x41809C")]
	private void UpdateFrustumDisplay()
	{
	}
}
[Token(Token = "0x2000028")]
public class VRPostReprojection : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject busySpinner;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int currentEye;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RenderTexture postReprojectionTexture;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpriteRenderer backsprite;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite usSprite;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Sprite jpSprite;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRPostReprojection _instance;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x17000029")]
	public Camera Cam
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x418A58", Offset = "0x418A58", VA = "0x418A58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public int CamDepth
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x418A60", Offset = "0x418A60", VA = "0x418A60")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public static VRPostReprojection instance
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x418A9C", Offset = "0x418A9C", VA = "0x418A9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x418A50", Offset = "0x418A50", VA = "0x418A50")]
	public VRPostReprojection()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x418C10", Offset = "0x418C10", VA = "0x418C10")]
	private void Init()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x418EE0", Offset = "0x418EE0", VA = "0x418EE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x418EE4", Offset = "0x418EE4", VA = "0x418EE4")]
	private void Instance_VRStatusChanging(object sender, VRStatusEventArgs e)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x418D84", Offset = "0x418D84", VA = "0x418D84")]
	public void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x418F40", Offset = "0x418F40", VA = "0x418F40")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000029")]
public class VRUIComplete : MonoBehaviour
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject target;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string message;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool disableColliderAfterUse;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x41A2DC", Offset = "0x41A2DC", VA = "0x41A2DC")]
	public VRUIComplete()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x41A37C", Offset = "0x41A37C", VA = "0x41A37C")]
	public void Complete()
	{
	}
}
[Token(Token = "0x200002A")]
public class VRUIController : MonoBehaviour
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask uiLayerMask;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera mainCam;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float sliderFillSpeed;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit hit;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Slider currentSlider;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSrc;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x41A49C", Offset = "0x41A49C", VA = "0x41A49C")]
	public VRUIController()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x41A4AC", Offset = "0x41A4AC", VA = "0x41A4AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x41A514", Offset = "0x41A514", VA = "0x41A514")]
	private void Update()
	{
	}
}
[Token(Token = "0x200002B")]
public class ScreenFadeInOut : MonoBehaviour
{
	[Token(Token = "0x200002C")]
	public delegate void SFIOCallBack();

	[Token(Token = "0x200002D")]
	public enum FadeType
	{
		[Token(Token = "0x4000131")]
		FadeIn,
		[Token(Token = "0x4000132")]
		FadeOut,
		[Token(Token = "0x4000133")]
		FadeInOut
	}

	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F65C", Offset = "0x23F65C")]
	private sealed class <FadeToColor>c__AnonStorey0
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal System.Timers.Timer t;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ScreenFadeInOut $this;

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x402A18", Offset = "0x402A18", VA = "0x402A18")]
		public <FadeToColor>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x402E68", Offset = "0x402E68", VA = "0x402E68")]
		internal void <>m__0(object sender, ElapsedEventArgs e)
		{
		}
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SFIOCallBack cb;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IEnumerator en;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float fadeSpeed;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color fadeColor;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer fullscreenSprite;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float teleportIntensitiy;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float collisionIntensitiy;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool fading;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timerVal;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScreenFadeInOut _instance;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private FadeType fadeIn;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color full;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color none;

	[Token(Token = "0x1700002C")]
	public static ScreenFadeInOut instance
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x4022BC", Offset = "0x4022BC", VA = "0x4022BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public bool InFade
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x4023D0", Offset = "0x4023D0", VA = "0x4023D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x402214", Offset = "0x402214", VA = "0x402214")]
	public ScreenFadeInOut()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x4023FC", Offset = "0x4023FC", VA = "0x4023FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x40242C", Offset = "0x40242C", VA = "0x40242C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x40293C", Offset = "0x40293C", VA = "0x40293C")]
	private void FadeToClear()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x4025AC", Offset = "0x4025AC", VA = "0x4025AC")]
	private void FadeToColor()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x402C30", Offset = "0x402C30", VA = "0x402C30")]
	public void FadeIn(float speed)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x402CAC", Offset = "0x402CAC", VA = "0x402CAC")]
	public void FadeOut(float speed)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x402CDC", Offset = "0x402CDC", VA = "0x402CDC")]
	public void Fade(float speed, float timer, SFIOCallBack cb_)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x402D9C", Offset = "0x402D9C", VA = "0x402D9C")]
	public void Fade(float speed, float timer, IEnumerator en_)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x402C60", Offset = "0x402C60", VA = "0x402C60")]
	private void Fade(SFIOCallBack cb_, IEnumerator en_, FadeType type)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x402E5C", Offset = "0x402E5C", VA = "0x402E5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2479DC", Offset = "0x2479DC")]
	private void <FadeToColor>m__0()
	{
	}
}
[Token(Token = "0x200002F")]
public class TrackedXRDevice : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000030")]
	public class TrackedDevice
	{
		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int handle;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Renderer light;

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x413814", Offset = "0x413814", VA = "0x413814")]
		public TrackedDevice()
		{
		}
	}

	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F66C", Offset = "0x23F66C")]
	private sealed class <StartTrackingCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0x413768", Offset = "0x413768", VA = "0x413768", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000114")]
			[Address(RVA = "0x413770", Offset = "0x413770", VA = "0x413770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x413098", Offset = "0x413098", VA = "0x413098")]
		[DebuggerHidden]
		public <StartTrackingCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x413678", Offset = "0x413678", VA = "0x413678", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x413778", Offset = "0x413778", VA = "0x413778", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x41378C", Offset = "0x41378C", VA = "0x41378C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F67C", Offset = "0x23F67C")]
	private sealed class <RegisterMoveController>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0x4135CC", Offset = "0x4135CC", VA = "0x4135CC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x4135D4", Offset = "0x4135D4", VA = "0x4135D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x413448", Offset = "0x413448", VA = "0x413448")]
		[DebuggerHidden]
		public <RegisterMoveController>c__Iterator1()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x41356C", Offset = "0x41356C", VA = "0x41356C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x4135DC", Offset = "0x4135DC", VA = "0x4135DC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x4135F0", Offset = "0x4135F0", VA = "0x4135F0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F68C", Offset = "0x23F68C")]
	private sealed class <RegisterDS4OrAim4Controller>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600011F")]
			[Address(RVA = "0x4134C0", Offset = "0x4134C0", VA = "0x4134C0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0x4134C8", Offset = "0x4134C8", VA = "0x4134C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x413450", Offset = "0x413450", VA = "0x413450")]
		[DebuggerHidden]
		public <RegisterDS4OrAim4Controller>c__Iterator2()
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x413460", Offset = "0x413460", VA = "0x413460", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x4134D0", Offset = "0x4134D0", VA = "0x4134D0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x4134E4", Offset = "0x4134E4", VA = "0x4134E4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TrackedDevice ps4Device;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public XRNode xrNode;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Quaternion orientation;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool externalTracking;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float emissiveBrightness;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x412F6C", Offset = "0x412F6C", VA = "0x412F6C")]
	public TrackedXRDevice()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x41302C", Offset = "0x41302C", VA = "0x41302C")]
	[DebuggerHidden]
	private IEnumerator StartTrackingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x4130A0", Offset = "0x4130A0", VA = "0x4130A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x4130A4", Offset = "0x4130A4", VA = "0x4130A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x4130D4", Offset = "0x4130D4", VA = "0x4130D4")]
	public void StartTracking()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x4130F8", Offset = "0x4130F8", VA = "0x4130F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x413130", Offset = "0x413130", VA = "0x413130")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x413154", Offset = "0x413154", VA = "0x413154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x4132F0", Offset = "0x4132F0", VA = "0x4132F0")]
	private void ResetDeviceTracking()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x41331C", Offset = "0x41331C", VA = "0x41331C")]
	private void RegisterDevices()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x4133DC", Offset = "0x4133DC", VA = "0x4133DC")]
	[DebuggerHidden]
	private IEnumerator RegisterMoveController()
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x413370", Offset = "0x413370", VA = "0x413370")]
	[DebuggerHidden]
	private IEnumerator RegisterDS4OrAim4Controller()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x41311C", Offset = "0x41311C", VA = "0x41311C")]
	public void UnregisterDevices()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x413458", Offset = "0x413458", VA = "0x413458")]
	private void UnregisterDualShock4OrAim()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x41345C", Offset = "0x41345C", VA = "0x41345C")]
	private void UnregisterMoveControllers()
	{
	}
}
[Token(Token = "0x2000034")]
public class VRModelInfo : MonoBehaviour
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] trackedTransforms;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LaserPointer laserPointer;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool debug;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x417654", Offset = "0x417654", VA = "0x417654")]
	public VRModelInfo()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x41765C", Offset = "0x41765C", VA = "0x41765C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x41770C", Offset = "0x41770C", VA = "0x41770C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x417724", Offset = "0x417724", VA = "0x417724")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000035")]
public class VRModelLibrary : MonoBehaviour
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public VRModelInfo oculusQuestControllerLeftPrefab;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VRModelInfo oculusQuestControllerRightPrefab;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VRModelInfo oculusTouchControllerLeftPrefab;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRModelInfo oculusTouchControllerRightPrefab;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public VRModelInfo oculusRemoteControllerLeftPrefab;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRModelInfo oculusRemoteControllerRightPrefab;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public VRModelInfo picoControllerLeftPrefab;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRModelInfo picoControllerRightPrefab;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public VRModelInfo ds4ControllerPrefab;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRModelInfo dummyControllerPrefab;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public VRModelInfo psMoveControllerLeftPrefab;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRModelInfo psMoveControllerRightPrefab;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public VRModelInfo genericVRHeadsetPrefab;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRModelInfo PSVRHeadsetPrefab;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRModelLibrary _instance;

	[Token(Token = "0x17000034")]
	public VRModelInfo VRHeadsetPrefab
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x4178E0", Offset = "0x4178E0", VA = "0x4178E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public static VRModelLibrary instance
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x4178E8", Offset = "0x4178E8", VA = "0x4178E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x4178D8", Offset = "0x4178D8", VA = "0x4178D8")]
	public VRModelLibrary()
	{
	}
}
namespace Discovery.Objects
{
	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F69C", Offset = "0x23F69C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F69C", Offset = "0x23F69C")]
	public class CubeFragment : DynamicObject
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float mLifetime;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color DiffuseColor;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float mSize;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Mesh mMesh;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3[] mVertices;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector2[] mUVs;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3[] mNormals;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector4[] mTangents;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Color[] mColors;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int[] mTriangleIndices;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float mRotDX;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float mRotDZ;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int instanceCount;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshFilter meshfilter;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private MeshCollider sCol;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rg;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Game gameInstance;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isAwake;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool active;

		[Token(Token = "0x17000036")]
		public override bool Active
		{
			[Token(Token = "0x600012E")]
			[Address(RVA = "0x3A477C", Offset = "0x3A477C", VA = "0x3A477C", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600012F")]
			[Address(RVA = "0x3A4784", Offset = "0x3A4784", VA = "0x3A4784", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x3A20C8", Offset = "0x3A20C8", VA = "0x3A20C8")]
		public CubeFragment()
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x3A20E0", Offset = "0x3A20E0", VA = "0x3A20E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x3A38F0", Offset = "0x3A38F0", VA = "0x3A38F0")]
		public void Init(Vector3 pos, Vector3 dir, float texX, float texY, float lt, float size)
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x3A46A4", Offset = "0x3A46A4", VA = "0x3A46A4")]
		private void Update()
		{
		}
	}
}
namespace Discovery
{
	[Token(Token = "0x2000037")]
	public class DynamicObject : MonoBehaviour
	{
		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected float mMSec;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Vector3 mPosition;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected Vector3 mDirection;

		[Token(Token = "0x17000037")]
		public float MSec
		{
			[Token(Token = "0x6000132")]
			[Address(RVA = "0x3A1314", Offset = "0x3A1314", VA = "0x3A1314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000133")]
			[Address(RVA = "0x3A131C", Offset = "0x3A131C", VA = "0x3A131C")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public Vector3 Position
		{
			[Token(Token = "0x6000134")]
			[Address(RVA = "0x3A1324", Offset = "0x3A1324", VA = "0x3A1324")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000135")]
			[Address(RVA = "0x3A1338", Offset = "0x3A1338", VA = "0x3A1338")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public Vector3 Direction
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0x3A1344", Offset = "0x3A1344", VA = "0x3A1344")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000137")]
			[Address(RVA = "0x3A1358", Offset = "0x3A1358", VA = "0x3A1358")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public virtual bool Active
		{
			[Token(Token = "0x6000138")]
			[Address(RVA = "0x3A1364", Offset = "0x3A1364", VA = "0x3A1364", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000139")]
			[Address(RVA = "0x3A136C", Offset = "0x3A136C", VA = "0x3A136C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x3A130C", Offset = "0x3A130C", VA = "0x3A130C")]
		public DynamicObject()
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x3A1370", Offset = "0x3A1370", VA = "0x3A1370", Slot = "6")]
		public virtual void Reset()
		{
		}
	}
}
namespace EntitlementStuff
{
	[Token(Token = "0x2000038")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000005")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x600013C")]
			[Address(RVA = "0x3B8508", Offset = "0x3B8508", VA = "0x3B8508")]
			add
			{
			}
			[Token(Token = "0x600013D")]
			[Address(RVA = "0x3B8638", Offset = "0x3B8638", VA = "0x3B8638")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x600013E")]
			[Address(RVA = "0x3B8768", Offset = "0x3B8768", VA = "0x3B8768")]
			add
			{
			}
			[Token(Token = "0x600013F")]
			[Address(RVA = "0x3B8898", Offset = "0x3B8898", VA = "0x3B8898")]
			remove
			{
			}
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x3B84F8", Offset = "0x3B84F8", VA = "0x3B84F8")]
		public EntitlementCheck()
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x3B89C8", Offset = "0x3B89C8", VA = "0x3B89C8")]
		private void OculusCheck()
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x3B8F84", Offset = "0x3B8F84", VA = "0x3B8F84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x3B8F88", Offset = "0x3B8F88", VA = "0x3B8F88")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0x3B8C58", Offset = "0x3B8C58", VA = "0x3B8C58")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x2000039")]
	internal enum states
	{
		[Token(Token = "0x4000173")]
		NOT_INIT,
		[Token(Token = "0x4000174")]
		IDLE,
		[Token(Token = "0x4000175")]
		REQUEST_FIND,
		[Token(Token = "0x4000176")]
		FINDING_ROOM,
		[Token(Token = "0x4000177")]
		REQUEST_CREATE,
		[Token(Token = "0x4000178")]
		REQUEST_JOIN,
		[Token(Token = "0x4000179")]
		REQUEST_LEAVE,
		[Token(Token = "0x400017A")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x400017B")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x200003A")]
	public static class Constants
	{
		[Token(Token = "0x400017C")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x400017D")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x400017E")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x200003B")]
	public class chatPacket
	{
		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x2402B0", Offset = "0x2402B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2402B0", Offset = "0x2402B0")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x2402E4", Offset = "0x2402E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2402E4", Offset = "0x2402E4")]
		private string <textString>k__BackingField;

		[Token(Token = "0x1700003B")]
		public int packetID
		{
			[Token(Token = "0x6000145")]
			[Address(RVA = "0x578CCC", Offset = "0x578CCC", VA = "0x578CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B0C", Offset = "0x247B0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000146")]
			[Address(RVA = "0x5784FC", Offset = "0x5784FC", VA = "0x5784FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B1C", Offset = "0x247B1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public string textString
		{
			[Token(Token = "0x6000147")]
			[Address(RVA = "0x578CC4", Offset = "0x578CC4", VA = "0x578CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B2C", Offset = "0x247B2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000148")]
			[Address(RVA = "0x578504", Offset = "0x578504", VA = "0x578504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B3C", Offset = "0x247B3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x5784F4", Offset = "0x5784F4", VA = "0x5784F4")]
		public chatPacket()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x57850C", Offset = "0x57850C", VA = "0x57850C")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x5788FC", Offset = "0x5788FC", VA = "0x5788FC")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}
	}
	[Token(Token = "0x200003C")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text dataOutput;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private states currentState;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private User localUser;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User remoteUser;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Room currentRoom;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastPacketID;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool ratedMatchStarted;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x240318", Offset = "0x240318")]
		private static Dictionary<string, int> <>f__switch$map0;

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x5754F4", Offset = "0x5754F4", VA = "0x5754F4")]
		public DataEntry()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x5754FC", Offset = "0x5754FC", VA = "0x5754FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x5756C4", Offset = "0x5756C4", VA = "0x5756C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x575854", Offset = "0x575854", VA = "0x575854")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x577348", Offset = "0x577348", VA = "0x577348")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x57561C", Offset = "0x57561C", VA = "0x57561C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x57745C", Offset = "0x57745C", VA = "0x57745C")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x577578", Offset = "0x577578", VA = "0x577578")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x575FA0", Offset = "0x575FA0", VA = "0x575FA0")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x577724", Offset = "0x577724", VA = "0x577724")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x576188", Offset = "0x576188", VA = "0x576188")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x576680", Offset = "0x576680", VA = "0x576680")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x576854", Offset = "0x576854", VA = "0x576854")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x57792C", Offset = "0x57792C", VA = "0x57792C")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x577B04", Offset = "0x577B04", VA = "0x577B04")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x5764AC", Offset = "0x5764AC", VA = "0x5764AC")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x577F24", Offset = "0x577F24", VA = "0x577F24")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x57804C", Offset = "0x57804C", VA = "0x57804C")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x576CF0", Offset = "0x576CF0", VA = "0x576CF0")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x575D94", Offset = "0x575D94", VA = "0x575D94")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x576E34", Offset = "0x576E34", VA = "0x576E34")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x578CD4", Offset = "0x578CD4", VA = "0x578CD4")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x576FB4", Offset = "0x576FB4", VA = "0x576FB4")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x578E08", Offset = "0x578E08", VA = "0x578E08")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x5770E8", Offset = "0x5770E8", VA = "0x5770E8")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x578F30", Offset = "0x578F30", VA = "0x578F30")]
		private void reportResultsResponse(Message msg)
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x200003D")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text dataOutput;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x240328", Offset = "0x240328")]
		private static Dictionary<string, int> <>f__switch$map1;

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x579048", Offset = "0x579048", VA = "0x579048")]
		public DataEntry()
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x579050", Offset = "0x579050", VA = "0x579050")]
		private void Start()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x579180", Offset = "0x579180", VA = "0x579180")]
		private void Update()
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x579308", Offset = "0x579308", VA = "0x579308")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x57B8A4", Offset = "0x57B8A4", VA = "0x57B8A4")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x57B748", Offset = "0x57B748", VA = "0x57B748")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x57B670", Offset = "0x57B670", VA = "0x57B670")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x57B550", Offset = "0x57B550", VA = "0x57B550")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x57B480", Offset = "0x57B480", VA = "0x57B480")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x57B334", Offset = "0x57B334", VA = "0x57B334")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x57B1E8", Offset = "0x57B1E8", VA = "0x57B1E8")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x5790D8", Offset = "0x5790D8", VA = "0x5790D8")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x57B108", Offset = "0x57B108", VA = "0x57B108")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x579E4C", Offset = "0x579E4C", VA = "0x579E4C")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x579F84", Offset = "0x579F84", VA = "0x579F84")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x57A060", Offset = "0x57A060", VA = "0x57A060")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x57A1B4", Offset = "0x57A1B4", VA = "0x57A1B4")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x57A30C", Offset = "0x57A30C", VA = "0x57A30C")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x57A460", Offset = "0x57A460", VA = "0x57A460")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x57A604", Offset = "0x57A604", VA = "0x57A604")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x57A6E4", Offset = "0x57A6E4", VA = "0x57A6E4")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x57A83C", Offset = "0x57A83C", VA = "0x57A83C")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x57A91C", Offset = "0x57A91C", VA = "0x57A91C")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x57A9F8", Offset = "0x57A9F8", VA = "0x57A9F8")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x57AB74", Offset = "0x57AB74", VA = "0x57AB74")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x57ACF0", Offset = "0x57ACF0", VA = "0x57ACF0")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x57B984", Offset = "0x57B984", VA = "0x57B984")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x57BA98", Offset = "0x57BA98", VA = "0x57BA98")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x57C408", Offset = "0x57C408", VA = "0x57C408")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x57CAB0", Offset = "0x57CAB0", VA = "0x57CAB0")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x57CC38", Offset = "0x57CC38", VA = "0x57CC38")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x57CCCC", Offset = "0x57CCCC", VA = "0x57CCCC")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x57D468", Offset = "0x57D468", VA = "0x57D468")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x57D678", Offset = "0x57D678", VA = "0x57D678")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x57D790", Offset = "0x57D790", VA = "0x57D790")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x57D8A8", Offset = "0x57D8A8", VA = "0x57D8A8")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x57D9C0", Offset = "0x57D9C0", VA = "0x57D9C0")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x57DE88", Offset = "0x57DE88", VA = "0x57DE88")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x57E45C", Offset = "0x57E45C", VA = "0x57E45C")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x57E5A0", Offset = "0x57E5A0", VA = "0x57E5A0")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x57E6E4", Offset = "0x57E6E4", VA = "0x57E6E4")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x57E828", Offset = "0x57E828", VA = "0x57E828")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x57E96C", Offset = "0x57E96C", VA = "0x57E96C")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x57EE54", Offset = "0x57EE54", VA = "0x57EE54")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x57EF98", Offset = "0x57EF98", VA = "0x57EF98")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x57F0DC", Offset = "0x57F0DC", VA = "0x57F0DC")]
		private void inviteUserCallback(Message msg)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x200003E")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x240338", Offset = "0x240338")]
		[SerializeField]
		public int x;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x240370", Offset = "0x240370")]
		[SerializeField]
		public int y;

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x3D4240", Offset = "0x3D4240", VA = "0x3D4240")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x200003F")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button m_currentButton;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x3D4248", Offset = "0x3D4248", VA = "0x3D4248")]
		public EyeCamera()
		{
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x3D4250", Offset = "0x3D4250", VA = "0x3D4250")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000040")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x2000041")]
		private struct PositionInfo
		{
			[Token(Token = "0x400019B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x400019C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int pieceOwner;

			[Token(Token = "0x400019D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000193")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000194")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000195")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] m_scores;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x3D4ED0", Offset = "0x3D4ED0", VA = "0x3D4ED0")]
		public GameBoard()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x3D4FD0", Offset = "0x3D4FD0", VA = "0x3D4FD0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x3D52C8", Offset = "0x3D52C8", VA = "0x3D52C8")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x3D53F0", Offset = "0x3D53F0", VA = "0x3D53F0")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x3D54E4", Offset = "0x3D54E4", VA = "0x3D54E4")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0x3D55D8", Offset = "0x3D55D8", VA = "0x3D55D8")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x3D5FE0", Offset = "0x3D5FE0", VA = "0x3D5FE0")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0x3D6144", Offset = "0x3D6144", VA = "0x3D6144")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0x3D6408", Offset = "0x3D6408", VA = "0x3D6408")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x3D591C", Offset = "0x3D591C", VA = "0x3D591C")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x3D6608", Offset = "0x3D6608", VA = "0x3D6608")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x3D5B30", Offset = "0x3D5B30", VA = "0x3D5B30")]
		private void UpdateScores()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x2000043")]
		private enum GameState
		{
			[Token(Token = "0x40001B1")]
			None,
			[Token(Token = "0x40001B2")]
			PracticingMyTurn,
			[Token(Token = "0x40001B3")]
			PracticingAiTurn,
			[Token(Token = "0x40001B4")]
			OnlineMatchMyTurn,
			[Token(Token = "0x40001B5")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private GameState m_state;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private uint m_powerBallcount;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string m_opponentName;

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x3D6650", Offset = "0x3D6650", VA = "0x3D6650")]
		public GameController()
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x3D66E8", Offset = "0x3D66E8", VA = "0x3D66E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x3D68C8", Offset = "0x3D68C8", VA = "0x3D68C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x3D6710", Offset = "0x3D6710", VA = "0x3D6710")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x3D7030", Offset = "0x3D7030", VA = "0x3D7030")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x3D68CC", Offset = "0x3D68CC", VA = "0x3D68CC")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x3D7A34", Offset = "0x3D7A34", VA = "0x3D7A34")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x3D73C4", Offset = "0x3D73C4", VA = "0x3D73C4")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x3D7B94", Offset = "0x3D7B94", VA = "0x3D7B94")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x3D7BEC", Offset = "0x3D7BEC", VA = "0x3D7BEC")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x3D7CC0", Offset = "0x3D7CC0", VA = "0x3D7CC0")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x3D7CD0", Offset = "0x3D7CD0", VA = "0x3D7CD0")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x3D4A2C", Offset = "0x3D4A2C", VA = "0x3D4A2C")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x3D4A20", Offset = "0x3D4A20", VA = "0x3D4A20")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x3D4A34", Offset = "0x3D4A34", VA = "0x3D4A34")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x3D4DE0", Offset = "0x3D4DE0", VA = "0x3D4DE0")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x3D75EC", Offset = "0x3D75EC", VA = "0x3D75EC")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x3D7744", Offset = "0x3D7744", VA = "0x3D7744")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x3D805C", Offset = "0x3D805C", VA = "0x3D805C")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x3D8064", Offset = "0x3D8064", VA = "0x3D8064")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x3D6718", Offset = "0x3D6718", VA = "0x3D6718")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x3D698C", Offset = "0x3D698C", VA = "0x3D698C")]
		private void UpdateGamePieceColors()
		{
		}
	}
	[Token(Token = "0x2000044")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x2000045")]
		public enum Piece
		{
			[Token(Token = "0x40001BC")]
			A,
			[Token(Token = "0x40001BD")]
			B,
			[Token(Token = "0x40001BE")]
			PowerBall
		}

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private BoardPosition m_position;

		[Token(Token = "0x1700003D")]
		public Piece Type
		{
			[Token(Token = "0x60001B9")]
			[Address(RVA = "0x3D7D54", Offset = "0x3D7D54", VA = "0x3D7D54")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x1700003E")]
		public BoardPosition Position
		{
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0x3D7D4C", Offset = "0x3D7D4C", VA = "0x3D7D4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001BB")]
			[Address(RVA = "0x3D6600", Offset = "0x3D6600", VA = "0x3D6600")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public GameObject Prefab
		{
			[Token(Token = "0x60001BC")]
			[Address(RVA = "0x3D7B6C", Offset = "0x3D7B6C", VA = "0x3D7B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x3D8294", Offset = "0x3D8294", VA = "0x3D8294")]
		public GamePiece()
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x3D7C9C", Offset = "0x3D7C9C", VA = "0x3D7C9C")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000046")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x40001C1")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x3D829C", Offset = "0x3D829C", VA = "0x3D829C")]
		public IAPManager()
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x3D82A4", Offset = "0x3D82A4", VA = "0x3D82A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x3D82C0", Offset = "0x3D82C0", VA = "0x3D82C0")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x3D84EC", Offset = "0x3D84EC", VA = "0x3D84EC")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x3D8424", Offset = "0x3D8424", VA = "0x3D8424")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x3D8B28", Offset = "0x3D8B28", VA = "0x3D8B28")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x3D9008", Offset = "0x3D9008", VA = "0x3D9008")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x3D90E0", Offset = "0x3D90E0", VA = "0x3D90E0")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}
	}
	[Token(Token = "0x2000047")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x2000048")]
		private enum MatchRoomState
		{
			[Token(Token = "0x40001CC")]
			None,
			[Token(Token = "0x40001CD")]
			Queued,
			[Token(Token = "0x40001CE")]
			Configuring,
			[Token(Token = "0x40001CF")]
			MyTurn,
			[Token(Token = "0x40001D0")]
			RemoteTurn
		}

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x40001C5")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_matchRoom;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private User m_remotePlayer;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_lastUpdateTime;

		[Token(Token = "0x40001C9")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MatchRoomState m_state;

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x3D9240", Offset = "0x3D9240", VA = "0x3D9240")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x3D9248", Offset = "0x3D9248", VA = "0x3D9248")]
		private void Start()
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x3D9540", Offset = "0x3D9540", VA = "0x3D9540")]
		private void Update()
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x3D969C", Offset = "0x3D969C", VA = "0x3D969C")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x3D7140", Offset = "0x3D7140", VA = "0x3D7140")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x3D9790", Offset = "0x3D9790", VA = "0x3D9790")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x3D9328", Offset = "0x3D9328", VA = "0x3D9328")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x3D97BC", Offset = "0x3D97BC", VA = "0x3D97BC")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x3D9BF8", Offset = "0x3D9BF8", VA = "0x3D9BF8")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x3D9E00", Offset = "0x3D9E00", VA = "0x3D9E00")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x3DAA1C", Offset = "0x3DAA1C", VA = "0x3DAA1C")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x3DA324", Offset = "0x3DA324", VA = "0x3DA324")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x3DB13C", Offset = "0x3DB13C", VA = "0x3DB13C")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x3D7D5C", Offset = "0x3D7D5C", VA = "0x3D7D5C")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x3DB458", Offset = "0x3DB458", VA = "0x3DB458")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x3DB0D8", Offset = "0x3DB0D8", VA = "0x3DB0D8")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x3DB4A8", Offset = "0x3DB4A8", VA = "0x3DB4A8")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}
	}
	[Token(Token = "0x2000049")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_myID;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_myOculusID;

		[Token(Token = "0x17000040")]
		public static ulong MyID
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0x3D96B0", Offset = "0x3D96B0", VA = "0x3D96B0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000041")]
		public static string MyOculusID
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x3D8148", Offset = "0x3D8148", VA = "0x3D8148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x3DB59C", Offset = "0x3DB59C", VA = "0x3DB59C")]
		public PlatformManager()
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x3DB5A4", Offset = "0x3DB5A4", VA = "0x3DB5A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x3DB730", Offset = "0x3DB730", VA = "0x3DB730")]
		private void Start()
		{
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x3DB7E0", Offset = "0x3DB7E0", VA = "0x3DB7E0")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x3DB9E4", Offset = "0x3DB9E4", VA = "0x3DB9E4")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x3D8A14", Offset = "0x3D8A14", VA = "0x3D8A14")]
		public static void TerminateWithError(Message msg)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x200004A")]
	public class AchievementsManager
	{
		[Token(Token = "0x40001D4")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x17000042")]
		public bool LikesToWin
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0x3DBFD4", Offset = "0x3DBFD4", VA = "0x3DBFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x3DBFCC", Offset = "0x3DBFCC", VA = "0x3DBFCC")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x3DBFDC", Offset = "0x3DBFDC", VA = "0x3DBFDC")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x3DC140", Offset = "0x3DC140", VA = "0x3DC140")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x3DC1C0", Offset = "0x3DC1C0", VA = "0x3DC1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B4C", Offset = "0x247B4C")]
		private void <CheckForAchievmentUpdates>m__0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200004B")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x3DBB70", Offset = "0x3DBB70", VA = "0x3DBB70")]
		public AIPlayer()
		{
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x3DBC00", Offset = "0x3DBC00", VA = "0x3DBC00")]
		private void FixedUpdate()
		{
		}
	}
	[Token(Token = "0x200004C")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x3DC4EC", Offset = "0x3DC4EC", VA = "0x3DC4EC")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x200004D")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x3DC4F4", Offset = "0x3DC4F4", VA = "0x3DC4F4")]
		public Camera2DController()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x3DC4FC", Offset = "0x3DC4FC", VA = "0x3DC4FC")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x200004F")]
		private enum BasketPhase
		{
			[Token(Token = "0x40001D9")]
			NONE,
			[Token(Token = "0x40001DA")]
			TOP,
			[Token(Token = "0x40001DB")]
			BOTH,
			[Token(Token = "0x40001DC")]
			BOTTOM
		}

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private BasketPhase m_phase;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Player m_owningPlayer;

		[Token(Token = "0x17000043")]
		public Player Player
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0x3DC7F0", Offset = "0x3DC7F0", VA = "0x3DC7F0")]
			set
			{
			}
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x3DC7E8", Offset = "0x3DC7E8", VA = "0x3DC7E8")]
		public DetectBasket()
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x3DC7F8", Offset = "0x3DC7F8", VA = "0x3DC7F8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x3DC998", Offset = "0x3DC998", VA = "0x3DC998")]
		private void OnTriggerExit(Collider other)
		{
		}
	}
	[Token(Token = "0x2000050")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40001DD")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_eol;

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x3DCC54", Offset = "0x3DCC54", VA = "0x3DCC54")]
		public FlyText()
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x3DCD1C", Offset = "0x3DCD1C", VA = "0x3DCD1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x3DCDF4", Offset = "0x3DCDF4", VA = "0x3DCDF4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000051")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40001E2")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x17000044")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0x3DCF84", Offset = "0x3DCF84", VA = "0x3DCF84")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60001F2")]
			[Address(RVA = "0x3DCF98", Offset = "0x3DCF98", VA = "0x3DCF98")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x60001F3")]
			[Address(RVA = "0x3DCFA4", Offset = "0x3DCFA4", VA = "0x3DCFA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0x3DCFB8", Offset = "0x3DCFB8", VA = "0x3DCFB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0x3DCFC4", Offset = "0x3DCFC4", VA = "0x3DCFC4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60001F6")]
			[Address(RVA = "0x3DCFD8", Offset = "0x3DCFD8", VA = "0x3DCFD8")]
			set
			{
			}
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x3DCF68", Offset = "0x3DCF68", VA = "0x3DCF68")]
		public GoalMover()
		{
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x3DCFE4", Offset = "0x3DCFE4", VA = "0x3DCFE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x3DD1DC", Offset = "0x3DD1DC", VA = "0x3DD1DC")]
		private void FixedUpdate()
		{
		}
	}
	[Token(Token = "0x2000052")]
	public class LeaderboardManager
	{
		[Token(Token = "0x2000053")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000054")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40001E6")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40001E7")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40001E8")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40001E9")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float m_nextCheckTime;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long m_numWins;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x17000047")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0x3DD940", Offset = "0x3DD940", VA = "0x3DD940")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0x3DE34C", Offset = "0x3DE34C", VA = "0x3DE34C")]
			set
			{
			}
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x3DD654", Offset = "0x3DD654", VA = "0x3DD654")]
		public LeaderboardManager()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x3DD65C", Offset = "0x3DD65C", VA = "0x3DD65C")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x3DD6C0", Offset = "0x3DD6C0", VA = "0x3DD6C0")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x3DD948", Offset = "0x3DD948", VA = "0x3DD948")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x3DD800", Offset = "0x3DD800", VA = "0x3DD800")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x3DE354", Offset = "0x3DE354", VA = "0x3DE354")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x3DEC60", Offset = "0x3DEC60", VA = "0x3DEC60")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}
	}
	[Token(Token = "0x2000055")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x17000049")]
		public override uint Score
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0x3DEDC8", Offset = "0x3DEDC8", VA = "0x3DEDC8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x3DEDC4", Offset = "0x3DEDC4", VA = "0x3DEDC4")]
		public LocalPlayer()
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x3DF1A4", Offset = "0x3DF1A4", VA = "0x3DF1A4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000056")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x2000057")]
		private enum State
		{
			[Token(Token = "0x4000203")]
			UNKNOWN,
			[Token(Token = "0x4000204")]
			NONE,
			[Token(Token = "0x4000205")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4000206")]
			PRACTICING,
			[Token(Token = "0x4000207")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4000208")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4000209")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x400020A")]
			PLAYING_MATCH,
			[Token(Token = "0x400020B")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private State m_currentState;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_localSlot;

		[Token(Token = "0x1700004A")]
		public float MatchStartTime
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0x3DFF04", Offset = "0x3DFF04", VA = "0x3DFF04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000211")]
			[Address(RVA = "0x3DFF24", Offset = "0x3DFF24", VA = "0x3DFF24")]
			private set
			{
			}
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x3DF3A0", Offset = "0x3DF3A0", VA = "0x3DF3A0")]
		public MatchController()
		{
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x3DF438", Offset = "0x3DF438", VA = "0x3DF438")]
		private void Start()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x3DFB28", Offset = "0x3DFB28", VA = "0x3DFB28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x3DF770", Offset = "0x3DF770", VA = "0x3DF770")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x3DFB44", Offset = "0x3DFB44", VA = "0x3DFB44")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x3DFC28", Offset = "0x3DFC28", VA = "0x3DFC28")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x3DFF2C", Offset = "0x3DFF2C", VA = "0x3DFF2C")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x3E02C8", Offset = "0x3E02C8", VA = "0x3E02C8")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x3E0C98", Offset = "0x3E0C98", VA = "0x3E0C98")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x3E0014", Offset = "0x3E0014", VA = "0x3E0014")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x3E0424", Offset = "0x3E0424", VA = "0x3E0424")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x3E109C", Offset = "0x3E109C", VA = "0x3E109C")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x3E10B0", Offset = "0x3E10B0", VA = "0x3E10B0")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x3E12B4", Offset = "0x3E12B4", VA = "0x3E12B4")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x3E12C4", Offset = "0x3E12C4", VA = "0x3E12C4")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x3E1428", Offset = "0x3E1428", VA = "0x3E1428")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x3E1BBC", Offset = "0x3E1BBC", VA = "0x3E1BBC")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x3E0630", Offset = "0x3E0630", VA = "0x3E0630")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x3E0E24", Offset = "0x3E0E24", VA = "0x3E0E24")]
		private void DisplayAchievementFlytext()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class MatchmakingManager
	{
		[Token(Token = "0x2000059")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x200005A")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x400020C")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_matchRoom;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x1700004B")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6000223")]
			[Address(RVA = "0x3E2558", Offset = "0x3E2558", VA = "0x3E2558")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000224")]
			[Address(RVA = "0x3DF6BC", Offset = "0x3DF6BC", VA = "0x3DF6BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6000225")]
			[Address(RVA = "0x3E2560", Offset = "0x3E2560", VA = "0x3E2560")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000226")]
			[Address(RVA = "0x3DF6D8", Offset = "0x3DF6D8", VA = "0x3DF6D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x3E2444", Offset = "0x3E2444", VA = "0x3E2444")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x3E11B8", Offset = "0x3E11B8", VA = "0x3E11B8")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x3E2568", Offset = "0x3E2568", VA = "0x3E2568")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x3E2898", Offset = "0x3E2898", VA = "0x3E2898")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x3E29EC", Offset = "0x3E29EC", VA = "0x3E29EC")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x3E3548", Offset = "0x3E3548", VA = "0x3E3548")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x3E0A8C", Offset = "0x3E0A8C", VA = "0x3E0A8C")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x3E1294", Offset = "0x3E1294", VA = "0x3E1294")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public class P2PManager
	{
		[Token(Token = "0x200005C")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4000224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PeerConnectionState state;

			[Token(Token = "0x4000225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RemotePlayer player;

			[Token(Token = "0x4000226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float remoteTimeOffset;

			[Token(Token = "0x4000227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4000228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6000257")]
			[Address(RVA = "0x3E5AD4", Offset = "0x3E5AD4", VA = "0x3E5AD4")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x200005D")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4000213")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x4000214")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000215")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4000216")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4000217")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000218")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4000219")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x400021A")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x400021B")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x400021C")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x400021D")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x400021E")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x1700004D")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0x3E6B8C", Offset = "0x3E6B8C", VA = "0x3E6B8C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000240")]
			[Address(RVA = "0x3DF6F4", Offset = "0x3DF6F4", VA = "0x3DF6F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x3E3EC0", Offset = "0x3E3EC0", VA = "0x3E3EC0")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x3E408C", Offset = "0x3E408C", VA = "0x3E408C")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x3E322C", Offset = "0x3E322C", VA = "0x3E322C")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x3E3BD0", Offset = "0x3E3BD0", VA = "0x3E3BD0")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x3E5B60", Offset = "0x3E5B60", VA = "0x3E5B60")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x3E5E9C", Offset = "0x3E5E9C", VA = "0x3E5E9C")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x3E64B8", Offset = "0x3E64B8", VA = "0x3E64B8")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x3E4344", Offset = "0x3E4344", VA = "0x3E4344")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x3E6A8C", Offset = "0x3E6A8C", VA = "0x3E6A8C")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x3E67F4", Offset = "0x3E67F4", VA = "0x3E67F4")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x3E4D24", Offset = "0x3E4D24", VA = "0x3E4D24")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x3E6E00", Offset = "0x3E6E00", VA = "0x3E6E00")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x3E4D94", Offset = "0x3E4D94", VA = "0x3E4D94")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x3DF2C4", Offset = "0x3DF2C4", VA = "0x3DF2C4")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x3E7398", Offset = "0x3E7398", VA = "0x3E7398")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x3E55C8", Offset = "0x3E55C8", VA = "0x3E55C8")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x3E4F2C", Offset = "0x3E4F2C", VA = "0x3E4F2C")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x3DEF64", Offset = "0x3DEF64", VA = "0x3DEF64")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x3E54E4", Offset = "0x3E54E4", VA = "0x3E54E4")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x3E7090", Offset = "0x3E7090", VA = "0x3E7090")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x3E70E0", Offset = "0x3E70E0", VA = "0x3E70E0")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x3E7CD8", Offset = "0x3E7CD8", VA = "0x3E7CD8")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x3E669C", Offset = "0x3E669C", VA = "0x3E669C")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x3E6758", Offset = "0x3E6758", VA = "0x3E6758")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x3E6DC0", Offset = "0x3E6DC0", VA = "0x3E6DC0")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x3E74BC", Offset = "0x3E74BC", VA = "0x3E74BC")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x3E7604", Offset = "0x3E7604", VA = "0x3E7604")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x3E7B7C", Offset = "0x3E7B7C", VA = "0x3E7B7C")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x3E7C38", Offset = "0x3E7C38", VA = "0x3E7C38")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x3E7468", Offset = "0x3E7468", VA = "0x3E7468")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x3E75AC", Offset = "0x3E75AC", VA = "0x3E75AC")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200005E")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float lastCollisionTime;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Rigidbody rigidBody;

		[Token(Token = "0x1700004E")]
		public Vector3 velocity
		{
			[Token(Token = "0x600025E")]
			[Address(RVA = "0x3E7578", Offset = "0x3E7578", VA = "0x3E7578")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x3E7E0C", Offset = "0x3E7E0C", VA = "0x3E7E0C")]
		public P2PNetworkBall()
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x3E7E14", Offset = "0x3E7E14", VA = "0x3E7E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x3E7438", Offset = "0x3E7438", VA = "0x3E7438")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x3E79D8", Offset = "0x3E79D8", VA = "0x3E79D8")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x3E7E9C", Offset = "0x3E7E9C", VA = "0x3E7E9C")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x3E8004", Offset = "0x3E8004", VA = "0x3E8004")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x3E816C", Offset = "0x3E816C", VA = "0x3E816C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x3E8188", Offset = "0x3E8188", VA = "0x3E8188")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x200005F")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GoalMover m_goal;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_sendUpdates;

		[Token(Token = "0x1700004F")]
		public bool SendUpdates
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0x3E81D4", Offset = "0x3E81D4", VA = "0x3E81D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x3E81CC", Offset = "0x3E81CC", VA = "0x3E81CC")]
		public P2PNetworkGoal()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x3E81DC", Offset = "0x3E81DC", VA = "0x3E81DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x3E8264", Offset = "0x3E8264", VA = "0x3E8264")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x3E8354", Offset = "0x3E8354", VA = "0x3E8354")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x3E7138", Offset = "0x3E7138", VA = "0x3E7138")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}
	}
	[Token(Token = "0x2000060")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000061")]
		public enum State
		{
			[Token(Token = "0x4000237")]
			INITIALIZING,
			[Token(Token = "0x4000238")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4000239")]
			MATCH_TRANSITION,
			[Token(Token = "0x400023A")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x400023B")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private P2PManager m_p2p;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private State m_currentState;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ulong m_myID;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_myOculusID;

		[Token(Token = "0x17000050")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6000274")]
			[Address(RVA = "0x3DF634", Offset = "0x3DF634", VA = "0x3DF634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6000275")]
			[Address(RVA = "0x3DEEE8", Offset = "0x3DEEE8", VA = "0x3DEEE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6000276")]
			[Address(RVA = "0x3DF6FC", Offset = "0x3DF6FC", VA = "0x3DF6FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x3E23C8", Offset = "0x3E23C8", VA = "0x3E23C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		public static State CurrentState
		{
			[Token(Token = "0x6000278")]
			[Address(RVA = "0x3DCBE0", Offset = "0x3DCBE0", VA = "0x3DCBE0")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000055")]
		public static ulong MyID
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x3DDEB0", Offset = "0x3DDEB0", VA = "0x3DDEB0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000056")]
		public static string MyOculusID
		{
			[Token(Token = "0x600027A")]
			[Address(RVA = "0x3E0B4C", Offset = "0x3E0B4C", VA = "0x3E0B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x3E8450", Offset = "0x3E8450", VA = "0x3E8450")]
		public PlatformManager()
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x3E8458", Offset = "0x3E8458", VA = "0x3E8458")]
		private void Update()
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x3E84A0", Offset = "0x3E84A0", VA = "0x3E84A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x3E86B4", Offset = "0x3E86B4", VA = "0x3E86B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x3E8764", Offset = "0x3E8764", VA = "0x3E8764")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x3E885C", Offset = "0x3E885C", VA = "0x3E885C")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x3E3ABC", Offset = "0x3E3ABC", VA = "0x3E3ABC")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x3E898C", Offset = "0x3E898C", VA = "0x3E898C")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x3E8994", Offset = "0x3E8994", VA = "0x3E8994")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x3E01C4", Offset = "0x3E01C4", VA = "0x3E01C4")]
		public static void TransitionToState(State newState)
		{
		}
	}
	[Token(Token = "0x2000062")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x400023C")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x400023D")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x400023E")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private uint m_score;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Text m_scoreUI;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_nextSpawnTime;

		[Token(Token = "0x17000057")]
		public virtual uint Score
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x3DEF5C", Offset = "0x3DEF5C", VA = "0x3DEF5C", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600027E")]
			[Address(RVA = "0x3DEE10", Offset = "0x3DEE10", VA = "0x3DEE10", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x3E89C8", Offset = "0x3E89C8", VA = "0x3E89C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000059")]
		protected bool HasBall
		{
			[Token(Token = "0x6000280")]
			[Address(RVA = "0x3DBC58", Offset = "0x3DBC58", VA = "0x3DBC58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x3DBB74", Offset = "0x3DBB74", VA = "0x3DBB74")]
		protected Player()
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x3E89D0", Offset = "0x3E89D0", VA = "0x3E89D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x3E76A0", Offset = "0x3E76A0", VA = "0x3E76A0")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x3DBF58", Offset = "0x3DBF58", VA = "0x3DBF58")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x3DBCE4", Offset = "0x3DBCE4", VA = "0x3DBCE4")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x3E8AEC", Offset = "0x3E8AEC", VA = "0x3E8AEC")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000063")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Text m_nameText;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x1700005A")]
		public Player Player
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0x3E2350", Offset = "0x3E2350", VA = "0x3E2350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public Text NameText
		{
			[Token(Token = "0x6000288")]
			[Address(RVA = "0x3E243C", Offset = "0x3E243C", VA = "0x3E243C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x3E8C68", Offset = "0x3E8C68", VA = "0x3E8C68")]
		public PlayerArea()
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x3E8C70", Offset = "0x3E8C70", VA = "0x3E8C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x600028A")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}
	}
	[Token(Token = "0x2000064")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User m_user;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x1700005C")]
		public User User
		{
			[Token(Token = "0x600028C")]
			[Address(RVA = "0x3E0E1C", Offset = "0x3E0E1C", VA = "0x3E0E1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public ulong ID
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0x3E5AB0", Offset = "0x3E5AB0", VA = "0x3E5AB0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700005E")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x600028E")]
			[Address(RVA = "0x3E7130", Offset = "0x3E7130", VA = "0x3E7130")]
			get
			{
				return null;
			}
			[Token(Token = "0x600028F")]
			[Address(RVA = "0x3E8DEC", Offset = "0x3E8DEC", VA = "0x3E8DEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public override uint Score
		{
			[Token(Token = "0x6000290")]
			[Address(RVA = "0x3E8DF4", Offset = "0x3E8DF4", VA = "0x3E8DF4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x3E8DE8", Offset = "0x3E8DE8", VA = "0x3E8DE8")]
		public RemotePlayer()
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x3E7CD4", Offset = "0x3E7CD4", VA = "0x3E7CD4")]
		public void ReceiveRemoteScore(uint score)
		{
		}
	}
	[Token(Token = "0x2000065")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Button m_currentButton;

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x3E8DF8", Offset = "0x3E8DF8", VA = "0x3E8DF8")]
		public VREyeRaycaster()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x3E8E00", Offset = "0x3E8E00", VA = "0x3E8E00")]
		private void Update()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x2000066")]
	public class P2PManager
	{
		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_remoteID;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 receivedPosition;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion receivedRotation;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float receivedTime;

		[Token(Token = "0x17000060")]
		public bool Connected
		{
			[Token(Token = "0x6000297")]
			[Address(RVA = "0x3E94A0", Offset = "0x3E94A0", VA = "0x3E94A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000061")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0x3E9EB8", Offset = "0x3E9EB8", VA = "0x3E9EB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x3E90AC", Offset = "0x3E90AC", VA = "0x3E90AC")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x3E9284", Offset = "0x3E9284", VA = "0x3E9284")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x3E9464", Offset = "0x3E9464", VA = "0x3E9464")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x3E94B0", Offset = "0x3E94B0", VA = "0x3E94B0")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x3E9760", Offset = "0x3E9760", VA = "0x3E9760")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x3E9EF8", Offset = "0x3E9EF8", VA = "0x3E9EF8")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x3EA168", Offset = "0x3EA168", VA = "0x3EA168")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x3EA224", Offset = "0x3EA224", VA = "0x3EA224")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x2000067")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000068")]
		public enum State
		{
			[Token(Token = "0x4000267")]
			INITIALIZING,
			[Token(Token = "0x4000268")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4000269")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x400026A")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x400026B")]
			HANGUP
		}

		[Token(Token = "0x2000069")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F740", Offset = "0x23F740")]
		private sealed class <SetActiveInvites>c__AnonStorey0
		{
			[Token(Token = "0x400026C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal RoomManager.Invite invite;

			[Token(Token = "0x60002B2")]
			[Address(RVA = "0x3ECEBC", Offset = "0x3ECEBC", VA = "0x3ECEBC")]
			public <SetActiveInvites>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60002B3")]
			[Address(RVA = "0x3ECEC8", Offset = "0x3ECEC8", VA = "0x3ECEC8")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private State m_currentState;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_myID;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_myOculusID;

		[Token(Token = "0x17000062")]
		public static State CurrentState
		{
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0x3EBCB4", Offset = "0x3EBCB4", VA = "0x3EBCB4")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000063")]
		public static ulong MyID
		{
			[Token(Token = "0x60002A8")]
			[Address(RVA = "0x3E932C", Offset = "0x3E932C", VA = "0x3E932C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000064")]
		public static string MyOculusID
		{
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0x3EBD54", Offset = "0x3EBD54", VA = "0x3EBD54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x3EA8AC", Offset = "0x3EA8AC", VA = "0x3EA8AC")]
		public PlatformManager()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x3EA8B4", Offset = "0x3EA8B4", VA = "0x3EA8B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x3EABB8", Offset = "0x3EABB8", VA = "0x3EABB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x3EB5E4", Offset = "0x3EB5E4", VA = "0x3EB5E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x3EB694", Offset = "0x3EB694", VA = "0x3EB694")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x3EB8CC", Offset = "0x3EB8CC", VA = "0x3EB8CC")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x3EBAA0", Offset = "0x3EBAA0", VA = "0x3EBAA0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x3EB7B8", Offset = "0x3EB7B8", VA = "0x3EB7B8")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x3EBF24", Offset = "0x3EBF24", VA = "0x3EBF24")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x3EC098", Offset = "0x3EC098", VA = "0x3EC098")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x3EC0C0", Offset = "0x3EC0C0", VA = "0x3EC0C0")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x3EC0C8", Offset = "0x3EC0C8", VA = "0x3EC0C8")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x3EAE34", Offset = "0x3EAE34", VA = "0x3EAE34")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x3E9AE0", Offset = "0x3E9AE0", VA = "0x3E9AE0")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x3EC424", Offset = "0x3EC424", VA = "0x3EC424")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class RoomManager
	{
		[Token(Token = "0x200006B")]
		public struct Invite
		{
			[Token(Token = "0x4000273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4000274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x2B7C30", Offset = "0x2B7C30", VA = "0x2B7C30")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_roomID;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private User m_remoteUser;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_nextPollTime;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Collections.Generic.HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<Invite> m_invites;

		[Token(Token = "0x17000065")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x60002B5")]
			[Address(RVA = "0x3EC2F8", Offset = "0x3EC2F8", VA = "0x3EC2F8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000066")]
		public string RemoteOculusID
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0x3ECF50", Offset = "0x3ECF50", VA = "0x3ECF50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x60002BC")]
			[Address(RVA = "0x3EA9E0", Offset = "0x3EA9E0", VA = "0x3EA9E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x3EB40C", Offset = "0x3EB40C", VA = "0x3EB40C")]
		public RoomManager()
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x3ECFF4", Offset = "0x3ECFF4", VA = "0x3ECFF4")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x3EBA6C", Offset = "0x3EBA6C", VA = "0x3EBA6C")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x3EBFC4", Offset = "0x3EBFC4", VA = "0x3EBFC4")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x3ED1B4", Offset = "0x3ED1B4", VA = "0x3ED1B4")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x3ED350", Offset = "0x3ED350", VA = "0x3ED350")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x3EAA24", Offset = "0x3EAA24", VA = "0x3EAA24")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x3ED3F4", Offset = "0x3ED3F4", VA = "0x3ED3F4")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x3ED958", Offset = "0x3ED958", VA = "0x3ED958")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x3EC21C", Offset = "0x3EC21C", VA = "0x3EC21C")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x3EDCB4", Offset = "0x3EDCB4", VA = "0x3EDCB4")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x3EE4FC", Offset = "0x3EE4FC", VA = "0x3EE4FC")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x3EBB28", Offset = "0x3EBB28", VA = "0x3EBB28")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class VoipManager
	{
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_remoteID;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000068")]
		public bool Connected
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x3EC414", Offset = "0x3EC414", VA = "0x3EC414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x3EB504", Offset = "0x3EB504", VA = "0x3EB504")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x3EC310", Offset = "0x3EC310", VA = "0x3EC310")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x3EBBD4", Offset = "0x3EBBD4", VA = "0x3EBBD4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x3EF3FC", Offset = "0x3EF3FC", VA = "0x3EF3FC")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x3EF770", Offset = "0x3EF770", VA = "0x3EF770")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x200006D")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Button m_currentButton;

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x3EED94", Offset = "0x3EED94", VA = "0x3EED94")]
		public VREyeRaycaster()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x3EED9C", Offset = "0x3EED9C", VA = "0x3EED9C")]
		private void Update()
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x200006E")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x735D28", Offset = "0x735D28", VA = "0x735D28")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x735E90", Offset = "0x735E90", VA = "0x735E90")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x736018", Offset = "0x736018", VA = "0x736018")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x736198", Offset = "0x736198", VA = "0x736198")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x7361F0", Offset = "0x7361F0", VA = "0x7361F0", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x200006F")]
	public enum AbuseReportType
	{
		[Token(Token = "0x400027C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2406B8", Offset = "0x2406B8")]
		Unknown,
		[Token(Token = "0x400027D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2406EC", Offset = "0x2406EC")]
		Object,
		[Token(Token = "0x400027E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240720", Offset = "0x240720")]
		User
	}
	[Token(Token = "0x2000070")]
	public enum AchievementType
	{
		[Token(Token = "0x4000280")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240754", Offset = "0x240754")]
		Unknown,
		[Token(Token = "0x4000281")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240788", Offset = "0x240788")]
		Simple,
		[Token(Token = "0x4000282")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2407BC", Offset = "0x2407BC")]
		Bitfield,
		[Token(Token = "0x4000283")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2407F0", Offset = "0x2407F0")]
		Count
	}
	[Token(Token = "0x2000071")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x7377D8", Offset = "0x7377D8", VA = "0x7377D8")]
		public AndroidPlatform()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x7377E0", Offset = "0x7377E0", VA = "0x7377E0")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x737A34", Offset = "0x737A34", VA = "0x737A34")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}
	}
	[Token(Token = "0x2000072")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x738364", Offset = "0x738364", VA = "0x738364")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x7384C8", Offset = "0x7384C8", VA = "0x7384C8")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x737FF4", Offset = "0x737FF4", VA = "0x737FF4")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x738620", Offset = "0x738620", VA = "0x738620", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
}
[Token(Token = "0x2000073")]
public class BufferedAudioStream
{
	[Token(Token = "0x4000285")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AudioSource audio;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] audioBuffer;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int writePos;

	[Token(Token = "0x4000289")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x400028A")]
	private const int sampleRate = 48000;

	[Token(Token = "0x400028B")]
	private const int bufferSize = 12000;

	[Token(Token = "0x400028C")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float playbackDelayRemaining;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float remainingBufferTime;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x393EC8", Offset = "0x393EC8", VA = "0x393EC8")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x394060", Offset = "0x394060", VA = "0x394060")]
	public void Update()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x393FF8", Offset = "0x393FF8", VA = "0x393FF8")]
	private void Stop()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x39431C", Offset = "0x39431C", VA = "0x39431C")]
	public void AddData(float[] samples)
	{
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000074")]
	public static class Callback
	{
		[Token(Token = "0x2000075")]
		private class RequestCallback
		{
			[Token(Token = "0x4000293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Message.Callback messageCallback;

			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x55BBA0", Offset = "0x55BBA0", VA = "0x55BBA0")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x60002E8")]
			[Address(RVA = "0x55B180", Offset = "0x55B180", VA = "0x55B180")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x60002E9")]
			[Address(RVA = "0x55BBA8", Offset = "0x55BBA8", VA = "0x55BBA8", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x2000076")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x60002EA")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x60002EB")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x60002DE")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x55B038", Offset = "0x55B038", VA = "0x55B038")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x55B1A0", Offset = "0x55B1A0", VA = "0x55B1A0")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x55B28C", Offset = "0x55B28C", VA = "0x55B28C")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x55B6AC", Offset = "0x55B6AC", VA = "0x55B6AC")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x55B760", Offset = "0x55B760", VA = "0x55B760")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x55B854", Offset = "0x55B854", VA = "0x55B854")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x55B3FC", Offset = "0x55B3FC", VA = "0x55B3FC")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000077")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x55BF78", Offset = "0x55BF78", VA = "0x55BF78")]
		public CallbackRunner()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x55BF88", Offset = "0x55BF88", VA = "0x55BF88")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x55C064", Offset = "0x55C064", VA = "0x55C064")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x55C19C", Offset = "0x55C19C", VA = "0x55C19C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x55C250", Offset = "0x55C250", VA = "0x55C250")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x55C254", Offset = "0x55C254", VA = "0x55C254")]
		private void OnApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000078")]
	public class CAPI
	{
		[Token(Token = "0x2000079")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4000299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x400029A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x400029B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stringValue_;

			[Token(Token = "0x400029C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int intValue_;

			[Token(Token = "0x400029D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double doubleValue_;

			[Token(Token = "0x6000646")]
			[Address(RVA = "0x2B8938", Offset = "0x2B8938", VA = "0x2B8938")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6000647")]
			[Address(RVA = "0x2B8958", Offset = "0x2B8958", VA = "0x2B8958")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6000648")]
			[Address(RVA = "0x2B897C", Offset = "0x2B897C", VA = "0x2B897C")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x200007A")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x400029E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x400029F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40002A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr parameterArray;

			[Token(Token = "0x40002A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint parameterArrayCount;

			[Token(Token = "0x6000649")]
			[Address(RVA = "0x2B8A38", Offset = "0x2B8A38", VA = "0x2B8A38")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x200007B")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x40002A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x40002A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint dataArrayCount;

			[Token(Token = "0x40002A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr criterionArray;

			[Token(Token = "0x40002A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x200007C")]
		public struct OculusInitParams
		{
			[Token(Token = "0x40002A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x40002A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string email;

			[Token(Token = "0x40002A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string password;

			[Token(Token = "0x40002A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong appId;

			[Token(Token = "0x40002AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x200007D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x23F750", Offset = "0x23F750")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4000296")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000298")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x73A308", Offset = "0x73A308", VA = "0x73A308")]
		public CAPI()
		{
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x73A310", Offset = "0x73A310", VA = "0x73A310")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x73A51C", Offset = "0x73A51C", VA = "0x73A51C")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x73ADDC", Offset = "0x73ADDC", VA = "0x73ADDC")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x73AED0", Offset = "0x73AED0", VA = "0x73AED0")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x73B2DC", Offset = "0x73B2DC", VA = "0x73B2DC")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x73B430", Offset = "0x73B430", VA = "0x73B430")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x73B4CC", Offset = "0x73B4CC", VA = "0x73B4CC")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x73B56C", Offset = "0x73B56C", VA = "0x73B56C")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x73B670", Offset = "0x73B670", VA = "0x73B670")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x73B730", Offset = "0x73B730", VA = "0x73B730")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x7378F8", Offset = "0x7378F8", VA = "0x7378F8")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x73B938", Offset = "0x73B938", VA = "0x73B938")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x737BA0", Offset = "0x737BA0", VA = "0x737BA0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x73BA48", Offset = "0x73BA48", VA = "0x73BA48")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x73BB60", Offset = "0x73BB60", VA = "0x73BB60")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x73BCC0", Offset = "0x73BCC0", VA = "0x73BCC0")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x73BDE8", Offset = "0x73BDE8", VA = "0x73BDE8")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x73BEF8", Offset = "0x73BEF8", VA = "0x73BEF8")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x73C018", Offset = "0x73C018", VA = "0x73C018")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x73C120", Offset = "0x73C120", VA = "0x73C120")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x73C1A0", Offset = "0x73C1A0", VA = "0x73C1A0")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x73C278", Offset = "0x73C278", VA = "0x73C278")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x73C370", Offset = "0x73C370", VA = "0x73C370")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x73C478", Offset = "0x73C478", VA = "0x73C478")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x600030B")]
		[Address(RVA = "0x73C560", Offset = "0x73C560", VA = "0x73C560")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x73C668", Offset = "0x73C668", VA = "0x73C668")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x73C780", Offset = "0x73C780", VA = "0x73C780")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x73C888", Offset = "0x73C888", VA = "0x73C888")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x73C9A0", Offset = "0x73C9A0", VA = "0x73C9A0")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x73CA90", Offset = "0x73CA90", VA = "0x73CA90")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x73CB90", Offset = "0x73CB90", VA = "0x73CB90")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x73CCA8", Offset = "0x73CCA8", VA = "0x73CCA8")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x73CD90", Offset = "0x73CD90", VA = "0x73CD90")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x73CE78", Offset = "0x73CE78", VA = "0x73CE78")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x737508", Offset = "0x737508", VA = "0x737508")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x73CF50", Offset = "0x73CF50", VA = "0x73CF50")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x73D050", Offset = "0x73D050", VA = "0x73D050")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x73D148", Offset = "0x73D148", VA = "0x73D148")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x73D254", Offset = "0x73D254", VA = "0x73D254")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x73D6A0", Offset = "0x73D6A0", VA = "0x73D6A0")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x7381E8", Offset = "0x7381E8", VA = "0x7381E8")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x73D7C0", Offset = "0x73D7C0", VA = "0x73D7C0")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x73D8F0", Offset = "0x73D8F0", VA = "0x73D8F0")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x73DAB0", Offset = "0x73DAB0", VA = "0x73DAB0")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x73DBE0", Offset = "0x73DBE0", VA = "0x73DBE0")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x73DCF0", Offset = "0x73DCF0", VA = "0x73DCF0")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x73DD78", Offset = "0x73DD78", VA = "0x73DD78")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x73DE60", Offset = "0x73DE60", VA = "0x73DE60")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x73DF70", Offset = "0x73DF70", VA = "0x73DF70")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x73E050", Offset = "0x73E050", VA = "0x73E050")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x73E158", Offset = "0x73E158", VA = "0x73E158")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x73E230", Offset = "0x73E230", VA = "0x73E230")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x73E340", Offset = "0x73E340", VA = "0x73E340")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x73E460", Offset = "0x73E460", VA = "0x73E460")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x73E568", Offset = "0x73E568", VA = "0x73E568")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x73E668", Offset = "0x73E668", VA = "0x73E668")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x73E7A8", Offset = "0x73E7A8", VA = "0x73E7A8")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x73E8A8", Offset = "0x73E8A8", VA = "0x73E8A8")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x73E988", Offset = "0x73E988", VA = "0x73E988")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x73EA68", Offset = "0x73EA68", VA = "0x73EA68")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x73EB50", Offset = "0x73EB50", VA = "0x73EB50")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x73EC28", Offset = "0x73EC28", VA = "0x73EC28")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x73ED38", Offset = "0x73ED38", VA = "0x73ED38")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x73EE28", Offset = "0x73EE28", VA = "0x73EE28")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x73EF48", Offset = "0x73EF48", VA = "0x73EF48")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x73F020", Offset = "0x73F020", VA = "0x73F020")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x73F148", Offset = "0x73F148", VA = "0x73F148")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x73F278", Offset = "0x73F278", VA = "0x73F278")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x73F390", Offset = "0x73F390", VA = "0x73F390")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x73F4A0", Offset = "0x73F4A0", VA = "0x73F4A0")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x73F5B8", Offset = "0x73F5B8", VA = "0x73F5B8")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x73F6D8", Offset = "0x73F6D8", VA = "0x73F6D8")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x73F7F8", Offset = "0x73F7F8", VA = "0x73F7F8")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x73F8E8", Offset = "0x73F8E8", VA = "0x73F8E8")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x73F9C8", Offset = "0x73F9C8", VA = "0x73F9C8")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x73FAA0", Offset = "0x73FAA0", VA = "0x73FAA0")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x73FB80", Offset = "0x73FB80", VA = "0x73FB80")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x73FC68", Offset = "0x73FC68", VA = "0x73FC68")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x73FD48", Offset = "0x73FD48", VA = "0x73FD48")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x73FE58", Offset = "0x73FE58", VA = "0x73FE58")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x7364C8", Offset = "0x7364C8", VA = "0x7364C8")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x73FF60", Offset = "0x73FF60", VA = "0x73FF60")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x7366C8", Offset = "0x7366C8", VA = "0x7366C8")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x740050", Offset = "0x740050", VA = "0x740050")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x7368C8", Offset = "0x7368C8", VA = "0x7368C8")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x736AB0", Offset = "0x736AB0", VA = "0x736AB0")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x736CB0", Offset = "0x736CB0", VA = "0x736CB0")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x736FA0", Offset = "0x736FA0", VA = "0x736FA0")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x737274", Offset = "0x737274", VA = "0x737274")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x740138", Offset = "0x740138", VA = "0x740138")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x740210", Offset = "0x740210", VA = "0x740210")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x740318", Offset = "0x740318", VA = "0x740318")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x737DB8", Offset = "0x737DB8", VA = "0x737DB8")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x738050", Offset = "0x738050", VA = "0x738050")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x740400", Offset = "0x740400", VA = "0x740400")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x7404E8", Offset = "0x7404E8", VA = "0x7404E8")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x7405C8", Offset = "0x7405C8", VA = "0x7405C8")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x740698", Offset = "0x740698", VA = "0x740698")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x7388F0", Offset = "0x7388F0", VA = "0x7388F0")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x738B20", Offset = "0x738B20", VA = "0x738B20")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x738D50", Offset = "0x738D50", VA = "0x738D50")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x740788", Offset = "0x740788", VA = "0x740788")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x738F38", Offset = "0x738F38", VA = "0x738F38")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x739170", Offset = "0x739170", VA = "0x739170")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x739364", Offset = "0x739364", VA = "0x739364")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x740868", Offset = "0x740868", VA = "0x740868")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x739550", Offset = "0x739550", VA = "0x739550")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x739750", Offset = "0x739750", VA = "0x739750")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x73994C", Offset = "0x73994C", VA = "0x73994C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x740948", Offset = "0x740948", VA = "0x740948")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x739B28", Offset = "0x739B28", VA = "0x739B28")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000362")]
		[Address(RVA = "0x739D40", Offset = "0x739D40", VA = "0x739D40")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000363")]
		[Address(RVA = "0x739F70", Offset = "0x739F70", VA = "0x739F70")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x73A1A0", Offset = "0x73A1A0", VA = "0x73A1A0")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x740A30", Offset = "0x740A30", VA = "0x740A30")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x740B0C", Offset = "0x740B0C", VA = "0x740B0C")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x740C00", Offset = "0x740C00", VA = "0x740C00")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x740CE8", Offset = "0x740CE8", VA = "0x740CE8")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x740DF8", Offset = "0x740DF8", VA = "0x740DF8")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x740F00", Offset = "0x740F00", VA = "0x740F00")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x74100C", Offset = "0x74100C", VA = "0x74100C")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x741100", Offset = "0x741100", VA = "0x741100")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x7411E0", Offset = "0x7411E0", VA = "0x7411E0")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x7412D8", Offset = "0x7412D8", VA = "0x7412D8")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x7413B8", Offset = "0x7413B8", VA = "0x7413B8")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x741488", Offset = "0x741488", VA = "0x741488")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x74156C", Offset = "0x74156C", VA = "0x74156C")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x741660", Offset = "0x741660", VA = "0x741660")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x741750", Offset = "0x741750", VA = "0x741750")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x741820", Offset = "0x741820", VA = "0x741820")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x7418FC", Offset = "0x7418FC", VA = "0x7418FC")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x7419F0", Offset = "0x7419F0", VA = "0x7419F0")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x741AD8", Offset = "0x741AD8", VA = "0x741AD8")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x741BF0", Offset = "0x741BF0", VA = "0x741BF0")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x741CE4", Offset = "0x741CE4", VA = "0x741CE4")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x741DF8", Offset = "0x741DF8", VA = "0x741DF8")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x741EEC", Offset = "0x741EEC", VA = "0x741EEC")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x742028", Offset = "0x742028", VA = "0x742028")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x742138", Offset = "0x742138", VA = "0x742138")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x742218", Offset = "0x742218", VA = "0x742218")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x7422F4", Offset = "0x7422F4", VA = "0x7422F4")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x7423C8", Offset = "0x7423C8", VA = "0x7423C8")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x7424A4", Offset = "0x7424A4", VA = "0x7424A4")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x742578", Offset = "0x742578", VA = "0x742578")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x742650", Offset = "0x742650", VA = "0x742650")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x74272C", Offset = "0x74272C", VA = "0x74272C")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x742800", Offset = "0x742800", VA = "0x742800")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x742910", Offset = "0x742910", VA = "0x742910")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x7429E0", Offset = "0x7429E0", VA = "0x7429E0")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x742AF0", Offset = "0x742AF0", VA = "0x742AF0")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x742BC0", Offset = "0x742BC0", VA = "0x742BC0")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x742CC8", Offset = "0x742CC8", VA = "0x742CC8")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x742DC0", Offset = "0x742DC0", VA = "0x742DC0")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x742ED8", Offset = "0x742ED8", VA = "0x742ED8")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x743070", Offset = "0x743070", VA = "0x743070")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x74325C", Offset = "0x74325C", VA = "0x74325C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x743330", Offset = "0x743330", VA = "0x743330")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x743438", Offset = "0x743438", VA = "0x743438")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x743508", Offset = "0x743508", VA = "0x743508")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x7435E0", Offset = "0x7435E0", VA = "0x7435E0")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x7437D8", Offset = "0x7437D8", VA = "0x7437D8")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x7438B0", Offset = "0x7438B0", VA = "0x7438B0")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x743990", Offset = "0x743990", VA = "0x743990")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x743A60", Offset = "0x743A60", VA = "0x743A60")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x743B40", Offset = "0x743B40", VA = "0x743B40")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x743C14", Offset = "0x743C14", VA = "0x743C14")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x743CE8", Offset = "0x743CE8", VA = "0x743CE8")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x743DC4", Offset = "0x743DC4", VA = "0x743DC4")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x743EB8", Offset = "0x743EB8", VA = "0x743EB8")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x743FAC", Offset = "0x743FAC", VA = "0x743FAC")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x7440A0", Offset = "0x7440A0", VA = "0x7440A0")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x7441A0", Offset = "0x7441A0", VA = "0x7441A0")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x744280", Offset = "0x744280", VA = "0x744280")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x744364", Offset = "0x744364", VA = "0x744364")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x744460", Offset = "0x744460", VA = "0x744460")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x744570", Offset = "0x744570", VA = "0x744570")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x744644", Offset = "0x744644", VA = "0x744644")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x744718", Offset = "0x744718", VA = "0x744718")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x744808", Offset = "0x744808", VA = "0x744808")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x7448E0", Offset = "0x7448E0", VA = "0x7448E0")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x7449B8", Offset = "0x7449B8", VA = "0x7449B8")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x744A98", Offset = "0x744A98", VA = "0x744A98")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x744B80", Offset = "0x744B80", VA = "0x744B80")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x744C60", Offset = "0x744C60", VA = "0x744C60")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x744D38", Offset = "0x744D38", VA = "0x744D38")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x744E30", Offset = "0x744E30", VA = "0x744E30")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x744F14", Offset = "0x744F14", VA = "0x744F14")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x744FF0", Offset = "0x744FF0", VA = "0x744FF0")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x7450D0", Offset = "0x7450D0", VA = "0x7450D0")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x7451A8", Offset = "0x7451A8", VA = "0x7451A8")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x745288", Offset = "0x745288", VA = "0x745288")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x745380", Offset = "0x745380", VA = "0x745380")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x745460", Offset = "0x745460", VA = "0x745460")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x745564", Offset = "0x745564", VA = "0x745564")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x745658", Offset = "0x745658", VA = "0x745658")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x745758", Offset = "0x745758", VA = "0x745758")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x745830", Offset = "0x745830", VA = "0x745830")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x745920", Offset = "0x745920", VA = "0x745920")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x745A00", Offset = "0x745A00", VA = "0x745A00")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x745AEC", Offset = "0x745AEC", VA = "0x745AEC")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x745BC8", Offset = "0x745BC8", VA = "0x745BC8")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x745CAC", Offset = "0x745CAC", VA = "0x745CAC")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x745D88", Offset = "0x745D88", VA = "0x745D88")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x745E68", Offset = "0x745E68", VA = "0x745E68")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x745F40", Offset = "0x745F40", VA = "0x745F40")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x746028", Offset = "0x746028", VA = "0x746028")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x746118", Offset = "0x746118", VA = "0x746118")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x746208", Offset = "0x746208", VA = "0x746208")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x7462E4", Offset = "0x7462E4", VA = "0x7462E4")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x7463C8", Offset = "0x7463C8", VA = "0x7463C8")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x7464B8", Offset = "0x7464B8", VA = "0x7464B8")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x7465E0", Offset = "0x7465E0", VA = "0x7465E0")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x7466D0", Offset = "0x7466D0", VA = "0x7466D0")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x7468B0", Offset = "0x7468B0", VA = "0x7468B0")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x746994", Offset = "0x746994", VA = "0x746994")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x746A90", Offset = "0x746A90", VA = "0x746A90")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x746B80", Offset = "0x746B80", VA = "0x746B80")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x746C58", Offset = "0x746C58", VA = "0x746C58")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x746D40", Offset = "0x746D40", VA = "0x746D40")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x746E38", Offset = "0x746E38", VA = "0x746E38")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x746F30", Offset = "0x746F30", VA = "0x746F30")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x747038", Offset = "0x747038", VA = "0x747038")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x747138", Offset = "0x747138", VA = "0x747138")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x747220", Offset = "0x747220", VA = "0x747220")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x747340", Offset = "0x747340", VA = "0x747340")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x747450", Offset = "0x747450", VA = "0x747450")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x747560", Offset = "0x747560", VA = "0x747560")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x747668", Offset = "0x747668", VA = "0x747668")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x747748", Offset = "0x747748", VA = "0x747748")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x747858", Offset = "0x747858", VA = "0x747858")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x747948", Offset = "0x747948", VA = "0x747948")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x747A38", Offset = "0x747A38", VA = "0x747A38")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x747B40", Offset = "0x747B40", VA = "0x747B40")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x747C40", Offset = "0x747C40", VA = "0x747C40")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x747D28", Offset = "0x747D28", VA = "0x747D28")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x747E00", Offset = "0x747E00", VA = "0x747E00")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x747EE0", Offset = "0x747EE0", VA = "0x747EE0")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x747FB8", Offset = "0x747FB8", VA = "0x747FB8")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x7480D4", Offset = "0x7480D4", VA = "0x7480D4")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x7481B8", Offset = "0x7481B8", VA = "0x7481B8")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x7482A0", Offset = "0x7482A0", VA = "0x7482A0")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x7483B0", Offset = "0x7483B0", VA = "0x7483B0")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x7484C8", Offset = "0x7484C8", VA = "0x7484C8")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x7485F0", Offset = "0x7485F0", VA = "0x7485F0")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x7486E0", Offset = "0x7486E0", VA = "0x7486E0")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x7487EC", Offset = "0x7487EC", VA = "0x7487EC")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x7488D0", Offset = "0x7488D0", VA = "0x7488D0")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x7489B8", Offset = "0x7489B8", VA = "0x7489B8")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x748AA8", Offset = "0x748AA8", VA = "0x748AA8")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x748C78", Offset = "0x748C78", VA = "0x748C78")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x748D70", Offset = "0x748D70", VA = "0x748D70")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x748E98", Offset = "0x748E98", VA = "0x748E98")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x748F90", Offset = "0x748F90", VA = "0x748F90")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x749070", Offset = "0x749070", VA = "0x749070")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x749158", Offset = "0x749158", VA = "0x749158")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x749228", Offset = "0x749228", VA = "0x749228")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x749310", Offset = "0x749310", VA = "0x749310")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x749418", Offset = "0x749418", VA = "0x749418")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x749520", Offset = "0x749520", VA = "0x749520")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x749600", Offset = "0x749600", VA = "0x749600")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x749708", Offset = "0x749708", VA = "0x749708")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x7497E0", Offset = "0x7497E0", VA = "0x7497E0")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x7498C0", Offset = "0x7498C0", VA = "0x7498C0")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x7499B8", Offset = "0x7499B8", VA = "0x7499B8")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x749AD8", Offset = "0x749AD8", VA = "0x749AD8")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x749BE0", Offset = "0x749BE0", VA = "0x749BE0")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x749CE0", Offset = "0x749CE0", VA = "0x749CE0")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x749E00", Offset = "0x749E00", VA = "0x749E00")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x749EF0", Offset = "0x749EF0", VA = "0x749EF0")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x74A010", Offset = "0x74A010", VA = "0x74A010")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x74A130", Offset = "0x74A130", VA = "0x74A130")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x74A220", Offset = "0x74A220", VA = "0x74A220")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x74A308", Offset = "0x74A308", VA = "0x74A308")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x74A3E0", Offset = "0x74A3E0", VA = "0x74A3E0")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x74A4E0", Offset = "0x74A4E0", VA = "0x74A4E0")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x74A5B8", Offset = "0x74A5B8", VA = "0x74A5B8")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x74A698", Offset = "0x74A698", VA = "0x74A698")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x74A780", Offset = "0x74A780", VA = "0x74A780")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x74A87C", Offset = "0x74A87C", VA = "0x74A87C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x74A970", Offset = "0x74A970", VA = "0x74A970")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x74AA74", Offset = "0x74AA74", VA = "0x74AA74")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x74AB58", Offset = "0x74AB58", VA = "0x74AB58")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x74AC58", Offset = "0x74AC58", VA = "0x74AC58")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x74AD3C", Offset = "0x74AD3C", VA = "0x74AD3C")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x74ADC0", Offset = "0x74ADC0", VA = "0x74ADC0")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x74AEB0", Offset = "0x74AEB0", VA = "0x74AEB0")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x74AF9C", Offset = "0x74AF9C", VA = "0x74AF9C")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x74B020", Offset = "0x74B020", VA = "0x74B020")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x74B108", Offset = "0x74B108", VA = "0x74B108")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x74B1F0", Offset = "0x74B1F0", VA = "0x74B1F0")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x74B2D8", Offset = "0x74B2D8", VA = "0x74B2D8")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x74B3CC", Offset = "0x74B3CC", VA = "0x74B3CC")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x74B450", Offset = "0x74B450", VA = "0x74B450")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x74B540", Offset = "0x74B540", VA = "0x74B540")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000419")]
		[Address(RVA = "0x74B628", Offset = "0x74B628", VA = "0x74B628")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x74B71C", Offset = "0x74B71C", VA = "0x74B71C")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x74B7A0", Offset = "0x74B7A0", VA = "0x74B7A0")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x74B888", Offset = "0x74B888", VA = "0x74B888")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x74B970", Offset = "0x74B970", VA = "0x74B970")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x74BA60", Offset = "0x74BA60", VA = "0x74BA60")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x74BAE8", Offset = "0x74BAE8", VA = "0x74BAE8")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x74BBC8", Offset = "0x74BBC8", VA = "0x74BBC8")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x74BC70", Offset = "0x74BC70", VA = "0x74BC70")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x74BD58", Offset = "0x74BD58", VA = "0x74BD58")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x74BE48", Offset = "0x74BE48", VA = "0x74BE48")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x74BED0", Offset = "0x74BED0", VA = "0x74BED0")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x74BFB8", Offset = "0x74BFB8", VA = "0x74BFB8")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x74C0A0", Offset = "0x74C0A0", VA = "0x74C0A0")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x74C198", Offset = "0x74C198", VA = "0x74C198")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x74C288", Offset = "0x74C288", VA = "0x74C288")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x74C310", Offset = "0x74C310", VA = "0x74C310")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x74C3F0", Offset = "0x74C3F0", VA = "0x74C3F0")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x74C500", Offset = "0x74C500", VA = "0x74C500")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x74C5E8", Offset = "0x74C5E8", VA = "0x74C5E8")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x74C670", Offset = "0x74C670", VA = "0x74C670")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x74C758", Offset = "0x74C758", VA = "0x74C758")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x74C840", Offset = "0x74C840", VA = "0x74C840")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x74C8C8", Offset = "0x74C8C8", VA = "0x74C8C8")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x74C9B0", Offset = "0x74C9B0", VA = "0x74C9B0")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x74CA8C", Offset = "0x74CA8C", VA = "0x74CA8C")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x74CB10", Offset = "0x74CB10", VA = "0x74CB10")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x74CBF0", Offset = "0x74CBF0", VA = "0x74CBF0")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000435")]
		[Address(RVA = "0x74CC78", Offset = "0x74CC78", VA = "0x74CC78")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x74CD5C", Offset = "0x74CD5C", VA = "0x74CD5C")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000437")]
		[Address(RVA = "0x74CDE0", Offset = "0x74CDE0", VA = "0x74CDE0")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x74CEC0", Offset = "0x74CEC0", VA = "0x74CEC0")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000439")]
		[Address(RVA = "0x74CF48", Offset = "0x74CF48", VA = "0x74CF48")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043A")]
		[Address(RVA = "0x74D028", Offset = "0x74D028", VA = "0x74D028")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x74D108", Offset = "0x74D108", VA = "0x74D108")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x74D190", Offset = "0x74D190", VA = "0x74D190")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x74D270", Offset = "0x74D270", VA = "0x74D270")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600043E")]
		[Address(RVA = "0x74D360", Offset = "0x74D360", VA = "0x74D360")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043F")]
		[Address(RVA = "0x74D440", Offset = "0x74D440", VA = "0x74D440")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x74D530", Offset = "0x74D530", VA = "0x74D530")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x74D618", Offset = "0x74D618", VA = "0x74D618")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x74D6A0", Offset = "0x74D6A0", VA = "0x74D6A0")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x74D788", Offset = "0x74D788", VA = "0x74D788")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x74D878", Offset = "0x74D878", VA = "0x74D878")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x74D970", Offset = "0x74D970", VA = "0x74D970")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x74DA60", Offset = "0x74DA60", VA = "0x74DA60")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x74DAE8", Offset = "0x74DAE8", VA = "0x74DAE8")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x74DBD8", Offset = "0x74DBD8", VA = "0x74DBD8")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x74DCD0", Offset = "0x74DCD0", VA = "0x74DCD0")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x74DDB8", Offset = "0x74DDB8", VA = "0x74DDB8")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x74DE40", Offset = "0x74DE40", VA = "0x74DE40")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044C")]
		[Address(RVA = "0x74DF28", Offset = "0x74DF28", VA = "0x74DF28")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x74E018", Offset = "0x74E018", VA = "0x74E018")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x74E100", Offset = "0x74E100", VA = "0x74E100")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x74E1F0", Offset = "0x74E1F0", VA = "0x74E1F0")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x74E2E0", Offset = "0x74E2E0", VA = "0x74E2E0")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x74E3D8", Offset = "0x74E3D8", VA = "0x74E3D8")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x74E4C8", Offset = "0x74E4C8", VA = "0x74E4C8")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x74E5AC", Offset = "0x74E5AC", VA = "0x74E5AC")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x74E630", Offset = "0x74E630", VA = "0x74E630")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x74E720", Offset = "0x74E720", VA = "0x74E720")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x74E808", Offset = "0x74E808", VA = "0x74E808")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x74E8EC", Offset = "0x74E8EC", VA = "0x74E8EC")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x74E970", Offset = "0x74E970", VA = "0x74E970")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x74EA60", Offset = "0x74EA60", VA = "0x74EA60")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x74EB58", Offset = "0x74EB58", VA = "0x74EB58")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x74EC44", Offset = "0x74EC44", VA = "0x74EC44")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x74ECC8", Offset = "0x74ECC8", VA = "0x74ECC8")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x74EDC0", Offset = "0x74EDC0", VA = "0x74EDC0")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x74EEB0", Offset = "0x74EEB0", VA = "0x74EEB0")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x74EF9C", Offset = "0x74EF9C", VA = "0x74EF9C")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x74F020", Offset = "0x74F020", VA = "0x74F020")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x74F100", Offset = "0x74F100", VA = "0x74F100")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000462")]
		[Address(RVA = "0x74F280", Offset = "0x74F280", VA = "0x74F280")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000463")]
		[Address(RVA = "0x74F198", Offset = "0x74F198", VA = "0x74F198")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x74F360", Offset = "0x74F360", VA = "0x74F360")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000465")]
		[Address(RVA = "0x74F3E8", Offset = "0x74F3E8", VA = "0x74F3E8")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x74F4C4", Offset = "0x74F4C4", VA = "0x74F4C4")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000467")]
		[Address(RVA = "0x74F548", Offset = "0x74F548", VA = "0x74F548")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x74F630", Offset = "0x74F630", VA = "0x74F630")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x74F718", Offset = "0x74F718", VA = "0x74F718")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x74F800", Offset = "0x74F800", VA = "0x74F800")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x74F888", Offset = "0x74F888", VA = "0x74F888")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x74F970", Offset = "0x74F970", VA = "0x74F970")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600046D")]
		[Address(RVA = "0x74F9F8", Offset = "0x74F9F8", VA = "0x74F9F8")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x74FAD8", Offset = "0x74FAD8", VA = "0x74FAD8")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x74FBC0", Offset = "0x74FBC0", VA = "0x74FBC0")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x74FCA4", Offset = "0x74FCA4", VA = "0x74FCA4")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000471")]
		[Address(RVA = "0x74FD28", Offset = "0x74FD28", VA = "0x74FD28")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000472")]
		[Address(RVA = "0x74FE18", Offset = "0x74FE18", VA = "0x74FE18")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x74FF0C", Offset = "0x74FF0C", VA = "0x74FF0C")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x74FF90", Offset = "0x74FF90", VA = "0x74FF90")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x750080", Offset = "0x750080", VA = "0x750080")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x750168", Offset = "0x750168", VA = "0x750168")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x75025C", Offset = "0x75025C", VA = "0x75025C")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x7502E0", Offset = "0x7502E0", VA = "0x7502E0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x7503CC", Offset = "0x7503CC", VA = "0x7503CC")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x750450", Offset = "0x750450", VA = "0x750450")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x750538", Offset = "0x750538", VA = "0x750538")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x750624", Offset = "0x750624", VA = "0x750624")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x7506A8", Offset = "0x7506A8", VA = "0x7506A8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x750798", Offset = "0x750798", VA = "0x750798")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x600047F")]
		[Address(RVA = "0x750870", Offset = "0x750870", VA = "0x750870")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x73B178", Offset = "0x73B178", VA = "0x73B178")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x750950", Offset = "0x750950", VA = "0x750950")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x73B060", Offset = "0x73B060", VA = "0x73B060")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x73B204", Offset = "0x73B204", VA = "0x73B204")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000484")]
		[Address(RVA = "0x750A30", Offset = "0x750A30", VA = "0x750A30")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x750B10", Offset = "0x750B10", VA = "0x750B10")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x750B98", Offset = "0x750B98", VA = "0x750B98")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x750C74", Offset = "0x750C74", VA = "0x750C74")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x750CF8", Offset = "0x750CF8", VA = "0x750CF8")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x750DDC", Offset = "0x750DDC", VA = "0x750DDC")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x750E60", Offset = "0x750E60", VA = "0x750E60")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048B")]
		[Address(RVA = "0x750F40", Offset = "0x750F40", VA = "0x750F40")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x751028", Offset = "0x751028", VA = "0x751028")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x7510B0", Offset = "0x7510B0", VA = "0x7510B0")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x751190", Offset = "0x751190", VA = "0x751190")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x751270", Offset = "0x751270", VA = "0x751270")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x751360", Offset = "0x751360", VA = "0x751360")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x751468", Offset = "0x751468", VA = "0x751468")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x7514F0", Offset = "0x7514F0", VA = "0x7514F0")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x7515D0", Offset = "0x7515D0", VA = "0x7515D0")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x7516E0", Offset = "0x7516E0", VA = "0x7516E0")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x751768", Offset = "0x751768", VA = "0x751768")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000496")]
		[Address(RVA = "0x751840", Offset = "0x751840", VA = "0x751840")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000497")]
		[Address(RVA = "0x751920", Offset = "0x751920", VA = "0x751920")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000498")]
		[Address(RVA = "0x751A00", Offset = "0x751A00", VA = "0x751A00")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x751AE0", Offset = "0x751AE0", VA = "0x751AE0")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x751BCC", Offset = "0x751BCC", VA = "0x751BCC")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x751C50", Offset = "0x751C50", VA = "0x751C50")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x751D3C", Offset = "0x751D3C", VA = "0x751D3C")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x751DC0", Offset = "0x751DC0", VA = "0x751DC0")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x751EA8", Offset = "0x751EA8", VA = "0x751EA8")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x751F30", Offset = "0x751F30", VA = "0x751F30")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x752018", Offset = "0x752018", VA = "0x752018")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x752100", Offset = "0x752100", VA = "0x752100")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x752188", Offset = "0x752188", VA = "0x752188")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x752270", Offset = "0x752270", VA = "0x752270")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x752368", Offset = "0x752368", VA = "0x752368")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x752450", Offset = "0x752450", VA = "0x752450")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x7524D8", Offset = "0x7524D8", VA = "0x7524D8")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x7525BC", Offset = "0x7525BC", VA = "0x7525BC")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x752640", Offset = "0x752640", VA = "0x752640")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x752724", Offset = "0x752724", VA = "0x752724")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x7527A8", Offset = "0x7527A8", VA = "0x7527A8")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x752888", Offset = "0x752888", VA = "0x752888")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x752978", Offset = "0x752978", VA = "0x752978")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x752A68", Offset = "0x752A68", VA = "0x752A68")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x752AF0", Offset = "0x752AF0", VA = "0x752AF0")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x752BD8", Offset = "0x752BD8", VA = "0x752BD8")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x752C60", Offset = "0x752C60", VA = "0x752C60")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x752D48", Offset = "0x752D48", VA = "0x752D48")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x752E28", Offset = "0x752E28", VA = "0x752E28")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x752F08", Offset = "0x752F08", VA = "0x752F08")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x752FE8", Offset = "0x752FE8", VA = "0x752FE8")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x7530E0", Offset = "0x7530E0", VA = "0x7530E0")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x7531E0", Offset = "0x7531E0", VA = "0x7531E0")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x7532D0", Offset = "0x7532D0", VA = "0x7532D0")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x7533C0", Offset = "0x7533C0", VA = "0x7533C0")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x7534B8", Offset = "0x7534B8", VA = "0x7534B8")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x7535AC", Offset = "0x7535AC", VA = "0x7535AC")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x753730", Offset = "0x753730", VA = "0x753730")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x753648", Offset = "0x753648", VA = "0x753648")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x753818", Offset = "0x753818", VA = "0x753818")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x7538F8", Offset = "0x7538F8", VA = "0x7538F8")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x7539D8", Offset = "0x7539D8", VA = "0x7539D8")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x753A80", Offset = "0x753A80", VA = "0x753A80")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x753B68", Offset = "0x753B68", VA = "0x753B68")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x753C48", Offset = "0x753C48", VA = "0x753C48")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x753D38", Offset = "0x753D38", VA = "0x753D38")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x753DC0", Offset = "0x753DC0", VA = "0x753DC0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x753EA8", Offset = "0x753EA8", VA = "0x753EA8")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x753F30", Offset = "0x753F30", VA = "0x753F30")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x754020", Offset = "0x754020", VA = "0x754020")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x754108", Offset = "0x754108", VA = "0x754108")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x7541F0", Offset = "0x7541F0", VA = "0x7541F0")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x7542E0", Offset = "0x7542E0", VA = "0x7542E0")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x7543D8", Offset = "0x7543D8", VA = "0x7543D8")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x7544CC", Offset = "0x7544CC", VA = "0x7544CC")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x754550", Offset = "0x754550", VA = "0x754550")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x754638", Offset = "0x754638", VA = "0x754638")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x754720", Offset = "0x754720", VA = "0x754720")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x7547A8", Offset = "0x7547A8", VA = "0x7547A8")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x754888", Offset = "0x754888", VA = "0x754888")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x754978", Offset = "0x754978", VA = "0x754978")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x754A58", Offset = "0x754A58", VA = "0x754A58")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x754B58", Offset = "0x754B58", VA = "0x754B58")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x754C48", Offset = "0x754C48", VA = "0x754C48")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x754D40", Offset = "0x754D40", VA = "0x754D40")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x754E30", Offset = "0x754E30", VA = "0x754E30")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x754F28", Offset = "0x754F28", VA = "0x754F28")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x755018", Offset = "0x755018", VA = "0x755018")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x755108", Offset = "0x755108", VA = "0x755108")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x7551F8", Offset = "0x7551F8", VA = "0x7551F8")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x7552E8", Offset = "0x7552E8", VA = "0x7552E8")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x755370", Offset = "0x755370", VA = "0x755370")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x755460", Offset = "0x755460", VA = "0x755460")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x755550", Offset = "0x755550", VA = "0x755550")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x755648", Offset = "0x755648", VA = "0x755648")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x755748", Offset = "0x755748", VA = "0x755748")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x755840", Offset = "0x755840", VA = "0x755840")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x755940", Offset = "0x755940", VA = "0x755940")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x755A3C", Offset = "0x755A3C", VA = "0x755A3C")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x755AC0", Offset = "0x755AC0", VA = "0x755AC0")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x755BB8", Offset = "0x755BB8", VA = "0x755BB8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x755CB8", Offset = "0x755CB8", VA = "0x755CB8")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x755DB0", Offset = "0x755DB0", VA = "0x755DB0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x755EA0", Offset = "0x755EA0", VA = "0x755EA0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x755F88", Offset = "0x755F88", VA = "0x755F88")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x756010", Offset = "0x756010", VA = "0x756010")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x7560F8", Offset = "0x7560F8", VA = "0x7560F8")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x7561E0", Offset = "0x7561E0", VA = "0x7561E0")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x7562D4", Offset = "0x7562D4", VA = "0x7562D4")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x756358", Offset = "0x756358", VA = "0x756358")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x756448", Offset = "0x756448", VA = "0x756448")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x756530", Offset = "0x756530", VA = "0x756530")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x756628", Offset = "0x756628", VA = "0x756628")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x756718", Offset = "0x756718", VA = "0x756718")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x756808", Offset = "0x756808", VA = "0x756808")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x756900", Offset = "0x756900", VA = "0x756900")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x7569F0", Offset = "0x7569F0", VA = "0x7569F0")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x756A78", Offset = "0x756A78", VA = "0x756A78")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x756B60", Offset = "0x756B60", VA = "0x756B60")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x756C58", Offset = "0x756C58", VA = "0x756C58")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x756CE0", Offset = "0x756CE0", VA = "0x756CE0")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x756DD0", Offset = "0x756DD0", VA = "0x756DD0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x756ED0", Offset = "0x756ED0", VA = "0x756ED0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x756FC0", Offset = "0x756FC0", VA = "0x756FC0")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x7570B8", Offset = "0x7570B8", VA = "0x7570B8")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x7571B0", Offset = "0x7571B0", VA = "0x7571B0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x7572A0", Offset = "0x7572A0", VA = "0x7572A0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x757388", Offset = "0x757388", VA = "0x757388")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x757480", Offset = "0x757480", VA = "0x757480")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x757570", Offset = "0x757570", VA = "0x757570")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x757660", Offset = "0x757660", VA = "0x757660")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x757744", Offset = "0x757744", VA = "0x757744")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x7577C8", Offset = "0x7577C8", VA = "0x7577C8")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x7578B0", Offset = "0x7578B0", VA = "0x7578B0")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x757990", Offset = "0x757990", VA = "0x757990")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x757A70", Offset = "0x757A70", VA = "0x757A70")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x757B58", Offset = "0x757B58", VA = "0x757B58")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x757C48", Offset = "0x757C48", VA = "0x757C48")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x757D30", Offset = "0x757D30", VA = "0x757D30")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x757E18", Offset = "0x757E18", VA = "0x757E18")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x757F00", Offset = "0x757F00", VA = "0x757F00")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x757FE8", Offset = "0x757FE8", VA = "0x757FE8")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x7580D0", Offset = "0x7580D0", VA = "0x7580D0")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x7581C0", Offset = "0x7581C0", VA = "0x7581C0")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x7582A8", Offset = "0x7582A8", VA = "0x7582A8")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x758390", Offset = "0x758390", VA = "0x758390")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x758480", Offset = "0x758480", VA = "0x758480")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x758568", Offset = "0x758568", VA = "0x758568")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x758650", Offset = "0x758650", VA = "0x758650")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x758738", Offset = "0x758738", VA = "0x758738")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x758818", Offset = "0x758818", VA = "0x758818")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x758900", Offset = "0x758900", VA = "0x758900")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x7589E8", Offset = "0x7589E8", VA = "0x7589E8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x758AD8", Offset = "0x758AD8", VA = "0x758AD8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x758BC0", Offset = "0x758BC0", VA = "0x758BC0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x758CA8", Offset = "0x758CA8", VA = "0x758CA8")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x758D90", Offset = "0x758D90", VA = "0x758D90")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x758E78", Offset = "0x758E78", VA = "0x758E78")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x758F68", Offset = "0x758F68", VA = "0x758F68")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x759058", Offset = "0x759058", VA = "0x759058")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x759138", Offset = "0x759138", VA = "0x759138")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x759220", Offset = "0x759220", VA = "0x759220")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x759310", Offset = "0x759310", VA = "0x759310")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x759400", Offset = "0x759400", VA = "0x759400")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x7594E0", Offset = "0x7594E0", VA = "0x7594E0")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x7595F0", Offset = "0x7595F0", VA = "0x7595F0")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x7596D8", Offset = "0x7596D8", VA = "0x7596D8")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x7597C8", Offset = "0x7597C8", VA = "0x7597C8")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x7598B0", Offset = "0x7598B0", VA = "0x7598B0")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x7599A0", Offset = "0x7599A0", VA = "0x7599A0")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x759A88", Offset = "0x759A88", VA = "0x759A88")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x759B70", Offset = "0x759B70", VA = "0x759B70")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x759C58", Offset = "0x759C58", VA = "0x759C58")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x759D40", Offset = "0x759D40", VA = "0x759D40")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x759E28", Offset = "0x759E28", VA = "0x759E28")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000531")]
		[Address(RVA = "0x759F18", Offset = "0x759F18", VA = "0x759F18")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000532")]
		[Address(RVA = "0x75A000", Offset = "0x75A000", VA = "0x75A000")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x75A0E8", Offset = "0x75A0E8", VA = "0x75A0E8")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x75A1D0", Offset = "0x75A1D0", VA = "0x75A1D0")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x75A2B8", Offset = "0x75A2B8", VA = "0x75A2B8")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x75A3A0", Offset = "0x75A3A0", VA = "0x75A3A0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x75A488", Offset = "0x75A488", VA = "0x75A488")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x75A578", Offset = "0x75A578", VA = "0x75A578")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x75A660", Offset = "0x75A660", VA = "0x75A660")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x75A740", Offset = "0x75A740", VA = "0x75A740")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x75A820", Offset = "0x75A820", VA = "0x75A820")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x75A900", Offset = "0x75A900", VA = "0x75A900")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x75A9E0", Offset = "0x75A9E0", VA = "0x75A9E0")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x75AAF0", Offset = "0x75AAF0", VA = "0x75AAF0")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x75AC08", Offset = "0x75AC08", VA = "0x75AC08")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x75ACF0", Offset = "0x75ACF0", VA = "0x75ACF0")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x75AE08", Offset = "0x75AE08", VA = "0x75AE08")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x75AF20", Offset = "0x75AF20", VA = "0x75AF20")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x75B008", Offset = "0x75B008", VA = "0x75B008")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x75B0E8", Offset = "0x75B0E8", VA = "0x75B0E8")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x75B200", Offset = "0x75B200", VA = "0x75B200")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x75B2E0", Offset = "0x75B2E0", VA = "0x75B2E0")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x75B3F8", Offset = "0x75B3F8", VA = "0x75B3F8")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x75B508", Offset = "0x75B508", VA = "0x75B508")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x75B620", Offset = "0x75B620", VA = "0x75B620")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x75B708", Offset = "0x75B708", VA = "0x75B708")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x75B7F8", Offset = "0x75B7F8", VA = "0x75B7F8")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x75B8D8", Offset = "0x75B8D8", VA = "0x75B8D8")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x75B9B8", Offset = "0x75B9B8", VA = "0x75B9B8")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x75BA40", Offset = "0x75BA40", VA = "0x75BA40")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x75BB18", Offset = "0x75BB18", VA = "0x75BB18")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x75BBF8", Offset = "0x75BBF8", VA = "0x75BBF8")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x75BCD8", Offset = "0x75BCD8", VA = "0x75BCD8")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000552")]
		[Address(RVA = "0x75BDE8", Offset = "0x75BDE8", VA = "0x75BDE8")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x75BEF8", Offset = "0x75BEF8", VA = "0x75BEF8")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x75BFD8", Offset = "0x75BFD8", VA = "0x75BFD8")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x75C0F0", Offset = "0x75C0F0", VA = "0x75C0F0")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x75C208", Offset = "0x75C208", VA = "0x75C208")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x75C2E8", Offset = "0x75C2E8", VA = "0x75C2E8")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x75C400", Offset = "0x75C400", VA = "0x75C400")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x75C4E8", Offset = "0x75C4E8", VA = "0x75C4E8")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x75C5D0", Offset = "0x75C5D0", VA = "0x75C5D0")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x75C6F8", Offset = "0x75C6F8", VA = "0x75C6F8")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x75C7F0", Offset = "0x75C7F0", VA = "0x75C7F0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x75C920", Offset = "0x75C920", VA = "0x75C920")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x75CA18", Offset = "0x75CA18", VA = "0x75CA18")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x75CB28", Offset = "0x75CB28", VA = "0x75CB28")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x75CC38", Offset = "0x75CC38", VA = "0x75CC38")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x75CD50", Offset = "0x75CD50", VA = "0x75CD50")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x75CE30", Offset = "0x75CE30", VA = "0x75CE30")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x75CF40", Offset = "0x75CF40", VA = "0x75CF40")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x75D048", Offset = "0x75D048", VA = "0x75D048")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x75D158", Offset = "0x75D158", VA = "0x75D158")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x75D270", Offset = "0x75D270", VA = "0x75D270")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x75D388", Offset = "0x75D388", VA = "0x75D388")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x75D498", Offset = "0x75D498", VA = "0x75D498")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x75D5A0", Offset = "0x75D5A0", VA = "0x75D5A0")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x75D6B8", Offset = "0x75D6B8", VA = "0x75D6B8")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x75D7C8", Offset = "0x75D7C8", VA = "0x75D7C8")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x75D8D0", Offset = "0x75D8D0", VA = "0x75D8D0")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x75D9E0", Offset = "0x75D9E0", VA = "0x75D9E0")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600056E")]
		[Address(RVA = "0x75DAE8", Offset = "0x75DAE8", VA = "0x75DAE8")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x75DBD0", Offset = "0x75DBD0", VA = "0x75DBD0")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000570")]
		[Address(RVA = "0x75DCB8", Offset = "0x75DCB8", VA = "0x75DCB8")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x75DDA0", Offset = "0x75DDA0", VA = "0x75DDA0")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x75DE28", Offset = "0x75DE28", VA = "0x75DE28")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x75DF18", Offset = "0x75DF18", VA = "0x75DF18")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x75DFA0", Offset = "0x75DFA0", VA = "0x75DFA0")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x75E090", Offset = "0x75E090", VA = "0x75E090")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x75E178", Offset = "0x75E178", VA = "0x75E178")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000577")]
		[Address(RVA = "0x75E200", Offset = "0x75E200", VA = "0x75E200")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x75E2E8", Offset = "0x75E2E8", VA = "0x75E2E8")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x75E370", Offset = "0x75E370", VA = "0x75E370")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x75E478", Offset = "0x75E478", VA = "0x75E478")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x75E598", Offset = "0x75E598", VA = "0x75E598")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x75E6A8", Offset = "0x75E6A8", VA = "0x75E6A8")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x75E7B8", Offset = "0x75E7B8", VA = "0x75E7B8")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x75E898", Offset = "0x75E898", VA = "0x75E898")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x75E9B8", Offset = "0x75E9B8", VA = "0x75E9B8")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x75EAA0", Offset = "0x75EAA0", VA = "0x75EAA0")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x75EB80", Offset = "0x75EB80", VA = "0x75EB80")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x75EC08", Offset = "0x75EC08", VA = "0x75EC08")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x75ECE0", Offset = "0x75ECE0", VA = "0x75ECE0")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x75ED68", Offset = "0x75ED68", VA = "0x75ED68")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x75EE40", Offset = "0x75EE40", VA = "0x75EE40")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000586")]
		[Address(RVA = "0x75EEC8", Offset = "0x75EEC8", VA = "0x75EEC8")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x75EFA4", Offset = "0x75EFA4", VA = "0x75EFA4")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x75F028", Offset = "0x75F028", VA = "0x75F028")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x75F108", Offset = "0x75F108", VA = "0x75F108")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x75F190", Offset = "0x75F190", VA = "0x75F190")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x75F264", Offset = "0x75F264", VA = "0x75F264")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x75F2E8", Offset = "0x75F2E8", VA = "0x75F2E8")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x75F3F8", Offset = "0x75F3F8", VA = "0x75F3F8")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x75F4DC", Offset = "0x75F4DC", VA = "0x75F4DC")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x75F560", Offset = "0x75F560", VA = "0x75F560")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x75F640", Offset = "0x75F640", VA = "0x75F640")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x75F758", Offset = "0x75F758", VA = "0x75F758")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x75F840", Offset = "0x75F840", VA = "0x75F840")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x75F8E8", Offset = "0x75F8E8", VA = "0x75F8E8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x75F9C8", Offset = "0x75F9C8", VA = "0x75F9C8")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x75FA70", Offset = "0x75FA70", VA = "0x75FA70")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x75FB50", Offset = "0x75FB50", VA = "0x75FB50")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x75FC2C", Offset = "0x75FC2C", VA = "0x75FC2C")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x75FCB0", Offset = "0x75FCB0", VA = "0x75FCB0")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x75FD88", Offset = "0x75FD88", VA = "0x75FD88")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x75FE70", Offset = "0x75FE70", VA = "0x75FE70")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x75FEF8", Offset = "0x75FEF8", VA = "0x75FEF8")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x75FFD8", Offset = "0x75FFD8", VA = "0x75FFD8")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x7600F0", Offset = "0x7600F0", VA = "0x7600F0")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x7601D8", Offset = "0x7601D8", VA = "0x7601D8")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x7602F0", Offset = "0x7602F0", VA = "0x7602F0")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x760400", Offset = "0x760400", VA = "0x760400")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x760488", Offset = "0x760488", VA = "0x760488")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x760560", Offset = "0x760560", VA = "0x760560")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x760668", Offset = "0x760668", VA = "0x760668")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x760780", Offset = "0x760780", VA = "0x760780")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x760868", Offset = "0x760868", VA = "0x760868")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x760980", Offset = "0x760980", VA = "0x760980")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x760A98", Offset = "0x760A98", VA = "0x760A98")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x760BB0", Offset = "0x760BB0", VA = "0x760BB0")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x760CC0", Offset = "0x760CC0", VA = "0x760CC0")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x760D48", Offset = "0x760D48", VA = "0x760D48")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x760E58", Offset = "0x760E58", VA = "0x760E58")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x760F60", Offset = "0x760F60", VA = "0x760F60")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x761068", Offset = "0x761068", VA = "0x761068")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x761170", Offset = "0x761170", VA = "0x761170")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x761278", Offset = "0x761278", VA = "0x761278")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x761388", Offset = "0x761388", VA = "0x761388")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x7614A8", Offset = "0x7614A8", VA = "0x7614A8")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x761530", Offset = "0x761530", VA = "0x761530")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x761610", Offset = "0x761610", VA = "0x761610")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x761720", Offset = "0x761720", VA = "0x761720")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x761840", Offset = "0x761840", VA = "0x761840")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x761928", Offset = "0x761928", VA = "0x761928")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x761A10", Offset = "0x761A10", VA = "0x761A10")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x761AF8", Offset = "0x761AF8", VA = "0x761AF8")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x761BA0", Offset = "0x761BA0", VA = "0x761BA0")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x761C88", Offset = "0x761C88", VA = "0x761C88")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x761D7C", Offset = "0x761D7C", VA = "0x761D7C")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x761E00", Offset = "0x761E00", VA = "0x761E00")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x761EF0", Offset = "0x761EF0", VA = "0x761EF0")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x761FD8", Offset = "0x761FD8", VA = "0x761FD8")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x7620D0", Offset = "0x7620D0", VA = "0x7620D0")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x7621B0", Offset = "0x7621B0", VA = "0x7621B0")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x7622C8", Offset = "0x7622C8", VA = "0x7622C8")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x7623B0", Offset = "0x7623B0", VA = "0x7623B0")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x762490", Offset = "0x762490", VA = "0x762490")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x762570", Offset = "0x762570", VA = "0x762570")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x762660", Offset = "0x762660", VA = "0x762660")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x762750", Offset = "0x762750", VA = "0x762750")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x762838", Offset = "0x762838", VA = "0x762838")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x762918", Offset = "0x762918", VA = "0x762918")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x762A30", Offset = "0x762A30", VA = "0x762A30")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x762B40", Offset = "0x762B40", VA = "0x762B40")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x762C50", Offset = "0x762C50", VA = "0x762C50")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x762CD8", Offset = "0x762CD8", VA = "0x762CD8")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x762DE8", Offset = "0x762DE8", VA = "0x762DE8")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x762F08", Offset = "0x762F08", VA = "0x762F08")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x763018", Offset = "0x763018", VA = "0x763018")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x7630A0", Offset = "0x7630A0", VA = "0x7630A0")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x763180", Offset = "0x763180", VA = "0x763180")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x763260", Offset = "0x763260", VA = "0x763260")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x763344", Offset = "0x763344", VA = "0x763344")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x7633C8", Offset = "0x7633C8", VA = "0x7633C8")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x7634B0", Offset = "0x7634B0", VA = "0x7634B0")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x763598", Offset = "0x763598", VA = "0x763598")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x763620", Offset = "0x763620", VA = "0x763620")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x763700", Offset = "0x763700", VA = "0x763700")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x763818", Offset = "0x763818", VA = "0x763818")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x76392C", Offset = "0x76392C", VA = "0x76392C")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x7639B0", Offset = "0x7639B0", VA = "0x7639B0")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x763A98", Offset = "0x763A98", VA = "0x763A98")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x763B78", Offset = "0x763B78", VA = "0x763B78")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x763C58", Offset = "0x763C58", VA = "0x763C58")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x763D48", Offset = "0x763D48", VA = "0x763D48")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x763E30", Offset = "0x763E30", VA = "0x763E30")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x763F34", Offset = "0x763F34", VA = "0x763F34")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x763FB8", Offset = "0x763FB8", VA = "0x763FB8")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x764090", Offset = "0x764090", VA = "0x764090")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x764118", Offset = "0x764118", VA = "0x764118")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x7641F0", Offset = "0x7641F0", VA = "0x7641F0")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x764278", Offset = "0x764278", VA = "0x764278")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x764350", Offset = "0x764350", VA = "0x764350")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x7643D8", Offset = "0x7643D8", VA = "0x7643D8")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x7644B0", Offset = "0x7644B0", VA = "0x7644B0")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x764538", Offset = "0x764538", VA = "0x764538")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x764620", Offset = "0x764620", VA = "0x764620")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x7646FC", Offset = "0x7646FC", VA = "0x7646FC")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x764780", Offset = "0x764780", VA = "0x764780")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x764860", Offset = "0x764860", VA = "0x764860")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x764978", Offset = "0x764978", VA = "0x764978")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x764A90", Offset = "0x764A90", VA = "0x764A90")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x764B78", Offset = "0x764B78", VA = "0x764B78")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x764C00", Offset = "0x764C00", VA = "0x764C00")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x764CE0", Offset = "0x764CE0", VA = "0x764CE0")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x764DC0", Offset = "0x764DC0", VA = "0x764DC0")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x764EB0", Offset = "0x764EB0", VA = "0x764EB0")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x764FD0", Offset = "0x764FD0", VA = "0x764FD0")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x765058", Offset = "0x765058", VA = "0x765058")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x765138", Offset = "0x765138", VA = "0x765138")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x765248", Offset = "0x765248", VA = "0x765248")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x765368", Offset = "0x765368", VA = "0x765368")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x7653F0", Offset = "0x7653F0", VA = "0x7653F0")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x7654C8", Offset = "0x7654C8", VA = "0x7654C8")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x7655B0", Offset = "0x7655B0", VA = "0x7655B0")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x7656C8", Offset = "0x7656C8", VA = "0x7656C8")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x7657B0", Offset = "0x7657B0", VA = "0x7657B0")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x7658A8", Offset = "0x7658A8", VA = "0x7658A8")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x7659D8", Offset = "0x7659D8", VA = "0x7659D8")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x765AD8", Offset = "0x765AD8", VA = "0x765AD8")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x735DB8", Offset = "0x735DB8", VA = "0x735DB8")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x7362C8", Offset = "0x7362C8", VA = "0x7362C8")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x735F20", Offset = "0x735F20", VA = "0x735F20")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x7360A8", Offset = "0x7360A8", VA = "0x7360A8")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x7383F0", Offset = "0x7383F0", VA = "0x7383F0")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x7386F8", Offset = "0x7386F8", VA = "0x7386F8")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x738554", Offset = "0x738554", VA = "0x738554")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x765BC0", Offset = "0x765BC0", VA = "0x765BC0")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x765CB8", Offset = "0x765CB8", VA = "0x765CB8")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x765D90", Offset = "0x765D90", VA = "0x765D90")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x765E70", Offset = "0x765E70", VA = "0x765E70")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x765F60", Offset = "0x765F60", VA = "0x765F60")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x766068", Offset = "0x766068", VA = "0x766068")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x766158", Offset = "0x766158", VA = "0x766158")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x766250", Offset = "0x766250", VA = "0x766250")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x766348", Offset = "0x766348", VA = "0x766348")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x766448", Offset = "0x766448", VA = "0x766448")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x76653C", Offset = "0x76653C", VA = "0x76653C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x766610", Offset = "0x766610", VA = "0x766610")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x766714", Offset = "0x766714", VA = "0x766714")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x7667F8", Offset = "0x7667F8", VA = "0x7667F8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x766904", Offset = "0x766904", VA = "0x766904")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x7669F0", Offset = "0x7669F0", VA = "0x7669F0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x766AF8", Offset = "0x766AF8", VA = "0x766AF8")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x766BE8", Offset = "0x766BE8", VA = "0x766BE8")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x766CDC", Offset = "0x766CDC", VA = "0x766CDC")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x766DA8", Offset = "0x766DA8", VA = "0x766DA8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x766EA0", Offset = "0x766EA0", VA = "0x766EA0")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x766F78", Offset = "0x766F78", VA = "0x766F78")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x767058", Offset = "0x767058", VA = "0x767058")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x767128", Offset = "0x767128", VA = "0x767128")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x767214", Offset = "0x767214", VA = "0x767214")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x767300", Offset = "0x767300", VA = "0x767300")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x7673F8", Offset = "0x7673F8", VA = "0x7673F8")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x7674E0", Offset = "0x7674E0", VA = "0x7674E0")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x7675D4", Offset = "0x7675D4", VA = "0x7675D4")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x7676A0", Offset = "0x7676A0", VA = "0x7676A0")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x76779C", Offset = "0x76779C", VA = "0x76779C")]
		public static extern void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x7677C8", Offset = "0x7677C8", VA = "0x7677C8")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x7678B8", Offset = "0x7678B8", VA = "0x7678B8")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x7679A8", Offset = "0x7679A8", VA = "0x7679A8")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x767A98", Offset = "0x767A98", VA = "0x767A98")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x767B68", Offset = "0x767B68", VA = "0x767B68")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x767C58", Offset = "0x767C58", VA = "0x767C58")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x767D48", Offset = "0x767D48", VA = "0x767D48")]
		public static extern void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x767D78", Offset = "0x767D78", VA = "0x767D78")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x767E80", Offset = "0x767E80", VA = "0x767E80")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x767F94", Offset = "0x767F94", VA = "0x767F94")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x768080", Offset = "0x768080", VA = "0x768080")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x768178", Offset = "0x768178", VA = "0x768178")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x768258", Offset = "0x768258", VA = "0x768258")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x768348", Offset = "0x768348", VA = "0x768348")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x768438", Offset = "0x768438", VA = "0x768438")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x768520", Offset = "0x768520", VA = "0x768520")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x768618", Offset = "0x768618", VA = "0x768618")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x768740", Offset = "0x768740", VA = "0x768740")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x768830", Offset = "0x768830", VA = "0x768830")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x768938", Offset = "0x768938", VA = "0x768938")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x768A50", Offset = "0x768A50", VA = "0x768A50")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x768B38", Offset = "0x768B38", VA = "0x768B38")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x768C28", Offset = "0x768C28", VA = "0x768C28")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x768D10", Offset = "0x768D10", VA = "0x768D10")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x768DF8", Offset = "0x768DF8", VA = "0x768DF8")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x768F00", Offset = "0x768F00", VA = "0x768F00")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x769018", Offset = "0x769018", VA = "0x769018")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x769110", Offset = "0x769110", VA = "0x769110")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);
	}
	[Token(Token = "0x200007E")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x40002AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240824", Offset = "0x240824")]
		Unknown,
		[Token(Token = "0x40002AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240858", Offset = "0x240858")]
		InSync,
		[Token(Token = "0x40002AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24088C", Offset = "0x24088C")]
		NeedsDownload,
		[Token(Token = "0x40002AF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2408C8", Offset = "0x2408C8")]
		RemoteDownloading,
		[Token(Token = "0x40002B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240908", Offset = "0x240908")]
		NeedsUpload,
		[Token(Token = "0x40002B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240944", Offset = "0x240944")]
		LocalUploading,
		[Token(Token = "0x40002B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240980", Offset = "0x240980")]
		InConflict
	}
	[Token(Token = "0x200007F")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x40002B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2409B8", Offset = "0x2409B8")]
		Unknown,
		[Token(Token = "0x40002B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2409EC", Offset = "0x2409EC")]
		Ok,
		[Token(Token = "0x40002B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240A1C", Offset = "0x240A1C")]
		BetterVersionStored,
		[Token(Token = "0x40002B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240A60", Offset = "0x240A60")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000080")]
	public interface IMicrophone
	{
		[Token(Token = "0x600064E")]
		void Start();

		[Token(Token = "0x600064F")]
		void Stop();

		[Token(Token = "0x6000650")]
		float[] Update();
	}
	[Token(Token = "0x2000081")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000651")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000652")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000653")]
		void Update();

		[Token(Token = "0x6000654")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000082")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x40002B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240AA4", Offset = "0x240AA4")]
		String,
		[Token(Token = "0x40002BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240AD8", Offset = "0x240AD8")]
		Int,
		[Token(Token = "0x40002BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240B0C", Offset = "0x240B0C")]
		Double,
		[Token(Token = "0x40002BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240B40", Offset = "0x240B40")]
		Unknown
	}
	[Token(Token = "0x2000083")]
	public enum LaunchType
	{
		[Token(Token = "0x40002BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240B74", Offset = "0x240B74")]
		Unknown,
		[Token(Token = "0x40002BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240BA8", Offset = "0x240BA8")]
		Normal,
		[Token(Token = "0x40002C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240BDC", Offset = "0x240BDC")]
		Invite,
		[Token(Token = "0x40002C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240C10", Offset = "0x240C10")]
		Coordinated,
		[Token(Token = "0x40002C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240C48", Offset = "0x240C48")]
		Deeplink
	}
	[Token(Token = "0x2000084")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x40002C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240C80", Offset = "0x240C80")]
		None,
		[Token(Token = "0x40002C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240CB4", Offset = "0x240CB4")]
		Friends,
		[Token(Token = "0x40002C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240CE8", Offset = "0x240CE8")]
		Unknown
	}
	[Token(Token = "0x2000085")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x40002C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240D1C", Offset = "0x240D1C")]
		Top,
		[Token(Token = "0x40002C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240D4C", Offset = "0x240D4C")]
		CenteredOnViewer,
		[Token(Token = "0x40002CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240D8C", Offset = "0x240D8C")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x40002CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240DD4", Offset = "0x240DD4")]
		Unknown
	}
	[Token(Token = "0x2000086")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x40002CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240E08", Offset = "0x240E08")]
		Unknown,
		[Token(Token = "0x40002CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240E3C", Offset = "0x240E3C")]
		Public,
		[Token(Token = "0x40002CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240E70", Offset = "0x240E70")]
		Friends,
		[Token(Token = "0x40002D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240EA4", Offset = "0x240EA4")]
		OnlyMe
	}
	[Token(Token = "0x2000087")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x40002D2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240ED8", Offset = "0x240ED8")]
		Unknown,
		[Token(Token = "0x40002D3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240F0C", Offset = "0x240F0C")]
		MicrophoneOn,
		[Token(Token = "0x40002D4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240F48", Offset = "0x240F48")]
		MicrophoneOff
	}
	[Token(Token = "0x2000088")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x40002D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240F84", Offset = "0x240F84")]
		Success = 1,
		[Token(Token = "0x40002D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240FB8", Offset = "0x240FB8")]
		Unknown = 0,
		[Token(Token = "0x40002D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x240FEC", Offset = "0x240FEC")]
		NoPackageSet = -1,
		[Token(Token = "0x40002D9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241028", Offset = "0x241028")]
		NoFbConnect = -2,
		[Token(Token = "0x40002DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241064", Offset = "0x241064")]
		NoSessionId = -3,
		[Token(Token = "0x40002DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2410A0", Offset = "0x2410A0")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000089")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x40002DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2410E0", Offset = "0x2410E0")]
		Required,
		[Token(Token = "0x40002DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241118", Offset = "0x241118")]
		High,
		[Token(Token = "0x40002DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24114C", Offset = "0x24114C")]
		Medium,
		[Token(Token = "0x40002E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241180", Offset = "0x241180")]
		Low,
		[Token(Token = "0x40002E1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2411B0", Offset = "0x2411B0")]
		Unknown
	}
	[Token(Token = "0x200008A")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x560E50", Offset = "0x560E50", VA = "0x560E50")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x560EE0", Offset = "0x560EE0", VA = "0x560EE0")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x560F78", Offset = "0x560F78", VA = "0x560F78")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x561000", Offset = "0x561000", VA = "0x561000")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x561090", Offset = "0x561090", VA = "0x561090")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x561120", Offset = "0x561120", VA = "0x561120")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x5611C4", Offset = "0x5611C4", VA = "0x5611C4")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x56124C", Offset = "0x56124C", VA = "0x56124C")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x5612E4", Offset = "0x5612E4", VA = "0x5612E4")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x561390", Offset = "0x561390", VA = "0x561390")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x561428", Offset = "0x561428", VA = "0x561428")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x5614B0", Offset = "0x5614B0", VA = "0x5614B0")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x561540", Offset = "0x561540", VA = "0x561540")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x55FDEC", Offset = "0x55FDEC", VA = "0x55FDEC")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x5615D0", Offset = "0x5615D0", VA = "0x5615D0", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200008B")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x40002E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2411E4", Offset = "0x2411E4")]
		Unknown,
		[Token(Token = "0x40002E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241218", Offset = "0x241218")]
		Trailing,
		[Token(Token = "0x40002E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241250", Offset = "0x241250")]
		Swingy
	}
	[Token(Token = "0x200008C")]
	public enum MediaContentType
	{
		[Token(Token = "0x40002E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241284", Offset = "0x241284")]
		Unknown,
		[Token(Token = "0x40002E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2412B8", Offset = "0x2412B8")]
		Photo
	}
	[Token(Token = "0x200008D")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x200008E")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000069")]
		public T Data
		{
			[Token(Token = "0x6000665")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000664")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000666")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x200008F")]
	public class Message
	{
		[Token(Token = "0x2000090")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000091")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40002F0")]
			Unknown = 0u,
			[Token(Token = "0x40002F1")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40002F2")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40002F3")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40002F4")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40002F5")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40002F6")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40002F7")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40002F8")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40002F9")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40002FA")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x40002FB")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x40002FC")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x40002FD")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x40002FE")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x40002FF")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000300")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000301")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4000302")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4000303")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000304")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000305")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000306")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000307")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000308")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000309")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x400030A")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x400030B")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x400030C")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x400030D")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x400030E")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x400030F")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000310")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000311")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000312")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000313")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000314")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000315")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000316")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000317")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000318")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000319")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x400031A")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x400031B")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x400031C")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x400031D")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x400031E")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x400031F")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000320")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000321")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000322")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000323")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000324")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000325")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000326")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000327")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000328")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000329")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x400032A")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x400032B")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x400032C")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x400032D")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x400032E")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x400032F")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000330")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000331")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000332")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000333")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000334")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000335")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000336")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000337")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000338")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000339")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x400033A")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x400033B")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x400033C")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x400033D")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x400033E")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x400033F")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4000340")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4000341")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4000342")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4000343")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000344")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000345")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000346")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000347")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000348")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000349")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x400034A")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x400034B")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x400034C")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x400034D")]
			Room_Join = 382373641u,
			[Token(Token = "0x400034E")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x400034F")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000350")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000351")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000352")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000353")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000354")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000355")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000356")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000357")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000358")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000359")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x400035A")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x400035B")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x400035C")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x400035D")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x400035E")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x400035F")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000360")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000361")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000362")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000363")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000364")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000365")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000366")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000367")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000368")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000369")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x400036A")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x400036B")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x400036C")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x400036D")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x400036E")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x400036F")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4000370")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4000371")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4000372")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4000373")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4000374")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000375")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000376")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000377")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000378")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000379")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x2000092")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong requestID;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2412EC", Offset = "0x2412EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x2412EC", Offset = "0x2412EC")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700006A")]
		public MessageType Type
		{
			[Token(Token = "0x600066D")]
			[Address(RVA = "0x55BA84", Offset = "0x55BA84", VA = "0x55BA84")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700006B")]
		public bool IsError
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x561AD8", Offset = "0x561AD8", VA = "0x561AD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006C")]
		public ulong RequestID
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x55BA7C", Offset = "0x55BA7C", VA = "0x55BA7C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700006D")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x565028", Offset = "0x565028", VA = "0x565028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B6C", Offset = "0x247B6C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x564FC4", Offset = "0x564FC4", VA = "0x564FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B5C", Offset = "0x247B5C")]
			set
			{
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x5617C8", Offset = "0x5617C8", VA = "0x5617C8")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x561AD0", Offset = "0x561AD0", VA = "0x561AD0", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x561AE8", Offset = "0x561AE8", VA = "0x561AE8", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x561AF0", Offset = "0x561AF0", VA = "0x561AF0", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x561AF8", Offset = "0x561AF8", VA = "0x561AF8", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x561B00", Offset = "0x561B00", VA = "0x561B00", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x561B08", Offset = "0x561B08", VA = "0x561B08", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x561B10", Offset = "0x561B10", VA = "0x561B10", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x561B18", Offset = "0x561B18", VA = "0x561B18", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x561B20", Offset = "0x561B20", VA = "0x561B20", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x561B28", Offset = "0x561B28", VA = "0x561B28", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x561B30", Offset = "0x561B30", VA = "0x561B30", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x561B38", Offset = "0x561B38", VA = "0x561B38", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x561B40", Offset = "0x561B40", VA = "0x561B40", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x561B48", Offset = "0x561B48", VA = "0x561B48", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x561B50", Offset = "0x561B50", VA = "0x561B50", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x561B58", Offset = "0x561B58", VA = "0x561B58", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x561B60", Offset = "0x561B60", VA = "0x561B60", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x561B68", Offset = "0x561B68", VA = "0x561B68", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x561B70", Offset = "0x561B70", VA = "0x561B70", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x561B78", Offset = "0x561B78", VA = "0x561B78", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x561B80", Offset = "0x561B80", VA = "0x561B80", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x561B88", Offset = "0x561B88", VA = "0x561B88", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x561B90", Offset = "0x561B90", VA = "0x561B90", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x561B98", Offset = "0x561B98", VA = "0x561B98", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x561BA0", Offset = "0x561BA0", VA = "0x561BA0", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x561BA8", Offset = "0x561BA8", VA = "0x561BA8", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x561BB0", Offset = "0x561BB0", VA = "0x561BB0", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x561BB8", Offset = "0x561BB8", VA = "0x561BB8", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x561BC0", Offset = "0x561BC0", VA = "0x561BC0", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x561BC8", Offset = "0x561BC8", VA = "0x561BC8", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x561BD0", Offset = "0x561BD0", VA = "0x561BD0", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x561BD8", Offset = "0x561BD8", VA = "0x561BD8", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x561BE0", Offset = "0x561BE0", VA = "0x561BE0", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x561BE8", Offset = "0x561BE8", VA = "0x561BE8", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x561BF0", Offset = "0x561BF0", VA = "0x561BF0", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x561BF8", Offset = "0x561BF8", VA = "0x561BF8", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x561C00", Offset = "0x561C00", VA = "0x561C00", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x561C08", Offset = "0x561C08", VA = "0x561C08", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x561C10", Offset = "0x561C10", VA = "0x561C10", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x561C18", Offset = "0x561C18", VA = "0x561C18", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x561C20", Offset = "0x561C20", VA = "0x561C20", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x561C28", Offset = "0x561C28", VA = "0x561C28", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x561C30", Offset = "0x561C30", VA = "0x561C30", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x561C38", Offset = "0x561C38", VA = "0x561C38", Slot = "46")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x561C40", Offset = "0x561C40", VA = "0x561C40", Slot = "47")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x561C48", Offset = "0x561C48", VA = "0x561C48", Slot = "48")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x561C50", Offset = "0x561C50", VA = "0x561C50", Slot = "49")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x561C58", Offset = "0x561C58", VA = "0x561C58", Slot = "50")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x561C60", Offset = "0x561C60", VA = "0x561C60", Slot = "51")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x561C68", Offset = "0x561C68", VA = "0x561C68", Slot = "52")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x561C70", Offset = "0x561C70", VA = "0x561C70", Slot = "53")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x561C78", Offset = "0x561C78", VA = "0x561C78", Slot = "54")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x561C80", Offset = "0x561C80", VA = "0x561C80", Slot = "55")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x561C88", Offset = "0x561C88", VA = "0x561C88", Slot = "56")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x561C90", Offset = "0x561C90", VA = "0x561C90", Slot = "57")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x561C98", Offset = "0x561C98", VA = "0x561C98", Slot = "58")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x561CA0", Offset = "0x561CA0", VA = "0x561CA0", Slot = "59")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x561CA8", Offset = "0x561CA8", VA = "0x561CA8", Slot = "60")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x561CB0", Offset = "0x561CB0", VA = "0x561CB0", Slot = "61")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x561CB8", Offset = "0x561CB8", VA = "0x561CB8", Slot = "62")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x561CC0", Offset = "0x561CC0", VA = "0x561CC0", Slot = "63")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x561CC8", Offset = "0x561CC8", VA = "0x561CC8", Slot = "64")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x561CD0", Offset = "0x561CD0", VA = "0x561CD0", Slot = "65")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x561CD8", Offset = "0x561CD8", VA = "0x561CD8", Slot = "66")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x561CE0", Offset = "0x561CE0", VA = "0x561CE0", Slot = "67")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x561CE8", Offset = "0x561CE8", VA = "0x561CE8")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x55B328", Offset = "0x55B328", VA = "0x55B328")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000093")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x565400", Offset = "0x565400", VA = "0x565400")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x56546C", Offset = "0x56546C", VA = "0x56546C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x5654D0", Offset = "0x5654D0", VA = "0x5654D0", Slot = "68")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000094")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x56325C", Offset = "0x56325C", VA = "0x56325C")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x56561C", Offset = "0x56561C", VA = "0x56561C", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x565680", Offset = "0x565680", VA = "0x565680", Slot = "68")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000095")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x5632C8", Offset = "0x5632C8", VA = "0x5632C8")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x56599C", Offset = "0x56599C", VA = "0x56599C", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x565A00", Offset = "0x565A00", VA = "0x565A00", Slot = "68")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000096")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x563334", Offset = "0x563334", VA = "0x563334")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x565D1C", Offset = "0x565D1C", VA = "0x565D1C", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x565D80", Offset = "0x565D80", VA = "0x565D80", Slot = "68")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000097")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x5633A0", Offset = "0x5633A0", VA = "0x5633A0")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x565EDC", Offset = "0x565EDC", VA = "0x565EDC", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x565F40", Offset = "0x565F40", VA = "0x565F40", Slot = "68")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000098")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x56340C", Offset = "0x56340C", VA = "0x56340C")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x5660BC", Offset = "0x5660BC", VA = "0x5660BC", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x566120", Offset = "0x566120", VA = "0x566120", Slot = "68")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000099")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x563478", Offset = "0x563478", VA = "0x563478")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x56633C", Offset = "0x56633C", VA = "0x56633C", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x5663A0", Offset = "0x5663A0", VA = "0x5663A0", Slot = "68")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009A")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x5634E4", Offset = "0x5634E4", VA = "0x5634E4")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x56667C", Offset = "0x56667C", VA = "0x56667C", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x5666E0", Offset = "0x5666E0", VA = "0x5666E0", Slot = "68")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009B")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x563550", Offset = "0x563550", VA = "0x563550")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x56685C", Offset = "0x56685C", VA = "0x56685C", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x5668C0", Offset = "0x5668C0", VA = "0x5668C0", Slot = "68")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009C")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x5635BC", Offset = "0x5635BC", VA = "0x5635BC")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x566A3C", Offset = "0x566A3C", VA = "0x566A3C", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x566AA0", Offset = "0x566AA0", VA = "0x566AA0", Slot = "68")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009D")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x563628", Offset = "0x563628", VA = "0x563628")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x566BFC", Offset = "0x566BFC", VA = "0x566BFC", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x566C60", Offset = "0x566C60", VA = "0x566C60", Slot = "68")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009E")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x563694", Offset = "0x563694", VA = "0x563694")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x566DEC", Offset = "0x566DEC", VA = "0x566DEC", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x566E50", Offset = "0x566E50", VA = "0x566E50", Slot = "68")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009F")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x563700", Offset = "0x563700", VA = "0x563700")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x566FBC", Offset = "0x566FBC", VA = "0x566FBC", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x567020", Offset = "0x567020", VA = "0x567020", Slot = "68")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A0")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x56716C", Offset = "0x56716C", VA = "0x56716C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x5671D8", Offset = "0x5671D8", VA = "0x5671D8", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x56723C", Offset = "0x56723C", VA = "0x56723C", Slot = "68")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A1")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x56376C", Offset = "0x56376C", VA = "0x56376C")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x567518", Offset = "0x567518", VA = "0x567518", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x56757C", Offset = "0x56757C", VA = "0x56757C", Slot = "68")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A2")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x5637D8", Offset = "0x5637D8", VA = "0x5637D8")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x567714", Offset = "0x567714", VA = "0x567714", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x567778", Offset = "0x567778", VA = "0x567778", Slot = "68")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A3")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x563844", Offset = "0x563844", VA = "0x563844")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x567C74", Offset = "0x567C74", VA = "0x567C74", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x567CD8", Offset = "0x567CD8", VA = "0x567CD8", Slot = "68")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A4")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x5638B0", Offset = "0x5638B0", VA = "0x5638B0")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x5678F4", Offset = "0x5678F4", VA = "0x5678F4", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x567958", Offset = "0x567958", VA = "0x567958", Slot = "68")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A5")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x56391C", Offset = "0x56391C", VA = "0x56391C")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x567E94", Offset = "0x567E94", VA = "0x567E94", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x567EF8", Offset = "0x567EF8", VA = "0x567EF8", Slot = "68")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A6")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x563988", Offset = "0x563988", VA = "0x563988")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x568074", Offset = "0x568074", VA = "0x568074", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x5680D8", Offset = "0x5680D8", VA = "0x5680D8", Slot = "68")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A7")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x5686B0", Offset = "0x5686B0", VA = "0x5686B0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x56871C", Offset = "0x56871C", VA = "0x56871C", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x568780", Offset = "0x568780", VA = "0x568780", Slot = "68")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A8")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x568A5C", Offset = "0x568A5C", VA = "0x568A5C")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x568AC8", Offset = "0x568AC8", VA = "0x568AC8", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x568B2C", Offset = "0x568B2C", VA = "0x568B2C", Slot = "68")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A9")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x5639F4", Offset = "0x5639F4", VA = "0x5639F4")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x568C88", Offset = "0x568C88", VA = "0x568C88", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x568CEC", Offset = "0x568CEC", VA = "0x568CEC", Slot = "68")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AA")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x568E48", Offset = "0x568E48", VA = "0x568E48")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x568EB4", Offset = "0x568EB4", VA = "0x568EB4", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x568F18", Offset = "0x568F18", VA = "0x568F18", Slot = "68")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AB")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x569074", Offset = "0x569074", VA = "0x569074")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x5690E0", Offset = "0x5690E0", VA = "0x5690E0", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x569144", Offset = "0x569144", VA = "0x569144", Slot = "68")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AC")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x563A60", Offset = "0x563A60", VA = "0x563A60")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x569398", Offset = "0x569398", VA = "0x569398", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x5693FC", Offset = "0x5693FC", VA = "0x5693FC", Slot = "68")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AD")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x56973C", Offset = "0x56973C", VA = "0x56973C")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x5697A8", Offset = "0x5697A8", VA = "0x5697A8", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x56980C", Offset = "0x56980C", VA = "0x56980C", Slot = "68")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AE")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x569AE8", Offset = "0x569AE8", VA = "0x569AE8")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x569B54", Offset = "0x569B54", VA = "0x569B54", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x569BB8", Offset = "0x569BB8", VA = "0x569BB8", Slot = "68")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AF")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x569D04", Offset = "0x569D04", VA = "0x569D04")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x569D70", Offset = "0x569D70", VA = "0x569D70", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x569DD4", Offset = "0x569DD4", VA = "0x569DD4", Slot = "68")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B0")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x563B38", Offset = "0x563B38", VA = "0x563B38")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x569F20", Offset = "0x569F20", VA = "0x569F20", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x569F84", Offset = "0x569F84", VA = "0x569F84", Slot = "68")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B1")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x56A110", Offset = "0x56A110", VA = "0x56A110")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x56A17C", Offset = "0x56A17C", VA = "0x56A17C", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x56A1E0", Offset = "0x56A1E0", VA = "0x56A1E0", Slot = "68")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B2")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x563BA4", Offset = "0x563BA4", VA = "0x563BA4")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x56A34C", Offset = "0x56A34C", VA = "0x56A34C", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x56A3B0", Offset = "0x56A3B0", VA = "0x56A3B0", Slot = "68")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B3")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x563C7C", Offset = "0x563C7C", VA = "0x563C7C")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x56A7CC", Offset = "0x56A7CC", VA = "0x56A7CC", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x56A830", Offset = "0x56A830", VA = "0x56A830", Slot = "68")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B4")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x563CE8", Offset = "0x563CE8", VA = "0x563CE8")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x56AA4C", Offset = "0x56AA4C", VA = "0x56AA4C", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x56AAB0", Offset = "0x56AAB0", VA = "0x56AAB0", Slot = "68")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B5")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x563D54", Offset = "0x563D54", VA = "0x563D54")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x56B12C", Offset = "0x56B12C", VA = "0x56B12C", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x56B190", Offset = "0x56B190", VA = "0x56B190", Slot = "68")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B6")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x563DC0", Offset = "0x563DC0", VA = "0x563DC0")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x56B498", Offset = "0x56B498", VA = "0x56B498", Slot = "46")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x56B4FC", Offset = "0x56B4FC", VA = "0x56B4FC", Slot = "68")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B7")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x56B648", Offset = "0x56B648", VA = "0x56B648")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x56B6B4", Offset = "0x56B6B4", VA = "0x56B6B4", Slot = "47")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x56B718", Offset = "0x56B718", VA = "0x56B718", Slot = "68")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B8")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x563E2C", Offset = "0x563E2C", VA = "0x563E2C")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x56BC54", Offset = "0x56BC54", VA = "0x56BC54", Slot = "47")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x56BCB8", Offset = "0x56BCB8", VA = "0x56BCB8", Slot = "68")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B9")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x56BA38", Offset = "0x56BA38", VA = "0x56BA38")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x56BAA4", Offset = "0x56BAA4", VA = "0x56BAA4", Slot = "48")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x56BB08", Offset = "0x56BB08", VA = "0x56BB08", Slot = "68")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BA")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x563E98", Offset = "0x563E98", VA = "0x563E98")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x56BD6C", Offset = "0x56BD6C", VA = "0x56BD6C", Slot = "49")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x56BDD0", Offset = "0x56BDD0", VA = "0x56BDD0", Slot = "68")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BB")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x563F04", Offset = "0x563F04", VA = "0x563F04")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x56BF7C", Offset = "0x56BF7C", VA = "0x56BF7C", Slot = "50")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x56BFE0", Offset = "0x56BFE0", VA = "0x56BFE0", Slot = "68")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BC")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x563F70", Offset = "0x563F70", VA = "0x563F70")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x56C67C", Offset = "0x56C67C", VA = "0x56C67C", Slot = "51")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x56C6E0", Offset = "0x56C6E0", VA = "0x56C6E0", Slot = "68")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BD")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x563FDC", Offset = "0x563FDC", VA = "0x563FDC")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x56C9FC", Offset = "0x56C9FC", VA = "0x56C9FC", Slot = "52")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x56CA60", Offset = "0x56CA60", VA = "0x56CA60", Slot = "68")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BE")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x564048", Offset = "0x564048", VA = "0x564048")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x56CC04", Offset = "0x56CC04", VA = "0x56CC04", Slot = "53")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x56CC68", Offset = "0x56CC68", VA = "0x56CC68", Slot = "68")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BF")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x5640B4", Offset = "0x5640B4", VA = "0x5640B4")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x56CF84", Offset = "0x56CF84", VA = "0x56CF84", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x56CFE8", Offset = "0x56CFE8", VA = "0x56CFE8", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C0")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x564120", Offset = "0x564120", VA = "0x564120")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x56D994", Offset = "0x56D994", VA = "0x56D994", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x56D9F8", Offset = "0x56D9F8", VA = "0x56D9F8", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C1")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x56418C", Offset = "0x56418C", VA = "0x56418C")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x56DAAC", Offset = "0x56DAAC", VA = "0x56DAAC", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x56DB10", Offset = "0x56DB10", VA = "0x56DB10", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C2")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x5641F8", Offset = "0x5641F8", VA = "0x5641F8")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x56D614", Offset = "0x56D614", VA = "0x56D614", Slot = "57")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x56D678", Offset = "0x56D678", VA = "0x56D678", Slot = "68")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C3")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x564264", Offset = "0x564264", VA = "0x564264")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x56D09C", Offset = "0x56D09C", VA = "0x56D09C", Slot = "55")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x56D100", Offset = "0x56D100", VA = "0x56D100", Slot = "68")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C4")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x5642D0", Offset = "0x5642D0", VA = "0x5642D0")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x56D294", Offset = "0x56D294", VA = "0x56D294", Slot = "56")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x56D2F8", Offset = "0x56D2F8", VA = "0x56D2F8", Slot = "68")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C5")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x56433C", Offset = "0x56433C", VA = "0x56433C")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x56DBC4", Offset = "0x56DBC4", VA = "0x56DBC4", Slot = "58")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x56DC28", Offset = "0x56DC28", VA = "0x56DC28", Slot = "68")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C6")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x5643A8", Offset = "0x5643A8", VA = "0x5643A8")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x56DF04", Offset = "0x56DF04", VA = "0x56DF04", Slot = "59")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x56DF68", Offset = "0x56DF68", VA = "0x56DF68", Slot = "68")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C7")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x564414", Offset = "0x564414", VA = "0x564414")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x56E0B4", Offset = "0x56E0B4", VA = "0x56E0B4", Slot = "60")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x56E118", Offset = "0x56E118", VA = "0x56E118", Slot = "68")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C8")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x56E19C", Offset = "0x56E19C", VA = "0x56E19C")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x56E208", Offset = "0x56E208", VA = "0x56E208", Slot = "61")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x56E26C", Offset = "0x56E26C", VA = "0x56E26C", Slot = "68")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C9")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x564480", Offset = "0x564480", VA = "0x564480")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x56E3C8", Offset = "0x56E3C8", VA = "0x56E3C8", Slot = "62")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x56E42C", Offset = "0x56E42C", VA = "0x56E42C", Slot = "68")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000CA")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000761")]
		[Address(RVA = "0x5644EC", Offset = "0x5644EC", VA = "0x5644EC")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x56E588", Offset = "0x56E588", VA = "0x56E588", Slot = "63")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x56E5EC", Offset = "0x56E5EC", VA = "0x56E5EC", Slot = "68")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000CB")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000764")]
		[Address(RVA = "0x564558", Offset = "0x564558", VA = "0x564558")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x56E7A8", Offset = "0x56E7A8", VA = "0x56E7A8", Slot = "64")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x56E80C", Offset = "0x56E80C", VA = "0x56E80C", Slot = "68")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000CC")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x5645C4", Offset = "0x5645C4", VA = "0x5645C4")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x56EB28", Offset = "0x56EB28", VA = "0x56EB28", Slot = "65")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x56EB8C", Offset = "0x56EB8C", VA = "0x56EB8C", Slot = "68")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000CD")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x564630", Offset = "0x564630", VA = "0x564630")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x56EEA8", Offset = "0x56EEA8", VA = "0x56EEA8", Slot = "66")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x56EF0C", Offset = "0x56EF0C", VA = "0x56EF0C", Slot = "68")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000CE")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x56F058", Offset = "0x56F058", VA = "0x56F058")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x56F0C4", Offset = "0x56F0C4", VA = "0x56F0C4", Slot = "67")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x56F128", Offset = "0x56F128", VA = "0x56F128", Slot = "68")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000CF")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x56469C", Offset = "0x56469C", VA = "0x56469C")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x56B32C", Offset = "0x56B32C", VA = "0x56B32C", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x56B390", Offset = "0x56B390", VA = "0x56B390", Slot = "68")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D0")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x564708", Offset = "0x564708", VA = "0x564708")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x56C2BC", Offset = "0x56C2BC", VA = "0x56C2BC", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x56C320", Offset = "0x56C320", VA = "0x56C320", Slot = "68")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D1")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x563ACC", Offset = "0x563ACC", VA = "0x563ACC")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x5692A0", Offset = "0x5692A0", VA = "0x5692A0", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x569304", Offset = "0x569304", VA = "0x569304", Slot = "68")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D2")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x564774", Offset = "0x564774", VA = "0x564774")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x56AC54", Offset = "0x56AC54", VA = "0x56AC54", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x56ACB8", Offset = "0x56ACB8", VA = "0x56ACB8", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D3")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x563C10", Offset = "0x563C10", VA = "0x563C10")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x56A530", Offset = "0x56A530", VA = "0x56A530", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x56A5AC", Offset = "0x56A5AC", VA = "0x56A5AC", Slot = "57")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x56A628", Offset = "0x56A628", VA = "0x56A628", Slot = "68")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D4")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x5647E0", Offset = "0x5647E0", VA = "0x5647E0")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x5683F4", Offset = "0x5683F4", VA = "0x5683F4", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x568458", Offset = "0x568458", VA = "0x568458", Slot = "68")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D5")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x56484C", Offset = "0x56484C", VA = "0x56484C")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x56C4CC", Offset = "0x56C4CC", VA = "0x56C4CC", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x56C530", Offset = "0x56C530", VA = "0x56C530", Slot = "68")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20000D6")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x565584", Offset = "0x565584", VA = "0x565584")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class AchievementDefinition
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Target;

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x56F284", Offset = "0x56F284", VA = "0x56F284")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x565734", Offset = "0x565734", VA = "0x565734")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class AchievementProgress
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong Count;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x56F34C", Offset = "0x56F34C", VA = "0x56F34C")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x565AB4", Offset = "0x565AB4", VA = "0x565AB4")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x565E34", Offset = "0x565E34", VA = "0x565E34")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string CurrentName;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int LatestCode;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string LatestName;

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x565FF4", Offset = "0x565FF4", VA = "0x565FF4")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class AssetDetails
	{
		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AssetType;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string DownloadStatus;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string IapStatus;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241320", Offset = "0x241320")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Metadata;

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x5661D4", Offset = "0x5661D4", VA = "0x5661D4")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x566454", Offset = "0x566454", VA = "0x566454")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x566794", Offset = "0x566794", VA = "0x566794")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x566974", Offset = "0x566974", VA = "0x566974")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Filepath;

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x566B54", Offset = "0x566B54", VA = "0x566B54")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint BytesTotal;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool Completed;

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x566D14", Offset = "0x566D14", VA = "0x566D14")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CountdownMS;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x566F04", Offset = "0x566F04", VA = "0x566F04")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x5670D4", Offset = "0x5670D4", VA = "0x5670D4")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string SocialContext;

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x56F4F4", Offset = "0x56F4F4", VA = "0x56F4F4")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x5672F0", Offset = "0x5672F0", VA = "0x5672F0")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x567630", Offset = "0x567630", VA = "0x567630")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class CloudStorageData
	{
		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly byte[] Data;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DataSize;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Key;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x56782C", Offset = "0x56782C", VA = "0x56782C")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Counter;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint DataSize;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string ExtraData;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Key;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x567D8C", Offset = "0x567D8C", VA = "0x567D8C")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x567A0C", Offset = "0x567A0C", VA = "0x567A0C")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Key;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string VersionHandle;

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x567FAC", Offset = "0x567FAC", VA = "0x567FAC")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x23F764", Offset = "0x23F764")]
	public class DeserializableList<T> : IList<T>, IEnumerable, ICollection<T>, IEnumerable<T>
	{
		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x1700006E")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600079E")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006F")]
		public int Count
		{
			[Token(Token = "0x600079D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000070")]
		public T Item
		{
			[Token(Token = "0x60007A0")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60007A1")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x248B80", Offset = "0x248B80")]
		public List<T> Data
		{
			[Token(Token = "0x60007AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		public bool HasNextPage
		{
			[Token(Token = "0x60007AD")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000073")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60007AE")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public string NextUrl
		{
			[Token(Token = "0x60007AF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public string PreviousUrl
		{
			[Token(Token = "0x60007B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079C")]
		public DeserializableList()
		{
		}

		[Token(Token = "0x600079F")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60007A2")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60007A3")]
		public void Clear()
		{
		}

		[Token(Token = "0x60007A4")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A5")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60007A6")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60007A7")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60007A8")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A9")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60007AA")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20000ED")]
	public class Destination
	{
		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string ApiName;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DisplayName;

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x56F59C", Offset = "0x56F59C", VA = "0x56F59C")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x56818C", Offset = "0x56818C", VA = "0x56818C")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class Error
	{
		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x561AA0", Offset = "0x561AA0", VA = "0x561AA0")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] Payload;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool IsCompleted;

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x56850C", Offset = "0x56850C", VA = "0x56850C")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class InstalledApplication
	{
		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string ApplicationId;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string PackageName;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Status;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int VersionCode;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string VersionName;

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x56F654", Offset = "0x56F654", VA = "0x56F654")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x568834", Offset = "0x568834", VA = "0x568834")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string EnglishName;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string NativeName;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Tag;

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x56F43C", Offset = "0x56F43C", VA = "0x56F43C")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidBlock;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidCancel;

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x568BE0", Offset = "0x568BE0", VA = "0x568BE0")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class LaunchDetails
	{
		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string LaunchSource;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241374", Offset = "0x241374")]
		public readonly UserList Users;

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x56F72C", Offset = "0x56F72C", VA = "0x56F72C")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x568DA0", Offset = "0x568DA0", VA = "0x568DA0")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserReportId;

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x568FCC", Offset = "0x568FCC", VA = "0x568FCC")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidUnblock;

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x5691F8", Offset = "0x5691F8", VA = "0x5691F8")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int Rank;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Score;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User User;

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x56F848", Offset = "0x56F848", VA = "0x56F848")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong TotalCount;

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x5694B0", Offset = "0x5694B0", VA = "0x5694B0")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class LinkedAccount
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string AccessToken;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string UserId;

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x56F95C", Offset = "0x56F95C", VA = "0x56F95C")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x5698C0", Offset = "0x5698C0", VA = "0x5698C0")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x569C6C", Offset = "0x569C6C", VA = "0x569C6C")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x569E88", Offset = "0x569E88", VA = "0x569E88")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool IsPaused;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int LivestreamingType;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool MicEnabled;

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x56A038", Offset = "0x56A038", VA = "0x56A038")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CommentCount;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int ReactionCount;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string TotalViews;

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x56A294", Offset = "0x56A294", VA = "0x56A294")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x56A464", Offset = "0x56A464", VA = "0x56A464")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CanMatch;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyTotalScore;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string TraceId;

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x56FC3C", Offset = "0x56FC3C", VA = "0x56FC3C")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x56FA14", Offset = "0x56FA14", VA = "0x56FA14")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly RoomList Rooms;

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x56A6DC", Offset = "0x56A6DC", VA = "0x56A6DC")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly User UserOptional;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2413A8", Offset = "0x2413A8")]
		public readonly User User;

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x56FD14", Offset = "0x56FD14", VA = "0x56FD14")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x56FE08", Offset = "0x56FE08", VA = "0x56FE08")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2413F8", Offset = "0x2413F8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint AverageWait;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Pool;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string RequestHash;

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x56A8E4", Offset = "0x56A8E4", VA = "0x56A8E4")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Room Room;

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x56AB64", Offset = "0x56AB64", VA = "0x56AB64")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly uint LossCount;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double SkillMean;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint WinCount;

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x56B244", Offset = "0x56B244", VA = "0x56B244")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class NetworkingPeer
	{
		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x241454", Offset = "0x241454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x241454", Offset = "0x241454")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x241488", Offset = "0x241488")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x241488", Offset = "0x241488")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x17000076")]
		public ulong ID
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x570048", Offset = "0x570048", VA = "0x570048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B7C", Offset = "0x247B7C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x570030", Offset = "0x570030", VA = "0x570030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B8C", Offset = "0x247B8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public PeerConnectionState State
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x570050", Offset = "0x570050", VA = "0x570050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247B9C", Offset = "0x247B9C")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x570040", Offset = "0x570040", VA = "0x570040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247BAC", Offset = "0x247BAC")]
			private set
			{
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x56B468", Offset = "0x56B468", VA = "0x56B468")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class OrgScopedID
	{
		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x56B5B0", Offset = "0x56B5B0", VA = "0x56B5B0")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class Party
	{
		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2414BC", Offset = "0x2414BC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2414F0", Offset = "0x2414F0")]
		public readonly User Leader;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241544", Offset = "0x241544")]
		public readonly Room Room;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241578", Offset = "0x241578")]
		public readonly UserList Users;

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x56B7CC", Offset = "0x56B7CC", VA = "0x56B7CC")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class PartyID
	{
		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x56BBBC", Offset = "0x56BBBC", VA = "0x56BBBC")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderId;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string UserAlias;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserName;

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x56BE84", Offset = "0x56BE84", VA = "0x56BE84")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class Pid
	{
		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Id;

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x570058", Offset = "0x570058", VA = "0x570058")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x56C094", Offset = "0x56C094", VA = "0x56C094")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class PingResult
	{
		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x2415AC", Offset = "0x2415AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2415AC", Offset = "0x2415AC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x17000078")]
		public ulong ID
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x570100", Offset = "0x570100", VA = "0x570100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247BBC", Offset = "0x247BBC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x5700F0", Offset = "0x5700F0", VA = "0x5700F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247BCC", Offset = "0x247BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x570108", Offset = "0x570108", VA = "0x570108")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700007A")]
		public bool IsTimeout
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x57019C", Offset = "0x57019C", VA = "0x57019C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x56C484", Offset = "0x56C484", VA = "0x56C484")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x56C5E4", Offset = "0x56C5E4", VA = "0x56C5E4")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class Product
	{
		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Description;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Sku;

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x570204", Offset = "0x570204", VA = "0x570204")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x56C794", Offset = "0x56C794", VA = "0x56C794")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class Purchase
	{
		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Sku;

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x56CB14", Offset = "0x56CB14", VA = "0x56CB14")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x56CD1C", Offset = "0x56CD1C", VA = "0x56CD1C")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class Room
	{
		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Description;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2415E0", Offset = "0x2415E0")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241614", Offset = "0x241614")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Name;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x24166C", Offset = "0x24166C")]
		public readonly User Owner;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2416C0", Offset = "0x2416C0")]
		public readonly TeamList Teams;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public readonly RoomType Type;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241714", Offset = "0x241714")]
		public readonly UserList Users;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint Version;

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x56AD6C", Offset = "0x56AD6C", VA = "0x56AD6C")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x56D72C", Offset = "0x56D72C", VA = "0x56D72C")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime SentTime;

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x56D1B4", Offset = "0x56D1B4", VA = "0x56D1B4")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x56D3AC", Offset = "0x56D3AC", VA = "0x56D3AC")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class SdkAccount
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserId;

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x5704F4", Offset = "0x5704F4", VA = "0x5704F4")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x56DCDC", Offset = "0x56DCDC", VA = "0x56DCDC")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x56E01C", Offset = "0x56E01C", VA = "0x56E01C")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class SystemPermission
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x56E320", Offset = "0x56E320", VA = "0x56E320")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class SystemVoipState
	{
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x56E4E0", Offset = "0x56E4E0", VA = "0x56E4E0")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class Team
	{
		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int MaxUsers;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int MinUsers;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Name;

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x57059C", Offset = "0x57059C", VA = "0x57059C")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x5702CC", Offset = "0x5702CC", VA = "0x5702CC")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class User
	{
		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ImageURL;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string InviteToken;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string OculusID;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Presence;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x56E6A0", Offset = "0x56E6A0", VA = "0x56E6A0")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x56EC40", Offset = "0x56EC40", VA = "0x56EC40")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class UserAndRoom
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x241748", Offset = "0x241748")]
		public readonly Room Room;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly User User;

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x570688", Offset = "0x570688", VA = "0x570688")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x56E8C0", Offset = "0x56E8C0", VA = "0x56E8C0")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class UserProof
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Value;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x56EFC0", Offset = "0x56EFC0", VA = "0x56EFC0")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class UserReportID
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x56F1DC", Offset = "0x56F1DC", VA = "0x56F1DC")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000128")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ulong size;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x1700007B")]
		public ulong SenderID
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x5718E4", Offset = "0x5718E4", VA = "0x5718E4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700007C")]
		public ulong Size
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x57196C", Offset = "0x57196C", VA = "0x57196C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700007D")]
		public SendPolicy Policy
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x571974", Offset = "0x571974", VA = "0x571974")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x5708BC", Offset = "0x5708BC", VA = "0x5708BC")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x571710", Offset = "0x571710", VA = "0x571710")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x5719FC", Offset = "0x5719FC", VA = "0x5719FC", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x571A60", Offset = "0x571A60", VA = "0x571A60", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x400045F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24177C", Offset = "0x24177C")]
		Unknown,
		[Token(Token = "0x4000460")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2417B0", Offset = "0x2417B0")]
		Join,
		[Token(Token = "0x4000461")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2417E4", Offset = "0x2417E4")]
		Leave,
		[Token(Token = "0x4000462")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241818", Offset = "0x241818")]
		Invite,
		[Token(Token = "0x4000463")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24184C", Offset = "0x24184C")]
		Uninvite
	}
	[Token(Token = "0x200012A")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000465")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241884", Offset = "0x241884")]
		Unknown,
		[Token(Token = "0x4000466")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2418B8", Offset = "0x2418B8")]
		Connected,
		[Token(Token = "0x4000467")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2418F0", Offset = "0x2418F0")]
		Timeout,
		[Token(Token = "0x4000468")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241924", Offset = "0x241924")]
		Closed
	}
	[Token(Token = "0x200012B")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x400046A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241958", Offset = "0x241958")]
		Unknown,
		[Token(Token = "0x400046B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24198C", Offset = "0x24198C")]
		Granted,
		[Token(Token = "0x400046C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2419C0", Offset = "0x2419C0")]
		Denied,
		[Token(Token = "0x400046D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2419F4", Offset = "0x2419F4")]
		Blocked
	}
	[Token(Token = "0x200012C")]
	public enum PermissionType
	{
		[Token(Token = "0x400046F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241A28", Offset = "0x241A28")]
		Unknown,
		[Token(Token = "0x4000470")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241A5C", Offset = "0x241A5C")]
		Microphone,
		[Token(Token = "0x4000471")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241A94", Offset = "0x241A94")]
		WriteExternalStorage
	}
	[Token(Token = "0x200012D")]
	public sealed class Core
	{
		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x55D02C", Offset = "0x55D02C", VA = "0x55D02C")]
		public Core()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x55C3E4", Offset = "0x55C3E4", VA = "0x55C3E4")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x55D034", Offset = "0x55D034", VA = "0x55D034")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x55D0C4", Offset = "0x55D0C4", VA = "0x55D0C4")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x55D394", Offset = "0x55D394", VA = "0x55D394")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x55D740", Offset = "0x55D740", VA = "0x55D740")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x55D36C", Offset = "0x55D36C", VA = "0x55D36C")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x738140", Offset = "0x738140", VA = "0x738140")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x7382CC", Offset = "0x7382CC", VA = "0x7382CC")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200012F")]
	public static class Rooms
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x5739A8", Offset = "0x5739A8", VA = "0x5739A8")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x573CE0", Offset = "0x573CE0", VA = "0x573CE0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x247BDC", Offset = "0x247BDC")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x573D7C", Offset = "0x573D7C", VA = "0x573D7C")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x573E9C", Offset = "0x573E9C", VA = "0x573E9C")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x574004", Offset = "0x574004", VA = "0x574004")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x57411C", Offset = "0x57411C", VA = "0x57411C")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x574224", Offset = "0x574224", VA = "0x574224")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x57433C", Offset = "0x57433C", VA = "0x57433C")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x574444", Offset = "0x574444", VA = "0x574444")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x57459C", Offset = "0x57459C", VA = "0x57459C")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x5746A4", Offset = "0x5746A4", VA = "0x5746A4")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x5747C4", Offset = "0x5747C4", VA = "0x5747C4")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x5748E4", Offset = "0x5748E4", VA = "0x5748E4")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x574A4C", Offset = "0x574A4C", VA = "0x574A4C")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x574B80", Offset = "0x574B80", VA = "0x574B80")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x574C78", Offset = "0x574C78", VA = "0x574C78")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x574D90", Offset = "0x574D90", VA = "0x574D90")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x574EB0", Offset = "0x574EB0", VA = "0x574EB0")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x574FD0", Offset = "0x574FD0", VA = "0x574FD0")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x5750E4", Offset = "0x5750E4", VA = "0x5750E4")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x573CE4", Offset = "0x573CE4", VA = "0x573CE4")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x575204", Offset = "0x575204", VA = "0x575204")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x57529C", Offset = "0x57529C", VA = "0x57529C")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x575334", Offset = "0x575334", VA = "0x575334")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000130")]
	public static class Matchmaking
	{
		[Token(Token = "0x2000131")]
		public class CustomQuery
		{
			[Token(Token = "0x2000132")]
			public struct Criterion
			{
				[Token(Token = "0x4000476")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000477")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000478")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6000831")]
				[Address(RVA = "0x2B8AFC", Offset = "0x2B8AFC", VA = "0x2B8AFC")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Criterion[] criteria;

			[Token(Token = "0x600082F")]
			[Address(RVA = "0x560E3C", Offset = "0x560E3C", VA = "0x560E3C")]
			public CustomQuery()
			{
			}

			[Token(Token = "0x6000830")]
			[Address(RVA = "0x55F758", Offset = "0x55F758", VA = "0x55F758")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x55F1D8", Offset = "0x55F1D8", VA = "0x55F1D8")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x55F504", Offset = "0x55F504", VA = "0x55F504")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x55F624", Offset = "0x55F624", VA = "0x55F624")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x55FC8C", Offset = "0x55FC8C", VA = "0x55FC8C")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x55FE44", Offset = "0x55FE44", VA = "0x55FE44")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x55FF3C", Offset = "0x55FF3C", VA = "0x55FF3C")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x560024", Offset = "0x560024", VA = "0x560024")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x56016C", Offset = "0x56016C", VA = "0x56016C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x5602CC", Offset = "0x5602CC", VA = "0x5602CC")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x5603EC", Offset = "0x5603EC", VA = "0x5603EC")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x56054C", Offset = "0x56054C", VA = "0x56054C")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x560680", Offset = "0x560680", VA = "0x560680")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x5607E0", Offset = "0x5607E0", VA = "0x5607E0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x56091C", Offset = "0x56091C", VA = "0x56091C")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x560A84", Offset = "0x560A84", VA = "0x560A84")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x560B8C", Offset = "0x560B8C", VA = "0x560B8C")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x560CAC", Offset = "0x560CAC", VA = "0x560CAC")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x560DA4", Offset = "0x560DA4", VA = "0x560DA4")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000133")]
	public static class Net
	{
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x5707C4", Offset = "0x5707C4", VA = "0x5707C4")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x570994", Offset = "0x570994", VA = "0x570994")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x570AD0", Offset = "0x570AD0", VA = "0x570AD0")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x570B94", Offset = "0x570B94", VA = "0x570B94")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x570C58", Offset = "0x570C58", VA = "0x570C58")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x570D1C", Offset = "0x570D1C", VA = "0x570D1C")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x570DE4", Offset = "0x570DE4", VA = "0x570DE4")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x570F04", Offset = "0x570F04", VA = "0x570F04")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x570FBC", Offset = "0x570FBC", VA = "0x570FBC")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x571070", Offset = "0x571070", VA = "0x571070")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x571188", Offset = "0x571188", VA = "0x571188")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x571220", Offset = "0x571220", VA = "0x571220")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x5712B8", Offset = "0x5712B8", VA = "0x5712B8")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000134")]
	public static class Leaderboards
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x55E804", Offset = "0x55E804", VA = "0x55E804")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x55E948", Offset = "0x55E948", VA = "0x55E948")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x55EA8C", Offset = "0x55EA8C", VA = "0x55EA8C")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x55EBB8", Offset = "0x55EBB8", VA = "0x55EBB8")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x55ECE4", Offset = "0x55ECE4", VA = "0x55ECE4")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000135")]
	public static class Voip
	{
		[Token(Token = "0x6000844")]
		[Address(RVA = "0x3EF26C", Offset = "0x3EF26C", VA = "0x3EF26C")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x3EF6A8", Offset = "0x3EF6A8", VA = "0x3EF6A8")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x3EF334", Offset = "0x3EF334", VA = "0x3EF334")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x3F14E4", Offset = "0x3F14E4", VA = "0x3F14E4")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x3F15E8", Offset = "0x3F15E8", VA = "0x3F15E8")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x3F16A8", Offset = "0x3F16A8", VA = "0x3F16A8")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x3F1764", Offset = "0x3F1764", VA = "0x3F1764")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x3F1820", Offset = "0x3F1820", VA = "0x3F1820")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x3F18EC", Offset = "0x3F18EC", VA = "0x3F18EC")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x3F19B8", Offset = "0x3F19B8", VA = "0x3F19B8")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x3F1A84", Offset = "0x3F1A84", VA = "0x3F1A84")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x3F1BE4", Offset = "0x3F1BE4", VA = "0x3F1BE4")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x3EF048", Offset = "0x3EF048", VA = "0x3EF048")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x3EF0E0", Offset = "0x3EF0E0", VA = "0x3EF0E0")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x3F1CF8", Offset = "0x3F1CF8", VA = "0x3F1CF8")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000136")]
	public static class Achievements
	{
		[Token(Token = "0x6000853")]
		[Address(RVA = "0x7363A8", Offset = "0x7363A8", VA = "0x7363A8")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x7365B0", Offset = "0x7365B0", VA = "0x7365B0")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x7367BC", Offset = "0x7367BC", VA = "0x7367BC")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x7369A4", Offset = "0x7369A4", VA = "0x7369A4")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x736B88", Offset = "0x736B88", VA = "0x736B88")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x736E78", Offset = "0x736E78", VA = "0x736E78")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x737164", Offset = "0x737164", VA = "0x737164")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x737344", Offset = "0x737344", VA = "0x737344")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x737618", Offset = "0x737618", VA = "0x737618")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public static class Application
	{
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x737CB0", Offset = "0x737CB0", VA = "0x737CB0")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x737E8C", Offset = "0x737E8C", VA = "0x737E8C")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000138")]
	public static class AssetFile
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x7387D8", Offset = "0x7387D8", VA = "0x7387D8")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x738A08", Offset = "0x738A08", VA = "0x738A08")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x738C40", Offset = "0x738C40", VA = "0x738C40")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x738E20", Offset = "0x738E20", VA = "0x738E20")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x739054", Offset = "0x739054", VA = "0x739054")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x739254", Offset = "0x739254", VA = "0x739254")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x739434", Offset = "0x739434", VA = "0x739434")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x739638", Offset = "0x739638", VA = "0x739638")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x73983C", Offset = "0x73983C", VA = "0x73983C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x739A1C", Offset = "0x739A1C", VA = "0x739A1C")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x739C28", Offset = "0x739C28", VA = "0x739C28")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x739E58", Offset = "0x739E58", VA = "0x739E58")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x73A090", Offset = "0x73A090", VA = "0x73A090")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x73A270", Offset = "0x73A270", VA = "0x73A270")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000139")]
	public static class Avatar
	{
	}
	[Token(Token = "0x200013A")]
	public static class Cal
	{
	}
	[Token(Token = "0x200013B")]
	public static class CloudStorage
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x55C2CC", Offset = "0x55C2CC", VA = "0x55C2CC")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x55C470", Offset = "0x55C470", VA = "0x55C470")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x55C588", Offset = "0x55C588", VA = "0x55C588")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x55C698", Offset = "0x55C698", VA = "0x55C698")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x55C7B0", Offset = "0x55C7B0", VA = "0x55C7B0")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x55C8C0", Offset = "0x55C8C0", VA = "0x55C8C0")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x55C9D8", Offset = "0x55C9D8", VA = "0x55C9D8")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x55CAF8", Offset = "0x55CAF8", VA = "0x55CAF8")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x55CC18", Offset = "0x55CC18", VA = "0x55CC18")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x55CD64", Offset = "0x55CD64", VA = "0x55CD64")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x55CF24", Offset = "0x55CF24", VA = "0x55CF24")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public static class Colocation
	{
	}
	[Token(Token = "0x200013E")]
	public static class Entitlements
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x55DBBC", Offset = "0x55DBBC", VA = "0x55DBBC")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000140")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000141")]
	public static class IAP
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x55DCCC", Offset = "0x55DCCC", VA = "0x55DCCC")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x55DDC0", Offset = "0x55DDC0", VA = "0x55DDC0")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x55DEE4", Offset = "0x55DEE4", VA = "0x55DEE4")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x55DFEC", Offset = "0x55DFEC", VA = "0x55DFEC")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x55E0F4", Offset = "0x55E0F4", VA = "0x55E0F4")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x55E26C", Offset = "0x55E26C", VA = "0x55E26C")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x55E42C", Offset = "0x55E42C", VA = "0x55E42C")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000142")]
	public static class LanguagePack
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x55E5EC", Offset = "0x55E5EC", VA = "0x55E5EC")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x55E6F4", Offset = "0x55E6F4", VA = "0x55E6F4")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x55EE28", Offset = "0x55EE28", VA = "0x55EE28")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x55EF30", Offset = "0x55EF30", VA = "0x55EF30")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x55F038", Offset = "0x55F038", VA = "0x55F038")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x55F140", Offset = "0x55F140", VA = "0x55F140")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000144")]
	public static class Media
	{
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x5616A8", Offset = "0x5616A8", VA = "0x5616A8")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000145")]
	public static class Notifications
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0x571350", Offset = "0x571350", VA = "0x571350")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x571458", Offset = "0x571458", VA = "0x571458")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x571550", Offset = "0x571550", VA = "0x571550")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000146")]
	public static class Parties
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x571AF4", Offset = "0x571AF4", VA = "0x571AF4")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x571BFC", Offset = "0x571BFC", VA = "0x571BFC")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000147")]
	public static class RichPresence
	{
		[Token(Token = "0x600088B")]
		[Address(RVA = "0x5725A8", Offset = "0x5725A8", VA = "0x5725A8")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x572690", Offset = "0x572690", VA = "0x572690")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x572798", Offset = "0x572798", VA = "0x572798")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x57292C", Offset = "0x57292C", VA = "0x57292C")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000148")]
	public static class Users
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0x3F0664", Offset = "0x3F0664", VA = "0x3F0664")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x3F0780", Offset = "0x3F0780", VA = "0x3F0780")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x3DB8D8", Offset = "0x3DB8D8", VA = "0x3DB8D8")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x3F088C", Offset = "0x3F088C", VA = "0x3F088C")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x3F0998", Offset = "0x3F0998", VA = "0x3F0998")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x3F0AA4", Offset = "0x3F0AA4", VA = "0x3F0AA4")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x3F0C00", Offset = "0x3F0C00", VA = "0x3F0C00")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x3F0D1C", Offset = "0x3F0D1C", VA = "0x3F0D1C")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x3F0E28", Offset = "0x3F0E28", VA = "0x3F0E28")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x3F0F34", Offset = "0x3F0F34", VA = "0x3F0F34")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x3F1050", Offset = "0x3F1050", VA = "0x3F1050")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x3F115C", Offset = "0x3F115C", VA = "0x3F115C")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x3F1320", Offset = "0x3F1320", VA = "0x3F1320")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x400047A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241AD8", Offset = "0x241AD8")]
		Success = 0,
		[Token(Token = "0x400047B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241B0C", Offset = "0x241B0C")]
		Uninitialized = -1,
		[Token(Token = "0x400047C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241B48", Offset = "0x241B48")]
		PreLoaded = -2,
		[Token(Token = "0x400047D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241B80", Offset = "0x241B80")]
		FileInvalid = -3,
		[Token(Token = "0x400047E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241BBC", Offset = "0x241BBC")]
		SignatureInvalid = -4,
		[Token(Token = "0x400047F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241BFC", Offset = "0x241BFC")]
		UnableToVerify = -5,
		[Token(Token = "0x4000480")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241C3C", Offset = "0x241C3C")]
		VersionMismatch = -6,
		[Token(Token = "0x4000481")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241C7C", Offset = "0x241C7C")]
		Unknown = -7,
		[Token(Token = "0x4000482")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241CB0", Offset = "0x241CB0")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000483")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241CF0", Offset = "0x241CF0")]
		NotEntitled = -9
	}
	[Token(Token = "0x200014A")]
	public static class PlatformInternal
	{
		[Token(Token = "0x200014B")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000485")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000486")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000487")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000488")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000489")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x400048A")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x400048B")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x400048C")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x400048D")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x400048E")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x400048F")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000490")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000491")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000492")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000493")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000494")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000495")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000496")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000497")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000498")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000499")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x400049A")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x400049B")]
			Party_Create = 450042703u,
			[Token(Token = "0x400049C")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x400049D")]
			Party_Get = 1586058173u,
			[Token(Token = "0x400049E")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x400049F")]
			Party_Invite = 901104867u,
			[Token(Token = "0x40004A0")]
			Party_Join = 1744993395u,
			[Token(Token = "0x40004A1")]
			Party_Leave = 848430801u,
			[Token(Token = "0x40004A2")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x40004A3")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x40004A4")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x40004A5")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x40004A6")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x40004A7")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x40004A8")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x40004A9")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x40004AA")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x40004AB")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x40004AC")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x40004AD")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x40004AE")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x40004AF")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x40004B0")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x40004B1")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x40004B2")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x40004B3")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x200014C")]
		public static class HTTP
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0x571EA8", Offset = "0x571EA8", VA = "0x571EA8")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x200014D")]
		public static class Users
		{
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x571F40", Offset = "0x571F40", VA = "0x571F40")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x571C94", Offset = "0x571C94", VA = "0x571C94")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x5648B8", Offset = "0x5648B8", VA = "0x5648B8")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x571D10", Offset = "0x571D10", VA = "0x571D10")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x1700007E")]
		public static string AppID
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0x55DB90", Offset = "0x55DB90", VA = "0x55DB90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x572310", Offset = "0x572310", VA = "0x572310")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public static string MobileAppID
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0x55DB68", Offset = "0x55DB68", VA = "0x55DB68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x57233C", Offset = "0x57233C", VA = "0x57233C")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x55D718", Offset = "0x55D718", VA = "0x55D718")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x572368", Offset = "0x572368", VA = "0x572368")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x572394", Offset = "0x572394", VA = "0x572394")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x5723BC", Offset = "0x5723BC", VA = "0x5723BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x57219C", Offset = "0x57219C", VA = "0x57219C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x5723E8", Offset = "0x5723E8", VA = "0x5723E8")]
			set
			{
			}
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x5720E8", Offset = "0x5720E8", VA = "0x5720E8")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x60008AC")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60008AD")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60008AE")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class Request
	{
		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Message.Callback callback_;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x241D6C", Offset = "0x241D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x241D6C", Offset = "0x241D6C")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x17000083")]
		public ulong RequestID
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x55B284", Offset = "0x55B284", VA = "0x55B284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C10", Offset = "0x247C10")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x57244C", Offset = "0x57244C", VA = "0x57244C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C20", Offset = "0x247C20")]
			set
			{
			}
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x55DCA4", Offset = "0x55DCA4", VA = "0x55DCA4")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x57245C", Offset = "0x57245C", VA = "0x57245C")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x5724E8", Offset = "0x5724E8", VA = "0x5724E8", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x55C1A4", Offset = "0x55C1A4", VA = "0x55C1A4")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x40004BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241DA0", Offset = "0x241DA0")]
		Unknown,
		[Token(Token = "0x40004BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241DD4", Offset = "0x241DD4")]
		None,
		[Token(Token = "0x40004BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241E08", Offset = "0x241E08")]
		CurrentCapacity,
		[Token(Token = "0x40004C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241E48", Offset = "0x241E48")]
		StartedAgo,
		[Token(Token = "0x40004C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241E80", Offset = "0x241E80")]
		EndingIn,
		[Token(Token = "0x40004C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241EB8", Offset = "0x241EB8")]
		LookingForAMatch
	}
	[Token(Token = "0x2000152")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x572AEC", Offset = "0x572AEC", VA = "0x572AEC")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x572B7C", Offset = "0x572B7C", VA = "0x572B7C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x572C0C", Offset = "0x572C0C", VA = "0x572C0C")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x572CA4", Offset = "0x572CA4", VA = "0x572CA4")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x572D2C", Offset = "0x572D2C", VA = "0x572D2C")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x572DBC", Offset = "0x572DBC", VA = "0x572DBC")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x572E4C", Offset = "0x572E4C", VA = "0x572E4C")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x572EFC", Offset = "0x572EFC", VA = "0x572EFC")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x572F8C", Offset = "0x572F8C", VA = "0x572F8C")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x57301C", Offset = "0x57301C", VA = "0x57301C")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x5730AC", Offset = "0x5730AC", VA = "0x5730AC")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x57313C", Offset = "0x57313C", VA = "0x57313C")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x5731CC", Offset = "0x5731CC", VA = "0x5731CC")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x5728D4", Offset = "0x5728D4", VA = "0x5728D4")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x57327C", Offset = "0x57327C", VA = "0x57327C", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public enum RoomJoinability
	{
		[Token(Token = "0x40004C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241EF8", Offset = "0x241EF8")]
		Unknown,
		[Token(Token = "0x40004C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241F2C", Offset = "0x241F2C")]
		AreIn,
		[Token(Token = "0x40004C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241F60", Offset = "0x241F60")]
		AreKicked,
		[Token(Token = "0x40004C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241F98", Offset = "0x241F98")]
		CanJoin,
		[Token(Token = "0x40004C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x241FD0", Offset = "0x241FD0")]
		IsFull,
		[Token(Token = "0x40004CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242004", Offset = "0x242004")]
		NoViewer,
		[Token(Token = "0x40004CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24203C", Offset = "0x24203C")]
		PolicyPrevents
	}
	[Token(Token = "0x2000154")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x40004CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242078", Offset = "0x242078")]
		None,
		[Token(Token = "0x40004CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2420AC", Offset = "0x2420AC")]
		Everyone,
		[Token(Token = "0x40004CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2420E4", Offset = "0x2420E4")]
		FriendsOfMembers,
		[Token(Token = "0x40004D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242124", Offset = "0x242124")]
		FriendsOfOwner,
		[Token(Token = "0x40004D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242164", Offset = "0x242164")]
		InvitedUsers,
		[Token(Token = "0x40004D2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2421A0", Offset = "0x2421A0")]
		Unknown
	}
	[Token(Token = "0x2000155")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x40004D4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2421D4", Offset = "0x2421D4")]
		Unknown,
		[Token(Token = "0x40004D5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242208", Offset = "0x242208")]
		Lock,
		[Token(Token = "0x40004D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24223C", Offset = "0x24223C")]
		Unlock
	}
	[Token(Token = "0x2000156")]
	public class RoomOptions
	{
		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x573354", Offset = "0x573354", VA = "0x573354")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x5733E4", Offset = "0x5733E4", VA = "0x5733E4")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x57347C", Offset = "0x57347C", VA = "0x57347C")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x573504", Offset = "0x573504", VA = "0x573504")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x573594", Offset = "0x573594", VA = "0x573594")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x573624", Offset = "0x573624", VA = "0x573624")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x5736B4", Offset = "0x5736B4", VA = "0x5736B4")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x573744", Offset = "0x573744", VA = "0x573744")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x5737E8", Offset = "0x5737E8", VA = "0x5737E8")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x573878", Offset = "0x573878", VA = "0x573878")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x5738D0", Offset = "0x5738D0", VA = "0x5738D0", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public enum RoomType
	{
		[Token(Token = "0x40004D9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242270", Offset = "0x242270")]
		Unknown,
		[Token(Token = "0x40004DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2422A4", Offset = "0x2422A4")]
		Matchmaking,
		[Token(Token = "0x40004DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2422DC", Offset = "0x2422DC")]
		Moderated,
		[Token(Token = "0x40004DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242314", Offset = "0x242314")]
		Private,
		[Token(Token = "0x40004DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242348", Offset = "0x242348")]
		Solo
	}
	[Token(Token = "0x2000158")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40004DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24237C", Offset = "0x24237C")]
		Unknown,
		[Token(Token = "0x40004E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2423B0", Offset = "0x2423B0")]
		Oculus,
		[Token(Token = "0x40004E1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2423E4", Offset = "0x2423E4")]
		FacebookGameroom
	}
	[Token(Token = "0x2000159")]
	public enum SendPolicy
	{
		[Token(Token = "0x40004E3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242424", Offset = "0x242424")]
		Unreliable,
		[Token(Token = "0x40004E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24245C", Offset = "0x24245C")]
		Reliable,
		[Token(Token = "0x40004E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242494", Offset = "0x242494")]
		Unknown
	}
	[Token(Token = "0x200015A")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40004E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2424C8", Offset = "0x2424C8")]
		Unknown,
		[Token(Token = "0x40004E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2424FC", Offset = "0x2424FC")]
		Dropbox,
		[Token(Token = "0x40004E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242530", Offset = "0x242530")]
		Facebook,
		[Token(Token = "0x40004EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242568", Offset = "0x242568")]
		Google,
		[Token(Token = "0x40004EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24259C", Offset = "0x24259C")]
		Instagram,
		[Token(Token = "0x40004EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2425D4", Offset = "0x2425D4")]
		RemoteMedia
	}
	[Token(Token = "0x200015B")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40004EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242610", Offset = "0x242610")]
		Unknown,
		[Token(Token = "0x40004EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242644", Offset = "0x242644")]
		Shared,
		[Token(Token = "0x40004F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242678", Offset = "0x242678")]
		Canceled
	}
	[Token(Token = "0x200015C")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x200015D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x23F798", Offset = "0x23F798")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x3EFAEC", Offset = "0x3EFAEC", VA = "0x3EFAEC")]
		public StandalonePlatform()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x3EFAF4", Offset = "0x3EFAF4", VA = "0x3EFAF4")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x3EFD30", Offset = "0x3EFD30", VA = "0x3EFD30")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200015E")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x17000084")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x3F0148", Offset = "0x3F0148", VA = "0x3F0148")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x3F01D4", Offset = "0x3F01D4", VA = "0x3F01D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x3F01D8", Offset = "0x3F01D8", VA = "0x3F01D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x3F0264", Offset = "0x3F0264", VA = "0x3F0264")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x3EFCA4", Offset = "0x3EFCA4", VA = "0x3EFCA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x3F0268", Offset = "0x3F0268", VA = "0x3F0268")]
			set
			{
			}
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x3F0140", Offset = "0x3F0140", VA = "0x3F0140")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40004F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2426B0", Offset = "0x2426B0")]
		Unknown,
		[Token(Token = "0x40004F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2426E4", Offset = "0x2426E4")]
		Unavailable,
		[Token(Token = "0x40004F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24271C", Offset = "0x24271C")]
		Suppressed,
		[Token(Token = "0x40004F5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242754", Offset = "0x242754")]
		Active
	}
	[Token(Token = "0x2000160")]
	public enum TimeWindow
	{
		[Token(Token = "0x40004F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242788", Offset = "0x242788")]
		Unknown,
		[Token(Token = "0x40004F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2427BC", Offset = "0x2427BC")]
		OneHour,
		[Token(Token = "0x40004F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2427F4", Offset = "0x2427F4")]
		OneDay,
		[Token(Token = "0x40004FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242828", Offset = "0x242828")]
		OneWeek,
		[Token(Token = "0x40004FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242860", Offset = "0x242860")]
		ThirtyDays,
		[Token(Token = "0x40004FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242898", Offset = "0x242898")]
		NinetyDays
	}
	[Token(Token = "0x2000161")]
	public class UserOptions
	{
		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x3F026C", Offset = "0x3F026C", VA = "0x3F026C")]
		public UserOptions()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x3F02FC", Offset = "0x3F02FC", VA = "0x3F02FC")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x3F038C", Offset = "0x3F038C", VA = "0x3F038C")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x3F041C", Offset = "0x3F041C", VA = "0x3F041C")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x3F04A4", Offset = "0x3F04A4", VA = "0x3F04A4")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x3F0534", Offset = "0x3F0534", VA = "0x3F0534")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x3F058C", Offset = "0x3F058C", VA = "0x3F058C", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public enum UserOrdering
	{
		[Token(Token = "0x40004FF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2428D0", Offset = "0x2428D0")]
		Unknown,
		[Token(Token = "0x4000500")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242904", Offset = "0x242904")]
		None,
		[Token(Token = "0x4000501")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242938", Offset = "0x242938")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000163")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4000503")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x24297C", Offset = "0x24297C")]
		Unknown,
		[Token(Token = "0x4000504")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2429B0", Offset = "0x2429B0")]
		Online,
		[Token(Token = "0x4000505")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2429E4", Offset = "0x2429E4")]
		Offline
	}
	[Token(Token = "0x2000164")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x2000165")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x400050C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x400050D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] scratchBuffer;

			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x3F26A4", Offset = "0x3F26A4", VA = "0x3F26A4")]
			public FilterReadDelegate()
			{
			}

			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x3F26AC", Offset = "0x3F26AC", VA = "0x3F26AC")]
			private void Awake()
			{
			}

			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x3F2784", Offset = "0x3F2784", VA = "0x3F2784")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}
		}

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float peakAmplitude;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x17000087")]
		public ulong senderID
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x3EF178", Offset = "0x3EF178", VA = "0x3EF178")]
			set
			{
			}
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x3F1D90", Offset = "0x3F1D90", VA = "0x3F1D90")]
		public VoipAudioSourceHiLevel()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x3F1D98", Offset = "0x3F1D98", VA = "0x3F1D98")]
		protected void Stop()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x3F1D9C", Offset = "0x3F1D9C", VA = "0x3F1D9C")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x3F1DD0", Offset = "0x3F1DD0", VA = "0x3F1DD0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x3F219C", Offset = "0x3F219C", VA = "0x3F219C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x3F21C8", Offset = "0x3F21C8", VA = "0x3F21C8", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x3F2240", Offset = "0x3F2240", VA = "0x3F2240")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x3F22E8", Offset = "0x3F22E8", VA = "0x3F22E8")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public enum VoipBitrate
	{
		[Token(Token = "0x400050F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242A18", Offset = "0x242A18")]
		Unknown,
		[Token(Token = "0x4000510")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242A4C", Offset = "0x242A4C")]
		B16000,
		[Token(Token = "0x4000511")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242A80", Offset = "0x242A80")]
		B24000,
		[Token(Token = "0x4000512")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242AB4", Offset = "0x242AB4")]
		B32000,
		[Token(Token = "0x4000513")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242AE8", Offset = "0x242AE8")]
		B64000,
		[Token(Token = "0x4000514")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242B1C", Offset = "0x242B1C")]
		B96000,
		[Token(Token = "0x4000515")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242B50", Offset = "0x242B50")]
		B128000
	}
	[Token(Token = "0x2000167")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4000517")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242B84", Offset = "0x242B84")]
		Unknown,
		[Token(Token = "0x4000518")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242BB8", Offset = "0x242BB8")]
		Enabled,
		[Token(Token = "0x4000519")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242BEC", Offset = "0x242BEC")]
		Disabled
	}
	[Token(Token = "0x2000168")]
	public enum VoipMuteState
	{
		[Token(Token = "0x400051B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242C24", Offset = "0x242C24")]
		Unknown,
		[Token(Token = "0x400051C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242C58", Offset = "0x242C58")]
		Muted,
		[Token(Token = "0x400051D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242C8C", Offset = "0x242C8C")]
		Unmuted
	}
	[Token(Token = "0x2000169")]
	public class VoipOptions
	{
		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x3F2EBC", Offset = "0x3F2EBC", VA = "0x3F2EBC")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x3F2F4C", Offset = "0x3F2F4C", VA = "0x3F2F4C")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x3F2FDC", Offset = "0x3F2FDC", VA = "0x3F2FDC")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x3F1B8C", Offset = "0x3F1B8C", VA = "0x3F1B8C")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x3F306C", Offset = "0x3F306C", VA = "0x3F306C", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong senderID;

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x3F2238", Offset = "0x3F2238", VA = "0x3F2238")]
		public VoipPCMSourceNative()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x3F3144", Offset = "0x3F3144", VA = "0x3F3144", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x3F3234", Offset = "0x3F3234", VA = "0x3F3234", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x3F3244", Offset = "0x3F3244", VA = "0x3F3244", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x3F330C", Offset = "0x3F330C", VA = "0x3F330C", Slot = "6")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000521")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242CC0", Offset = "0x242CC0")]
		Unknown,
		[Token(Token = "0x4000522")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242CF4", Offset = "0x242CF4")]
		HZ24000,
		[Token(Token = "0x4000523")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242D28", Offset = "0x242D28")]
		HZ44100,
		[Token(Token = "0x4000524")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242D5C", Offset = "0x242D5C")]
		HZ48000
	}
	[Token(Token = "0x200016C")]
	public class WindowsPlatform
	{
		[Token(Token = "0x200016D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x23F7AC", Offset = "0x23F7AC")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x3F3310", Offset = "0x3F3310", VA = "0x3F3310")]
		public WindowsPlatform()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x3F3318", Offset = "0x3F3318", VA = "0x3F3318")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x3F343C", Offset = "0x3F343C", VA = "0x3F343C")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x3F348C", Offset = "0x3F348C", VA = "0x3F348C")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x3F35EC", Offset = "0x3F35EC", VA = "0x3F35EC")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}
	}
}
[Token(Token = "0x200016E")]
[ExecuteInEditMode]
public class OrbitCam : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 lookAtPoint;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float omega;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int previewSteps;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x3F48C8", Offset = "0x3F48C8", VA = "0x3F48C8")]
	public OrbitCam()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x3F48E4", Offset = "0x3F48E4", VA = "0x3F48E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x3F48E8", Offset = "0x3F48E8", VA = "0x3F48E8")]
	private void GetPivot()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x3F4A00", Offset = "0x3F4A00", VA = "0x3F4A00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x3F4C70", Offset = "0x3F4C70", VA = "0x3F4C70")]
	private void OnDrawGizmosSelected()
	{
	}
}
[Token(Token = "0x200016F")]
public class ControllerInstancer : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject controller0;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject controller1;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Pvr_Controller pvrController;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera PVRSingleInstanceCamera;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float checkTime;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] gpsbuffer;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string appid;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool checkEntitlement;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastUpdate;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint m_frameCount;

	[Token(Token = "0x4000532")]
	private const uint kNumFrameTimings = 2u;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double m_gpuFrameTime;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double m_cpuFrameTime;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FrameTiming[] frameTimings;

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x399308", Offset = "0x399308", VA = "0x399308")]
	public ControllerInstancer()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x3996E0", Offset = "0x3996E0", VA = "0x3996E0")]
	private void PicoCheck()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x399960", Offset = "0x399960", VA = "0x399960")]
	private void Start()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x39A0A0", Offset = "0x39A0A0", VA = "0x39A0A0")]
	private void Instance_OnGamepadConnected(int index, NWGamePadProxy gp)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x39A33C", Offset = "0x39A33C", VA = "0x39A33C")]
	private NWGamePadProxy GetGamePadInstanceFor(int index, string nameLowerCase)
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x39A94C", Offset = "0x39A94C", VA = "0x39A94C")]
	private void Update()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x39A9D8", Offset = "0x39A9D8", VA = "0x39A9D8")]
	private void DetermineResolution()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x39ACAC", Offset = "0x39ACAC", VA = "0x39ACAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C30", Offset = "0x247C30")]
	private string[] <Start>m__0()
	{
		return null;
	}
}
[Token(Token = "0x2000170")]
public class PicoController : NWGamePadProxy
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isLeft;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool isGOController;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool simulateRemoteWithTouch;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KeyValuePair<int, Pvr_KeyCode>[] buttonList;

	[Token(Token = "0x17000088")]
	public override bool IsRealDevice
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0x3F6B1C", Offset = "0x3F6B1C", VA = "0x3F6B1C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000089")]
	public override string GamePadName
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x3F6B24", Offset = "0x3F6B24", VA = "0x3F6B24", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x3F6B2C", Offset = "0x3F6B2C", VA = "0x3F6B2C", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x3F6A7C", Offset = "0x3F6A7C", VA = "0x3F6A7C")]
	public PicoController(int index, string gpName)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x3F6BCC", Offset = "0x3F6BCC", VA = "0x3F6BCC", Slot = "9")]
	public override void Update()
	{
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x2000171")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x71EE64", Offset = "0x71EE64", VA = "0x71EE64")]
		public AchievementCore()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x71EE6C", Offset = "0x71EE6C", VA = "0x71EE6C")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x71EEF8", Offset = "0x71EEF8", VA = "0x71EEF8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x71EEFC", Offset = "0x71EEFC", VA = "0x71EEFC")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x71F11C", Offset = "0x71F11C", VA = "0x71F11C")]
		public static void UnRegisterNetwork()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public static class Achievements
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0x71F2D4", Offset = "0x71F2D4", VA = "0x71F2D4")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x71F938", Offset = "0x71F938", VA = "0x71F938")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x71FC88", Offset = "0x71FC88", VA = "0x71FC88")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x71FFA0", Offset = "0x71FFA0", VA = "0x71FFA0")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x7202C0", Offset = "0x7202C0", VA = "0x7202C0")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x720520", Offset = "0x720520", VA = "0x720520")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x720834", Offset = "0x720834", VA = "0x720834")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x720AF0", Offset = "0x720AF0", VA = "0x720AF0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x720DAC", Offset = "0x720DAC", VA = "0x720DAC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x7212A8", Offset = "0x7212A8", VA = "0x7212A8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000173")]
	public enum AchievementType
	{
		[Token(Token = "0x400053D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242D90", Offset = "0x242D90")]
		Unknown,
		[Token(Token = "0x400053E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242DC4", Offset = "0x242DC4")]
		Simple,
		[Token(Token = "0x400053F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242DF8", Offset = "0x242DF8")]
		Bitfield,
		[Token(Token = "0x4000540")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x242E2C", Offset = "0x242E2C")]
		Count
	}
	[Token(Token = "0x2000174")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string openId;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static string accessToken;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string appId;

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x721EC4", Offset = "0x721EC4", VA = "0x721EC4")]
		public Pvr_AchievementAPI()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x71F3D8", Offset = "0x71F3D8", VA = "0x71F3D8")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x71EF74", Offset = "0x71EF74", VA = "0x71EF74")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x71F194", Offset = "0x71F194", VA = "0x71F194")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x721ECC", Offset = "0x721ECC", VA = "0x721ECC")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x721FB0", Offset = "0x721FB0", VA = "0x721FB0")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x722124", Offset = "0x722124", VA = "0x722124")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x72226C", Offset = "0x72226C", VA = "0x72226C")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x71FA54", Offset = "0x71FA54", VA = "0x71FA54")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x71FD9C", Offset = "0x71FD9C", VA = "0x71FD9C")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x7200A4", Offset = "0x7200A4", VA = "0x7200A4")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x7203C4", Offset = "0x7203C4", VA = "0x7203C4")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x72062C", Offset = "0x72062C", VA = "0x72062C")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x720940", Offset = "0x720940", VA = "0x720940")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x720BFC", Offset = "0x720BFC", VA = "0x720BFC")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x720F68", Offset = "0x720F68", VA = "0x720F68")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x7223B4", Offset = "0x7223B4", VA = "0x7223B4")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x7224B4", Offset = "0x7224B4", VA = "0x7224B4")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x722558", Offset = "0x722558", VA = "0x722558")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x721DF4", Offset = "0x721DF4", VA = "0x721DF4")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x7225FC", Offset = "0x7225FC", VA = "0x7225FC")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x722744", Offset = "0x722744", VA = "0x722744")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x7228B8", Offset = "0x7228B8", VA = "0x7228B8")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x722A00", Offset = "0x722A00", VA = "0x722A00")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x722BC4", Offset = "0x722BC4", VA = "0x722BC4")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x722D38", Offset = "0x722D38", VA = "0x722D38")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x722EAC", Offset = "0x722EAC", VA = "0x722EAC")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x722FF4", Offset = "0x722FF4", VA = "0x722FF4")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x72313C", Offset = "0x72313C", VA = "0x72313C")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x7232B0", Offset = "0x7232B0", VA = "0x7232B0")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x723454", Offset = "0x723454", VA = "0x723454")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x7234F4", Offset = "0x7234F4", VA = "0x7234F4")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x72363C", Offset = "0x72363C", VA = "0x72363C")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x723800", Offset = "0x723800", VA = "0x723800")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x723974", Offset = "0x723974", VA = "0x723974")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x723B18", Offset = "0x723B18", VA = "0x723B18")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x723C8C", Offset = "0x723C8C", VA = "0x723C8C")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x723DD4", Offset = "0x723DD4", VA = "0x723DD4")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x723F1C", Offset = "0x723F1C", VA = "0x723F1C")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x724090", Offset = "0x724090", VA = "0x724090")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x724204", Offset = "0x724204", VA = "0x724204")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x724378", Offset = "0x724378", VA = "0x724378")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x7244C0", Offset = "0x7244C0", VA = "0x7244C0")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x724634", Offset = "0x724634", VA = "0x724634")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}
	}
}
[Token(Token = "0x2000175")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text dataOutput;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField unLockInputField;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public InputField addCountInputField;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x37DB70", Offset = "0x37DB70", VA = "0x37DB70")]
	public AchievementSample()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x37DB78", Offset = "0x37DB78", VA = "0x37DB78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x37DBF4", Offset = "0x37DBF4", VA = "0x37DBF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x37DC70", Offset = "0x37DC70", VA = "0x37DC70")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x37DEC4", Offset = "0x37DEC4", VA = "0x37DEC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x37DED0", Offset = "0x37DED0", VA = "0x37DED0")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x37DF74", Offset = "0x37DF74", VA = "0x37DF74")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x37E25C", Offset = "0x37E25C", VA = "0x37E25C")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x37E544", Offset = "0x37E544", VA = "0x37E544")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x37E6B0", Offset = "0x37E6B0", VA = "0x37E6B0")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x37E81C", Offset = "0x37E81C", VA = "0x37E81C")]
	public void UnLock()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x37EA94", Offset = "0x37EA94", VA = "0x37EA94")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x37EF38", Offset = "0x37EF38", VA = "0x37EF38")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x37DDFC", Offset = "0x37DDFC", VA = "0x37DDFC")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x37E5E8", Offset = "0x37E5E8", VA = "0x37E5E8")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x37E754", Offset = "0x37E754", VA = "0x37E754")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x37F184", Offset = "0x37F184", VA = "0x37F184")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x37EE18", Offset = "0x37EE18", VA = "0x37EE18")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x37E9C4", Offset = "0x37E9C4", VA = "0x37E9C4")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x37E474", Offset = "0x37E474", VA = "0x37E474")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x37E18C", Offset = "0x37E18C", VA = "0x37E18C")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x37DCE8", Offset = "0x37DCE8", VA = "0x37DCE8")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x37F25C", Offset = "0x37F25C", VA = "0x37F25C")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x37FEC0", Offset = "0x37FEC0", VA = "0x37FEC0")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x3807F4", Offset = "0x3807F4", VA = "0x3807F4")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x380BD0", Offset = "0x380BD0", VA = "0x380BD0")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x380FAC", Offset = "0x380FAC", VA = "0x380FAC")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x381388", Offset = "0x381388", VA = "0x381388")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x381B10", Offset = "0x381B10", VA = "0x381B10")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x3823A4", Offset = "0x3823A4", VA = "0x3823A4")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x382780", Offset = "0x382780", VA = "0x382780")]
	private void LoginCallback(string LoginInfo)
	{
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x2000176")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Target;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Title;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string Description;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string LockedIcon;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x724A20", Offset = "0x724A20", VA = "0x724A20")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x7215D4", Offset = "0x7215D4", VA = "0x7215D4")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Count;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x724B20", Offset = "0x724B20", VA = "0x724B20")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x7218EC", Offset = "0x7218EC", VA = "0x7218EC")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x721C04", Offset = "0x721C04", VA = "0x721C04")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x23F7D0", Offset = "0x23F7D0")]
	public class Pvr_DeserializableList<T> : IList<T>, IEnumerable, ICollection<T>, IEnumerable<T>
	{
		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x1700008A")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600097A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		public int Count
		{
			[Token(Token = "0x6000979")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008C")]
		public T Item
		{
			[Token(Token = "0x600097C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600097D")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000988")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000989")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		public string NextUrl
		{
			[Token(Token = "0x600098A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public string PreviousUrl
		{
			[Token(Token = "0x600098B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000978")]
		public Pvr_DeserializableList()
		{
		}

		[Token(Token = "0x600097B")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x600097E")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600097F")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000980")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000981")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000982")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000983")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000984")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000985")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000986")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x200017D")]
		private class RequestCallback
		{
			[Token(Token = "0x4000568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6000992")]
			[Address(RVA = "0x72547C", Offset = "0x72547C", VA = "0x72547C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6000993")]
			[Address(RVA = "0x725484", Offset = "0x725484", VA = "0x725484")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6000994")]
			[Address(RVA = "0x7254A4", Offset = "0x7254A4", VA = "0x7254A4", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x200017E")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6000995")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6000996")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x724BFC", Offset = "0x724BFC", VA = "0x724BFC")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x724E24", Offset = "0x724E24", VA = "0x724E24")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x7251F8", Offset = "0x7251F8", VA = "0x7251F8")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x7252AC", Offset = "0x7252AC", VA = "0x7252AC")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x724F3C", Offset = "0x724F3C", VA = "0x724F3C")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x725874", Offset = "0x725874", VA = "0x725874")]
		public Pvr_CallbackRunner()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x725884", Offset = "0x725884", VA = "0x725884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x7259BC", Offset = "0x7259BC", VA = "0x7259BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x725A70", Offset = "0x725A70", VA = "0x725A70")]
		private void OnApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000181")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000091")]
		public T Data
		{
			[Token(Token = "0x600099C")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600099B")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600099D")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x2000182")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000183")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000184")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000571")]
			Unknown = 0u,
			[Token(Token = "0x4000572")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4000573")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4000574")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000575")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000576")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000577")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000578")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000579")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400057A")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400057B")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x400057C")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000185")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long requestID;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Error error;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x242E60", Offset = "0x242E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242E60", Offset = "0x242E60")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000092")]
		public MessageType Type
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x7253A8", Offset = "0x7253A8", VA = "0x7253A8")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000093")]
		public bool IsError
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x725D68", Offset = "0x725D68", VA = "0x725D68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000094")]
		public long RequestID
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x7253A0", Offset = "0x7253A0", VA = "0x7253A0")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000095")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x725FC4", Offset = "0x725FC4", VA = "0x725FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C50", Offset = "0x247C50")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x725F60", Offset = "0x725F60", VA = "0x725F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C40", Offset = "0x247C40")]
			set
			{
			}
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x725AE8", Offset = "0x725AE8", VA = "0x725AE8")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x725D78", Offset = "0x725D78", VA = "0x725D78", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x725D80", Offset = "0x725D80", VA = "0x725D80", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x725D88", Offset = "0x725D88", VA = "0x725D88", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x725D90", Offset = "0x725D90", VA = "0x725D90", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x725D98", Offset = "0x725D98", VA = "0x725D98", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x725DA0", Offset = "0x725DA0", VA = "0x725DA0")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x724EC0", Offset = "0x724EC0", VA = "0x724EC0")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000186")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x721494", Offset = "0x721494", VA = "0x721494")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x721500", Offset = "0x721500", VA = "0x721500", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x721564", Offset = "0x721564", VA = "0x721564", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x7217AC", Offset = "0x7217AC", VA = "0x7217AC")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x721818", Offset = "0x721818", VA = "0x721818", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x72187C", Offset = "0x72187C", VA = "0x72187C", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000188")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x721AC4", Offset = "0x721AC4", VA = "0x721AC4")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x721B30", Offset = "0x721B30", VA = "0x721B30", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x721B94", Offset = "0x721B94", VA = "0x721B94", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x721CA4", Offset = "0x721CA4", VA = "0x721CA4")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x721D10", Offset = "0x721D10", VA = "0x721D10", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x721D74", Offset = "0x721D74", VA = "0x721D74", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200018A")]
	public class Error
	{
		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x721464", Offset = "0x721464", VA = "0x721464")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200018B")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60009C4")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60009C5")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class Request
	{
		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x242E94", Offset = "0x242E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242E94", Offset = "0x242E94")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x17000096")]
		public long RequestID
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x724E1C", Offset = "0x724E1C", VA = "0x724E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C60", Offset = "0x247C60")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x72653C", Offset = "0x72653C", VA = "0x72653C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247C70", Offset = "0x247C70")]
			set
			{
			}
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x726514", Offset = "0x726514", VA = "0x726514")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x72654C", Offset = "0x72654C", VA = "0x72654C")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x7265D8", Offset = "0x7265D8", VA = "0x7265D8", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x7259C4", Offset = "0x7259C4", VA = "0x7259C4")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x200018D")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4000583")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x38FB78", Offset = "0x38FB78", VA = "0x38FB78")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x38FC78", Offset = "0x38FC78", VA = "0x38FC78")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x38FD80", Offset = "0x38FD80", VA = "0x38FD80")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x38FEE0", Offset = "0x38FEE0", VA = "0x38FEE0")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x38FFE0", Offset = "0x38FFE0", VA = "0x38FFE0")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x3900E8", Offset = "0x3900E8", VA = "0x3900E8")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x3901F8", Offset = "0x3901F8", VA = "0x3901F8")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x3902FC", Offset = "0x3902FC", VA = "0x3902FC")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x390340", Offset = "0x390340", VA = "0x390340")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x39038C", Offset = "0x39038C", VA = "0x39038C")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x390390", Offset = "0x390390", VA = "0x390390")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x60009D8")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009D9")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200018E")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x200018F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x23F804", Offset = "0x23F804")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000190")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x23F818", Offset = "0x23F818")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000191")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4000585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4000586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4000587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x2000192")]
		public struct GSALine
		{
			[Token(Token = "0x4000588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4000589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int pointCount;
		}

		[Token(Token = "0x2000193")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400058A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x400058B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int lineCount;
		}

		[Token(Token = "0x2000194")]
		public struct GSALegalData
		{
			[Token(Token = "0x400058C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x400058D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x400058E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x400058F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4000590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4000591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4000592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000195")]
		public struct GSARect
		{
			[Token(Token = "0x4000593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4000594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4000595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4000596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4000597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4000598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4000599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400059A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x400059B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4000584")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x390798", Offset = "0x390798", VA = "0x390798")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x390898", Offset = "0x390898", VA = "0x390898")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x390988", Offset = "0x390988", VA = "0x390988")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x390A98", Offset = "0x390A98", VA = "0x390A98")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x390BB8", Offset = "0x390BB8", VA = "0x390BB8")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x390CB8", Offset = "0x390CB8", VA = "0x390CB8")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x390DC8", Offset = "0x390DC8", VA = "0x390DC8")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x390EA8", Offset = "0x390EA8", VA = "0x390EA8")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x390FB0", Offset = "0x390FB0", VA = "0x390FB0")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x3910C0", Offset = "0x3910C0", VA = "0x3910C0")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x3911D8", Offset = "0x3911D8", VA = "0x3911D8")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x391300", Offset = "0x391300", VA = "0x391300")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x391304", Offset = "0x391304", VA = "0x391304")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x391308", Offset = "0x391308", VA = "0x391308")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x39130C", Offset = "0x39130C", VA = "0x39130C")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x391310", Offset = "0x391310", VA = "0x391310")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x391314", Offset = "0x391314", VA = "0x391314")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x3913B4", Offset = "0x3913B4", VA = "0x3913B4")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x3913B8", Offset = "0x3913B8", VA = "0x3913B8")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x3913BC", Offset = "0x3913BC", VA = "0x3913BC")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x3913C0", Offset = "0x3913C0", VA = "0x3913C0")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x3913C4", Offset = "0x3913C4", VA = "0x3913C4")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000196")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x400059D")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x400059E")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x17000097")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x3903F4", Offset = "0x3903F4", VA = "0x3903F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x390394", Offset = "0x390394", VA = "0x390394")]
		public Pvr_BoundarySystem()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x390490", Offset = "0x390490", VA = "0x390490")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x390494", Offset = "0x390494", VA = "0x390494")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x390498", Offset = "0x390498", VA = "0x390498")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x39049C", Offset = "0x39049C", VA = "0x39049C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}
	}
	[Token(Token = "0x2000197")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000198")]
		public struct ExtraInfo
		{
			[Token(Token = "0x40005A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x40005A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x40005A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x40005A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x40005A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x40005AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x40005AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000199")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x40005AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x40005AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x40005AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x40005AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x40005B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x40005B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40005B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40005B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x40005B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x200019A")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x200019B")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242EC8", Offset = "0x242EC8")]
		private static Pvr_SafeAreaAlgoAPI.SafeAreaCallback <>f__mg$cache0;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242ED8", Offset = "0x242ED8")]
		private static Pvr_SafeAreaAlgoAPI.SafeAreaCallbackShrink <>f__mg$cache1;

		[Token(Token = "0x17000098")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x392BE4", Offset = "0x392BE4", VA = "0x392BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x392BDC", Offset = "0x392BDC", VA = "0x392BDC")]
		public Pvr_SafeAreaAlgoModule()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x392C84", Offset = "0x392C84", VA = "0x392C84")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x392C8C", Offset = "0x392C8C", VA = "0x392C8C")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x392C94", Offset = "0x392C94", VA = "0x392C94")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x392E84", Offset = "0x392E84", VA = "0x392E84")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x3932DC", Offset = "0x3932DC", VA = "0x3932DC")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x393388", Offset = "0x393388", VA = "0x393388")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x3933F8", Offset = "0x3933F8", VA = "0x3933F8")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x391A0C", Offset = "0x391A0C", VA = "0x391A0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x247C80", Offset = "0x247C80")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x3922CC", Offset = "0x3922CC", VA = "0x3922CC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x247CF8", Offset = "0x247CF8")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200019C")]
	public class PvrControllerKey
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool State;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool PressedDown;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool PressedUp;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool LongPressed;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Click;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool Touch;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool TouchDown;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool TouchUp;

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xC371F0", Offset = "0xC371F0", VA = "0xC371F0")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class ControllerHand
	{
		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PvrControllerKey App;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey Home;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey X;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PvrControllerKey Y;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey A;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PvrControllerKey B;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey Left;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PvrControllerKey Right;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int TriggerNum;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int GripValue;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Quaternion Rotation;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 Position;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Battery;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public ControllerState ConnectState;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isShowBoundary;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xC36FB8", Offset = "0xC36FB8", VA = "0xC36FB8")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public enum ControllerState
	{
		[Token(Token = "0x40005D5")]
		Error = -1,
		[Token(Token = "0x40005D6")]
		DisConnected,
		[Token(Token = "0x40005D7")]
		Connected
	}
	[Token(Token = "0x200019F")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40005D9")]
		APP = 1,
		[Token(Token = "0x40005DA")]
		TOUCHPAD,
		[Token(Token = "0x40005DB")]
		HOME,
		[Token(Token = "0x40005DC")]
		VOLUMEUP,
		[Token(Token = "0x40005DD")]
		VOLUMEDOWN,
		[Token(Token = "0x40005DE")]
		TRIGGER,
		[Token(Token = "0x40005DF")]
		A,
		[Token(Token = "0x40005E0")]
		B,
		[Token(Token = "0x40005E1")]
		X,
		[Token(Token = "0x40005E2")]
		Y,
		[Token(Token = "0x40005E3")]
		Left,
		[Token(Token = "0x40005E4")]
		Right,
		[Token(Token = "0x40005E5")]
		Thumbrest
	}
	[Token(Token = "0x20001A0")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40005E7")]
		No,
		[Token(Token = "0x40005E8")]
		SwipeUp,
		[Token(Token = "0x40005E9")]
		SwipeDown,
		[Token(Token = "0x40005EA")]
		SwipeLeft,
		[Token(Token = "0x40005EB")]
		SwipeRight
	}
	[Token(Token = "0x20001A1")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40005ED")]
		No,
		[Token(Token = "0x40005EE")]
		ClickUp,
		[Token(Token = "0x40005EF")]
		ClickDown,
		[Token(Token = "0x40005F0")]
		ClickLeft,
		[Token(Token = "0x40005F1")]
		ClickRight
	}
	[Token(Token = "0x20001A2")]
	public struct Controller
	{
		[Token(Token = "0x40005F2")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x716680", Offset = "0x716680", VA = "0x716680")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x728EF4", Offset = "0x728EF4", VA = "0x728EF4")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x729124", Offset = "0x729124", VA = "0x729124")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x70ABF8", Offset = "0x70ABF8", VA = "0x70ABF8")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x72956C", Offset = "0x72956C", VA = "0x72956C")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x7296D8", Offset = "0x7296D8", VA = "0x7296D8")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x70C108", Offset = "0x70C108", VA = "0x70C108")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x70B0C0", Offset = "0x70B0C0", VA = "0x70B0C0")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x729844", Offset = "0x729844", VA = "0x729844")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x729970", Offset = "0x729970", VA = "0x729970")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x70B890", Offset = "0x70B890", VA = "0x70B890")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x71522C", Offset = "0x71522C", VA = "0x71522C")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x729A9C", Offset = "0x729A9C", VA = "0x729A9C")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x72A314", Offset = "0x72A314", VA = "0x72A314")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x72A84C", Offset = "0x72A84C", VA = "0x72A84C")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x72AD84", Offset = "0x72AD84", VA = "0x72AD84")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x72B2BC", Offset = "0x72B2BC", VA = "0x72B2BC")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x72BB34", Offset = "0x72BB34", VA = "0x72BB34")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x716E60", Offset = "0x716E60", VA = "0x716E60")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x72C3AC", Offset = "0x72C3AC", VA = "0x72C3AC")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x72C4C4", Offset = "0x72C4C4", VA = "0x72C4C4")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x72C564", Offset = "0x72C564", VA = "0x72C564")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x72C67C", Offset = "0x72C67C", VA = "0x72C67C")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x70A980", Offset = "0x70A980", VA = "0x70A980")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x70AB58", Offset = "0x70AB58", VA = "0x70AB58")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x72C724", Offset = "0x72C724", VA = "0x72C724")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x72C7D4", Offset = "0x72C7D4", VA = "0x72C7D4")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x72C884", Offset = "0x72C884", VA = "0x72C884")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x72C950", Offset = "0x72C950", VA = "0x72C950")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x72CA00", Offset = "0x72CA00", VA = "0x72CA00")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x72CAB8", Offset = "0x72CAB8", VA = "0x72CAB8")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x72CB70", Offset = "0x72CB70", VA = "0x72CB70")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x72CC28", Offset = "0x72CC28", VA = "0x72CC28")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x72CCD0", Offset = "0x72CCD0", VA = "0x72CCD0")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x72CD78", Offset = "0x72CD78", VA = "0x72CD78")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x72CED4", Offset = "0x72CED4", VA = "0x72CED4")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x72CF7C", Offset = "0x72CF7C", VA = "0x72CF7C")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x72D02C", Offset = "0x72D02C", VA = "0x72D02C")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x72D0D4", Offset = "0x72D0D4", VA = "0x72D0D4")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x72D184", Offset = "0x72D184", VA = "0x72D184")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x72D234", Offset = "0x72D234", VA = "0x72D234")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x72D2E4", Offset = "0x72D2E4", VA = "0x72D2E4")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x72D38C", Offset = "0x72D38C", VA = "0x72D38C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x72D434", Offset = "0x72D434", VA = "0x72D434")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x72D4EC", Offset = "0x72D4EC", VA = "0x72D4EC")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x72D59C", Offset = "0x72D59C", VA = "0x72D59C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x72D64C", Offset = "0x72D64C", VA = "0x72D64C")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x72D6F4", Offset = "0x72D6F4", VA = "0x72D6F4")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x72D79C", Offset = "0x72D79C", VA = "0x72D79C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x72D844", Offset = "0x72D844", VA = "0x72D844")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x72D8F4", Offset = "0x72D8F4", VA = "0x72D8F4")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x2BFBC4", Offset = "0x2BFBC4", VA = "0x2BFBC4")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x2BFBC8", Offset = "0x2BFBC8", VA = "0x2BFBC8")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x2BFBCC", Offset = "0x2BFBCC", VA = "0x2BFBCC")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x72DBA4", Offset = "0x72DBA4", VA = "0x72DBA4")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x72DD00", Offset = "0x72DD00", VA = "0x72DD00")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x72DE0C", Offset = "0x72DE0C", VA = "0x72DE0C")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x72DF34", Offset = "0x72DF34", VA = "0x72DF34")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x72E058", Offset = "0x72E058", VA = "0x72E058")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x72E180", Offset = "0x72E180", VA = "0x72E180")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x72E2AC", Offset = "0x72E2AC", VA = "0x72E2AC")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x72E35C", Offset = "0x72E35C", VA = "0x72E35C")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x72E40C", Offset = "0x72E40C", VA = "0x72E40C")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x72DD08", Offset = "0x72DD08", VA = "0x72DD08")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x72DE10", Offset = "0x72DE10", VA = "0x72DE10")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x72DF38", Offset = "0x72DF38", VA = "0x72DF38")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x72E060", Offset = "0x72E060", VA = "0x72E060")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x72E188", Offset = "0x72E188", VA = "0x72E188")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x72DBC8", Offset = "0x72DBC8", VA = "0x72DBC8")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
}
[Token(Token = "0x20001A3")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	public enum UserHandNess
	{
		[Token(Token = "0x4000608")]
		Right,
		[Token(Token = "0x4000609")]
		Left
	}

	[Token(Token = "0x20001A5")]
	public enum GazeType
	{
		[Token(Token = "0x400060B")]
		Never,
		[Token(Token = "0x400060C")]
		DuringMotion,
		[Token(Token = "0x400060D")]
		Always
	}

	[Token(Token = "0x20001A6")]
	public enum ControllerAxis
	{
		[Token(Token = "0x400060F")]
		Controller,
		[Token(Token = "0x4000610")]
		Wrist,
		[Token(Token = "0x4000611")]
		Elbow,
		[Token(Token = "0x4000612")]
		Shoulder
	}

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject controller0;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject controller1;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ControllerAxis Axis;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GazeType Gazetype;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x242EE8", Offset = "0x242EE8")]
	public float ElbowHeight;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x242F04", Offset = "0x242F04")]
	public float ElbowDepth;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x242F20", Offset = "0x242F20")]
	public float PointerTiltAngle;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float mouseX;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mouseY;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mouseZ;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3[] inputDirection;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x242F3C", Offset = "0x242F3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242F3C", Offset = "0x242F3C")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x242F70", Offset = "0x242F70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242F70", Offset = "0x242F70")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x242FA4", Offset = "0x242FA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242FA4", Offset = "0x242FA4")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x242FD8", Offset = "0x242FD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x242FD8", Offset = "0x242FD8")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x24300C", Offset = "0x24300C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24300C", Offset = "0x24300C")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243040", Offset = "0x243040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243040", Offset = "0x243040")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243074", Offset = "0x243074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243074", Offset = "0x243074")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x2430A8", Offset = "0x2430A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2430A8", Offset = "0x2430A8")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000099")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xE8BA14", Offset = "0xE8BA14", VA = "0xE8BA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247D70", Offset = "0x247D70")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xE8B924", Offset = "0xE8B924", VA = "0xE8B924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247D80", Offset = "0x247D80")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xE8BA84", Offset = "0xE8BA84", VA = "0xE8BA84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247D90", Offset = "0x247D90")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xE8B998", Offset = "0xE8B998", VA = "0xE8B998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247DA0", Offset = "0x247DA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xE8BDAC", Offset = "0xE8BDAC", VA = "0xE8BDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247DB0", Offset = "0x247DB0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xE8BCBC", Offset = "0xE8BCBC", VA = "0xE8BCBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247DC0", Offset = "0x247DC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xE8BE1C", Offset = "0xE8BE1C", VA = "0xE8BE1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247DD0", Offset = "0x247DD0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xE8BD30", Offset = "0xE8BD30", VA = "0xE8BD30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247DE0", Offset = "0x247DE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xE8BBE0", Offset = "0xE8BBE0", VA = "0xE8BBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247DF0", Offset = "0x247DF0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xE8BAF0", Offset = "0xE8BAF0", VA = "0xE8BAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E00", Offset = "0x247E00")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xE8BC50", Offset = "0xE8BC50", VA = "0xE8BC50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E10", Offset = "0x247E10")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xE8BB64", Offset = "0xE8BB64", VA = "0xE8BB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E20", Offset = "0x247E20")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xE8BF78", Offset = "0xE8BF78", VA = "0xE8BF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E30", Offset = "0x247E30")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xE8BE88", Offset = "0xE8BE88", VA = "0xE8BE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E40", Offset = "0x247E40")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xE8BFE8", Offset = "0xE8BFE8", VA = "0xE8BFE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E50", Offset = "0x247E50")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xE8BEFC", Offset = "0xE8BEFC", VA = "0xE8BEFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247E60", Offset = "0x247E60")]
		set
		{
		}
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xE87D2C", Offset = "0xE87D2C", VA = "0xE87D2C")]
	public Pvr_Controller()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xE87DAC", Offset = "0xE87DAC", VA = "0xE87DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xE8853C", Offset = "0xE8853C", VA = "0xE8853C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xE885BC", Offset = "0xE885BC", VA = "0xE885BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xE88D24", Offset = "0xE88D24", VA = "0xE88D24")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xE88E04", Offset = "0xE88E04", VA = "0xE88E04")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xE88E08", Offset = "0xE88E08", VA = "0xE88E08")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xE88D28", Offset = "0xE88D28", VA = "0xE88D28")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xE88E80", Offset = "0xE88E80", VA = "0xE88E80")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xE890A8", Offset = "0xE890A8", VA = "0xE890A8")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xE8928C", Offset = "0xE8928C", VA = "0xE8928C")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xE89388", Offset = "0xE89388", VA = "0xE89388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xE88E0C", Offset = "0xE88E0C", VA = "0xE88E0C")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xE89698", Offset = "0xE89698", VA = "0xE89698")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xE89738", Offset = "0xE89738", VA = "0xE89738")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xE897E0", Offset = "0xE897E0", VA = "0xE897E0")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xE8B70C", Offset = "0xE8B70C", VA = "0xE8B70C")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xE899C0", Offset = "0xE899C0", VA = "0xE899C0")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xE899FC", Offset = "0xE899FC", VA = "0xE899FC")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xE8A218", Offset = "0xE8A218", VA = "0xE8A218")]
	public void UpdateControllerDataSO(int hand)
	{
	}
}
[Token(Token = "0x20001A7")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject HeadSetController;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject controller0;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject controller1;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Ray ray;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject currentController;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform lastHit;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform currentHit;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool noClick;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject referenceObj;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rayDefaultLength;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isHasController;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool headcontrolmode;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject rayLine;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private GameObject dot;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform dragObj;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float disX;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float disY;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float disZ;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xE8C054", Offset = "0xE8C054", VA = "0xE8C054")]
	public Pvr_ControllerDemo()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xE8C068", Offset = "0xE8C068", VA = "0xE8C068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xE8C570", Offset = "0xE8C570", VA = "0xE8C570")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xE8C9AC", Offset = "0xE8C9AC", VA = "0xE8C9AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xE8F450", Offset = "0xE8F450", VA = "0xE8F450")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xE8F4F4", Offset = "0xE8F4F4", VA = "0xE8F4F4")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xE8F598", Offset = "0xE8F598", VA = "0xE8F598")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xE8F650", Offset = "0xE8F650", VA = "0xE8F650")]
	public void SwitchControlMode()
	{
	}
}
[Token(Token = "0x20001A8")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xE8F654", Offset = "0xE8F654", VA = "0xE8F654")]
	public Pvr_ControllerEventsExamples()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xE8F65C", Offset = "0xE8F65C", VA = "0xE8F65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xE8F94C", Offset = "0xE8F94C", VA = "0xE8F94C")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xE8FA54", Offset = "0xE8FA54", VA = "0xE8FA54")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xE8FB5C", Offset = "0xE8FB5C", VA = "0xE8FB5C")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xE8FC64", Offset = "0xE8FC64", VA = "0xE8FC64")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xE8FD6C", Offset = "0xE8FD6C", VA = "0xE8FD6C")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}
}
[Token(Token = "0x20001A9")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F82C", Offset = "0x23F82C")]
	private sealed class <RefreshController>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int id;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Pvr_ControllerInit $this;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xE92A8C", Offset = "0xE92A8C", VA = "0xE92A8C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xE92A94", Offset = "0xE92A94", VA = "0xE92A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE91264", Offset = "0xE91264", VA = "0xE91264")]
		[DebuggerHidden]
		public <RefreshController>c__Iterator0()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE92420", Offset = "0xE92420", VA = "0xE92420", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xE92A9C", Offset = "0xE92A9C", VA = "0xE92A9C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE92AB0", Offset = "0xE92AB0", VA = "0xE92AB0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ControllerVariety Variety;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isCustomModel;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int controllerType;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int systemOrUnity;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JsonData curControllerData;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private string modelName;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string texFormat;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string prePath;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string modelFilePath;

	[Token(Token = "0x400063C")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x400063D")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x400063E")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x400063F")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xE8FE74", Offset = "0xE8FE74", VA = "0xE8FE74")]
	public Pvr_ControllerInit()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xE8FF48", Offset = "0xE8FF48", VA = "0xE8FF48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xE90138", Offset = "0xE90138", VA = "0xE90138")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xE90268", Offset = "0xE90268", VA = "0xE90268")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xE90618", Offset = "0xE90618", VA = "0xE90618")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xE90908", Offset = "0xE90908", VA = "0xE90908")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xE90BBC", Offset = "0xE90BBC", VA = "0xE90BBC")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xE910DC", Offset = "0xE910DC", VA = "0xE910DC")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xE90274", Offset = "0xE90274", VA = "0xE90274")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xE90CA4", Offset = "0xE90CA4", VA = "0xE90CA4")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xE90B1C", Offset = "0xE90B1C", VA = "0xE90B1C")]
	[DebuggerHidden]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xE9126C", Offset = "0xE9126C", VA = "0xE9126C")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xE91AE4", Offset = "0xE91AE4", VA = "0xE91AE4")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xE91604", Offset = "0xE91604", VA = "0xE91604")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xE92160", Offset = "0xE92160", VA = "0xE92160")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xE92298", Offset = "0xE92298", VA = "0xE92298")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}
}
[Token(Token = "0x20001AB")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AndroidJavaObject activity;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string gameobjname;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool picoDevice;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string hummingBirdMac;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hummingBirdRSSI;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool controller0Connected;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool controller1Connected;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int mainHandID;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int controllerType;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ControllerHand Controller0;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ControllerHand Controller1;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int platFormType;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int trackingmode;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int systemProp;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool switchHomeKey;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] hbPoseData;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float[] sensorData;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] keyData;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] fixedState;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float[] neoposeData;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int[] neoKeyArray;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] neotriggerV;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float[] velocity;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] angularVelocity;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float[] acceData;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xE92B38", Offset = "0xE92B38", VA = "0xE92B38")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xE93054", Offset = "0xE93054", VA = "0xE93054")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xE93CD8", Offset = "0xE93CD8", VA = "0xE93CD8")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xE939B4", Offset = "0xE939B4", VA = "0xE939B4")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xE93B28", Offset = "0xE93B28", VA = "0xE93B28")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xE93F0C", Offset = "0xE93F0C", VA = "0xE93F0C")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xE940BC", Offset = "0xE940BC", VA = "0xE940BC")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xE94294", Offset = "0xE94294", VA = "0xE94294")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xE9441C", Offset = "0xE9441C", VA = "0xE9441C")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xE945F4", Offset = "0xE945F4", VA = "0xE945F4")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xE94820", Offset = "0xE94820", VA = "0xE94820")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xE94A28", Offset = "0xE94A28", VA = "0xE94A28")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xE94BF0", Offset = "0xE94BF0", VA = "0xE94BF0")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xE94D4C", Offset = "0xE94D4C", VA = "0xE94D4C")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xE9385C", Offset = "0xE9385C", VA = "0xE9385C")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xE94EB4", Offset = "0xE94EB4", VA = "0xE94EB4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xE950C4", Offset = "0xE950C4", VA = "0xE950C4")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xE95268", Offset = "0xE95268", VA = "0xE95268")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xE95334", Offset = "0xE95334", VA = "0xE95334")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xE9542C", Offset = "0xE9542C", VA = "0xE9542C")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xE95640", Offset = "0xE95640", VA = "0xE95640")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xE957CC", Offset = "0xE957CC", VA = "0xE957CC")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xE95924", Offset = "0xE95924", VA = "0xE95924")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xE95AB0", Offset = "0xE95AB0", VA = "0xE95AB0")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xE95C08", Offset = "0xE95C08", VA = "0xE95C08")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xE96050", Offset = "0xE96050", VA = "0xE96050")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xE96170", Offset = "0xE96170", VA = "0xE96170")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xE96360", Offset = "0xE96360", VA = "0xE96360")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xE96550", Offset = "0xE96550", VA = "0xE96550")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xE96B28", Offset = "0xE96B28", VA = "0xE96B28")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xE96CB8", Offset = "0xE96CB8", VA = "0xE96CB8")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xE96D60", Offset = "0xE96D60", VA = "0xE96D60")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xE97B3C", Offset = "0xE97B3C", VA = "0xE97B3C")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xE97D68", Offset = "0xE97D68", VA = "0xE97D68")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xE987E4", Offset = "0xE987E4", VA = "0xE987E4")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xE992C4", Offset = "0xE992C4", VA = "0xE992C4")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xE9B6B8", Offset = "0xE9B6B8", VA = "0xE9B6B8")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xE9B85C", Offset = "0xE9B85C", VA = "0xE9B85C")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xE9EC38", Offset = "0xE9EC38", VA = "0xE9EC38")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xE9EEC0", Offset = "0xE9EEC0", VA = "0xE9EEC0")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xE9F0D0", Offset = "0xE9F0D0", VA = "0xE9F0D0")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xE9F334", Offset = "0xE9F334", VA = "0xE9F334")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xE9F598", Offset = "0xE9F598", VA = "0xE9F598")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xE9F71C", Offset = "0xE9F71C", VA = "0xE9F71C")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xE9FD4C", Offset = "0xE9FD4C", VA = "0xE9FD4C")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xEA032C", Offset = "0xEA032C", VA = "0xEA032C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xEA0834", Offset = "0xEA0834", VA = "0xEA0834")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xEA09C0", Offset = "0xEA09C0", VA = "0xEA09C0")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xEA0E34", Offset = "0xEA0E34", VA = "0xEA0E34")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xEA0F98", Offset = "0xEA0F98", VA = "0xEA0F98")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xEA1160", Offset = "0xEA1160", VA = "0xEA1160")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xEA1238", Offset = "0xEA1238", VA = "0xEA1238")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xEA1400", Offset = "0xEA1400", VA = "0xEA1400")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xEA15C8", Offset = "0xEA15C8", VA = "0xEA15C8")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xEA1790", Offset = "0xEA1790", VA = "0xEA1790")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xEA1868", Offset = "0xEA1868", VA = "0xEA1868")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xEA1940", Offset = "0xEA1940", VA = "0xEA1940")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xEA1B94", Offset = "0xEA1B94", VA = "0xEA1B94")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xEA1D5C", Offset = "0xEA1D5C", VA = "0xEA1D5C")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xEA1F24", Offset = "0xEA1F24", VA = "0xEA1F24")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xEA2088", Offset = "0xEA2088", VA = "0xEA2088")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xEA21EC", Offset = "0xEA21EC", VA = "0xEA21EC")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xEA2350", Offset = "0xEA2350", VA = "0xEA2350")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xEA2518", Offset = "0xEA2518", VA = "0xEA2518")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xEA25F0", Offset = "0xEA25F0", VA = "0xEA25F0")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xEA26C8", Offset = "0xEA26C8", VA = "0xEA26C8")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xEA28B4", Offset = "0xEA28B4", VA = "0xEA28B4")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xEA29B4", Offset = "0xEA29B4", VA = "0xEA29B4")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xEA2A80", Offset = "0xEA2A80", VA = "0xEA2A80")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xEA2BD8", Offset = "0xEA2BD8", VA = "0xEA2BD8")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xEA2D30", Offset = "0xEA2D30", VA = "0xEA2D30")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xEA2DE0", Offset = "0xEA2DE0", VA = "0xEA2DE0")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xEA2F30", Offset = "0xEA2F30", VA = "0xEA2F30")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xEA3080", Offset = "0xEA3080", VA = "0xEA3080")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xEA31D8", Offset = "0xEA31D8", VA = "0xEA31D8")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xEA33A0", Offset = "0xEA33A0", VA = "0xEA33A0")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xEA3568", Offset = "0xEA3568", VA = "0xEA3568")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xEA3748", Offset = "0xEA3748", VA = "0xEA3748")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xEA3910", Offset = "0xEA3910", VA = "0xEA3910")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x20001AC")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20001AD")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x20001AE")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x20001AF")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x20001B0")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x20001B1")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x20001B2")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x20001B3")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x20001B4")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x20001B5")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x20001B6")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x20001B7")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x20001B8")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x20001B9")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x20001BA")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x20001BB")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x20001BC")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x20001BD")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x20001BE")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x20001BF")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x20001C0")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float cTime;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool stopConnect;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text toast;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool controllerServicestate;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float disConnectTime;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float[] sensorData;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] keyData;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float[] g2SensorData;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] g2KeyData;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int keyOffset;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int rotControllerMode;

	[Token(Token = "0x170000A3")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xE8B3C0", Offset = "0xE8B3C0", VA = "0xE8B3C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000007")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xE87F14", Offset = "0xE87F14", VA = "0xE87F14")]
		add
		{
		}
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xE88724", Offset = "0xE88724", VA = "0xE88724")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xEA3BB0", Offset = "0xEA3BB0", VA = "0xEA3BB0")]
		add
		{
		}
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xEA3D30", Offset = "0xEA3D30", VA = "0xEA3D30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xE88228", Offset = "0xE88228", VA = "0xE88228")]
		add
		{
		}
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xE88A24", Offset = "0xE88A24", VA = "0xE88A24")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xE883BC", Offset = "0xE883BC", VA = "0xE883BC")]
		add
		{
		}
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xE88BA4", Offset = "0xE88BA4", VA = "0xE88BA4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xEA3EB0", Offset = "0xEA3EB0", VA = "0xEA3EB0")]
		add
		{
		}
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xEA4030", Offset = "0xEA4030", VA = "0xEA4030")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xEA41B0", Offset = "0xEA41B0", VA = "0xEA41B0")]
		add
		{
		}
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xEA4330", Offset = "0xEA4330", VA = "0xEA4330")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xEA44B0", Offset = "0xEA44B0", VA = "0xEA44B0")]
		add
		{
		}
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xEA4630", Offset = "0xEA4630", VA = "0xEA4630")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xE8C3F0", Offset = "0xE8C3F0", VA = "0xE8C3F0")]
		add
		{
		}
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xE8C82C", Offset = "0xE8C82C", VA = "0xE8C82C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xE88094", Offset = "0xE88094", VA = "0xE88094")]
		add
		{
		}
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xE888A4", Offset = "0xE888A4", VA = "0xE888A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xE8C25C", Offset = "0xE8C25C", VA = "0xE8C25C")]
		add
		{
		}
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xE8C6AC", Offset = "0xE8C6AC", VA = "0xE8C6AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xEA47B0", Offset = "0xEA47B0", VA = "0xEA47B0")]
		add
		{
		}
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xEA4930", Offset = "0xEA4930", VA = "0xEA4930")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xEA4AB0", Offset = "0xEA4AB0", VA = "0xEA4AB0")]
		add
		{
		}
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xEA4C30", Offset = "0xEA4C30", VA = "0xEA4C30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xEA4DB0", Offset = "0xEA4DB0", VA = "0xEA4DB0")]
		add
		{
		}
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xEA4F30", Offset = "0xEA4F30", VA = "0xEA4F30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xEA50B0", Offset = "0xEA50B0", VA = "0xEA50B0")]
		add
		{
		}
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xEA5230", Offset = "0xEA5230", VA = "0xEA5230")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xEA53B0", Offset = "0xEA53B0", VA = "0xEA53B0")]
		add
		{
		}
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xEA5530", Offset = "0xEA5530", VA = "0xEA5530")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xEA56B0", Offset = "0xEA56B0", VA = "0xEA56B0")]
		add
		{
		}
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xEA5830", Offset = "0xEA5830", VA = "0xEA5830")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xEA59B0", Offset = "0xEA59B0", VA = "0xEA59B0")]
		add
		{
		}
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xEA5B30", Offset = "0xEA5B30", VA = "0xEA5B30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xEA5CB0", Offset = "0xEA5CB0", VA = "0xEA5CB0")]
		add
		{
		}
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xEA5E30", Offset = "0xEA5E30", VA = "0xEA5E30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xEA5FB0", Offset = "0xEA5FB0", VA = "0xEA5FB0")]
		add
		{
		}
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xEA6130", Offset = "0xEA6130", VA = "0xEA6130")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xEA62B0", Offset = "0xEA62B0", VA = "0xEA62B0")]
		add
		{
		}
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xEA6430", Offset = "0xEA6430", VA = "0xEA6430")]
		remove
		{
		}
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xEA3AF0", Offset = "0xEA3AF0", VA = "0xEA3AF0")]
	public Pvr_ControllerManager()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xEA65B0", Offset = "0xEA65B0", VA = "0xEA65B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xEA69E4", Offset = "0xEA69E4", VA = "0xEA69E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xEA6AC4", Offset = "0xEA6AC4", VA = "0xEA6AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xEAA584", Offset = "0xEAA584", VA = "0xEAA584")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xEAAD40", Offset = "0xEAAD40", VA = "0xEAAD40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xEAAE54", Offset = "0xEAAE54", VA = "0xEAAE54")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xEAB090", Offset = "0xEAB090", VA = "0xEAB090")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xEAB174", Offset = "0xEAB174", VA = "0xEAB174")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xEAB2A0", Offset = "0xEAB2A0", VA = "0xEAB2A0")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xEA6900", Offset = "0xEA6900", VA = "0xEA6900")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xEAB3CC", Offset = "0xEAB3CC", VA = "0xEAB3CC")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xEAB4B0", Offset = "0xEAB4B0", VA = "0xEAB4B0")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xEAB594", Offset = "0xEAB594", VA = "0xEAB594")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xEAAC94", Offset = "0xEAAC94", VA = "0xEAAC94")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xEAB680", Offset = "0xEAB680", VA = "0xEAB680")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xEAB764", Offset = "0xEAB764", VA = "0xEAB764")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xEAB848", Offset = "0xEAB848", VA = "0xEAB848")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xEAB93C", Offset = "0xEAB93C", VA = "0xEAB93C")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xEABA20", Offset = "0xEABA20", VA = "0xEABA20")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xEABAC4", Offset = "0xEABAC4", VA = "0xEABAC4")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xEABB68", Offset = "0xEABB68", VA = "0xEABB68")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xEABC0C", Offset = "0xEABC0C", VA = "0xEABC0C")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xEABCB0", Offset = "0xEABCB0", VA = "0xEABCB0")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xEABD9C", Offset = "0xEABD9C", VA = "0xEABD9C")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xEABECC", Offset = "0xEABECC", VA = "0xEABECC")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xEAC148", Offset = "0xEAC148", VA = "0xEAC148")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xEAC1E8", Offset = "0xEAC1E8", VA = "0xEAC1E8")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xEAC614", Offset = "0xEAC614", VA = "0xEAC614")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xEACA14", Offset = "0xEACA14", VA = "0xEACA14")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xEAD5D0", Offset = "0xEAD5D0", VA = "0xEAD5D0")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xEADF58", Offset = "0xEADF58", VA = "0xEADF58")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xEAE0CC", Offset = "0xEAE0CC", VA = "0xEAE0CC")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xEAE9E8", Offset = "0xEAE9E8", VA = "0xEAE9E8")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xEAEF18", Offset = "0xEAEF18", VA = "0xEAEF18")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xEAF448", Offset = "0xEAF448", VA = "0xEAF448")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xEAF978", Offset = "0xEAF978", VA = "0xEAF978")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xEAFEA8", Offset = "0xEAFEA8", VA = "0xEAFEA8")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xEB03D8", Offset = "0xEB03D8", VA = "0xEB03D8")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xEB0908", Offset = "0xEB0908", VA = "0xEB0908")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xEB0E38", Offset = "0xEB0E38", VA = "0xEB0E38")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xEB1368", Offset = "0xEB1368", VA = "0xEB1368")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xEB1814", Offset = "0xEB1814", VA = "0xEB1814")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xEB1818", Offset = "0xEB1818", VA = "0xEB1818")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xEB181C", Offset = "0xEB181C", VA = "0xEB181C")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xEB1820", Offset = "0xEB1820", VA = "0xEB1820")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xEB1CD4", Offset = "0xEB1CD4", VA = "0xEB1CD4")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xEB1E88", Offset = "0xEB1E88", VA = "0xEB1E88")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xEB2420", Offset = "0xEB2420", VA = "0xEB2420")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xEB19D0", Offset = "0xEB19D0", VA = "0xEB19D0")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xEB29B8", Offset = "0xEB29B8", VA = "0xEB29B8")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xEB2ABC", Offset = "0xEB2ABC", VA = "0xEB2ABC")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xEAE2A4", Offset = "0xEAE2A4", VA = "0xEAE2A4")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xEA9A2C", Offset = "0xEA9A2C", VA = "0xEA9A2C")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xEA93D8", Offset = "0xEA93D8", VA = "0xEA93D8")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xEB2AD0", Offset = "0xEB2AD0", VA = "0xEB2AD0")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xEB2C78", Offset = "0xEB2C78", VA = "0xEB2C78")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xEB2DB8", Offset = "0xEB2DB8", VA = "0xEB2DB8")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20001C1")]
	public enum ControllerVariety
	{
		[Token(Token = "0x400068D")]
		Controller0,
		[Token(Token = "0x400068E")]
		Controller1
	}
}
[Token(Token = "0x20001C2")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F83C", Offset = "0x23F83C")]
	private sealed class <ShowOrHideRay>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int id;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Pvr_ControllerModuleInit $this;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x70AD58", Offset = "0x70AD58", VA = "0x70AD58", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x70AD60", Offset = "0x70AD60", VA = "0x70AD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x70A498", Offset = "0x70A498", VA = "0x70A498")]
		[DebuggerHidden]
		public <ShowOrHideRay>c__Iterator0()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x70AA20", Offset = "0x70AA20", VA = "0x70AA20", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x70AD68", Offset = "0x70AD68", VA = "0x70AD68", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x70AD7C", Offset = "0x70AD7C", VA = "0x70AD7C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsCustomModel;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool moduleState;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x709E24", Offset = "0x709E24", VA = "0x709E24")]
	public Pvr_ControllerModuleInit()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x709E34", Offset = "0x709E34", VA = "0x709E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x70A0A8", Offset = "0x70A0A8", VA = "0x70A0A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x70A1EC", Offset = "0x70A1EC", VA = "0x70A1EC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x70A250", Offset = "0x70A250", VA = "0x70A250")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x70A3F4", Offset = "0x70A3F4", VA = "0x70A3F4")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x70A1F0", Offset = "0x70A1F0", VA = "0x70A1F0")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x70A3F8", Offset = "0x70A3F8", VA = "0x70A3F8")]
	[DebuggerHidden]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x70A4A0", Offset = "0x70A4A0", VA = "0x70A4A0")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x70A60C", Offset = "0x70A60C", VA = "0x70A60C")]
	public void UpdateRay()
	{
	}
}
[Token(Token = "0x20001C4")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image powerImage;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int powerValue;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float power;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x70AE04", Offset = "0x70AE04", VA = "0x70AE04")]
	public Pvr_ControllerPower()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x70AE0C", Offset = "0x70AE0C", VA = "0x70AE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x70AF44", Offset = "0x70AF44", VA = "0x70AF44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x70AF7C", Offset = "0x70AF7C", VA = "0x70AF7C")]
	private void RefreshPower(int hand)
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20001C5")]
	public enum ControllerDevice
	{
		[Token(Token = "0x40006A5")]
		Goblin,
		[Token(Token = "0x40006A6")]
		Neo,
		[Token(Token = "0x40006A7")]
		G2,
		[Token(Token = "0x40006A8")]
		Neo2,
		[Token(Token = "0x40006A9")]
		Neo3,
		[Token(Token = "0x40006AA")]
		NewController
	}
}
[Token(Token = "0x20001C6")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D m_idle;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture2D m_app;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D m_home;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_volUp;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture2D m_volDn;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_trigger;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Texture2D m_a;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_b;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Texture2D m_x;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_y;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture2D m_grip;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x70B1EC", Offset = "0x70B1EC", VA = "0x70B1EC")]
	public Pvr_ControllerVisual()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x70B1F4", Offset = "0x70B1F4", VA = "0x70B1F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x70B25C", Offset = "0x70B25C", VA = "0x70B25C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x70B2FC", Offset = "0x70B2FC", VA = "0x70B2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x70B334", Offset = "0x70B334", VA = "0x70B334")]
	private void ChangeKeyEffects(int hand)
	{
	}
}
[Token(Token = "0x20001C7")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	public enum TipBtn
	{
		[Token(Token = "0x40006BE")]
		app,
		[Token(Token = "0x40006BF")]
		touchpad,
		[Token(Token = "0x40006C0")]
		home,
		[Token(Token = "0x40006C1")]
		volup,
		[Token(Token = "0x40006C2")]
		voldown,
		[Token(Token = "0x40006C3")]
		trigger,
		[Token(Token = "0x40006C4")]
		grip
	}

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float tipsAlpha;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x713728", Offset = "0x713728", VA = "0x713728")]
	public Pvr_ToolTips()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x713730", Offset = "0x713730", VA = "0x713730")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x713A90", Offset = "0x713A90", VA = "0x713A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x713B2C", Offset = "0x713B2C", VA = "0x713B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x714174", Offset = "0x714174", VA = "0x714174")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x7147F4", Offset = "0x7147F4", VA = "0x7147F4")]
	public static void RefreshTips()
	{
	}
}
[Token(Token = "0x20001C9")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isHoving;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int mainHand;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SwipeDirection direction;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 currPos;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 tarPos;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lerpSpeed;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tranViewport;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float ignoreDis;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTouching;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isClosed;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x7148C8", Offset = "0x7148C8", VA = "0x7148C8")]
	public Pvr_TouchPadScroll()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x7149BC", Offset = "0x7149BC", VA = "0x7149BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x714A84", Offset = "0x714A84", VA = "0x714A84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x7150F4", Offset = "0x7150F4", VA = "0x7150F4")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x714C7C", Offset = "0x714C7C", VA = "0x714C7C")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x715C08", Offset = "0x715C08", VA = "0x715C08")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x716128", Offset = "0x716128", VA = "0x716128")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x7167D8", Offset = "0x7167D8", VA = "0x7167D8")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x714E20", Offset = "0x714E20", VA = "0x714E20")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x715AA4", Offset = "0x715AA4", VA = "0x715AA4")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x714AA8", Offset = "0x714AA8", VA = "0x714AA8")]
	private void Process()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x716830", Offset = "0x716830", VA = "0x716830")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x716AEC", Offset = "0x716AEC", VA = "0x716AEC")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001CA")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x716C04", Offset = "0x716C04", VA = "0x716C04")]
	public Pvr_TouchVisual()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x716C0C", Offset = "0x716C0C", VA = "0x716C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x716CFC", Offset = "0x716CFC", VA = "0x716CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x716D34", Offset = "0x716D34", VA = "0x716D34")]
	private void ChangeEffects(int hand)
	{
	}
}
[Token(Token = "0x20001CB")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x20001CC")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F84C", Offset = "0x23F84C")]
	private sealed class <InitDelegate>c__AnonStorey0
	{
		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject btnObj;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal DemoController $this;

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x39C8E8", Offset = "0x39C8E8", VA = "0x39C8E8")]
		public <InitDelegate>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x39D664", Offset = "0x39D664", VA = "0x39D664")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Callback callback;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject msg;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentOrderID;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject loading;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BG;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject InputPanel;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x39BD80", Offset = "0x39BD80", VA = "0x39BD80")]
	public DemoController()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x39BD88", Offset = "0x39BD88", VA = "0x39BD88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x39C070", Offset = "0x39C070", VA = "0x39C070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x39C714", Offset = "0x39C714", VA = "0x39C714")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x39C170", Offset = "0x39C170", VA = "0x39C170")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x39C8F0", Offset = "0x39C8F0", VA = "0x39C8F0")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x39CE78", Offset = "0x39CE78", VA = "0x39CE78")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x39CE20", Offset = "0x39CE20", VA = "0x39CE20")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x39CEBC", Offset = "0x39CEBC", VA = "0x39CEBC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x39D020", Offset = "0x39D020", VA = "0x39D020")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x39D4B8", Offset = "0x39D4B8", VA = "0x39D4B8")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001CE")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x433D78", Offset = "0x433D78", VA = "0x433D78")]
	public LoadingRatation()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x433D80", Offset = "0x433D80", VA = "0x433D80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x433D84", Offset = "0x433D84", VA = "0x433D84")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001CF")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F85C", Offset = "0x23F85C")]
	private sealed class <InitKeyBoard>c__AnonStorey0
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject btnObj;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal InputManager $this;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x42EAD8", Offset = "0x42EAD8", VA = "0x42EAD8")]
		public <InitKeyBoard>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x42FACC", Offset = "0x42FACC", VA = "0x42FACC")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private StringBuilder sb;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ArrayList btnsName;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject enter;

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x42DCE8", Offset = "0x42DCE8", VA = "0x42DCE8")]
	public InputManager()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x42DD88", Offset = "0x42DD88", VA = "0x42DD88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x42EAD0", Offset = "0x42EAD0", VA = "0x42EAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x42EAD4", Offset = "0x42EAD4", VA = "0x42EAD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x42DD8C", Offset = "0x42DD8C", VA = "0x42DD8C")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x42EAE0", Offset = "0x42EAE0", VA = "0x42EAE0")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x42F96C", Offset = "0x42F96C", VA = "0x42F96C")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x42EEC4", Offset = "0x42EEC4", VA = "0x42EEC4")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x42F6A8", Offset = "0x42F6A8", VA = "0x42F6A8")]
	private void ClearBuffer()
	{
	}
}
[Token(Token = "0x20001D2")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string MSG;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string CODE;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x3945E0", Offset = "0x3945E0", VA = "0x3945E0")]
	public Callback()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x3945E8", Offset = "0x3945E8", VA = "0x3945E8")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x394DB0", Offset = "0x394DB0", VA = "0x394DB0")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x395138", Offset = "0x395138", VA = "0x395138")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x394968", Offset = "0x394968", VA = "0x394968")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x395270", Offset = "0x395270", VA = "0x395270")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x3952D0", Offset = "0x3952D0", VA = "0x3952D0")]
	public void ActivityForResultCallback(string activity)
	{
	}
}
[Token(Token = "0x20001D3")]
public class CommonDic
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string _app_ID;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string _app_Key;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _user_token;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string _access_token;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _open_id;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string _refresh_token;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _expires_in;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string _user_info;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _subject;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string _body;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _order_id;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private string _total;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _goods_tag;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string _notify_url;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _trade_type;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private string _pay_code;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _order_info;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string _code;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _msg;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private string _merchant_ID;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _payKey;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private string _isSuucess;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _loginMsg;

	[Token(Token = "0x170000A6")]
	public string subject
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x3982CC", Offset = "0x3982CC", VA = "0x3982CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x398204", Offset = "0x398204", VA = "0x398204")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public string body
	{
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x3982D4", Offset = "0x3982D4", VA = "0x3982D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x39820C", Offset = "0x39820C", VA = "0x39820C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public string order_id
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x3982DC", Offset = "0x3982DC", VA = "0x3982DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x398214", Offset = "0x398214", VA = "0x398214")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public string total
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x3982E4", Offset = "0x3982E4", VA = "0x3982E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x39821C", Offset = "0x39821C", VA = "0x39821C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public string goods_tag
	{
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x3982EC", Offset = "0x3982EC", VA = "0x3982EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x398224", Offset = "0x398224", VA = "0x398224")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public string notify_url
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x3982F4", Offset = "0x3982F4", VA = "0x3982F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x39822C", Offset = "0x39822C", VA = "0x39822C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public string pay_code
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x3982FC", Offset = "0x3982FC", VA = "0x3982FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x39823C", Offset = "0x39823C", VA = "0x39823C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public string trade_type
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x398304", Offset = "0x398304", VA = "0x398304")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x398234", Offset = "0x398234", VA = "0x398234")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public string user_token
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x39830C", Offset = "0x39830C", VA = "0x39830C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x398314", Offset = "0x398314", VA = "0x398314")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public string access_token
	{
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x39831C", Offset = "0x39831C", VA = "0x39831C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x398324", Offset = "0x398324", VA = "0x398324")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public string open_id
	{
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x39832C", Offset = "0x39832C", VA = "0x39832C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x398334", Offset = "0x398334", VA = "0x398334")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public string refresh_token
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x39833C", Offset = "0x39833C", VA = "0x39833C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x398344", Offset = "0x398344", VA = "0x398344")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public string expires_in
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x39834C", Offset = "0x39834C", VA = "0x39834C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x398354", Offset = "0x398354", VA = "0x398354")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public string isSuccess
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x39835C", Offset = "0x39835C", VA = "0x39835C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x394DA0", Offset = "0x394DA0", VA = "0x394DA0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public string loginMsg
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x398364", Offset = "0x398364", VA = "0x398364")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x394DA8", Offset = "0x394DA8", VA = "0x394DA8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public string user_info
	{
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x39836C", Offset = "0x39836C", VA = "0x39836C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x395268", Offset = "0x395268", VA = "0x395268")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public string order_info
	{
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x398374", Offset = "0x398374", VA = "0x398374")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x395130", Offset = "0x395130", VA = "0x395130")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public string code
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x39837C", Offset = "0x39837C", VA = "0x39837C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x395120", Offset = "0x395120", VA = "0x395120")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public string msg
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x398384", Offset = "0x398384", VA = "0x398384")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x395128", Offset = "0x395128", VA = "0x395128")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public string app_ID
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x39838C", Offset = "0x39838C", VA = "0x39838C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x398394", Offset = "0x398394", VA = "0x398394")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public string app_Key
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x39839C", Offset = "0x39839C", VA = "0x39839C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x3983A4", Offset = "0x3983A4", VA = "0x3983A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public string merchant_ID
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x3983AC", Offset = "0x3983AC", VA = "0x3983AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x3983B4", Offset = "0x3983B4", VA = "0x3983B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public string paykey
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x3983BC", Offset = "0x3983BC", VA = "0x3983BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x3983C4", Offset = "0x3983C4", VA = "0x3983C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x397358", Offset = "0x397358", VA = "0x397358")]
	public CommonDic()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x394CA0", Offset = "0x394CA0", VA = "0x394CA0")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x397FAC", Offset = "0x397FAC", VA = "0x397FAC")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x398010", Offset = "0x398010", VA = "0x398010")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x398244", Offset = "0x398244", VA = "0x398244")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x397418", Offset = "0x397418", VA = "0x397418")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}
}
[Token(Token = "0x20001D4")]
public class LoginSDK
{
	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x433E18", Offset = "0x433E18", VA = "0x433E18")]
	public LoginSDK()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x433E20", Offset = "0x433E20", VA = "0x433E20")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x433E9C", Offset = "0x433E9C", VA = "0x433E9C")]
	public static void GetUserAPI()
	{
	}
}
[Token(Token = "0x20001D5")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x170000BD")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x3F798C", Offset = "0x3F798C", VA = "0x3F798C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x3F7A18", Offset = "0x3F7A18", VA = "0x3F7A18")]
		set
		{
		}
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x3F7984", Offset = "0x3F7984", VA = "0x3F7984")]
	public PicoPaymentSDK()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x3F7AA8", Offset = "0x3F7AA8", VA = "0x3F7AA8")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x3F7C94", Offset = "0x3F7C94", VA = "0x3F7C94")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x3F7EE4", Offset = "0x3F7EE4", VA = "0x3F7EE4")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x3F8134", Offset = "0x3F8134", VA = "0x3F8134")]
	public static void GetUserAPI()
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20001D6")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4000705")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4000706")]
		PUI_VERSION,
		[Token(Token = "0x4000707")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4000708")]
		EQUIPMENT_SN,
		[Token(Token = "0x4000709")]
		CUSTOMER_SN,
		[Token(Token = "0x400070A")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x400070B")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x400070C")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x400070D")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x400070E")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x400070F")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4000710")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4000711")]
		DEVICE_IP
	}
	[Token(Token = "0x20001D7")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4000713")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4000714")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20001D8")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4000716")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4000717")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20001D9")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4000719")]
		S_ON,
		[Token(Token = "0x400071A")]
		S_OFF
	}
	[Token(Token = "0x20001DA")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x400071C")]
		SINGLE_CLICK,
		[Token(Token = "0x400071D")]
		DOUBLE_CLICK,
		[Token(Token = "0x400071E")]
		LONG_PRESS
	}
	[Token(Token = "0x20001DB")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4000720")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4000721")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4000722")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4000723")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4000724")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4000725")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4000726")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4000727")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20001DC")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4000729")]
		THREE = 3,
		[Token(Token = "0x400072A")]
		TEN = 10,
		[Token(Token = "0x400072B")]
		THIRTY = 30,
		[Token(Token = "0x400072C")]
		SIXTY = 60,
		[Token(Token = "0x400072D")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x400072E")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x400072F")]
		NEVER = -1
	}
	[Token(Token = "0x20001DD")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4000731")]
		FIFTEEN = 15,
		[Token(Token = "0x4000732")]
		THIRTY = 30,
		[Token(Token = "0x4000733")]
		SIXTY = 60,
		[Token(Token = "0x4000734")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000735")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000736")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4000737")]
		NEVER = -1
	}
	[Token(Token = "0x20001DE")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4000739")]
		SFS_USB,
		[Token(Token = "0x400073A")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x400073B")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x400073C")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x400073D")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x400073E")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x400073F")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4000740")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4000741")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4000742")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4000743")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4000744")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4000745")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4000746")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20001DF")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4000748")]
		MTP,
		[Token(Token = "0x4000749")]
		CHARGE
	}
	[Token(Token = "0x20001E0")]
	public struct ToBService
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<int> IntCallback;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<long> LongCallback;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xC44854", Offset = "0xC44854", VA = "0xC44854")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xC449F8", Offset = "0xC449F8", VA = "0xC449F8")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xC44AF4", Offset = "0xC44AF4", VA = "0xC44AF4")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xC44BF8", Offset = "0xC44BF8", VA = "0xC44BF8")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xC44CFC", Offset = "0xC44CFC", VA = "0xC44CFC")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xC44E9C", Offset = "0xC44E9C", VA = "0xC44E9C")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xC450A4", Offset = "0xC450A4", VA = "0xC450A4")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xC451DC", Offset = "0xC451DC", VA = "0xC451DC")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xC453DC", Offset = "0xC453DC", VA = "0xC453DC")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xC455C8", Offset = "0xC455C8", VA = "0xC455C8")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xC45660", Offset = "0xC45660", VA = "0xC45660")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xC45820", Offset = "0xC45820", VA = "0xC45820")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xC45AFC", Offset = "0xC45AFC", VA = "0xC45AFC")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xC45CA4", Offset = "0xC45CA4", VA = "0xC45CA4")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xC45DDC", Offset = "0xC45DDC", VA = "0xC45DDC")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xC45F04", Offset = "0xC45F04", VA = "0xC45F04")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xC46118", Offset = "0xC46118", VA = "0xC46118")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xC462B4", Offset = "0xC462B4", VA = "0xC462B4")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xC46348", Offset = "0xC46348", VA = "0xC46348")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xC463DC", Offset = "0xC463DC", VA = "0xC463DC")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xC46470", Offset = "0xC46470", VA = "0xC46470")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xC46504", Offset = "0xC46504", VA = "0xC46504")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xC46598", Offset = "0xC46598", VA = "0xC46598")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xC4662C", Offset = "0xC4662C", VA = "0xC4662C")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xC466C0", Offset = "0xC466C0", VA = "0xC466C0")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xC46754", Offset = "0xC46754", VA = "0xC46754")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xC467E8", Offset = "0xC467E8", VA = "0xC467E8")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xC4687C", Offset = "0xC4687C", VA = "0xC4687C")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xC469EC", Offset = "0xC469EC", VA = "0xC469EC")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
}
[Token(Token = "0x20001E1")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text deviceInfoText;

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x71306C", Offset = "0x71306C", VA = "0x71306C")]
	public Pvr_ToBService()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x713074", Offset = "0x713074", VA = "0x713074")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x7130A4", Offset = "0x7130A4", VA = "0x7130A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x7130B4", Offset = "0x7130B4", VA = "0x7130B4")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x713078", Offset = "0x713078", VA = "0x713078")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x7130AC", Offset = "0x7130AC", VA = "0x7130AC")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x7130BC", Offset = "0x7130BC", VA = "0x7130BC")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x7130C4", Offset = "0x7130C4", VA = "0x7130C4")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x7131A0", Offset = "0x7131A0", VA = "0x7131A0")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x713250", Offset = "0x713250", VA = "0x713250")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x713314", Offset = "0x713314", VA = "0x713314")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x7133E8", Offset = "0x7133E8", VA = "0x7133E8")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x713488", Offset = "0x713488", VA = "0x713488")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x713580", Offset = "0x713580", VA = "0x713580")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x713630", Offset = "0x713630", VA = "0x713630")]
	private void AppManagerCallBack(int value)
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20001E2")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4000753")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4000754")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4000755")]
		SEENSOR_COUNT,
		[Token(Token = "0x4000756")]
		ABILITY6DOF,
		[Token(Token = "0x4000757")]
		PLATFORM_TYPE,
		[Token(Token = "0x4000758")]
		TRACKING_MODE,
		[Token(Token = "0x4000759")]
		LOG_LEVEL,
		[Token(Token = "0x400075A")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x400075B")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x400075C")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x400075D")]
		iShowFPS,
		[Token(Token = "0x400075E")]
		SensorMode,
		[Token(Token = "0x400075F")]
		LOGICFLOW,
		[Token(Token = "0x4000760")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4000761")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4000762")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4000763")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4000764")]
		isEnableBoundary,
		[Token(Token = "0x4000765")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4000766")]
		GetDisplay_Orientation,
		[Token(Token = "0x4000767")]
		GetWaitFrameNum,
		[Token(Token = "0x4000768")]
		GetResetFrameNum,
		[Token(Token = "0x4000769")]
		EnableFFRBYSYS,
		[Token(Token = "0x400076A")]
		RotControllerMode
	}
	[Token(Token = "0x20001E3")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x400076C")]
		IPD,
		[Token(Token = "0x400076D")]
		VFOV,
		[Token(Token = "0x400076E")]
		HFOV,
		[Token(Token = "0x400076F")]
		NECK_MODEL_X,
		[Token(Token = "0x4000770")]
		NECK_MODEL_Y,
		[Token(Token = "0x4000771")]
		NECK_MODEL_Z,
		[Token(Token = "0x4000772")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20001E4")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000774")]
		X_1 = 1,
		[Token(Token = "0x4000775")]
		X_2 = 2,
		[Token(Token = "0x4000776")]
		X_4 = 4,
		[Token(Token = "0x4000777")]
		X_8 = 8
	}
	[Token(Token = "0x20001E5")]
	public enum PlatForm
	{
		[Token(Token = "0x4000779")]
		Android = 1,
		[Token(Token = "0x400077A")]
		IOS,
		[Token(Token = "0x400077B")]
		Win,
		[Token(Token = "0x400077C")]
		Notsupport
	}
	[Token(Token = "0x20001E6")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x400077E")]
		BD_0 = 0,
		[Token(Token = "0x400077F")]
		BD_16 = 16,
		[Token(Token = "0x4000780")]
		BD_24 = 24
	}
	[Token(Token = "0x20001E7")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4000782")]
		Normal,
		[Token(Token = "0x4000783")]
		High
	}
	[Token(Token = "0x20001E8")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000785")]
		Default,
		[Token(Token = "0x4000786")]
		FirstSensor,
		[Token(Token = "0x4000787")]
		SecondSensor
	}
	[Token(Token = "0x20001E9")]
	public enum Eye
	{
		[Token(Token = "0x4000789")]
		LeftEye,
		[Token(Token = "0x400078A")]
		RightEye,
		[Token(Token = "0x400078B")]
		BothEye
	}
	[Token(Token = "0x20001EA")]
	public enum ResUtilsType
	{
		[Token(Token = "0x400078D")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x400078E")]
		TYPE_COLOR,
		[Token(Token = "0x400078F")]
		TYPE_TEXT,
		[Token(Token = "0x4000790")]
		TYPE_FONT,
		[Token(Token = "0x4000791")]
		TYPE_VALUE,
		[Token(Token = "0x4000792")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4000793")]
		TYPE_OBJECT,
		[Token(Token = "0x4000794")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20001EB")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000796")]
		EyeLevel,
		[Token(Token = "0x4000797")]
		FloorLevel,
		[Token(Token = "0x4000798")]
		StageLevel
	}
	[Token(Token = "0x20001EC")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x400079A")]
		Low,
		[Token(Token = "0x400079B")]
		Med,
		[Token(Token = "0x400079C")]
		High,
		[Token(Token = "0x400079D")]
		Top_High
	}
	[Token(Token = "0x20001ED")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x400079F")]
		MultiPass,
		[Token(Token = "0x40007A0")]
		SinglePass
	}
	[Token(Token = "0x20001EE")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x40007A2")]
		kGazePointValid = 1,
		[Token(Token = "0x40007A3")]
		kGazeVectorValid = 2,
		[Token(Token = "0x40007A4")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x40007A5")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x40007A6")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20001EF")]
	public enum TrackingMode
	{
		[Token(Token = "0x40007A8")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x40007A9")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x40007AA")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20001F0")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public byte[] reserved;
	}
	[Token(Token = "0x20001F1")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20001F2")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20001F3")]
	public struct ViewFrustum
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20001F4")]
	public struct EyeSetting
	{
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Rect eyeRect;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float eyeFov;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeAspect;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20001F5")]
	public struct Sensor
	{
		[Token(Token = "0x40007CE")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC3B2B0", Offset = "0xC3B2B0", VA = "0xC3B2B0")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xC3B3C0", Offset = "0xC3B3C0", VA = "0xC3B3C0")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xC3B4E8", Offset = "0xC3B4E8", VA = "0xC3B4E8")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xC3B5E0", Offset = "0xC3B5E0", VA = "0xC3B5E0")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xC3B6E8", Offset = "0xC3B6E8", VA = "0xC3B6E8")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xC3B7F0", Offset = "0xC3B7F0", VA = "0xC3B7F0")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xC3B8F8", Offset = "0xC3B8F8", VA = "0xC3B8F8")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xC3BA08", Offset = "0xC3BA08", VA = "0xC3BA08")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xC3BB50", Offset = "0xC3BB50", VA = "0xC3BB50")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xC3BCB0", Offset = "0xC3BCB0", VA = "0xC3BCB0")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xC3BDB0", Offset = "0xC3BDB0", VA = "0xC3BDB0")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xC3BEB8", Offset = "0xC3BEB8", VA = "0xC3BEB8")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xC3BFE8", Offset = "0xC3BFE8", VA = "0xC3BFE8")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xC3C110", Offset = "0xC3C110", VA = "0xC3C110")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xC3C1E8", Offset = "0xC3C1E8", VA = "0xC3C1E8")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xC3C2F8", Offset = "0xC3C2F8", VA = "0xC3C2F8")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xC3C450", Offset = "0xC3C450", VA = "0xC3C450")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xC3C570", Offset = "0xC3C570", VA = "0xC3C570")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xC3C574", Offset = "0xC3C574", VA = "0xC3C574")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xC3C578", Offset = "0xC3C578", VA = "0xC3C578")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xC3C804", Offset = "0xC3C804", VA = "0xC3C804")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xC3CA84", Offset = "0xC3CA84", VA = "0xC3CA84")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xC3CA88", Offset = "0xC3CA88", VA = "0xC3CA88")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC3CC88", Offset = "0xC3CC88", VA = "0xC3CC88")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xC3CC8C", Offset = "0xC3CC8C", VA = "0xC3CC8C")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xC3CC90", Offset = "0xC3CC90", VA = "0xC3CC90")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xC3CD38", Offset = "0xC3CD38", VA = "0xC3CD38")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xC3CD3C", Offset = "0xC3CD3C", VA = "0xC3CD3C")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xC3CD74", Offset = "0xC3CD74", VA = "0xC3CD74")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xC3CDB8", Offset = "0xC3CDB8", VA = "0xC3CDB8")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xC3CDD0", Offset = "0xC3CDD0", VA = "0xC3CDD0")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xC3CDE8", Offset = "0xC3CDE8", VA = "0xC3CDE8")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xC3CDEC", Offset = "0xC3CDEC", VA = "0xC3CDEC")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xC3C57C", Offset = "0xC3C57C", VA = "0xC3C57C")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xC3D114", Offset = "0xC3D114", VA = "0xC3D114")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xC3C85C", Offset = "0xC3C85C", VA = "0xC3C85C")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xC3CA8C", Offset = "0xC3CA8C", VA = "0xC3CA8C")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xC3D3F8", Offset = "0xC3D3F8", VA = "0xC3D3F8")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xC3D3FC", Offset = "0xC3D3FC", VA = "0xC3D3FC")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xC3DA88", Offset = "0xC3DA88", VA = "0xC3DA88")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F6")]
	public struct Render
	{
		[Token(Token = "0x40007CF")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xC38890", Offset = "0xC38890", VA = "0xC38890")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xC389B8", Offset = "0xC389B8", VA = "0xC389B8")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xC38AC0", Offset = "0xC38AC0", VA = "0xC38AC0")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC38BD0", Offset = "0xC38BD0", VA = "0xC38BD0")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xC38CD8", Offset = "0xC38CD8", VA = "0xC38CD8")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xC38E08", Offset = "0xC38E08", VA = "0xC38E08")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xC38F18", Offset = "0xC38F18", VA = "0xC38F18")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xC39030", Offset = "0xC39030", VA = "0xC39030")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xC39170", Offset = "0xC39170", VA = "0xC39170")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xC392C8", Offset = "0xC392C8", VA = "0xC392C8")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xC39448", Offset = "0xC39448", VA = "0xC39448")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xC39560", Offset = "0xC39560", VA = "0xC39560")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xC39678", Offset = "0xC39678", VA = "0xC39678")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xC397A8", Offset = "0xC397A8", VA = "0xC397A8")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC398A0", Offset = "0xC398A0", VA = "0xC398A0")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xC399B0", Offset = "0xC399B0", VA = "0xC399B0")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xC39AB0", Offset = "0xC39AB0", VA = "0xC39AB0")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xC39BF0", Offset = "0xC39BF0", VA = "0xC39BF0")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC39D00", Offset = "0xC39D00", VA = "0xC39D00")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC39DE0", Offset = "0xC39DE0", VA = "0xC39DE0")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xC39EC8", Offset = "0xC39EC8", VA = "0xC39EC8")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xC39FB0", Offset = "0xC39FB0", VA = "0xC39FB0")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC3A0B8", Offset = "0xC3A0B8", VA = "0xC3A0B8")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xC3A1E4", Offset = "0xC3A1E4", VA = "0xC3A1E4")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xC3A208", Offset = "0xC3A208", VA = "0xC3A208")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xC3A20C", Offset = "0xC3A20C", VA = "0xC3A20C")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xC3A4A8", Offset = "0xC3A4A8", VA = "0xC3A4A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x247F30", Offset = "0x247F30")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xC3A4E0", Offset = "0xC3A4E0", VA = "0xC3A4E0")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xC3A4F8", Offset = "0xC3A4F8", VA = "0xC3A4F8")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xC3A67C", Offset = "0xC3A67C", VA = "0xC3A67C")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xC3A680", Offset = "0xC3A680", VA = "0xC3A680")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC3A824", Offset = "0xC3A824", VA = "0xC3A824")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC3A828", Offset = "0xC3A828", VA = "0xC3A828")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC3A82C", Offset = "0xC3A82C", VA = "0xC3A82C")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC3A830", Offset = "0xC3A830", VA = "0xC3A830")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC3A8D0", Offset = "0xC3A8D0", VA = "0xC3A8D0")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC3A8D4", Offset = "0xC3A8D4", VA = "0xC3A8D4")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC3AAA0", Offset = "0xC3AAA0", VA = "0xC3AAA0")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xC3AAC4", Offset = "0xC3AAC4", VA = "0xC3AAC4")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xC3B27C", Offset = "0xC3B27C", VA = "0xC3B27C")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xC3B280", Offset = "0xC3B280", VA = "0xC3B280")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC3B284", Offset = "0xC3B284", VA = "0xC3B284")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC3B288", Offset = "0xC3B288", VA = "0xC3B288")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC3B28C", Offset = "0xC3B28C", VA = "0xC3B28C")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC3B290", Offset = "0xC3B290", VA = "0xC3B290")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public struct System
	{
		[Token(Token = "0x40007D0")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40007D1")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC3DA90", Offset = "0xC3DA90", VA = "0xC3DA90")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xC3DB68", Offset = "0xC3DB68", VA = "0xC3DB68")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xC3DC60", Offset = "0xC3DC60", VA = "0xC3DC60")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xC3DD68", Offset = "0xC3DD68", VA = "0xC3DD68")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xC3DE70", Offset = "0xC3DE70", VA = "0xC3DE70")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xC3DF78", Offset = "0xC3DF78", VA = "0xC3DF78")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xC3E080", Offset = "0xC3E080", VA = "0xC3E080")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xC3E158", Offset = "0xC3E158", VA = "0xC3E158")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xC3E268", Offset = "0xC3E268", VA = "0xC3E268")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xC3E478", Offset = "0xC3E478", VA = "0xC3E478")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xC3E590", Offset = "0xC3E590", VA = "0xC3E590")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xC3E690", Offset = "0xC3E690", VA = "0xC3E690")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xC3E790", Offset = "0xC3E790", VA = "0xC3E790")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xC3E8A0", Offset = "0xC3E8A0", VA = "0xC3E8A0")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xC3E9B8", Offset = "0xC3E9B8", VA = "0xC3E9B8")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xC3EAC8", Offset = "0xC3EAC8", VA = "0xC3EAC8")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xC3EBA8", Offset = "0xC3EBA8", VA = "0xC3EBA8")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xC3EC88", Offset = "0xC3EC88", VA = "0xC3EC88")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xC3ED80", Offset = "0xC3ED80", VA = "0xC3ED80")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC3EEA0", Offset = "0xC3EEA0", VA = "0xC3EEA0")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xC3EFA8", Offset = "0xC3EFA8", VA = "0xC3EFA8")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xC3F098", Offset = "0xC3F098", VA = "0xC3F098")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xC3F1B8", Offset = "0xC3F1B8", VA = "0xC3F1B8")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC3F2C8", Offset = "0xC3F2C8", VA = "0xC3F2C8")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xC38790", Offset = "0xC38790", VA = "0xC38790")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6000CD8")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xC3CDF0", Offset = "0xC3CDF0", VA = "0xC3CDF0")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDA")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC3F3E8", Offset = "0xC3F3E8", VA = "0xC3F3E8")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xC3F70C", Offset = "0xC3F70C", VA = "0xC3F70C")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xC3F7F0", Offset = "0xC3F7F0", VA = "0xC3F7F0")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC3F84C", Offset = "0xC3F84C", VA = "0xC3F84C")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xC3F8C8", Offset = "0xC3F8C8", VA = "0xC3F8C8")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xC3750C", Offset = "0xC3750C", VA = "0xC3750C")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xC37A38", Offset = "0xC37A38", VA = "0xC37A38")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC3F8D0", Offset = "0xC3F8D0", VA = "0xC3F8D0")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xC3F954", Offset = "0xC3F954", VA = "0xC3F954")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC3FA10", Offset = "0xC3FA10", VA = "0xC3FA10")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC3FACC", Offset = "0xC3FACC", VA = "0xC3FACC")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xC3FB8C", Offset = "0xC3FB8C", VA = "0xC3FB8C")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xC3FEF8", Offset = "0xC3FEF8", VA = "0xC3FEF8")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xC40214", Offset = "0xC40214", VA = "0xC40214")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC402D4", Offset = "0xC402D4", VA = "0xC402D4")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xC40394", Offset = "0xC40394", VA = "0xC40394")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xC40454", Offset = "0xC40454", VA = "0xC40454")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xC405B8", Offset = "0xC405B8", VA = "0xC405B8")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xC40678", Offset = "0xC40678", VA = "0xC40678")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xC40818", Offset = "0xC40818", VA = "0xC40818")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xC40DD8", Offset = "0xC40DD8", VA = "0xC40DD8")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xC40ED8", Offset = "0xC40ED8", VA = "0xC40ED8")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xC40EDC", Offset = "0xC40EDC", VA = "0xC40EDC")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xC40EE0", Offset = "0xC40EE0", VA = "0xC40EE0")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xC40EE4", Offset = "0xC40EE4", VA = "0xC40EE4")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC40EE8", Offset = "0xC40EE8", VA = "0xC40EE8")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC40F88", Offset = "0xC40F88", VA = "0xC40F88")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xC41134", Offset = "0xC41134", VA = "0xC41134")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC41138", Offset = "0xC41138", VA = "0xC41138")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xC4121C", Offset = "0xC4121C", VA = "0xC4121C")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xC41300", Offset = "0xC41300", VA = "0xC41300")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xC41304", Offset = "0xC41304", VA = "0xC41304")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xC41308", Offset = "0xC41308", VA = "0xC41308")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xC4130C", Offset = "0xC4130C", VA = "0xC4130C")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xC41310", Offset = "0xC41310", VA = "0xC41310")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xC41314", Offset = "0xC41314", VA = "0xC41314")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xC415D4", Offset = "0xC415D4", VA = "0xC415D4")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xC4192C", Offset = "0xC4192C", VA = "0xC4192C")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xC41CE4", Offset = "0xC41CE4", VA = "0xC41CE4")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xC421D8", Offset = "0xC421D8", VA = "0xC421D8")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xC42330", Offset = "0xC42330", VA = "0xC42330")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xC424D8", Offset = "0xC424D8", VA = "0xC424D8")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xC4292C", Offset = "0xC4292C", VA = "0xC4292C")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xC42930", Offset = "0xC42930", VA = "0xC42930")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xC42934", Offset = "0xC42934", VA = "0xC42934")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xC42938", Offset = "0xC42938", VA = "0xC42938")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xC4293C", Offset = "0xC4293C", VA = "0xC4293C")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xC42940", Offset = "0xC42940", VA = "0xC42940")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xC42944", Offset = "0xC42944", VA = "0xC42944")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xC42BD4", Offset = "0xC42BD4", VA = "0xC42BD4")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xC42E64", Offset = "0xC42E64", VA = "0xC42E64")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xC4313C", Offset = "0xC4313C", VA = "0xC4313C")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xC43414", Offset = "0xC43414", VA = "0xC43414")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xC436A4", Offset = "0xC436A4", VA = "0xC436A4")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xC4397C", Offset = "0xC4397C", VA = "0xC4397C")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xC43CD0", Offset = "0xC43CD0", VA = "0xC43CD0")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xC43FDC", Offset = "0xC43FDC", VA = "0xC43FDC")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xC44270", Offset = "0xC44270", VA = "0xC44270")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xC445C4", Offset = "0xC445C4", VA = "0xC445C4")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001F8")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20001F9")]
		public enum BoundaryType
		{
			[Token(Token = "0x40007D4")]
			OuterBoundary,
			[Token(Token = "0x40007D5")]
			PlayArea
		}

		[Token(Token = "0x20001FA")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x40007D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20001FB")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x40007DB")]
			HandLeft,
			[Token(Token = "0x40007DC")]
			HandRight,
			[Token(Token = "0x40007DD")]
			Head
		}

		[Token(Token = "0x20001FC")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40007DF")]
			PVR_NOREASON,
			[Token(Token = "0x40007E0")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40007E1")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40007E2")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40007E3")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40007E4")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x40007D2")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x726698", Offset = "0x726698", VA = "0x726698")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x726798", Offset = "0x726798", VA = "0x726798")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x7268A0", Offset = "0x7268A0", VA = "0x7268A0")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x726980", Offset = "0x726980", VA = "0x726980")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x726A80", Offset = "0x726A80", VA = "0x726A80")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x726B88", Offset = "0x726B88", VA = "0x726B88")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x726C90", Offset = "0x726C90", VA = "0x726C90")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x726DA0", Offset = "0x726DA0", VA = "0x726DA0")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x726F10", Offset = "0x726F10", VA = "0x726F10")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x727088", Offset = "0x727088", VA = "0x727088")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x7271A8", Offset = "0x7271A8", VA = "0x7271A8")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x7272D8", Offset = "0x7272D8", VA = "0x7272D8")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x7273E8", Offset = "0x7273E8", VA = "0x7273E8")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x727500", Offset = "0x727500", VA = "0x727500")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x727610", Offset = "0x727610", VA = "0x727610")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x727720", Offset = "0x727720", VA = "0x727720")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x727840", Offset = "0x727840", VA = "0x727840")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x727928", Offset = "0x727928", VA = "0x727928")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x727A48", Offset = "0x727A48", VA = "0x727A48")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x727B28", Offset = "0x727B28", VA = "0x727B28")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x727C24", Offset = "0x727C24", VA = "0x727C24")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x727C28", Offset = "0x727C28", VA = "0x727C28")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x727C2C", Offset = "0x727C2C", VA = "0x727C2C")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x727C30", Offset = "0x727C30", VA = "0x727C30")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x727C34", Offset = "0x727C34", VA = "0x727C34")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x727C38", Offset = "0x727C38", VA = "0x727C38")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x727C3C", Offset = "0x727C3C", VA = "0x727C3C")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x727C40", Offset = "0x727C40", VA = "0x727C40")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x727DF4", Offset = "0x727DF4", VA = "0x727DF4")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x727FB0", Offset = "0x727FB0", VA = "0x727FB0")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x728260", Offset = "0x728260", VA = "0x728260")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x7282C8", Offset = "0x7282C8", VA = "0x7282C8")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x7282CC", Offset = "0x7282CC", VA = "0x7282CC")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x7282D0", Offset = "0x7282D0", VA = "0x7282D0")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x7282D4", Offset = "0x7282D4", VA = "0x7282D4")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x7282D8", Offset = "0x7282D8", VA = "0x7282D8")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x7282DC", Offset = "0x7282DC", VA = "0x7282DC")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x728490", Offset = "0x728490", VA = "0x728490")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x728644", Offset = "0x728644", VA = "0x728644")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x7288C8", Offset = "0x7288C8", VA = "0x7288C8")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x728A58", Offset = "0x728A58", VA = "0x728A58")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x728BE0", Offset = "0x728BE0", VA = "0x728BE0")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x728D68", Offset = "0x728D68", VA = "0x728D68")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001FD")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xC37214", Offset = "0xC37214", VA = "0xC37214")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xC37604", Offset = "0xC37604", VA = "0xC37604")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xC37AEC", Offset = "0xC37AEC", VA = "0xC37AEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x247F64", Offset = "0x247F64")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xC37F20", Offset = "0xC37F20", VA = "0xC37F20")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xC38354", Offset = "0xC38354", VA = "0xC38354")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xC38788", Offset = "0xC38788", VA = "0xC38788")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
}
[Token(Token = "0x20001FE")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x3F5450", Offset = "0x3F5450", VA = "0x3F5450")]
	public PLOG()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x3F5458", Offset = "0x3F5458", VA = "0x3F5458")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x3F54EC", Offset = "0x3F54EC", VA = "0x3F54EC")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x3F55BC", Offset = "0x3F55BC", VA = "0x3F55BC")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x3F568C", Offset = "0x3F568C", VA = "0x3F568C")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x3F575C", Offset = "0x3F575C", VA = "0x3F575C")]
	public static void E(string msg)
	{
	}
}
[Token(Token = "0x20001FF")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool AppIDChecked;

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x3945D8", Offset = "0x3945D8", VA = "0x3945D8")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000200")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 customRTSize;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultfps;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int customfps;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool usesinglepass;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool usecontentprotect;

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x4C4A40", Offset = "0x4C4A40", VA = "0x4C4A40")]
	public Pvr_UnitySDKProjectSetting()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x4C4A48", Offset = "0x4C4A48", VA = "0x4C4A48")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}
}
[Token(Token = "0x2000201")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000202")]
	public enum simulationType
	{
		[Token(Token = "0x40007F8")]
		Null,
		[Token(Token = "0x40007F9")]
		Invalid,
		[Token(Token = "0x40007FA")]
		Valid
	}

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<string> deviceSN;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x170000BE")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x4C37B0", Offset = "0x4C37B0", VA = "0x4C37B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x4C37D8", Offset = "0x4C37D8", VA = "0x4C37D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x4C2FD8", Offset = "0x4C2FD8", VA = "0x4C2FD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x4C3830", Offset = "0x4C3830", VA = "0x4C3830")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x4C3000", Offset = "0x4C3000", VA = "0x4C3000")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x4C3888", Offset = "0x4C3888", VA = "0x4C3888")]
		set
		{
		}
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x4C3724", Offset = "0x4C3724", VA = "0x4C3724")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000203")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F86C", Offset = "0x23F86C")]
	private sealed class <ToastManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float time;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int type;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool state;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x4C3398", Offset = "0x4C3398", VA = "0x4C3398", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x4C33A0", Offset = "0x4C33A0", VA = "0x4C33A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x4C31A4", Offset = "0x4C31A4", VA = "0x4C31A4")]
		[DebuggerHidden]
		public <ToastManager>c__Iterator0()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x4C31AC", Offset = "0x4C31AC", VA = "0x4C31AC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x4C33A8", Offset = "0x4C33A8", VA = "0x4C33A8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x4C33BC", Offset = "0x4C33BC", VA = "0x4C33BC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F87C", Offset = "0x23F87C")]
	private sealed class <SetProperty>c__AnonStorey5
	{
		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform trans;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x4C2A38", Offset = "0x4C2A38", VA = "0x4C2A38")]
		public <SetProperty>c__AnonStorey5()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x4C2A40", Offset = "0x4C2A40", VA = "0x4C2A40")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F88C", Offset = "0x23F88C")]
	private sealed class <G3TipsManager>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float time;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject tip;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xC5E94C", Offset = "0xC5E94C", VA = "0xC5E94C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xC5E954", Offset = "0xC5E954", VA = "0xC5E954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xC5B808", Offset = "0xC5B808", VA = "0xC5B808")]
		[DebuggerHidden]
		public <G3TipsManager>c__Iterator1()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC5E854", Offset = "0xC5E854", VA = "0xC5E854", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC5E95C", Offset = "0xC5E95C", VA = "0xC5E95C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xC5E970", Offset = "0xC5E970", VA = "0xC5E970", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F89C", Offset = "0x23F89C")]
	private sealed class <Start>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x4C30F8", Offset = "0x4C30F8", VA = "0x4C30F8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x4C3100", Offset = "0x4C3100", VA = "0x4C3100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x4C2AD0", Offset = "0x4C2AD0", VA = "0x4C2AD0")]
		[DebuggerHidden]
		public <Start>c__Iterator2()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x4C2AD8", Offset = "0x4C2AD8", VA = "0x4C2AD8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x4C3108", Offset = "0x4C3108", VA = "0x4C3108", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x4C311C", Offset = "0x4C311C", VA = "0x4C311C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F8AC", Offset = "0x23F8AC")]
	private sealed class <InitRenderThreadRoutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0xC5EC64", Offset = "0xC5EC64", VA = "0xC5EC64", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xC5EC6C", Offset = "0xC5EC6C", VA = "0xC5EC6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xC5DB18", Offset = "0xC5DB18", VA = "0xC5DB18")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>c__Iterator3()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xC5E9F8", Offset = "0xC5E9F8", VA = "0xC5E9F8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xC5EC74", Offset = "0xC5EC74", VA = "0xC5EC74", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xC5EC88", Offset = "0xC5EC88", VA = "0xC5EC88", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F8BC", Offset = "0x23F8BC")]
	private sealed class <OnResume>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <ability6dof>__0;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <enumindex>__0;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <waitNum>__0;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <resetNum>__0;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <i>__1;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Pvr_UnitySDKManager $this;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xC5F624", Offset = "0xC5F624", VA = "0xC5F624", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xC5F62C", Offset = "0xC5F62C", VA = "0xC5F62C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xC5E848", Offset = "0xC5E848", VA = "0xC5E848")]
		[DebuggerHidden]
		public <OnResume>c__Iterator4()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xC5ED10", Offset = "0xC5ED10", VA = "0xC5ED10", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xC5F634", Offset = "0xC5F634", VA = "0xC5F634", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xC5F648", Offset = "0xC5F648", VA = "0xC5F648", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x24380C", Offset = "0x24380C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24380C", Offset = "0x24380C")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool isHasController;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private GameObject calltoast;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject msgtoast;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool UseToast;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	private bool mIsAndroid7;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int SystemFFRLevel;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int AppCheckResult;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x170000C1")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xC3A308", Offset = "0xC3A308", VA = "0xC3A308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xC56E68", Offset = "0xC56E68", VA = "0xC56E68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xC56E70", Offset = "0xC56E70", VA = "0xC56E70")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xC56E88", Offset = "0xC56E88", VA = "0xC56E88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xC56E90", Offset = "0xC56E90", VA = "0xC56E90")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xC56EA8", Offset = "0xC56EA8", VA = "0xC56EA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xC56EB0", Offset = "0xC56EB0", VA = "0xC56EB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xC56EC8", Offset = "0xC56EC8", VA = "0xC56EC8")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xC56ED0", Offset = "0xC56ED0", VA = "0xC56ED0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xC4E344", Offset = "0xC4E344", VA = "0xC4E344")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xC4BE2C", Offset = "0xC4BE2C", VA = "0xC4BE2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xC56F8C", Offset = "0xC56F8C", VA = "0xC56F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247F98", Offset = "0x247F98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xC4A90C", Offset = "0xC4A90C", VA = "0xC4A90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247FA8", Offset = "0x247FA8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xC56F94", Offset = "0xC56F94", VA = "0xC56F94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xC56F9C", Offset = "0xC56F9C", VA = "0xC56F9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xC56FB4", Offset = "0xC56FB4", VA = "0xC56FB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xC56FBC", Offset = "0xC56FBC", VA = "0xC56FBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xC4DA18", Offset = "0xC4DA18", VA = "0xC4DA18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xC56FD4", Offset = "0xC56FD4", VA = "0xC56FD4")]
		set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xC56FF4", Offset = "0xC56FF4", VA = "0xC56FF4")]
		add
		{
		}
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xC57174", Offset = "0xC57174", VA = "0xC57174")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xC56D58", Offset = "0xC56D58", VA = "0xC56D58")]
	public Pvr_UnitySDKManager()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xC56EF8", Offset = "0xC56EF8", VA = "0xC56EF8")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xC4D9E0", Offset = "0xC4D9E0", VA = "0xC4D9E0")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xC56F6C", Offset = "0xC56F6C", VA = "0xC56F6C")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xC572F4", Offset = "0xC572F4", VA = "0xC572F4")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xC574D8", Offset = "0xC574D8", VA = "0xC574D8")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xC57668", Offset = "0xC57668", VA = "0xC57668")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xC58A10", Offset = "0xC58A10", VA = "0xC58A10")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xC59074", Offset = "0xC59074", VA = "0xC59074")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xC59450", Offset = "0xC59450", VA = "0xC59450")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xC57CCC", Offset = "0xC57CCC", VA = "0xC57CCC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xC595EC", Offset = "0xC595EC", VA = "0xC595EC")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xC58934", Offset = "0xC58934", VA = "0xC58934")]
	[DebuggerHidden]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xC595F0", Offset = "0xC595F0", VA = "0xC595F0")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xC597D0", Offset = "0xC597D0", VA = "0xC597D0")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xC5AFB4", Offset = "0xC5AFB4", VA = "0xC5AFB4")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xC5B130", Offset = "0xC5B130", VA = "0xC5B130")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xC59D08", Offset = "0xC59D08", VA = "0xC59D08")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xC5A4AC", Offset = "0xC5A4AC", VA = "0xC5A4AC")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xC5AB10", Offset = "0xC5AB10", VA = "0xC5AB10")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xC5B334", Offset = "0xC5B334", VA = "0xC5B334")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xC5AF08", Offset = "0xC5AF08", VA = "0xC5AF08")]
	[DebuggerHidden]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xC5B774", Offset = "0xC5B774", VA = "0xC5B774")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xC5B810", Offset = "0xC5B810", VA = "0xC5B810")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xC57440", Offset = "0xC57440", VA = "0xC57440")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xC5BA7C", Offset = "0xC5BA7C", VA = "0xC5BA7C")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xC5BB84", Offset = "0xC5BB84", VA = "0xC5BB84")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xC5BB8C", Offset = "0xC5BB8C", VA = "0xC5BB8C")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xC5BD08", Offset = "0xC5BD08", VA = "0xC5BD08")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xC5C07C", Offset = "0xC5C07C", VA = "0xC5C07C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xC5C23C", Offset = "0xC5C23C", VA = "0xC5C23C")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xC5C3C4", Offset = "0xC5C3C4", VA = "0xC5C3C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xC5DA28", Offset = "0xC5DA28", VA = "0xC5DA28")]
	[DebuggerHidden]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xC5DAAC", Offset = "0xC5DAAC", VA = "0xC5DAAC")]
	[DebuggerHidden]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xC5DB20", Offset = "0xC5DB20", VA = "0xC5DB20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xC5DE94", Offset = "0xC5DE94", VA = "0xC5DE94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xC5E03C", Offset = "0xC5E03C", VA = "0xC5E03C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xC5E1F0", Offset = "0xC5E1F0", VA = "0xC5E1F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xC5E1F8", Offset = "0xC5E1F8", VA = "0xC5E1F8")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xC5E36C", Offset = "0xC5E36C", VA = "0xC5E36C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xC5E708", Offset = "0xC5E708", VA = "0xC5E708")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xC5E2E0", Offset = "0xC5E2E0", VA = "0xC5E2E0")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xC5E840", Offset = "0xC5E840", VA = "0xC5E840")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xC5D064", Offset = "0xC5D064", VA = "0xC5D064")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xC5D394", Offset = "0xC5D394", VA = "0xC5D394")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xC5CBF4", Offset = "0xC5CBF4", VA = "0xC5CBF4")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xC5E684", Offset = "0xC5E684", VA = "0xC5E684")]
	[DebuggerHidden]
	private IEnumerator OnResume()
	{
		return null;
	}
}
[Token(Token = "0x200020B")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x4D12B0", Offset = "0x4D12B0", VA = "0x4D12B0")]
	public QuitGame()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x4D12B8", Offset = "0x4D12B8", VA = "0x4D12B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x4D12BC", Offset = "0x4D12BC", VA = "0x4D12BC")]
	private void Update()
	{
	}
}
[Token(Token = "0x200020C")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x200020D")]
	private class EyeMaskData
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Eye eyeSide;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera camera;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x71EE5C", Offset = "0x71EE5C", VA = "0x71EE5C")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float zDir;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x71C84C", Offset = "0x71C84C", VA = "0x71C84C")]
	public Pvr_UnityEyeMask()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x71C90C", Offset = "0x71C90C", VA = "0x71C90C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x71C9E8", Offset = "0x71C9E8", VA = "0x71C9E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x71DC08", Offset = "0x71DC08", VA = "0x71DC08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x71D234", Offset = "0x71D234", VA = "0x71D234")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x71EBEC", Offset = "0x71EBEC", VA = "0x71EBEC")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x71E118", Offset = "0x71E118", VA = "0x71E118")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x71E5B4", Offset = "0x71E5B4", VA = "0x71E5B4")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x71DF94", Offset = "0x71DF94", VA = "0x71DF94")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x71CD38", Offset = "0x71CD38", VA = "0x71CD38")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x71EDFC", Offset = "0x71EDFC", VA = "0x71EDFC")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x71DEA8", Offset = "0x71DEA8", VA = "0x71DEA8")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x71DF08", Offset = "0x71DF08", VA = "0x71DF08")]
	private void CleanEyeMask()
	{
	}
}
[Token(Token = "0x200020E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F8CC", Offset = "0x23F8CC")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Eye eyeSide;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243904", Offset = "0x243904")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243904", Offset = "0x243904")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastBoundaryState;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000864")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int IDIndex;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RenderEventType eventType;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int previousId;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool setLevel;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Material mat_Vignette;

	[Token(Token = "0x170000D5")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xC4BFBC", Offset = "0xC4BFBC", VA = "0xC4BFBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248198", Offset = "0x248198")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xC4BFC4", Offset = "0xC4BFC4", VA = "0xC4BFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2481A8", Offset = "0x2481A8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xC4BEE4", Offset = "0xC4BEE4", VA = "0xC4BEE4")]
	public Pvr_UnitySDKEye()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xC4BFCC", Offset = "0xC4BFCC", VA = "0xC4BFCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xC4C0A4", Offset = "0xC4C0A4", VA = "0xC4C0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xC4C8D8", Offset = "0xC4C8D8", VA = "0xC4C8D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xC4CC30", Offset = "0xC4CC30", VA = "0xC4CC30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xC4CD1C", Offset = "0xC4CD1C", VA = "0xC4CD1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xC4CE08", Offset = "0xC4CE08", VA = "0xC4CE08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xC4CEC4", Offset = "0xC4CEC4", VA = "0xC4CEC4")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xC4D174", Offset = "0xC4D174", VA = "0xC4D174")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xC4D240", Offset = "0xC4D240", VA = "0xC4D240")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xC4CF90", Offset = "0xC4CF90", VA = "0xC4CF90")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xC4D30C", Offset = "0xC4D30C", VA = "0xC4D30C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xC4D7A8", Offset = "0xC4D7A8", VA = "0xC4D7A8")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xC4C1D4", Offset = "0xC4C1D4", VA = "0xC4C1D4")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xC4C4AC", Offset = "0xC4C4AC", VA = "0xC4C4AC")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xC40BB4", Offset = "0xC40BB4", VA = "0xC40BB4")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xC4DA20", Offset = "0xC4DA20", VA = "0xC4DA20")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xC4DB7C", Offset = "0xC4DB7C", VA = "0xC4DB7C")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xC4D584", Offset = "0xC4D584", VA = "0xC4D584")]
	private void SetFFRParameter()
	{
	}
}
[Token(Token = "0x200020F")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F944", Offset = "0x23F944")]
	private sealed class <EndOfFrame>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <boundaryState>__1;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Pvr_UnitySDKEyeManager $this;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xC54A0C", Offset = "0xC54A0C", VA = "0xC54A0C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xC54A14", Offset = "0xC54A14", VA = "0xC54A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xC50988", Offset = "0xC50988", VA = "0xC50988")]
		[DebuggerHidden]
		public <EndOfFrame>c__Iterator0()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xC51814", Offset = "0xC51814", VA = "0xC51814", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xC54A1C", Offset = "0xC54A1C", VA = "0xC54A1C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xC54A30", Offset = "0xC54A30", VA = "0xC54A30", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23F954", Offset = "0x23F954")]
	private sealed class <ScreenFade>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float startAlpha;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float endAlpha;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Pvr_UnitySDKEyeManager $this;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC54C6C", Offset = "0xC54C6C", VA = "0xC54C6C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xC54C74", Offset = "0xC54C74", VA = "0xC54C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xC51808", Offset = "0xC51808", VA = "0xC51808")]
		[DebuggerHidden]
		public <ScreenFade>c__Iterator1()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xC54AB8", Offset = "0xC54AB8", VA = "0xC54AB8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xC54C7C", Offset = "0xC54C7C", VA = "0xC54C7C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xC54C90", Offset = "0xC54C90", VA = "0xC54C90", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frameNum;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int eyeTextureId;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderEventType eventType;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int underlayLayerDepth;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isHeadLocked;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int layerFlags;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243A08", Offset = "0x243A08")]
	public bool screenFade;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243A6C", Offset = "0x243A6C")]
	public float fadeTime;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243ABC", Offset = "0x243ABC")]
	public Color fadeColor;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int renderQueue;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Material fadeMaterial;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float elapsedTime;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool isFading;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float currentAlpha;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float nowFadeAlpha;

	[Token(Token = "0x170000D6")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xC40994", Offset = "0xC40994", VA = "0xC40994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D7")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xC40AEC", Offset = "0xC40AEC", VA = "0xC40AEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xC4DF44", Offset = "0xC4DF44", VA = "0xC4DF44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xC4DF4C", Offset = "0xC4DF4C", VA = "0xC4DF4C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xC4DFA4", Offset = "0xC4DFA4", VA = "0xC4DFA4")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xC4DFAC", Offset = "0xC4DFAC", VA = "0xC4DFAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xC4DEB4", Offset = "0xC4DEB4", VA = "0xC4DEB4")]
	public Pvr_UnitySDKEyeManager()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xC4DFBC", Offset = "0xC4DFBC", VA = "0xC4DFBC")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xC4E34C", Offset = "0xC4E34C", VA = "0xC4E34C")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xC4E474", Offset = "0xC4E474", VA = "0xC4E474")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xC4E600", Offset = "0xC4E600", VA = "0xC4E600")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xC4E760", Offset = "0xC4E760", VA = "0xC4E760")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xC4E998", Offset = "0xC4E998", VA = "0xC4E998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xC4F61C", Offset = "0xC4F61C", VA = "0xC4F61C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xC5005C", Offset = "0xC5005C", VA = "0xC5005C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xC50078", Offset = "0xC50078", VA = "0xC50078")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xC50460", Offset = "0xC50460", VA = "0xC50460")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xC505D8", Offset = "0xC505D8", VA = "0xC505D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xC505E0", Offset = "0xC505E0", VA = "0xC505E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xC507BC", Offset = "0xC507BC", VA = "0xC507BC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xC50904", Offset = "0xC50904", VA = "0xC50904")]
	[DebuggerHidden]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xC50990", Offset = "0xC50990", VA = "0xC50990")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xC50E24", Offset = "0xC50E24", VA = "0xC50E24")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xC41EE0", Offset = "0xC41EE0", VA = "0xC41EE0")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xC512A0", Offset = "0xC512A0", VA = "0xC512A0")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xC4EEDC", Offset = "0xC4EEDC", VA = "0xC4EEDC")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xC505E4", Offset = "0xC505E4", VA = "0xC505E4")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xC4F614", Offset = "0xC4F614", VA = "0xC4F614")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xC4FF94", Offset = "0xC4FF94", VA = "0xC4FF94")]
	[DebuggerHidden]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xC51638", Offset = "0xC51638", VA = "0xC51638")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xC4FF8C", Offset = "0xC4FF8C", VA = "0xC4FF8C")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000212")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x2000213")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x2000214")]
	public enum OverlayShape
	{
		[Token(Token = "0x40008AE")]
		Quad,
		[Token(Token = "0x40008AF")]
		Cylinder,
		[Token(Token = "0x40008B0")]
		Equirect
	}

	[Token(Token = "0x2000215")]
	public enum OverlayType
	{
		[Token(Token = "0x40008B2")]
		Overlay,
		[Token(Token = "0x40008B3")]
		Underlay
	}

	[Token(Token = "0x2000216")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x40008B5")]
		NotCare,
		[Token(Token = "0x40008B6")]
		Nearest,
		[Token(Token = "0x40008B7")]
		Linear,
		[Token(Token = "0x40008B8")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x40008B9")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x40008BA")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x40008BB")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int layerIndex;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OverlayType overlayType;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OverlayShape overlayShape;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform layerTransform;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture[] layerTextures;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] layerTextureIds;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector4 colorScale;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector4 colorOffset;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xC54D18", Offset = "0xC54D18", VA = "0xC54D18")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xC54EF8", Offset = "0xC54EF8", VA = "0xC54EF8", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xC54F2C", Offset = "0xC54F2C", VA = "0xC54F2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xC556B4", Offset = "0xC556B4", VA = "0xC556B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xC56170", Offset = "0xC56170", VA = "0xC56170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xC4FBDC", Offset = "0xC4FBDC", VA = "0xC4FBDC")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xC5544C", Offset = "0xC5544C", VA = "0xC5544C")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xC556B8", Offset = "0xC556B8", VA = "0xC556B8")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xC5622C", Offset = "0xC5622C", VA = "0xC5622C")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xC562DC", Offset = "0xC562DC", VA = "0xC562DC")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xC549D4", Offset = "0xC549D4", VA = "0xC549D4")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xC549F0", Offset = "0xC549F0", VA = "0xC549F0")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000217")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool isInitrenderThread;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string model;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 prefinger1;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 prefinger2;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int eyeTextureCount;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isSwitchSDK;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int RenderviewNumber;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isFirstStartup;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool isShellMode;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243B0C", Offset = "0x243B0C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243B0C", Offset = "0x243B0C")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float rtScaleFactor;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float eyeVFov;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float eyeHFov;

	[Token(Token = "0x170000DE")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x4C2E94", Offset = "0x4C2E94", VA = "0x4C2E94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x4C58A0", Offset = "0x4C58A0", VA = "0x4C58A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x4C5930", Offset = "0x4C5930", VA = "0x4C5930")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x170000E0")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x4C5938", Offset = "0x4C5938", VA = "0x4C5938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248278", Offset = "0x248278")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x4C5940", Offset = "0x4C5940", VA = "0x4C5940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248288", Offset = "0x248288")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x4C5948", Offset = "0x4C5948", VA = "0x4C5948")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x4C5950", Offset = "0x4C5950", VA = "0x4C5950")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x4C5B30", Offset = "0x4C5B30", VA = "0x4C5B30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x4C5B38", Offset = "0x4C5B38", VA = "0x4C5B38")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x4C5B50", Offset = "0x4C5B50", VA = "0x4C5B50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x4C5B58", Offset = "0x4C5B58", VA = "0x4C5B58")]
		set
		{
		}
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x4C4AB4", Offset = "0x4C4AB4", VA = "0x4C4AB4")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x4C4C00", Offset = "0x4C4C00", VA = "0x4C4C00")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x4C5800", Offset = "0x4C5800", VA = "0x4C5800")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x4C5FF0", Offset = "0x4C5FF0", VA = "0x4C5FF0")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x4C6154", Offset = "0x4C6154", VA = "0x4C6154")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x4C6234", Offset = "0x4C6234", VA = "0x4C6234")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x4C6FD8", Offset = "0x4C6FD8", VA = "0x4C6FD8")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x4C6708", Offset = "0x4C6708", VA = "0x4C6708")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x4C68E4", Offset = "0x4C68E4", VA = "0x4C68E4")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x4C7424", Offset = "0x4C7424", VA = "0x4C7424")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x4C597C", Offset = "0x4C597C", VA = "0x4C597C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x4C2FBC", Offset = "0x4C2FBC", VA = "0x4C2FBC")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x4C7CA0", Offset = "0x4C7CA0", VA = "0x4C7CA0")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x4C7E8C", Offset = "0x4C7E8C", VA = "0x4C7E8C")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x4C6AC0", Offset = "0x4C6AC0", VA = "0x4C6AC0")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x4C81F0", Offset = "0x4C81F0", VA = "0x4C81F0")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x4C5B70", Offset = "0x4C5B70", VA = "0x4C5B70")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000218")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x4C7BE0", Offset = "0x4C7BE0", VA = "0x4C7BE0")]
	public Pvr_UnitySDKSinglePass()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x4CCC44", Offset = "0x4CCC44", VA = "0x4CCC44", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x4CDA30", Offset = "0x4CDA30", VA = "0x4CDA30", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x4CDBBC", Offset = "0x4CDBBC", VA = "0x4CDBBC", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x4CED68", Offset = "0x4CED68", VA = "0x4CED68", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x4CDA34", Offset = "0x4CDA34", VA = "0x4CDA34")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x4CEE40", Offset = "0x4CEE40", VA = "0x4CEE40")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x4CD1A0", Offset = "0x4CD1A0", VA = "0x4CD1A0")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x4CD740", Offset = "0x4CD740", VA = "0x4CD740")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x4CEFA4", Offset = "0x4CEFA4", VA = "0x4CEFA4")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x4CF38C", Offset = "0x4CF38C", VA = "0x4CF38C")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x4CF0F0", Offset = "0x4CF0F0", VA = "0x4CF0F0")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x4CED70", Offset = "0x4CED70", VA = "0x4CED70")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x4CF608", Offset = "0x4CF608", VA = "0x4CF608")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x4CDBC0", Offset = "0x4CDBC0", VA = "0x4CDBC0")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x4CFC0C", Offset = "0x4CFC0C", VA = "0x4CFC0C")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x4CFB24", Offset = "0x4CFB24", VA = "0x4CFB24")]
	private void SetRenderTextureWithDepth()
	{
	}
}
[Token(Token = "0x2000219")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x4CCC3C", Offset = "0x4CCC3C", VA = "0x4CCC3C")]
	protected SDKStereoRendering()
	{
	}

	[Token(Token = "0x6000E55")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000E56")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000E57")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000E58")]
	public abstract void OnSDKPostRender();
}
[Token(Token = "0x200021A")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color HighlightColor;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float AnimationTime;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myRenderer;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color originalColor;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color targetColor;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x42C7E4", Offset = "0x42C7E4", VA = "0x42C7E4")]
	public HighlightAtGaze()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x42C834", Offset = "0x42C834", VA = "0x42C834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x42C8FC", Offset = "0x42C8FC", VA = "0x42C8FC")]
	private void Update()
	{
	}
}
[Token(Token = "0x200021B")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private LineRenderer _line;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x4D16B0", Offset = "0x4D16B0", VA = "0x4D16B0")]
	public RayVisualizer()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x4D16B8", Offset = "0x4D16B8", VA = "0x4D16B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x4D1790", Offset = "0x4D1790", VA = "0x4D1790")]
	private void Update()
	{
	}
}
[Token(Token = "0x200021C")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RawImage viewImage_left;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RawImage viewImage_right;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int width;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int height;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool cameraPreview;

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x3D28B8", Offset = "0x3D28B8", VA = "0x3D28B8")]
	public GetSeeThroughImage()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x3D28C0", Offset = "0x3D28C0", VA = "0x3D28C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x3D2A38", Offset = "0x3D2A38", VA = "0x3D2A38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x3D2AB0", Offset = "0x3D2AB0", VA = "0x3D2AB0")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x3D28C4", Offset = "0x3D28C4", VA = "0x3D28C4")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x3D2A64", Offset = "0x3D2A64", VA = "0x3D2A64")]
	private void DrawTexture()
	{
	}
}
[Token(Token = "0x200021D")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string movieName;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40008F5")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243B40", Offset = "0x243B40")]
	private static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>f__am$cache0;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x3F4ECC", Offset = "0x3F4ECC", VA = "0x3F4ECC")]
	public OverlayExternalSurfaceDemo()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x3F4ED4", Offset = "0x3F4ED4", VA = "0x3F4ED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x3F5060", Offset = "0x3F5060", VA = "0x3F5060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x3F5158", Offset = "0x3F5158", VA = "0x3F5158")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x3F53C4", Offset = "0x3F53C4", VA = "0x3F53C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248298", Offset = "0x248298")]
	private static void <StartPlay>m__0()
	{
	}
}
[Token(Token = "0x200021E")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 startingPosition;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x4462A8", Offset = "0x4462A8", VA = "0x4462A8")]
	public MoveCylinder()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x4462B0", Offset = "0x4462B0", VA = "0x4462B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x446348", Offset = "0x446348", VA = "0x446348")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200021F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F964", Offset = "0x23F964")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x4463EC", Offset = "0x4463EC", VA = "0x4463EC")]
	public MoveSphere()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x4463F4", Offset = "0x4463F4", VA = "0x4463F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x44663C", Offset = "0x44663C", VA = "0x44663C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x44654C", Offset = "0x44654C", VA = "0x44654C")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x446640", Offset = "0x446640", VA = "0x446640")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x4467F4", Offset = "0x4467F4", VA = "0x4467F4")]
	public void TeleportRandomly()
	{
	}
}
[Token(Token = "0x2000220")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x4D19B4", Offset = "0x4D19B4", VA = "0x4D19B4")]
	public Resetbutton()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x4D19BC", Offset = "0x4D19BC", VA = "0x4D19BC")]
	public void DemoResetTracking()
	{
	}
}
[Token(Token = "0x2000221")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x415CAC", Offset = "0x415CAC", VA = "0x415CAC")]
	public UserEntitlementCheck()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x415CB4", Offset = "0x415CB4", VA = "0x415CB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x415D70", Offset = "0x415D70", VA = "0x415D70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x415E2C", Offset = "0x415E2C", VA = "0x415E2C")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}
}
[Token(Token = "0x2000222")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243B50", Offset = "0x243B50")]
	public bool trackRotation;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243B84", Offset = "0x243B84")]
	public bool trackPosition;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool updated;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool dataClock;

	[Token(Token = "0x170000E4")]
	public Ray Gaze
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xC56614", Offset = "0xC56614", VA = "0xC56614")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xC56604", Offset = "0xC56604", VA = "0xC56604")]
	public Pvr_UnitySDKHeadTrack()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xC56D48", Offset = "0xC56D48", VA = "0xC56D48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xC566D8", Offset = "0xC566D8", VA = "0xC566D8")]
	private void UpdateHead()
	{
	}
}
[Token(Token = "0x2000223")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243BB8", Offset = "0x243BB8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243BB8", Offset = "0x243BB8")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243BEC", Offset = "0x243BEC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243BEC", Offset = "0x243BEC")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243C20", Offset = "0x243C20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243C20", Offset = "0x243C20")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x170000E5")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x4C4324", Offset = "0x4C4324", VA = "0x4C4324")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x170000E6")]
	public Vector3 Position
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x4C4748", Offset = "0x4C4748", VA = "0x4C4748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2482A8", Offset = "0x2482A8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x4C475C", Offset = "0x4C475C", VA = "0x4C475C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2482B8", Offset = "0x2482B8")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x4C4768", Offset = "0x4C4768", VA = "0x4C4768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2482C8", Offset = "0x2482C8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x4C4778", Offset = "0x4C4778", VA = "0x4C4778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2482D8", Offset = "0x2482D8")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x4C4720", Offset = "0x4C4720", VA = "0x4C4720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2482E8", Offset = "0x2482E8")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x4C4788", Offset = "0x4C4788", VA = "0x4C4788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2482F8", Offset = "0x2482F8")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x4C3DE8", Offset = "0x4C3DE8", VA = "0x4C3DE8")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x4C4108", Offset = "0x4C4108", VA = "0x4C4108")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x4C415C", Offset = "0x4C415C", VA = "0x4C415C")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x4C3E8C", Offset = "0x4C3E8C", VA = "0x4C3E8C")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x4C4800", Offset = "0x4C4800", VA = "0x4C4800")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000224")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000225")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000226")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool SensorStart;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool SensorInit;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool dofClock;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Action EyeFovChanged;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float vfov;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hfov;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float w;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float x;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float y;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float z;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float px;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float py;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float pz;

	[Token(Token = "0x170000E9")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x4C844C", Offset = "0x4C844C", VA = "0x4C844C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x4C8574", Offset = "0x4C8574", VA = "0x4C8574")]
		set
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x4C8604", Offset = "0x4C8604", VA = "0x4C8604")]
		add
		{
		}
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x4C8784", Offset = "0x4C8784", VA = "0x4C8784")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x4C8904", Offset = "0x4C8904", VA = "0x4C8904")]
		add
		{
		}
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x4C8A84", Offset = "0x4C8A84", VA = "0x4C8A84")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x4C81FC", Offset = "0x4C81FC", VA = "0x4C81FC")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x4C8304", Offset = "0x4C8304", VA = "0x4C8304")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x4C92D0", Offset = "0x4C92D0", VA = "0x4C92D0")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x4C8F58", Offset = "0x4C8F58", VA = "0x4C8F58")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x4C8C04", Offset = "0x4C8C04", VA = "0x4C8C04")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x4C9114", Offset = "0x4C9114", VA = "0x4C9114")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x4CA9C8", Offset = "0x4CA9C8", VA = "0x4CA9C8")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x4CAB84", Offset = "0x4CAB84", VA = "0x4CAB84")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x4CAD8C", Offset = "0x4CAD8C", VA = "0x4CAD8C")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x4C9334", Offset = "0x4C9334", VA = "0x4C9334")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x4CB730", Offset = "0x4CB730", VA = "0x4CB730")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x4CB45C", Offset = "0x4CB45C", VA = "0x4CB45C")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x2000227")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int SplashScreenType;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture2D Inside_background;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseSplashText;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string DefaultText;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ChineseText;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string EnglishText;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string JapaneseText;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string KoreanText;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string FontSize;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color FontColor;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public string TextHeight;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseCarousel;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x39454C", Offset = "0x39454C", VA = "0x39454C")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000228")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000229")]
	public struct Lenses
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x400092C")]
		public const int AlignTop = -1;

		[Token(Token = "0x400092D")]
		public const int AlignCenter = 0;

		[Token(Token = "0x400092E")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x200022A")]
	public struct MaxFOV
	{
		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x200022B")]
	public struct Distortion
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x2CE134", Offset = "0x2CE134", VA = "0x2CE134")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x2CE13C", Offset = "0x2CE13C", VA = "0x2CE13C")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x2CE144", Offset = "0x2CE144", VA = "0x2CE144")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200022C")]
	public struct Device
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Device device;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xC49858", Offset = "0xC49858", VA = "0xC49858")]
	public Pvr_UnitySDKConfigProfile()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xC49860", Offset = "0xC49860", VA = "0xC49860")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xC49908", Offset = "0xC49908", VA = "0xC49908")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xC499E0", Offset = "0xC499E0", VA = "0xC499E0")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xC49E00", Offset = "0xC49E00", VA = "0xC49E00")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xC4A0BC", Offset = "0xC4A0BC", VA = "0xC4A0BC")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}
}
[Token(Token = "0x200022D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23F9DC", Offset = "0x23F9DC")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text fpsText;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float updateInterval;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float accum;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int frames;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string strFps;

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xC563EC", Offset = "0xC563EC", VA = "0xC563EC")]
	public Pvr_UnitySDKFPS()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xC563FC", Offset = "0xC563FC", VA = "0xC563FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xC56498", Offset = "0xC56498", VA = "0xC56498")]
	private void ShowFps()
	{
	}
}
[Token(Token = "0x200022E")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Image image;

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x70C23C", Offset = "0x70C23C", VA = "0x70C23C")]
	public Pvr_GazeFuse()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x70C244", Offset = "0x70C244", VA = "0x70C244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x70C2AC", Offset = "0x70C2AC", VA = "0x70C2AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x70C500", Offset = "0x70C500", VA = "0x70C500")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}
}
[Token(Token = "0x200022F")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000230")]
	public enum Mode
	{
		[Token(Token = "0x400094F")]
		Click,
		[Token(Token = "0x4000950")]
		Gaze
	}

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Mode mode;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x243CBC", Offset = "0x243CBC")]
	public string ClickInputName;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x243CF8", Offset = "0x243CF8")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243D34", Offset = "0x243D34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243D34", Offset = "0x243D34")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243D68", Offset = "0x243D68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243D68", Offset = "0x243D68")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x170000EA")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x70C49C", Offset = "0x70C49C", VA = "0x70C49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248308", Offset = "0x248308")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x70C630", Offset = "0x70C630", VA = "0x70C630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248318", Offset = "0x248318")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x70C438", Offset = "0x70C438", VA = "0x70C438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248328", Offset = "0x248328")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x70C69C", Offset = "0x70C69C", VA = "0x70C69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248338", Offset = "0x248338")]
		private set
		{
		}
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x70C5BC", Offset = "0x70C5BC", VA = "0x70C5BC")]
	public Pvr_GazeInputModule()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x70C700", Offset = "0x70C700", VA = "0x70C700", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x70C71C", Offset = "0x70C71C", VA = "0x70C71C")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x70CAA8", Offset = "0x70CAA8", VA = "0x70CAA8")]
	private void HandleSelection()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23FA54", Offset = "0x23FA54")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243D9C", Offset = "0x243D9C")]
	public Transform Crosshair;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x70D0EC", Offset = "0x70D0EC", VA = "0x70D0EC")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x70D0F4", Offset = "0x70D0F4", VA = "0x70D0F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x70D15C", Offset = "0x70D15C", VA = "0x70D15C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x70D218", Offset = "0x70D218", VA = "0x70D218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x70D388", Offset = "0x70D388", VA = "0x70D388")]
	private void SetCrossHairAtDistance(float dist)
	{
	}
}
[Token(Token = "0x2000232")]
public enum RenderEventType
{
	[Token(Token = "0x4000957")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000958")]
	Pause,
	[Token(Token = "0x4000959")]
	Resume,
	[Token(Token = "0x400095A")]
	LeftEyeEndFrame,
	[Token(Token = "0x400095B")]
	RightEyeEndFrame,
	[Token(Token = "0x400095C")]
	TimeWarp,
	[Token(Token = "0x400095D")]
	ResetVrModeParms,
	[Token(Token = "0x400095E")]
	ShutdownRenderThread,
	[Token(Token = "0x400095F")]
	BeginEye,
	[Token(Token = "0x4000960")]
	EndEye,
	[Token(Token = "0x4000961")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000962")]
	BoundaryRenderRight,
	[Token(Token = "0x4000963")]
	BothEyeEndFrame,
	[Token(Token = "0x4000964")]
	CameraFrameLeft,
	[Token(Token = "0x4000965")]
	CameraFrameRight,
	[Token(Token = "0x4000966")]
	StartCameraFrame,
	[Token(Token = "0x4000967")]
	StopCameraFrame
}
[Token(Token = "0x2000233")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000234")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000968")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000969")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x400096A")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400096B")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400096C")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400096D")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400096E")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x4C38F4", Offset = "0x4C38F4", VA = "0x4C38F4")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x4C3918", Offset = "0x4C3918", VA = "0x4C3918")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x4C3920", Offset = "0x4C3920", VA = "0x4C3920")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x4C394C", Offset = "0x4C394C", VA = "0x4C394C")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x4C38EC", Offset = "0x4C38EC", VA = "0x4C38EC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x248348", Offset = "0x248348")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x4C3960", Offset = "0x4C3960", VA = "0x4C3960")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000235")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x243DF8", Offset = "0x243DF8")]
	public GameObject cursor;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int trigger;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x4CB988", Offset = "0x4CB988", VA = "0x4CB988")]
	public Pvr_UnitySDKSightInputModule()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x4CB9E4", Offset = "0x4CB9E4", VA = "0x4CB9E4", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x4CBA9C", Offset = "0x4CBA9C", VA = "0x4CBA9C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x4CBE5C", Offset = "0x4CBE5C", VA = "0x4CBE5C", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x4CBF04", Offset = "0x4CBF04", VA = "0x4CBF04", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x4CBF38", Offset = "0x4CBF38", VA = "0x4CBF38")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x4CC19C", Offset = "0x4CC19C", VA = "0x4CC19C")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x4CC404", Offset = "0x4CC404", VA = "0x4CC404")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x4CBBDC", Offset = "0x4CBBDC", VA = "0x4CBBDC")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x4CC768", Offset = "0x4CC768", VA = "0x4CC768")]
	private void HandleTrigger()
	{
	}
}
[Token(Token = "0x2000236")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<int> triangles;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Vector2> uv;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<Vector3> normals;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<int> intArray;

	[Token(Token = "0x400097D")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x400097E")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x400097F")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float[] pow10;

	[Token(Token = "0x170000EC")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x711488", Offset = "0x711488", VA = "0x711488")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x711480", Offset = "0x711480", VA = "0x711480")]
	public Pvr_ObjImporter()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x711574", Offset = "0x711574", VA = "0x711574")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x711CA0", Offset = "0x711CA0", VA = "0x711CA0")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x712744", Offset = "0x712744", VA = "0x712744")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x712944", Offset = "0x712944", VA = "0x712944")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x712ECC", Offset = "0x712ECC", VA = "0x712ECC")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x712AEC", Offset = "0x712AEC", VA = "0x712AEC")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x712E58", Offset = "0x712E58", VA = "0x712E58")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}
}
[Token(Token = "0x2000237")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243E4C", Offset = "0x243E4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243E4C", Offset = "0x243E4C")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243E80", Offset = "0x243E80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243E80", Offset = "0x243E80")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x243EB4", Offset = "0x243EB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243EB4", Offset = "0x243EB4")]
	private int <z>k__BackingField;

	[Token(Token = "0x170000ED")]
	public int x
	{
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE87D14", Offset = "0xE87D14", VA = "0xE87D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2483C0", Offset = "0x2483C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE87CFC", Offset = "0xE87CFC", VA = "0xE87CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2483D0", Offset = "0x2483D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public int y
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xE87D1C", Offset = "0xE87D1C", VA = "0xE87D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2483E0", Offset = "0x2483E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xE87D04", Offset = "0xE87D04", VA = "0xE87D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2483F0", Offset = "0x2483F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public int z
	{
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xE87D24", Offset = "0xE87D24", VA = "0xE87D24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248400", Offset = "0x248400")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xE87D0C", Offset = "0xE87D0C", VA = "0xE87D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248410", Offset = "0x248410")]
		set
		{
		}
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xE87CC4", Offset = "0xE87CC4", VA = "0xE87CC4")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xE87CCC", Offset = "0xE87CCC", VA = "0xE87CCC")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000238")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x70C234", Offset = "0x70C234", VA = "0x70C234")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000239")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000985")]
	App = 1,
	[Token(Token = "0x4000986")]
	TouchPad = 2,
	[Token(Token = "0x4000987")]
	Trigger = 4
}
[Token(Token = "0x200023A")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x70D548", Offset = "0x70D548", VA = "0x70D548")]
	public Pvr_InputModule()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x70D600", Offset = "0x70D600", VA = "0x70D600", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x70D6B4", Offset = "0x70D6B4", VA = "0x70D6B4")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x70D7E8", Offset = "0x70D7E8", VA = "0x70D7E8")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x70D91C", Offset = "0x70D91C", VA = "0x70D91C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x70DE48", Offset = "0x70DE48", VA = "0x70DE48", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x70E018", Offset = "0x70E018", VA = "0x70E018", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x70E138", Offset = "0x70E138", VA = "0x70E138", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x70E2E0", Offset = "0x70E2E0", VA = "0x70E2E0", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x70E5A8", Offset = "0x70E5A8", VA = "0x70E5A8", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x70E694", Offset = "0x70E694", VA = "0x70E694", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x70E734", Offset = "0x70E734", VA = "0x70E734", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x70FF38", Offset = "0x70FF38", VA = "0x70FF38", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x70FFC4", Offset = "0x70FFC4", VA = "0x70FFC4", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x710080", Offset = "0x710080", VA = "0x710080", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x71015C", Offset = "0x71015C", VA = "0x71015C", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x7105E4", Offset = "0x7105E4", VA = "0x7105E4", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x710A8C", Offset = "0x710A8C", VA = "0x710A8C", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}
}
[Token(Token = "0x200023B")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FACC", Offset = "0x23FACC")]
	private sealed class <CreateDraggablePanel>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Canvas canvas;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject <draggablePanel>__1;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector2 canvasSize;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x7181D4", Offset = "0x7181D4", VA = "0x7181D4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x7181DC", Offset = "0x7181DC", VA = "0x7181DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x7177AC", Offset = "0x7177AC", VA = "0x7177AC")]
		[DebuggerHidden]
		public <CreateDraggablePanel>c__Iterator0()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x717BEC", Offset = "0x717BEC", VA = "0x717BEC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x7181E4", Offset = "0x7181E4", VA = "0x7181E4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x7181F8", Offset = "0x7181F8", VA = "0x7181F8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000991")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x7170A8", Offset = "0x7170A8", VA = "0x7170A8")]
	public Pvr_UICanvas()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x7170B0", Offset = "0x7170B0", VA = "0x7170B0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x7170C0", Offset = "0x7170C0", VA = "0x7170C0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x7170D0", Offset = "0x7170D0", VA = "0x7170D0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x7170E0", Offset = "0x7170E0", VA = "0x7170E0", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x717704", Offset = "0x717704", VA = "0x717704", Slot = "8")]
	[DebuggerHidden]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x7177B4", Offset = "0x7177B4", VA = "0x7177B4", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}
}
[Token(Token = "0x200023D")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x200023E")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x200023F")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IDragHandler, IEndDragHandler, IEventSystemHandler
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool restrictToDropZone;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveOffset;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected RectTransform dragTransform;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector3 startPosition;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Quaternion startRotation;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject startDropZone;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected Transform startParent;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Canvas startCanvas;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x1400001E")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x718294", Offset = "0x718294", VA = "0x718294")]
		add
		{
		}
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x7183A0", Offset = "0x7183A0", VA = "0x7183A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x7184AC", Offset = "0x7184AC", VA = "0x7184AC")]
		add
		{
		}
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x7185B8", Offset = "0x7185B8", VA = "0x7185B8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x718280", Offset = "0x718280", VA = "0x718280")]
	public Pvr_UIDraggableItem()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x7186C4", Offset = "0x7186C4", VA = "0x7186C4", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x7186E0", Offset = "0x7186E0", VA = "0x7186E0", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x7186FC", Offset = "0x7186FC", VA = "0x7186FC", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x718AC8", Offset = "0x718AC8", VA = "0x718AC8", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x718AD8", Offset = "0x718AD8", VA = "0x718AD8", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x7191AC", Offset = "0x7191AC", VA = "0x7191AC", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x7192D4", Offset = "0x7192D4", VA = "0x7192D4", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x7194E8", Offset = "0x7194E8", VA = "0x7194E8", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x71990C", Offset = "0x71990C", VA = "0x71990C", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x719A38", Offset = "0x719A38", VA = "0x719A38", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}
}
[Token(Token = "0x2000240")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IEventSystemHandler
{
	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x719A40", Offset = "0x719A40", VA = "0x719A40")]
	public Pvr_UIDropZone()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x719A48", Offset = "0x719A48", VA = "0x719A48", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x719BB4", Offset = "0x719BB4", VA = "0x719BB4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}
}
[Token(Token = "0x2000241")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Canvas currentCanvas;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x40009AA")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x243F70", Offset = "0x243F70")]
	private static Comparison<RaycastResult> <>f__am$cache0;

	[Token(Token = "0x170000F2")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x71B0D4", Offset = "0x71B0D4", VA = "0x71B0D4", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x719C68", Offset = "0x719C68", VA = "0x719C68")]
	public Pvr_UIGraphicRaycaster()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x719CEC", Offset = "0x719CEC", VA = "0x719CEC", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x719F40", Offset = "0x719F40", VA = "0x719F40", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x71A48C", Offset = "0x71A48C", VA = "0x71A48C", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x71A874", Offset = "0x71A874", VA = "0x71A874", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x71B238", Offset = "0x71B238", VA = "0x71B238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248480", Offset = "0x248480")]
	private static int <Raycast>m__0(RaycastResult g1, RaycastResult g2)
	{
		return default(int);
	}
}
[Token(Token = "0x2000242")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public GameObject currentTarget;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject previousTarget;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x2000243")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000244")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	public enum ClickMethods
	{
		[Token(Token = "0x40009CB")]
		ClickOnButtonUp,
		[Token(Token = "0x40009CC")]
		ClickOnButtonDown
	}

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ClickMethods clickMethod;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool pointerClicked;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	protected bool beamEnabledState;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	protected bool lastPointerPressState;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	protected bool lastPointerClickState;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected GameObject currentTarget;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x14000020")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x71B2D0", Offset = "0x71B2D0", VA = "0x71B2D0")]
		add
		{
		}
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x71B3DC", Offset = "0x71B3DC", VA = "0x71B3DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x71B4E8", Offset = "0x71B4E8", VA = "0x71B4E8")]
		add
		{
		}
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x71B5F4", Offset = "0x71B5F4", VA = "0x71B5F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x71B700", Offset = "0x71B700", VA = "0x71B700")]
		add
		{
		}
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x71B80C", Offset = "0x71B80C", VA = "0x71B80C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x71B918", Offset = "0x71B918", VA = "0x71B918")]
		add
		{
		}
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x71BA24", Offset = "0x71BA24", VA = "0x71BA24")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x71BB30", Offset = "0x71BB30", VA = "0x71BB30")]
		add
		{
		}
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x71BC3C", Offset = "0x71BC3C", VA = "0x71BC3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x71B2C8", Offset = "0x71B2C8", VA = "0x71B2C8")]
	public Pvr_UIPointer()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x71BD48", Offset = "0x71BD48", VA = "0x71BD48", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x71BD50", Offset = "0x71BD50", VA = "0x71BD50", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x71BE8C", Offset = "0x71BE8C", VA = "0x71BE8C", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x71BF80", Offset = "0x71BF80", VA = "0x71BF80", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x71C074", Offset = "0x71C074", VA = "0x71C074", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x71C094", Offset = "0x71C094", VA = "0x71C094", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x71C0A4", Offset = "0x71C0A4", VA = "0x71C0A4", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x71C1B0", Offset = "0x71C1B0", VA = "0x71C1B0", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x71C2B8", Offset = "0x71C2B8", VA = "0x71C2B8", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x71C3C0", Offset = "0x71C3C0", VA = "0x71C3C0", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x71C42C", Offset = "0x71C42C", VA = "0x71C42C", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x71C498", Offset = "0x71C498", VA = "0x71C498", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x71C550", Offset = "0x71C550", VA = "0x71C550", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x71C55C", Offset = "0x71C55C", VA = "0x71C55C", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x71C590", Offset = "0x71C590", VA = "0x71C590", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x71C610", Offset = "0x71C610", VA = "0x71C610", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}
}
[Token(Token = "0x2000246")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool vrModeEnabled;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float mouseX;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float mouseY;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mouseZ;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float neckModelScale;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool autoUntiltHead;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40009D9")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float touchStartTime;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xC4A364", Offset = "0xC4A364", VA = "0xC4A364")]
	public Pvr_UnitySDKEditor()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xC4A374", Offset = "0xC4A374", VA = "0xC4A374")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xC4A3DC", Offset = "0xC4A3DC", VA = "0xC4A3DC")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xC4A444", Offset = "0xC4A444", VA = "0xC4A444")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xC4A6E8", Offset = "0xC4A6E8", VA = "0xC4A6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xC4A458", Offset = "0xC4A458", VA = "0xC4A458")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xC4A61C", Offset = "0xC4A61C", VA = "0xC4A61C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xC4B3D8", Offset = "0xC4B3D8", VA = "0xC4B3D8")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xC4B5E0", Offset = "0xC4B5E0", VA = "0xC4B5E0")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xC4A914", Offset = "0xC4A914", VA = "0xC4A914")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xC4BBD4", Offset = "0xC4BBD4", VA = "0xC4BBD4")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xC4A7C0", Offset = "0xC4A7C0", VA = "0xC4A7C0")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xC4B2D0", Offset = "0xC4B2D0", VA = "0xC4B2D0")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xC4BCAC", Offset = "0xC4BCAC", VA = "0xC4BCAC")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xC4B5F4", Offset = "0xC4B5F4", VA = "0xC4B5F4")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xC4B134", Offset = "0xC4B134", VA = "0xC4B134")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xC4BBEC", Offset = "0xC4BBEC", VA = "0xC4BBEC")]
	private void EnableVEmodel()
	{
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000247")]
	public enum DeviceCommand
	{
		[Token(Token = "0x40009DC")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x40009DD")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x2000248")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x40009DF")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x40009E0")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x40009E1")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x40009E2")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x40009E3")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x2000249")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x40009E4")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xC46A88", Offset = "0xC46A88", VA = "0xC46A88")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xC46B60", Offset = "0xC46B60", VA = "0xC46B60")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xC46C60", Offset = "0xC46C60", VA = "0xC46C60")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xC46D38", Offset = "0xC46D38", VA = "0xC46D38")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xC46E1C", Offset = "0xC46E1C", VA = "0xC46E1C")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xC46E20", Offset = "0xC46E20", VA = "0xC46E20")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xC46E24", Offset = "0xC46E24", VA = "0xC46E24")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xC46E28", Offset = "0xC46E28", VA = "0xC46E28")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC4716C", Offset = "0xC4716C", VA = "0xC4716C")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC47440", Offset = "0xC47440", VA = "0xC47440")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC47650", Offset = "0xC47650", VA = "0xC47650")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC47930", Offset = "0xC47930", VA = "0xC47930")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC47AFC", Offset = "0xC47AFC", VA = "0xC47AFC")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xC47C80", Offset = "0xC47C80", VA = "0xC47C80")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xC47F60", Offset = "0xC47F60", VA = "0xC47F60")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC4834C", Offset = "0xC4834C", VA = "0xC4834C")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xC48634", Offset = "0xC48634", VA = "0xC48634")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xC46E58", Offset = "0xC46E58", VA = "0xC46E58")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC47190", Offset = "0xC47190", VA = "0xC47190")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xC47444", Offset = "0xC47444", VA = "0xC47444")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xC47654", Offset = "0xC47654", VA = "0xC47654")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xC488C4", Offset = "0xC488C4", VA = "0xC488C4")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xC48BAC", Offset = "0xC48BAC", VA = "0xC48BAC")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xC48E3C", Offset = "0xC48E3C", VA = "0xC48E3C")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xC49034", Offset = "0xC49034", VA = "0xC49034")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xC4922C", Offset = "0xC4922C", VA = "0xC4922C")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xC49404", Offset = "0xC49404", VA = "0xC49404")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xC495DC", Offset = "0xC495DC", VA = "0xC495DC")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xC49848", Offset = "0xC49848", VA = "0xC49848")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xC49850", Offset = "0xC49850", VA = "0xC49850")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xC47B00", Offset = "0xC47B00", VA = "0xC47B00")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xC47934", Offset = "0xC47934", VA = "0xC47934")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x200024A")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool VolEnable;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool BattEnable;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text showResult;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text setVolumnum;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text setBrightnum;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string MusicPath;

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x4D094C", Offset = "0x4D094C", VA = "0x4D094C")]
	public Pvr_VolumePowerBrightness()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x4D0954", Offset = "0x4D0954", VA = "0x4D0954")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x4D0A00", Offset = "0x4D0A00", VA = "0x4D0A00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x4D0A48", Offset = "0x4D0A48", VA = "0x4D0A48")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x4D0B30", Offset = "0x4D0B30", VA = "0x4D0B30")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x4D0C18", Offset = "0x4D0C18", VA = "0x4D0C18")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x4D0CB4", Offset = "0x4D0CB4", VA = "0x4D0CB4")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x4D0D50", Offset = "0x4D0D50", VA = "0x4D0D50")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x4D0EDC", Offset = "0x4D0EDC", VA = "0x4D0EDC")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x4D1068", Offset = "0x4D1068", VA = "0x4D1068")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x4D1150", Offset = "0x4D1150", VA = "0x4D1150")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x4D1200", Offset = "0x4D1200", VA = "0x4D1200")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x4D09B8", Offset = "0x4D09B8", VA = "0x4D09B8")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x4D09C0", Offset = "0x4D09C0", VA = "0x4D09C0")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x4D0A40", Offset = "0x4D0A40", VA = "0x4D0A40")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x4D09E0", Offset = "0x4D09E0", VA = "0x4D09E0")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x4D0A38", Offset = "0x4D0A38", VA = "0x4D0A38")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}
}
[Token(Token = "0x200024B")]
public class PlayerRecorder : MonoBehaviour
{
	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerRecorder mainInstance;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string savepath;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MemoryStream captureStream;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PlayerLogic playerLogic;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputActionHandler iah;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool playbackMode;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float appTime;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float nextEventTime;

	[Token(Token = "0x170000F3")]
	public bool PlaybackMode
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xE871FC", Offset = "0xE871FC", VA = "0xE871FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xE8715C", Offset = "0xE8715C", VA = "0xE8715C")]
	public PlayerRecorder()
	{
	}
}
[Token(Token = "0x200024C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x23FAEC", Offset = "0x23FAEC")]
public class RawShadowmapDepth : MonoBehaviour
{
	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera cam;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Light m_Light;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RenderTexture m_ShadowmapCopy;

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x4D12F0", Offset = "0x4D12F0", VA = "0x4D12F0")]
	public RawShadowmapDepth()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x4D12F8", Offset = "0x4D12F8", VA = "0x4D12F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x4D1570", Offset = "0x4D1570", VA = "0x4D1570")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}
}
[Token(Token = "0x200024D")]
public class RevertTracking : MonoBehaviour
{
	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x4D1A88", Offset = "0x4D1A88", VA = "0x4D1A88")]
	public RevertTracking()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x4D1A90", Offset = "0x4D1A90", VA = "0x4D1A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x4D1A94", Offset = "0x4D1A94", VA = "0x4D1A94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x4D1A98", Offset = "0x4D1A98", VA = "0x4D1A98")]
	private void OnPreRender()
	{
	}
}
[Token(Token = "0x200024E")]
public class RuntimePlatformRegion : MonoBehaviour
{
	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x244144", Offset = "0x244144")]
	private static Predicate<GameObject> <>f__am$cache0;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x244154", Offset = "0x244154")]
	private static Predicate<GameObject> <>f__am$cache1;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x244164", Offset = "0x244164")]
	private static Predicate<GameObject> <>f__am$cache2;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x244174", Offset = "0x244174")]
	private static Predicate<GameObject> <>f__am$cache3;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x244184", Offset = "0x244184")]
	private static Predicate<GameObject> <>f__am$cache4;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x244194", Offset = "0x244194")]
	private static Predicate<GameObject> <>f__am$cache5;

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x4D1B58", Offset = "0x4D1B58", VA = "0x4D1B58")]
	public RuntimePlatformRegion()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x4D1B60", Offset = "0x4D1B60", VA = "0x4D1B60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x4D2A30", Offset = "0x4D2A30", VA = "0x4D2A30")]
	private void GetGameObjects(Transform t, List<GameObject> gos)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x4D2B78", Offset = "0x4D2B78", VA = "0x4D2B78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248490", Offset = "0x248490")]
	private static bool <Start>m__0(GameObject p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x4D2C30", Offset = "0x4D2C30", VA = "0x4D2C30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2484A0", Offset = "0x2484A0")]
	private static bool <Start>m__1(GameObject p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x4D2CE8", Offset = "0x4D2CE8", VA = "0x4D2CE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2484B0", Offset = "0x2484B0")]
	private static bool <Start>m__2(GameObject p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x4D2DA0", Offset = "0x4D2DA0", VA = "0x4D2DA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2484C0", Offset = "0x2484C0")]
	private static bool <Start>m__3(GameObject p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x4D2E58", Offset = "0x4D2E58", VA = "0x4D2E58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2484D0", Offset = "0x2484D0")]
	private static bool <Start>m__4(GameObject p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x4D2F10", Offset = "0x4D2F10", VA = "0x4D2F10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2484E0", Offset = "0x2484E0")]
	private static bool <Start>m__5(GameObject p)
	{
		return default(bool);
	}
}
[Token(Token = "0x200024F")]
public class FrameCounter : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float updateInterval;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float accum;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int frames;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeleft;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string outText;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GUIContent guic;

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x3C1C1C", Offset = "0x3C1C1C", VA = "0x3C1C1C")]
	public FrameCounter()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x3C1C2C", Offset = "0x3C1C2C", VA = "0x3C1C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x3C1C38", Offset = "0x3C1C38", VA = "0x3C1C38")]
	private void OnGUI()
	{
	}
}
[Token(Token = "0x2000250")]
[ExecuteInEditMode]
public class SceneCameraMovement : MonoBehaviour
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float sensitivityX;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityY;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float origMoveSpeed;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mHdg;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mPitch;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ScionPostProcess postProcessComponent;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool limitMovement;

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x4D4D28", Offset = "0x4D4D28", VA = "0x4D4D28")]
	public SceneCameraMovement()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x4D4D48", Offset = "0x4D4D48", VA = "0x4D4D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x4D4DD8", Offset = "0x4D4DD8", VA = "0x4D4DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x4D543C", Offset = "0x4D543C", VA = "0x4D543C")]
	private void MoveForwards(float aVal)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x4D52E8", Offset = "0x4D52E8", VA = "0x4D52E8")]
	private void Strafe(float aVal)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x4D5590", Offset = "0x4D5590", VA = "0x4D5590")]
	private void ChangeHeight(float aVal)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x4D5188", Offset = "0x4D5188", VA = "0x4D5188")]
	private void ChangeHeading(float aVal)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x4D5238", Offset = "0x4D5238", VA = "0x4D5238")]
	private void ChangePitch(float aVal)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x4D56B4", Offset = "0x4D56B4", VA = "0x4D56B4")]
	public static void WrapAngle(ref float angle)
	{
	}
}
namespace ScionEngine
{
	[Token(Token = "0x2000251")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x23FB74", Offset = "0x23FB74")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x23FB74", Offset = "0x23FB74")]
	public class ScionPostProcess : ScionPostProcessBase
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x4DD938", Offset = "0x4DD938", VA = "0x4DD938")]
		public ScionPostProcess()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x4DDBC0", Offset = "0x4DDBC0", VA = "0x4DDBC0", Slot = "4")]
		protected override bool ShowTonemapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x4DDBC8", Offset = "0x4DDBC8", VA = "0x4DDBC8", Slot = "6")]
		protected override void SetShaderKeyWords(PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x4DE568", Offset = "0x4DE568", VA = "0x4DE568", Slot = "5")]
		protected override void InitializePostProcessParams()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x4DE604", Offset = "0x4DE604", VA = "0x4DE604", Slot = "7")]
		[ImageEffectTransformsToLDR]
		protected override void OnRenderImage(RenderTexture source, RenderTexture dest)
		{
		}
	}
	[Token(Token = "0x2000252")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x23FC40", Offset = "0x23FC40")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x23FC40", Offset = "0x23FC40")]
	public class ScionPostProcessNoTonemap : ScionPostProcessBase
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x4E1D78", Offset = "0x4E1D78", VA = "0x4E1D78")]
		public ScionPostProcessNoTonemap()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x4E1D7C", Offset = "0x4E1D7C", VA = "0x4E1D7C", Slot = "4")]
		protected override bool ShowTonemapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x4E1D84", Offset = "0x4E1D84", VA = "0x4E1D84", Slot = "6")]
		protected override void SetShaderKeyWords(PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x4E1D88", Offset = "0x4E1D88", VA = "0x4E1D88", Slot = "5")]
		protected override void InitializePostProcessParams()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x4E1DB8", Offset = "0x4E1DB8", VA = "0x4E1DB8", Slot = "7")]
		protected override void OnRenderImage(RenderTexture source, RenderTexture dest)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class Bloom
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Material m_bloomMat;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private RenderTexture[] m_glareTextures;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int numDownsamples;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float distanceMultiplier;

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x4D5CA4", Offset = "0x4D5CA4", VA = "0x4D5CA4")]
		public Bloom()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x4D5D68", Offset = "0x4D5D68", VA = "0x4D5D68")]
		public void ReleaseResources()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x4D5E40", Offset = "0x4D5E40", VA = "0x4D5E40")]
		public bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x4D5EC0", Offset = "0x4D5EC0", VA = "0x4D5EC0")]
		public RenderTexture TryGetSmallGlareTexture(int minimumReqPixels, out int numSearches)
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x4D6088", Offset = "0x4D6088", VA = "0x4D6088")]
		public float GetEnergyNormalizer(int forNumDownsamples)
		{
			return default(float);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x4D60C8", Offset = "0x4D60C8", VA = "0x4D60C8")]
		public void EndOfFrameCleanup()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x4D6184", Offset = "0x4D6184", VA = "0x4D6184")]
		public RenderTexture GetGlareTexture(int downsampleIndex)
		{
			return null;
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x4D61CC", Offset = "0x4D61CC", VA = "0x4D61CC")]
		public void RunUpsamplingChain(RenderTexture halfResSource)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x4D6420", Offset = "0x4D6420", VA = "0x4D6420")]
		public void RunDownsamplingChain(RenderTexture halfResSource, int numDownsamples, float distanceMultiplier)
		{
		}
	}
	[Token(Token = "0x2000254")]
	public static class ColorGrading
	{
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material s_ColorGradingMat;

		[Token(Token = "0x170000F4")]
		private static Material ColorGradingMat
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x4D6824", Offset = "0x4D6824", VA = "0x4D6824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x4D6964", Offset = "0x4D6964", VA = "0x4D6964")]
		public static void UploadColorGradingParams(Material mat, float numSlices)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class CombinationPass
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Material m_combinationMat;

		[Token(Token = "0x4000A14")]
		private const float MinValue = 0.0001f;

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x4D6ADC", Offset = "0x4D6ADC", VA = "0x4D6ADC")]
		public CombinationPass()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x4D6B98", Offset = "0x4D6B98", VA = "0x4D6B98")]
		public void ReleaseResources()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x4D6C70", Offset = "0x4D6C70", VA = "0x4D6C70")]
		public bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x4D6CF0", Offset = "0x4D6CF0", VA = "0x4D6CF0")]
		private void PrepareBloomSampling(RenderTexture bloomTexture, GlareParameters glareParams)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x4D6DCC", Offset = "0x4D6DCC", VA = "0x4D6DCC")]
		private void PrepareLensDirtSampling(Texture lensDirtTexture, LensDirtParameters lensDirtParams, GlareParameters glareParams)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x4D6EBC", Offset = "0x4D6EBC", VA = "0x4D6EBC")]
		private void PrepareLensFlareSampling(LensFlareParameters lensFlareParams, RenderTexture lensFlareTexture, Transform cameraTransform)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x4D745C", Offset = "0x4D745C", VA = "0x4D745C")]
		private void PrepareExposure(CameraParameters cameraParams, VirtualCamera virtualCamera)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x4D77D0", Offset = "0x4D77D0", VA = "0x4D77D0")]
		private bool ShouldInvertVAxis(PostProcessParameters postProcessParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x4D7838", Offset = "0x4D7838", VA = "0x4D7838")]
		private void UploadVariables(PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x4D7A48", Offset = "0x4D7A48", VA = "0x4D7A48")]
		private void PrepareColorGrading(ColorGradingParameters colorGradingParams)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x4D7B90", Offset = "0x4D7B90", VA = "0x4D7B90")]
		public void Combine(RenderTexture source, RenderTexture dest, PostProcessParameters postProcessParams, VirtualCamera virtualCamera)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class DepthOfField
	{
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Material m_DoFMat;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Material m_DoFMatTemporal;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture previousPointAverage;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Camera m_maskCamera;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_maskShader;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_maskCameraTransform;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RenderTexture previousTapsTexture;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture previousAlphaTexture;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RenderTexture copiedDepthBuffer;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float temporalUVOffset;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RenderBuffer[] renderBuffers;

		[Token(Token = "0x170000F5")]
		private Camera maskCamera
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x4D7FF4", Offset = "0x4D7FF4", VA = "0x4D7FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private static Shader maskShader
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x4D81B4", Offset = "0x4D81B4", VA = "0x4D81B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private Transform maskCameraTransform
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x4D82A0", Offset = "0x4D82A0", VA = "0x4D82A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x4D7EB8", Offset = "0x4D7EB8", VA = "0x4D7EB8")]
		public DepthOfField()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x4D8364", Offset = "0x4D8364", VA = "0x4D8364")]
		public bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x4D848C", Offset = "0x4D848C", VA = "0x4D848C")]
		public void EndOfFrameCleanup()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x4D8490", Offset = "0x4D8490", VA = "0x4D8490")]
		public RenderTexture RenderDepthOfField(PostProcessParameters postProcessParams, RenderTexture source, RenderTexture downsampledClrDepth, VirtualCamera virtualCamera, RenderTexture exclusionMask)
		{
			return null;
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x4DACD4", Offset = "0x4DACD4", VA = "0x4DACD4")]
		private void VisualizeFocalDistance(RenderTexture downsampledClrDepth)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x4D9E8C", Offset = "0x4D9E8C", VA = "0x4D9E8C")]
		private void UploadTemporalReprojectionVariables(PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x4DB2E4", Offset = "0x4DB2E4", VA = "0x4DB2E4")]
		private float Min(float val1, float val2)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x4DB300", Offset = "0x4DB300", VA = "0x4DB300")]
		private float Max(float val1, float val2)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x4DB31C", Offset = "0x4DB31C", VA = "0x4DB31C")]
		private int Min(int val1, int val2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x4DB32C", Offset = "0x4DB32C", VA = "0x4DB32C")]
		private int Max(int val1, int val2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x4D8D14", Offset = "0x4D8D14", VA = "0x4D8D14")]
		private RenderTexture PrepatePointAverage(PostProcessParameters postProcessParams, RenderTexture downsampledClrDepth)
		{
			return null;
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x4DB33C", Offset = "0x4DB33C", VA = "0x4DB33C")]
		public RenderTexture RenderExclusionMask(int width, int height, Camera camera, Transform cameraTransform, LayerMask mask)
		{
			return null;
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x4D94B4", Offset = "0x4D94B4", VA = "0x4D94B4")]
		private RenderTexture CreateTiledData(RenderTexture downsampledClrDepth, float tanHalfFoV, float fNumber, float focalDistance, float focalRange, float apertureDiameter, float focalLength, float maxCoCRadius, float nearPlane, float farPlane)
		{
			return null;
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x4D9960", Offset = "0x4D9960", VA = "0x4D9960")]
		private RenderTexture TileNeighbourhoodDataGathering(RenderTexture tiledData)
		{
			return null;
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x4D9CF8", Offset = "0x4D9CF8", VA = "0x4D9CF8")]
		private RenderTexture Presort(RenderTexture downsampledClrDepth, RenderTexture neighbourhoodData)
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x4D9B50", Offset = "0x4D9B50", VA = "0x4D9B50")]
		private RenderTexture PrefilterSource(RenderTexture downsampledClrDepth)
		{
			return null;
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x4DA3F0", Offset = "0x4DA3F0", VA = "0x4DA3F0")]
		private void BlurTapPass(RenderTexture prefilteredSource, RenderTexture tiledData, RenderTexture neighbourhoodData, RenderTexture exclusionMask, RenderTexture depthCenterAverage, RenderTexture presortTexture, DepthOfFieldSamples qualityLevel, out RenderTexture tapsTexture, out RenderTexture alphaTexture)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x4DAB24", Offset = "0x4DAB24", VA = "0x4DAB24")]
		private RenderTexture MedianFilterPass(RenderTexture inputTexture)
		{
			return null;
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x4DA934", Offset = "0x4DA934", VA = "0x4DA934")]
		private void TemporalPass(ref RenderTexture tapsTexture, RenderTexture previousTapsTexture)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x4DB818", Offset = "0x4DB818", VA = "0x4DB818")]
		private void TemporalPass(ref RenderTexture tapsTexture, ref RenderTexture alphaTexture, RenderTexture previousTapsTexture, RenderTexture previousAlphaTexture)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x4DAE70", Offset = "0x4DAE70", VA = "0x4DAE70")]
		private RenderTexture UpsampleDepthOfField(RenderTexture source, RenderTexture tapsTexture, RenderTexture alphaTexture, RenderTexture neighbourhoodData, RenderTexture exclusionMask)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x4DBCD0", Offset = "0x4DBCD0", VA = "0x4DBCD0")]
		private RenderTexture BilateralAlphaFilter(RenderTexture alphaTexture, RenderTexture tapsTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x2000257")]
	public class Downsampling
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Material m_downsampleMat;

		[Token(Token = "0x4000A21")]
		private const int FireflyRemovingPass = 0;

		[Token(Token = "0x4000A22")]
		private const int DoFDownsamplePass = 1;

		[Token(Token = "0x4000A23")]
		private const int DepthPass = 2;

		[Token(Token = "0x4000A24")]
		private const int MinFilterPass = 3;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x4DBF0C", Offset = "0x4DBF0C", VA = "0x4DBF0C")]
		public Downsampling()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x4DBFC8", Offset = "0x4DBFC8", VA = "0x4DBFC8")]
		public bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x4DC048", Offset = "0x4DC048", VA = "0x4DC048")]
		public RenderTexture DownsampleFireflyRemoving(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x4DC224", Offset = "0x4DC224", VA = "0x4DC224")]
		public RenderTexture DownsampleForDepthOfField(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x4DC3A8", Offset = "0x4DC3A8", VA = "0x4DC3A8")]
		public RenderTexture DownsampleDepthTexture(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x4DC44C", Offset = "0x4DC44C", VA = "0x4DC44C")]
		public RenderTexture DownsampleMinFilter(int width, int height, RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x4DC5C8", Offset = "0x4DC5C8", VA = "0x4DC5C8")]
		public RenderTexture Downsample(RenderTexture source)
		{
			return null;
		}
	}
}
namespace Inspector
{
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x23FD14", Offset = "0x23FD14")]
	public abstract class InspectorAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string label;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string tooltip;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string useProperty;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string visibleCheck;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string enabledCheck;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int indentLevel;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x42FE24", Offset = "0x42FE24", VA = "0x42FE24")]
		public InspectorAttribute()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x42FD34", Offset = "0x42FD34", VA = "0x42FD34")]
		public InspectorAttribute(string label)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class FieldAttribute : InspectorAttribute
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool allowSceneObjects;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x42FD74", Offset = "0x42FD74", VA = "0x42FD74")]
		public FieldAttribute()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x42FDA0", Offset = "0x42FDA0", VA = "0x42FDA0")]
		public FieldAttribute(string label)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class SliderAttribute : InspectorAttribute
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minValue;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxValue;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x42FED8", Offset = "0x42FED8", VA = "0x42FED8")]
		public SliderAttribute()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x42FEF8", Offset = "0x42FEF8", VA = "0x42FEF8")]
		public SliderAttribute(string label)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x42FF18", Offset = "0x42FF18", VA = "0x42FF18")]
		public SliderAttribute(string label, float minValue, float maxValue)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class ToggleAttribute : InspectorAttribute
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool flipped;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x42FF48", Offset = "0x42FF48", VA = "0x42FF48")]
		public ToggleAttribute()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x42FF68", Offset = "0x42FF68", VA = "0x42FF68")]
		public ToggleAttribute(string label)
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class GroupAttribute : InspectorAttribute
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawFoldout;

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x42FDCC", Offset = "0x42FDCC", VA = "0x42FDCC")]
		public GroupAttribute()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x42FDF8", Offset = "0x42FDF8", VA = "0x42FDF8")]
		public GroupAttribute(string label)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class EnumMaskAttribute : InspectorAttribute
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x42FD14", Offset = "0x42FD14", VA = "0x42FD14")]
		public EnumMaskAttribute()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x42FD54", Offset = "0x42FD54", VA = "0x42FD54")]
		public EnumMaskAttribute(string label)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class MinMaxSliderAttribute : InspectorAttribute
	{
		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minValue;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxValue;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showFields;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x42FE44", Offset = "0x42FE44", VA = "0x42FE44")]
		public MinMaxSliderAttribute()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x42FE70", Offset = "0x42FE70", VA = "0x42FE70")]
		public MinMaxSliderAttribute(string label)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x42FE9C", Offset = "0x42FE9C", VA = "0x42FE9C")]
		public MinMaxSliderAttribute(string label, float minValue, float maxValue)
		{
		}
	}
}
namespace Inspector.Decorations
{
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x23FD28", Offset = "0x23FD28")]
	public abstract class DecorationAttribute : Attribute
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int order;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string visibleCheck;

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x42FB94", Offset = "0x42FB94", VA = "0x42FB94")]
		public DecorationAttribute(int order)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class SpaceAttribute : DecorationAttribute
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int height;

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x42FCB4", Offset = "0x42FCB4", VA = "0x42FCB4")]
		public SpaceAttribute(int order, int height)
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class HeaderAttribute : DecorationAttribute
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string header;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x42FC24", Offset = "0x42FC24", VA = "0x42FC24")]
		public HeaderAttribute(int order, string header)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class LineSeparatorAttribute : DecorationAttribute
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float padding;

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x42FC84", Offset = "0x42FC84", VA = "0x42FC84")]
		public LineSeparatorAttribute(int order)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class ButtonAttribute : DecorationAttribute
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string label;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string callback;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float width;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float height;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltip;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x42FB48", Offset = "0x42FB48", VA = "0x42FB48")]
		public ButtonAttribute(int order, string label, string callback)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public abstract class HelpBoxAttribute : DecorationAttribute
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string message;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float width;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x42FBEC", Offset = "0x42FBEC", VA = "0x42FBEC")]
		public HelpBoxAttribute(int order, string message)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class InfoBoxAttribute : HelpBoxAttribute
	{
		[Token(Token = "0x6001002")]
		[Address(RVA = "0x42FC4C", Offset = "0x42FC4C", VA = "0x42FC4C")]
		public InfoBoxAttribute(int order, string message)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class WarningBoxAttribute : HelpBoxAttribute
	{
		[Token(Token = "0x6001003")]
		[Address(RVA = "0x42FCDC", Offset = "0x42FCDC", VA = "0x42FCDC")]
		public WarningBoxAttribute(int order, string message)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class ErrorBoxAttribute : HelpBoxAttribute
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x42FBB4", Offset = "0x42FBB4", VA = "0x42FBB4")]
		public ErrorBoxAttribute(int order, string message)
		{
		}
	}
}
namespace ScionEngine
{
	[Token(Token = "0x2000268")]
	public enum CameraMode
	{
		[Token(Token = "0x4000A40")]
		Off = 0,
		[Token(Token = "0x4000A41")]
		Manual = 1,
		[Token(Token = "0x4000A42")]
		AutoPriority = 2,
		[Token(Token = "0x4000A43")]
		AperturePriority = 4
	}
	[Token(Token = "0x2000269")]
	public enum TonemappingMode
	{
		[Token(Token = "0x4000A45")]
		Reinhard,
		[Token(Token = "0x4000A46")]
		LumaReinhard,
		[Token(Token = "0x4000A47")]
		Filmic,
		[Token(Token = "0x4000A48")]
		Photographic
	}
	[Token(Token = "0x200026A")]
	public enum DepthFocusMode
	{
		[Token(Token = "0x4000A4A")]
		ManualDistance,
		[Token(Token = "0x4000A4B")]
		ManualRange,
		[Token(Token = "0x4000A4C")]
		TargetTransform,
		[Token(Token = "0x4000A4D")]
		PointAverage
	}
	[Token(Token = "0x200026B")]
	public enum DepthOfFieldSamples
	{
		[Token(Token = "0x4000A4F")]
		Normal_25,
		[Token(Token = "0x4000A50")]
		High_49
	}
	[Token(Token = "0x200026C")]
	public enum ColorGradingMode
	{
		[Token(Token = "0x4000A52")]
		Off,
		[Token(Token = "0x4000A53")]
		On,
		[Token(Token = "0x4000A54")]
		Blend
	}
	[Token(Token = "0x200026D")]
	public enum ColorGradingCompatibility
	{
		[Token(Token = "0x4000A56")]
		Unity,
		[Token(Token = "0x4000A57")]
		Chromatica,
		[Token(Token = "0x4000A58")]
		Amplify
	}
	[Token(Token = "0x200026E")]
	public enum LensFlareGhostSamples
	{
		[Token(Token = "0x4000A5A")]
		x2 = 4,
		[Token(Token = "0x4000A5B")]
		x3,
		[Token(Token = "0x4000A5C")]
		x5,
		[Token(Token = "0x4000A5D")]
		x7,
		[Token(Token = "0x4000A5E")]
		x9
	}
	[Token(Token = "0x200026F")]
	public enum LensFlareBlurSamples
	{
		[Token(Token = "0x4000A60")]
		Off,
		[Token(Token = "0x4000A61")]
		x4,
		[Token(Token = "0x4000A62")]
		x8
	}
	[Token(Token = "0x2000270")]
	public struct GlareParameters
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float intensity;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float brightness;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distanceMultiplier;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bloomNormalizationTerm;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int downsamples;
	}
	[Token(Token = "0x2000271")]
	public struct LensFlareParameters
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LensFlareGhostSamples ghostSamples;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ghostIntensity;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ghostDispersal;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ghostDistortion;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ghostEdgeFade;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float haloIntensity;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float haloWidth;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float haloDistortion;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float starUVScale;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Texture2D starTexture;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D lensColorTexture;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LensFlareBlurSamples blurSamples;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blurStrength;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int downsamples;
	}
	[Token(Token = "0x2000272")]
	public struct LensDirtParameters
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float bloomEffect;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float bloomBrightness;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float lensFlareEffect;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float lensFlareBrightness;
	}
	[Token(Token = "0x2000273")]
	public struct CameraParameters
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CameraMode cameraMode;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float focalLength;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float apertureDiameter;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fNumber;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ISO;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float shutterSpeed;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 minMaxExposure;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float exposureCompensation;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fieldOfView;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float adaptionSpeed;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aspect;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float nearPlane;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float farPlane;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Matrix4x4 previousViewProjection;
	}
	[Token(Token = "0x2000274")]
	public struct PreCalcValues
	{
		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tanHalfFoV;
	}
	[Token(Token = "0x2000275")]
	public struct DepthOfFieldParameters
	{
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask depthOfFieldMask;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool useMedianFilter;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DepthOfFieldSamples quality;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DepthFocusMode depthFocusMode;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool visualizeFocalDistance;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxCoCRadius;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 pointAveragePosition;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pointAverageRange;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool visualizePointFocus;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float depthAdaptionSpeed;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float focalDistance;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalRange;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool useTemporal;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float temporalBlend;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int temporalSteps;
	}
	[Token(Token = "0x2000276")]
	public struct CommonPostProcess
	{
		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float grainIntensity;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vignetteIntensity;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float vignetteScale;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color vignetteColor;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool chromaticAberration;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float chromaticAberrationDistortion;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float chromaticAberrationIntensity;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float whitePoint;
	}
	[Token(Token = "0x2000277")]
	public struct ColorGradingParameters
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorGradingMode colorGradingMode;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Texture2D colorGradingTex1;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D colorGradingTex2;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float colorGradingBlendFactor;
	}
	[Token(Token = "0x2000278")]
	public class PostProcessParameters
	{
		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Camera camera;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform cameraTransform;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool tonemapping;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool bloom;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool lensFlare;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool lensDirt;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool exposure;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool depthOfField;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool isFirstRender;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int halfWidth;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int halfHeight;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture halfResSource;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RenderTexture halfResDepth;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture bloomTexture;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RenderTexture lensFlareTexture;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture dofTexture;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Texture lensDirtTexture;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GlareParameters glareParams;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LensFlareParameters lensFlareParams;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public LensDirtParameters lensDirtParams;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public CameraParameters cameraParams;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public DepthOfFieldParameters DoFParams;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public ColorGradingParameters colorGradingParams;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public PreCalcValues preCalcValues;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public CommonPostProcess commonPostProcess;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool isFilled;

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x4DC7E4", Offset = "0x4DC7E4", VA = "0x4DC7E4")]
		public PostProcessParameters()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x4DC830", Offset = "0x4DC830", VA = "0x4DC830")]
		public void Fill(ScionPostProcessBase postProcess, bool forceFill)
		{
		}
	}
}
[Token(Token = "0x2000279")]
public class ScionDebug
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<RenderTexture> registeredTextures;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<bool> forceBilinear;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<bool> forcePoint;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<bool> shouldRelease;

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x4D56F8", Offset = "0x4D56F8", VA = "0x4D56F8")]
	public ScionDebug()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x4D57E8", Offset = "0x4D57E8", VA = "0x4D57E8")]
	public void RegisterTextureForVisualization(RenderTexture texture, bool shouldRelease, bool forceBilinear = false, bool forcePoint = false)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x4D5904", Offset = "0x4D5904", VA = "0x4D5904")]
	public void VisualizeDebug(RenderTexture dest)
	{
	}
}
namespace ScionEngine
{
	[Token(Token = "0x200027A")]
	public class ScionGraphics
	{
		[Token(Token = "0x600100A")]
		[Address(RVA = "0x4DCDB0", Offset = "0x4DCDB0", VA = "0x4DCDB0")]
		public ScionGraphics()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x4DB718", Offset = "0x4DB718", VA = "0x4DB718")]
		public static void Blit(Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x4DB16C", Offset = "0x4DB16C", VA = "0x4DB16C")]
		public static void Blit(RenderTexture dest, Material fxMaterial, int passNr)
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class ScionLensFlare
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material m_lensFlareMat;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private RenderBuffer[] targetBuffers;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x4DCDB8", Offset = "0x4DCDB8", VA = "0x4DCDB8")]
		public ScionLensFlare()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x4DCE90", Offset = "0x4DCE90", VA = "0x4DCE90")]
		public bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x4DCF10", Offset = "0x4DCF10", VA = "0x4DCF10")]
		private float GetDownsamplingNormalizer(int origSourceWidth, int downsampledWidth)
		{
			return default(float);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x4DCF2C", Offset = "0x4DCF2C", VA = "0x4DCF2C")]
		private float GetBlurNormalizer(LensFlareBlurSamples blurSamples)
		{
			return default(float);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x4DCF68", Offset = "0x4DCF68", VA = "0x4DCF68")]
		private void SetShaderParameters(LensFlareParameters lensFlareParams, RenderTexture downsampledScene, float downsamplingNormalizer)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x4DD2DC", Offset = "0x4DD2DC", VA = "0x4DD2DC")]
		public RenderTexture RenderLensFlare(RenderTexture downsampledScene, LensFlareParameters lensFlareParams, int origSourceWidth)
		{
			return null;
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x4DD56C", Offset = "0x4DD56C", VA = "0x4DD56C")]
		public void HexagonalBlur(RenderTexture lensFlareTex, LensFlareBlurSamples blurSamples)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public abstract class ScionPostProcessBase : MonoBehaviour
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x2441A4", Offset = "0x2441A4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2441A4", Offset = "0x2441A4")]
		protected bool m_grain;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244254", Offset = "0x244254")]
		protected float m_grainIntensity;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x244310", Offset = "0x244310")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x244310", Offset = "0x244310")]
		protected bool m_vignette;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2443CC", Offset = "0x2443CC")]
		protected float m_vignetteIntensity;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244488", Offset = "0x244488")]
		protected float m_vignetteScale;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x244524", Offset = "0x244524")]
		protected Color m_vignetteColor;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x2445CC", Offset = "0x2445CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2445CC", Offset = "0x2445CC")]
		protected bool m_chromaticAberration;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2446A8", Offset = "0x2446A8")]
		protected float m_chromaticAberrationDistortion;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244760", Offset = "0x244760")]
		protected float m_chromaticAberrationIntensity;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x24482C", Offset = "0x24482C")]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x24482C", Offset = "0x24482C")]
		[SerializeField]
		protected bool m_bloom;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2448DC", Offset = "0x2448DC")]
		protected float m_bloomIntensity;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244990", Offset = "0x244990")]
		[SerializeField]
		protected float m_bloomBrightness;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244A48", Offset = "0x244A48")]
		[SerializeField]
		protected float m_bloomDistanceMultiplier;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244B08", Offset = "0x244B08")]
		protected int m_bloomDownsamples;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x244BC0", Offset = "0x244BC0")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x244BC0", Offset = "0x244BC0")]
		protected bool m_lensFlare;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x244C80", Offset = "0x244C80")]
		protected LensFlareGhostSamples m_lensFlareGhostSamples;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244D3C", Offset = "0x244D3C")]
		protected float m_lensFlareGhostIntensity;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244E04", Offset = "0x244E04")]
		protected float m_lensFlareGhostDispersal;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244ED4", Offset = "0x244ED4")]
		[SerializeField]
		protected float m_lensFlareGhostDistortion;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x244FBC", Offset = "0x244FBC")]
		protected float m_lensFlareGhostEdgeFade;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x245068", Offset = "0x245068")]
		protected Texture2D m_lensFlareLensColorTexture;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245130", Offset = "0x245130")]
		protected float m_lensFlareHaloIntensity;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2451FC", Offset = "0x2451FC")]
		[SerializeField]
		protected float m_lensFlareHaloWidth;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2452D8", Offset = "0x2452D8")]
		protected float m_lensFlareHaloDistortion;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x2453B4", Offset = "0x2453B4")]
		protected Texture2D m_lensFlareDiffractionTexture;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245488", Offset = "0x245488")]
		protected float m_lensFlareDiffractionUVScale;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x245554", Offset = "0x245554")]
		protected LensFlareBlurSamples m_lensFlareBlurSamples;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2455F0", Offset = "0x2455F0")]
		[SerializeField]
		protected float m_lensFlareBlurStrength;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2456C4", Offset = "0x2456C4")]
		protected int m_lensFlareDownsamples;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x24576C", Offset = "0x24576C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x24576C", Offset = "0x24576C")]
		protected bool m_lensDirt;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x245858", Offset = "0x245858")]
		protected Texture m_lensDirtTexture;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x24590C", Offset = "0x24590C")]
		protected float m_lensDirtBloomEffect;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2459D0", Offset = "0x2459D0")]
		protected float m_lensDirtBloomBrightness;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245A80", Offset = "0x245A80")]
		protected float m_lensDirtLensFlareEffect;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245B30", Offset = "0x245B30")]
		protected float m_lensDirtLensFlareBrightness;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x245BE8", Offset = "0x245BE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x245BE8", Offset = "0x245BE8")]
		protected TonemappingMode m_tonemappingMode;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245CD8", Offset = "0x245CD8")]
		protected float m_whitePoint;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x245D9C", Offset = "0x245D9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x245D9C", Offset = "0x245D9C")]
		protected CameraMode m_cameraMode;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245E6C", Offset = "0x245E6C")]
		protected float m_fNumber;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245F24", Offset = "0x245F24")]
		protected float m_ISO;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x245FD0", Offset = "0x245FD0")]
		protected float m_shutterSpeed;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x2460A0", Offset = "0x2460A0")]
		protected bool m_userControlledFocalLength;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x246130", Offset = "0x246130")]
		protected float m_focalLength;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x246208", Offset = "0x246208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x246208", Offset = "0x246208")]
		protected float m_exposureCompensation;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "MinMaxSliderAttribute", RVA = "0x246328", Offset = "0x246328")]
		[SerializeField]
		protected Vector2 m_minMaxExposure;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2463B4", Offset = "0x2463B4")]
		protected float m_adaptionSpeed;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x246488", Offset = "0x246488")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x246488", Offset = "0x246488")]
		protected bool m_depthOfField;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x246554", Offset = "0x246554")]
		protected LayerMask m_exclusionMask;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2465BC", Offset = "0x2465BC")]
		protected float m_maxCoCRadius;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x246660", Offset = "0x246660")]
		protected bool m_depthOfFieldTemporalSupersampling;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x246710", Offset = "0x246710")]
		protected float m_depthOfFieldTemporalBlend;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x2467C8", Offset = "0x2467C8")]
		[SerializeField]
		protected int m_depthOfFieldTemporalSteps;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x246880", Offset = "0x246880")]
		protected DepthOfFieldSamples m_depthOfFieldSamples;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x246934", Offset = "0x246934")]
		protected DepthFocusMode m_depthFocusMode;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x2469E8", Offset = "0x2469E8")]
		protected bool m_visualizeFocalDistance;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x246ABC", Offset = "0x246ABC")]
		protected Transform m_depthOfFieldTargetTransform;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x246B6C", Offset = "0x246B6C")]
		protected Vector2 m_pointAveragePosition;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x246C08", Offset = "0x246C08")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x246C08", Offset = "0x246C08")]
		protected float m_pointAverageRange;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "ToggleAttribute", RVA = "0x246CF4", Offset = "0x246CF4")]
		protected bool m_visualizePointFocus;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x246DCC", Offset = "0x246DCC")]
		protected float m_depthAdaptionSpeed;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x246E98", Offset = "0x246E98")]
		protected float m_focalDistance;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x246F50", Offset = "0x246F50")]
		protected float m_focalRange;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x247020", Offset = "0x247020")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x247020", Offset = "0x247020")]
		protected ColorGradingMode m_colorGradingMode;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x2470FC", Offset = "0x2470FC")]
		protected Texture2D m_colorGradingTex1;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "FieldAttribute", RVA = "0x2471C0", Offset = "0x2471C0")]
		protected Texture2D m_colorGradingTex2;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "SliderAttribute", RVA = "0x247294", Offset = "0x247294")]
		[SerializeField]
		protected float m_colorGradingBlendFactor;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Camera m_camera;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private bool forceFillParams;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		protected bool m_isFirstRender;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected float prevCamFoV;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		protected Transform m_cameraTransform;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Bloom m_bloomClass;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected ScionLensFlare m_lensFlareClass;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected VirtualCamera m_virtualCamera;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		protected CombinationPass m_combinationPass;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected Downsampling m_downsampling;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected DepthOfField m_depthOfFieldClass;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected PostProcessParameters postProcessParams;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		protected ScionDebug m_scionDebug;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ScionDebug ActiveDebug;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool prevRenderWasHDR;

		[Token(Token = "0x170000F8")]
		protected Camera camera
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x4DE910", Offset = "0x4DE910", VA = "0x4DE910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public CameraMode cameraMode
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x4DCBC0", Offset = "0x4DCBC0", VA = "0x4DCBC0")]
			get
			{
				return default(CameraMode);
			}
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x4DEB80", Offset = "0x4DEB80", VA = "0x4DEB80")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public bool bloom
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x4DCBA0", Offset = "0x4DCBA0", VA = "0x4DCBA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x4DEBD0", Offset = "0x4DEBD0", VA = "0x4DEBD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public bool lensFlare
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x4DCBA8", Offset = "0x4DCBA8", VA = "0x4DCBA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x4DEBFC", Offset = "0x4DEBFC", VA = "0x4DEBFC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public bool lensDirt
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x4DCBB0", Offset = "0x4DCBB0", VA = "0x4DCBB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x4DEC28", Offset = "0x4DEC28", VA = "0x4DEC28")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public Texture lensDirtTexture
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x4DCBB8", Offset = "0x4DCBB8", VA = "0x4DCBB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x4DEC54", Offset = "0x4DEC54", VA = "0x4DEC54")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool depthOfField
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x4DCBC8", Offset = "0x4DCBC8", VA = "0x4DCBC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x4DEC80", Offset = "0x4DEC80", VA = "0x4DEC80")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public float bloomIntensity
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x4DCBD0", Offset = "0x4DCBD0", VA = "0x4DCBD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x4DEF58", Offset = "0x4DEF58", VA = "0x4DEF58")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public float bloomBrightness
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x4DCBE8", Offset = "0x4DCBE8", VA = "0x4DCBE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x4DEFFC", Offset = "0x4DEFFC", VA = "0x4DEFFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public float bloomDistanceMultiplier
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x4DCBF0", Offset = "0x4DCBF0", VA = "0x4DCBF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x4DF030", Offset = "0x4DF030", VA = "0x4DF030")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public int bloomDownsamples
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x4DCBF8", Offset = "0x4DCBF8", VA = "0x4DCBF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x4DF064", Offset = "0x4DF064", VA = "0x4DF064")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public LensFlareGhostSamples lensFlareGhostSamples
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x4DCC00", Offset = "0x4DCC00", VA = "0x4DCC00")]
			get
			{
				return default(LensFlareGhostSamples);
			}
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x4DF090", Offset = "0x4DF090", VA = "0x4DF090")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public float lensFlareGhostIntensity
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x4DCC08", Offset = "0x4DCC08", VA = "0x4DCC08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x4DF0BC", Offset = "0x4DF0BC", VA = "0x4DF0BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public float lensFlareGhostDispersal
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x4DCC10", Offset = "0x4DCC10", VA = "0x4DCC10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x4DF0F0", Offset = "0x4DF0F0", VA = "0x4DF0F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float lensFlareGhostDistortion
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x4DCC18", Offset = "0x4DCC18", VA = "0x4DCC18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x4DF124", Offset = "0x4DF124", VA = "0x4DF124")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public float lensFlareGhostEdgeFade
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x4DCC20", Offset = "0x4DCC20", VA = "0x4DCC20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x4DF158", Offset = "0x4DF158", VA = "0x4DF158")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public float lensFlareHaloIntensity
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x4DCC28", Offset = "0x4DCC28", VA = "0x4DCC28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x4DF18C", Offset = "0x4DF18C", VA = "0x4DF18C")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public float lensFlareHaloWidth
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x4DCC30", Offset = "0x4DCC30", VA = "0x4DCC30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x4DF1C0", Offset = "0x4DF1C0", VA = "0x4DF1C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public float lensFlareHaloDistortion
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x4DCC38", Offset = "0x4DCC38", VA = "0x4DCC38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x4DF1F4", Offset = "0x4DF1F4", VA = "0x4DF1F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public float lensFlareDiffractionUVScale
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x4DCC40", Offset = "0x4DCC40", VA = "0x4DCC40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x4DF228", Offset = "0x4DF228", VA = "0x4DF228")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public Texture2D lensFlareDiffractionTexture
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x4DCC48", Offset = "0x4DCC48", VA = "0x4DCC48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x4DF25C", Offset = "0x4DF25C", VA = "0x4DF25C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public LensFlareBlurSamples lensFlareBlurSamples
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x4DCC58", Offset = "0x4DCC58", VA = "0x4DCC58")]
			get
			{
				return default(LensFlareBlurSamples);
			}
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x4DF288", Offset = "0x4DF288", VA = "0x4DF288")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public float lensFlareBlurStrength
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x4DCC60", Offset = "0x4DCC60", VA = "0x4DCC60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x4DF2B4", Offset = "0x4DF2B4", VA = "0x4DF2B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public int lensFlareDownsamples
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x4DCC68", Offset = "0x4DCC68", VA = "0x4DCC68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x4DF2E8", Offset = "0x4DF2E8", VA = "0x4DF2E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public Texture2D lensFlareLensColorTexture
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x4DCC50", Offset = "0x4DCC50", VA = "0x4DCC50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x4DF314", Offset = "0x4DF314", VA = "0x4DF314")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public float lensDirtBloomEffect
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x4DCC70", Offset = "0x4DCC70", VA = "0x4DCC70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x4DF340", Offset = "0x4DF340", VA = "0x4DF340")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public float lensDirtBloomBrightness
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x4DCC78", Offset = "0x4DCC78", VA = "0x4DCC78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x4DF3E4", Offset = "0x4DF3E4", VA = "0x4DF3E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public float lensDirtLensFlareEffect
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x4DCC80", Offset = "0x4DCC80", VA = "0x4DCC80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x4DF418", Offset = "0x4DF418", VA = "0x4DF418")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public float lensDirtLensFlareBrightness
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x4DCC88", Offset = "0x4DCC88", VA = "0x4DCC88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x4DF44C", Offset = "0x4DF44C", VA = "0x4DF44C")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public TonemappingMode tonemappingMode
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x4DF480", Offset = "0x4DF480", VA = "0x4DF480")]
			get
			{
				return default(TonemappingMode);
			}
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x4DF488", Offset = "0x4DF488", VA = "0x4DF488")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public float whitePoint
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x4DE5FC", Offset = "0x4DE5FC", VA = "0x4DE5FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x4DF490", Offset = "0x4DF490", VA = "0x4DF490")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public LayerMask exclusionMask
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x4DF4C4", Offset = "0x4DF4C4", VA = "0x4DF4C4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x4DF4CC", Offset = "0x4DF4CC", VA = "0x4DF4CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public DepthFocusMode depthFocusMode
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x4DCC90", Offset = "0x4DCC90", VA = "0x4DCC90")]
			get
			{
				return default(DepthFocusMode);
			}
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x4DF4F8", Offset = "0x4DF4F8", VA = "0x4DF4F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public bool visualizeFocalDistance
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x4DCCA8", Offset = "0x4DCCA8", VA = "0x4DCCA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x4DF578", Offset = "0x4DF578", VA = "0x4DF578")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public Transform depthOfFieldTargetTransform
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x4DF5A4", Offset = "0x4DF5A4", VA = "0x4DF5A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x4DF5AC", Offset = "0x4DF5AC", VA = "0x4DF5AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public float maxCoCRadius
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x4DCC98", Offset = "0x4DCC98", VA = "0x4DCC98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x4DF5B4", Offset = "0x4DF5B4", VA = "0x4DF5B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public bool depthOfFieldTemporalSupersampling
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x4DCCEC", Offset = "0x4DCCEC", VA = "0x4DCCEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001077")]
			[Address(RVA = "0x4DF5E8", Offset = "0x4DF5E8", VA = "0x4DF5E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public float depthOfFieldTemporalBlend
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x4DCCF4", Offset = "0x4DCCF4", VA = "0x4DCCF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x4DF614", Offset = "0x4DF614", VA = "0x4DF614")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public int depthOfFieldTemporalSteps
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x4DCCFC", Offset = "0x4DCCFC", VA = "0x4DCCFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x4DF648", Offset = "0x4DF648", VA = "0x4DF648")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public DepthOfFieldSamples depthOfFieldSamples
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x4DCCA0", Offset = "0x4DCCA0", VA = "0x4DCCA0")]
			get
			{
				return default(DepthOfFieldSamples);
			}
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x4DF674", Offset = "0x4DF674", VA = "0x4DF674")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public Vector2 pointAveragePosition
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x4DCCB0", Offset = "0x4DCCB0", VA = "0x4DCCB0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x4DF6A0", Offset = "0x4DF6A0", VA = "0x4DF6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public float pointAverageRange
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x4DCCC4", Offset = "0x4DCCC4", VA = "0x4DCCC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x4DF6D8", Offset = "0x4DF6D8", VA = "0x4DF6D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public bool visualizePointFocus
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x4DCCCC", Offset = "0x4DCCCC", VA = "0x4DCCCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x4DF70C", Offset = "0x4DF70C", VA = "0x4DF70C")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public float depthAdaptionSpeed
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x4DCCD4", Offset = "0x4DCCD4", VA = "0x4DCCD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x4DF738", Offset = "0x4DF738", VA = "0x4DF738")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public float focalDistance
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x4DCCDC", Offset = "0x4DCCDC", VA = "0x4DCCDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x4DF544", Offset = "0x4DF544", VA = "0x4DF544")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public float focalRange
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x4DCCE4", Offset = "0x4DCCE4", VA = "0x4DCCE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x4DF76C", Offset = "0x4DF76C", VA = "0x4DF76C")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public ColorGradingMode colorGradingMode
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x4DCD0C", Offset = "0x4DCD0C", VA = "0x4DCD0C")]
			get
			{
				return default(ColorGradingMode);
			}
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x4DF7A0", Offset = "0x4DF7A0", VA = "0x4DF7A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public Texture2D colorGradingTex1
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x4DCD04", Offset = "0x4DCD04", VA = "0x4DCD04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x4DF854", Offset = "0x4DF854", VA = "0x4DF854")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public Texture2D colorGradingTex2
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x4DCD14", Offset = "0x4DCD14", VA = "0x4DCD14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x4DF890", Offset = "0x4DF890", VA = "0x4DF890")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public float colorGradingBlendFactor
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x4DCD1C", Offset = "0x4DCD1C", VA = "0x4DCD1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x4DF8BC", Offset = "0x4DF8BC", VA = "0x4DF8BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public bool userControlledFocalLength
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x4DF96C", Offset = "0x4DF96C", VA = "0x4DF96C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x4DF974", Offset = "0x4DF974", VA = "0x4DF974")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public float focalLength
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x4DF97C", Offset = "0x4DF97C", VA = "0x4DF97C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x4DF984", Offset = "0x4DF984", VA = "0x4DF984")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public float fNumber
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x4DCD24", Offset = "0x4DCD24", VA = "0x4DCD24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x4DF9B8", Offset = "0x4DF9B8", VA = "0x4DF9B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public float ISO
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x4DCD2C", Offset = "0x4DCD2C", VA = "0x4DCD2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x4DF9EC", Offset = "0x4DF9EC", VA = "0x4DF9EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public float shutterSpeed
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x4DCD34", Offset = "0x4DCD34", VA = "0x4DCD34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x4DFA20", Offset = "0x4DFA20", VA = "0x4DFA20")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public float adaptionSpeed
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x4DCD3C", Offset = "0x4DCD3C", VA = "0x4DCD3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x4DFA54", Offset = "0x4DFA54", VA = "0x4DFA54")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public Vector2 minMaxExposure
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x4DCD44", Offset = "0x4DCD44", VA = "0x4DCD44")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x4DFA88", Offset = "0x4DFA88", VA = "0x4DFA88")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public float exposureCompensation
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x4DCD58", Offset = "0x4DCD58", VA = "0x4DCD58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x4DFAC0", Offset = "0x4DFAC0", VA = "0x4DFAC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool grain
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x4DCD60", Offset = "0x4DCD60", VA = "0x4DCD60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x4DFAF4", Offset = "0x4DFAF4", VA = "0x4DFAF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public float grainIntensity
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x4DCD68", Offset = "0x4DCD68", VA = "0x4DCD68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x4DFB34", Offset = "0x4DFB34", VA = "0x4DFB34")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public bool vignette
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x4DCD70", Offset = "0x4DCD70", VA = "0x4DCD70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x4DFB74", Offset = "0x4DFB74", VA = "0x4DFB74")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float vignetteIntensity
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x4DCD78", Offset = "0x4DCD78", VA = "0x4DCD78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x4DFBB4", Offset = "0x4DFBB4", VA = "0x4DFBB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float vignetteScale
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x4DCD80", Offset = "0x4DCD80", VA = "0x4DCD80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x4DFBF4", Offset = "0x4DFBF4", VA = "0x4DFBF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public Color vignetteColor
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x4DCD88", Offset = "0x4DCD88", VA = "0x4DCD88")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x4DFC28", Offset = "0x4DFC28", VA = "0x4DFC28")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public bool chromaticAberration
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x4DCD98", Offset = "0x4DCD98", VA = "0x4DCD98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x4DFC78", Offset = "0x4DFC78", VA = "0x4DFC78")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float chromaticAberrationDistortion
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x4DCDA0", Offset = "0x4DCDA0", VA = "0x4DCDA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x4DFCA4", Offset = "0x4DFCA4", VA = "0x4DFCA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float chromaticAberrationIntensity
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x4DCDA8", Offset = "0x4DCDA8", VA = "0x4DCDA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x4DFCD8", Offset = "0x4DFCD8", VA = "0x4DFCD8")]
			set
			{
			}
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x4DD940", Offset = "0x4DD940", VA = "0x4DD940")]
		protected ScionPostProcessBase()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x4DE6E4", Offset = "0x4DE6E4", VA = "0x4DE6E4")]
		protected bool ShowGrain()
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x4DE6EC", Offset = "0x4DE6EC", VA = "0x4DE6EC")]
		protected bool ShowVignette()
		{
			return default(bool);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x4DE6F4", Offset = "0x4DE6F4", VA = "0x4DE6F4")]
		protected bool ShowChromaticAberration()
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x4DE6FC", Offset = "0x4DE6FC", VA = "0x4DE6FC")]
		protected bool ShowBloom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x4DE704", Offset = "0x4DE704", VA = "0x4DE704")]
		protected bool ShowLensFlare()
		{
			return default(bool);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x4DE70C", Offset = "0x4DE70C", VA = "0x4DE70C")]
		private bool ShowDiffractionUVScale()
		{
			return default(bool);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x4DE7AC", Offset = "0x4DE7AC", VA = "0x4DE7AC")]
		protected bool ShowBlurStrength()
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x4DE7CC", Offset = "0x4DE7CC", VA = "0x4DE7CC")]
		private bool ShowLensDirtActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x4DE7F0", Offset = "0x4DE7F0", VA = "0x4DE7F0")]
		protected bool ShowLensDirt()
		{
			return default(bool);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x4DE81C", Offset = "0x4DE81C", VA = "0x4DE81C")]
		protected bool ShowLensDirtSettings()
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x4DE8D8", Offset = "0x4DE8D8", VA = "0x4DE8D8", Slot = "4")]
		protected virtual bool ShowTonemapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x4DE8E0", Offset = "0x4DE8E0", VA = "0x4DE8E0")]
		protected bool ShowCameraMode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x4DE9C4", Offset = "0x4DE9C4", VA = "0x4DE9C4")]
		protected bool ShowExposureComp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x4DE9F4", Offset = "0x4DE9F4", VA = "0x4DE9F4")]
		protected bool ShowExposureAdaption()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x4DEA24", Offset = "0x4DEA24", VA = "0x4DEA24")]
		protected bool ShowFocalLength()
		{
			return default(bool);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x4DEA2C", Offset = "0x4DEA2C", VA = "0x4DEA2C")]
		protected bool ShowFNumber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x4DEA7C", Offset = "0x4DEA7C", VA = "0x4DEA7C")]
		protected bool ShowISO()
		{
			return default(bool);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x4DEA8C", Offset = "0x4DEA8C", VA = "0x4DEA8C")]
		protected bool ShowShutterSpeed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x4DEA9C", Offset = "0x4DEA9C", VA = "0x4DEA9C")]
		protected bool ShowDepthOfField()
		{
			return default(bool);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x4DEAA4", Offset = "0x4DEAA4", VA = "0x4DEAA4")]
		protected bool ShowPointAverage()
		{
			return default(bool);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x4DEAC8", Offset = "0x4DEAC8", VA = "0x4DEAC8")]
		protected bool ShowFocalDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x4DEAEC", Offset = "0x4DEAEC", VA = "0x4DEAEC")]
		protected bool ShowTargetTransform()
		{
			return default(bool);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x4DEB10", Offset = "0x4DEB10", VA = "0x4DEB10")]
		protected bool ShowFocalRange()
		{
			return default(bool);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x4DEB34", Offset = "0x4DEB34", VA = "0x4DEB34")]
		protected bool ShowTemporalSettings()
		{
			return default(bool);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x4DEB54", Offset = "0x4DEB54", VA = "0x4DEB54")]
		protected bool ShowCCTex1()
		{
			return default(bool);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x4DEB6C", Offset = "0x4DEB6C", VA = "0x4DEB6C")]
		protected bool ShowCCTex2()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x4DFD0C", Offset = "0x4DFD0C", VA = "0x4DFD0C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x4DFF80", Offset = "0x4DFF80", VA = "0x4DFF80")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x4DE5B4", Offset = "0x4DE5B4", VA = "0x4DE5B4", Slot = "5")]
		protected virtual void InitializePostProcessParams()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x4DFF90", Offset = "0x4DFF90", VA = "0x4DFF90")]
		protected void OnPreRender()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x4DECB8", Offset = "0x4DECB8", VA = "0x4DECB8")]
		protected bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x4E008C", Offset = "0x4E008C", VA = "0x4E008C")]
		protected void SetupPostProcessParameters(PostProcessParameters postProcessParams, RenderTexture source)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x4E0970", Offset = "0x4E0970", VA = "0x4E0970")]
		protected void SetGlobalParameters(PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x4DDE10", Offset = "0x4DDE10", VA = "0x4DDE10", Slot = "6")]
		protected virtual void SetShaderKeyWords(PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x4E0D3C", Offset = "0x4E0D3C", VA = "0x4E0D3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x4E0D74", Offset = "0x4E0D74", VA = "0x4E0D74")]
		private void UpdateParameters()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x4DE608", Offset = "0x4DE608", VA = "0x4DE608", Slot = "7")]
		protected virtual void OnRenderImage(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x4E14D4", Offset = "0x4E14D4", VA = "0x4E14D4")]
		private void StoreViewProjectionMatrix()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x4E0EB8", Offset = "0x4E0EB8", VA = "0x4E0EB8")]
		protected void PerformPostProcessing(RenderTexture source, RenderTexture dest, PostProcessParameters postProcessParams)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x4E177C", Offset = "0x4E177C", VA = "0x4E177C")]
		protected RenderTexture DepthOfFieldStep(PostProcessParameters postProcessParams, RenderTexture source)
		{
			return null;
		}
	}
	[Token(Token = "0x200027D")]
	public static class ScionUtility
	{
		[Token(Token = "0x4000B17")]
		public const float DefaultWhitePoint = 11.2f;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x1700013B")]
		public static Texture2D WhiteTexture
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x4D71F4", Offset = "0x4D71F4", VA = "0x4D71F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x4D7A30", Offset = "0x4D7A30", VA = "0x4D7A30")]
		public static float GetWhitePointMultiplier(float whitePoint)
		{
			return default(float);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x4DB700", Offset = "0x4DB700", VA = "0x4DB700")]
		public static float CoCToPixels(float widthInPixels)
		{
			return default(float);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x4E095C", Offset = "0x4E095C", VA = "0x4E095C")]
		public static float ComputeApertureDiameter(float fNumber, float focalLength)
		{
			return default(float);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x4DCBD8", Offset = "0x4DCBD8", VA = "0x4DCBD8")]
		public static float Square(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x4E0938", Offset = "0x4E0938", VA = "0x4E0938")]
		public static float GetFocalLength(float tanHalfFoV)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200027E")]
	public static class ShaderSettings
	{
		[Token(Token = "0x200027F")]
		public class IndexOption
		{
			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int curValue;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private string[] keywords;

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x4E2790", Offset = "0x4E2790", VA = "0x4E2790")]
			public IndexOption(string[] _keywords)
			{
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x4DE538", Offset = "0x4DE538", VA = "0x4DE538")]
			public void SetIndex(int index)
			{
			}

			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x4E0CB8", Offset = "0x4E0CB8", VA = "0x4E0CB8")]
			public void Disable()
			{
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x4E2848", Offset = "0x4E2848", VA = "0x4E2848")]
			public bool IsActive(int index)
			{
				return default(bool);
			}

			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x4D8998", Offset = "0x4D8998", VA = "0x4D8998")]
			public bool IsActive(string keyword)
			{
				return default(bool);
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x4E27B8", Offset = "0x4E27B8", VA = "0x4E27B8")]
			private void SetKeyword(int index)
			{
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x4E285C", Offset = "0x4E285C", VA = "0x4E285C")]
			private void DisableKeyword(int index)
			{
			}
		}

		[Token(Token = "0x4000B19")]
		public const string ExposureAutoKW = "SC_EXPOSURE_AUTO";

		[Token(Token = "0x4000B1A")]
		public const string ExposureManualKW = "SC_EXPOSURE_MANUAL";

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] ExposureKeywords;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static IndexOption ExposureSettings;

		[Token(Token = "0x4000B1D")]
		public const string DepthFocusManualKW = "SC_DOF_FOCUS_MANUAL";

		[Token(Token = "0x4000B1E")]
		public const string DepthFocusManualRangeKW = "SC_DOF_FOCUS_RANGE";

		[Token(Token = "0x4000B1F")]
		public const string DepthFocusCenterKW = "SC_DOF_FOCUS_CENTER";

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] DepthFocusKeywords;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static IndexOption DepthFocusSettings;

		[Token(Token = "0x4000B22")]
		public const string DepthOfFieldMaskOnKW = "SC_DOF_MASK_ON";

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string[] DepthOfFieldMaskKeywords;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static IndexOption DepthOfFieldMaskSettings;

		[Token(Token = "0x4000B25")]
		public const string ChromaticAberrationOnKW = "SC_CHROMATIC_ABERRATION_ON";

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string[] ChromaticAberrationKeywords;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static IndexOption ChromaticAberrationSettings;

		[Token(Token = "0x4000B28")]
		public const string LensFlareOnKW = "SC_LENS_FLARE_ON";

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string[] LensFlareKeywords;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static IndexOption LensFlareSettings;

		[Token(Token = "0x4000B2B")]
		public const string TonemappingReinhardKW = "SC_TONEMAPPING_REINHARD";

		[Token(Token = "0x4000B2C")]
		public const string TonemappingLumaReinhardKW = "SC_TONEMAPPING_LUMAREINHARD";

		[Token(Token = "0x4000B2D")]
		public const string TonemappingFilmicKW = "SC_TONEMAPPING_FILMIC";

		[Token(Token = "0x4000B2E")]
		public const string TonemappingPhotographicKW = "SC_TONEMAPPING_PHOTOGRAPHIC";

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string[] TonemappingKeywords;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static IndexOption TonemappingSettings;

		[Token(Token = "0x4000B31")]
		public const string ColorGradingOn1TexKW = "SC_COLOR_CORRECTION_1_TEX";

		[Token(Token = "0x4000B32")]
		public const string ColorGradingOn2TexKW = "SC_COLOR_CORRECTION_2_TEX";

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string[] ColorGradingKeywords;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static IndexOption ColorGradingSettings;
	}
	[Token(Token = "0x2000280")]
	public class VirtualCamera
	{
		[Token(Token = "0x4000B37")]
		public const float FilmWidth = 35f;

		[Token(Token = "0x4000B38")]
		private const float BuiltinExposureCompensation = 1f;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Material m_virtualCameraMat;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private RenderTexture m_previousExposureTexture;

		[Token(Token = "0x4000B3B")]
		private const RenderTextureFormat VCTextureFormat = RenderTextureFormat.ARGBFloat;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture m_currentResult1;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private RenderTexture m_currentResult2;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderBuffer[] renderBuffers;

		[Token(Token = "0x4000B3F")]
		public const float LIGHT_INTENSITY_MULT = 3000f;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private ComputeBuffer readBfr;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector4[] readVec;

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x4DFEA8", Offset = "0x4DFEA8", VA = "0x4DFEA8")]
		public VirtualCamera()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x4E000C", Offset = "0x4E000C", VA = "0x4E000C")]
		public bool PlatformCompatibility()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x4E28AC", Offset = "0x4E28AC", VA = "0x4E28AC")]
		private RenderTexture DownsampleTexture(RenderTexture renderTex)
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x4D762C", Offset = "0x4D762C", VA = "0x4D762C")]
		public void BindVirtualCameraTextures(Material mat)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x4D76E4", Offset = "0x4D76E4", VA = "0x4D76E4")]
		public float CalculateManualExposure(CameraParameters cameraParams, float middleGrey = 0.18f)
		{
			return default(float);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x4D8AA8", Offset = "0x4D8AA8", VA = "0x4D8AA8")]
		public void BindVirtualCameraParams(Material mat, CameraParameters cameraParams, float focalDistance, float halfResWidth, bool isFirstRender)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x4E1998", Offset = "0x4E1998", VA = "0x4E1998")]
		public void CalculateVirtualCamera(CameraParameters cameraParams, RenderTexture textureToDownsample, float halfResWidth, float tanHalfFoV, float focalDistance, bool isFirstRender)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x4E1D74", Offset = "0x4E1D74", VA = "0x4E1D74")]
		public void EndOfFrameCleanup()
		{
		}
	}
}
[Token(Token = "0x2000281")]
[ExecuteInEditMode]
public class ApplicationSettingsDiscovery : ApplicationSettings
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Camera> viewerCams;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject PicoParent;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject DefaultCameraProxy;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public PlayerComponentInfo PlayerInstance;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerComponentInfo PlayerInstance_Pico;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x382B4C", Offset = "0x382B4C", VA = "0x382B4C")]
	public ApplicationSettingsDiscovery()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x382B54", Offset = "0x382B54", VA = "0x382B54", Slot = "4")]
	public override void InitApplicationSettings()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x382B5C", Offset = "0x382B5C", VA = "0x382B5C", Slot = "5")]
	public override void ApplyConfig()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x383CAC", Offset = "0x383CAC", VA = "0x383CAC", Slot = "6")]
	public override void OnValidate()
	{
	}
}
[Token(Token = "0x2000282")]
internal class CopyDir
{
	[Token(Token = "0x2000283")]
	public class Folders
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x247370", Offset = "0x247370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247370", Offset = "0x247370")]
		private string <Source>k__BackingField;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x2473A4", Offset = "0x2473A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2473A4", Offset = "0x2473A4")]
		private string <Target>k__BackingField;

		[Token(Token = "0x1700013C")]
		public string Source
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x39BCFC", Offset = "0x39BCFC", VA = "0x39BCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248500", Offset = "0x248500")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x39BD70", Offset = "0x39BD70", VA = "0x39BD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248510", Offset = "0x248510")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public string Target
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x39BCF4", Offset = "0x39BCF4", VA = "0x39BCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248520", Offset = "0x248520")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x39BD78", Offset = "0x39BD78", VA = "0x39BD78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248530", Offset = "0x248530")]
			private set
			{
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x39BCCC", Offset = "0x39BCCC", VA = "0x39BCCC")]
		public Folders(string source, string target)
		{
		}
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x39B9AC", Offset = "0x39B9AC", VA = "0x39B9AC")]
	public CopyDir()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x38381C", Offset = "0x38381C", VA = "0x38381C")]
	public static void Copy(string sourceDirectory, string targetDirectory)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x39B9B4", Offset = "0x39B9B4", VA = "0x39B9B4")]
	public static void CopyAll(DirectoryInfo source, DirectoryInfo target)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x3838B4", Offset = "0x3838B4", VA = "0x3838B4")]
	public static void MoveDirectory(string source, string target)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x39BD04", Offset = "0x39BD04", VA = "0x39BD04")]
	public static void Main()
	{
	}
}
[Token(Token = "0x2000284")]
public class AudioPlayHelper : MonoBehaviour
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string audioName;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioObject ao;

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x384224", Offset = "0x384224", VA = "0x384224")]
	public AudioPlayHelper()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x3842C4", Offset = "0x3842C4", VA = "0x3842C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x384488", Offset = "0x384488", VA = "0x384488")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000285")]
public class ControlHelpManager : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float alpha;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float previousalpha;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Material FontMaterial;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ControlHelpManager _instance;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> disabledButtons;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<GameObject> infoObjects;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<TextMesh, string> localizationMapping;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color TextColorStart;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2473D8", Offset = "0x2473D8")]
	private static Converter<AutoBillboard, GameObject> <>f__am$cache0;

	[Token(Token = "0x1700013E")]
	public static ControlHelpManager instance
	{
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x398488", Offset = "0x398488", VA = "0x398488")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x3983CC", Offset = "0x3983CC", VA = "0x3983CC")]
	public ControlHelpManager()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x39859C", Offset = "0x39859C", VA = "0x39859C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x398F70", Offset = "0x398F70", VA = "0x398F70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x398F74", Offset = "0x398F74", VA = "0x398F74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x398BB8", Offset = "0x398BB8", VA = "0x398BB8")]
	private void UpdateInfoObjects()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x398F78", Offset = "0x398F78", VA = "0x398F78")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x3992DC", Offset = "0x3992DC", VA = "0x3992DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248540", Offset = "0x248540")]
	private static GameObject <Awake>m__0(AutoBillboard element)
	{
		return null;
	}
}
[Token(Token = "0x2000286")]
public class NetworkManagerAbstractionLayer : NetworkManager
{
	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x734F7C", Offset = "0x734F7C", VA = "0x734F7C")]
	public NetworkManagerAbstractionLayer()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x735000", Offset = "0x735000", VA = "0x735000", Slot = "33")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x735004", Offset = "0x735004", VA = "0x735004", Slot = "34")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x735008", Offset = "0x735008", VA = "0x735008", Slot = "35")]
	public virtual void Update()
	{
	}
}
[Token(Token = "0x2000287")]
public class DiscoveryNetworkManager : NetworkManagerAbstractionLayer
{
	[Token(Token = "0x2000288")]
	public delegate void ConsoleLogDelegate(string text);

	[Token(Token = "0x2000289")]
	public class MyMsgType
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static short BlockChange;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static short BlockExtChange;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static short LevelData;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static short SykSync;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static short CreateObject;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static short DestroyObject;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static short VoiceMsg;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public static short PlayerInfoMsg;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static short ServerStatus;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public static short ServerCmd;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static short LevelACK;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public static short ElectricGraphChange;

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x3AD9A4", Offset = "0x3AD9A4", VA = "0x3AD9A4")]
		public MyMsgType()
		{
		}
	}

	[Token(Token = "0x200028A")]
	public class BlockChangeMessage : MessageBase
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint blockID;

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x3ACA5C", Offset = "0x3ACA5C", VA = "0x3ACA5C")]
		public BlockChangeMessage()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x3ACA64", Offset = "0x3ACA64", VA = "0x3ACA64", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x3ACAD8", Offset = "0x3ACAD8", VA = "0x3ACAD8", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x200028B")]
	public class ElectricGraphChange : MessageBase
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint blockID;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int energyLevel;

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x3AD6DC", Offset = "0x3AD6DC", VA = "0x3AD6DC")]
		public ElectricGraphChange()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x3AD6E4", Offset = "0x3AD6E4", VA = "0x3AD6E4", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x3AD78C", Offset = "0x3AD78C", VA = "0x3AD78C", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x200028C")]
	public class BlockExtChangeMessage : MessageBase
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint blockID;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 pos;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ray ray;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RaycastHit hit;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public RaycastHit hit_sub;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool addToChunk;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool ignoreServer;

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x3ACB40", Offset = "0x3ACB40", VA = "0x3ACB40")]
		public BlockExtChangeMessage()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x3ACB48", Offset = "0x3ACB48", VA = "0x3ACB48")]
		public static RaycastHit ReadRayCastHit(NetworkReader reader)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x3ACC74", Offset = "0x3ACC74", VA = "0x3ACC74")]
		public static void WriteRayCastHit(NetworkWriter writer, RaycastHit h)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x3ACD98", Offset = "0x3ACD98", VA = "0x3ACD98", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x3ACF4C", Offset = "0x3ACF4C", VA = "0x3ACF4C", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}
	}

	[Token(Token = "0x200028D")]
	public class LevelDataMessage : MessageBase
	{
		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int position;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int length;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int completeSize;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte[] compressedData;

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x3AD828", Offset = "0x3AD828", VA = "0x3AD828")]
		public LevelDataMessage()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x3AD830", Offset = "0x3AD830", VA = "0x3AD830", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x3AD8F4", Offset = "0x3AD8F4", VA = "0x3AD8F4", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x200028E")]
	public class LevelACKMessage : MessageBase
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0x3AD820", Offset = "0x3AD820", VA = "0x3AD820")]
		public LevelACKMessage()
		{
		}
	}

	[Token(Token = "0x200028F")]
	public class SykSyncMessage : MessageBase
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double skyTime;

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x3ADD04", Offset = "0x3ADD04", VA = "0x3ADD04")]
		public SykSyncMessage()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x3ADD0C", Offset = "0x3ADD0C", VA = "0x3ADD0C", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x3ADD54", Offset = "0x3ADD54", VA = "0x3ADD54", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000290")]
	public class CreateObjectMessage : MessageBase
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int prefabIndex;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 pos;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion dir;

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x3AD508", Offset = "0x3AD508", VA = "0x3AD508")]
		public CreateObjectMessage()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x3AD510", Offset = "0x3AD510", VA = "0x3AD510", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x3AD5C0", Offset = "0x3AD5C0", VA = "0x3AD5C0", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000291")]
	public class DestroyObjectMessage : MessageBase
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NetworkInstanceId entityID;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x3AD66C", Offset = "0x3AD66C", VA = "0x3AD66C")]
		public DestroyObjectMessage()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x3AD674", Offset = "0x3AD674", VA = "0x3AD674", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x3AD6A8", Offset = "0x3AD6A8", VA = "0x3AD6A8", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000292")]
	public class VoiceMessage : MessageBase
	{
		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int connectionID;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int entityID;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sampleCount;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte[] voiceData;

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x3ADD88", Offset = "0x3ADD88", VA = "0x3ADD88")]
		public VoiceMessage()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x3ADD90", Offset = "0x3ADD90", VA = "0x3ADD90", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x3ADE54", Offset = "0x3ADE54", VA = "0x3ADE54", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000293")]
	public class PlayerInfoMessage : MessageBase
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NetworkInstanceId netId;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string playerName;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int accessoiresConfig;

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x3ADAA0", Offset = "0x3ADAA0", VA = "0x3ADAA0")]
		public PlayerInfoMessage()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x3ADAA8", Offset = "0x3ADAA8", VA = "0x3ADAA8", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x3ADB38", Offset = "0x3ADB38", VA = "0x3ADB38", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000294")]
	public class ServerStatusMessage : MessageBase
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int serverStatus;

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x3ADC94", Offset = "0x3ADC94", VA = "0x3ADC94")]
		public ServerStatusMessage()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x3ADC9C", Offset = "0x3ADC9C", VA = "0x3ADC9C", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x3ADCD0", Offset = "0x3ADCD0", VA = "0x3ADCD0", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000295")]
	public class ServerCmdMessage : MessageBase
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int serverCmd;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string parameter;

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x3ADBC0", Offset = "0x3ADBC0", VA = "0x3ADBC0")]
		public ServerCmdMessage()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x3ADBC8", Offset = "0x3ADBC8", VA = "0x3ADBC8", Slot = "5")]
		public override void Serialize(NetworkWriter writer)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x3ADC34", Offset = "0x3ADC34", VA = "0x3ADC34", Slot = "4")]
		public override void Deserialize(NetworkReader reader)
		{
		}
	}

	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FD6C", Offset = "0x23FD6C")]
	private sealed class <OnPlayerInfoMsgServer>c__AnonStorey0
	{
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal PlayerInfoMessage msg;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x3AC964", Offset = "0x3AC964", VA = "0x3AC964")]
		public <OnPlayerInfoMsgServer>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x3AC96C", Offset = "0x3AC96C", VA = "0x3AC96C")]
		internal bool <>m__0(BlockPlayerModelMotor a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FD7C", Offset = "0x23FD7C")]
	private sealed class <OnPlayerInfoMsgClient>c__AnonStorey1
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal PlayerInfoMessage msg;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x3AC86C", Offset = "0x3AC86C", VA = "0x3AC86C")]
		public <OnPlayerInfoMsgClient>c__AnonStorey1()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x3AC874", Offset = "0x3AC874", VA = "0x3AC874")]
		internal bool <>m__0(BlockPlayerModelMotor a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FD8C", Offset = "0x23FD8C")]
	private sealed class <AutomaticNetwork>c__AnonStorey2
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal System.Timers.Timer t;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal NetworkClient client;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action <>f__am$cache0;

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x3AC368", Offset = "0x3AC368", VA = "0x3AC368")]
		public <AutomaticNetwork>c__AnonStorey2()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x3AC370", Offset = "0x3AC370", VA = "0x3AC370")]
		internal void <>m__0(object source, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x3AC7B8", Offset = "0x3AC7B8", VA = "0x3AC7B8")]
		private static void <>m__1()
		{
		}
	}

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public ConsoleLogDelegate logCallback;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VoiceChat voiceChat;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public string autoServerIP;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private NWMatchMaking nwMatchMaker;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Dictionary<int, int> prefabHC2IndexMatching;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float syncTime;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Dictionary<int, int> waitForACK;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, Stream> streamQueue;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int netBuffer;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MemoryStream rcvStream;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2473E8", Offset = "0x2473E8")]
	private static Converter<NetworkConnection, int> <>f__am$cache0;

	[Token(Token = "0x1700013F")]
	public NWMatchMaking NWMatchMaker
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x3A4A10", Offset = "0x3A4A10", VA = "0x3A4A10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000140")]
	public bool IsServer
	{
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x38770C", Offset = "0x38770C", VA = "0x38770C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000141")]
	public bool IsClient
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x3A4A18", Offset = "0x3A4A18", VA = "0x3A4A18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000142")]
	public bool IsActive
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x387704", Offset = "0x387704", VA = "0x387704")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000143")]
	private List<int> ConnectionIDs
	{
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x3A6308", Offset = "0x3A6308", VA = "0x3A6308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x3A4854", Offset = "0x3A4854", VA = "0x3A4854")]
	public DiscoveryNetworkManager()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x3A4970", Offset = "0x3A4970", VA = "0x3A4970")]
	private void Log(string text)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x3A4A30", Offset = "0x3A4A30", VA = "0x3A4A30", Slot = "33")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x3A4DEC", Offset = "0x3A4DEC", VA = "0x3A4DEC", Slot = "34")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x3A4E94", Offset = "0x3A4E94", VA = "0x3A4E94", Slot = "35")]
	public override void Update()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x3A53EC", Offset = "0x3A53EC", VA = "0x3A53EC")]
	public bool SendStreamData(Stream compressedData, int connectionID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x3A6470", Offset = "0x3A6470", VA = "0x3A6470")]
	public void OnLevelData(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x3A6BEC", Offset = "0x3A6BEC", VA = "0x3A6BEC")]
	public void SendLevelACK()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x3A6CC4", Offset = "0x3A6CC4", VA = "0x3A6CC4")]
	public void OnLevelACK(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x3A6E74", Offset = "0x3A6E74", VA = "0x3A6E74", Slot = "22")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x3A7158", Offset = "0x3A7158", VA = "0x3A7158", Slot = "18")]
	public override void OnClientError(NetworkConnection conn, int errorCode)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x3A73F4", Offset = "0x3A73F4", VA = "0x3A73F4", Slot = "16")]
	public override void OnClientConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x3A7AC4", Offset = "0x3A7AC4", VA = "0x3A7AC4", Slot = "17")]
	public override void OnClientDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x3A7EF0", Offset = "0x3A7EF0", VA = "0x3A7EF0")]
	public void OnClientError(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x3A7F54", Offset = "0x3A7F54", VA = "0x3A7F54", Slot = "8")]
	public override void OnServerConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x3A826C", Offset = "0x3A826C", VA = "0x3A826C", Slot = "9")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x3A8568", Offset = "0x3A8568", VA = "0x3A8568", Slot = "14")]
	public override void OnServerError(NetworkConnection conn, int errorCode)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x3A88E0", Offset = "0x3A88E0", VA = "0x3A88E0")]
	private void instance_GameStateChanged(object sender, EventArgs<Game.GameState> e)
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x3A814C", Offset = "0x3A814C", VA = "0x3A814C")]
	private void CompressCurrentLevelAndSendToClient(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x3A5AF8", Offset = "0x3A5AF8", VA = "0x3A5AF8")]
	private void CompressCurrentLevelAndSendToClient(int connID)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x3A8B80", Offset = "0x3A8B80", VA = "0x3A8B80")]
	public void SendBlockChange(Vector3 pos, uint blockID)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x3A8C98", Offset = "0x3A8C98", VA = "0x3A8C98")]
	private void terrain_BlockChangeEvent(object sender, EventArgs<Touple<Vector3, uint>> e)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x3A8D90", Offset = "0x3A8D90", VA = "0x3A8D90")]
	public void OnBlockChangeClient(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x3A8FEC", Offset = "0x3A8FEC", VA = "0x3A8FEC")]
	public void OnBlockChangeServer(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x3A91AC", Offset = "0x3A91AC", VA = "0x3A91AC")]
	public void SendElectricGraphChange(uint blockID, Vector3 pos, int energyLevel)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x3A92FC", Offset = "0x3A92FC", VA = "0x3A92FC")]
	public void OnElectricGraphClient(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x3A94EC", Offset = "0x3A94EC", VA = "0x3A94EC")]
	public void SendBlockExtChange(uint material, Vector3 intHit, Ray ray, RaycastHit hit, RaycastHit hit_sub, bool addToChunk, bool ignoreServer)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x3A982C", Offset = "0x3A982C", VA = "0x3A982C")]
	public void OnBlockExtChangeServer(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x3A9924", Offset = "0x3A9924", VA = "0x3A9924")]
	public void OnBlockExtChangeClient(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x3A9C08", Offset = "0x3A9C08", VA = "0x3A9C08")]
	public void SendCreateObject(int prefabIndex, Vector3 pos, Quaternion dir)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x3A9D68", Offset = "0x3A9D68", VA = "0x3A9D68")]
	public void SendCreateObject(GameObject prefabGO, Vector3 pos, Quaternion dir)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x3A9E58", Offset = "0x3A9E58", VA = "0x3A9E58")]
	public void SendDestroyObject(NetworkInstanceId entityID)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x3A9F48", Offset = "0x3A9F48", VA = "0x3A9F48")]
	public void OnSkySync(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x3AA03C", Offset = "0x3AA03C", VA = "0x3AA03C")]
	public void OnCreateObject(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x3AA25C", Offset = "0x3AA25C", VA = "0x3AA25C")]
	public void OnDestroyObject(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x3AA498", Offset = "0x3AA498", VA = "0x3AA498")]
	public void OnVoiceMsgServer(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x3AA5E4", Offset = "0x3AA5E4", VA = "0x3AA5E4")]
	public void OnVoiceMsgClient(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x3AA6F8", Offset = "0x3AA6F8", VA = "0x3AA6F8")]
	public void SendPlayerInfo(PlayerLogic pl)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x3AA8A8", Offset = "0x3AA8A8", VA = "0x3AA8A8")]
	public void OnPlayerInfoMsgServer(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x3AAF50", Offset = "0x3AAF50", VA = "0x3AAF50")]
	public void OnPlayerInfoMsgClient(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x3A817C", Offset = "0x3A817C", VA = "0x3A817C")]
	public void SendServerStatus(int status)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x3AB7FC", Offset = "0x3AB7FC", VA = "0x3AB7FC")]
	public void OnServerStatus(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x3AB934", Offset = "0x3AB934", VA = "0x3AB934")]
	public void OnServerCmd(NetworkMessage netMsg)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x3ABA6C", Offset = "0x3ABA6C", VA = "0x3ABA6C")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x3ABB00", Offset = "0x3ABB00", VA = "0x3ABB00")]
	public GameObject InstantiateNetwork(GameObject go, Vector3 pos, Quaternion dir)
	{
		return null;
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x38EB60", Offset = "0x38EB60", VA = "0x38EB60")]
	public void SpawnNetwork(GameObject go)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x38EA24", Offset = "0x38EA24", VA = "0x38EA24")]
	public void DestroyNetwork(GameObject go)
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x3ABCB0", Offset = "0x3ABCB0", VA = "0x3ABCB0")]
	internal void AutomaticNetwork()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x3AC154", Offset = "0x3AC154", VA = "0x3AC154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248550", Offset = "0x248550")]
	private void <Start>m__0(byte[] data, int samples)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x3AC298", Offset = "0x3AC298", VA = "0x3AC298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248560", Offset = "0x248560")]
	private static int <get_ConnectionIDs>m__1(NetworkConnection a)
	{
		return default(int);
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x3AC2BC", Offset = "0x3AC2BC", VA = "0x3AC2BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248570", Offset = "0x248570")]
	private void <OnLevelData>m__2()
	{
	}
}
[Token(Token = "0x2000299")]
public class DiscoveryProject : Project
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EntityManager entityManager;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public List<Portal> mPortals;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EntityManager.EnvironmentBehaviorMode EnvironmentMode;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public List<uint> generatorMaterials;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string textureSet;

	[Token(Token = "0x17000144")]
	public override string CurrentFileVersion
	{
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x3AE038", Offset = "0x3AE038", VA = "0x3AE038", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x3ADF04", Offset = "0x3ADF04", VA = "0x3ADF04")]
	public DiscoveryProject()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x3ADFD8", Offset = "0x3ADFD8", VA = "0x3ADFD8", Slot = "4")]
	protected override void Init()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x3AE094", Offset = "0x3AE094", VA = "0x3AE094", Slot = "7")]
	protected override void SyncFromDataContainer(ValuesDictionary project)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x3AECE0", Offset = "0x3AECE0", VA = "0x3AECE0")]
	internal void InitDefaultGeneratorMaterials()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x3AEDF4", Offset = "0x3AEDF4", VA = "0x3AEDF4", Slot = "8")]
	protected override ValuesDictionary SyncToDataContainer()
	{
		return null;
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x3AF394", Offset = "0x3AF394", VA = "0x3AF394")]
	public void Convert(Stream projectMetaStream)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x3AF4F8", Offset = "0x3AF4F8", VA = "0x3AF4F8", Slot = "6")]
	protected override void RecursiveConvert(XElement node)
	{
	}
}
namespace Discovery
{
	[Token(Token = "0x200029A")]
	public class Terrain
	{
		[Token(Token = "0x200029B")]
		public enum EnvironmentBehaviorMode
		{
			[Token(Token = "0x4000B95")]
			EM_Static,
			[Token(Token = "0x4000B96")]
			EM_Animals
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x3A484C", Offset = "0x3A484C", VA = "0x3A484C")]
		public Terrain()
		{
		}
	}
}
namespace BlockEngine
{
	[Token(Token = "0x200029C")]
	public class BaseEntity : BlockCharacterController
	{
		[Token(Token = "0x200029D")]
		public enum EntityType
		{
			[Token(Token = "0x4000BC9")]
			Base,
			[Token(Token = "0x4000BCA")]
			Sheep,
			[Token(Token = "0x4000BCB")]
			Goat,
			[Token(Token = "0x4000BCC")]
			Fox,
			[Token(Token = "0x4000BCD")]
			Rabbit,
			[Token(Token = "0x4000BCE")]
			Beep
		}

		[Token(Token = "0x200029E")]
		public enum BehaviourFSM
		{
			[Token(Token = "0x4000BD0")]
			Idle,
			[Token(Token = "0x4000BD1")]
			InitNewTargetSearch,
			[Token(Token = "0x4000BD2")]
			Search,
			[Token(Token = "0x4000BD3")]
			Walking
		}

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Animator animator;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string mSound;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float mLastSoundTime;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float mNextSoundTime;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public BehaviourFSM mCurrentState;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] mSphereOffsets;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static int mEntityCount;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public EntityManager entityManager;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected EntityType mEntityType;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject mModel;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 mTarget;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool mHasTarget;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float mSpeed;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool flyMode;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float mTargetReactDistance;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float mTargetReactFOV;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float mSquaredDistanceThreshold;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float mSoundDistanceThreshold;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Vector3 mTargetLookAtDir;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3 mCurrentLookAtDir;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float maxPathCost;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float mAnimationSpeed;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 verticalSpeed;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool debugThis;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Vector3 mLastStuckPosition;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float mLastStuckTest;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float mStuckCheckTimer;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected float mStuckThreshold;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected Vector3 mLastJumpPosition;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected float mLastJumpTest;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected float mJumpCheckTimer;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected float mJumpThreshold;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected Chunk mCurrentChunk;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected List<PathNode> mPath;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected int mPathIndex;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Renderer mRenderer;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected float mMSec;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected int mEntityID;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static Material[] stdMaterial;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static Material[] hitMaterial;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float pushPower;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SphereCollider scol;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Rigidbody rb;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool isHit;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float mLastStateChange;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float mNextStateChange;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float lastTime;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 targetPlaneNormal;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected AStarSearch ps;

		[Token(Token = "0x17000145")]
		public static int EntityCount
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x386DE8", Offset = "0x386DE8", VA = "0x386DE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000146")]
		public EntityType Type
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x386F48", Offset = "0x386F48", VA = "0x386F48")]
			get
			{
				return default(EntityType);
			}
		}

		[Token(Token = "0x17000147")]
		public Chunk CurrentChunk
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x386F50", Offset = "0x386F50", VA = "0x386F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x386F58", Offset = "0x386F58", VA = "0x386F58")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float MSec
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x387180", Offset = "0x387180", VA = "0x387180")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x387188", Offset = "0x387188", VA = "0x387188")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public int EntityID
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x387190", Offset = "0x387190", VA = "0x387190")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x387198", Offset = "0x387198", VA = "0x387198")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public bool IsGrounded
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x3871A0", Offset = "0x3871A0", VA = "0x3871A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014B")]
		public bool IsHit
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x387BCC", Offset = "0x387BCC", VA = "0x387BCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x387BD4", Offset = "0x387BD4", VA = "0x387BD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x386980", Offset = "0x386980", VA = "0x386980")]
		public BaseEntity()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x386BC0", Offset = "0x386BC0", VA = "0x386BC0")]
		public static void PreCalcSphereOffsets()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x386F60", Offset = "0x386F60", VA = "0x386F60")]
		protected void CheckLookAtObject(Vector3 target)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x3871A8", Offset = "0x3871A8", VA = "0x3871A8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x387788", Offset = "0x387788", VA = "0x387788")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x387BBC", Offset = "0x387BBC", VA = "0x387BBC", Slot = "5")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x387BC8", Offset = "0x387BC8", VA = "0x387BC8", Slot = "6")]
		public virtual void AfterAnimationUpdate(float msec)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x387D08", Offset = "0x387D08", VA = "0x387D08", Slot = "7")]
		public virtual void OnStuck()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x387E4C", Offset = "0x387E4C", VA = "0x387E4C")]
		protected bool SearchNearestWalkable(out Vector3 nearestValid)
		{
			return default(bool);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x3881AC", Offset = "0x3881AC", VA = "0x3881AC", Slot = "8")]
		protected virtual void PlaySound()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x388344", Offset = "0x388344", VA = "0x388344", Slot = "9")]
		public virtual void UpdateEntity(float elapsedTime)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x388D34", Offset = "0x388D34", VA = "0x388D34")]
		private void SetNewTargetPos(Vector3 newTargetPos)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x3897FC", Offset = "0x3897FC", VA = "0x3897FC")]
		private bool CheckTargetReached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x388A98", Offset = "0x388A98", VA = "0x388A98")]
		protected bool InitRandomSearch(Vector3 start, float targetCost)
		{
			return default(bool);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x389944", Offset = "0x389944", VA = "0x389944")]
		protected bool InitPathSearch(Vector3 start, Vector3 target, float heuristicFactor, int steps)
		{
			return default(bool);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x389A70", Offset = "0x389A70", VA = "0x389A70")]
		protected bool InitMaterialSearch(Vector3 start, Vector3 target, List<uint> materialTargets, int steps)
		{
			return default(bool);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x388BF8", Offset = "0x388BF8", VA = "0x388BF8")]
		protected bool RunSearch(AStarSearch ps, int steps)
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x388EDC", Offset = "0x388EDC", VA = "0x388EDC")]
		protected bool FollowPath()
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x389150", Offset = "0x389150", VA = "0x389150")]
		private void MoveEntity(float msec)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x389BCC", Offset = "0x389BCC", VA = "0x389BCC", Slot = "10")]
		public new virtual string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x38A018", Offset = "0x38A018", VA = "0x38A018", Slot = "11")]
		public virtual void Save(Stream s)
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class MetaData
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int mChunkX;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mChunkZ;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int mTerrainPopulated;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float mInhabitedTime;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BaseEntity> mEntities;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string mEntityDataLegacy;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MemoryStream mEntityData;

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x38ACD8", Offset = "0x38ACD8", VA = "0x38ACD8")]
		public MetaData()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x38ADE4", Offset = "0x38ADE4", VA = "0x38ADE4")]
		internal void Load(ValuesDictionary vd)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x38C2E8", Offset = "0x38C2E8", VA = "0x38C2E8")]
		internal void Save(ValuesDictionary vd)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x38B974", Offset = "0x38B974", VA = "0x38B974")]
		internal void Load(int version, Stream s)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x38C188", Offset = "0x38C188", VA = "0x38C188")]
		internal void Save(Stream s)
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class EntityManager : NetworkBehaviour
	{
		[Token(Token = "0x20002A1")]
		public enum EnvironmentBehaviorMode
		{
			[Token(Token = "0x4000BF3")]
			EM_Static,
			[Token(Token = "0x4000BF4")]
			EM_Animals
		}

		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FD9C", Offset = "0x23FD9C")]
		private sealed class <CreateEntity>c__AnonStorey0
		{
			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal BaseEntity be;

			[Token(Token = "0x4000BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal BaseEntity.EntityType type;

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x38EB58", Offset = "0x38EB58", VA = "0x38EB58")]
			public <CreateEntity>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x38F88C", Offset = "0x38F88C", VA = "0x38F88C")]
			internal bool <>m__0(GameObject a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AIWorkerThread aiWorkerThread;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool dummyEM;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxGlobalEntities;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxChunkEntities;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxUpdated;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool forcedSave;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameObject disappearPrefab;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> entityPrefabs;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public List<BaseEntity.EntityType> spawnableEntities;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<BaseEntity> mEntities;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BlockTerrain terrain;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float mMSec;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool reset;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool pingEntitiesWithIssues;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<long, MetaData> mMetaDataIndexMap;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public EnvironmentBehaviorMode EnvironmentMode;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useThreadedSearch;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool mPaused;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool binaryStorage;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool showDebugInfo;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int gEntityID;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int currEntityUpdateIndex;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Stopwatch entityTime;

		[Token(Token = "0x1700014C")]
		public List<BaseEntity> Entities
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x38A3AC", Offset = "0x38A3AC", VA = "0x38A3AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public float MSec
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x38A3B4", Offset = "0x38A3B4", VA = "0x38A3B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014E")]
		public Dictionary<long, MetaData> MetadataIndexMap
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x38A3BC", Offset = "0x38A3BC", VA = "0x38A3BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x38A2A0", Offset = "0x38A2A0", VA = "0x38A2A0")]
		public EntityManager()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x38A3C4", Offset = "0x38A3C4", VA = "0x38A3C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x38A5C4", Offset = "0x38A5C4", VA = "0x38A5C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x38A5C8", Offset = "0x38A5C8", VA = "0x38A5C8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x38A5E0", Offset = "0x38A5E0", VA = "0x38A5E0")]
		public void Load(ValuesDictionary chunkMetaDatas)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x38B49C", Offset = "0x38B49C", VA = "0x38B49C")]
		public void Load(byte[] compressed)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x38BBE8", Offset = "0x38BBE8", VA = "0x38BBE8")]
		public byte[] Save(ValuesDictionary chunkMetaDatas)
		{
			return null;
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x38C388", Offset = "0x38C388", VA = "0x38C388")]
		private void ChunkLoadedCallback(object sender, EventArgs<Chunk> e)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x38D990", Offset = "0x38D990", VA = "0x38D990")]
		private void ChunkSavedCallback(object sender, EventArgs<Chunk> e)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x38DE1C", Offset = "0x38DE1C", VA = "0x38DE1C")]
		private void ChunkReleasedCallback(object sender, EventArgs<Chunk> e)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x38E448", Offset = "0x38E448", VA = "0x38E448")]
		public void Reset()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x38E4C8", Offset = "0x38E4C8", VA = "0x38E4C8")]
		public void RemoveEntities()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x38E8F0", Offset = "0x38E8F0", VA = "0x38E8F0")]
		public bool SpawnEntity(Vector3 pos, int spawnType)
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x38783C", Offset = "0x38783C", VA = "0x38783C")]
		internal bool RemoveEntity(BaseEntity be)
		{
			return default(bool);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x38E1FC", Offset = "0x38E1FC", VA = "0x38E1FC")]
		internal void DestroyEntity(BaseEntity be)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x38D418", Offset = "0x38D418", VA = "0x38D418")]
		private bool AddEntity(BaseEntity be, bool checkMax)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x38D01C", Offset = "0x38D01C", VA = "0x38D01C")]
		private BaseEntity CreateEntity(BaseEntity.EntityType type)
		{
			return null;
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x38AF64", Offset = "0x38AF64", VA = "0x38AF64")]
		private void ConvertOldData(string initString, Stream s)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x38CD24", Offset = "0x38CD24", VA = "0x38CD24")]
		private List<BaseEntity> CreateEntitiesFromStream(Stream initStream)
		{
			return null;
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x38EBF0", Offset = "0x38EBF0", VA = "0x38EBF0")]
		private bool CheckSynchronity()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x38EEF4", Offset = "0x38EEF4", VA = "0x38EEF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x38EF28", Offset = "0x38EF28", VA = "0x38EF28")]
		public void InternalUpdateNoCo()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x38F690", Offset = "0x38F690", VA = "0x38F690")]
		internal bool Raycast(Ray ray, out RaycastHit hitInfo, float distance, out BaseEntity entity)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x38F87C", Offset = "0x38F87C", VA = "0x38F87C")]
		private void UNetVersion()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x38F880", Offset = "0x38F880", VA = "0x38F880", Slot = "8")]
		public override bool OnSerialize(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x38F888", Offset = "0x38F888", VA = "0x38F888", Slot = "9")]
		public override void OnDeserialize(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class Fox : BaseEntity
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x38F97C", Offset = "0x38F97C", VA = "0x38F97C")]
		public Fox()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class Goat : Sheep
	{
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x38FA14", Offset = "0x38FA14", VA = "0x38FA14")]
		public Goat()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class Rabbit : BaseEntity
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x38FAD8", Offset = "0x38FAD8", VA = "0x38FAD8")]
		public Rabbit()
		{
		}
	}
}
namespace GameEvents
{
	[Token(Token = "0x20002A6")]
	public class RemoveBlock : MonoBehaviour
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject mParticleSystem;

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x3D2694", Offset = "0x3D2694", VA = "0x3D2694")]
		public RemoveBlock()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x3D269C", Offset = "0x3D269C", VA = "0x3D269C")]
		private void Start()
		{
		}
	}
}
namespace BlockEngine
{
	[Token(Token = "0x20002A7")]
	public class Sheep : BaseEntity
	{
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x38FA40", Offset = "0x38FA40", VA = "0x38FA40")]
		public Sheep()
		{
		}
	}
}
[Token(Token = "0x20002A8")]
public class SpawnScript : MonoBehaviour
{
	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BaseEntity.EntityType spawnType;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float spawnTime;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float age;

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x40B1B4", Offset = "0x40B1B4", VA = "0x40B1B4")]
	public SpawnScript()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x40B1CC", Offset = "0x40B1CC", VA = "0x40B1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x40B1D0", Offset = "0x40B1D0", VA = "0x40B1D0")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002A9")]
public class VRPlayerHide : MonoBehaviour
{
	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform bodyMesh;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform headMesh;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PlayerLogic pl;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> meshRenderer;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Camera affectedCam;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool lastCamEnabled;

	[Token(Token = "0x1700014F")]
	public Camera AffectedCam
	{
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x418234", Offset = "0x418234", VA = "0x418234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x41822C", Offset = "0x41822C", VA = "0x41822C")]
	public VRPlayerHide()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x4182EC", Offset = "0x4182EC", VA = "0x4182EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x418324", Offset = "0x418324", VA = "0x418324")]
	private void UpdateMeshRenderer()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x418794", Offset = "0x418794", VA = "0x418794")]
	public void SetPlayerLogic(PlayerLogic p)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x41879C", Offset = "0x41879C", VA = "0x41879C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x418970", Offset = "0x418970", VA = "0x418970")]
	private void OnPostRender()
	{
	}
}
[Token(Token = "0x20002AA")]
public class Floating : MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 start;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 amount;

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x3C1924", Offset = "0x3C1924", VA = "0x3C1924")]
	public Floating()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x3C19C8", Offset = "0x3C19C8", VA = "0x3C19C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x3C1A18", Offset = "0x3C1A18", VA = "0x3C1A18")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002AB")]
public class FrameScheduler : MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int frameIndex;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int frameCount;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int frameReset;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CameraClearFlags cf;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cm;

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x3C1F44", Offset = "0x3C1F44", VA = "0x3C1F44")]
	public FrameScheduler()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x3C1F64", Offset = "0x3C1F64", VA = "0x3C1F64")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x3C2014", Offset = "0x3C2014", VA = "0x3C2014")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x20002AC")]
public class Game : MonoBehaviour
{
	[Token(Token = "0x20002AD")]
	public enum GameState
	{
		[Token(Token = "0x4000C40")]
		Start,
		[Token(Token = "0x4000C41")]
		MainMenu,
		[Token(Token = "0x4000C42")]
		WorldMenu,
		[Token(Token = "0x4000C43")]
		InGame,
		[Token(Token = "0x4000C44")]
		InGame_Coop,
		[Token(Token = "0x4000C45")]
		InGame_Online,
		[Token(Token = "0x4000C46")]
		Server,
		[Token(Token = "0x4000C47")]
		Pause
	}

	[Token(Token = "0x20002AE")]
	public enum Multiplayer
	{
		[Token(Token = "0x4000C49")]
		None,
		[Token(Token = "0x4000C4A")]
		Single,
		[Token(Token = "0x4000C4B")]
		Local_Coop,
		[Token(Token = "0x4000C4C")]
		Online_Host,
		[Token(Token = "0x4000C4D")]
		Online_Client
	}

	[Token(Token = "0x20002AF")]
	public delegate void BlockModifiedHandler(uint material, Vector3 intHit, Ray ray, RaycastHit hit, RaycastHit hit_sub, bool addToChunk);

	[Token(Token = "0x20002B0")]
	public delegate void WorldFilesCallback(string[] worldFiles);

	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FDAC", Offset = "0x23FDAC")]
	private sealed class <Update>c__AnonStorey2
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MessageBox msgBox;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Game $this;

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x3C5E60", Offset = "0x3C5E60", VA = "0x3C5E60")]
		public <Update>c__AnonStorey2()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x3D2384", Offset = "0x3D2384", VA = "0x3D2384")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FDBC", Offset = "0x23FDBC")]
	private sealed class <GotoGame>c__AnonStorey3
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string projectToLoad;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Game $this;

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x3C8BC8", Offset = "0x3C8BC8", VA = "0x3C8BC8")]
		public <GotoGame>c__AnonStorey3()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x3D0154", Offset = "0x3D0154", VA = "0x3D0154")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FDCC", Offset = "0x23FDCC")]
	private sealed class <GotoGame>c__AnonStorey4
	{
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Stream compressedData;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Game $this;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x3C8BD0", Offset = "0x3C8BD0", VA = "0x3C8BD0")]
		public <GotoGame>c__AnonStorey4()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x3D01A4", Offset = "0x3D01A4", VA = "0x3D01A4")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FDDC", Offset = "0x23FDDC")]
	private sealed class <GotoMainMenu>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal NWUIButtonExtender <selectedObject>__0;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal PauseMenu pm;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal UIPanel <savingInfo>__0;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal SavingDataScreen <sds>__0;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool <realWorld>__0;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Dictionary<long, Chunk>.ValueCollection.Enumerator $locvar0;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal string <screenShotName>__1;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal Stream <screenShotStream>__1;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal BackgroundWorker <worker>__2;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal bool exitWorld;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal Game $this;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal object $current;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal bool $disposing;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal int $PC;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x3D1D54", Offset = "0x3D1D54", VA = "0x3D1D54", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x3D1D5C", Offset = "0x3D1D5C", VA = "0x3D1D5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x3CB9A8", Offset = "0x3CB9A8", VA = "0x3CB9A8")]
		[DebuggerHidden]
		public <GotoMainMenu>c__Iterator0()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x3D01F4", Offset = "0x3D01F4", VA = "0x3D01F4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x3D1D64", Offset = "0x3D1D64", VA = "0x3D1D64", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x3D1D78", Offset = "0x3D1D78", VA = "0x3D1D78", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FDEC", Offset = "0x23FDEC")]
	private sealed class <DoZIP>c__AnonStorey5
	{
		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool includeProjectData;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MemoryStream zippedStream;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Game $this;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x3CC108", Offset = "0x3CC108", VA = "0x3CC108")]
		public <DoZIP>c__AnonStorey5()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x3CF420", Offset = "0x3CF420", VA = "0x3CF420")]
		internal void <>m__0(object o, DoWorkEventArgs e)
		{
		}
	}

	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FDFC", Offset = "0x23FDFC")]
	private sealed class <GetWorldFilesAsync>c__AnonStorey6
	{
		[Token(Token = "0x20002B7")]
		private sealed class <GetWorldFilesAsync>c__AnonStorey7
		{
			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string[] files;

			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal <GetWorldFilesAsync>c__AnonStorey6 <>f__ref$6;

			[Token(Token = "0x600121D")]
			[Address(RVA = "0x3CFD44", Offset = "0x3CFD44", VA = "0x3CFD44")]
			public <GetWorldFilesAsync>c__AnonStorey7()
			{
			}

			[Token(Token = "0x600121E")]
			[Address(RVA = "0x3CFD4C", Offset = "0x3CFD4C", VA = "0x3CFD4C")]
			internal void <>m__0()
			{
			}
		}

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal WorldFilesCallback result;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Game $this;

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x3CE3AC", Offset = "0x3CE3AC", VA = "0x3CE3AC")]
		public <GetWorldFilesAsync>c__AnonStorey6()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x3CFC50", Offset = "0x3CFC50", VA = "0x3CFC50")]
		internal void <>m__0(object o, DoWorkEventArgs e)
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE0C", Offset = "0x23FE0C")]
	private sealed class <LoadAlternativeTextureSet>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string alternativetexpath;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string <localTexPath>__0;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal WWW <www>__0;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Game $this;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x3D22D8", Offset = "0x3D22D8", VA = "0x3D22D8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x3D22E0", Offset = "0x3D22E0", VA = "0x3D22E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x3CF2E0", Offset = "0x3CF2E0", VA = "0x3CF2E0")]
		[DebuggerHidden]
		public <LoadAlternativeTextureSet>c__Iterator1()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x3D1E00", Offset = "0x3D1E00", VA = "0x3D1E00", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x3D22E8", Offset = "0x3D22E8", VA = "0x3D22E8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x3D22FC", Offset = "0x3D22FC", VA = "0x3D22FC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string startingUserID;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameState startState;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameState currentState;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool StartInVR;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool LowFreeSpace;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BlockTerrain terrain;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxLiteWorldTime;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public EntityManager activeEntityManager;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sky sky;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform mainCamProxy;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera mainCam;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<Camera> cameras;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DiscoveryNetworkManager netManager;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public DiscoveryVR vrHelper;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Multiplayer multiType;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public BlockPlayerModelMotor mainPlayer;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<BlockPlayerModelMotor> allPlayers;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public MenuLogic menu;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerComponentInfo playerPrefab;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public MusicManager musicManager;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int targetFrameRate;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject cubeFragmentPrefab;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject splashEffectPrefab;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public DiscoveryProject activeProject;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<PoolableObject> preallocationObjects;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Game _instance;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float nextPlusCheck;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool pause;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<UICamera.Touch> activeTouches;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, Touple<string, string>> usedControllers;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal NWPool fragmentPool;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentTouchID;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int lastTouchX;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int counter;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public BlockModifiedHandler blockModifiedCallback;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int captureWidth;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int captureHeight;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SettingsSerializer settingsSerializer;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool compressedMode;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InGameEditor ingameEditor;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public BinaryDataContainer defaultProject;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private string textureSet;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MemoryStream zippedStream;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private MemoryStream terrainDataStream;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool transitioningToMainMenu;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string progressString;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private MemoryStream terrainDataStreamCopy;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MemoryStream projectDataStreamCopy;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	internal List<Action> dispatchedActions;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247460", Offset = "0x247460")]
	private static Predicate<BlockPlayerModelMotor> <>f__am$cache0;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247470", Offset = "0x247470")]
	private static EventHandler<SaveProgressEventArgs> <>f__mg$cache0;

	[Token(Token = "0x17000150")]
	public string StartingUserID
	{
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x3C2324", Offset = "0x3C2324", VA = "0x3C2324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000151")]
	public GameState CurrentState
	{
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x3C2544", Offset = "0x3C2544", VA = "0x3C2544")]
		get
		{
			return default(GameState);
		}
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x3C254C", Offset = "0x3C254C", VA = "0x3C254C")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public Multiplayer MultiType
	{
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x3AEDEC", Offset = "0x3AEDEC", VA = "0x3AEDEC")]
		get
		{
			return default(Multiplayer);
		}
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x3AC6D0", Offset = "0x3AC6D0", VA = "0x3AC6D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public List<BlockPlayerModelMotor> LocalPlayers
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x3C2610", Offset = "0x3C2610", VA = "0x3C2610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000154")]
	public bool DebugMode
	{
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x3B55F8", Offset = "0x3B55F8", VA = "0x3B55F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000155")]
	public static Game instance
	{
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x3AC534", Offset = "0x3AC534", VA = "0x3AC534")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	public bool Pause
	{
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x3C2794", Offset = "0x3C2794", VA = "0x3C2794")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000157")]
	public List<UICamera.Touch> ActiveTouches
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x3B59D4", Offset = "0x3B59D4", VA = "0x3B59D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000025")]
	public event EventHandler<EventArgs<GameState>> GameStateChanged
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x3C232C", Offset = "0x3C232C", VA = "0x3C232C")]
		add
		{
		}
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x3C2438", Offset = "0x3C2438", VA = "0x3C2438")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event EventHandler<EventArgs<string>> LevelLoaded
	{
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x3CB5B0", Offset = "0x3CB5B0", VA = "0x3CB5B0")]
		add
		{
		}
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x3CB6BC", Offset = "0x3CB6BC", VA = "0x3CB6BC")]
		remove
		{
		}
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x3C20DC", Offset = "0x3C20DC", VA = "0x3C20DC")]
	public Game()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x3C279C", Offset = "0x3C279C", VA = "0x3C279C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x3C2E84", Offset = "0x3C2E84", VA = "0x3C2E84")]
	private int CustomTouchCount()
	{
		return default(int);
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x3C2EFC", Offset = "0x3C2EFC", VA = "0x3C2EFC")]
	private UICamera.Touch CustomTouch(int index)
	{
		return null;
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x3C2F7C", Offset = "0x3C2F7C", VA = "0x3C2F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x3C3C54", Offset = "0x3C3C54", VA = "0x3C3C54")]
	private void Instance_OnGamepadConnected(int index, NWGamePadProxy gp)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x3C3D70", Offset = "0x3C3D70", VA = "0x3C3D70")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x3C6428", Offset = "0x3C6428", VA = "0x3C6428")]
	private void VrManager_VRStatusChanged(object sender, VRStatusEventArgs e)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x3C648C", Offset = "0x3C648C", VA = "0x3C648C")]
	private void UpdateTerrainVisibilityPerPlatform()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x3B4B98", Offset = "0x3B4B98", VA = "0x3B4B98")]
	internal void SetupCineFX()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x3C68DC", Offset = "0x3C68DC", VA = "0x3C68DC")]
	public void InitializePlayer(PlayerLogic pl)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x3C7484", Offset = "0x3C7484", VA = "0x3C7484")]
	public void CleanupPlayer(PlayerLogic pl)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x3C6180", Offset = "0x3C6180", VA = "0x3C6180")]
	public void AddPlayer(int i)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x3C7DA8", Offset = "0x3C7DA8", VA = "0x3C7DA8")]
	public void RemovePlayer(int controllerIndex)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x3C7FEC", Offset = "0x3C7FEC", VA = "0x3C7FEC")]
	private void SetupGameMode()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x3C8178", Offset = "0x3C8178", VA = "0x3C8178")]
	private void GGSetupStep1()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x3C8864", Offset = "0x3C8864", VA = "0x3C8864")]
	private void GGSetup2()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x3C89E4", Offset = "0x3C89E4", VA = "0x3C89E4")]
	public void GotoGame(string projectToLoad)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x3C3A70", Offset = "0x3C3A70", VA = "0x3C3A70")]
	public void GotoGame(Stream compressedData)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x3C8BD8", Offset = "0x3C8BD8", VA = "0x3C8BD8")]
	internal void DisconnectNetworkAll()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x3C8E38", Offset = "0x3C8E38", VA = "0x3C8E38")]
	internal void CleanupGame()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x3C5E68", Offset = "0x3C5E68", VA = "0x3C5E68")]
	internal void PauseGame(bool pause_)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x3C851C", Offset = "0x3C851C", VA = "0x3C851C")]
	internal void ShowCameraAnimation(bool showAnim_)
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x3C8F94", Offset = "0x3C8F94", VA = "0x3C8F94")]
	private void terrain_BlockDestroyEvent(object sender, EventArgs<Touple<Vector3, BlockBase>> e)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x3C9E6C", Offset = "0x3C9E6C", VA = "0x3C9E6C")]
	public void NetworkModifyBlock(uint material, Vector3 intHit, Ray ray, RaycastHit hit, RaycastHit hit_sub, bool addToChunk)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x3CAAE8", Offset = "0x3CAAE8", VA = "0x3CAAE8")]
	private void electricGraph_ConsumerSignalized(object sender, EventArgs<Triple<uint, Vector3, int>> e)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x3CA0D4", Offset = "0x3CA0D4", VA = "0x3CA0D4")]
	public Chunk ModifyBlock(uint material, Vector3 intHit, Ray ray, RaycastHit hit, RaycastHit hit_sub, bool addToChunk)
	{
		return null;
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x3C90B0", Offset = "0x3C90B0", VA = "0x3C90B0")]
	internal void CreateBrokenParts(uint mat, Vector3 pos, float spreadfactor, float lifetime, float size)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x3C78D8", Offset = "0x3C78D8", VA = "0x3C78D8")]
	public bool OpenPlayerSelection(out string uidstring, out string nickname)
	{
		return default(bool);
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x3CB7C8", Offset = "0x3CB7C8", VA = "0x3CB7C8")]
	internal void RaiseLevelLoaded()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x3CB88C", Offset = "0x3CB88C", VA = "0x3CB88C")]
	private static void ShowMemUsage()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x3C39B8", Offset = "0x3C39B8", VA = "0x3C39B8")]
	[DebuggerHidden]
	public IEnumerator GotoMainMenu(bool exitWorld, [Optional] PauseMenu pm)
	{
		return null;
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x3C39B4", Offset = "0x3C39B4", VA = "0x3C39B4")]
	private void ProcessCommandLine()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x3CB9B0", Offset = "0x3CB9B0", VA = "0x3CB9B0")]
	public static void SaveProgress(object sender, SaveProgressEventArgs e)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x3CBFA8", Offset = "0x3CBFA8", VA = "0x3CBFA8")]
	public BackgroundWorker DoZIP(MemoryStream zippedStream, bool includeProjectData)
	{
		return null;
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x3C57E8", Offset = "0x3C57E8", VA = "0x3C57E8")]
	internal void GetScreenshot(Stream fs, int width, int height, int type, bool withEffects = false, int fov = 70)
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x3C5410", Offset = "0x3C5410", VA = "0x3C5410")]
	private void SwitchToEditor(bool editmode)
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x3CC380", Offset = "0x3CC380", VA = "0x3CC380")]
	internal bool LoadProject(string projectname)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x3CD468", Offset = "0x3CD468", VA = "0x3CD468")]
	internal bool LoadProject(Stream compressedDataStream)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x3CE10C", Offset = "0x3CE10C", VA = "0x3CE10C")]
	internal bool ExistsProject(string projectname)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x3CE220", Offset = "0x3CE220", VA = "0x3CE220")]
	private void SaveProject()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x3AC6D8", Offset = "0x3AC6D8", VA = "0x3AC6D8")]
	public void AddDispatchedAction(Action a)
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x3CE270", Offset = "0x3CE270", VA = "0x3CE270")]
	public void GetWorldFilesAsync(WorldFilesCallback result)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x3CE3B4", Offset = "0x3CE3B4", VA = "0x3CE3B4")]
	public string[] GetWorldFiles()
	{
		return null;
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x3CE604", Offset = "0x3CE604", VA = "0x3CE604")]
	internal void SaveToZipStream(string pName, Stream zippedStream)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x3CEAA0", Offset = "0x3CEAA0", VA = "0x3CEAA0")]
	private string QuickSave()
	{
		return null;
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x3CD0F4", Offset = "0x3CD0F4", VA = "0x3CD0F4")]
	private void SyncFromProject()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x3CC110", Offset = "0x3CC110", VA = "0x3CC110")]
	private void SyncToProject()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x3CF1A8", Offset = "0x3CF1A8", VA = "0x3CF1A8")]
	private void ingameEditor_TextureLoaded(object sender, EventArgs<string> e)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x3CF240", Offset = "0x3CF240", VA = "0x3CF240")]
	[DebuggerHidden]
	public IEnumerator LoadAlternativeTextureSet(string alternativetexpath)
	{
		return null;
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x3CF38C", Offset = "0x3CF38C", VA = "0x3CF38C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2485A0", Offset = "0x2485A0")]
	private static bool <get_LocalPlayers>m__0(BlockPlayerModelMotor p)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002B9")]
public class AdditionalControllerInfo : MonoBehaviour
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LaserPointer lp;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform menuRT;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VRInputMap leftMain;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRInputMap rightMain;

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x38287C", Offset = "0x38287C", VA = "0x38287C")]
	public AdditionalControllerInfo()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x382884", Offset = "0x382884", VA = "0x382884")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20002BA")]
public class AudioMenu : NGUIPanelLogic
{
	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UISlider musicSlider;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UISlider soundSlider;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x383D70", Offset = "0x383D70", VA = "0x383D70")]
	public AudioMenu()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x383D78", Offset = "0x383D78", VA = "0x383D78", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x383EFC", Offset = "0x383EFC", VA = "0x383EFC")]
	public void OnMusicChanged()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x384030", Offset = "0x384030", VA = "0x384030")]
	public void OnSoundChanged()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x383E38", Offset = "0x383E38", VA = "0x383E38")]
	private void SyncAudio(AudioMenu src, AudioMenu dst)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x384164", Offset = "0x384164", VA = "0x384164", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002BB")]
public class ControlsMenu : NGUIPanelLogic
{
	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UISlider sensitivitySlider;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIToggle showCoopMarkToggle;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIToggle showPlayerNameToggle;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ToggleButtonString invertYToggle;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton changeControllerMapping;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ControlHelpManager controlHelpManager;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject vrCameraObject;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UILabel showPlayerNameLabel;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel controllerMappingLabel;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MappingMenu mappingMenu;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerLogic pLogic;

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x39ACB4", Offset = "0x39ACB4", VA = "0x39ACB4")]
	public ControlsMenu()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x39ACBC", Offset = "0x39ACBC", VA = "0x39ACBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x39AE88", Offset = "0x39AE88", VA = "0x39AE88", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x39B4A8", Offset = "0x39B4A8", VA = "0x39B4A8")]
	public void OnSensitivityChanged()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x39B5A4", Offset = "0x39B5A4", VA = "0x39B5A4")]
	internal void OnInvertY()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x39B714", Offset = "0x39B714", VA = "0x39B714")]
	public void OnShowCoopMark()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x39B7EC", Offset = "0x39B7EC", VA = "0x39B7EC")]
	public void OnShowPlayerName()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x39B8E4", Offset = "0x39B8E4", VA = "0x39B8E4")]
	public void ShowMappings()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x39B150", Offset = "0x39B150", VA = "0x39B150")]
	internal static void SyncControls(ControlsMenu src, ControlsMenu dst)
	{
	}
}
[Token(Token = "0x20002BC")]
public class DisconnectedScreen : NGUIPanelLogic
{
	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MultiplayerMenu multiplayerMenu;

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x3A1230", Offset = "0x3A1230", VA = "0x3A1230")]
	public DisconnectedScreen()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x3A1238", Offset = "0x3A1238", VA = "0x3A1238")]
	private void Start()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x3A123C", Offset = "0x3A123C", VA = "0x3A123C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x3A1240", Offset = "0x3A1240", VA = "0x3A1240", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x3A12FC", Offset = "0x3A12FC", VA = "0x3A12FC")]
	public void GoBack()
	{
	}
}
[Token(Token = "0x20002BD")]
public class DownloadDataScreen : NGUIPanelLogic
{
	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UILabel progress;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIPanel panel;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DownloadDataScreen instance;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal bool forcedBack;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool isLoadingOrSaving;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int size;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int position;

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x3B7FF4", Offset = "0x3B7FF4", VA = "0x3B7FF4")]
	public DownloadDataScreen()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x3B8008", Offset = "0x3B8008", VA = "0x3B8008", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x3B8010", Offset = "0x3B8010", VA = "0x3B8010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x3B80BC", Offset = "0x3B80BC", VA = "0x3B80BC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002BE")]
public class ExitMenu : NGUIPanelLogic
{
	[Token(Token = "0x6001240")]
	[Address(RVA = "0x3B934C", Offset = "0x3B934C", VA = "0x3B934C")]
	public ExitMenu()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x3B9354", Offset = "0x3B9354", VA = "0x3B9354")]
	public void ExitGame()
	{
	}
}
[Token(Token = "0x20002BF")]
public class GraphicsMenu : NGUIPanelLogic
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UISlider visibilitySlider;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UISlider antiAliasingSlider;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISlider bloomSlider;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIToggle shadowToggle;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIToggle sunShaftsToggle;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIToggle fogToggle;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIToggle vsyncToggle;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UIToggle cineFXToggle;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIToggle autoFadeToggle;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal int bloomIntensity;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bloomFactor;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247480", Offset = "0x247480")]
	private static Predicate<Transform> <>f__am$cache0;

	[Token(Token = "0x1700015C")]
	public bool CineFXSupported
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x3C6724", Offset = "0x3C6724", VA = "0x3C6724")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	private bool CineFXEnaled
	{
		[Token(Token = "0x6001246")]
		[Address(RVA = "0x3D2DC4", Offset = "0x3D2DC4", VA = "0x3D2DC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x3D2ACC", Offset = "0x3D2ACC", VA = "0x3D2ACC")]
	public GraphicsMenu()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x3D2ADC", Offset = "0x3D2ADC", VA = "0x3D2ADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x3D2BEC", Offset = "0x3D2BEC", VA = "0x3D2BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x3D2EB0", Offset = "0x3D2EB0", VA = "0x3D2EB0", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x3D3248", Offset = "0x3D3248", VA = "0x3D3248")]
	public void OnVisibilityChanged()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x3C744C", Offset = "0x3C744C", VA = "0x3C744C")]
	public void SetupCamPostProcess(Camera cam)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x3D324C", Offset = "0x3D324C", VA = "0x3D324C")]
	private void SetupBloom(Camera cam)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x3D3344", Offset = "0x3D3344", VA = "0x3D3344")]
	private void SetupSunShafts(Camera cam)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x3D3428", Offset = "0x3D3428", VA = "0x3D3428")]
	private void SetupCineFX(Camera cam, bool fxenabled)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x3D3504", Offset = "0x3D3504", VA = "0x3D3504")]
	public void OnBloomChanged()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x3D36CC", Offset = "0x3D36CC", VA = "0x3D36CC")]
	public void OnLightChanged()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x3D38B8", Offset = "0x3D38B8", VA = "0x3D38B8")]
	public void OnFogChanged()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x3D38EC", Offset = "0x3D38EC", VA = "0x3D38EC")]
	public void OnVSyncChanged()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x3D3920", Offset = "0x3D3920", VA = "0x3D3920")]
	public void OnSunShaftsChanged()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x3D3AAC", Offset = "0x3D3AAC", VA = "0x3D3AAC")]
	public void OnCineFXChanged()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x3D3BC0", Offset = "0x3D3BC0", VA = "0x3D3BC0")]
	private void ApplyCineFXToCams(bool enabled)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x3C67EC", Offset = "0x3C67EC", VA = "0x3C67EC")]
	public void OverrideCineFX(bool enable)
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x3D3D48", Offset = "0x3D3D48", VA = "0x3D3D48")]
	public void OnAutoFadeChanged()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x3D3E70", Offset = "0x3D3E70", VA = "0x3D3E70")]
	public void OnAntiAliasingChanged()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x3D2F7C", Offset = "0x3D2F7C", VA = "0x3D2F7C")]
	private void SyncGraphics(GraphicsMenu src, GraphicsMenu dst)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x3D4058", Offset = "0x3D4058", VA = "0x3D4058", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x3D4114", Offset = "0x3D4114", VA = "0x3D4114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248650", Offset = "0x248650")]
	private static bool <Awake>m__0(Transform a)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002C0")]
public class HUDLogic : NGUIPanelLogic
{
	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE1C", Offset = "0x23FE1C")]
	private sealed class <InitMaterialBelt>c__AnonStorey0
	{
		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MaterialButton mb;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal HUDLogic $this;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x4292E0", Offset = "0x4292E0", VA = "0x4292E0")]
		public <InitMaterialBelt>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x42BA14", Offset = "0x42BA14", VA = "0x42BA14")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE2C", Offset = "0x23FE2C")]
	private sealed class <ShowMaterialSelection>c__AnonStorey1
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MaterialButton matButTarget;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal HUDLogic $this;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x42B300", Offset = "0x42B300", VA = "0x42B300")]
		public <ShowMaterialSelection>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x42BCA8", Offset = "0x42BCA8", VA = "0x42BCA8")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject MaterialButtonPrefab;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PlayerLogic playerLogic;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal MaterialButton currentMatBut;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MaterialSelection matSelectionScreen;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SessionOverview sessionOverview;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ToggleButton[] flyToggles;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton openSessionConfig;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MenuLogic menu;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform coopHint;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private UITexture coopHint_Marker;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UILabel coopHint_Label;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal List<MaterialButton> materialButtons;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIPanel panel;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UIRoot root;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CustomInputCamera customInput;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UILabel coordInfo;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UILabel altInfo;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public UILabel timeInfo;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UILabel demoInfo;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public UIWidget materialDetails;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MaterialButton selectedMaterialButton;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UILabel materialNameInfo;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIWidget beltBackground;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject vrPanel;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int numCols;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int numRows;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float coopHintThreshold;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float fadeOutTime;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lastInput;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool fadeOutEnabled;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool showCoopMark;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<GameObject> nonVRGameObjects;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	internal int materialSelectionBut;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal int flyModeBut;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	internal int changeViewBut;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal int openSessionBut;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	internal int acceptBut;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int lastMin;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int lastAlt;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int lastX;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int lastZ;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int lastDemoTime;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	internal float matNameVisibility;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private StringReference coordStr;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private StringReference altStr;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private StringReference timeStr;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastSelectTime;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float showDuration;

	[Token(Token = "0x1700015E")]
	public List<MaterialButton> MaterialButtons
	{
		[Token(Token = "0x600125B")]
		[Address(RVA = "0x427160", Offset = "0x427160", VA = "0x427160")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015F")]
	public int MaterialSelectionBut
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x427168", Offset = "0x427168", VA = "0x427168")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600125D")]
		[Address(RVA = "0x427170", Offset = "0x427170", VA = "0x427170")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public int FlyModeBut
	{
		[Token(Token = "0x600125E")]
		[Address(RVA = "0x427270", Offset = "0x427270", VA = "0x427270")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600125F")]
		[Address(RVA = "0x427278", Offset = "0x427278", VA = "0x427278")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public int ChangeViewBut
	{
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x427378", Offset = "0x427378", VA = "0x427378")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001261")]
		[Address(RVA = "0x427380", Offset = "0x427380", VA = "0x427380")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public int OpenSessionBut
	{
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x427388", Offset = "0x427388", VA = "0x427388")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001263")]
		[Address(RVA = "0x427390", Offset = "0x427390", VA = "0x427390")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public int AcceptBut
	{
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x427398", Offset = "0x427398", VA = "0x427398")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001265")]
		[Address(RVA = "0x4273A0", Offset = "0x4273A0", VA = "0x4273A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public bool Visible
	{
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x4273A8", Offset = "0x4273A8", VA = "0x4273A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000165")]
	public int SelectedMaterialSlot
	{
		[Token(Token = "0x6001270")]
		[Address(RVA = "0x427D10", Offset = "0x427D10", VA = "0x427D10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001271")]
		[Address(RVA = "0x427E28", Offset = "0x427E28", VA = "0x427E28")]
		set
		{
		}
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x427010", Offset = "0x427010", VA = "0x427010")]
	public HUDLogic()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x4273EC", Offset = "0x4273EC", VA = "0x4273EC")]
	public void ResetControllerMapping()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x427620", Offset = "0x427620", VA = "0x427620")]
	public bool ResetLastInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x42763C", Offset = "0x42763C", VA = "0x42763C", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x427AC8", Offset = "0x427AC8", VA = "0x427AC8")]
	private void GUIMode(bool enable)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x427BC8", Offset = "0x427BC8", VA = "0x427BC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x427C00", Offset = "0x427C00", VA = "0x427C00")]
	public void ResetInput()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x427C18", Offset = "0x427C18", VA = "0x427C18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x4278C4", Offset = "0x4278C4", VA = "0x4278C4")]
	private bool languageHasMaterialsLocalized()
	{
		return default(bool);
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x428040", Offset = "0x428040", VA = "0x428040")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x4282D0", Offset = "0x4282D0", VA = "0x4282D0")]
	private void InitMaterialBelt()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x428FD8", Offset = "0x428FD8", VA = "0x428FD8")]
	internal void SyncFromProject(Project p)
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x429500", Offset = "0x429500", VA = "0x429500")]
	internal void SyncToProject(Project p)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x429658", Offset = "0x429658", VA = "0x429658")]
	private void Update()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x42A7D4", Offset = "0x42A7D4", VA = "0x42A7D4")]
	private void UpdateCoopPlayerHint(bool isCoopPlayer)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x42A964", Offset = "0x42A964", VA = "0x42A964")]
	public void ShowMaterialSelection()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x42AD98", Offset = "0x42AD98", VA = "0x42AD98")]
	public void ToggleFlyMode()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x42B5BC", Offset = "0x42B5BC", VA = "0x42B5BC")]
	internal void SetFlyMode(bool enabled)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x42B6D4", Offset = "0x42B6D4", VA = "0x42B6D4")]
	internal void NewMaterialSelected(MaterialButton mb)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x42AE04", Offset = "0x42AE04", VA = "0x42AE04")]
	public void ToggleCamMode()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x42B7F0", Offset = "0x42B7F0", VA = "0x42B7F0")]
	public void IncreaseTime1Hour()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x42B8D0", Offset = "0x42B8D0", VA = "0x42B8D0")]
	public void ChangeTime(int minutes)
	{
	}
}
[Token(Token = "0x20002C3")]
public class HUDLogic2nd : NGUIPanelLogic
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerLogic player;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private UIPanel panel;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel coordInfo;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel altInfo;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel timeInfo;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private long lastMin;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastAlt;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastX;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastZ;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool playerActive;

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x42BD88", Offset = "0x42BD88", VA = "0x42BD88")]
	public HUDLogic2nd()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x42BDA0", Offset = "0x42BDA0", VA = "0x42BDA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x42BE28", Offset = "0x42BE28", VA = "0x42BE28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x42BF30", Offset = "0x42BF30", VA = "0x42BF30")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002C4")]
public class IconRotate : MonoBehaviour
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float angle;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float stepTime;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float current;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastTime;

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x42CBE0", Offset = "0x42CBE0", VA = "0x42CBE0")]
	public IconRotate()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x42CBFC", Offset = "0x42CBFC", VA = "0x42CBFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x42CC18", Offset = "0x42CC18", VA = "0x42CC18")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002C5")]
public class JoinButton : MonoBehaviour
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal int sessionIndex;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal string ip;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ServerSelection serverSelection;

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x430138", Offset = "0x430138", VA = "0x430138")]
	public JoinButton()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x430140", Offset = "0x430140", VA = "0x430140")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x4302D0", Offset = "0x4302D0", VA = "0x4302D0")]
	private void OnHover(bool selected)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x430228", Offset = "0x430228", VA = "0x430228")]
	private void Select()
	{
	}
}
[Token(Token = "0x20002C6")]
public class LevelButton : MonoBehaviour
{
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE3C", Offset = "0x23FE3C")]
	private sealed class <LoadLevelPreview>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string previewpath;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal WWW <www>__0;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LevelButton $this;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x433CCC", Offset = "0x433CCC", VA = "0x433CCC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x433CD4", Offset = "0x433CD4", VA = "0x433CD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x4337B0", Offset = "0x4337B0", VA = "0x4337B0")]
		[DebuggerHidden]
		public <LoadLevelPreview>c__Iterator0()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x4337B8", Offset = "0x4337B8", VA = "0x4337B8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x433CDC", Offset = "0x433CDC", VA = "0x433CDC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x433CF0", Offset = "0x433CF0", VA = "0x433CF0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal int projectIndex;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal string fileName;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public WorldMenu worldMenu;

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x432D14", Offset = "0x432D14", VA = "0x432D14")]
	public LevelButton()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x432D1C", Offset = "0x432D1C", VA = "0x432D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x432E20", Offset = "0x432E20", VA = "0x432E20")]
	private void ClickMethod()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x433634", Offset = "0x433634", VA = "0x433634")]
	private void OnHover(bool selected)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x432F08", Offset = "0x432F08", VA = "0x432F08")]
	private void Select()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x433710", Offset = "0x433710", VA = "0x433710")]
	[DebuggerHidden]
	public IEnumerator LoadLevelPreview(string previewpath)
	{
		return null;
	}
}
[Token(Token = "0x20002C8")]
public class MainMenu : NGUIPanelLogic
{
	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE4C", Offset = "0x23FE4C")]
	private sealed class <InitLocalization>c__AnonStorey0
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> neededLanguages;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x436688", Offset = "0x436688", VA = "0x436688")]
		public <InitLocalization>c__AnonStorey0()
		{
		}
	}

	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE5C", Offset = "0x23FE5C")]
	private sealed class <InitLocalization>c__AnonStorey1
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int i;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal <InitLocalization>c__AnonStorey0 <>f__ref$0;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x436690", Offset = "0x436690", VA = "0x436690")]
		public <InitLocalization>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x436D24", Offset = "0x436D24", VA = "0x436D24")]
		internal bool <>m__0(string a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE6C", Offset = "0x23FE6C")]
	private sealed class <Update>c__AnonStorey2
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MessageBox msgBox;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x436A6C", Offset = "0x436A6C", VA = "0x436A6C")]
		public <Update>c__AnonStorey2()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x436DFC", Offset = "0x436DFC", VA = "0x436DFC")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIButton multplayerButton;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIButton exitButton;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton languageSelection;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel versionString;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel demoString;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextAsset materialTranslations;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string lastlanguage;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string startuplanguage;

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x433F18", Offset = "0x433F18", VA = "0x433F18")]
	public MainMenu()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x433F84", Offset = "0x433F84", VA = "0x433F84")]
	public void PlaySingle()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x43421C", Offset = "0x43421C", VA = "0x43421C")]
	public void PlayCoop()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x434314", Offset = "0x434314", VA = "0x434314")]
	public void PlayMultiplayer()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x4343D4", Offset = "0x4343D4", VA = "0x4343D4")]
	public void ShowOptions()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x434494", Offset = "0x434494", VA = "0x434494")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x434560", Offset = "0x434560", VA = "0x434560")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x434DD4", Offset = "0x434DD4", VA = "0x434DD4")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x4359EC", Offset = "0x4359EC", VA = "0x4359EC")]
	public void InitLocalization()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x436698", Offset = "0x436698", VA = "0x436698")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x43676C", Offset = "0x43676C", VA = "0x43676C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x436C14", Offset = "0x436C14", VA = "0x436C14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x436D20", Offset = "0x436D20", VA = "0x436D20")]
	public void Test()
	{
	}
}
[Token(Token = "0x20002CC")]
public class MappingMenu : NGUIPanelLogic
{
	[Token(Token = "0x20002CD")]
	public enum ActionMap
	{
		[Token(Token = "0x4000D0C")]
		None,
		[Token(Token = "0x4000D0D")]
		AddBlock,
		[Token(Token = "0x4000D0E")]
		RemoveBlock,
		[Token(Token = "0x4000D0F")]
		QuickPick,
		[Token(Token = "0x4000D10")]
		ShowMarker,
		[Token(Token = "0x4000D11")]
		MenuBack,
		[Token(Token = "0x4000D12")]
		Teleport,
		[Token(Token = "0x4000D13")]
		MaterialSelection,
		[Token(Token = "0x4000D14")]
		FlyWalk,
		[Token(Token = "0x4000D15")]
		ChangeView,
		[Token(Token = "0x4000D16")]
		ResetView,
		[Token(Token = "0x4000D17")]
		RotateLeft,
		[Token(Token = "0x4000D18")]
		RotateRight,
		[Token(Token = "0x4000D19")]
		MoveForward,
		[Token(Token = "0x4000D1A")]
		MoveBackward,
		[Token(Token = "0x4000D1B")]
		MenuAccept
	}

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ControlsMenu controlMenu;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Sprite L1_PS4;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite L2_PS4;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Sprite R1_PS4;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite R2_PS4;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Sprite L_Switch;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite ZL_Switch;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Sprite R_Switch;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite ZR_Switch;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UIButton addBlock;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIButton removeBlock;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UIButton quickPick;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIButton showMarker;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public UIButton rapidRemoveBlock;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh controllerL1;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMesh controllerL2;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh controllerR1;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMesh controllerR2;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UI2DSprite backsprite;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Sprite usSprite;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite jpSprite;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private NWUIButtonExtenderMain butExtenderMain;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, Sprite> controllerButtonIDToIconMap;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Dictionary<UIButton, ActionMap> UIButtonToActionMap;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<ActionMap, int> actionButtonMap;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	internal string[] buttonActionDesc;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color hoverColor;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NWUIButtonExtender lastClicked;

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x436E2C", Offset = "0x436E2C", VA = "0x436E2C")]
	public MappingMenu()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x43795C", Offset = "0x43795C", VA = "0x43795C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x437DAC", Offset = "0x437DAC", VA = "0x437DAC", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x437DE8", Offset = "0x437DE8", VA = "0x437DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x4386B0", Offset = "0x4386B0", VA = "0x4386B0")]
	private void SetButtonIcon(UIButton button, Sprite actualSprite)
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x438888", Offset = "0x438888", VA = "0x438888")]
	public void ChangeAssignment()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x438980", Offset = "0x438980", VA = "0x438980", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x4385E4", Offset = "0x4385E4", VA = "0x4385E4")]
	private void Reset()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x438BA4", Offset = "0x438BA4", VA = "0x438BA4")]
	private void SetActionDescriptionByButtonID(ActionMap am, string desc)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x437DE4", Offset = "0x437DE4", VA = "0x437DE4")]
	internal void OnApplyMapping()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x434F34", Offset = "0x434F34", VA = "0x434F34")]
	internal void OnLocalize()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x438A4C", Offset = "0x438A4C", VA = "0x438A4C")]
	public void ApplyMappingToPlayer(PlayerLogic pLogic)
	{
	}
}
[Token(Token = "0x20002CE")]
[ExecuteInEditMode]
public class MaterialButton : UIDragDropItem
{
	[Token(Token = "0x20002CF")]
	public delegate void SelectCallback();

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canReceiveDrag;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool selectable;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool locked;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UITexture uiTexture;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UILabel uiLabel;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public UITexture uiSelectionRectangle;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UITexture uiLockIcon;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private UIButton but;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public uint blockID;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject onUp;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject onDown;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject onLeft;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject onRight;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BetterList<MaterialButton> list;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public SelectCallback selectCallback;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SelectCallback dragStartCallback;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public SelectCallback deSelectCallback;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static MaterialButton selected;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 dragMoveCamScale;

	[Token(Token = "0x17000168")]
	public UIButton But
	{
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x438FC0", Offset = "0x438FC0", VA = "0x438FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000169")]
	public bool IsEnabled
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x439554", Offset = "0x439554", VA = "0x439554")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x439630", Offset = "0x439630", VA = "0x439630")]
		set
		{
		}
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x438EE8", Offset = "0x438EE8", VA = "0x438EE8")]
	public MaterialButton()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x439078", Offset = "0x439078", VA = "0x439078", Slot = "7")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x4292E8", Offset = "0x4292E8", VA = "0x4292E8")]
	public void SetMaterial(uint _blockID)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x4292B8", Offset = "0x4292B8", VA = "0x4292B8")]
	public void Select()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x4393F8", Offset = "0x4393F8", VA = "0x4393F8")]
	public void SetSelected()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x428178", Offset = "0x428178", VA = "0x428178")]
	public void UnSelect()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x4394C0", Offset = "0x4394C0", VA = "0x4394C0")]
	public void Lock()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x439508", Offset = "0x439508", VA = "0x439508")]
	public void UnLock()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x43970C", Offset = "0x43970C", VA = "0x43970C", Slot = "13")]
	protected override void OnClone(GameObject original)
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x439830", Offset = "0x439830", VA = "0x439830", Slot = "16")]
	protected override void OnDragDropStart()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x439E14", Offset = "0x439E14", VA = "0x439E14", Slot = "18")]
	protected override void OnDragDropRelease(GameObject surface)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x43A000", Offset = "0x43A000", VA = "0x43A000", Slot = "17")]
	protected override void OnDragDropMove(Vector2 delta)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x42AF40", Offset = "0x42AF40", VA = "0x42AF40")]
	internal GameObject GetLeft()
	{
		return null;
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x42B030", Offset = "0x42B030", VA = "0x42B030")]
	internal GameObject GetRight()
	{
		return null;
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x42B120", Offset = "0x42B120", VA = "0x42B120")]
	internal GameObject GetUp()
	{
		return null;
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x42B210", Offset = "0x42B210", VA = "0x42B210")]
	internal GameObject GetDown()
	{
		return null;
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x43A1D4", Offset = "0x43A1D4", VA = "0x43A1D4")]
	protected static Vector3 GetCenter(GameObject go)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x43A688", Offset = "0x43A688", VA = "0x43A688")]
	protected GameObject Get(Vector3 myDir, bool horizontal)
	{
		return null;
	}
}
[Token(Token = "0x20002D0")]
public class MaterialSelection : NGUIPanelLogic
{
	[Token(Token = "0x20002D1")]
	public enum IDSource
	{
		[Token(Token = "0x4000D43")]
		SelectableIDs,
		[Token(Token = "0x4000D44")]
		GeneratorIDs
	}

	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE8C", Offset = "0x23FE8C")]
	private sealed class <RelayoutScreen>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal UIPanel <panel>__0;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal UITexture <butTexture>__0;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <newNumCol>__0;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MaterialSelection $this;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x43E464", Offset = "0x43E464", VA = "0x43E464", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x43E46C", Offset = "0x43E46C", VA = "0x43E46C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x43AFC4", Offset = "0x43AFC4", VA = "0x43AFC4")]
		[DebuggerHidden]
		public <RelayoutScreen>c__Iterator0()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x43E05C", Offset = "0x43E05C", VA = "0x43E05C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x43E474", Offset = "0x43E474", VA = "0x43E474", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x43E488", Offset = "0x43E488", VA = "0x43E488", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FE9C", Offset = "0x23FE9C")]
	private sealed class <InitMaterialPage>c__AnonStorey1
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MaterialButton mb;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MaterialSelection $this;

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x43CF38", Offset = "0x43CF38", VA = "0x43CF38")]
		public <InitMaterialPage>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x43DE74", Offset = "0x43DE74", VA = "0x43DE74")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject MaterialButtonPrefab;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal MaterialButton currentMatBut;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel materialInfo;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel pageInfo;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIWidget materialBackground;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int numCols;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numRows;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	internal int startIndex;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentPage;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int maximumPage;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool hasInputFocus;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal uint selectedMaterialID;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<uint> materialSourceIDs;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal List<MaterialButton> materialButtons;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IDSource materialSource;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal EventDelegate.Callback ClickHandler;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerLogic assignedPlayer;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HUDLogic hudLogic;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal bool matNameVisibility;

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x43AE94", Offset = "0x43AE94", VA = "0x43AE94")]
	public MaterialSelection()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x43AF40", Offset = "0x43AF40", VA = "0x43AF40")]
	[DebuggerHidden]
	private IEnumerator RelayoutScreen()
	{
		return null;
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x43AFCC", Offset = "0x43AFCC", VA = "0x43AFCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x43B07C", Offset = "0x43B07C", VA = "0x43B07C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x43B5F8", Offset = "0x43B5F8", VA = "0x43B5F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x43BBA8", Offset = "0x43BBA8", VA = "0x43BBA8")]
	public void ResetAndUpdateAnchors()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x43BC58", Offset = "0x43BC58", VA = "0x43BC58", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x43BC80", Offset = "0x43BC80", VA = "0x43BC80")]
	private bool languageHasMaterialsLocalized()
	{
		return default(bool);
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x43BE28", Offset = "0x43BE28", VA = "0x43BE28", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x42B3DC", Offset = "0x42B3DC", VA = "0x42B3DC")]
	public void SelectMaterial(uint matID)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x43C3C4", Offset = "0x43C3C4", VA = "0x43C3C4")]
	private void InitMaterialPage()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x43BE38", Offset = "0x43BE38", VA = "0x43BE38")]
	private void UpdateMaterialPage(int page)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x43CF40", Offset = "0x43CF40", VA = "0x43CF40")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x43D874", Offset = "0x43D874", VA = "0x43D874")]
	public void NextPage()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x43D7C8", Offset = "0x43D7C8", VA = "0x43D7C8")]
	public void PrevPage()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x42B308", Offset = "0x42B308", VA = "0x42B308")]
	public void Close()
	{
	}
}
[Token(Token = "0x20002D4")]
public class MenuFollowLogic : MonoBehaviour
{
	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform target;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float lerpSpeed;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool autoBillboard;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 backupOffset;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float backupDistance;

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x4427C0", Offset = "0x4427C0", VA = "0x4427C0")]
	public MenuFollowLogic()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x442894", Offset = "0x442894", VA = "0x442894")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x4428B8", Offset = "0x4428B8", VA = "0x4428B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x442B34", Offset = "0x442B34", VA = "0x442B34")]
	private Vector3 CalcTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x442E10", Offset = "0x442E10", VA = "0x442E10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x443028", Offset = "0x443028", VA = "0x443028")]
	public void Reset()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D5")]
public class MenuTransition
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UIPanel startPanel;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UIPanel targetPanel;

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x445A18", Offset = "0x445A18", VA = "0x445A18")]
	public MenuTransition()
	{
	}
}
[Token(Token = "0x20002D6")]
public class MenuLogic : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	public delegate void TransitionCallback();

	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FEAC", Offset = "0x23FEAC")]
	private sealed class <AddConsole>c__AnonStorey0
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string text;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MenuLogic $this;

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x4435A8", Offset = "0x4435A8", VA = "0x4435A8")]
		public <AddConsole>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x44547C", Offset = "0x44547C", VA = "0x44547C")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FEBC", Offset = "0x23FEBC")]
	private sealed class <ShowPanel>c__AnonStorey1
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string panelName;

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x444268", Offset = "0x444268", VA = "0x444268")]
		public <ShowPanel>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x44591C", Offset = "0x44591C", VA = "0x44591C")]
		internal bool <>m__0(UIPanel p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FECC", Offset = "0x23FECC")]
	private sealed class <GetPanel>c__AnonStorey2
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string panelName;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x4449C4", Offset = "0x4449C4", VA = "0x4449C4")]
		public <GetPanel>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x44586C", Offset = "0x44586C", VA = "0x44586C")]
		internal bool <>m__0(UIPanel p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UICamera cam;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIButton backButton;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<UIPanel> panels;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UIPanel> panelStack;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<MenuTransition> backTransitions;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<UIPanel, UIPanel> backMapping;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MessageBox msgBox;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VirtualKeyboard virtualKeyboard;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UIPanel transitionScreen;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIPanel startScreen;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject assignedPlayer;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gamePadDisconnectedInfo;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UILabel console;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal NWUIButtonExtenderMain butExtenderMain;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal int backButtonID;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool forcedActive;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuLogic CurActive;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int framesSinceLastChange;

	[Token(Token = "0x1700016C")]
	public int BackButtonID
	{
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x4430D8", Offset = "0x4430D8", VA = "0x4430D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x427430", Offset = "0x427430", VA = "0x427430")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public UIPanel CurrentPanel
	{
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x4430E0", Offset = "0x4430E0", VA = "0x4430E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	public UIPanel PreviousPanel
	{
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x4431E0", Offset = "0x4431E0", VA = "0x4431E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000027")]
	public event EventHandler<EventArgs<UIPanel>> PanelChanging
	{
		[Token(Token = "0x6001300")]
		[Address(RVA = "0x4449CC", Offset = "0x4449CC", VA = "0x4449CC")]
		add
		{
		}
		[Token(Token = "0x6001301")]
		[Address(RVA = "0x444AD8", Offset = "0x444AD8", VA = "0x444AD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event EventHandler PanelChanged
	{
		[Token(Token = "0x6001302")]
		[Address(RVA = "0x444BE4", Offset = "0x444BE4", VA = "0x444BE4")]
		add
		{
		}
		[Token(Token = "0x6001303")]
		[Address(RVA = "0x444CF0", Offset = "0x444CF0", VA = "0x444CF0")]
		remove
		{
		}
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x443044", Offset = "0x443044", VA = "0x443044")]
	public MenuLogic()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x4432E0", Offset = "0x4432E0", VA = "0x4432E0")]
	public void SetUIScale(Vector3 scale)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x44347C", Offset = "0x44347C", VA = "0x44347C")]
	public void AddConsole(string text)
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x4435B0", Offset = "0x4435B0", VA = "0x4435B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x443C40", Offset = "0x443C40", VA = "0x443C40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x443E8C", Offset = "0x443E8C", VA = "0x443E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x444264", Offset = "0x444264", VA = "0x444264")]
	public void EnableButtonLogic(bool butEnabled)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x443D04", Offset = "0x443D04", VA = "0x443D04")]
	public void ShowBackButton(bool val)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x43407C", Offset = "0x43407C", VA = "0x43407C")]
	public void ShowPanel(string panelName, bool additive, TransitionCallback callBack)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x42AF08", Offset = "0x42AF08", VA = "0x42AF08")]
	public void ShowPanel(UIPanel nextPanel, bool additive, TransitionCallback callBack)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x444894", Offset = "0x444894", VA = "0x444894")]
	public UIPanel GetPanel(string panelName)
	{
		return null;
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x444480", Offset = "0x444480", VA = "0x444480")]
	public void ShowPanelDirect(UIPanel nextPanel, bool additive)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x444DFC", Offset = "0x444DFC", VA = "0x444DFC")]
	private void UpdateBackButton(UIPanel nextPanel)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x43D920", Offset = "0x43D920", VA = "0x43D920")]
	public void GoBack()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x445184", Offset = "0x445184", VA = "0x445184")]
	public void ClearPanelStack()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x443B34", Offset = "0x443B34", VA = "0x443B34")]
	private void RefreshPanelList()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x445358", Offset = "0x445358", VA = "0x445358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248720", Offset = "0x248720")]
	private void <Awake>m__0(UIPanel p)
	{
	}
}
[Token(Token = "0x20002DB")]
public class MessageBox : NGUIPanelLogic
{
	[Token(Token = "0x20002DC")]
	public delegate void ButtonFunction();

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ButtonFunction okCallback;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UILabel caption;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel msgBody;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel okButtonText;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton okButton;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIButton cancelButton;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UITexture progressWheel;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool backEnabled;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool okOnlyMode;

	[Token(Token = "0x1700016F")]
	public bool OkOnlyMode
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x445A30", Offset = "0x445A30", VA = "0x445A30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001317")]
		[Address(RVA = "0x436A74", Offset = "0x436A74", VA = "0x436A74")]
		set
		{
		}
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x445A20", Offset = "0x445A20", VA = "0x445A20")]
	public MessageBox()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x445A38", Offset = "0x445A38", VA = "0x445A38")]
	public void Ok()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x445C70", Offset = "0x445C70", VA = "0x445C70")]
	public void Cancel()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x445D1C", Offset = "0x445D1C", VA = "0x445D1C", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x445DE0", Offset = "0x445DE0", VA = "0x445DE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x445D40", Offset = "0x445D40", VA = "0x445D40")]
	private void ResetDefaultMode()
	{
	}
}
[Token(Token = "0x20002DD")]
public class MultiplayerMenu : NGUIPanelLogic
{
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FEDC", Offset = "0x23FEDC")]
	private sealed class <matchMaker_SessionError>c__AnonStorey0
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EventArgs<Touple<string, bool>> e;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action <>f__am$cache0;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x4472A8", Offset = "0x4472A8", VA = "0x4472A8")]
		public <matchMaker_SessionError>c__AnonStorey0()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x44B524", Offset = "0x44B524", VA = "0x44B524")]
		internal void <>m__0()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x44BD6C", Offset = "0x44BD6C", VA = "0x44BD6C")]
		private static void <>m__1()
		{
		}
	}

	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FEEC", Offset = "0x23FEEC")]
	private sealed class <matchMaker_SessionInvite>c__AnonStorey1
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object p1;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x44748C", Offset = "0x44748C", VA = "0x44748C")]
		public <matchMaker_SessionInvite>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x44BE40", Offset = "0x44BE40", VA = "0x44BE40")]
		internal void <>m__0()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x44BF60", Offset = "0x44BF60", VA = "0x44BF60")]
		internal void <>m__1()
		{
		}
	}

	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FEFC", Offset = "0x23FEFC")]
	private sealed class <matchMaker_MemberLeft>c__AnonStorey2
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EventArgs<NWMember> e;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x447890", Offset = "0x447890", VA = "0x447890")]
		public <matchMaker_MemberLeft>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x44B1B0", Offset = "0x44B1B0", VA = "0x44B1B0")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF0C", Offset = "0x23FF0C")]
	private sealed class <matchMaker_MemberJoined>c__AnonStorey3
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EventArgs<NWMember> e;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x4479C4", Offset = "0x4479C4", VA = "0x4479C4")]
		public <matchMaker_MemberJoined>c__AnonStorey3()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x44AE3C", Offset = "0x44AE3C", VA = "0x44AE3C")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF1C", Offset = "0x23FF1C")]
	private sealed class <CreateSession>c__AnonStorey6
	{
		[Token(Token = "0x20002E3")]
		private sealed class <CreateSession>c__AnonStorey4
		{
			[Token(Token = "0x20002E4")]
			private sealed class <CreateSession>c__AnonStorey5
			{
				[Token(Token = "0x4000D96")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				internal bool authorized;

				[Token(Token = "0x4000D97")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				internal <CreateSession>c__AnonStorey6 <>f__ref$6;

				[Token(Token = "0x600134D")]
				[Address(RVA = "0x44A814", Offset = "0x44A814", VA = "0x44A814")]
				public <CreateSession>c__AnonStorey5()
				{
				}

				[Token(Token = "0x600134E")]
				[Address(RVA = "0x44A81C", Offset = "0x44A81C", VA = "0x44A81C")]
				internal void <>m__0()
				{
				}
			}

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int restriction;

			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal <CreateSession>c__AnonStorey6 <>f__ref$6;

			[Token(Token = "0x600134A")]
			[Address(RVA = "0x44A5A0", Offset = "0x44A5A0", VA = "0x44A5A0")]
			public <CreateSession>c__AnonStorey4()
			{
			}

			[Token(Token = "0x600134B")]
			[Address(RVA = "0x44A5A8", Offset = "0x44A5A8", VA = "0x44A5A8")]
			internal void <>m__0()
			{
			}

			[Token(Token = "0x600134C")]
			[Address(RVA = "0x44A6E4", Offset = "0x44A6E4", VA = "0x44A6E4")]
			internal void <>m__1(bool authorized)
			{
			}
		}

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SessionCreatedCallback cb;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x4483FC", Offset = "0x4483FC", VA = "0x4483FC")]
		public <CreateSession>c__AnonStorey6()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x44A474", Offset = "0x44A474", VA = "0x44A474")]
		internal void <>m__0(int restriction)
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF2C", Offset = "0x23FF2C")]
	private sealed class <AddConsole>c__AnonStorey7
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string text;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x4495E0", Offset = "0x4495E0", VA = "0x4495E0")]
		public <AddConsole>c__AnonStorey7()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x44A084", Offset = "0x44A084", VA = "0x44A084")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF3C", Offset = "0x23FF3C")]
	private sealed class <EditIP>c__AnonStorey8
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VirtualKeyboard keyboard;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MultiplayerMenu $this;

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x449E68", Offset = "0x449E68", VA = "0x449E68")]
		public <EditIP>c__AnonStorey8()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x44ABE8", Offset = "0x44ABE8", VA = "0x44ABE8")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NetworkManagerHUD managerHud;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ServerSelection serverSelection;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIPanel onlineServicePanel;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIButton startServer;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton joinServer;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIButton createSession;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton findSession;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UIButton leaveSession;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel ipLabel;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UILabel console;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NWMatchMaking matchMaker;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject debugConsole;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIToggle consoleToggle;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerMenu instance;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ConnectionConfig config;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool createSessionPending;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2474F8", Offset = "0x2474F8")]
	private static Action <>f__am$cache0;

	[Token(Token = "0x17000170")]
	public ConnectionConfig Config
	{
		[Token(Token = "0x6001322")]
		[Address(RVA = "0x4469C8", Offset = "0x4469C8", VA = "0x4469C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001323")]
		[Address(RVA = "0x4469D0", Offset = "0x4469D0", VA = "0x4469D0")]
		set
		{
		}
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x44694C", Offset = "0x44694C", VA = "0x44694C")]
	public MultiplayerMenu()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x4469D8", Offset = "0x4469D8", VA = "0x4469D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x447174", Offset = "0x447174", VA = "0x447174")]
	private void matchMaker_SessionError(object sender, EventArgs<Touple<string, bool>> e)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x4472B0", Offset = "0x4472B0", VA = "0x4472B0")]
	private void matchMaker_SessionInvite(object sender, EventArgs<object> e)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x44775C", Offset = "0x44775C", VA = "0x44775C")]
	private void ExecuteSessionInvite(object p1)
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x447760", Offset = "0x447760", VA = "0x447760")]
	private void matchMaker_SessionPlayTogether(object sender, EventArgs<object> e)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x447764", Offset = "0x447764", VA = "0x447764")]
	private void matchMaker_MemberLeft(object sender, EventArgs<NWMember> e)
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x447898", Offset = "0x447898", VA = "0x447898")]
	private void matchMaker_MemberJoined(object sender, EventArgs<NWMember> e)
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x4479CC", Offset = "0x4479CC", VA = "0x4479CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x447494", Offset = "0x447494", VA = "0x447494")]
	public void LeaveSessionConfirmation(MessageBox.ButtonFunction bf)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x448290", Offset = "0x448290", VA = "0x448290")]
	public void CreateSession([Optional] SessionCreatedCallback cb)
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x448404", Offset = "0x448404", VA = "0x448404")]
	public void FindSession()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x448758", Offset = "0x448758", VA = "0x448758")]
	public void LeaveSession()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x44882C", Offset = "0x44882C", VA = "0x44882C")]
	public void InviteFriend()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x4488FC", Offset = "0x4488FC", VA = "0x4488FC")]
	private void matchMaker_SessionsFound(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x448DF4", Offset = "0x448DF4", VA = "0x448DF4")]
	private void matchMaker_SessionJoined(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x448ED0", Offset = "0x448ED0", VA = "0x448ED0")]
	private void matchMaker_SessionsUpdated(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x448F34", Offset = "0x448F34", VA = "0x448F34")]
	private void matchMaker_SessionCreate(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x44937C", Offset = "0x44937C", VA = "0x44937C")]
	private void matchMaker_SessionLeft(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x448CC8", Offset = "0x448CC8", VA = "0x448CC8")]
	public void AddConsole(string text)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x4495E8", Offset = "0x4495E8", VA = "0x4495E8")]
	public void StartServer()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x4497F8", Offset = "0x4497F8", VA = "0x4497F8")]
	public void JoinServer()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x449C28", Offset = "0x449C28", VA = "0x449C28")]
	public void EditIP()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x449E70", Offset = "0x449E70", VA = "0x449E70")]
	public bool CheckIP(string ip)
	{
		return default(bool);
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x449EF8", Offset = "0x449EF8", VA = "0x449EF8")]
	public void ToggleDebugConsole()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x449F4C", Offset = "0x449F4C", VA = "0x449F4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248730", Offset = "0x248730")]
	private void <matchMaker_SessionJoined>m__0()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x449FB0", Offset = "0x449FB0", VA = "0x449FB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248740", Offset = "0x248740")]
	private static void <matchMaker_SessionLeft>m__1()
	{
	}
}
[Token(Token = "0x20002E7")]
public class NotificationPopup : MonoBehaviour
{
	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fadeTime;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float startTime;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float showDuration;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIPanel panel;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel caption;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel body;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NotificationPopup _instance;

	[Token(Token = "0x17000171")]
	public static NotificationPopup instance
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x735950", Offset = "0x735950", VA = "0x735950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x735940", Offset = "0x735940", VA = "0x735940")]
	public NotificationPopup()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x735A64", Offset = "0x735A64", VA = "0x735A64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x735B40", Offset = "0x735B40", VA = "0x735B40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x735C7C", Offset = "0x735C7C", VA = "0x735C7C")]
	public void Show(string captiontext, string bodytext, float duration)
	{
	}
}
[Token(Token = "0x20002E8")]
public class NWUIButtonExtender : MonoBehaviour
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool hovered;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	internal bool noNavigation;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private UIBasicSprite sprite;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private UIButton button;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NWUIButtonExtender left;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NWUIButtonExtender right;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NWUIButtonExtender up;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public NWUIButtonExtender down;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NWUIButtonExtender onClick;

	[Token(Token = "0x17000172")]
	public UIButton Button
	{
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x72E4C8", Offset = "0x72E4C8", VA = "0x72E4C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x72E4C0", Offset = "0x72E4C0", VA = "0x72E4C0")]
	public NWUIButtonExtender()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x72E4D0", Offset = "0x72E4D0", VA = "0x72E4D0")]
	public void Init()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x72E684", Offset = "0x72E684", VA = "0x72E684")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002E9")]
public class NWUIButtonExtenderMain : MonoBehaviour
{
	[Token(Token = "0x20002EA")]
	public enum ActiveControlType
	{
		[Token(Token = "0x4000DBB")]
		GamePad_Keyboard,
		[Token(Token = "0x4000DBC")]
		Pointer
	}

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NWUIButtonExtender selectedButExt;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private UIPopupList puList;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<UIButton> buttons;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UIPanel> panels;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MenuLogic menuLogic;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int gamePadIndex;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Dictionary<UIPanel, List<UIButton>> panel2ButtonMapping;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<UIButton, UIPanel> button2PanelMapping;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Dictionary<UIPanel, UIButton> panel2DefaultButtonMapping;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UIPanel> panelLeafs;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<GameObject> hoveredWidgets;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int clickButtonID;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247508", Offset = "0x247508")]
	private static Predicate<UIPanel> <>f__am$cache0;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247518", Offset = "0x247518")]
	private static Predicate<UIPanel> <>f__am$cache1;

	[Token(Token = "0x17000173")]
	public NWUIButtonExtender Current
	{
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x72E7E4", Offset = "0x72E7E4", VA = "0x72E7E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x72E7EC", Offset = "0x72E7EC", VA = "0x72E7EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public List<GameObject> HoveredWidgets
	{
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x72ED80", Offset = "0x72ED80", VA = "0x72ED80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000175")]
	public ActiveControlType CurrentControlType
	{
		[Token(Token = "0x6001360")]
		[Address(RVA = "0x72ED88", Offset = "0x72ED88", VA = "0x72ED88")]
		get
		{
			return default(ActiveControlType);
		}
	}

	[Token(Token = "0x17000176")]
	public int ClickButtonID
	{
		[Token(Token = "0x6001367")]
		[Address(RVA = "0x730EF8", Offset = "0x730EF8", VA = "0x730EF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x730F00", Offset = "0x730F00", VA = "0x730F00")]
		set
		{
		}
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x72E688", Offset = "0x72E688", VA = "0x72E688")]
	public NWUIButtonExtenderMain()
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x72EF50", Offset = "0x72EF50", VA = "0x72EF50")]
	private void Start()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x730CF0", Offset = "0x730CF0", VA = "0x730CF0")]
	private void Instance_VRStatusChanging(object sender, VRStatusEventArgs e)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x730388", Offset = "0x730388", VA = "0x730388")]
	private void SelectNewDefault()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x72E8AC", Offset = "0x72E8AC", VA = "0x72E8AC")]
	public void Select(GameObject go, bool assertInPanel = true)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x730D44", Offset = "0x730D44", VA = "0x730D44")]
	private void MenuLogic_PanelChanging(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x730E60", Offset = "0x730E60", VA = "0x730E60")]
	private void MenuLogic_PanelChanged(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x730F08", Offset = "0x730F08", VA = "0x730F08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x730F0C", Offset = "0x730F0C", VA = "0x730F0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x730F10", Offset = "0x730F10", VA = "0x730F10")]
	private void Update()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x731ED4", Offset = "0x731ED4", VA = "0x731ED4")]
	private static bool IsActive(NWUIButtonExtender ext)
	{
		return default(bool);
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x73204C", Offset = "0x73204C", VA = "0x73204C")]
	public NWUIButtonExtender Get(NWUIButtonExtender start, Vector3 myDir, float x = 1f, float y = 1f)
	{
		return null;
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x732698", Offset = "0x732698", VA = "0x732698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248750", Offset = "0x248750")]
	private static bool <SelectNewDefault>m__0(UIPanel a)
	{
		return default(bool);
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x7326E4", Offset = "0x7326E4", VA = "0x7326E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248760", Offset = "0x248760")]
	private static bool <SelectNewDefault>m__1(UIPanel a)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002EB")]
public class OptionsMenu : NGUIPanelLogic
{
	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIButton vrToggle;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private UILabel vrToggleText;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton vrSettings;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIButton graphicsButton;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton audioButton;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIButton controlsButton;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIRoot uiRoot;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247528", Offset = "0x247528")]
	private static Predicate<Transform> <>f__am$cache0;

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x3F3AB0", Offset = "0x3F3AB0", VA = "0x3F3AB0")]
	public OptionsMenu()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x3F3AB8", Offset = "0x3F3AB8", VA = "0x3F3AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x3F4020", Offset = "0x3F4020", VA = "0x3F4020")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x3F40DC", Offset = "0x3F40DC", VA = "0x3F40DC")]
	private void instance_VRStatusChanged(object sender, VRStatusEventArgs e)
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x3F4200", Offset = "0x3F4200", VA = "0x3F4200", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x3F42B4", Offset = "0x3F42B4", VA = "0x3F42B4")]
	public void ShowGraphics()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x3F4370", Offset = "0x3F4370", VA = "0x3F4370")]
	public void ShowAudio()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x3F442C", Offset = "0x3F442C", VA = "0x3F442C")]
	public void ShowControls()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x3F44E8", Offset = "0x3F44E8", VA = "0x3F44E8")]
	public void ShowAccount()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x3F45A4", Offset = "0x3F45A4", VA = "0x3F45A4")]
	public void OnToggleVR()
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x3F46E4", Offset = "0x3F46E4", VA = "0x3F46E4")]
	public void ShowVRSettings()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x3F47A0", Offset = "0x3F47A0", VA = "0x3F47A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248770", Offset = "0x248770")]
	private static bool <Awake>m__0(Transform a)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002EC")]
public class PauseMenu : NGUIPanelLogic
{
	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIButton saveButton;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIButton backToMainButton;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton exitButton;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel saveAndExitLabel;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject vrBackground;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private HUDLogic hud;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x247538", Offset = "0x247538")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x247538", Offset = "0x247538")]
	private bool <InPauseMenu>k__BackingField;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24756C", Offset = "0x24756C")]
	private static Action<VRModelInfo> <>f__am$cache0;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24757C", Offset = "0x24757C")]
	private static Action<VRModelInfo> <>f__am$cache1;

	[Token(Token = "0x17000177")]
	public bool InPauseMenu
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x3F57EC", Offset = "0x3F57EC", VA = "0x3F57EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248780", Offset = "0x248780")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x3F57F4", Offset = "0x3F57F4", VA = "0x3F57F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248790", Offset = "0x248790")]
		private set
		{
		}
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x3F57E4", Offset = "0x3F57E4", VA = "0x3F57E4")]
	public PauseMenu()
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x3F57FC", Offset = "0x3F57FC", VA = "0x3F57FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x3F58A8", Offset = "0x3F58A8", VA = "0x3F58A8", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x3F5F7C", Offset = "0x3F5F7C", VA = "0x3F5F7C")]
	public void Save()
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x3F6084", Offset = "0x3F6084", VA = "0x3F6084")]
	public void GotoMain()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x3F61AC", Offset = "0x3F61AC", VA = "0x3F61AC")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x3F6290", Offset = "0x3F6290", VA = "0x3F6290")]
	public void ShowOptions()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x3F6384", Offset = "0x3F6384", VA = "0x3F6384")]
	public void Continue()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x3F63C4", Offset = "0x3F63C4", VA = "0x3F63C4", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x3F66D0", Offset = "0x3F66D0", VA = "0x3F66D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2487A0", Offset = "0x2487A0")]
	private static void <OnFocusChanged>m__0(VRModelInfo a)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x3F68D4", Offset = "0x3F68D4", VA = "0x3F68D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2487B0", Offset = "0x2487B0")]
	private static void <OnBack>m__1(VRModelInfo a)
	{
	}
}
[Token(Token = "0x20002ED")]
public class PlayerButton : MonoBehaviour
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal int playerIndex;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal string playerName;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal int onlineID;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SessionOverview sessionOverview;

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x3F83D4", Offset = "0x3F83D4", VA = "0x3F83D4")]
	public PlayerButton()
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x3F83DC", Offset = "0x3F83DC", VA = "0x3F83DC")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x3F8734", Offset = "0x3F8734", VA = "0x3F8734")]
	private void OnHover(bool selected)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x3F84C4", Offset = "0x3F84C4", VA = "0x3F84C4")]
	private void Select()
	{
	}
}
[Token(Token = "0x20002EE")]
public class RTUIHelper : MonoBehaviour
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public NWUIButtonExtenderMain referencedUI;

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x4D12E4", Offset = "0x4D12E4", VA = "0x4D12E4")]
	public RTUIHelper()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x4D12EC", Offset = "0x4D12EC", VA = "0x4D12EC")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20002EF")]
public class SavingDataScreen : NGUIPanelLogic
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UILabel progress;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BlockTerrain terrain;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Stopwatch watch;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool saveMode;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int backupMDMS;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	internal bool forcedBack;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	internal bool waitingForProject;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SavingDataScreen savingInstance;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static SavingDataScreen loadingInstance;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraClearFlags ccf;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastLoadProgress;

	[Token(Token = "0x17000178")]
	public static SavingDataScreen SavingInstance
	{
		[Token(Token = "0x6001390")]
		[Address(RVA = "0x4D3054", Offset = "0x4D3054", VA = "0x4D3054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000179")]
	public static SavingDataScreen LoadingInstance
	{
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x4D30B8", Offset = "0x4D30B8", VA = "0x4D30B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x4D2FC8", Offset = "0x4D2FC8", VA = "0x4D2FC8")]
	public SavingDataScreen()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x4D311C", Offset = "0x4D311C", VA = "0x4D311C", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x4D3124", Offset = "0x4D3124", VA = "0x4D3124")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x4D368C", Offset = "0x4D368C", VA = "0x4D368C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x4D3A64", Offset = "0x4D3A64", VA = "0x4D3A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x4D4C68", Offset = "0x4D4C68", VA = "0x4D4C68")]
	public void Init()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x4D4B2C", Offset = "0x4D4B2C", VA = "0x4D4B2C")]
	private bool LoadingTerrain(int steps)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002F0")]
public class SelectionLogic : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UITexture selectionTexture;

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x402F38", Offset = "0x402F38", VA = "0x402F38")]
	public SelectionLogic()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x402F40", Offset = "0x402F40", VA = "0x402F40")]
	private void OnSelect(bool selected)
	{
	}
}
[Token(Token = "0x20002F1")]
public class ServerSelection : NGUIPanelLogic
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MultiplayerMenu multiplayerMenu;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UILabel pageInfo;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel availSpaceInfo;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel levelName;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel ip;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIButton joinButton;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<UIButton> slotList;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<UILabel> slotListLabels;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<NWSessionInfo> sessionList;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentPageIndex;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int maximumPageIndex;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal int selectedProjectIndex;

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x402F94", Offset = "0x402F94", VA = "0x402F94")]
	public ServerSelection()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x402FA4", Offset = "0x402FA4", VA = "0x402FA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x4031A4", Offset = "0x4031A4", VA = "0x4031A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x40334C", Offset = "0x40334C", VA = "0x40334C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x403434", Offset = "0x403434", VA = "0x403434", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x403440", Offset = "0x403440", VA = "0x403440")]
	internal void RefreshList()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x403298", Offset = "0x403298", VA = "0x403298")]
	public void GoLeft()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x4032AC", Offset = "0x4032AC", VA = "0x4032AC")]
	public void GoRight()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x4039EC", Offset = "0x4039EC", VA = "0x4039EC")]
	public void JoinSession()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x403D68", Offset = "0x403D68", VA = "0x403D68", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002F2")]
public class SessionOverview : NGUIPanelLogic
{
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF4C", Offset = "0x23FF4C")]
	private sealed class <FocusOnPlayer>c__AnonStorey0
	{
		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string name;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x4052F8", Offset = "0x4052F8", VA = "0x4052F8")]
		public <FocusOnPlayer>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x405CC0", Offset = "0x405CC0", VA = "0x405CC0")]
		internal bool <>m__0(BlockPlayerModelMotor player)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF5C", Offset = "0x23FF5C")]
	private sealed class <OnBack>c__AnonStorey1
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal NWMatchMaking matchmaker;

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x405CB8", Offset = "0x405CB8", VA = "0x405CB8")]
		public <OnBack>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x405D90", Offset = "0x405D90", VA = "0x405D90")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera playerVizCam;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UILabel pageInfo;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton inviteButton;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIButton kickButton;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton teleportButton;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UILabel playerName;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel onlineID;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<UIButton> slotList;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> sessionMembers;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<UILabel> slotListLabels;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentPageIndex;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maximumPageIndex;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MenuLogic menulogic;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal int selectedPlayerIndex;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject selectedPlayer;

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x403EB0", Offset = "0x403EB0", VA = "0x403EB0")]
	public SessionOverview()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x403EC0", Offset = "0x403EC0", VA = "0x403EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x404130", Offset = "0x404130", VA = "0x404130")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x4042DC", Offset = "0x4042DC", VA = "0x4042DC", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x404FA8", Offset = "0x404FA8", VA = "0x404FA8")]
	internal void FocusOnPlayer(string name)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x405300", Offset = "0x405300", VA = "0x405300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x4054B8", Offset = "0x4054B8", VA = "0x4054B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x405508", Offset = "0x405508", VA = "0x405508")]
	public void InviteFriend()
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x40467C", Offset = "0x40467C", VA = "0x40467C")]
	internal void RefreshList()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x404228", Offset = "0x404228", VA = "0x404228")]
	public void GoLeft()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x40423C", Offset = "0x40423C", VA = "0x40423C")]
	public void GoRight()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x405614", Offset = "0x405614", VA = "0x405614")]
	public void KickPlayer()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x4056F4", Offset = "0x4056F4", VA = "0x4056F4")]
	public void TeleportToPlayer()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x405918", Offset = "0x405918", VA = "0x405918", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002F5")]
public class SpriteTweenColor : MonoBehaviour
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color StartColor;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color EndColor;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float phase;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private SpriteRenderer sr;

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x410A44", Offset = "0x410A44", VA = "0x410A44")]
	public SpriteTweenColor()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x410A54", Offset = "0x410A54", VA = "0x410A54")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x410B28", Offset = "0x410B28", VA = "0x410B28")]
	private void FixedUpdate()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F6")]
public class ToggleButtonConfig
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Texture texture;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Rect rect;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x411A5C", Offset = "0x411A5C", VA = "0x411A5C")]
	public ToggleButtonConfig()
	{
	}
}
[Token(Token = "0x20002F7")]
public class ToggleButton : MonoBehaviour
{
	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal int toggleIndex;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UITexture contentTex;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UITexture defaultTex;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ToggleButtonConfig> buttonTextures;

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x4117B0", Offset = "0x4117B0", VA = "0x4117B0")]
	public ToggleButton()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x411844", Offset = "0x411844", VA = "0x411844")]
	public void Toggle()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x4118D8", Offset = "0x4118D8", VA = "0x4118D8")]
	public void SetToggleIndex(int index)
	{
	}
}
[Token(Token = "0x20002F8")]
public class ToggleButtonString : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	public delegate void MethodCallback();

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<string> values;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int defaultIndex;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UILabel label;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIButton button;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int currentIndex;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MethodCallback toggleCallback;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mStarted;

	[Token(Token = "0x1700017A")]
	public int CurrentIndex
	{
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x407BA4", Offset = "0x407BA4", VA = "0x407BA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x407BAC", Offset = "0x407BAC", VA = "0x407BAC")]
		set
		{
		}
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x411A64", Offset = "0x411A64", VA = "0x411A64")]
	public ToggleButtonString()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x411A6C", Offset = "0x411A6C", VA = "0x411A6C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x411D6C", Offset = "0x411D6C", VA = "0x411D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x411E64", Offset = "0x411E64", VA = "0x411E64")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x411D7C", Offset = "0x411D7C", VA = "0x411D7C")]
	private void OnLocalize()
	{
	}
}
[Token(Token = "0x20002FA")]
public class VirtualKeyboard : NGUIPanelLogic
{
	[Token(Token = "0x20002FB")]
	public enum VKCharSet
	{
		[Token(Token = "0x4000E1D")]
		AlphaNumeric,
		[Token(Token = "0x4000E1E")]
		Numeric,
		[Token(Token = "0x4000E1F")]
		IP
	}

	[Token(Token = "0x20002FC")]
	public delegate void ButtonFunction();

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ButtonFunction okCallback;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UILabel caption;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel input;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel okButtonText;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton cancelButton;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxInputLength;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VKCharSet charSetMode;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject alphaNumericFilter;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject numericFilter;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UIButton pointButton;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool okOnlyMode;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private char[] activeChars;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NWUIButtonExtenderMain butExtenderMain;

	[Token(Token = "0x1700017B")]
	public bool OkOnlyMode
	{
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x41B4A8", Offset = "0x41B4A8", VA = "0x41B4A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x41B4B0", Offset = "0x41B4B0", VA = "0x41B4B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public string Text
	{
		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x41BE60", Offset = "0x41BE60", VA = "0x41BE60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x41BE8C", Offset = "0x41BE8C", VA = "0x41BE8C")]
		set
		{
		}
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x41B498", Offset = "0x41B498", VA = "0x41B498")]
	public VirtualKeyboard()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x41B514", Offset = "0x41B514", VA = "0x41B514")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x41BB64", Offset = "0x41BB64", VA = "0x41BB64")]
	private void Update()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x41BEC0", Offset = "0x41BEC0", VA = "0x41BEC0")]
	public void OnKey()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x41BC4C", Offset = "0x41BC4C", VA = "0x41BC4C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x41BD00", Offset = "0x41BD00", VA = "0x41BD00")]
	public void BackSpace()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x41C14C", Offset = "0x41C14C", VA = "0x41C14C")]
	public void Ok()
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x41C394", Offset = "0x41C394", VA = "0x41C394")]
	public void Cancel()
	{
	}
}
[Token(Token = "0x20002FD")]
public class VRInstructionScreen : MonoBehaviour
{
	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UILabel status;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRInstructionScreen instance;

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x4175E4", Offset = "0x4175E4", VA = "0x4175E4")]
	public VRInstructionScreen()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x4175EC", Offset = "0x4175EC", VA = "0x4175EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x417650", Offset = "0x417650", VA = "0x417650")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002FE")]
public class VRSettingsMenu : NGUIPanelLogic
{
	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRSettingsMenu instance;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIToggle showControllerMappingToggle;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIToggle showVRCameraToggle;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISlider vrMoveSpeedSlider;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UISlider vrVignetteSizeSlider;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ToggleButtonString vrControllerInput;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ToggleButtonString vrRotationToggle;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToggleButtonString vrJumpTeleportToggle;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ToggleButtonString vrMainHandToggle;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24758C", Offset = "0x24758C")]
	private static Predicate<Transform> <>f__am$cache0;

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x418F4C", Offset = "0x418F4C", VA = "0x418F4C")]
	public VRSettingsMenu()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x418F54", Offset = "0x418F54", VA = "0x418F54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x419150", Offset = "0x419150", VA = "0x419150")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x4192B8", Offset = "0x4192B8", VA = "0x4192B8")]
	private void JoysticksChanged(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x419438", Offset = "0x419438", VA = "0x419438", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x41973C", Offset = "0x41973C", VA = "0x41973C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x41997C", Offset = "0x41997C", VA = "0x41997C")]
	private void ShowButtonHelp(bool showControllerDescription)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x407CD4", Offset = "0x407CD4", VA = "0x407CD4")]
	public void OnShowControllerMapping()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x407D08", Offset = "0x407D08", VA = "0x407D08")]
	public void OnShowVRCamera()
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x407D78", Offset = "0x407D78", VA = "0x407D78")]
	public void OnVRMoveSpeedChanged()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x407D74", Offset = "0x407D74", VA = "0x407D74")]
	public void OnVRInputToggle()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x407E44", Offset = "0x407E44", VA = "0x407E44")]
	public void OnVRRotationToggle()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x419C28", Offset = "0x419C28", VA = "0x419C28")]
	public void OnVRJumpTeleportToggle()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x407F00", Offset = "0x407F00", VA = "0x407F00")]
	public void OnVRMainHandToggle()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x419CD8", Offset = "0x419CD8", VA = "0x419CD8")]
	public void OnVignetteComfortSizeChanged()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x419300", Offset = "0x419300", VA = "0x419300")]
	private void CheckVRMainHandEnabled()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x4194FC", Offset = "0x4194FC", VA = "0x4194FC")]
	private void SyncVRSettings(VRSettingsMenu src, VRSettingsMenu dst)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x419EC8", Offset = "0x419EC8", VA = "0x419EC8", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x419F8C", Offset = "0x419F8C", VA = "0x419F8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2487C0", Offset = "0x2487C0")]
	private static bool <Awake>m__0(Transform a)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002FF")]
public class WorldDetails : NGUIPanelLogic
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF6C", Offset = "0x23FF6C")]
	private sealed class <ApplyInternal>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string startWorld;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool <loadWorld>__0;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string <levelName>__0;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal byte[] <iconData>__1;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Texture2D <previewTex>__1;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal BackgroundWorker <bw>__1;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal BackgroundWorker <bw>__2;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal WorldDetails $this;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x4200D8", Offset = "0x4200D8", VA = "0x4200D8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x4200E0", Offset = "0x4200E0", VA = "0x4200E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x41D3A0", Offset = "0x41D3A0", VA = "0x41D3A0")]
		[DebuggerHidden]
		public <ApplyInternal>c__Iterator0()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x41EC80", Offset = "0x41EC80", VA = "0x41EC80", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x4200E8", Offset = "0x4200E8", VA = "0x4200E8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x4200FC", Offset = "0x4200FC", VA = "0x4200FC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x420184", Offset = "0x420184", VA = "0x420184")]
		internal void <>m__0(object o, DoWorkEventArgs e)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x420698", Offset = "0x420698", VA = "0x420698")]
		internal void <>m__1(object o, DoWorkEventArgs e)
		{
		}
	}

	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF7C", Offset = "0x23FF7C")]
	private sealed class <EditName>c__AnonStorey3
	{
		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VirtualKeyboard keyboard;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal WorldDetails $this;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x41D81C", Offset = "0x41D81C", VA = "0x41D81C")]
		public <EditName>c__AnonStorey3()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x420714", Offset = "0x420714", VA = "0x420714")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF8C", Offset = "0x23FF8C")]
	private sealed class <EditSeed>c__AnonStorey4
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VirtualKeyboard keyboard;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal WorldDetails $this;

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x41DA74", Offset = "0x41DA74", VA = "0x41DA74")]
		public <EditSeed>c__AnonStorey4()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x420968", Offset = "0x420968", VA = "0x420968")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FF9C", Offset = "0x23FF9C")]
	private sealed class <SetProject>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int projectIndex;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Stream <projectMetaStream>__0;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool <res>__0;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string <projectSeed>__0;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal WorldDetails $this;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MessageBox.ButtonFunction <>f__am$cache0;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x421640", Offset = "0x421640", VA = "0x421640", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x421648", Offset = "0x421648", VA = "0x421648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x41E0B4", Offset = "0x41E0B4", VA = "0x41E0B4")]
		[DebuggerHidden]
		public <SetProject>c__Iterator1()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x420B74", Offset = "0x420B74", VA = "0x420B74", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x421650", Offset = "0x421650", VA = "0x421650", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x421664", Offset = "0x421664", VA = "0x421664", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x4216EC", Offset = "0x4216EC", VA = "0x4216EC")]
		private static void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FFAC", Offset = "0x23FFAC")]
	private sealed class <ShowMaterialSelection>c__AnonStorey5
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MaterialButton matButTarget;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject selectedObject;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal WorldDetails $this;

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x41E9AC", Offset = "0x41E9AC", VA = "0x41E9AC")]
		public <ShowMaterialSelection>c__AnonStorey5()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x42179C", Offset = "0x42179C", VA = "0x42179C")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FFBC", Offset = "0x23FFBC")]
	private sealed class <UploadWorldCoRout>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal WWWForm <form>__0;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Stream <projectMetaStream>__0;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal byte[] <metaBuffer>__0;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Stream <projectDataStream>__0;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal byte[] <dataBuffer>__0;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal WWW <w>__0;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal WorldDetails $this;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x422120", Offset = "0x422120", VA = "0x422120", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0x422128", Offset = "0x422128", VA = "0x422128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x41EAA0", Offset = "0x41EAA0", VA = "0x41EAA0")]
		[DebuggerHidden]
		public <UploadWorldCoRout>c__Iterator2()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x42191C", Offset = "0x42191C", VA = "0x42191C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x422130", Offset = "0x422130", VA = "0x422130", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x422144", Offset = "0x422144", VA = "0x422144", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIButton startButton;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIButton applyButton;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton uploadButton;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIButton levelNameButton;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel levelNameButtonLabel;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UILabel seedLabel;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToggleButtonString generationToggle;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ToggleButtonString behaviourToggle;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EntityManager tempEntityManager;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MaterialSelection materialSelection;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MaterialButton> generatorMaterials;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject behaviourPanel;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DiscoveryProject activeProject;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public WorldMenu worldMenu;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MarkovNameGenerator nameGen;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private NWUIButtonExtenderMain butExtenderMain;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int lastControllerIndex;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private MemoryStream zippedStream;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool setWorldAsync;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private MemoryStream tempTerrainDataStream;

	[Token(Token = "0x1700017D")]
	private bool IsNewProject
	{
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x41CCB0", Offset = "0x41CCB0", VA = "0x41CCB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x41CB98", Offset = "0x41CB98", VA = "0x41CB98")]
	public WorldDetails()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x41CCE0", Offset = "0x41CCE0", VA = "0x41CCE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x41CEA4", Offset = "0x41CEA4", VA = "0x41CEA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x41D184", Offset = "0x41D184", VA = "0x41D184")]
	public void StartLevel()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x41D344", Offset = "0x41D344", VA = "0x41D344")]
	public void Apply()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x41D2A4", Offset = "0x41D2A4", VA = "0x41D2A4")]
	[DebuggerHidden]
	private IEnumerator ApplyInternal(string startWorld)
	{
		return null;
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x41D3A8", Offset = "0x41D3A8", VA = "0x41D3A8")]
	public void CheckGenerator()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x41D5B8", Offset = "0x41D5B8", VA = "0x41D5B8")]
	public void EditName()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x41D824", Offset = "0x41D824", VA = "0x41D824")]
	public void EditSeed()
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x41DA7C", Offset = "0x41DA7C", VA = "0x41DA7C")]
	public bool CheckName(string levelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x41DDFC", Offset = "0x41DDFC", VA = "0x41DDFC")]
	private void SyncToProject()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x41E014", Offset = "0x41E014", VA = "0x41E014")]
	[DebuggerHidden]
	internal IEnumerator SetProject(int projectIndex)
	{
		return null;
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x41E0BC", Offset = "0x41E0BC", VA = "0x41E0BC")]
	internal void NewProject()
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x41E5E4", Offset = "0x41E5E4", VA = "0x41E5E4")]
	public void ShowMaterialSelection()
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x41E9B4", Offset = "0x41E9B4", VA = "0x41E9B4")]
	public void UploadWorld()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x41EA1C", Offset = "0x41EA1C", VA = "0x41EA1C")]
	[DebuggerHidden]
	public IEnumerator UploadWorldCoRout()
	{
		return null;
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x41EAA8", Offset = "0x41EAA8", VA = "0x41EAA8", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x41EBC4", Offset = "0x41EBC4", VA = "0x41EBC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248800", Offset = "0x248800")]
	private void <CheckName>m__0()
	{
	}
}
[Token(Token = "0x2000306")]
public class WorldMenu : NGUIPanelLogic
{
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FFCC", Offset = "0x23FFCC")]
	private sealed class <DeleteWorld>c__AnonStorey0
	{
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Touple<DiscoveryProject, bool> temp;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string projectFileName;

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1336840", Offset = "0x1336840", VA = "0x1336840")]
		public <DeleteWorld>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1336848", Offset = "0x1336848", VA = "0x1336848")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FFDC", Offset = "0x23FFDC")]
	private sealed class <DuplicateWorld>c__AnonStorey1
	{
		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Touple<DiscoveryProject, bool> temp;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string projectFileName;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string freeFileName;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal WorldMenu $this;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x1336B04", Offset = "0x1336B04", VA = "0x1336B04")]
		public <DuplicateWorld>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x1336B0C", Offset = "0x1336B0C", VA = "0x1336B0C")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FFEC", Offset = "0x23FFEC")]
	private sealed class <OnBack>c__AnonStorey2
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal NWMatchMaking matchmaker;

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x1336FD8", Offset = "0x1336FD8", VA = "0x1336FD8")]
		public <OnBack>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1336FE0", Offset = "0x1336FE0", VA = "0x1336FE0")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIPanel lowMemoryPanel;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MultiplayerMenu multiplayerMenu;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel pageInfo;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UILabel availSpaceInfo;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel levelName;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIButton newButton;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton loadButton;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UIButton deleteButton;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton compressButton;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UIButton decompressButton;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIButton duplicateButton;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UITexture previewTexture;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D emptyWorldTex;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject busySpinner;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<UIButton> slotList;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public WorldDetails worldDetails;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UILabel> slotListLabels;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal List<Touple<DiscoveryProject, bool>> projectList;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> worlds;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentPageIndex;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int maximumPageIndex;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	internal bool enoughDiskSpace;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal int maxWorldNameLength;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal int selectedProjectIndex;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	internal Dictionary<DiscoveryProject, Texture2D> previewCache;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	internal DiscoveryProject projectImageRequest;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NWUIButtonExtenderMain butExtenderMain;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private BackgroundWorker worker;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24759C", Offset = "0x24759C")]
	private static MessageBox.ButtonFunction <>f__am$cache0;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2475AC", Offset = "0x2475AC")]
	private static MessageBox.ButtonFunction <>f__am$cache1;

	[Token(Token = "0x17000184")]
	public List<string> Worlds
	{
		[Token(Token = "0x600141D")]
		[Address(RVA = "0x41E5DC", Offset = "0x41E5DC", VA = "0x41E5DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x4221CC", Offset = "0x4221CC", VA = "0x4221CC")]
	public WorldMenu()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x422268", Offset = "0x422268", VA = "0x422268")]
	private void Awake()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x4224D8", Offset = "0x4224D8", VA = "0x4224D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x4227C8", Offset = "0x4227C8", VA = "0x4227C8", Slot = "4")]
	public override void OnFocusChanged(bool hasFocus, NGUIPanelLogic previousPanel)
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x422874", Offset = "0x422874", VA = "0x422874")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x422F44", Offset = "0x422F44", VA = "0x422F44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x422F48", Offset = "0x422F48", VA = "0x422F48")]
	internal void RefreshWorldEntry(int i)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x423444", Offset = "0x423444", VA = "0x423444")]
	internal void CheckFreeSpace()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x41FA2C", Offset = "0x41FA2C", VA = "0x41FA2C")]
	internal void RefreshList()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x422714", Offset = "0x422714", VA = "0x422714")]
	public void GoLeft()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x422728", Offset = "0x422728", VA = "0x422728")]
	public void GoRight()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x4238E4", Offset = "0x4238E4", VA = "0x4238E4")]
	public void LoadWorld()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x423960", Offset = "0x423960", VA = "0x423960")]
	public void NewWorld()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x423A54", Offset = "0x423A54", VA = "0x423A54")]
	public void DeleteWorld()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x423E08", Offset = "0x423E08", VA = "0x423E08")]
	private string GetFreeFileName(string name)
	{
		return null;
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x424070", Offset = "0x424070", VA = "0x424070")]
	public void DuplicateWorld()
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x42443C", Offset = "0x42443C", VA = "0x42443C", Slot = "5")]
	public override bool OnBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x4245F4", Offset = "0x4245F4", VA = "0x4245F4")]
	public void CompressWorld()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x424E38", Offset = "0x424E38", VA = "0x424E38")]
	public void DeCompressWorld()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x426440", Offset = "0x426440", VA = "0x426440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248900", Offset = "0x248900")]
	private void <OnEnable>m__0(string[] worldFileNames)
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x426EB0", Offset = "0x426EB0", VA = "0x426EB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248910", Offset = "0x248910")]
	private static void <DeCompressWorld>m__1()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x426F60", Offset = "0x426F60", VA = "0x426F60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248920", Offset = "0x248920")]
	private static void <DeCompressWorld>m__2()
	{
	}
}
[Token(Token = "0x200030A")]
public class InstancedSound : MonoBehaviour
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string soundName;

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x42FF88", Offset = "0x42FF88", VA = "0x42FF88")]
	public InstancedSound()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x430028", Offset = "0x430028", VA = "0x430028")]
	private void Start()
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x430134", Offset = "0x430134", VA = "0x430134")]
	private void Update()
	{
	}
}
[Token(Token = "0x200030B")]
public class JumpBetween : MonoBehaviour
{
	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Vector3> jumpList;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float waitTime;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float time;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currIndex;

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x430370", Offset = "0x430370", VA = "0x430370")]
	public JumpBetween()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x430404", Offset = "0x430404", VA = "0x430404")]
	private void Start()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x4305C8", Offset = "0x4305C8", VA = "0x4305C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x430460", Offset = "0x430460", VA = "0x430460")]
	private Vector3 GetNextJumpPos()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200030C")]
public class MarkerCube : MonoBehaviour
{
	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal Material mat;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal GameObject markerGO;

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x438C9C", Offset = "0x438C9C", VA = "0x438C9C")]
	public MarkerCube()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x438CA4", Offset = "0x438CA4", VA = "0x438CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x438D5C", Offset = "0x438D5C", VA = "0x438D5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x438DF8", Offset = "0x438DF8", VA = "0x438DF8")]
	private void Update()
	{
	}
}
[Token(Token = "0x200030D")]
public class MaterialInit : MonoBehaviour
{
	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TouchScreenKeyboard keyboard;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string inputField;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float widthScale;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float heightScale;

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x43AC80", Offset = "0x43AC80", VA = "0x43AC80")]
	public MaterialInit()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x43AD2C", Offset = "0x43AD2C", VA = "0x43AD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x43AD30", Offset = "0x43AD30", VA = "0x43AD30")]
	private void Update()
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x43AD34", Offset = "0x43AD34", VA = "0x43AD34")]
	private void OnGUI()
	{
	}
}
[Token(Token = "0x200030E")]
public class MoveAlong : MonoBehaviour
{
	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 move;

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x445E1C", Offset = "0x445E1C", VA = "0x445E1C")]
	public MoveAlong()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x445EC0", Offset = "0x445EC0", VA = "0x445EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x445F48", Offset = "0x445F48", VA = "0x445F48")]
	private void FixedUpdate()
	{
	}
}
[Token(Token = "0x200030F")]
public class MoveCirclic : MonoBehaviour
{
	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal Vector3 center;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float omega;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float angle;

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x44609C", Offset = "0x44609C", VA = "0x44609C")]
	public MoveCirclic()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x4460BC", Offset = "0x4460BC", VA = "0x4460BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x44610C", Offset = "0x44610C", VA = "0x44610C")]
	private void Update()
	{
	}
}
namespace Discovery
{
	[Token(Token = "0x2000310")]
	public class MusicManager : MonoBehaviour
	{
		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mLastSongID;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float mMSec;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool mUsePlaylist;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BinaryFloatArray<int> mPlayList;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<string> mSongs;

		[Token(Token = "0x17000185")]
		public BinaryFloatArray<int> PlayList
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x3A198C", Offset = "0x3A198C", VA = "0x3A198C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public List<string> Songs
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x3A1994", Offset = "0x3A1994", VA = "0x3A1994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x3A1374", Offset = "0x3A1374", VA = "0x3A1374")]
		public MusicManager()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x3A143C", Offset = "0x3A143C", VA = "0x3A143C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x3A169C", Offset = "0x3A169C", VA = "0x3A169C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x3A171C", Offset = "0x3A171C", VA = "0x3A171C")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x3A179C", Offset = "0x3A179C", VA = "0x3A179C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x3A1828", Offset = "0x3A1828", VA = "0x3A1828")]
		public void StartPlaying()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x3A18B8", Offset = "0x3A18B8", VA = "0x3A18B8")]
		public void PlayMusicInstantly(string audioID)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x3A199C", Offset = "0x3A199C", VA = "0x3A199C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x3A1C30", Offset = "0x3A1C30", VA = "0x3A1C30")]
		public void CompilePlayList(float timeDivider)
		{
		}
	}
}
[Token(Token = "0x2000311")]
public class PlayerLogic : NetworkBehaviour
{
	[Token(Token = "0x2000312")]
	public enum CameraMode
	{
		[Token(Token = "0x4000ED0")]
		Detached,
		[Token(Token = "0x4000ED1")]
		FirstPerson,
		[Token(Token = "0x4000ED2")]
		ThirdPerson,
		[Token(Token = "0x4000ED3")]
		Selfie,
		[Token(Token = "0x4000ED4")]
		Stationary,
		[Token(Token = "0x4000ED5")]
		ThirdPersonVR
	}

	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x23FFFC", Offset = "0x23FFFC")]
	private sealed class <Update>c__AnonStorey0
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 newFwd;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Vector3 newPos;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal PlayerLogic $this;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xE86EE8", Offset = "0xE86EE8", VA = "0xE86EE8")]
		public <Update>c__AnonStorey0()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xE86EF0", Offset = "0xE86EF0", VA = "0xE86EF0")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x24000C", Offset = "0x24000C")]
	private sealed class <ClickInternal>c__AnonStorey1
	{
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 teleportPos;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal PlayerLogic $this;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xE86DA4", Offset = "0xE86DA4", VA = "0xE86DA4")]
		public <ClickInternal>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xE86DAC", Offset = "0xE86DAC", VA = "0xE86DAC")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string assignedUserID;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputActionHandler inputHandler;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BlockTerrain terrain;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pickTransform;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private LaserPointer laserPointer;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MarkerCube markerCube;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public HUDLogic hudLogic;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera attachedCam;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform attachedCamProxy;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh playerNameViz;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pickDistance;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float adaptedPickDistance;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float camOffsetDistance;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float camRadius;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float addOffsetLength;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 vrOffset;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float VR3rdScale;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxCamPlayerDistance;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color primColor;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color secColor;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color terColor;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Color triggerColor;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float vrBlackoutSize;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Vector3[] offsetPos;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private FogOverride fogOverride;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool lastHeadInWater;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool lastPlayerInWater;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Transform blockArmTransform;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CameraMode camMode;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float vrDistance;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float vrUpdateTime;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float vrUpdateThreshold;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 lastNewFwd;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 lastUpdatePos;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BlockCharacterController charController;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public BlockPlayerModelMotor motor;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isLocalPlayerExt;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[HideInInspector]
	public Transform vrHeadset;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SyncVar]
	internal uint nextSelectedMaterial;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SyncVar]
	public bool nextVRMode;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SyncVar]
	internal string playerName;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	internal uint selectedMaterial;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject headSetCopy;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private string oldPlayerName;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int currentTouchID;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int lastTouchY;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private BaseEntity lastHitEntity;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int kCmdCmdPlayerInfo;

	[Token(Token = "0x17000187")]
	public LaserPointer LaserPointer
	{
		[Token(Token = "0x600145A")]
		[Address(RVA = "0x3F8A9C", Offset = "0x3F8A9C", VA = "0x3F8A9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600145B")]
		[Address(RVA = "0x3F8AA4", Offset = "0x3F8AA4", VA = "0x3F8AA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public CameraMode CamMode
	{
		[Token(Token = "0x600145E")]
		[Address(RVA = "0x3F9564", Offset = "0x3F9564", VA = "0x3F9564")]
		get
		{
			return default(CameraMode);
		}
		[Token(Token = "0x600145F")]
		[Address(RVA = "0x3F956C", Offset = "0x3F956C", VA = "0x3F956C")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public bool IsLocalPlayerExt
	{
		[Token(Token = "0x6001460")]
		[Address(RVA = "0x3F9FE0", Offset = "0x3F9FE0", VA = "0x3F9FE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001461")]
		[Address(RVA = "0x3F9FF8", Offset = "0x3F9FF8", VA = "0x3F9FF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public bool Paused
	{
		[Token(Token = "0x6001462")]
		[Address(RVA = "0x3FA000", Offset = "0x3FA000", VA = "0x3FA000")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018B")]
	public uint NetworknextSelectedMaterial
	{
		[Token(Token = "0x6001473")]
		[Address(RVA = "0x400A9C", Offset = "0x400A9C", VA = "0x400A9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001474")]
		[Address(RVA = "0x3FBC24", Offset = "0x3FBC24", VA = "0x3FBC24")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public bool NetworknextVRMode
	{
		[Token(Token = "0x6001475")]
		[Address(RVA = "0x400AA4", Offset = "0x400AA4", VA = "0x400AA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001476")]
		[Address(RVA = "0x3FBBA4", Offset = "0x3FBBA4", VA = "0x3FBBA4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public string NetworkplayerName
	{
		[Token(Token = "0x6001477")]
		[Address(RVA = "0x400AAC", Offset = "0x400AAC", VA = "0x400AAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001478")]
		[Address(RVA = "0x400AB4", Offset = "0x400AB4", VA = "0x400AB4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x3F87D8", Offset = "0x3F87D8", VA = "0x3F87D8")]
	public PlayerLogic()
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x3F8B04", Offset = "0x3F8B04", VA = "0x3F8B04")]
	private bool Update3rdPersonVR(Vector3 oldFwd, out Vector3 newPos, out Vector3 newFwd)
	{
		return default(bool);
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x3F90F0", Offset = "0x3F90F0", VA = "0x3F90F0")]
	private bool Update3rdPersonVR_OLD(out Vector3 newPos, out Vector3 newFwd)
	{
		return default(bool);
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x3FA0D4", Offset = "0x3FA0D4", VA = "0x3FA0D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x3FA3AC", Offset = "0x3FA3AC", VA = "0x3FA3AC")]
	private void instance_LevelLoaded(object sender, EventArgs<string> e)
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x3FA5D0", Offset = "0x3FA5D0", VA = "0x3FA5D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x3FA95C", Offset = "0x3FA95C", VA = "0x3FA95C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x3FB0B0", Offset = "0x3FB0B0", VA = "0x3FB0B0")]
	public void SetSelectedMaterial(uint value)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x3FB48C", Offset = "0x3FB48C", VA = "0x3FB48C")]
	public void UpdatePlayerModel(int config)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x3FB890", Offset = "0x3FB890", VA = "0x3FB890")]
	public void SetPlayerInfo(bool vrMode_, uint selectedMaterial_)
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x3FBCA4", Offset = "0x3FBCA4", VA = "0x3FBCA4")]
	[Command]
	private void CmdPlayerInfo(bool vrMode_, uint selectedMaterial_)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x3FBCC8", Offset = "0x3FBCC8", VA = "0x3FBCC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x3FD318", Offset = "0x3FD318", VA = "0x3FD318")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x3FD488", Offset = "0x3FD488", VA = "0x3FD488")]
	internal bool IsBlockModifyCamMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x3FD4B0", Offset = "0x3FD4B0", VA = "0x3FD4B0")]
	public void inputHandler_Pressed(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x3FE960", Offset = "0x3FE960", VA = "0x3FE960")]
	private void inputHandler_Clicked(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x3FEB5C", Offset = "0x3FEB5C", VA = "0x3FEB5C")]
	public void ClickInternal(Vector3 pickOrigin, Vector3 pickDirection, uint materialID, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x4005AC", Offset = "0x4005AC", VA = "0x4005AC")]
	static PlayerLogic()
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x400A98", Offset = "0x400A98", VA = "0x400A98")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x400B34", Offset = "0x400B34", VA = "0x400B34")]
	protected static void InvokeCmdCmdPlayerInfo(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x3FB8E4", Offset = "0x3FB8E4", VA = "0x3FB8E4")]
	public void CallCmdPlayerInfo(bool vrMode_, uint selectedMaterial_)
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x400DA4", Offset = "0x400DA4", VA = "0x400DA4", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x400FF0", Offset = "0x400FF0", VA = "0x400FF0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000315")]
public class Portal
{
	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Texture2D mScreenShot;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string mName;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 mPosition;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 mRotation;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float mMSec;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private byte[] mPixelData;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int scWidth;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int scHeight;

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xE87204", Offset = "0xE87204", VA = "0xE87204")]
	public Portal()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0xE87310", Offset = "0xE87310", VA = "0xE87310")]
	private Color[] ConvertByteArrayToColorArray(byte[] buffer)
	{
		return null;
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0xE874DC", Offset = "0xE874DC", VA = "0xE874DC")]
	private byte[] ConvertColorArrayToByteArray(Color[] colBuffer)
	{
		return null;
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0xE876EC", Offset = "0xE876EC", VA = "0xE876EC")]
	public void Set(string name)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0xE876F4", Offset = "0xE876F4", VA = "0xE876F4")]
	private void GetTextureFromScreenshot()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0xE877C0", Offset = "0xE877C0", VA = "0xE877C0")]
	public void Load(Stream s)
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0xE878F4", Offset = "0xE878F4", VA = "0xE878F4")]
	public void Load(ValuesDictionary portal)
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xE87AF8", Offset = "0xE87AF8", VA = "0xE87AF8")]
	public void Save(ValuesDictionary portal)
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xE87CC0", Offset = "0xE87CC0", VA = "0xE87CC0")]
	public void Activate()
	{
	}
}
[Token(Token = "0x2000316")]
public class SettingsSerializer : MonoBehaviour
{
	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GraphicsMenu graphicsMenu;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioMenu audioMenu;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ControlsMenu controlsMenu;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSettingsMenu vrSettingsMenu;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MultiplayerMenu multiplayerMenu;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MappingMenu mappingMenu;

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x405DC0", Offset = "0x405DC0", VA = "0x405DC0")]
	public SettingsSerializer()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x405DC8", Offset = "0x405DC8", VA = "0x405DC8")]
	public void ReadOptionsConfigFile()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x408030", Offset = "0x408030", VA = "0x408030")]
	public void SaveOptionsConfigFile()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x406990", Offset = "0x406990", VA = "0x406990")]
	public void InitGraphicsMenu(GraphicsMenu gm, string userID)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x408580", Offset = "0x408580", VA = "0x408580")]
	public void SaveGraphics(GraphicsMenu gm, string userID)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x40733C", Offset = "0x40733C", VA = "0x40733C")]
	public void InitControlsMenu(ControlsMenu cm, string userID)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x408A88", Offset = "0x408A88", VA = "0x408A88")]
	public void SaveControls(ControlsMenu cm, string userID)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x408F88", Offset = "0x408F88", VA = "0x408F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x408F8C", Offset = "0x408F8C", VA = "0x408F8C")]
	private void OnApplicationQuit()
	{
	}
}
[Token(Token = "0x2000317")]
public static class TransformExtension
{
	[Token(Token = "0x6001493")]
	[Address(RVA = "0x409B84", Offset = "0x409B84", VA = "0x409B84")]
	public static void SetRotationAround2(this Transform tf, Transform tfChild, Vector3 axis, float angle)
	{
	}
}
[Token(Token = "0x2000318")]
public class SimplePlayer : MonoBehaviour
{
	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float rotspeed;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rot;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camProxy;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform cam;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform off;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CharacterController cc;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 velocity;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vX;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float vZ;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 resetCameraPos;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 oldCameraPos;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float th;

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x4092D0", Offset = "0x4092D0", VA = "0x4092D0")]
	public SimplePlayer()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x4093C8", Offset = "0x4093C8", VA = "0x4093C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x409468", Offset = "0x409468", VA = "0x409468")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x409530", Offset = "0x409530", VA = "0x409530")]
	private void Update()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x40A734", Offset = "0x40A734", VA = "0x40A734")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x409D98", Offset = "0x409D98", VA = "0x409D98")]
	private void OtherInputStuff(NWGamePadProxy gp)
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x40A780", Offset = "0x40A780", VA = "0x40A780")]
	private void OnGUI()
	{
	}
}
[Token(Token = "0x2000319")]
public class SplitScreenLogic : MonoBehaviour
{
	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SplitScreenLogic _instance;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PlayerComponentInfo playerPrefab;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<PlayerComponentInfo> coopPlayers;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<GameObject> coopPlayerUIs;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainMenuCam;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UICamera mainUICam;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioListener audioListener;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool swapListener;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera splitScreenCamera;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Camera vrCam;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal bool showHMDView;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool frameScheduleEnable;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool frameScheduleEnableBackup;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool useRenderTextures;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool useRenderTexturesBackup;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture splitScreenTexture;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture2D background;

	[Token(Token = "0x4000F08")]
	private const float borderX = 0.005f;

	[Token(Token = "0x4000F09")]
	private const float borderY = 0.008888889f;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rect[][] windowRects;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int frameCount;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int slotmulti;

	[Token(Token = "0x1700018E")]
	public static SplitScreenLogic instance
	{
		[Token(Token = "0x600149C")]
		[Address(RVA = "0x40BBB8", Offset = "0x40BBB8", VA = "0x40BBB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018F")]
	public int ActivePlayers
	{
		[Token(Token = "0x600149D")]
		[Address(RVA = "0x40BCCC", Offset = "0x40BCCC", VA = "0x40BCCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000190")]
	public List<PlayerComponentInfo> Players
	{
		[Token(Token = "0x600149E")]
		[Address(RVA = "0x40BD44", Offset = "0x40BD44", VA = "0x40BD44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000191")]
	public List<GameObject> PlayerUIs
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0x40BD4C", Offset = "0x40BD4C", VA = "0x40BD4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	private bool VRActive
	{
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x40E444", Offset = "0x40E444", VA = "0x40E444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x40B4A8", Offset = "0x40B4A8", VA = "0x40B4A8")]
	public SplitScreenLogic()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x40BD54", Offset = "0x40BD54", VA = "0x40BD54")]
	private void ForceUpdate()
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x40BD58", Offset = "0x40BD58", VA = "0x40BD58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x40BD5C", Offset = "0x40BD5C", VA = "0x40BD5C")]
	public void AddPlayer(GameObject newPlayerGo, bool refreshScreenLayout = true)
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x40C474", Offset = "0x40C474", VA = "0x40C474")]
	private void Update()
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x40CC30", Offset = "0x40CC30", VA = "0x40CC30")]
	public void RemovePlayer(int splitScreenSlot, bool refreshScreenLayout = true)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x40BEC8", Offset = "0x40BEC8", VA = "0x40BEC8")]
	public void RefreshSplitScreen()
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x40E37C", Offset = "0x40E37C", VA = "0x40E37C")]
	public void RemoveAllPlayers()
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x40E5B0", Offset = "0x40E5B0", VA = "0x40E5B0")]
	private void SetupCamSettingsPico(int slot, Rect r)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x40D0F4", Offset = "0x40D0F4", VA = "0x40D0F4")]
	private void SetupCamSettings(int slot, Rect r)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x40F2F8", Offset = "0x40F2F8", VA = "0x40F2F8")]
	private void SetupCamSettings2(int slot, Rect r)
	{
	}
}
[Token(Token = "0x200031A")]
public class TextureBiasHelper : MonoBehaviour
{
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Texture2D> textures;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<float> biases;

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x411650", Offset = "0x411650", VA = "0x411650")]
	public TextureBiasHelper()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x411658", Offset = "0x411658", VA = "0x411658")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x200031B")]
public class VRControllerAnimation : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200031C")]
	public struct IDToTransform
	{
		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Transform t;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 customOffset;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MappingMenu.ActionMap leftMainAction;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MappingMenu.ActionMap rightMainAction;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string addInfo;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool noHelpInfo;
	}

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform leftStick;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform rightStick;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public IDToTransform[] buttonTransforms;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float factor;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 offsetDir;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 facingVec;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private NWGamePadProxy gp;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRInputMap vrim;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3[] defaultPositions;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion leftDefaultRotation;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion rightDefaultRotation;

	[Token(Token = "0x17000193")]
	public NWGamePadProxy AssignedGamePad
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x41655C", Offset = "0x41655C", VA = "0x41655C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x416564", Offset = "0x416564", VA = "0x416564")]
		set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public VRInputMap AssignedInputMap
	{
		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x41656C", Offset = "0x41656C", VA = "0x41656C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x416574", Offset = "0x416574", VA = "0x416574")]
		set
		{
		}
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x416490", Offset = "0x416490", VA = "0x416490")]
	public VRControllerAnimation()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x41657C", Offset = "0x41657C", VA = "0x41657C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x416680", Offset = "0x416680", VA = "0x416680")]
	private void Start()
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x4169E0", Offset = "0x4169E0", VA = "0x4169E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x4169E4", Offset = "0x4169E4", VA = "0x4169E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x417138", Offset = "0x417138", VA = "0x417138")]
	public int GetButtonID4Action(MappingMenu.ActionMap action, bool rightIsMain)
	{
		return default(int);
	}
}
[Token(Token = "0x200031D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x24002C", Offset = "0x24002C")]
public class VRInputMap : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200031E")]
	public struct ActionToButtonID
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MappingMenu.ActionMap action;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int buttonID;
	}

	[Serializable]
	[Token(Token = "0x200031F")]
	public struct AdditionalInfoToButtonID
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string addInfo;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int buttonID;
	}

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string profileName;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool rightIsMain;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ActionToButtonID[] mapping;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AdditionalInfoToButtonID[] additionalMapping;

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x417250", Offset = "0x417250", VA = "0x417250")]
	public VRInputMap()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x4172C4", Offset = "0x4172C4", VA = "0x4172C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x417524", Offset = "0x417524", VA = "0x417524")]
	public int GetButtonID4Action(MappingMenu.ActionMap action)
	{
		return default(int);
	}
}
[Token(Token = "0x2000320")]
public class VRVignetteFadeLogic : MonoBehaviour
{
	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fadeSpeed;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float coolDownThreshold;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SpriteRenderer vignetteSprite;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 targetScale;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 sourceScale;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float coolDownTime;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform camProxy;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float visibility;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color full;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color none;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastPos;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion lastRot;

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x41AD44", Offset = "0x41AD44", VA = "0x41AD44")]
	public VRVignetteFadeLogic()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x41AE44", Offset = "0x41AE44", VA = "0x41AE44")]
	private void OnEnabled()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x41AFB0", Offset = "0x41AFB0", VA = "0x41AFB0")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x2000321")]
public class Setup : MonoBehaviour
{
	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x408F90", Offset = "0x408F90", VA = "0x408F90")]
	public Setup()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x408F98", Offset = "0x408F98", VA = "0x408F98")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000322")]
public class ShowMeshNormals : MonoBehaviour
{
	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x409018", Offset = "0x409018", VA = "0x409018")]
	public ShowMeshNormals()
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x409020", Offset = "0x409020", VA = "0x409020")]
	private void OnDrawGizmos()
	{
	}
}
[Token(Token = "0x2000323")]
public class SimpleVRManager : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2400B4", Offset = "0x2400B4")]
	private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SimpleVRManager $this;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x40AD18", Offset = "0x40AD18", VA = "0x40AD18", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x40AD20", Offset = "0x40AD20", VA = "0x40AD20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x40A984", Offset = "0x40A984", VA = "0x40A984")]
		[DebuggerHidden]
		public <Start>c__Iterator0()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x40AC04", Offset = "0x40AC04", VA = "0x40AC04", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x40AD28", Offset = "0x40AD28", VA = "0x40AD28", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x40AD3C", Offset = "0x40AD3C", VA = "0x40AD3C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2400C4", Offset = "0x2400C4")]
	private sealed class <LoadSpecificSDK>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string sdkToLoad;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x40AB58", Offset = "0x40AB58", VA = "0x40AB58", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x40AB60", Offset = "0x40AB60", VA = "0x40AB60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x40AA10", Offset = "0x40AA10", VA = "0x40AA10")]
		[DebuggerHidden]
		public <LoadSpecificSDK>c__Iterator1()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x40AA1C", Offset = "0x40AA1C", VA = "0x40AA1C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x40AB68", Offset = "0x40AB68", VA = "0x40AB68", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x40AB7C", Offset = "0x40AB7C", VA = "0x40AB7C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x40A8F8", Offset = "0x40A8F8", VA = "0x40A8F8")]
	public SimpleVRManager()
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x40A900", Offset = "0x40A900", VA = "0x40A900")]
	[DebuggerHidden]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x40A98C", Offset = "0x40A98C", VA = "0x40A98C")]
	[DebuggerHidden]
	public IEnumerator LoadSpecificSDK(string sdkToLoad)
	{
		return null;
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x40AA18", Offset = "0x40AA18", VA = "0x40AA18")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000326")]
public class SkyBoxUpdate : MonoBehaviour
{
	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material skyBox;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTexture rt;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Sky skyInstance;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera skyCam;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool oneFacePerFrame;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Resolution;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ReflectionProbe rp;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double lastTime;

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x40ADC4", Offset = "0x40ADC4", VA = "0x40ADC4")]
	public SkyBoxUpdate()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x40ADD4", Offset = "0x40ADD4", VA = "0x40ADD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x40AE60", Offset = "0x40AE60", VA = "0x40AE60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x40AFDC", Offset = "0x40AFDC", VA = "0x40AFDC")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x2000327")]
public class SunShaftHelper : MonoBehaviour
{
	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform lightSource;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform cam;

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x410C58", Offset = "0x410C58", VA = "0x410C58")]
	public SunShaftHelper()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x410C60", Offset = "0x410C60", VA = "0x410C60")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x410D80", Offset = "0x410D80", VA = "0x410D80")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x2000328")]
public class SyncTransform : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform transformToSync;

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x410EC0", Offset = "0x410EC0", VA = "0x410EC0")]
	public SyncTransform()
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x410EC8", Offset = "0x410EC8", VA = "0x410EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x410F6C", Offset = "0x410F6C", VA = "0x410F6C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000329")]
public class TargetFollower : MonoBehaviour
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 posOffset;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool previousFogState;

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x41103C", Offset = "0x41103C", VA = "0x41103C")]
	public TargetFollower()
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x41109C", Offset = "0x41109C", VA = "0x41109C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x4111D0", Offset = "0x4111D0", VA = "0x4111D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x411560", Offset = "0x411560", VA = "0x411560")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x411588", Offset = "0x411588", VA = "0x411588")]
	private void OnPostRender()
	{
	}
}
[Token(Token = "0x200032A")]
public class TestLogic : MonoBehaviour
{
	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BlockTerrain terrain;

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x411594", Offset = "0x411594", VA = "0x411594")]
	public TestLogic()
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x41159C", Offset = "0x41159C", VA = "0x41159C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x41164C", Offset = "0x41164C", VA = "0x41164C")]
	private void Update()
	{
	}
}
namespace NWCommon
{
	[Token(Token = "0x200032B")]
	public class FreeViewSearchTest : INodeComparer
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BlockTerrain terrain;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 mTargetToLookAt;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Ray testray;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hit;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ignoreNonWalkable;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool returnSubBlockPosition;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 posOffset;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x44C014", Offset = "0x44C014", VA = "0x44C014")]
		public FreeViewSearchTest(BlockTerrain ter, Vector3 targetToLookAt)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x44C11C", Offset = "0x44C11C", VA = "0x44C11C", Slot = "4")]
		public bool Equals(PathNode n1, PathNode n2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200032C")]
	public class GetIntoRangeAndFreeViewSearchTest : INodeComparer
	{
		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BlockTerrain terrain;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 mTargetToLookAt;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Ray testray;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hit;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ignoreNonWalkable;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool returnSubBlockPosition;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 posOffset;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float maxDesiredDistance;

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x44C390", Offset = "0x44C390", VA = "0x44C390")]
		public GetIntoRangeAndFreeViewSearchTest(BlockTerrain ter, Vector3 targetToLookAt, float maxDistance)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x44C4A8", Offset = "0x44C4A8", VA = "0x44C4A8", Slot = "4")]
		public bool Equals(PathNode n1, PathNode n2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200032D")]
	[ExecuteInEditMode]
	public class ThirdPersonBlockController : MonoBehaviour
	{
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform lookAtTransform;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 generalOffset;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BlockTerrain terrain;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ignoreNonWalkable;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool returnSubBlockPosition;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 suggestedCameraPos;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Ray testray;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit testrayresult;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool hit;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 mStart;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 mTarget;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool mHasTarget;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float mSquaredDistanceThreshold;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int mPathIndex;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float desiredDistance;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float thresholdTimeMS;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float timeNotSeen;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Curve4D camCurve;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private List<Vector3> optimizedPath;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float camPathTime;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private AStarSearch search;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float camSpeed;

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x44C724", Offset = "0x44C724", VA = "0x44C724")]
		public ThirdPersonBlockController()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x44C860", Offset = "0x44C860", VA = "0x44C860")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x44C94C", Offset = "0x44C94C", VA = "0x44C94C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x44D5B0", Offset = "0x44D5B0", VA = "0x44D5B0")]
		public bool FollowPath(float ms)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x44D150", Offset = "0x44D150", VA = "0x44D150")]
		private List<Vector3> OptimizePath(List<PathNode> path)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x44DA00", Offset = "0x44DA00", VA = "0x44DA00")]
		private void OnDrawGizmos()
		{
		}
	}
}
[Token(Token = "0x200032E")]
public static class AnimationRecorderHelper
{
	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x38292C", Offset = "0x38292C", VA = "0x38292C")]
	public static string GetTransformPathName(Transform rootTransform, Transform targetTransform)
	{
		return null;
	}
}
namespace ScottGarland
{
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2400E4", Offset = "0x2400E4")]
	internal class DigitsArray
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private uint[] m_data;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly uint AllBits;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal static readonly uint HiBitSet;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_dataUsed;

		[Token(Token = "0x17000199")]
		internal static int DataSizeOf
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x401558", Offset = "0x401558", VA = "0x401558")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019A")]
		internal static int DataSizeBits
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x401550", Offset = "0x401550", VA = "0x401550")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019B")]
		internal uint Item
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x401598", Offset = "0x401598", VA = "0x401598")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x401770", Offset = "0x401770", VA = "0x401770")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		internal int DataUsed
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x4014D0", Offset = "0x4014D0", VA = "0x4014D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x4017BC", Offset = "0x4017BC", VA = "0x4017BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		internal int Count
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x4014AC", Offset = "0x4014AC", VA = "0x4014AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019E")]
		internal bool IsZero
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x4017C4", Offset = "0x4017C4", VA = "0x4017C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		internal bool IsNegative
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x40168C", Offset = "0x40168C", VA = "0x40168C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x4010E8", Offset = "0x4010E8", VA = "0x4010E8")]
		internal DigitsArray(int size)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x401188", Offset = "0x401188", VA = "0x401188")]
		internal DigitsArray(int size, int used)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x4011B8", Offset = "0x4011B8", VA = "0x4011B8")]
		internal DigitsArray(uint[] copyFrom)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x40141C", Offset = "0x40141C", VA = "0x40141C")]
		internal DigitsArray(DigitsArray copyFrom)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x4014D8", Offset = "0x4014D8", VA = "0x4014D8")]
		static DigitsArray()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x401248", Offset = "0x401248", VA = "0x401248")]
		public void Allocate(int size)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x401114", Offset = "0x401114", VA = "0x401114")]
		public void Allocate(int size, int used)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x401250", Offset = "0x401250", VA = "0x401250")]
		internal void CopyFrom(uint[] source, int sourceOffset, int offset, int length)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x401560", Offset = "0x401560", VA = "0x401560")]
		internal void CopyTo(uint[] array, int offset, int length)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x40128C", Offset = "0x40128C", VA = "0x40128C")]
		internal void ResetDataUsed()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x401830", Offset = "0x401830", VA = "0x401830")]
		internal int ShiftRight(int shiftCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x4018BC", Offset = "0x4018BC", VA = "0x4018BC")]
		internal static int ShiftRight(uint[] buffer, int shiftCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x401B40", Offset = "0x401B40", VA = "0x401B40")]
		internal int ShiftLeft(int shiftCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x401BCC", Offset = "0x401BCC", VA = "0x401BCC")]
		internal static int ShiftLeft(uint[] buffer, int shiftCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x401E6C", Offset = "0x401E6C", VA = "0x401E6C")]
		internal int ShiftLeftWithoutOverflow(int shiftCount)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000330")]
	public class BigInteger
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private DigitsArray m_digits;

		[Token(Token = "0x170001A0")]
		public bool IsNegative
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x4E43F8", Offset = "0x4E43F8", VA = "0x4E43F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool IsZero
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x4E4424", Offset = "0x4E4424", VA = "0x4E4424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x4E2BC4", Offset = "0x4E2BC4", VA = "0x4E2BC4")]
		public BigInteger()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x4E2C48", Offset = "0x4E2C48", VA = "0x4E2C48")]
		public BigInteger(long number)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x4E2EB4", Offset = "0x4E2EB4", VA = "0x4E2EB4")]
		public BigInteger(ulong number)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x4E311C", Offset = "0x4E311C", VA = "0x4E311C")]
		public BigInteger(byte[] array)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x4E3574", Offset = "0x4E3574", VA = "0x4E3574")]
		public BigInteger(byte[] array, int length)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x4E35B0", Offset = "0x4E35B0", VA = "0x4E35B0")]
		public BigInteger(byte[] array, int offset, int length)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x4E35F0", Offset = "0x4E35F0", VA = "0x4E35F0")]
		public BigInteger(string digits)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x4E3934", Offset = "0x4E3934", VA = "0x4E3934")]
		public BigInteger(string digits, int radix)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x4E3964", Offset = "0x4E3964", VA = "0x4E3964")]
		private BigInteger(DigitsArray digits)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x4E3164", Offset = "0x4E3164", VA = "0x4E3164")]
		private void ConstructFrom(byte[] array, int offset, int length)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x4E361C", Offset = "0x4E361C", VA = "0x4E361C")]
		private void Construct(string digits, int radix)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x4E4450", Offset = "0x4E4450", VA = "0x4E4450")]
		public static implicit operator BigInteger(long value)
		{
			return null;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x4E44D0", Offset = "0x4E44D0", VA = "0x4E44D0")]
		public static implicit operator BigInteger(ulong value)
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x4E39A0", Offset = "0x4E39A0", VA = "0x4E39A0")]
		public static implicit operator BigInteger(int value)
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x4E4550", Offset = "0x4E4550", VA = "0x4E4550")]
		public static implicit operator BigInteger(uint value)
		{
			return null;
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x4E3E90", Offset = "0x4E3E90", VA = "0x4E3E90")]
		public static BigInteger operator +(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x4E45CC", Offset = "0x4E45CC", VA = "0x4E45CC")]
		public static BigInteger Add(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x4E4870", Offset = "0x4E4870", VA = "0x4E4870")]
		public static BigInteger operator ++(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x4E4894", Offset = "0x4E4894", VA = "0x4E4894")]
		public static BigInteger Increment(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x4E45D0", Offset = "0x4E45D0", VA = "0x4E45D0")]
		public static BigInteger operator -(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x4E48B8", Offset = "0x4E48B8", VA = "0x4E48B8")]
		public static BigInteger Subtract(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x4E48BC", Offset = "0x4E48BC", VA = "0x4E48BC")]
		public static BigInteger operator --(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x4E48E0", Offset = "0x4E48E0", VA = "0x4E48E0")]
		public static BigInteger Decrement(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x4E40F8", Offset = "0x4E40F8", VA = "0x4E40F8")]
		public static BigInteger operator -(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x4E4904", Offset = "0x4E4904", VA = "0x4E4904")]
		public BigInteger Negate()
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x4E4908", Offset = "0x4E4908", VA = "0x4E4908")]
		public static BigInteger Abs(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x4E3A1C", Offset = "0x4E3A1C", VA = "0x4E3A1C")]
		public static BigInteger operator *(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x4E49D0", Offset = "0x4E49D0", VA = "0x4E49D0")]
		public static BigInteger Multiply(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x4E49D4", Offset = "0x4E49D4", VA = "0x4E49D4")]
		public static BigInteger operator /(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x4E5028", Offset = "0x4E5028", VA = "0x4E5028")]
		public static BigInteger Divide(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x4E4F04", Offset = "0x4E4F04", VA = "0x4E4F04")]
		public static void Divide(BigInteger leftSide, BigInteger rightSide, out BigInteger quotient, out BigInteger remainder)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x4E5558", Offset = "0x4E5558", VA = "0x4E5558")]
		private static void MultiDivide(BigInteger leftSide, BigInteger rightSide, out BigInteger quotient, out BigInteger remainder)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x4E502C", Offset = "0x4E502C", VA = "0x4E502C")]
		private static void SingleDivide(BigInteger leftSide, BigInteger rightSide, out BigInteger quotient, out BigInteger remainder)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x4E64B4", Offset = "0x4E64B4", VA = "0x4E64B4")]
		public static BigInteger operator %(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x4E66A4", Offset = "0x4E66A4", VA = "0x4E66A4")]
		public static BigInteger Modulus(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x4E66A8", Offset = "0x4E66A8", VA = "0x4E66A8")]
		public static BigInteger operator &(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x4E6850", Offset = "0x4E6850", VA = "0x4E6850")]
		public static BigInteger BitwiseAnd(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x4E6854", Offset = "0x4E6854", VA = "0x4E6854")]
		public static BigInteger operator |(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x4E69FC", Offset = "0x4E69FC", VA = "0x4E69FC")]
		public static BigInteger BitwiseOr(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x4E6A00", Offset = "0x4E6A00", VA = "0x4E6A00")]
		public static BigInteger operator ^(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x4E6BA8", Offset = "0x4E6BA8", VA = "0x4E6BA8")]
		public static BigInteger Xor(BigInteger leftSide, BigInteger rightSide)
		{
			return null;
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x4E6BAC", Offset = "0x4E6BAC", VA = "0x4E6BAC")]
		public static BigInteger operator ~(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x4E6CF0", Offset = "0x4E6CF0", VA = "0x4E6CF0")]
		public static BigInteger OnesComplement(BigInteger leftSide)
		{
			return null;
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x4E60BC", Offset = "0x4E60BC", VA = "0x4E60BC")]
		public static BigInteger operator <<(BigInteger leftSide, int shiftCount)
		{
			return null;
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x4E6CF4", Offset = "0x4E6CF4", VA = "0x4E6CF4")]
		public static BigInteger LeftShift(BigInteger leftSide, int shiftCount)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x4E6CF8", Offset = "0x4E6CF8", VA = "0x4E6CF8")]
		public static BigInteger operator >>(BigInteger leftSide, int shiftCount)
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x4E712C", Offset = "0x4E712C", VA = "0x4E712C")]
		public static BigInteger RightShift(BigInteger leftSide, int shiftCount)
		{
			return null;
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x4E71F4", Offset = "0x4E71F4", VA = "0x4E71F4")]
		public int CompareTo(BigInteger value)
		{
			return default(int);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x4E71F8", Offset = "0x4E71F8", VA = "0x4E71F8")]
		public static int Compare(BigInteger leftSide, BigInteger rightSide)
		{
			return default(int);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x4E4C0C", Offset = "0x4E4C0C", VA = "0x4E4C0C")]
		public static bool operator ==(BigInteger leftSide, BigInteger rightSide)
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x4E7334", Offset = "0x4E7334", VA = "0x4E7334")]
		public static bool operator !=(BigInteger leftSide, BigInteger rightSide)
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x4E6228", Offset = "0x4E6228", VA = "0x4E6228")]
		public static bool operator >(BigInteger leftSide, BigInteger rightSide)
		{
			return default(bool);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x4E4C78", Offset = "0x4E4C78", VA = "0x4E4C78")]
		public static bool operator <(BigInteger leftSide, BigInteger rightSide)
		{
			return default(bool);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x4E7348", Offset = "0x4E7348", VA = "0x4E7348")]
		public static bool operator >=(BigInteger leftSide, BigInteger rightSide)
		{
			return default(bool);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x4E7368", Offset = "0x4E7368", VA = "0x4E7368")]
		public static bool operator <=(BigInteger leftSide, BigInteger rightSide)
		{
			return default(bool);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x4E7388", Offset = "0x4E7388", VA = "0x4E7388", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x4E7574", Offset = "0x4E7574", VA = "0x4E7574", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x4E75A8", Offset = "0x4E75A8", VA = "0x4E75A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x4E75B0", Offset = "0x4E75B0", VA = "0x4E75B0")]
		public string ToString(int radix)
		{
			return null;
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x4E7A0C", Offset = "0x4E7A0C", VA = "0x4E7A0C")]
		public string ToHexString()
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x4E7CA8", Offset = "0x4E7CA8", VA = "0x4E7CA8")]
		public static int ToInt16(BigInteger value)
		{
			return default(int);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x4E7DB4", Offset = "0x4E7DB4", VA = "0x4E7DB4")]
		public static uint ToUInt16(BigInteger value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x4E7EC0", Offset = "0x4E7EC0", VA = "0x4E7EC0")]
		public static int ToInt32(BigInteger value)
		{
			return default(int);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x4E7FCC", Offset = "0x4E7FCC", VA = "0x4E7FCC")]
		public static uint ToUInt32(BigInteger value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x4E80D8", Offset = "0x4E80D8", VA = "0x4E80D8")]
		public static long ToInt64(BigInteger value)
		{
			return default(long);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x4E81E4", Offset = "0x4E81E4", VA = "0x4E81E4")]
		public static ulong ToUInt64(BigInteger value)
		{
			return default(ulong);
		}
	}
}
[Token(Token = "0x2000331")]
public class FbxConnectionObj
{
	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string type1;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string name1;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id1;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string type2;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name2;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string id2;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string relation;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string relationDesc;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasRelationDesc;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isSucceed;

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x3B95F0", Offset = "0x3B95F0", VA = "0x3B95F0")]
	public FbxConnectionObj(string type1, string name1, string id1, string type2, string name2, string id2, string relation, string relationDesc = "")
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x3B96E4", Offset = "0x3B96E4", VA = "0x3B96E4")]
	public FbxConnectionObj(string connectionStr)
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x3B9BE8", Offset = "0x3B9BE8", VA = "0x3B9BE8")]
	public string getOutputData()
	{
		return null;
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x3BA8E8", Offset = "0x3BA8E8", VA = "0x3BA8E8")]
	public void Log()
	{
	}
}
[Token(Token = "0x2000332")]
public class FbxConnectionsManager
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string fbxStrData;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string originalConnectionData;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<FbxConnectionObj> connObjs;

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x3BAF68", Offset = "0x3BAF68", VA = "0x3BAF68")]
	public FbxConnectionsManager(string inputData)
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0x3BB4E8", Offset = "0x3BB4E8", VA = "0x3BB4E8")]
	public void EditTargetFile(string targetFilePath)
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0x3BB024", Offset = "0x3BB024", VA = "0x3BB024")]
	private void LoadObjectsData()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x3BB6F4", Offset = "0x3BB6F4", VA = "0x3BB6F4")]
	public void AddConnectionItem(string type1, string name1, string id1, string type2, string name2, string id2, string relation, string relationDesc = "")
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0x3BB7D8", Offset = "0x3BB7D8", VA = "0x3BB7D8")]
	public string searchObjectId(string objectName)
	{
		return null;
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0x3BB98C", Offset = "0x3BB98C", VA = "0x3BB98C")]
	public string getAnimBaseLayerId()
	{
		return null;
	}
}
[Token(Token = "0x2000333")]
public class FbxDataNode
{
	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string nodeName;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string nodeData;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int level;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<FbxDataNode> subNodes;

	[Token(Token = "0x170001A2")]
	private bool hasSubNode
	{
		[Token(Token = "0x6001557")]
		[Address(RVA = "0x3BC764", Offset = "0x3BC764", VA = "0x3BC764")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0x3BBBF8", Offset = "0x3BBBF8", VA = "0x3BBBF8")]
	public FbxDataNode(string nodeName, string nodeData, int level)
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0x3BBC9C", Offset = "0x3BBC9C", VA = "0x3BBC9C")]
	public static FbxDataNode[] FetchNodes(string inputData, int level)
	{
		return null;
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0x3BC294", Offset = "0x3BC294", VA = "0x3BC294")]
	public static string[] GetNodeData(string strLine)
	{
		return null;
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0x3BC6E4", Offset = "0x3BC6E4", VA = "0x3BC6E4")]
	public void addSubNode(FbxDataNode newNode)
	{
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0x3BC7EC", Offset = "0x3BC7EC", VA = "0x3BC7EC")]
	public string getResultData()
	{
		return null;
	}
}
[Token(Token = "0x2000334")]
public class FbxDefinitionManager : MonoBehaviour
{
	[Token(Token = "0x600155A")]
	[Address(RVA = "0x3BCD08", Offset = "0x3BCD08", VA = "0x3BCD08")]
	public FbxDefinitionManager()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x3BCD10", Offset = "0x3BCD10", VA = "0x3BCD10")]
	private void Start()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x3BCD14", Offset = "0x3BCD14", VA = "0x3BCD14")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000335")]
public class FbxExporter : MonoBehaviour
{
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x240118", Offset = "0x240118")]
	private sealed class <ExportToFile>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string <animBaseLayerId>__0;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <i>__1;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal TransformTracker <objTracker>__2;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string <objName>__2;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string <objId>__2;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal string <animCurveNodeT_id>__2;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string <animCurveNodeR_id>__2;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal string <animCurveNodeS_id>__2;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal string <curveT_X_id>__2;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal string <curveT_Y_id>__2;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal string <curveT_Z_id>__2;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal string <curveR_X_id>__2;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal string <curveR_Y_id>__2;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal string <curveR_Z_id>__2;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal string <curveS_X_id>__2;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal string <curveS_Y_id>__2;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal string <curveS_Z_id>__2;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal float[] <xData>__2;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal float[] <yData>__2;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal float[] <zData>__2;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal int <dataCount>__2;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal FbxExporter $this;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal object $current;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal bool $disposing;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal int $PC;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x3C059C", Offset = "0x3C059C", VA = "0x3C059C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x3C05A4", Offset = "0x3C05A4", VA = "0x3C05A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x3BDB38", Offset = "0x3BDB38", VA = "0x3BDB38")]
		[DebuggerHidden]
		public <ExportToFile>c__Iterator0()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x3BDB70", Offset = "0x3BDB70", VA = "0x3BDB70", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x3C05AC", Offset = "0x3C05AC", VA = "0x3C05AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x3C05C0", Offset = "0x3C05C0", VA = "0x3C05C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string sourceFilePath;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string exportFilePath;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private FbxObjectsManager fbxObj;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FbxConnectionsManager fbxConn;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Transform[] observeTargets;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TransformTracker[] trackers;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int objNums;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode startRecordKey;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode endRecordKey;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool includePathName;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool recordPos;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool recordRot;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool recordScale;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isRecording;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nowIdNum;

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x3BCD18", Offset = "0x3BCD18", VA = "0x3BCD18")]
	public FbxExporter()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x3BCD54", Offset = "0x3BCD54", VA = "0x3BCD54")]
	private void Start()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x3BCD58", Offset = "0x3BCD58", VA = "0x3BCD58")]
	private void SetupRecordItems()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x3BD0E0", Offset = "0x3BD0E0", VA = "0x3BD0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x3BD124", Offset = "0x3BD124", VA = "0x3BD124")]
	private void StartRecording()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x3BD1BC", Offset = "0x3BD1BC", VA = "0x3BD1BC")]
	private void EndRecording()
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x3BD2F0", Offset = "0x3BD2F0", VA = "0x3BD2F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x3BD38C", Offset = "0x3BD38C", VA = "0x3BD38C")]
	private void ModifyDefinitions(string targetFilePath)
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0x3BD26C", Offset = "0x3BD26C", VA = "0x3BD26C")]
	[DebuggerHidden]
	private IEnumerator ExportToFile()
	{
		return null;
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0x3BDB40", Offset = "0x3BDB40", VA = "0x3BDB40")]
	private string getNewId()
	{
		return null;
	}
}
[Token(Token = "0x2000337")]
public static class FbxHelper
{
	[Token(Token = "0x600156D")]
	[Address(RVA = "0x3C0648", Offset = "0x3C0648", VA = "0x3C0648")]
	public static string getFbxSeconds(int frameIndex, int frameRate)
	{
		return null;
	}
}
[Token(Token = "0x2000338")]
public class FbxObjectNode
{
	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string nodeName;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string nodeValue;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string headerString;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<FbxObjectSubNode> subNodes;

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x3C0730", Offset = "0x3C0730", VA = "0x3C0730")]
	public FbxObjectNode(string nodeType, string nodeId, string nodeName, string subType)
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x3C0B40", Offset = "0x3C0B40", VA = "0x3C0B40")]
	public void AddSubnode(string inputName, string inputValue)
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x3C0D50", Offset = "0x3C0D50", VA = "0x3C0D50")]
	public void AddSubnode(string inputName, float[] inputFloatData)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x3C1048", Offset = "0x3C1048", VA = "0x3C1048")]
	public void AddSubnode(string inputName, string[] inputStringData)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x3C1330", Offset = "0x3C1330", VA = "0x3C1330")]
	public void AddSubnode(string inputName, int[] inputIntData)
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0x3C1628", Offset = "0x3C1628", VA = "0x3C1628")]
	public string GetResultString()
	{
		return null;
	}
}
[Token(Token = "0x2000339")]
public class FbxObjectsManager
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<FbxObjectNode> objNodes;

	[Token(Token = "0x6001574")]
	[Address(RVA = "0x3BFA48", Offset = "0x3BFA48", VA = "0x3BFA48")]
	public FbxObjectsManager()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x3C0200", Offset = "0x3C0200", VA = "0x3C0200")]
	public void EditTargetFile(string targetFilePath)
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x3C189C", Offset = "0x3C189C", VA = "0x3C189C")]
	public void AddObject(string nodeType, string nodeId, string nodeName, string subType)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0x3BFAD4", Offset = "0x3BFAD4", VA = "0x3BFAD4")]
	public void AddAnimationCurveNode(string inputId, FbxAnimationCurveNodeType animCurveType, Vector3 initData)
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x3BFD54", Offset = "0x3BFD54", VA = "0x3BFD54")]
	public void AddAnimationCurve(string inputId, float[] curveData)
	{
	}
}
[Token(Token = "0x200033A")]
public enum FbxAnimationCurveNodeType
{
	[Token(Token = "0x4000FB4")]
	Translation,
	[Token(Token = "0x4000FB5")]
	Rotation,
	[Token(Token = "0x4000FB6")]
	Scale,
	[Token(Token = "0x4000FB7")]
	Visibility
}
[Token(Token = "0x200033B")]
public class FbxObjectSubNode
{
	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string nodeName;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string nodeValue;

	[Token(Token = "0x6001579")]
	[Address(RVA = "0x3C0C00", Offset = "0x3C0C00", VA = "0x3C0C00")]
	public FbxObjectSubNode()
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0x3C0CAC", Offset = "0x3C0CAC", VA = "0x3C0CAC")]
	public void SetupData(string inputName, string inputValue)
	{
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x3C0E10", Offset = "0x3C0E10", VA = "0x3C0E10")]
	public void SetupData(string inputName, float[] inputData)
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x3C13F0", Offset = "0x3C13F0", VA = "0x3C13F0")]
	public void SetupData(string inputName, int[] inputData)
	{
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x3C1108", Offset = "0x3C1108", VA = "0x3C1108")]
	public void SetupData(string inputName, string[] inputData)
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x3C17FC", Offset = "0x3C17FC", VA = "0x3C17FC")]
	public string GetResultString()
	{
		return null;
	}
}
[Token(Token = "0x200033C")]
public class testFBX : MonoBehaviour
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string filePath;

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x1337010", Offset = "0x1337010", VA = "0x1337010")]
	public testFBX()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x1337018", Offset = "0x1337018", VA = "0x1337018")]
	private void Start()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x1337398", Offset = "0x1337398", VA = "0x1337398")]
	private void Update()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x133707C", Offset = "0x133707C", VA = "0x133707C")]
	private void LoadAttribute(string attributeName)
	{
	}
}
[Token(Token = "0x200033D")]
public class ExportHelper
{
	[Token(Token = "0x6001583")]
	[Address(RVA = "0x3B935C", Offset = "0x3B935C", VA = "0x3B935C")]
	public ExportHelper()
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x3B9364", Offset = "0x3B9364", VA = "0x3B9364")]
	public static Vector3 UnityToMayaPosition(Vector3 t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x3B9394", Offset = "0x3B9394", VA = "0x3B9394")]
	public static Vector3 UnityToMayaRotation(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x3B940C", Offset = "0x3B940C", VA = "0x3B940C")]
	public static Vector3 WikiQuaternionToRotation(Quaternion q, Vector3 axisMultiplier)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200033E")]
public class TransformTracker
{
	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Transform targetTransform;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool recordPos;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool recordRot;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	private bool recordScale;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector3> posDataList;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<Quaternion> rotDataList;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> scaleDataList;

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x413824", Offset = "0x413824", VA = "0x413824")]
	public TransformTracker(Transform targetObj, bool trackPos, bool trackRot, bool trackScale)
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x41395C", Offset = "0x41395C", VA = "0x41395C")]
	public void recordFrame()
	{
	}
}
[Token(Token = "0x200033F")]
public class MayaAnimationRecorder : MonoBehaviour
{
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x240128", Offset = "0x240128")]
	private sealed class <EndRecord>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MayaAnimationRecorder $this;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x44146C", Offset = "0x44146C", VA = "0x44146C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x441474", Offset = "0x441474", VA = "0x441474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x43EF2C", Offset = "0x43EF2C", VA = "0x43EF2C")]
		[DebuggerHidden]
		public <EndRecord>c__Iterator0()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x43EFC0", Offset = "0x43EFC0", VA = "0x43EFC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x44147C", Offset = "0x44147C", VA = "0x44147C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x441490", Offset = "0x441490", VA = "0x441490", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x240138", Offset = "0x240138")]
	private sealed class <exportToMayaAnimation>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string <newFilePath>__0;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string <maFileData>__0;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal StreamWriter <writer>__0;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <i>__1;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal StreamReader <reader>__2;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal MayaAnimationRecorder $this;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x441BEC", Offset = "0x441BEC", VA = "0x441BEC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x441BF4", Offset = "0x441BF4", VA = "0x441BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x43EFB8", Offset = "0x43EFB8", VA = "0x43EFB8")]
		[DebuggerHidden]
		public <exportToMayaAnimation>c__Iterator1()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x441518", Offset = "0x441518", VA = "0x441518", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x441BFC", Offset = "0x441BFC", VA = "0x441BFC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x441C10", Offset = "0x441C10", VA = "0x441C10", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform[] observeObjs;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MayaNodeDataContainer[] objAnims;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string saveFolderPath;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveFileName;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string originalMaFilePath;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode startKey;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode endKey;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool changeTimeScale;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float startGameWithTimeScale;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float startRecordWithTimeScale;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool recordPosition;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool recordRotation;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool recordScale;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool includePathName;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool showLogGUI;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string logMessage;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool recordLimitFrames;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int recordFrames;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int processPerFrame;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int frameIndexToStartTransform;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isTransformStart;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int objNums;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int frameIndex;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isStart;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isEnd;

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x43E510", Offset = "0x43E510", VA = "0x43E510")]
	public MayaAnimationRecorder()
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x43E5F0", Offset = "0x43E5F0", VA = "0x43E5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x43E620", Offset = "0x43E620", VA = "0x43E620")]
	private void SettingRecordItems()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x43EB58", Offset = "0x43EB58", VA = "0x43EB58")]
	private void Update()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x43ECA8", Offset = "0x43ECA8", VA = "0x43ECA8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x43EB9C", Offset = "0x43EB9C", VA = "0x43EB9C")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x43EC20", Offset = "0x43EC20", VA = "0x43EC20")]
	public void StopRecording()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x43ED2C", Offset = "0x43ED2C", VA = "0x43ED2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x43EEA8", Offset = "0x43EEA8", VA = "0x43EEA8")]
	[DebuggerHidden]
	private IEnumerator EndRecord()
	{
		return null;
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x43EF34", Offset = "0x43EF34", VA = "0x43EF34")]
	[DebuggerHidden]
	private IEnumerator exportToMayaAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x43EAC0", Offset = "0x43EAC0", VA = "0x43EAC0")]
	private void ShowLog(string logStr)
	{
	}
}
[Token(Token = "0x2000342")]
public class MayaNodeDataContainer
{
	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private TransformTracker tracker;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform observeObj;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string objNodeName;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string saveFileName;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string fileFolderPath;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool recordTranslation;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool recordRotation;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool recordScale;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objFinalFilePath;

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x43E998", Offset = "0x43E998", VA = "0x43E998")]
	public MayaNodeDataContainer(Transform inputObj, string namePath, string inputPath, bool recordT, bool recordR, bool recordS)
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x43EE7C", Offset = "0x43EE7C", VA = "0x43EE7C")]
	public void recordFrame(int frameIndex)
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x43F1A8", Offset = "0x43F1A8", VA = "0x43F1A8")]
	public void WriteIntoFile()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x441A34", Offset = "0x441A34", VA = "0x441A34")]
	public string getFinalFilePath()
	{
		return null;
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x441AE4", Offset = "0x441AE4", VA = "0x441AE4")]
	public bool cleanFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x441C98", Offset = "0x441C98", VA = "0x441C98")]
	private string getMayaCurveHeadContent(string curveName, string propertyName, int animCount)
	{
		return null;
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x44233C", Offset = "0x44233C", VA = "0x44233C")]
	private string getMayaCurveFootContent(string propertyName, string footPropertyName)
	{
		return null;
	}
}
[Token(Token = "0x2000343")]
public class UnityAnimationRecorder : MonoBehaviour
{
	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityAnimationRecorder instance;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string savePath;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string fileName;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int fileIndex;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool externalControl;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode startRecordKey;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode stopRecordKey;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showLogGUI;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string logMessage;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool recordLimitedFrames;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int recordFrames;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frameIndex;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool changeTimeScale;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float timeScaleOnStart;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeScaleOnRecord;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool useThreshold;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float threshold;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Transform[] recordObjs;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityObjectAnimation[] objRecorders;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isStart;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float nowTime;

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x414858", Offset = "0x414858", VA = "0x414858")]
	public UnityAnimationRecorder()
	{
	}
}
[Token(Token = "0x2000344")]
public class UnityCurveContainer
{
	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string propertyName;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve animCurve;

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x41492C", Offset = "0x41492C", VA = "0x41492C")]
	public UnityCurveContainer(string _propertyName)
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x4149F8", Offset = "0x4149F8", VA = "0x4149F8")]
	public void AddValue(float animTime, float animValue)
	{
	}
}
[Token(Token = "0x2000345")]
public class UnityObjectAnimation
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UnityCurveContainer[] curves;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform observeGameObject;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string pathName;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 lastPosition;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion lastRotation;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastScale;

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x414A90", Offset = "0x414A90", VA = "0x414A90")]
	public UnityObjectAnimation(string hierarchyPath, Transform observeObj)
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x4151D8", Offset = "0x4151D8", VA = "0x4151D8")]
	public void AddFrame(float time)
	{
	}
}
[Token(Token = "0x2000346")]
public class VRBackgroundLogic : MonoBehaviour
{
	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRBackgroundLogic mainMenuBkg;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UITexture tex;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float backupAlpha;

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x4162B0", Offset = "0x4162B0", VA = "0x4162B0")]
	public VRBackgroundLogic()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x4162B8", Offset = "0x4162B8", VA = "0x4162B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x4163B8", Offset = "0x4163B8", VA = "0x4163B8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x4163FC", Offset = "0x4163FC", VA = "0x4163FC")]
	private void Instance_VRStatusChanging(object sender, VRStatusEventArgs e)
	{
	}
}
[Token(Token = "0x2000347")]
public class VRPanelLogic : MonoBehaviour
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UIButton openSessionConfig;

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x417AD4", Offset = "0x417AD4", VA = "0x417AD4")]
	public VRPanelLogic()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x417ADC", Offset = "0x417ADC", VA = "0x417ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x417BCC", Offset = "0x417BCC", VA = "0x417BCC")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000348")]
public class VRTouchViz : MonoBehaviour
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform viz;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VRControllerAnimation vrca;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float scale;

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x41A140", Offset = "0x41A140", VA = "0x41A140")]
	public VRTouchViz()
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x41A150", Offset = "0x41A150", VA = "0x41A150")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x41A1F4", Offset = "0x41A1F4", VA = "0x41A1F4")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000349")]
[ExecuteInEditMode]
public class WalkableTest : MonoBehaviour
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BlockTerrain terrain;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool walkable;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int x;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int y;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int z;

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x41C490", Offset = "0x41C490", VA = "0x41C490")]
	public WalkableTest()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x41C498", Offset = "0x41C498", VA = "0x41C498")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x41C49C", Offset = "0x41C49C", VA = "0x41C49C")]
	private void Update()
	{
	}
}
[Token(Token = "0x200034A")]
public class WiiUThreadCore : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x240158", Offset = "0x240158")]
	private sealed class <CreateThreadOnCore>c__AnonStorey0
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int coreToRunOn;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ThreadStart threadStart;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x41CA48", Offset = "0x41CA48", VA = "0x41CA48")]
		public <CreateThreadOnCore>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x41CB60", Offset = "0x41CB60", VA = "0x41CB60")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2475FC", Offset = "0x2475FC")]
	private static ThreadStart <>f__am$cache0;

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x41C574", Offset = "0x41C574", VA = "0x41C574")]
	public WiiUThreadCore()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x41C580", Offset = "0x41C580", VA = "0x41C580")]
	private static extern void ThreadCore_MigrateThreadToCore(int coreToRunOn);

	[PreserveSig]
	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x41C660", Offset = "0x41C660", VA = "0x41C660")]
	private static extern uint ThreadCore_GetCurrentCore();

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x41C768", Offset = "0x41C768", VA = "0x41C768")]
	private void Start()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x41C76C", Offset = "0x41C76C", VA = "0x41C76C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x41C770", Offset = "0x41C770", VA = "0x41C770")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x41C8F0", Offset = "0x41C8F0", VA = "0x41C8F0")]
	public static Thread CreateThreadOnCore(ThreadStart threadStart, int coreToRunOn)
	{
		return null;
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x41CA50", Offset = "0x41CA50", VA = "0x41CA50")]
	public static uint GetCurrentCore()
	{
		return default(uint);
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x41CA54", Offset = "0x41CA54", VA = "0x41CA54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x248B30", Offset = "0x248B30")]
	private static void <OnGUI>m__0()
	{
	}
}
