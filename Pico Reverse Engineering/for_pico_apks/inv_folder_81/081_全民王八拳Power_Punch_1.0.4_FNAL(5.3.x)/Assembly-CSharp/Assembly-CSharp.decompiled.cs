using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;
using System.Net.WebSockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using AnimationOrTween;
using Assets.Boxing.AI;
using Assets.Boxing.Scripts;
using Assets.Boxing.Scripts.Interface;
using Assets.Boxing.Scripts.Scriptable;
using Assets.Boxing.Scripts.UI;
using Assets.FitBoxing.Scripts;
using Assets.FitBoxing.Scripts.NetSync;
using Assets.FitBoxing.Scripts.NetSync.SyncManager;
using Assets.FitBoxing.Scripts.PlatformAdapater;
using Assets.FitBoxing.Scripts.Scriptable;
using Assets.FitBoxing.Scripts.UI;
using Assets.FitBoxing.Scripts.UI.CornerMark;
using Assets.Scripts.Audio;
using Assets.Scripts.Input;
using Assets.Scripts.Interact;
using Assets.Scripts.Language;
using Assets.Scripts.Tools;
using BehaviorDesigner.Runtime;
using BehaviorDesigner.Runtime.Tasks;
using Exploder;
using FBCore.StateMachine;
using GGTransfer;
using Il2CppDummyDll;
using Obi;
using TMPro;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AutoZoomHide : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	private sealed class <ZoomHide>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoZoomHide <>4__this;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startSnapHeight>5__2;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <lt>5__4;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000007")]
			[Address(RVA = "0xC6E1AC", Offset = "0xC6E1AC", VA = "0xC6E1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000009")]
			[Address(RVA = "0xC6E1F4", Offset = "0xC6E1F4", VA = "0xC6E1F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0xC6DECC", Offset = "0xC6DECC", VA = "0xC6DECC")]
		[DebuggerHidden]
		public <ZoomHide>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000005")]
		[Address(RVA = "0xC6DEFC", Offset = "0xC6DEFC", VA = "0xC6DEFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0xC6DF00", Offset = "0xC6DF00", VA = "0xC6DF00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xC6E1B4", Offset = "0xC6E1B4", VA = "0xC6E1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject matchGround;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xC6DE38", Offset = "0xC6DE38", VA = "0xC6DE38")]
	public void DoZoomHide()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xC6DE58", Offset = "0xC6DE58", VA = "0xC6DE58")]
	[IteratorStateMachine(typeof(<ZoomHide>d__3))]
	private IEnumerator ZoomHide()
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xC6DEF4", Offset = "0xC6DEF4", VA = "0xC6DEF4")]
	public AutoZoomHide()
	{
	}
}
[Token(Token = "0x2000004")]
public class BattlefieldSliderManager : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	[CompilerGenerated]
	private sealed class <AutoChangeTex>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BattlefieldSliderManager <>4__this;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <next>5__2;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <percent>5__3;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000010")]
			[Address(RVA = "0xC6E61C", Offset = "0xC6E61C", VA = "0xC6E61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000012")]
			[Address(RVA = "0xC6E664", Offset = "0xC6E664", VA = "0xC6E664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0xC6E384", Offset = "0xC6E384", VA = "0xC6E384")]
		[DebuggerHidden]
		public <AutoChangeTex>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600000E")]
		[Address(RVA = "0xC6E3B4", Offset = "0xC6E3B4", VA = "0xC6E3B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0xC6E3B8", Offset = "0xC6E3B8", VA = "0xC6E3B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0xC6E624", Offset = "0xC6E624", VA = "0xC6E624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Texture2D> textures;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentIndex;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material m;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xC6E1FC", Offset = "0xC6E1FC", VA = "0xC6E1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xC6E310", Offset = "0xC6E310", VA = "0xC6E310")]
	[IteratorStateMachine(typeof(<AutoChangeTex>d__4))]
	private IEnumerator AutoChangeTex()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xC6E3AC", Offset = "0xC6E3AC", VA = "0xC6E3AC")]
	public BattlefieldSliderManager()
	{
	}
}
[Token(Token = "0x2000006")]
public class BoxDummy : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActionChecker actionChecker;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text fistText;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text comboText;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text countText;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text otherInfo;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int hit;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xC6E66C", Offset = "0xC6E66C", VA = "0xC6E66C")]
	private void ShowHit(HitData hitData)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xC6E818", Offset = "0xC6E818", VA = "0xC6E818")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xC6EE18", Offset = "0xC6EE18", VA = "0xC6EE18")]
	public BoxDummy()
	{
	}
}
[Token(Token = "0x2000007")]
public class CommandBuild
{
	[Token(Token = "0x17000005")]
	private static string bundleVersion
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0xC6EE20", Offset = "0xC6EE20", VA = "0xC6EE20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xC6EE60", Offset = "0xC6EE60", VA = "0xC6EE60")]
	public CommandBuild()
	{
	}
}
[Token(Token = "0x2000008")]
public class EGA_DemoLasers : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FirePoint;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera Cam;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxLength;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray RayMouse;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 direction;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion rotation;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Header("GUI")]
	private float windowDpi;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int Prefab;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Instance;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EGA_Laser LaserScript;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float buttonSaver;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC6EE68", Offset = "0xC6EE68", VA = "0xC6EE68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC6EF18", Offset = "0xC6EF18", VA = "0xC6EF18")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xC6F4F8", Offset = "0xC6F4F8", VA = "0xC6F4F8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC6EED4", Offset = "0xC6EED4", VA = "0xC6EED4")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC6F428", Offset = "0xC6F428", VA = "0xC6F428")]
	private void RotateToMouseDirection(GameObject obj, Vector3 destination)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xC6F614", Offset = "0xC6F614", VA = "0xC6F614")]
	public EGA_DemoLasers()
	{
	}
}
[Token(Token = "0x2000009")]
public class EGA_Laser : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HitEffect;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HitOffset;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxLength;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer Laser;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask castLayer;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MainTextureLength;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float NoiseTextureLength;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector4 Length;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool LaserSaver;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool UpdateSaver;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem[] Effects;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem[] Hit;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xC6F61C", Offset = "0xC6F61C", VA = "0xC6F61C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xC6F6E8", Offset = "0xC6F6E8", VA = "0xC6F6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xC6F33C", Offset = "0xC6F33C", VA = "0xC6F33C")]
	public void DisablePrepare()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xC6F6EC", Offset = "0xC6F6EC", VA = "0xC6F6EC")]
	public EGA_Laser()
	{
	}
}
[Token(Token = "0x200000A")]
public class QuickStart : MonoBehaviour
{
	[Token(Token = "0x6000022")]
	[Address(RVA = "0xC6F704", Offset = "0xC6F704", VA = "0xC6F704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xC6F770", Offset = "0xC6F770", VA = "0xC6F770")]
	public QuickStart()
	{
	}
}
[Token(Token = "0x200000B")]
public class TweenFragment : MonoBehaviour
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPos;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpTime;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initPos;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xC6F778", Offset = "0xC6F778", VA = "0xC6F778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xC6F7AC", Offset = "0xC6F7AC", VA = "0xC6F7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xC6F87C", Offset = "0xC6F87C", VA = "0xC6F87C")]
	public TweenFragment()
	{
	}
}
[Token(Token = "0x200000C")]
public class ActionChecker : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> actionQueue;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftHand;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightHand;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TrackingLeft;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform TrackingRight;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform FakeTrackingLeft;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform FakeTrackingRight;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isTerminate;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<HandTrackingData> list;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<HandTrackingInfo> leftPos;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<HandTrackingInfo> rightPos;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<HandTrackingInfo> leftPosOutfit;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<HandTrackingInfo> rightPosOutfit;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float leftSaltFishTime;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float rightSaltFishTime;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool startRecord;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float startRecordTime;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FistPathType FistRightPathType;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public FistPathType FistLeftPathType;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int hit;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<HitData> recentHitQueue;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool resetSaltFishLeft;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool resetSaltFishRight;

	[Token(Token = "0x17000006")]
	public float LeftTrackLength
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xC6FB94", Offset = "0xC6FB94", VA = "0xC6FB94")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000007")]
	public float RightTrackLength
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xC6FC98", Offset = "0xC6FC98", VA = "0xC6FC98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xC6F884", Offset = "0xC6F884", VA = "0xC6F884")]
	public void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC6FA18", Offset = "0xC6FA18", VA = "0xC6FA18")]
	private void RebindController()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC6FD9C", Offset = "0xC6FD9C", VA = "0xC6FD9C")]
	public void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC6EC54", Offset = "0xC6EC54", VA = "0xC6EC54")]
	public HitData OnHitLeft()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC6E8F4", Offset = "0xC6E8F4", VA = "0xC6E8F4")]
	public HitData OnHitRight()
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC7121C", Offset = "0xC7121C", VA = "0xC7121C")]
	private SpecialCombo CheckSpecialCombo()
	{
		return default(SpecialCombo);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xC70EB4", Offset = "0xC70EB4", VA = "0xC70EB4")]
	private bool DoubleHandChecking(List<HandTrackingInfo> left, List<HandTrackingInfo> right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC70530", Offset = "0xC70530", VA = "0xC70530")]
	private FistPathType DoCheckIt(List<HandTrackingInfo> posList, bool isLeft, ref float saltFishPoint)
	{
		return default(FistPathType);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xC713C4", Offset = "0xC713C4", VA = "0xC713C4")]
	public Color GetDebugColorByFistType(FistPathType fistPathType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xC70378", Offset = "0xC70378", VA = "0xC70378")]
	public HandTrackingInfo SnapCurrentHand(Transform hand)
	{
		return default(HandTrackingInfo);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xC71410", Offset = "0xC71410", VA = "0xC71410")]
	public ActionChecker()
	{
	}
}
[Token(Token = "0x200000D")]
public struct HandTrackingInfo
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float time;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float deltaTime;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 postion;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 speed;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion rotation;
}
[Serializable]
[Token(Token = "0x200000E")]
public class HandTrackingData
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] postion;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] rotation;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xC702E4", Offset = "0xC702E4", VA = "0xC702E4")]
	public static float[] ToFloat3(Vector3 v3)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xC70240", Offset = "0xC70240", VA = "0xC70240")]
	public static float[] ToFloat3(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xC715B8", Offset = "0xC715B8", VA = "0xC715B8")]
	public static Vector3 ToVector3(float[] f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xC715F0", Offset = "0xC715F0", VA = "0xC715F0")]
	public static Quaternion ToQuaternion(float[] f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xC71630", Offset = "0xC71630", VA = "0xC71630")]
	public static string DoSerialize(List<HandTrackingData> list, int index)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xC71808", Offset = "0xC71808", VA = "0xC71808")]
	public static List<HandTrackingData> DoDeserialize(int index)
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xC71880", Offset = "0xC71880", VA = "0xC71880")]
	public static List<HandTrackingData> DeSerialize(string data)
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xC70238", Offset = "0xC70238", VA = "0xC70238")]
	public HandTrackingData()
	{
	}
}
[Token(Token = "0x200000F")]
public enum FistPathType
{
	[Token(Token = "0x4000053")]
	PREPARE,
	[Token(Token = "0x4000054")]
	STRAIGHT,
	[Token(Token = "0x4000055")]
	UP,
	[Token(Token = "0x4000056")]
	DOWN,
	[Token(Token = "0x4000057")]
	HOOK
}
[Token(Token = "0x2000010")]
public enum HitHand
{
	[Token(Token = "0x4000059")]
	LEFT,
	[Token(Token = "0x400005A")]
	RIGHT,
	[Token(Token = "0x400005B")]
	DOUBLE
}
[Token(Token = "0x2000011")]
public enum SpecialCombo
{
	[Token(Token = "0x400005D")]
	NONE,
	[Token(Token = "0x400005E")]
	THUNDER_FIVE_WHIP
}
[Token(Token = "0x2000012")]
public class HitData
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HitHand hitHand;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public FistPathType fistPathType;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialCombo specialCombo;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 speed;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float punchLength;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xC713A0", Offset = "0xC713A0", VA = "0xC713A0")]
	public bool IsSame(HitHand hitHand1, FistPathType fistPathType1)
	{
		return default(bool);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xC70EAC", Offset = "0xC70EAC", VA = "0xC70EAC")]
	public HitData()
	{
	}
}
[Token(Token = "0x2000013")]
public class ActionReplayer : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float playSpeed;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> actionQueue;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHand;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHand;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isTerminate;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool startReplay;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int currentReplayFrame;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float sinceLastFrame;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<HandTrackingData> ReplayList;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xC719E8", Offset = "0xC719E8", VA = "0xC719E8")]
	public void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xC719F8", Offset = "0xC719F8", VA = "0xC719F8")]
	private void DoReplay()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xC71C98", Offset = "0xC71C98", VA = "0xC71C98")]
	public ActionReplayer()
	{
	}
}
[Token(Token = "0x2000014")]
public class BBMain : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Main;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Left;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Right;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoPlayer Move;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xC71D78", Offset = "0xC71D78", VA = "0xC71D78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xC71E68", Offset = "0xC71E68", VA = "0xC71E68")]
	public static string EncryptMD5(string Token)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xC71F6C", Offset = "0xC71F6C", VA = "0xC71F6C")]
	public void ToBackTutorial()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xC7209C", Offset = "0xC7209C", VA = "0xC7209C")]
	public BBMain()
	{
	}
}
[Token(Token = "0x2000015")]
public class BBMapBlockPlaceManager : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float width;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float height;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool wireShow;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PlaceBlockInfo> blocks;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC720A4", Offset = "0xC720A4", VA = "0xC720A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xC722A0", Offset = "0xC722A0", VA = "0xC722A0")]
	public void ClearBlock()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC722F0", Offset = "0xC722F0", VA = "0xC722F0")]
	public Vector3 AllocRandomPos(PlaceBlockInfo info)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xC72830", Offset = "0xC72830", VA = "0xC72830")]
	public Vector3 GetRandomPos(PlaceBlockInfo info)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xC729A4", Offset = "0xC729A4", VA = "0xC729A4")]
	public bool AllocPos(PlaceBlockInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xC72A58", Offset = "0xC72A58", VA = "0xC72A58")]
	private bool PlaceBlock(PlaceBlockInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xC72464", Offset = "0xC72464", VA = "0xC72464")]
	private Vector2 PlaceBlockRandom(PlaceBlockInfo block, bool write = true)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xC72E3C", Offset = "0xC72E3C", VA = "0xC72E3C")]
	public List<Vector2> GetYRandomList(List<PlaceBlockInfo> blocks, PlaceBlockInfo block)
	{
		return null;
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xC72D9C", Offset = "0xC72D9C", VA = "0xC72D9C")]
	public PlaceBlockInfo GetBlockRandomX(PlaceBlockInfo block)
	{
		return default(PlaceBlockInfo);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xC72DEC", Offset = "0xC72DEC", VA = "0xC72DEC")]
	public PlaceBlockInfo GetBlockRandomY(PlaceBlockInfo block)
	{
		return default(PlaceBlockInfo);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xC72D2C", Offset = "0xC72D2C", VA = "0xC72D2C")]
	public bool OverlapBlockX(PlaceBlockInfo a, PlaceBlockInfo b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xC72D64", Offset = "0xC72D64", VA = "0xC72D64")]
	public bool OverlapBlockY(PlaceBlockInfo a, PlaceBlockInfo b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xC732A4", Offset = "0xC732A4", VA = "0xC732A4")]
	public BBMapBlockPlaceManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public struct PlaceBlockInfo
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float width;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float height;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float x;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float y;

	[Token(Token = "0x17000008")]
	public float minX
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0xC73274", Offset = "0xC73274", VA = "0xC73274")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public float maxX
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xC7328C", Offset = "0xC7328C", VA = "0xC7328C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public float minY
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xC73244", Offset = "0xC73244", VA = "0xC73244")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000B")]
	public float maxY
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xC7325C", Offset = "0xC7325C", VA = "0xC7325C")]
		get
		{
			return default(float);
		}
	}
}
[Token(Token = "0x2000018")]
public struct BBReportData
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool isWin;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int index;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int kill;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hit;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int strongHit;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float time;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float calories;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int lifeOppNum;
}
[Token(Token = "0x2000019")]
public class BeginnerGuideManagerIF : BeginnerGuideManager
{
	[Token(Token = "0x200001A")]
	public enum IronAudio
	{
		[Token(Token = "0x4000092")]
		MoveWelcome,
		[Token(Token = "0x4000093")]
		Move1,
		[Token(Token = "0x4000094")]
		Move2,
		[Token(Token = "0x4000095")]
		Move3,
		[Token(Token = "0x4000096")]
		Move4,
		[Token(Token = "0x4000097")]
		Move5,
		[Token(Token = "0x4000098")]
		MoveFinish,
		[Token(Token = "0x4000099")]
		AttackWelcome,
		[Token(Token = "0x400009A")]
		StrongAttack,
		[Token(Token = "0x400009B")]
		StopAttack,
		[Token(Token = "0x400009C")]
		FleeCircle,
		[Token(Token = "0x400009D")]
		DizzAttack,
		[Token(Token = "0x400009E")]
		AttackFinish,
		[Token(Token = "0x400009F")]
		Drop
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UITargetArrow targetArrow;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UIGamePadArrow stickTipsUI;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BeginnerGuideManagerIF Instance;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public MatchGround battleGround;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public MatchGround moveGround;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int ModeInt;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform prizeTransform;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform JoystickUI;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform[] JoyPos;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public WinnerUI WinnerPanel;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject prizeXRRigGo;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject quitUI;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ParticleSystem[] confettis;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xC733C4", Offset = "0xC733C4", VA = "0xC733C4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xC73518", Offset = "0xC73518", VA = "0xC73518", Slot = "5")]
	public override void TranslateAudio()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xC735C8", Offset = "0xC735C8", VA = "0xC735C8")]
	public void PlayAudio(IronAudio audioName, bool m_break = true)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xC73668", Offset = "0xC73668", VA = "0xC73668")]
	public BeginnerGuideManagerIF()
	{
	}
}
[Token(Token = "0x200001B")]
public class BeginnerGuideManager : MonoBehaviour
{
	[Token(Token = "0x200001C")]
	public enum TutorialAudio
	{
		[Token(Token = "0x40000C1")]
		Welcome,
		[Token(Token = "0x40000C2")]
		Move1,
		[Token(Token = "0x40000C3")]
		Move2,
		[Token(Token = "0x40000C4")]
		Move3,
		[Token(Token = "0x40000C5")]
		MoveSuccess,
		[Token(Token = "0x40000C6")]
		Attack1,
		[Token(Token = "0x40000C7")]
		Attack2,
		[Token(Token = "0x40000C8")]
		Attack3,
		[Token(Token = "0x40000C9")]
		Attack4,
		[Token(Token = "0x40000CA")]
		AttactAgain,
		[Token(Token = "0x40000CB")]
		AttactAgain2,
		[Token(Token = "0x40000CC")]
		GoodFindSupplyBox,
		[Token(Token = "0x40000CD")]
		GoodGotItem,
		[Token(Token = "0x40000CE")]
		CompleteToHome
	}

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeginnerGuideSM sm;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform GuidePos;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string currStateName;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] guideAudios;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BlackPanelUI blackPanelUI;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject suiteUI;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject supplyBox;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SupplyBox supplyBoxScript;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform playerOriginTrans;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform guideFrontTrans;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform guideBackTrans;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Boxer[] oppPlayer;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BoxerPlayer player;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TargetAngleOffset TAO;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject exitLightCircle;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Compass;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject tutorialUI;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] tutorialStep;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public XRControllerXRay xrControllerXRay;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VRRigDriver vrRigDriver;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RigMove rigMove;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Boxer guidePlayer;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform[] walkPositions;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject stickTipsCanvas;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject AttackCanvas;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshProUGUI[] oppSayTexts;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] AttackVideo;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Action<bool> OnIntentScene;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject[] NpcCanvas;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int InitCount;

	[Token(Token = "0x14000001")]
	public event System.Action OnContinue
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0xC736C4", Offset = "0xC736C4", VA = "0xC736C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600005F")]
		[Address(RVA = "0xC73760", Offset = "0xC73760", VA = "0xC73760")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xC737FC", Offset = "0xC737FC", VA = "0xC737FC", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xC73980", Offset = "0xC73980", VA = "0xC73980", Slot = "5")]
	public virtual void TranslateAudio()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xC73A30", Offset = "0xC73A30", VA = "0xC73A30", Slot = "6")]
	public virtual void PlayAudio(TutorialAudio audioName, bool m_break = true)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xC73AD0", Offset = "0xC73AD0", VA = "0xC73AD0", Slot = "7")]
	public virtual void PlayRandomAudio(int audio, bool m_break = true)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xC73B6C", Offset = "0xC73B6C", VA = "0xC73B6C", Slot = "8")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xC73C6C", Offset = "0xC73C6C", VA = "0xC73C6C", Slot = "9")]
	protected virtual void OnStateChange(State a, State b)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xC73CAC", Offset = "0xC73CAC", VA = "0xC73CAC")]
	public void ClickContinue()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xC73670", Offset = "0xC73670", VA = "0xC73670")]
	public BeginnerGuideManager()
	{
	}
}
[Token(Token = "0x200001D")]
public class BoxerChangeStep : BoxerCondition
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SharedInt Step;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int LastStep;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xC73CC8", Offset = "0xC73CC8", VA = "0xC73CC8", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xC73D54", Offset = "0xC73D54", VA = "0xC73D54")]
	public BoxerChangeStep()
	{
	}
}
[Token(Token = "0x200001E")]
public class BoxerDizz : BoxerCondition
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SharedAIActionInfo attackInfo;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimaActionType lastType;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SharedTransform Player;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int HitCount;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool IsCircle;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int DizzCount;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 pos;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SharedInt Step;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xC73D5C", Offset = "0xC73D5C", VA = "0xC73D5C", Slot = "4")]
	public override void OnAwake()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xC73E80", Offset = "0xC73E80", VA = "0xC73E80", Slot = "5")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xC74228", Offset = "0xC74228", VA = "0xC74228", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xC73F94", Offset = "0xC73F94", VA = "0xC73F94")]
	public AnimaActionType GetPriorityAttackType()
	{
		return default(AnimaActionType);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xC74258", Offset = "0xC74258", VA = "0xC74258")]
	private void PlayAudio(BeginnerGuideManagerIF.IronAudio audioName)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xC742C4", Offset = "0xC742C4", VA = "0xC742C4")]
	public void PlayerDizz(bool state)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC74438", Offset = "0xC74438", VA = "0xC74438")]
	public BoxerDizz()
	{
	}
}
[Token(Token = "0x200001F")]
public class BoxerHide : BoxerCondition
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SharedAIActionInfo attackInfo;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Distance;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private AnimaActionType lastType;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SharedTransform Player;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool IsCircle;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 pos;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SharedInt Step;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC74440", Offset = "0xC74440", VA = "0xC74440", Slot = "5")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xC7451C", Offset = "0xC7451C", VA = "0xC7451C", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xC74728", Offset = "0xC74728", VA = "0xC74728")]
	public AnimaActionType GetPriorityAttackType()
	{
		return default(AnimaActionType);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xC7477C", Offset = "0xC7477C", VA = "0xC7477C")]
	private void PlayAudio(BeginnerGuideManagerIF.IronAudio audioName)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xC747E8", Offset = "0xC747E8", VA = "0xC747E8")]
	public BoxerHide()
	{
	}
}
[Token(Token = "0x2000020")]
public class BoxerNormal : BoxerPatrol
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float lastHitTime;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xC747F0", Offset = "0xC747F0", VA = "0xC747F0", Slot = "4")]
	public override void OnAwake()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xC749FC", Offset = "0xC749FC", VA = "0xC749FC", Slot = "5")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xC74BA8", Offset = "0xC74BA8", VA = "0xC74BA8", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xC74C20", Offset = "0xC74C20", VA = "0xC74C20", Slot = "30")]
	public override AnimaActionType GetPriorityAttackType()
	{
		return default(AnimaActionType);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xC74D38", Offset = "0xC74D38", VA = "0xC74D38", Slot = "31")]
	public override HitInfo NpcHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xC74ED4", Offset = "0xC74ED4", VA = "0xC74ED4")]
	public BoxerNormal()
	{
	}
}
[Token(Token = "0x2000021")]
public class BoxerPatrol : BoxerCondition
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SharedAIActionInfo attackInfo;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected AnimaActionType lastType;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SharedTransform Player;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SharedInt Step;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lastHitTime;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xC748F4", Offset = "0xC748F4", VA = "0xC748F4", Slot = "4")]
	public override void OnAwake()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xC74EE4", Offset = "0xC74EE4", VA = "0xC74EE4", Slot = "5")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xC74BE4", Offset = "0xC74BE4", VA = "0xC74BE4", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xC74C24", Offset = "0xC74C24", VA = "0xC74C24", Slot = "30")]
	public virtual AnimaActionType GetPriorityAttackType()
	{
		return default(AnimaActionType);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xC7508C", Offset = "0xC7508C", VA = "0xC7508C", Slot = "31")]
	public virtual HitInfo NpcHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xC74EDC", Offset = "0xC74EDC", VA = "0xC74EDC")]
	public BoxerPatrol()
	{
	}
}
[Token(Token = "0x2000022")]
public class BoxerSeek : BoxerFieldCheck
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SharedTransform Player;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xC7524C", Offset = "0xC7524C", VA = "0xC7524C", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC752BC", Offset = "0xC752BC", VA = "0xC752BC")]
	public BoxerSeek()
	{
	}
}
[Token(Token = "0x2000023")]
public class BoxerStep : BoxerAction
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int Step;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SharedInt m_Step;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xC752C4", Offset = "0xC752C4", VA = "0xC752C4", Slot = "6")]
	public override TaskStatus OnUpdate()
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC75328", Offset = "0xC75328", VA = "0xC75328")]
	public BoxerStep()
	{
	}
}
[Token(Token = "0x2000024")]
public class BlockInfo : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxCollider boxCollider;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject naviObsPrefab;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float disToCenter;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rig;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 originPos;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool locked;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool droped;

	[Token(Token = "0x1700000C")]
	public Vector3 OriginPos
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xC75490", Offset = "0xC75490", VA = "0xC75490")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000D")]
	public bool Droped
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0xC7549C", Offset = "0xC7549C", VA = "0xC7549C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600008A")]
		[Address(RVA = "0xC754A4", Offset = "0xC754A4", VA = "0xC754A4")]
		set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<BlockInfo> OnDrop
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0xC75330", Offset = "0xC75330", VA = "0xC75330")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000087")]
		[Address(RVA = "0xC753E0", Offset = "0xC753E0", VA = "0xC753E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xC754B0", Offset = "0xC754B0", VA = "0xC754B0")]
	public void Drop()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xC756E0", Offset = "0xC756E0", VA = "0xC756E0")]
	public void Init()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC75710", Offset = "0xC75710", VA = "0xC75710")]
	public void OffsetPositon(Vector3 offset)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC75764", Offset = "0xC75764", VA = "0xC75764")]
	public BlockInfo()
	{
	}
}
[Token(Token = "0x2000025")]
public class Boom : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject moduleGo;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particle;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dropRadius;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject explodePrefab;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float force;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool dropGround;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask colliderLayers;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float destoryTime;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool exploded;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<ExplodeInfo> OnExplode;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float playerExpRadius;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC7576C", Offset = "0xC7576C", VA = "0xC7576C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC757B8", Offset = "0xC757B8", VA = "0xC757B8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000091")]
	public static void ExplodePlayer<BoxerType>(ExplodeInfo info) where BoxerType : Boxer
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC75EC0", Offset = "0xC75EC0", VA = "0xC75EC0")]
	private ExplodeInfo GetExplodeInfo(Vector3 pos, float radius, float force)
	{
		return default(ExplodeInfo);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC75ED8", Offset = "0xC75ED8", VA = "0xC75ED8")]
	public static HitInfo GetExplodeHit(Boxer player, ExplodeInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC760F4", Offset = "0xC760F4", VA = "0xC760F4")]
	public Boom()
	{
	}
}
[Token(Token = "0x2000028")]
public class BoxerAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int SPEED;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 beltPos_3;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 beltAngle_3;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AnimaActionInfo> attackInfos;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool guideMode;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject beltCenter;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject beltRightHand;

	[Token(Token = "0x14000003")]
	public event System.Action OnFire
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0xC76228", Offset = "0xC76228", VA = "0xC76228")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0xC762C4", Offset = "0xC762C4", VA = "0xC762C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AnimaActionInfo> OnAttack
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0xC76360", Offset = "0xC76360", VA = "0xC76360")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600009D")]
		[Address(RVA = "0xC76410", Offset = "0xC76410", VA = "0xC76410")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xC764C0", Offset = "0xC764C0", VA = "0xC764C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xC76580", Offset = "0xC76580", VA = "0xC76580")]
	private void InitAttackInfo()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xC782E8", Offset = "0xC782E8", VA = "0xC782E8")]
	private void InitAnimActionInfoData()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xC78750", Offset = "0xC78750", VA = "0xC78750")]
	public static Dictionary<string, AnimationClip> GetClip(Animator animator)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xC78920", Offset = "0xC78920", VA = "0xC78920")]
	public AnimaActionInfo GetRandomIdAnimaInfo(AnimaActionType attackType)
	{
		return default(AnimaActionInfo);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xC740B0", Offset = "0xC740B0", VA = "0xC740B0")]
	public AnimaActionInfo GetFixedAnimaInfo(AnimaActionType attackType)
	{
		return default(AnimaActionInfo);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xC78A70", Offset = "0xC78A70", VA = "0xC78A70")]
	public void SetSpeed(float speed = 1f)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xC78A94", Offset = "0xC78A94", VA = "0xC78A94")]
	public void PlayAction(AnimaActionInfo info)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xC79088", Offset = "0xC79088", VA = "0xC79088")]
	private int GetStateHash(string typeName, int actionId)
	{
		return default(int);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xC79120", Offset = "0xC79120", VA = "0xC79120")]
	private int GetStateHashWithDirect(string typeName, int actionId, bool leftHand)
	{
		return default(int);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xC791FC", Offset = "0xC791FC", VA = "0xC791FC")]
	public void PlayWalk()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xC78EE4", Offset = "0xC78EE4", VA = "0xC78EE4")]
	public void Walk(int walkId)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xC78F78", Offset = "0xC78F78", VA = "0xC78F78")]
	public void Idle(int idleId)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xC79224", Offset = "0xC79224", VA = "0xC79224")]
	public void PlayWinner()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xC7924C", Offset = "0xC7924C", VA = "0xC7924C")]
	public void Winner(int winnerId)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xC78C60", Offset = "0xC78C60", VA = "0xC78C60")]
	public void Punch(int attackId)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xC78BC8", Offset = "0xC78BC8", VA = "0xC78BC8")]
	public void StrongPunch(int attackId)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xC78CF4", Offset = "0xC78CF4", VA = "0xC78CF4")]
	public void StickAttack(int attackId, bool isLeft)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xC7900C", Offset = "0xC7900C", VA = "0xC7900C")]
	public void Rocket(int attackId, bool isLeft)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xC78D70", Offset = "0xC78D70", VA = "0xC78D70")]
	public void ThrowAttack(int attackId, bool isLeft)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xC78D74", Offset = "0xC78D74", VA = "0xC78D74")]
	public void FlailAttack(int attackId, bool isLeft)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xC78DF0", Offset = "0xC78DF0", VA = "0xC78DF0")]
	public void Shield(bool isLeft)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xC78E68", Offset = "0xC78E68", VA = "0xC78E68")]
	public void Pick(bool isLeft)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xC79370", Offset = "0xC79370", VA = "0xC79370")]
	public void SetTrigger(string trigger)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xC78EE0", Offset = "0xC78EE0", VA = "0xC78EE0")]
	public void Wind()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC7938C", Offset = "0xC7938C", VA = "0xC7938C")]
	private void OnFireEvent()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xC793A8", Offset = "0xC793A8", VA = "0xC793A8")]
	public BoxerAnimationController()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public struct BoxerCountStat
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int hitCount;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int strongHitCount;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int killCount;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int kcal;

	[Token(Token = "0x1700000E")]
	public int HitCount
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xC79518", Offset = "0xC79518", VA = "0xC79518")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xC79520", Offset = "0xC79520", VA = "0xC79520")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public int StrongHitCount
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xC79528", Offset = "0xC79528", VA = "0xC79528")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xC79530", Offset = "0xC79530", VA = "0xC79530")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public int KillCount
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xC79538", Offset = "0xC79538", VA = "0xC79538")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xC79540", Offset = "0xC79540", VA = "0xC79540")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public int Kcal
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xC79548", Offset = "0xC79548", VA = "0xC79548")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xC79550", Offset = "0xC79550", VA = "0xC79550")]
		set
		{
		}
	}
}
[Token(Token = "0x200002C")]
public class BoxerDragTail : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Boxer boxer;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem smokeParticle;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xC79558", Offset = "0xC79558", VA = "0xC79558")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xC795B0", Offset = "0xC795B0", VA = "0xC795B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xC7973C", Offset = "0xC7973C", VA = "0xC7973C")]
	private void OnDead()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xC79784", Offset = "0xC79784", VA = "0xC79784")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xC79758", Offset = "0xC79758", VA = "0xC79758")]
	private void ChangeGround(bool b)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xC79910", Offset = "0xC79910", VA = "0xC79910")]
	public BoxerDragTail()
	{
	}
}
[Token(Token = "0x200002D")]
public class BoxerExploder
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float force;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int layerMask;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> explodeGo;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xC79918", Offset = "0xC79918", VA = "0xC79918")]
	public BoxerExploder()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xC75BE4", Offset = "0xC75BE4", VA = "0xC75BE4")]
	public BoxerExploder(Vector3 position, float radius, float force)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xC799AC", Offset = "0xC799AC", VA = "0xC799AC")]
	public void AddBoxer(Boxer[] boxers)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xC79AA0", Offset = "0xC79AA0", VA = "0xC79AA0")]
	public void Explode()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xC79AB0", Offset = "0xC79AB0", VA = "0xC79AB0")]
	public void Explode(Vector3 pos, float radius, float force)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xC79E50", Offset = "0xC79E50", VA = "0xC79E50")]
	public void ExplodeWithPhysicsCast()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xC75D1C", Offset = "0xC75D1C", VA = "0xC75D1C")]
	public void ExplodeWithPhysicsCast(Func<GameObject, int> handler)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xC79CA0", Offset = "0xC79CA0", VA = "0xC79CA0")]
	private void Explode(Rigidbody rig, Vector3 pos, float radius, float force)
	{
	}
}
[Token(Token = "0x200002E")]
public class BoxerGloveZoomer : MonoBehaviour
{
	[Token(Token = "0x200002F")]
	[CompilerGenerated]
	private sealed class <ZoomWithTotalTimeCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoxerGloveZoomer <>4__this;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxTime;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scaleFactor;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <recoverTime>5__2;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <targetScale>5__3;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <time>5__4;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0xC7A5DC", Offset = "0xC7A5DC", VA = "0xC7A5DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0xC7A624", Offset = "0xC7A624", VA = "0xC7A624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xC7A394", Offset = "0xC7A394", VA = "0xC7A394")]
		[DebuggerHidden]
		public <ZoomWithTotalTimeCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xC7A3C4", Offset = "0xC7A3C4", VA = "0xC7A3C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xC7A3C8", Offset = "0xC7A3C8", VA = "0xC7A3C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xC7A5E4", Offset = "0xC7A5E4", VA = "0xC7A5E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxerAnimationController boxerAnim;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PositionTrackTool posTrack;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Assets.Scripts.Interact.Hand useHand;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool humanPlayer;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 originScale;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xC79FB0", Offset = "0xC79FB0", VA = "0xC79FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xC79FE0", Offset = "0xC79FE0", VA = "0xC79FE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xC7A0B0", Offset = "0xC7A0B0", VA = "0xC7A0B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xC7A180", Offset = "0xC7A180", VA = "0xC7A180")]
	private void OnAttack(AnimaActionInfo info)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xC7A1E4", Offset = "0xC7A1E4", VA = "0xC7A1E4")]
	public void Zoom(float scale)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xC7A228", Offset = "0xC7A228", VA = "0xC7A228")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xC7A1C4", Offset = "0xC7A1C4", VA = "0xC7A1C4")]
	public void ZoomWithTotalTime(float scaleFactor, float maxTime)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xC7A2DC", Offset = "0xC7A2DC", VA = "0xC7A2DC")]
	private void EnableParticle(bool b)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xC7A2E0", Offset = "0xC7A2E0", VA = "0xC7A2E0")]
	private float GetCurrZoomScale()
	{
		return default(float);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xC7A254", Offset = "0xC7A254", VA = "0xC7A254")]
	[IteratorStateMachine(typeof(<ZoomWithTotalTimeCoroutine>d__14))]
	private IEnumerator ZoomWithTotalTimeCoroutine(float scaleFactor, float maxTime)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xC7A3BC", Offset = "0xC7A3BC", VA = "0xC7A3BC")]
	public BoxerGloveZoomer()
	{
	}
}
[Token(Token = "0x2000030")]
public class BoxerHand : MonoBehaviour
{
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponManager weaponManager;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xC7A62C", Offset = "0xC7A62C", VA = "0xC7A62C")]
	public void SetSupplyItem(SupplyItemInfo info)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xC7A760", Offset = "0xC7A760", VA = "0xC7A760")]
	public BoxerHand()
	{
	}
}
[Token(Token = "0x2000031")]
public class BoxerHightFit : MonoBehaviour
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFitter;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fitDiff;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lerpSpeed;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform fitTransform;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float fitterHight;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool fitSupplyBox;

	[Token(Token = "0x17000014")]
	public bool FitSupplyBox
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xC7A768", Offset = "0xC7A768", VA = "0xC7A768")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xC7A770", Offset = "0xC7A770", VA = "0xC7A770")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public float CurrentHight
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xC7A77C", Offset = "0xC7A77C", VA = "0xC7A77C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xC7A7A0", Offset = "0xC7A7A0", VA = "0xC7A7A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xC7A914", Offset = "0xC7A914", VA = "0xC7A914")]
	private void LockPlayerHight()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC7A824", Offset = "0xC7A824", VA = "0xC7A824")]
	private void LockSupplyBoxHight()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC7AA4C", Offset = "0xC7AA4C", VA = "0xC7AA4C")]
	public BoxerHightFit()
	{
	}
}
[Token(Token = "0x2000032")]
public static class BoxerMath
{
	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC7AA5C", Offset = "0xC7AA5C", VA = "0xC7AA5C")]
	public static Vector3 GetRandomPos(float minRadius, float maxRadius)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000033")]
public class BoxFaceMultiplyArea : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxerFace face;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bounds bounds;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[,,] weights;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC7AADC", Offset = "0xC7AADC", VA = "0xC7AADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC7AB3C", Offset = "0xC7AB3C", VA = "0xC7AB3C")]
	private void InitWeightArray()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC7AE5C", Offset = "0xC7AE5C", VA = "0xC7AE5C")]
	public float GetWeight(HitInfo hit)
	{
		return default(float);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC7B018", Offset = "0xC7B018", VA = "0xC7B018")]
	private int GetIndex(float val, float min, float max)
	{
		return default(int);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC7B038", Offset = "0xC7B038", VA = "0xC7B038")]
	public BoxFaceMultiplyArea()
	{
	}
}
[Token(Token = "0x2000034")]
public class BuffEffect : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<BuffEffect> OnBuffDestroy;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Boxer owner;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC7B104", Offset = "0xC7B104", VA = "0xC7B104", Slot = "4")]
	public virtual float CountDownTime()
	{
		return default(float);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xC7B10C", Offset = "0xC7B10C", VA = "0xC7B10C", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xC7B164", Offset = "0xC7B164", VA = "0xC7B164", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xC7B184", Offset = "0xC7B184", VA = "0xC7B184", Slot = "7")]
	public virtual void Append()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xC7B188", Offset = "0xC7B188", VA = "0xC7B188", Slot = "8")]
	public virtual void Remove()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xC7B18C", Offset = "0xC7B18C", VA = "0xC7B18C")]
	public BuffEffect()
	{
	}
}
[Token(Token = "0x2000035")]
public class FrozenEffect : BuffEffect
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float frozenTime;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject effectGo;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject iceGo;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ExploderObject exploder;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool exploed;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRRigDriver rigDriver;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform iceTransform;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform leftHandTransform;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform rightHandTransform;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 icePos;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion iceRot;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 leftHandPos;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion leftHandRot;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 rightHandPos;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion rightHandRot;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xC7B194", Offset = "0xC7B194", VA = "0xC7B194", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xC7B418", Offset = "0xC7B418", VA = "0xC7B418")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC7B594", Offset = "0xC7B594", VA = "0xC7B594", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xC7B68C", Offset = "0xC7B68C", VA = "0xC7B68C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xC7B73C", Offset = "0xC7B73C", VA = "0xC7B73C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC7B808", Offset = "0xC7B808", VA = "0xC7B808")]
	public FrozenEffect()
	{
	}
}
[Token(Token = "0x2000036")]
public class InkEffect : BuffEffect
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutDuration;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float time;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material inkMaterial;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float createTime;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject inkFaceGo;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xC7B818", Offset = "0xC7B818", VA = "0xC7B818", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xC7B8E4", Offset = "0xC7B8E4", VA = "0xC7B8E4", Slot = "7")]
	public override void Append()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xC7B954", Offset = "0xC7B954", VA = "0xC7B954")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xC7B9C8", Offset = "0xC7B9C8", VA = "0xC7B9C8", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xC7BA10", Offset = "0xC7BA10", VA = "0xC7BA10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xC7BB04", Offset = "0xC7BB04", VA = "0xC7BB04", Slot = "8")]
	public override void Remove()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xC7BB5C", Offset = "0xC7BB5C", VA = "0xC7BB5C")]
	public InkEffect()
	{
	}
}
[Token(Token = "0x2000037")]
public class InvisibleCloakEffect : BuffEffect
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Renderer> meshRenderers;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Material> bakMats;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material HideMaterial;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WeaponItemConfig config;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeDuration;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float totalHideTime;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool costomHideTime;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float createTime;

	[Token(Token = "0x17000016")]
	private float HideTime
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xC7BB70", Offset = "0xC7BB70", VA = "0xC7BB70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC7BBA0", Offset = "0xC7BBA0", VA = "0xC7BBA0", Slot = "4")]
	public override float CountDownTime()
	{
		return default(float);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC7BBD4", Offset = "0xC7BBD4", VA = "0xC7BBD4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC7D7CC", Offset = "0xC7D7CC", VA = "0xC7D7CC", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC7D8C0", Offset = "0xC7D8C0", VA = "0xC7D8C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC7DB18", Offset = "0xC7DB18", VA = "0xC7DB18")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC7DDE4", Offset = "0xC7DDE4", VA = "0xC7DDE4", Slot = "8")]
	public override void Remove()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xC7DC3C", Offset = "0xC7DC3C", VA = "0xC7DC3C")]
	private void SetDissovleLevel(float level)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xC7DE3C", Offset = "0xC7DE3C", VA = "0xC7DE3C")]
	public InvisibleCloakEffect()
	{
	}
}
[Token(Token = "0x2000038")]
public class SuperShieldEffect : BuffEffect
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float createTime;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponItemConfig config;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject shield;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BoxCollider faceCollider;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xC7DF20", Offset = "0xC7DF20", VA = "0xC7DF20", Slot = "4")]
	public override float CountDownTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xC7DF54", Offset = "0xC7DF54", VA = "0xC7DF54", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xC7E064", Offset = "0xC7E064", VA = "0xC7E064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xC7E0C0", Offset = "0xC7E0C0", VA = "0xC7E0C0", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xC7E11C", Offset = "0xC7E11C", VA = "0xC7E11C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xC7E1A8", Offset = "0xC7E1A8", VA = "0xC7E1A8", Slot = "8")]
	public override void Remove()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xC7E200", Offset = "0xC7E200", VA = "0xC7E200")]
	public SuperShieldEffect()
	{
	}
}
[Token(Token = "0x2000039")]
public class BBCalorie
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool _isRecording;

	[Token(Token = "0x17000017")]
	public bool isRecording
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xC7E208", Offset = "0xC7E208", VA = "0xC7E208")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xC7E210", Offset = "0xC7E210", VA = "0xC7E210")]
	public BBCalorie()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xC7E234", Offset = "0xC7E234", VA = "0xC7E234", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xC7E238", Offset = "0xC7E238", VA = "0xC7E238", Slot = "5")]
	public virtual void StartRecord()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC7E244", Offset = "0xC7E244", VA = "0xC7E244", Slot = "6")]
	public virtual void StopRecord()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC7E24C", Offset = "0xC7E24C", VA = "0xC7E24C", Slot = "7")]
	public virtual int GameTime()
	{
		return default(int);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC7E254", Offset = "0xC7E254", VA = "0xC7E254", Slot = "8")]
	public virtual float Current()
	{
		return default(float);
	}
}
[Token(Token = "0x200003A")]
public class BBCaloriePico : BBCalorie
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _calorie;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime _startTime;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _endTime;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC7E25C", Offset = "0xC7E25C", VA = "0xC7E25C")]
	public BBCaloriePico()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC7E288", Offset = "0xC7E288", VA = "0xC7E288")]
	public double PlayerCalorie(DateTime Start, DateTime End)
	{
		return default(double);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC7E290", Offset = "0xC7E290", VA = "0xC7E290", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC7E294", Offset = "0xC7E294", VA = "0xC7E294", Slot = "5")]
	public override void StartRecord()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC7E2FC", Offset = "0xC7E2FC", VA = "0xC7E2FC", Slot = "6")]
	public override void StopRecord()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC7E360", Offset = "0xC7E360", VA = "0xC7E360", Slot = "8")]
	public override float Current()
	{
		return default(float);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC7E3D0", Offset = "0xC7E3D0", VA = "0xC7E3D0", Slot = "7")]
	public override int GameTime()
	{
		return default(int);
	}
}
[Token(Token = "0x200003B")]
public class CameraCapture : MonoBehaviour
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC7E42C", Offset = "0xC7E42C", VA = "0xC7E42C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xC7E458", Offset = "0xC7E458", VA = "0xC7E458")]
	public void Capture()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC7E50C", Offset = "0xC7E50C", VA = "0xC7E50C")]
	public static Texture2D CaptureCamera(Camera camera)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xC7E650", Offset = "0xC7E650", VA = "0xC7E650")]
	public static bool SaveTextureToFile(Texture2D texture, string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xC7E738", Offset = "0xC7E738", VA = "0xC7E738")]
	public CameraCapture()
	{
	}
}
[Token(Token = "0x200003C")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Movie")]
public class CameraFilterPack_Blur_Movie : MonoBehaviour
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1000f)]
	public float Radius;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1000f)]
	public float Factor;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(1f, 8f)]
	public int FastFilter;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ChangeRadius;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float ChangeFactor;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int ChangeFastFilter;

	[Token(Token = "0x17000018")]
	private Material material
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xC7E740", Offset = "0xC7E740", VA = "0xC7E740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC7E814", Offset = "0xC7E814", VA = "0xC7E814")]
	private void Start()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC7E8CC", Offset = "0xC7E8CC", VA = "0xC7E8CC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xC7EBA4", Offset = "0xC7EBA4", VA = "0xC7EBA4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xC7EBFC", Offset = "0xC7EBFC", VA = "0xC7EBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xC7EC60", Offset = "0xC7EC60", VA = "0xC7EC60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xC7ECEC", Offset = "0xC7ECEC", VA = "0xC7ECEC")]
	public CameraFilterPack_Blur_Movie()
	{
	}
}
[Token(Token = "0x200003D")]
public class BoxFaceDizziness : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boxer owner;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxFaceMultiplyArea mult;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dizzGo;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currDizzCd;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxerFace face;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currPower;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool dizzed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool lockDizzState;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float normalSpeed;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float dizzSpeed;

	[Token(Token = "0x17000019")]
	public float DizzCountDown
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0xC7ED10", Offset = "0xC7ED10", VA = "0xC7ED10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000133")]
		[Address(RVA = "0xC7ED18", Offset = "0xC7ED18", VA = "0xC7ED18")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool IsDizzed
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xC7ED20", Offset = "0xC7ED20", VA = "0xC7ED20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xC7ED28", Offset = "0xC7ED28", VA = "0xC7ED28")]
		set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<bool> OnDizziness
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xC7EDC4", Offset = "0xC7EDC4", VA = "0xC7EDC4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xC7EE74", Offset = "0xC7EE74", VA = "0xC7EE74")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xC7EF24", Offset = "0xC7EF24", VA = "0xC7EF24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC7EF7C", Offset = "0xC7EF7C", VA = "0xC7EF7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC7F00C", Offset = "0xC7F00C", VA = "0xC7F00C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC7F08C", Offset = "0xC7F08C", VA = "0xC7F08C")]
	private void OnDizz(bool b)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC7F15C", Offset = "0xC7F15C", VA = "0xC7F15C")]
	public bool Hit(HitInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC7ED58", Offset = "0xC7ED58", VA = "0xC7ED58")]
	public void EnterDizz()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC74730", Offset = "0xC74730", VA = "0xC74730")]
	public void QuitDizz()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC7F2B8", Offset = "0xC7F2B8", VA = "0xC7F2B8")]
	private bool IsStrongHit(HitInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC7F260", Offset = "0xC7F260", VA = "0xC7F260")]
	private float GetHitPower(HitInfo info)
	{
		return default(float);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC7F368", Offset = "0xC7F368", VA = "0xC7F368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC7F3F8", Offset = "0xC7F3F8", VA = "0xC7F3F8")]
	public BoxFaceDizziness()
	{
	}
}
[Token(Token = "0x200003E")]
public class ComboManager : MonoBehaviour
{
	[Token(Token = "0x200003F")]
	private struct HitSnap
	{
		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HitInfo hitInfo;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xC7FAC0", Offset = "0xC7FAC0", VA = "0xC7FAC0")]
		public HitSnap(HitInfo hitInfo, float time)
		{
		}
	}

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boxer owner;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float duration;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float finalHitForce;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<HitSnap> comboList;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int minShowUICount;

	[Token(Token = "0x1700001B")]
	private int comboCount
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0xC7F560", Offset = "0xC7F560", VA = "0xC7F560")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<int> OnCombo
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0xC7F400", Offset = "0xC7F400", VA = "0xC7F400")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000144")]
		[Address(RVA = "0xC7F4B0", Offset = "0xC7F4B0", VA = "0xC7F4B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xC7F5A8", Offset = "0xC7F5A8", VA = "0xC7F5A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xC7F6C4", Offset = "0xC7F6C4", VA = "0xC7F6C4")]
	private HitInfo OnGloveHit(HitInfo delta)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xC7F6DC", Offset = "0xC7F6DC", VA = "0xC7F6DC")]
	public HitInfo Hit(HitInfo info, float time)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC7F6F0", Offset = "0xC7F6F0", VA = "0xC7F6F0")]
	private Vector3 GetFinalForce(HitInfo lastHitForce)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xC7F96C", Offset = "0xC7F96C", VA = "0xC7F96C")]
	public float GetComboCountDown()
	{
		return default(float);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC7FA24", Offset = "0xC7FA24", VA = "0xC7FA24")]
	public ComboManager()
	{
	}
}
[Token(Token = "0x2000040")]
public class DizzStarManager : MonoBehaviour
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject starPrefab;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int starCount;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xC7FAF8", Offset = "0xC7FAF8", VA = "0xC7FAF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xC7FC50", Offset = "0xC7FC50", VA = "0xC7FC50")]
	public DizzStarManager()
	{
	}
}
[Token(Token = "0x2000041")]
public class MatFadeOutFx : MonoBehaviour
{
	[Token(Token = "0x2000042")]
	[CompilerGenerated]
	private sealed class <DoFaceOutFx>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatFadeOutFx <>4__this;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <total>5__2;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000155")]
			[Address(RVA = "0xC80174", Offset = "0xC80174", VA = "0xC80174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000157")]
			[Address(RVA = "0xC801BC", Offset = "0xC801BC", VA = "0xC801BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xC7FF40", Offset = "0xC7FF40", VA = "0xC7FF40")]
		[DebuggerHidden]
		public <DoFaceOutFx>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0xC7FF78", Offset = "0xC7FF78", VA = "0xC7FF78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0xC7FF7C", Offset = "0xC7FF7C", VA = "0xC7FF7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0xC8017C", Offset = "0xC8017C", VA = "0xC8017C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float durationTime;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool completeDestroy;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer render;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xC7FC64", Offset = "0xC7FC64", VA = "0xC7FC64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xC7FECC", Offset = "0xC7FECC", VA = "0xC7FECC")]
	[IteratorStateMachine(typeof(<DoFaceOutFx>d__4))]
	private IEnumerator DoFaceOutFx()
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xC7FF68", Offset = "0xC7FF68", VA = "0xC7FF68")]
	public MatFadeOutFx()
	{
	}
}
[Token(Token = "0x2000043")]
public struct ExplodeInfo
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Boxer owner;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 centerPosition;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float radius;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;
}
[Token(Token = "0x2000044")]
public class FlailBall : MonoBehaviour
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject groundFxGo;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask collideLayer;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xC801C4", Offset = "0xC801C4", VA = "0xC801C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xC802CC", Offset = "0xC802CC", VA = "0xC802CC")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xC802E8", Offset = "0xC802E8", VA = "0xC802E8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xC80414", Offset = "0xC80414", VA = "0xC80414")]
	private void CreateGroundFx()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xC805D8", Offset = "0xC805D8", VA = "0xC805D8")]
	public FlailBall()
	{
	}
}
[Token(Token = "0x2000045")]
public static class LayerDefine
{
	[Token(Token = "0x4000184")]
	public const int Player = 6;

	[Token(Token = "0x4000185")]
	public const int Court = 7;

	[Token(Token = "0x4000186")]
	public const int Hit = 11;

	[Token(Token = "0x4000187")]
	public const int FaceBox = 12;

	[Token(Token = "0x4000188")]
	public const int Hand = 14;

	[Token(Token = "0x4000189")]
	public const int DeathPanel = 15;

	[Token(Token = "0x400018A")]
	public const int SelfFaceBox = 16;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xC75CB4", Offset = "0xC75CB4", VA = "0xC75CB4")]
	public static int GetLayerMask(params int[] layers)
	{
		return default(int);
	}
}
[Token(Token = "0x2000046")]
public class GroundDecal : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeTime;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float createTime;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture[] textures;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float scale;

	[Token(Token = "0x1700001E")]
	public Material Mat
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0xC805E0", Offset = "0xC805E0", VA = "0xC805E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xC805FC", Offset = "0xC805FC", VA = "0xC805FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xC806C0", Offset = "0xC806C0", VA = "0xC806C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xC8081C", Offset = "0xC8081C", VA = "0xC8081C")]
	public GroundDecal()
	{
	}
}
[Token(Token = "0x2000047")]
public enum HitAttribute
{
	[Token(Token = "0x4000192")]
	Normal,
	[Token(Token = "0x4000193")]
	Strong,
	[Token(Token = "0x4000194")]
	Ink,
	[Token(Token = "0x4000195")]
	Ice,
	[Token(Token = "0x4000196")]
	Dizz
}
[Token(Token = "0x2000048")]
public struct HitInfo
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Boxer owner;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Boxer target;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 hitPosition;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 hitVelocity;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HitAttribute type;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isLongPunch;

	[Token(Token = "0x1700001F")]
	public float Speed
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0xC7F8EC", Offset = "0xC7F8EC", VA = "0xC7F8EC")]
		get
		{
			return default(float);
		}
	}
}
[Token(Token = "0x2000049")]
public class IceBall : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject groundFxGo;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xC80824", Offset = "0xC80824", VA = "0xC80824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xC8092C", Offset = "0xC8092C", VA = "0xC8092C")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xC80948", Offset = "0xC80948", VA = "0xC80948")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xC80A30", Offset = "0xC80A30", VA = "0xC80A30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xC80B1C", Offset = "0xC80B1C", VA = "0xC80B1C")]
	private void CreateGroundFx()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xC80CE0", Offset = "0xC80CE0", VA = "0xC80CE0")]
	public IceBall()
	{
	}
}
[Token(Token = "0x200004A")]
public class InkBall : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject groundFxGo;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xC80CE8", Offset = "0xC80CE8", VA = "0xC80CE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xC80DF0", Offset = "0xC80DF0", VA = "0xC80DF0")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xC80E0C", Offset = "0xC80E0C", VA = "0xC80E0C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xC80F38", Offset = "0xC80F38", VA = "0xC80F38")]
	private void CreateGroundFx()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xC810FC", Offset = "0xC810FC", VA = "0xC810FC")]
	public InkBall()
	{
	}
}
[Token(Token = "0x200004B")]
public class ItemPreviewIconUI : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image iconImage;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button iconButton;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI tipsText;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int btnId;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_ItemSelect;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject maskGo;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI maskText;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LanguageTextMeshPro LTMP;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xC81104", Offset = "0xC81104", VA = "0xC81104", Slot = "4")]
	public virtual void Init(SuitItemConfig Sc)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xC81190", Offset = "0xC81190", VA = "0xC81190", Slot = "5")]
	public virtual void AddListener(Action<int> action)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xC81284", Offset = "0xC81284", VA = "0xC81284", Slot = "6")]
	public virtual void RemoveListener()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xC812A8", Offset = "0xC812A8", VA = "0xC812A8", Slot = "7")]
	public virtual void SetTips(string tips)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xC812CC", Offset = "0xC812CC", VA = "0xC812CC", Slot = "8")]
	public virtual void SetMask(bool show, string tips)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xC81318", Offset = "0xC81318", VA = "0xC81318")]
	public ItemPreviewIconUI()
	{
	}
}
[Token(Token = "0x200004D")]
public class PropItemUI : ItemPreviewIconUI
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0xC81350", Offset = "0xC81350", VA = "0xC81350", Slot = "4")]
	public override void Init(SuitItemConfig Sc)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xC81490", Offset = "0xC81490", VA = "0xC81490", Slot = "5")]
	public override void AddListener(Action<int> action)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xC81494", Offset = "0xC81494", VA = "0xC81494", Slot = "6")]
	public override void RemoveListener()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xC81498", Offset = "0xC81498", VA = "0xC81498", Slot = "7")]
	public override void SetTips(string tips)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xC814BC", Offset = "0xC814BC", VA = "0xC814BC")]
	public PropItemUI()
	{
	}
}
[Token(Token = "0x200004E")]
public class SuitItemUI : ItemPreviewIconUI
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LanguageTextMeshPro LockTransLate;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xC814C4", Offset = "0xC814C4", VA = "0xC814C4", Slot = "4")]
	public override void Init(SuitItemConfig Sc)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xC815EC", Offset = "0xC815EC", VA = "0xC815EC")]
	public string LockText(string ss)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xC818A0", Offset = "0xC818A0", VA = "0xC818A0", Slot = "5")]
	public override void AddListener(Action<int> action)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xC818A4", Offset = "0xC818A4", VA = "0xC818A4", Slot = "6")]
	public override void RemoveListener()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xC818A8", Offset = "0xC818A8", VA = "0xC818A8", Slot = "7")]
	public override void SetTips(string tips)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xC81900", Offset = "0xC81900", VA = "0xC81900", Slot = "8")]
	public override void SetMask(bool show, string tips)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xC81908", Offset = "0xC81908", VA = "0xC81908")]
	public SuitItemUI()
	{
	}
}
[Token(Token = "0x200004F")]
public class MapCreator : MatchMapObject
{
	[Token(Token = "0x2000050")]
	[CompilerGenerated]
	private sealed class <DropCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapCreator <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0xC82BC8", Offset = "0xC82BC8", VA = "0xC82BC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019D")]
			[Address(RVA = "0xC82C10", Offset = "0xC82C10", VA = "0xC82C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xC82AC4", Offset = "0xC82AC4", VA = "0xC82AC4")]
		[DebuggerHidden]
		public <DropCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xC82AEC", Offset = "0xC82AEC", VA = "0xC82AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xC82AF0", Offset = "0xC82AF0", VA = "0xC82AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xC82BD0", Offset = "0xC82BD0", VA = "0xC82BD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000051")]
	[CompilerGenerated]
	private sealed class <WaveEffect>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapCreator <>4__this;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <totalTime>5__2;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currTime>5__3;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <waveWidth>5__4;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <amplitude>5__5;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <maxRad>5__6;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0xC82E94", Offset = "0xC82E94", VA = "0xC82E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0xC82EDC", Offset = "0xC82EDC", VA = "0xC82EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xC82C18", Offset = "0xC82C18", VA = "0xC82C18")]
		[DebuggerHidden]
		public <WaveEffect>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xC82C40", Offset = "0xC82C40", VA = "0xC82C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xC82C44", Offset = "0xC82C44", VA = "0xC82C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xC82E9C", Offset = "0xC82E9C", VA = "0xC82E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform centerTransform;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<BlockInfo> sons;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 center;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform blockParent;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currRadius;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Bounds mapBounds;

	[Token(Token = "0x17000020")]
	public MapBlockConfig Config
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0xC81910", Offset = "0xC81910", VA = "0xC81910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000007")]
	public event System.Action OnMapWave
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xC8198C", Offset = "0xC8198C", VA = "0xC8198C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xC81A28", Offset = "0xC81A28", VA = "0xC81A28")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xC81AC4", Offset = "0xC81AC4", VA = "0xC81AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xC82194", Offset = "0xC82194", VA = "0xC82194")]
	public void LockCenter3x3()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xC82124", Offset = "0xC82124", VA = "0xC82124")]
	private void GetMaxRadius(Vector3 off)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xC8239C", Offset = "0xC8239C", VA = "0xC8239C")]
	private void OnBlockDrop(BlockInfo block)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xC82440", Offset = "0xC82440", VA = "0xC82440")]
	public bool IsInSafeArea(Transform boxer)
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xC824FC", Offset = "0xC824FC", VA = "0xC824FC")]
	public float DistanceBetweenBoxerAndCenter(Transform boxer)
	{
		return default(float);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xC825BC", Offset = "0xC825BC", VA = "0xC825BC")]
	public Vector3 CenterToBoxerVector(Transform boxer)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xC825A8", Offset = "0xC825A8", VA = "0xC825A8")]
	public float GetSafeRadius()
	{
		return default(float);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xC826C0", Offset = "0xC826C0", VA = "0xC826C0")]
	public void DropGround()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xC82850", Offset = "0xC82850", VA = "0xC82850", Slot = "5")]
	public override void MatchStart()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xC82890", Offset = "0xC82890", VA = "0xC82890", Slot = "6")]
	public override void MatchEnd()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xC82870", Offset = "0xC82870", VA = "0xC82870")]
	public void StartDrop()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xC82898", Offset = "0xC82898", VA = "0xC82898")]
	public void StopDrop()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC828A0", Offset = "0xC828A0", VA = "0xC828A0")]
	[IteratorStateMachine(typeof(<DropCoroutine>d__24))]
	private IEnumerator DropCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC82914", Offset = "0xC82914", VA = "0xC82914")]
	public void Wave()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC82954", Offset = "0xC82954", VA = "0xC82954")]
	[IteratorStateMachine(typeof(<WaveEffect>d__26))]
	private IEnumerator WaveEffect()
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC829C8", Offset = "0xC829C8", VA = "0xC829C8")]
	private float WaveSin(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xC829F0", Offset = "0xC829F0", VA = "0xC829F0")]
	public MapCreator()
	{
	}
}
[Token(Token = "0x2000052")]
[RequireComponent(typeof(MeshFilter))]
public class MeshDeformer : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float springForce;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float damping;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh deformingMesh;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NativeArray<Vector3> originalVertices;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NativeArray<Vector3> displacedVertices;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NativeArray<Vector3> vertexVelocities;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NativeArray<float> vertexDiff;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter syncMesh;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float uniformScale;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VertexUpdateJob vertexUpdateJob;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private JobHandle vertexUpdateJobHandle;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3[] meshVertices;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isInit;

	[Token(Token = "0x17000025")]
	public float DeformPercent
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xC82EE4", Offset = "0xC82EE4", VA = "0xC82EE4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xC82EEC", Offset = "0xC82EEC", VA = "0xC82EEC")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC82EF4", Offset = "0xC82EF4", VA = "0xC82EF4")]
	public void Init()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC83218", Offset = "0xC83218", VA = "0xC83218")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC8321C", Offset = "0xC8321C", VA = "0xC8321C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC83320", Offset = "0xC83320", VA = "0xC83320")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC833D0", Offset = "0xC833D0", VA = "0xC833D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC833FC", Offset = "0xC833FC", VA = "0xC833FC")]
	public void ScheduleJob()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC834B4", Offset = "0xC834B4", VA = "0xC834B4")]
	public void CompleteJob()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC835D4", Offset = "0xC835D4", VA = "0xC835D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC83708", Offset = "0xC83708", VA = "0xC83708")]
	public void AddDeformingForce(Vector3 point, float force)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC83810", Offset = "0xC83810", VA = "0xC83810")]
	public MeshDeformer()
	{
	}
}
[Token(Token = "0x2000053")]
public struct AddVertexForceJob : IJobParallelFor
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NativeArray<Vector3> displacedVertices;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NativeArray<Vector3> vertexVelocities;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaTime;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float force;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 point;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float uniformScale;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC8382C", Offset = "0xC8382C", VA = "0xC8382C", Slot = "4")]
	public void Execute(int index)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC83830", Offset = "0xC83830", VA = "0xC83830")]
	private void AddForceToVertex(int i)
	{
	}
}
[Token(Token = "0x2000054")]
public struct VertexUpdateJob : IJob
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float uniformScale;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float springForce;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float damping;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NativeArray<float> vertexDiff;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NativeArray<Vector3> originalVertices;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NativeArray<Vector3> displacedVertices;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NativeArray<Vector3> vertexVelocities;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float deltaTime;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC839AC", Offset = "0xC839AC", VA = "0xC839AC", Slot = "4")]
	public void Execute()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC83A5C", Offset = "0xC83A5C", VA = "0xC83A5C")]
	private void UpdateVertex(int i)
	{
	}
}
[Token(Token = "0x2000055")]
[DefaultExecutionOrder(-3000)]
public class MeshDeformerScheduler : MonoBehaviour
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MeshDeformerScheduler Instance;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MeshDeformer> deformerArray;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC83B24", Offset = "0xC83B24", VA = "0xC83B24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xC83274", Offset = "0xC83274", VA = "0xC83274")]
	public void AddMeshDeformer(MeshDeformer md)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC83378", Offset = "0xC83378", VA = "0xC83378")]
	public void RemoveMeshDeformer(MeshDeformer md)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC83B7C", Offset = "0xC83B7C", VA = "0xC83B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC83DB8", Offset = "0xC83DB8", VA = "0xC83DB8")]
	public MeshDeformerScheduler()
	{
	}
}
[Token(Token = "0x2000056")]
public class PositionTrackTool : MonoBehaviour
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MoveDelta[] speedArray;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Vector3 lastPosition;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> lastPositions;

	[Token(Token = "0x17000026")]
	public Vector3 LastVelocity
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xC83DC0", Offset = "0xC83DC0", VA = "0xC83DC0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000027")]
	public Vector3 LastFastestVelocity
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xC83DF8", Offset = "0xC83DF8", VA = "0xC83DF8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000028")]
	public Vector3 LastAvgVelocity
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xC83EC0", Offset = "0xC83EC0", VA = "0xC83EC0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC84014", Offset = "0xC84014", VA = "0xC84014")]
	protected void AddSpeed(Vector3 speed)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xC84310", Offset = "0xC84310", VA = "0xC84310", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC84350", Offset = "0xC84350", VA = "0xC84350")]
	private Vector3 GetCurrentPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC8446C", Offset = "0xC8446C", VA = "0xC8446C")]
	public PositionTrackTool()
	{
	}
}
[Token(Token = "0x2000057")]
public class RankItem : MonoBehaviour
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArtNumber numText;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI nameText;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI valueText;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI valueTitle;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PlayerRankBG;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image RankListBG;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image RankBestImage;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite PlayerSpriteBG;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite[] RankBest;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] NoRankText;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC8452C", Offset = "0xC8452C", VA = "0xC8452C")]
	public void SetData(int num, string name, string value)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC84594", Offset = "0xC84594", VA = "0xC84594")]
	public RankItem()
	{
	}
}
[Token(Token = "0x2000058")]
public class RankTable : MonoBehaviour
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tableItemPrefab;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tableItemParent;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform selfItemParent;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xC8459C", Offset = "0xC8459C", VA = "0xC8459C")]
	public RankTable()
	{
	}
}
[Token(Token = "0x2000059")]
public abstract class SceneBinding : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneBinding lastSceneBinding;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SceneBinding nextSceneBinding;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<System.Action> DoOnLoadFinish;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<System.Action> DoOnSceneActive;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<bool> OnTurnMenu;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool IsOpen;

	[Token(Token = "0x17000029")]
	public static SceneBinding Instance
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xC845A4", Offset = "0xC845A4", VA = "0xC845A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xC845EC", Offset = "0xC845EC", VA = "0xC845EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xC8463C", Offset = "0xC8463C", VA = "0xC8463C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xC84734", Offset = "0xC84734", VA = "0xC84734")]
	public void AddRuntimeManager()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC847A4", Offset = "0xC847A4", VA = "0xC847A4")]
	protected void ResetLastBinding()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC84810", Offset = "0xC84810", VA = "0xC84810")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC84868", Offset = "0xC84868", VA = "0xC84868")]
	public void OnLoadStart()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC8486C", Offset = "0xC8486C", VA = "0xC8486C")]
	public void AddOnLoadFinish(System.Action action)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC84918", Offset = "0xC84918", VA = "0xC84918")]
	public void AddOnSceneActive(System.Action action)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC849C4", Offset = "0xC849C4", VA = "0xC849C4")]
	public void OnSceneActive()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC84B18", Offset = "0xC84B18", VA = "0xC84B18")]
	public void OnLoadFinish()
	{
	}

	[Token(Token = "0x60001CE")]
	protected abstract void OnLoadFinished();

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC84DB4", Offset = "0xC84DB4", VA = "0xC84DB4")]
	public void TurnMenu()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xC84DE4", Offset = "0xC84DE4", VA = "0xC84DE4", Slot = "6")]
	protected virtual void QuitMenuUpdate()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xC84F00", Offset = "0xC84F00", VA = "0xC84F00", Slot = "7")]
	public virtual void OpenMenu()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC85098", Offset = "0xC85098", VA = "0xC85098", Slot = "8")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xC850A4", Offset = "0xC850A4", VA = "0xC850A4")]
	public void GameStart(BattleStartInfo StartInfo)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xC850A8", Offset = "0xC850A8", VA = "0xC850A8")]
	protected SceneBinding()
	{
	}
}
[Token(Token = "0x200005A")]
public class SceneBindingBoxing : SceneBinding
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sceneBuilding;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ufo;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ThrowController> throwControllers;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xC85190", Offset = "0xC85190", VA = "0xC85190", Slot = "5")]
	protected override void OnLoadFinished()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xC8538C", Offset = "0xC8538C", VA = "0xC8538C")]
	public void ReturnMain()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC8540C", Offset = "0xC8540C", VA = "0xC8540C", Slot = "7")]
	public override void OpenMenu()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC855A4", Offset = "0xC855A4", VA = "0xC855A4")]
	public SceneBindingBoxing()
	{
	}
}
[Token(Token = "0x200005B")]
public class SceneBindingBridge : SceneBinding
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ThrowController> throwControllers;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Volume volume;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xC855D8", Offset = "0xC855D8", VA = "0xC855D8", Slot = "5")]
	protected override void OnLoadFinished()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xC858D4", Offset = "0xC858D4", VA = "0xC858D4")]
	public void ReturnMain()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xC859AC", Offset = "0xC859AC", VA = "0xC859AC", Slot = "7")]
	public override void OpenMenu()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xC85B44", Offset = "0xC85B44", VA = "0xC85B44")]
	public SceneBindingBridge()
	{
	}
}
[Token(Token = "0x200005C")]
public class SceneBindingGuide : SceneBinding
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ThrowController> throwControllers;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xC85B78", Offset = "0xC85B78", VA = "0xC85B78", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xC85BEC", Offset = "0xC85BEC", VA = "0xC85BEC", Slot = "5")]
	protected override void OnLoadFinished()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xC85DE8", Offset = "0xC85DE8", VA = "0xC85DE8")]
	public void ReturnMain()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xC85E68", Offset = "0xC85E68", VA = "0xC85E68", Slot = "7")]
	public override void OpenMenu()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xC86000", Offset = "0xC86000", VA = "0xC86000")]
	public SceneBindingGuide()
	{
	}
}
[Token(Token = "0x200005D")]
public class SceneBindingIron : SceneBinding
{
	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xC86034", Offset = "0xC86034", VA = "0xC86034")]
	public void ReturnMain()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC860B4", Offset = "0xC860B4", VA = "0xC860B4", Slot = "7")]
	public override void OpenMenu()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC8624C", Offset = "0xC8624C", VA = "0xC8624C", Slot = "5")]
	protected override void OnLoadFinished()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC86318", Offset = "0xC86318", VA = "0xC86318")]
	public SceneBindingIron()
	{
	}
}
[Token(Token = "0x200005E")]
public class SceneBindingMain : SceneBinding
{
	[Token(Token = "0x200005F")]
	[CompilerGenerated]
	private sealed class <DelayActiveRay>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneBindingMain <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F2")]
			[Address(RVA = "0xC86878", Offset = "0xC86878", VA = "0xC86878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F4")]
			[Address(RVA = "0xC868C0", Offset = "0xC868C0", VA = "0xC868C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xC86624", Offset = "0xC86624", VA = "0xC86624")]
		[DebuggerHidden]
		public <DelayActiveRay>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xC86650", Offset = "0xC86650", VA = "0xC86650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xC86654", Offset = "0xC86654", VA = "0xC86654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xC86880", Offset = "0xC86880", VA = "0xC86880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshDeformerScheduler meshDeformerScheduler;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ThrowController> throwControllers;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LanguageTextMeshPro Verson;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC8634C", Offset = "0xC8634C", VA = "0xC8634C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xC86400", Offset = "0xC86400", VA = "0xC86400", Slot = "5")]
	protected override void OnLoadFinished()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xC865B0", Offset = "0xC865B0", VA = "0xC865B0")]
	[IteratorStateMachine(typeof(<DelayActiveRay>d__5))]
	private IEnumerator DelayActiveRay()
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xC8664C", Offset = "0xC8664C", VA = "0xC8664C")]
	public SceneBindingMain()
	{
	}
}
[Token(Token = "0x2000060")]
public class SceneBindingSplash : SceneBinding
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstInit;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xC868C8", Offset = "0xC868C8", VA = "0xC868C8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xC869E4", Offset = "0xC869E4", VA = "0xC869E4", Slot = "5")]
	protected override void OnLoadFinished()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xC869E8", Offset = "0xC869E8", VA = "0xC869E8")]
	public SceneBindingSplash()
	{
	}
}
[Token(Token = "0x2000061")]
public enum BBAudio
{
	[Token(Token = "0x4000201")]
	BGM_Lobby,
	[Token(Token = "0x4000202")]
	BGM_Fight1,
	[Token(Token = "0x4000203")]
	BGM_Victory,
	[Token(Token = "0x4000204")]
	ButtonClick,
	[Token(Token = "0x4000205")]
	ButtonChoose,
	[Token(Token = "0x4000206")]
	HitHard,
	[Token(Token = "0x4000207")]
	HitMild,
	[Token(Token = "0x4000208")]
	ItemGet,
	[Token(Token = "0x4000209")]
	ItemPlunger,
	[Token(Token = "0x400020A")]
	ItemMirror,
	[Token(Token = "0x400020B")]
	ItemShield,
	[Token(Token = "0x400020C")]
	ItemFlail,
	[Token(Token = "0x400020D")]
	ItemInvisible,
	[Token(Token = "0x400020E")]
	ItemGodStarHit,
	[Token(Token = "0x400020F")]
	SceneVolcanoShoot,
	[Token(Token = "0x4000210")]
	SceneFireBallBoom,
	[Token(Token = "0x4000211")]
	SceneCuttlefishBoom,
	[Token(Token = "0x4000212")]
	SceneDizzinessBoom,
	[Token(Token = "0x4000213")]
	EnterDizz,
	[Token(Token = "0x4000214")]
	GetShield,
	[Token(Token = "0x4000215")]
	GetToiletPlunger,
	[Token(Token = "0x4000216")]
	GetMirror,
	[Token(Token = "0x4000217")]
	GetFlail,
	[Token(Token = "0x4000218")]
	GetRocket,
	[Token(Token = "0x4000219")]
	GetGodStar,
	[Token(Token = "0x400021A")]
	GetInvisibleCloak
}
[Token(Token = "0x2000062")]
public class BBConfig
{
	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xC869EC", Offset = "0xC869EC", VA = "0xC869EC")]
	public BBConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class BBEquipConfig
{
	[Token(Token = "0x2000064")]
	[CompilerGenerated]
	private sealed class <LoadConfigAsync>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BBEquipConfig <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000206")]
			[Address(RVA = "0xC87CD8", Offset = "0xC87CD8", VA = "0xC87CD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000208")]
			[Address(RVA = "0xC87D20", Offset = "0xC87D20", VA = "0xC87D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xC87978", Offset = "0xC87978", VA = "0xC87978")]
		[DebuggerHidden]
		public <LoadConfigAsync>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0xC87BE4", Offset = "0xC87BE4", VA = "0xC87BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0xC87BE8", Offset = "0xC87BE8", VA = "0xC87BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0xC87CE0", Offset = "0xC87CE0", VA = "0xC87CE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000065")]
	[CompilerGenerated]
	private sealed class <LoadItemConfig>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BBEquipConfig <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020C")]
			[Address(RVA = "0xC87E1C", Offset = "0xC87E1C", VA = "0xC87E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020E")]
			[Address(RVA = "0xC87E64", Offset = "0xC87E64", VA = "0xC87E64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0xC879A0", Offset = "0xC879A0", VA = "0xC879A0")]
		[DebuggerHidden]
		public <LoadItemConfig>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xC87D28", Offset = "0xC87D28", VA = "0xC87D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xC87D2C", Offset = "0xC87D2C", VA = "0xC87D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0xC87E24", Offset = "0xC87E24", VA = "0xC87E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BBEquipConfig instance;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<SuitItemConfig> S_HeadWear;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<SuitItemConfig> S_Face;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static List<SuitItemConfig> S_Body;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<SuitItemConfig> S_Glove;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static List<SuitItemConfig> S_Hair;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static List<SuitItemConfig> S_Item;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Dictionary<string, SuitItemConfig> D_SuitID;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static List<List<SuitItemConfig>> m_PlayerSuitItem;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool dataLoaded;

	[Token(Token = "0x1700002C")]
	public static BBEquipConfig Instance
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xC869F4", Offset = "0xC869F4", VA = "0xC869F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xC86A98", Offset = "0xC86A98", VA = "0xC86A98")]
	private static BBEquipConfig LoadConfig()
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC86AFC", Offset = "0xC86AFC", VA = "0xC86AFC")]
	public void LoadConfigFromServer(MonoBehaviour executer)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC86C30", Offset = "0xC86C30", VA = "0xC86C30")]
	public void LoadData()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC86CA4", Offset = "0xC86CA4", VA = "0xC86CA4")]
	private void DoLoadEquipConfig()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC876A4", Offset = "0xC876A4", VA = "0xC876A4")]
	private void DoLoadItemConfig()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC86B48", Offset = "0xC86B48", VA = "0xC86B48")]
	[IteratorStateMachine(typeof(<LoadConfigAsync>d__17))]
	public IEnumerator LoadConfigAsync()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC86BBC", Offset = "0xC86BBC", VA = "0xC86BBC")]
	[IteratorStateMachine(typeof(<LoadItemConfig>d__18))]
	public IEnumerator LoadItemConfig()
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xC86AF4", Offset = "0xC86AF4", VA = "0xC86AF4")]
	public BBEquipConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000066")]
public class BBGlobalConfig
{
	[Token(Token = "0x400022B")]
	public const string ConfigPath = "http://119.91.91.30:12887/BBGlobalConfig/BBGlobalConfig.json";

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BBGlobalConfig instance;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NormalMapConfig normalMapConfig;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VolcanoMapConfig volcanoMapConfig;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WoodenMachineMapConfig woodenMachineMapConfig;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxerFaceConfig boxerFaceConfig;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponsConfig weaponsConfig;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dataLoaded;

	[Token(Token = "0x17000031")]
	public static BBGlobalConfig Instance
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xC87E6C", Offset = "0xC87E6C", VA = "0xC87E6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC87EE4", Offset = "0xC87EE4", VA = "0xC87EE4")]
	private static BBGlobalConfig LoadConfig()
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xC8808C", Offset = "0xC8808C", VA = "0xC8808C")]
	public void LoadData()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xC88144", Offset = "0xC88144", VA = "0xC88144")]
	public static void SaveConfig()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xC87F3C", Offset = "0xC87F3C", VA = "0xC87F3C")]
	public BBGlobalConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000067")]
public class BoxerFaceConfig : BBConfig
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxHealthValue;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float lightPunchValue;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strongPunchValue;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float recoverPerSec;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dizzTotalTime;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float strikeMultiple;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dizzedWeaponMultiple;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] bottomLayer;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] middleLayer;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] topLayer;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xC884FC", Offset = "0xC884FC", VA = "0xC884FC")]
	public BoxerFaceConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000068")]
public class MapBlockConfig : BBConfig
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float dropInterval;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float radiusReducePerDrop;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minRadius;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waveWidth;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waveHeight;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waveTotalTime;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC8886C", Offset = "0xC8886C", VA = "0xC8886C")]
	public MapBlockConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000069")]
public class NormalMapConfig : BBConfig
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MapBlockConfig blockConfig;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SupplyBoxConfig supplyBoxConfig;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xC881AC", Offset = "0xC881AC", VA = "0xC881AC")]
	public NormalMapConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x200006A")]
public class RocketWeaponItemConfig : WeaponItemConfig
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initVelocity;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explodeRadiusPlayer;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explodeRadiusGround;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float explodeForce;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dropGround;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xC888B0", Offset = "0xC888B0", VA = "0xC888B0")]
	public RocketWeaponItemConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x200006B")]
public class SuitItemConfig : BBConfig
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string unlock;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string description;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xC88908", Offset = "0xC88908", VA = "0xC88908")]
	public SuitItemConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x200006C")]
public class SuitConfig : BBConfig
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SuitItemConfig> datas;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xC889DC", Offset = "0xC889DC", VA = "0xC889DC")]
	public SuitConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x200006D")]
public class SupplyBoxConfig : BBConfig
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float generateInterval;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int generateMaxRadius;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int generateMinRadius;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int createCount;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maximum;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int delayBeforStart;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC88894", Offset = "0xC88894", VA = "0xC88894")]
	public SupplyBoxConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x200006E")]
public class VolcanoConfig : BBConfig
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float shootInterval;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int shootNum;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fixedFireBallNum;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int targetPlayerNum;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float explodeRadius;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxShootRadius;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minShootRadius;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC889E4", Offset = "0xC889E4", VA = "0xC889E4")]
	public VolcanoConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x200006F")]
public class VolcanoMapConfig : BBConfig
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VolcanoConfig volcanoConfig;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapBlockConfig blockConfig;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SupplyBoxConfig supplyBoxConfig;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xC88290", Offset = "0xC88290", VA = "0xC88290")]
	public VolcanoMapConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000070")]
public class WeaponItemConfig : BBConfig
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float randomWeightPercent;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float duration;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ammo;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float strikeMultiple;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xC888E8", Offset = "0xC888E8", VA = "0xC888E8")]
	public WeaponItemConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000071")]
public class WeaponsConfig : BBConfig
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WeaponItemConfig plunger;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponItemConfig shield;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponItemConfig mirror;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponItemConfig flail;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponItemConfig invisbleCloak;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WeaponItemConfig superStart;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RocketWeaponItemConfig rocket;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xC88618", Offset = "0xC88618", VA = "0xC88618")]
	public WeaponsConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000072")]
public class WoodenDummyConfig : BBConfig
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float rpm;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int attackType;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strikeMultiple;

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xC88A1C", Offset = "0xC88A1C", VA = "0xC88A1C")]
	public WoodenDummyConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000073")]
public class WoodenMachineConfig : BBConfig
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int smallerNum;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int largerNum;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WoodenDummyConfig smallerConfig;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WoodenDummyConfig largerConfig;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xC88A34", Offset = "0xC88A34", VA = "0xC88A34")]
	public WoodenMachineConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000074")]
public class WoodenMachineMapConfig : BBConfig
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WoodenMachineConfig machineConfig;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapBlockConfig blockConfig;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SupplyBoxConfig supplyBoxConfig;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xC883E0", Offset = "0xC883E0", VA = "0xC883E0")]
	public WoodenMachineMapConfig()
	{
	}
}
[Token(Token = "0x2000075")]
public class ItemBase : ScriptableObject
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemName;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemDesc;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ItemUnlockCondition[] unlockConditions;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC88B18", Offset = "0xC88B18", VA = "0xC88B18")]
	public ItemBase()
	{
	}
}
[Token(Token = "0x2000076")]
[CreateAssetMenu(menuName = "FitBoxing/ItemPreview")]
public class ItemPreview : ScriptableObject
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemName;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemDesc;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string itemID;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject model;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite itemIcon;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ItemUnlockCondition unlockCondition;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool Random;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC88B20", Offset = "0xC88B20", VA = "0xC88B20")]
	public ItemPreview()
	{
	}
}
[Token(Token = "0x2000077")]
[CreateAssetMenu(fileName = "CalorieUnlockCondition", menuName = "BoxBoxingVR/CalorieUnlockCondition", order = 0)]
public class CalorieUnlockCondition : ItemUnlockCondition
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int calorie;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xC88B28", Offset = "0xC88B28", VA = "0xC88B28", Slot = "4")]
	public override string ConditionText()
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC88BA4", Offset = "0xC88BA4", VA = "0xC88BA4")]
	public CalorieUnlockCondition()
	{
	}
}
[Token(Token = "0x2000078")]
public abstract class ItemUnlockCondition : ScriptableObject
{
	[Token(Token = "0x6000226")]
	public abstract string ConditionText();

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC88BAC", Offset = "0xC88BAC", VA = "0xC88BAC")]
	protected ItemUnlockCondition()
	{
	}
}
[Token(Token = "0x2000079")]
[CreateAssetMenu(fileName = "RunkUnlockCondition", menuName = "BoxBoxingVR/RunkUnlockCondition", order = 0)]
public class RunkUnlockCondition : ItemUnlockCondition
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int runk;

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC88BB4", Offset = "0xC88BB4", VA = "0xC88BB4", Slot = "4")]
	public override string ConditionText()
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC88C30", Offset = "0xC88C30", VA = "0xC88C30")]
	public RunkUnlockCondition()
	{
	}
}
[Token(Token = "0x200007A")]
public class ServerInit : MonoBehaviour
{
	[Token(Token = "0x200007B")]
	[CompilerGenerated]
	private sealed class <HttpNet>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0xC89004", Offset = "0xC89004", VA = "0xC89004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0xC8904C", Offset = "0xC8904C", VA = "0xC8904C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xC88CB8", Offset = "0xC88CB8", VA = "0xC88CB8")]
		[DebuggerHidden]
		public <HttpNet>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xC88DAC", Offset = "0xC88DAC", VA = "0xC88DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xC88DB0", Offset = "0xC88DB0", VA = "0xC88DB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xC8900C", Offset = "0xC8900C", VA = "0xC8900C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string openId;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string accessToken;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string nickName;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC88C38", Offset = "0xC88C38", VA = "0xC88C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC88C58", Offset = "0xC88C58", VA = "0xC88C58")]
	[IteratorStateMachine(typeof(<HttpNet>d__4))]
	private IEnumerator HttpNet()
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC88CE0", Offset = "0xC88CE0", VA = "0xC88CE0")]
	public ServerInit()
	{
	}
}
[Token(Token = "0x200007C")]
public class PlayerDecoratePart : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isEquip;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xC89054", Offset = "0xC89054", VA = "0xC89054")]
	public void SetEquip(bool isEquip)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xC89074", Offset = "0xC89074", VA = "0xC89074")]
	public bool IsEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xC8907C", Offset = "0xC8907C", VA = "0xC8907C", Slot = "4")]
	protected virtual void OnEquip()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xC89080", Offset = "0xC89080", VA = "0xC89080", Slot = "5")]
	protected virtual void OnUnEquip()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xC89084", Offset = "0xC89084", VA = "0xC89084")]
	public PlayerDecoratePart()
	{
	}
}
[Token(Token = "0x200007D")]
public class PlayerDecoratePartFace : PlayerDecoratePart
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExpressionGroup group;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject faceGo;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh faceMesh;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D faceTex;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FaceMeshControl faceMeshControl;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter meshFilter;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshDeformer deformer;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xC8908C", Offset = "0xC8908C", VA = "0xC8908C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xC8915C", Offset = "0xC8915C", VA = "0xC8915C", Slot = "4")]
	protected override void OnEquip()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xC8923C", Offset = "0xC8923C", VA = "0xC8923C", Slot = "5")]
	protected override void OnUnEquip()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xC89240", Offset = "0xC89240", VA = "0xC89240")]
	public PlayerDecoratePartFace()
	{
	}
}
[Token(Token = "0x200007E")]
public class PlayerDecoratePartGameObject : PlayerDecoratePart
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] partsGo;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xC89248", Offset = "0xC89248", VA = "0xC89248", Slot = "4")]
	protected override void OnEquip()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xC892E0", Offset = "0xC892E0", VA = "0xC892E0", Slot = "5")]
	protected override void OnUnEquip()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xC89378", Offset = "0xC89378", VA = "0xC89378")]
	public PlayerDecoratePartGameObject()
	{
	}
}
[Token(Token = "0x200007F")]
public class PlayerSuiteAssmble : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boxer boxer;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DecoratePartType> parts;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> m_Character;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] PlayerSuit;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] currPartIndex;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_Random;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject championBelt;

	[Token(Token = "0x17000034")]
	public int[] S_PlayerSuit
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xC894E0", Offset = "0xC894E0", VA = "0xC894E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public int SuitRandom
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xC894E8", Offset = "0xC894E8", VA = "0xC894E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000008")]
	public event Action<int, string> OnSuiteChange
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xC89380", Offset = "0xC89380", VA = "0xC89380")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xC89430", Offset = "0xC89430", VA = "0xC89430")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xC894F0", Offset = "0xC894F0", VA = "0xC894F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xC89710", Offset = "0xC89710", VA = "0xC89710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xC899F0", Offset = "0xC899F0", VA = "0xC899F0")]
	public void ChangeSuit()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xC89C98", Offset = "0xC89C98", VA = "0xC89C98")]
	public SuitItemConfig GetRandomSuite(int PartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xC898CC", Offset = "0xC898CC", VA = "0xC898CC")]
	public void SetPartObjectIndex(int PartIndex, int Clothindex)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xC8A41C", Offset = "0xC8A41C", VA = "0xC8A41C")]
	public void SetBelt(bool isChampion)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xC8A43C", Offset = "0xC8A43C", VA = "0xC8A43C")]
	public PlayerSuiteAssmble()
	{
	}
}
[Serializable]
[Token(Token = "0x2000080")]
public class DecoratePartType
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerDecoratePart[] decoParts;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC8A570", Offset = "0xC8A570", VA = "0xC8A570")]
	public void SetActive(int index)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xC8A608", Offset = "0xC8A608", VA = "0xC8A608")]
	public DecoratePartType()
	{
	}
}
[Token(Token = "0x2000081")]
public class SuperShieldMask : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshDeformer deformer;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Boxer owner;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hitFxGo;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xC8A610", Offset = "0xC8A610", VA = "0xC8A610")]
	public void Hit(HitInfo info)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xC8A7EC", Offset = "0xC8A7EC", VA = "0xC8A7EC")]
	public SuperShieldMask()
	{
	}
}
[Token(Token = "0x2000082")]
public class SupplyBox : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform balloonTransform;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fallSpeed;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject meshGo;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool released;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject explodePrefab;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool beginnerGuideMode;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool getAble;

	[Token(Token = "0x14000009")]
	public event Action<SupplyBox> OnDest
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xC8A7F4", Offset = "0xC8A7F4", VA = "0xC8A7F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xC8A8A4", Offset = "0xC8A8A4", VA = "0xC8A8A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action<SupplyBox> OnGrounded
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xC8A954", Offset = "0xC8A954", VA = "0xC8A954")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xC8AA04", Offset = "0xC8AA04", VA = "0xC8AA04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xC8AAB4", Offset = "0xC8AAB4", VA = "0xC8AAB4")]
	private void ReleaseBalloon()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xC8ABE8", Offset = "0xC8ABE8", VA = "0xC8ABE8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xC8AF5C", Offset = "0xC8AF5C", VA = "0xC8AF5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xC8ACF8", Offset = "0xC8ACF8", VA = "0xC8ACF8")]
	private static SupplyItemInfo GetBeginnerGuideItem()
	{
		return default(SupplyItemInfo);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xC8AE20", Offset = "0xC8AE20", VA = "0xC8AE20")]
	private void DelayDestroy()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xC8B098", Offset = "0xC8B098", VA = "0xC8B098")]
	private void ExplodeBox()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xC8B278", Offset = "0xC8B278", VA = "0xC8B278")]
	public SupplyBox()
	{
	}
}
[Token(Token = "0x2000083")]
public class SupplyBoxBorn : MatchMapObject
{
	[Token(Token = "0x2000084")]
	private struct ItemProb
	{
		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SupplyItemType type;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int prob;

		[Token(Token = "0x6000265")]
		[Address(RVA = "0xC8B84C", Offset = "0xC8B84C", VA = "0xC8B84C")]
		public ItemProb(SupplyItemType type, int prob)
		{
		}
	}

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject supplyBoxPrefab;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float bornTime;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startDelay;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HashSet<SupplyBox> supplyBoxes;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ItemProb> itemProbs;

	[Token(Token = "0x17000036")]
	public SupplyBoxConfig Config
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xC8B288", Offset = "0xC8B288", VA = "0xC8B288")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xC8B304", Offset = "0xC8B304", VA = "0xC8B304")]
	private static void InitSupplyBox()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xC8B854", Offset = "0xC8B854", VA = "0xC8B854")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xC8B858", Offset = "0xC8B858", VA = "0xC8B858", Slot = "5")]
	public override void MatchStart()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xC8B878", Offset = "0xC8B878", VA = "0xC8B878", Slot = "6")]
	public override void MatchEnd()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xC8B884", Offset = "0xC8B884", VA = "0xC8B884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC8B990", Offset = "0xC8B990", VA = "0xC8B990")]
	private void CreateBox()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC8BBE4", Offset = "0xC8BBE4", VA = "0xC8BBE4")]
	private void OnBoxGrounded(SupplyBox box)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xC8BC3C", Offset = "0xC8BC3C", VA = "0xC8BC3C")]
	private void OnBoxDestory(SupplyBox box)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xC8AD08", Offset = "0xC8AD08", VA = "0xC8AD08")]
	public static SupplyItemInfo GetItem()
	{
		return default(SupplyItemInfo);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC8BC94", Offset = "0xC8BC94", VA = "0xC8BC94")]
	public SupplyBoxBorn()
	{
	}
}
[Token(Token = "0x2000085")]
public struct SupplyItemInfo
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SupplyItemType type;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int count;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xC8BD1C", Offset = "0xC8BD1C", VA = "0xC8BD1C")]
	public SupplyItemInfo(SupplyItemType type, int duration, int count)
	{
	}
}
[Token(Token = "0x2000086")]
public enum SupplyItemType
{
	[Token(Token = "0x40002B0")]
	None,
	[Token(Token = "0x40002B1")]
	Shield,
	[Token(Token = "0x40002B2")]
	Plunger,
	[Token(Token = "0x40002B3")]
	Mirror,
	[Token(Token = "0x40002B4")]
	Flail,
	[Token(Token = "0x40002B5")]
	Rocket,
	[Token(Token = "0x40002B6")]
	SuperShield,
	[Token(Token = "0x40002B7")]
	InvisibleCloak
}
[Token(Token = "0x2000087")]
public class ThrowController : PositionTrackTool
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform cameraTransform;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform traceTransform;

	[Token(Token = "0x1400000B")]
	public event Action<Vector3> OnThrow
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xC8BD30", Offset = "0xC8BD30", VA = "0xC8BD30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xC8BDE0", Offset = "0xC8BDE0", VA = "0xC8BDE0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xC8BE90", Offset = "0xC8BE90", VA = "0xC8BE90", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xC8C110", Offset = "0xC8C110", VA = "0xC8C110")]
	public ThrowController()
	{
	}
}
[Token(Token = "0x2000088")]
public struct IntMask
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int value;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xC8C114", Offset = "0xC8C114", VA = "0xC8C114")]
	public void Clear()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xC8C11C", Offset = "0xC8C11C", VA = "0xC8C11C")]
	public bool Contains(int e)
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xC8C12C", Offset = "0xC8C12C", VA = "0xC8C12C")]
	public bool Contains(IntMask e)
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xC8C13C", Offset = "0xC8C13C", VA = "0xC8C13C")]
	public void Add(int e)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xC8C14C", Offset = "0xC8C14C", VA = "0xC8C14C")]
	public void Sub(int e)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xC8C15C", Offset = "0xC8C15C", VA = "0xC8C15C")]
	public IntMask Xor(IntMask e)
	{
		return default(IntMask);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xC8C168", Offset = "0xC8C168", VA = "0xC8C168")]
	public IntMask Xor(int e)
	{
		return default(IntMask);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xC8C174", Offset = "0xC8C174", VA = "0xC8C174")]
	public int GetInt()
	{
		return default(int);
	}
}
[Token(Token = "0x2000089")]
public class KcalCalculate : MonoBehaviour
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject calroiesUI;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] bodyParts;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] bodyPartPos;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] bodyPartsWeight;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float updateInterval;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float time;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text kcalText;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI kcalTextPro;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BBCalorie calorie;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float kcal;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static KcalCalculate Instance;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool IsStart;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xC8C17C", Offset = "0xC8C17C", VA = "0xC8C17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xC8C334", Offset = "0xC8C334", VA = "0xC8C334")]
	private void Update()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xC8C5B0", Offset = "0xC8C5B0", VA = "0xC8C5B0")]
	public void StartRecored()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xC8C5DC", Offset = "0xC8C5DC", VA = "0xC8C5DC")]
	public void StopRecored()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xC8C604", Offset = "0xC8C604", VA = "0xC8C604")]
	public KcalCalculate()
	{
	}
}
[Token(Token = "0x200008A")]
public class LoginSession : Singletonx<LoginSession>
{
	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <PollingCheckLogin>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoginSession <>4__this;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0xC8CEDC", Offset = "0xC8CEDC", VA = "0xC8CEDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0xC8CF24", Offset = "0xC8CF24", VA = "0xC8CF24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xC8C888", Offset = "0xC8C888", VA = "0xC8C888")]
		[DebuggerHidden]
		public <PollingCheckLogin>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xC8CAB0", Offset = "0xC8CAB0", VA = "0xC8CAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xC8CAB4", Offset = "0xC8CAB4", VA = "0xC8CAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xC8CEE4", Offset = "0xC8CEE4", VA = "0xC8CEE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <UserLogout>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoginSession <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0xC8CFF4", Offset = "0xC8CFF4", VA = "0xC8CFF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0xC8D03C", Offset = "0xC8D03C", VA = "0xC8D03C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xC8C974", Offset = "0xC8C974", VA = "0xC8C974")]
		[DebuggerHidden]
		public <UserLogout>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xC8CF2C", Offset = "0xC8CF2C", VA = "0xC8CF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xC8CF30", Offset = "0xC8CF30", VA = "0xC8CF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xC8CFFC", Offset = "0xC8CFFC", VA = "0xC8CFFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public System.Action OnLoginSuccess;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Texture2D> OnHeadPicDownloadSucc;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D noLoginPic;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D qrTex;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D cacheHandTex;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string userName;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool qrReadAble;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _checkPayCountdown;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _verifyCode;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool regFlag;

	[Token(Token = "0x17000037")]
	public bool IsLogin
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xC8C60C", Offset = "0xC8C60C", VA = "0xC8C60C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xC8C614", Offset = "0xC8C614", VA = "0xC8C614")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	private string VerifyCodeUrl
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xC8C618", Offset = "0xC8C618", VA = "0xC8C618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000039")]
	private string LoginUrl
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xC8C658", Offset = "0xC8C658", VA = "0xC8C658")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	private string LogoutUrl
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xC8C698", Offset = "0xC8C698", VA = "0xC8C698")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xC8C6D8", Offset = "0xC8C6D8", VA = "0xC8C6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xC8C76C", Offset = "0xC8C76C", VA = "0xC8C76C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xC8C770", Offset = "0xC8C770", VA = "0xC8C770")]
	public void Logout()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC8C804", Offset = "0xC8C804", VA = "0xC8C804")]
	private void LoginSuccess()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC8C820", Offset = "0xC8C820", VA = "0xC8C820")]
	private void OnAction(string actionName, string param)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC8C6F8", Offset = "0xC8C6F8", VA = "0xC8C6F8")]
	[IteratorStateMachine(typeof(<PollingCheckLogin>d__24))]
	private IEnumerator PollingCheckLogin()
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC8C8B0", Offset = "0xC8C8B0", VA = "0xC8C8B0")]
	private void UserLogin(string json)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xC8C968", Offset = "0xC8C968", VA = "0xC8C968")]
	private void DoWhenNotLogin()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC8C790", Offset = "0xC8C790", VA = "0xC8C790")]
	[IteratorStateMachine(typeof(<UserLogout>d__27))]
	private IEnumerator UserLogout()
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC8C99C", Offset = "0xC8C99C", VA = "0xC8C99C")]
	private void UpdateQrTexture(string content)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC8CA68", Offset = "0xC8CA68", VA = "0xC8CA68")]
	public LoginSession()
	{
	}
}
[Token(Token = "0x200008D")]
public class BreakScreenUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008E")]
	public class UIImageMaskInfo
	{
		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float totalDuration;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fadeOutDuration;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 pos;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scale;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float angle;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float elapseTime;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject go;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasGroup group;

		[Token(Token = "0x600029E")]
		[Address(RVA = "0xC8DFEC", Offset = "0xC8DFEC", VA = "0xC8DFEC")]
		public UIImageMaskInfo([Optional] GameObject go)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0xC8D3C0", Offset = "0xC8D3C0", VA = "0xC8D3C0")]
		public void Init()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xC8E048", Offset = "0xC8E048", VA = "0xC8E048")]
		public void Show()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xC8DB14", Offset = "0xC8DB14", VA = "0xC8DB14")]
		public void Show(Vector3 pos, float scale, float angle)
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xC8DCF0", Offset = "0xC8DCF0", VA = "0xC8DCF0")]
		public void Hide()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xC8DCD4", Offset = "0xC8DCD4", VA = "0xC8DCD4")]
		public void SmoothHide()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xC8DE78", Offset = "0xC8DE78", VA = "0xC8DE78")]
		public bool Tick(float delta)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boxer owner;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<UIImageMaskInfo> breakGlassInfos;

	[Token(Token = "0x1700003F")]
	public bool CanAddMask
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xC8D044", Offset = "0xC8D044", VA = "0xC8D044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xC8D094", Offset = "0xC8D094", VA = "0xC8D094")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xC8D420", Offset = "0xC8D420", VA = "0xC8D420")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xC8D648", Offset = "0xC8D648", VA = "0xC8D648")]
	private void OnDizz(bool state)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xC8D8F8", Offset = "0xC8D8F8", VA = "0xC8D8F8")]
	private void OnBeHitByBoxer(HitInfo obj)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xC8D654", Offset = "0xC8D654", VA = "0xC8D654")]
	public void ShowGlassBreak()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xC8D824", Offset = "0xC8D824", VA = "0xC8D824")]
	public void HideGlassBreak()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xC8D90C", Offset = "0xC8D90C", VA = "0xC8D90C")]
	public void ShowInk()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xC8DD20", Offset = "0xC8DD20", VA = "0xC8DD20")]
	private void Update()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xC8DF64", Offset = "0xC8DF64", VA = "0xC8DF64")]
	public BreakScreenUI()
	{
	}
}
[Token(Token = "0x200008F")]
public class ComboUI : MonoBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ComboManager cm;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text comboText;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider comboSlider;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xC8E1D4", Offset = "0xC8E1D4", VA = "0xC8E1D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xC8E27C", Offset = "0xC8E27C", VA = "0xC8E27C")]
	private void OnCombo(int combo)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xC8E2FC", Offset = "0xC8E2FC", VA = "0xC8E2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xC8E378", Offset = "0xC8E378", VA = "0xC8E378")]
	public ComboUI()
	{
	}
}
[Token(Token = "0x2000090")]
public class Follow : MonoBehaviour
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xC8E380", Offset = "0xC8E380", VA = "0xC8E380")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xC8E384", Offset = "0xC8E384", VA = "0xC8E384")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xC8E534", Offset = "0xC8E534", VA = "0xC8E534")]
	public Follow()
	{
	}
}
[Token(Token = "0x2000091")]
public class HUD : MonoBehaviour
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_TipText;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fs;

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC8E53C", Offset = "0xC8E53C", VA = "0xC8E53C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xC8E58C", Offset = "0xC8E58C", VA = "0xC8E58C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xC8E660", Offset = "0xC8E660", VA = "0xC8E660")]
	public void SetTip()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xC8E770", Offset = "0xC8E770", VA = "0xC8E770")]
	public HUD()
	{
	}
}
[Token(Token = "0x2000092")]
public class ItemPreviewUI : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject currentModel;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform modelParent;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject itemPrefab;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform itemParent;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI itemNameText;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI itemDescText;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image PropImage;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] PropSelect;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LanguageTextMeshPro p_languageName;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LanguageTextMeshPro p_languageContent;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xC8E778", Offset = "0xC8E778", VA = "0xC8E778")]
	public void ShowItem(SuitItemConfig itemPreview, int id)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xC8EA88", Offset = "0xC8EA88", VA = "0xC8EA88")]
	public void InitList()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xC8EF88", Offset = "0xC8EF88", VA = "0xC8EF88")]
	public void ShowModel()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xC8F040", Offset = "0xC8F040", VA = "0xC8F040")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xC8F0D8", Offset = "0xC8F0D8", VA = "0xC8F0D8")]
	public ItemPreviewUI()
	{
	}
}
[Token(Token = "0x2000093")]
public class MainCenterUI : MonoBehaviour
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI totalKcalText;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI fightTimeText;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI killCountText;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI strongHitCountText;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI hitCountText;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI winCountText;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastClickedTime;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<RivalPlayer> m_Groove;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainCenterUI Instance;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerRankGUI rank;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelUI Level;

	[Token(Token = "0x17000040")]
	public List<RivalPlayer> Groove
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xC8F1D8", Offset = "0xC8F1D8", VA = "0xC8F1D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xC8F1E0", Offset = "0xC8F1E0", VA = "0xC8F1E0")]
	public void EnterGame(int Level)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xC8F610", Offset = "0xC8F610", VA = "0xC8F610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xC8F6A8", Offset = "0xC8F6A8", VA = "0xC8F6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xC8F990", Offset = "0xC8F990", VA = "0xC8F990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xC8F70C", Offset = "0xC8F70C", VA = "0xC8F70C")]
	public void OnTransLateUI()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xC8FC64", Offset = "0xC8FC64", VA = "0xC8FC64")]
	private void OnLanguageChange(LanguageType t)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xC8FC98", Offset = "0xC8FC98", VA = "0xC8FC98")]
	public void GameStart(BattleStartInfo StartInfo)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xC8FA28", Offset = "0xC8FA28", VA = "0xC8FA28")]
	private string ClockTIme(int Time)
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xC90284", Offset = "0xC90284", VA = "0xC90284")]
	public MainCenterUI()
	{
	}
}
[Token(Token = "0x2000095")]
public class MainRightUI : ButtonSelectGUI
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] RightUI;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xC90400", Offset = "0xC90400", VA = "0xC90400")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xC905FC", Offset = "0xC905FC", VA = "0xC905FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xC90408", Offset = "0xC90408", VA = "0xC90408")]
	public void RightSelect(int index)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xC90600", Offset = "0xC90600", VA = "0xC90600", Slot = "4")]
	public override void OnSelect(int index)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xC90608", Offset = "0xC90608", VA = "0xC90608")]
	public MainRightUI()
	{
	}
}
[Token(Token = "0x2000096")]
public class MatchingUI : MonoBehaviour
{
	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private sealed class <CountDownTextUpdata>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float current;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MatchingUI <>4__this;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0xC90AE4", Offset = "0xC90AE4", VA = "0xC90AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D3")]
			[Address(RVA = "0xC90B2C", Offset = "0xC90B2C", VA = "0xC90B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xC909F4", Offset = "0xC909F4", VA = "0xC909F4")]
		[DebuggerHidden]
		public <CountDownTextUpdata>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xC90A24", Offset = "0xC90A24", VA = "0xC90A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xC90A28", Offset = "0xC90A28", VA = "0xC90A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xC90AEC", Offset = "0xC90AEC", VA = "0xC90AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerItemPrefab;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerListContent;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI matchCountDownText;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI joinPlayerNumText;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI prePairTipsText;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xC90610", Offset = "0xC90610", VA = "0xC90610")]
	public void AddPlayer(string name, int index, bool hightLight = false)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xC90774", Offset = "0xC90774", VA = "0xC90774")]
	public void SetJoinPlayerNumber(int cur, int max)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC9092C", Offset = "0xC9092C", VA = "0xC9092C")]
	public void SetCountDownText(string text)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC90950", Offset = "0xC90950", VA = "0xC90950")]
	public void StartCountDown(float current)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xC90970", Offset = "0xC90970", VA = "0xC90970")]
	[IteratorStateMachine(typeof(<CountDownTextUpdata>d__9))]
	private IEnumerator CountDownTextUpdata(float current)
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xC90A1C", Offset = "0xC90A1C", VA = "0xC90A1C")]
	public MatchingUI()
	{
	}
}
[Token(Token = "0x2000098")]
public class ModeButtonLock : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button[] Level;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Tutorial_Attack;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button Normal_Game;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CornerMarkFolder ironFistNewTag;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CornerMarkFolder matchNewTag;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] LevelLockImage;

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC90B34", Offset = "0xC90B34", VA = "0xC90B34")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC90CF4", Offset = "0xC90CF4", VA = "0xC90CF4")]
	public void DisableState()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC90E0C", Offset = "0xC90E0C", VA = "0xC90E0C")]
	public void NewTagHandler()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC9116C", Offset = "0xC9116C", VA = "0xC9116C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC9108C", Offset = "0xC9108C", VA = "0xC9108C")]
	private void SetDifficultyValue(int val)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC91124", Offset = "0xC91124", VA = "0xC91124")]
	private int GetDifficultyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC910D8", Offset = "0xC910D8", VA = "0xC910D8")]
	public void SetTutorialValue(int val)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xC91044", Offset = "0xC91044", VA = "0xC91044")]
	private int GetTutorialValue()
	{
		return default(int);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC90FE0", Offset = "0xC90FE0", VA = "0xC90FE0")]
	private void ClearPlayerPrefs()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC91194", Offset = "0xC91194", VA = "0xC91194")]
	public void EnterIronFist(int index)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xC90C7C", Offset = "0xC90C7C", VA = "0xC90C7C")]
	public bool IsLockIron(int mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xC91248", Offset = "0xC91248", VA = "0xC91248")]
	public ModeButtonLock()
	{
	}
}
[Token(Token = "0x2000099")]
public class PlayerSuiteUI : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform cursor;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] itemGo;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color selectColor;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color normalColor;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float zoomScale;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerSuiteAssmble suiteAssmble;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int verticalIndex;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private XRStickInput stickInput;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string[] mapOptions;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int mapIndex;

	[Token(Token = "0x17000043")]
	public int MapOptionIndex
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xC91388", Offset = "0xC91388", VA = "0xC91388")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1400000C")]
	public event System.Action OnEnterGame
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xC91250", Offset = "0xC91250", VA = "0xC91250")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xC912EC", Offset = "0xC912EC", VA = "0xC912EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC91390", Offset = "0xC91390", VA = "0xC91390")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC914F0", Offset = "0xC914F0", VA = "0xC914F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC91588", Offset = "0xC91588", VA = "0xC91588")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xC915C0", Offset = "0xC915C0", VA = "0xC915C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xC91724", Offset = "0xC91724", VA = "0xC91724")]
	public void Enter()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xC91684", Offset = "0xC91684", VA = "0xC91684")]
	public void MoveVertical(int i)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xC915A4", Offset = "0xC915A4", VA = "0xC915A4")]
	public void SetItemIndex(int index)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC916C4", Offset = "0xC916C4", VA = "0xC916C4")]
	public void MoveHorizontal(int i)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xC917EC", Offset = "0xC917EC", VA = "0xC917EC")]
	private void SetSelectColor()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC914EC", Offset = "0xC914EC", VA = "0xC914EC")]
	private void OnInit()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC91AD0", Offset = "0xC91AD0", VA = "0xC91AD0")]
	private void OnSuiteChange(int partIndex, string partName)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC9174C", Offset = "0xC9174C", VA = "0xC9174C")]
	private void SetCursorPos()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xC918A0", Offset = "0xC918A0", VA = "0xC918A0")]
	private void SetItemText(int index, string text)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xC91AD4", Offset = "0xC91AD4", VA = "0xC91AD4")]
	private void SetItemTitle(int index, string text)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xC91964", Offset = "0xC91964", VA = "0xC91964")]
	public void SetItemColor(int index, Color color)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xC91B98", Offset = "0xC91B98", VA = "0xC91B98")]
	public PlayerSuiteUI()
	{
	}
}
[Token(Token = "0x200009A")]
public class SuiteSelectUI : ButtonSelectGUI
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform previewIconParent;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject previewIconPrefab;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SuitOtherPrefab;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_PreviewText;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerSuiteAssmble playerSuiteAssmble;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SuiteSelectUI Instance;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] SuitSelect;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_LockID;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform recycleArea;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<int, List<GameObject>> cachedIconButtons;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<int, GameObject[]> cachedSuitSelect;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string[] m_SuitID;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] m_unlockSuitID;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource UISound;

	[Token(Token = "0x400032B")]
	private const int SuitListCount = 12;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int[] SuitIndex;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int lastIndex;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SuitItemUI C_Random;

	[Token(Token = "0x17000044")]
	public List<string> LockID
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xC91D28", Offset = "0xC91D28", VA = "0xC91D28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public string[] SuitID
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xC91D30", Offset = "0xC91D30", VA = "0xC91D30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public string[] UnlockSuitID
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xC91D38", Offset = "0xC91D38", VA = "0xC91D38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xC91D40", Offset = "0xC91D40", VA = "0xC91D40")]
		set
		{
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xC91D48", Offset = "0xC91D48", VA = "0xC91D48")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xC91ED4", Offset = "0xC91ED4", VA = "0xC91ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xC92168", Offset = "0xC92168", VA = "0xC92168")]
	public void ReturnSuit()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xC92040", Offset = "0xC92040", VA = "0xC92040")]
	public void SetCategory(int index)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xC92288", Offset = "0xC92288", VA = "0xC92288")]
	public void SetCategory(int category, List<SuitItemConfig> Sc)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xC929D8", Offset = "0xC929D8", VA = "0xC929D8")]
	private void AddComingSoon(int Count, List<GameObject> cachedIconButtons)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC92AF8", Offset = "0xC92AF8", VA = "0xC92AF8")]
	public void RandomSuit(int id, int category)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xC92E74", Offset = "0xC92E74", VA = "0xC92E74")]
	public void ClickItem(List<SuitItemConfig> Sc, int category, int index)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xC92DC8", Offset = "0xC92DC8", VA = "0xC92DC8")]
	public bool IsLockCloth()
	{
		return default(bool);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC92B94", Offset = "0xC92B94", VA = "0xC92B94")]
	public void SetSuitID(string[] PostString, SuitItemConfig item)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC921B8", Offset = "0xC921B8", VA = "0xC921B8")]
	public void SetSelect(int ID)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC93018", Offset = "0xC93018", VA = "0xC93018", Slot = "4")]
	public override void OnSelect(int index)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xC93020", Offset = "0xC93020", VA = "0xC93020")]
	public SuiteSelectUI()
	{
	}
}
[Token(Token = "0x200009C")]
public class UIImageEx : Image
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int i;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Vector2 SkewVector;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xC93280", Offset = "0xC93280", VA = "0xC93280", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xC93738", Offset = "0xC93738", VA = "0xC93738")]
	public UIImageEx()
	{
	}
}
[Token(Token = "0x200009D")]
public class WinnerUI : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI winnerText;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI timeText;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI caloriesText;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI killText;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI strongHitText;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI hitText;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool quited;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC93790", Offset = "0xC93790", VA = "0xC93790")]
	public void ClickQuit()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xC93828", Offset = "0xC93828", VA = "0xC93828")]
	public void SetData(BBReportData data)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xC93A0C", Offset = "0xC93A0C", VA = "0xC93A0C")]
	public WinnerUI()
	{
	}
}
[Token(Token = "0x200009E")]
public class Volcano : MatchMapObject
{
	[Token(Token = "0x200009F")]
	private struct ShootType
	{
		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int type;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool aimPlayer;
	}

	[Token(Token = "0x20000A0")]
	[CompilerGenerated]
	private sealed class <ShootBoom>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Volcano <>4__this;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ShootType> <shootTypes>5__2;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031E")]
			[Address(RVA = "0xC945E4", Offset = "0xC945E4", VA = "0xC945E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000320")]
			[Address(RVA = "0xC9462C", Offset = "0xC9462C", VA = "0xC9462C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xC93C10", Offset = "0xC93C10", VA = "0xC93C10")]
		[DebuggerHidden]
		public <ShootBoom>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xC94284", Offset = "0xC94284", VA = "0xC94284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xC94288", Offset = "0xC94288", VA = "0xC94288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xC945EC", Offset = "0xC945EC", VA = "0xC945EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BBGame game;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform shootTransform;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject boomPrefab;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] attackPrefabs;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fxPrefab;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioSource;

	[Token(Token = "0x17000047")]
	public VolcanoConfig Config
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xC93A14", Offset = "0xC93A14", VA = "0xC93A14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xC93A90", Offset = "0xC93A90", VA = "0xC93A90", Slot = "4")]
	public override void Active()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xC93B4C", Offset = "0xC93B4C", VA = "0xC93B4C", Slot = "5")]
	public override void MatchStart()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC93B8C", Offset = "0xC93B8C", VA = "0xC93B8C", Slot = "6")]
	public override void MatchEnd()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC93B6C", Offset = "0xC93B6C", VA = "0xC93B6C")]
	public void StartShoot()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xC93C08", Offset = "0xC93C08", VA = "0xC93C08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC93B94", Offset = "0xC93B94", VA = "0xC93B94")]
	[IteratorStateMachine(typeof(<ShootBoom>d__14))]
	private IEnumerator ShootBoom()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC93C38", Offset = "0xC93C38", VA = "0xC93C38")]
	private void Shoot(int type, bool aimPlayer)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC93F78", Offset = "0xC93F78", VA = "0xC93F78")]
	private void LaunchAttack(Vector3 velo)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC93D64", Offset = "0xC93D64", VA = "0xC93D64")]
	private Vector3 GetVelocity(Vector3 target, float angle = 1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC93C84", Offset = "0xC93C84", VA = "0xC93C84")]
	private Vector3 GetRandomPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC93D00", Offset = "0xC93D00", VA = "0xC93D00")]
	private Vector3 GetLivingPlayerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC93DEC", Offset = "0xC93DEC", VA = "0xC93DEC")]
	private void LaunchBoom(Vector3 velo)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC9416C", Offset = "0xC9416C", VA = "0xC9416C")]
	private void BoomFx()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC9427C", Offset = "0xC9427C", VA = "0xC9427C")]
	public Volcano()
	{
	}
}
[Token(Token = "0x20000A1")]
public class VRRigDriver : MonoBehaviour
{
	[Token(Token = "0x20000A2")]
	public enum PoseDataFlags
	{
		[Token(Token = "0x4000353")]
		NoData,
		[Token(Token = "0x4000354")]
		Position,
		[Token(Token = "0x4000355")]
		Rotation
	}

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTransform;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftController;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightController;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 originPosition;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private MoveDelta positionDelta;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Pose lastPose;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRNodeState> nodeStates;

	[Token(Token = "0x1700004A")]
	public bool EnableXZInput
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xC94634", Offset = "0xC94634", VA = "0xC94634")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xC9463C", Offset = "0xC9463C", VA = "0xC9463C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public bool EnableHandDriver
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xC94648", Offset = "0xC94648", VA = "0xC94648")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xC94650", Offset = "0xC94650", VA = "0xC94650")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC9465C", Offset = "0xC9465C", VA = "0xC9465C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC9468C", Offset = "0xC9468C", VA = "0xC9468C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC9470C", Offset = "0xC9470C", VA = "0xC9470C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC9478C", Offset = "0xC9478C", VA = "0xC9478C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC947CC", Offset = "0xC947CC", VA = "0xC947CC")]
	[BeforeRenderOrder(-29999)]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC947D0", Offset = "0xC947D0", VA = "0xC947D0")]
	private void PerformUpdate()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC949F8", Offset = "0xC949F8", VA = "0xC949F8")]
	public static bool GetNodePoseData(XRNode node, out Pose resultPose)
	{
		return default(bool);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC94C0C", Offset = "0xC94C0C", VA = "0xC94C0C")]
	public VRRigDriver()
	{
	}
}
[Token(Token = "0x20000A3")]
public class FlailWeapon : WeaponBase
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hit hitGo;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject chainGo;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ballGo;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform flailHandle;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform alginTransform;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC94CB4", Offset = "0xC94CB4", VA = "0xC94CB4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC94DF8", Offset = "0xC94DF8", VA = "0xC94DF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC94E04", Offset = "0xC94E04", VA = "0xC94E04")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC94ED0", Offset = "0xC94ED0", VA = "0xC94ED0", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC94F88", Offset = "0xC94F88", VA = "0xC94F88", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC95094", Offset = "0xC95094", VA = "0xC95094", Slot = "8")]
	public override void DeactiveWeapon()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC95114", Offset = "0xC95114", VA = "0xC95114")]
	public FlailWeapon()
	{
	}
}
[Token(Token = "0x20000A4")]
public class FrozenBallWeapon : WeaponBase
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hit hitGo;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject frozenBallPrefab;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject currBall;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ThrowController throwController;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC95124", Offset = "0xC95124", VA = "0xC95124", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC95210", Offset = "0xC95210", VA = "0xC95210")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC9522C", Offset = "0xC9522C", VA = "0xC9522C", Slot = "9")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC9533C", Offset = "0xC9533C", VA = "0xC9533C")]
	private void Throw(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC95660", Offset = "0xC95660", VA = "0xC95660", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC9556C", Offset = "0xC9556C", VA = "0xC9556C")]
	private void CreateNewBall()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC956F8", Offset = "0xC956F8", VA = "0xC956F8", Slot = "5")]
	public override void AddtiveWeapon()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC95740", Offset = "0xC95740", VA = "0xC95740", Slot = "8")]
	public override void DeactiveWeapon()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC957D0", Offset = "0xC957D0", VA = "0xC957D0")]
	public FrozenBallWeapon()
	{
	}
}
[Token(Token = "0x20000A5")]
public class GloveWeapon : WeaponBase
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hit hitGo;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isLeftHand;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC957D8", Offset = "0xC957D8", VA = "0xC957D8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC95934", Offset = "0xC95934", VA = "0xC95934")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC9595C", Offset = "0xC9595C", VA = "0xC9595C", Slot = "10")]
	protected virtual HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC95B20", Offset = "0xC95B20", VA = "0xC95B20")]
	public GloveWeapon()
	{
	}
}
[Token(Token = "0x20000A6")]
public class InkBallWeapon : WeaponBase
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hit hitGo;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject frozenBallPrefab;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject currBall;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ThrowController throwController;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC95B28", Offset = "0xC95B28", VA = "0xC95B28", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC95C14", Offset = "0xC95C14", VA = "0xC95C14")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC95C30", Offset = "0xC95C30", VA = "0xC95C30", Slot = "9")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC95D3C", Offset = "0xC95D3C", VA = "0xC95D3C")]
	private void Throw(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC96080", Offset = "0xC96080", VA = "0xC96080", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC95F5C", Offset = "0xC95F5C", VA = "0xC95F5C")]
	private void CreateNewBall()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC96118", Offset = "0xC96118", VA = "0xC96118", Slot = "5")]
	public override void AddtiveWeapon()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC9613C", Offset = "0xC9613C", VA = "0xC9613C", Slot = "8")]
	public override void DeactiveWeapon()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC961CC", Offset = "0xC961CC", VA = "0xC961CC")]
	public InkBallWeapon()
	{
	}
}
[Token(Token = "0x20000A7")]
public class MirrorWeapon : GloveWeapon
{
	[Token(Token = "0x20000A8")]
	[CompilerGenerated]
	private sealed class <PhotoPrintAnimation>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MirrorWeapon <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000358")]
			[Address(RVA = "0xC96930", Offset = "0xC96930", VA = "0xC96930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0xC96978", Offset = "0xC96978", VA = "0xC96978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xC967F8", Offset = "0xC967F8", VA = "0xC967F8")]
		[DebuggerHidden]
		public <PhotoPrintAnimation>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xC96828", Offset = "0xC96828", VA = "0xC96828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xC9682C", Offset = "0xC9682C", VA = "0xC9682C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xC96938", Offset = "0xC96938", VA = "0xC96938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera mirCamera;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material mirrorMat;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture mirrorTex;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer photoMesh;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource shootAudio;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material currMat;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture renderTexture;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool busy;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC961D4", Offset = "0xC961D4", VA = "0xC961D4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC96208", Offset = "0xC96208", VA = "0xC96208", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC96310", Offset = "0xC96310", VA = "0xC96310")]
	private void InitTexture()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC96410", Offset = "0xC96410", VA = "0xC96410")]
	private void DestroyTexture()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC964A4", Offset = "0xC964A4", VA = "0xC964A4", Slot = "8")]
	public override void DeactiveWeapon()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC964BC", Offset = "0xC964BC", VA = "0xC964BC", Slot = "10")]
	protected override HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC96588", Offset = "0xC96588", VA = "0xC96588")]
	public static Texture2D CaptureCamera(Camera camera)
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC966CC", Offset = "0xC966CC", VA = "0xC966CC")]
	public static void SaveTexture(Texture2D tex)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC96784", Offset = "0xC96784", VA = "0xC96784")]
	[IteratorStateMachine(typeof(<PhotoPrintAnimation>d__16))]
	private IEnumerator PhotoPrintAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC96820", Offset = "0xC96820", VA = "0xC96820")]
	public MirrorWeapon()
	{
	}
}
[Token(Token = "0x20000A9")]
public class PlungerWeapon : GloveWeapon
{
	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC96980", Offset = "0xC96980", VA = "0xC96980", Slot = "10")]
	protected override HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC96A4C", Offset = "0xC96A4C", VA = "0xC96A4C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC96A80", Offset = "0xC96A80", VA = "0xC96A80", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC96A9C", Offset = "0xC96A9C", VA = "0xC96A9C")]
	public PlungerWeapon()
	{
	}
}
[Token(Token = "0x20000AA")]
public class RocketBullet : MonoBehaviour
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionTrackTool trackTool;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Boom boom;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rigid;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider collder;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem particle;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC96AA4", Offset = "0xC96AA4", VA = "0xC96AA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC96AE4", Offset = "0xC96AE4", VA = "0xC96AE4")]
	public void Shoot(RocketWeaponItemConfig config)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC96C44", Offset = "0xC96C44", VA = "0xC96C44")]
	public RocketBullet()
	{
	}
}
[Token(Token = "0x20000AB")]
public class RocketWeapon : GloveWeapon
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject bulletPrefab;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bulletGo;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform muzz;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] audioEffect;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource audioSource;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Timer reloadTime;

	[Token(Token = "0x1700004E")]
	private RocketWeaponItemConfig Config
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xC96C4C", Offset = "0xC96C4C", VA = "0xC96C4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC96CC8", Offset = "0xC96CC8", VA = "0xC96CC8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC96CFC", Offset = "0xC96CFC", VA = "0xC96CFC", Slot = "10")]
	protected override HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC96D8C", Offset = "0xC96D8C", VA = "0xC96D8C", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC96F50", Offset = "0xC96F50", VA = "0xC96F50", Slot = "9")]
	public override void Fire()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC96F54", Offset = "0xC96F54", VA = "0xC96F54")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC96E40", Offset = "0xC96E40", VA = "0xC96E40")]
	public void ReLoad()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC97078", Offset = "0xC97078", VA = "0xC97078", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC9709C", Offset = "0xC9709C", VA = "0xC9709C", Slot = "5")]
	public override void AddtiveWeapon()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC970C0", Offset = "0xC970C0", VA = "0xC970C0")]
	public RocketWeapon()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ShieldWeapon : GloveWeapon
{
	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC97138", Offset = "0xC97138", VA = "0xC97138", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC9716C", Offset = "0xC9716C", VA = "0xC9716C", Slot = "10")]
	protected override HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC971FC", Offset = "0xC971FC", VA = "0xC971FC", Slot = "6")]
	public override void ActiveWeapon()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xC97218", Offset = "0xC97218", VA = "0xC97218")]
	public ShieldWeapon()
	{
	}
}
[Token(Token = "0x20000AD")]
public class WeaponBase : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponManager weaponManager;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponItemConfig config;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useAvailableTime;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool useAvailableCount;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float elapseTime;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int ammoNum;

	[Token(Token = "0x1700004F")]
	public float CountDonwTime
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xC97220", Offset = "0xC97220", VA = "0xC97220")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC94D84", Offset = "0xC94D84", VA = "0xC94D84", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xC95028", Offset = "0xC95028", VA = "0xC95028")]
	public void PlayWeaponIntroduceAudio(BBAudio au)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC9571C", Offset = "0xC9571C", VA = "0xC9571C", Slot = "5")]
	public virtual void AddtiveWeapon()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xC972C0", Offset = "0xC972C0", VA = "0xC972C0")]
	public void AddUseTime(float time)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xC94FF0", Offset = "0xC94FF0", VA = "0xC94FF0", Slot = "6")]
	public virtual void ActiveWeapon()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC94F34", Offset = "0xC94F34", VA = "0xC94F34", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC950F0", Offset = "0xC950F0", VA = "0xC950F0", Slot = "8")]
	public virtual void DeactiveWeapon()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC95338", Offset = "0xC95338", VA = "0xC95338", Slot = "9")]
	public virtual void Fire()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC97324", Offset = "0xC97324", VA = "0xC97324")]
	public void ToggleDefaultWeapon()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC972D0", Offset = "0xC972D0", VA = "0xC972D0")]
	private bool CheckUsable()
	{
		return default(bool);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC9555C", Offset = "0xC9555C", VA = "0xC9555C")]
	protected void Consume(int count = 1)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC9511C", Offset = "0xC9511C", VA = "0xC9511C")]
	public WeaponBase()
	{
	}
}
[Token(Token = "0x20000AE")]
public class WeaponHUD : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemHUD itemHUD;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponManager weaponManager;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] weaponIcon;

	[Token(Token = "0x17000050")]
	public bool EnableUI
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xC97348", Offset = "0xC97348", VA = "0xC97348")]
		set
		{
		}
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC97378", Offset = "0xC97378", VA = "0xC97378")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC974B0", Offset = "0xC974B0", VA = "0xC974B0")]
	private void OnWeaponChange(int index)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC975A4", Offset = "0xC975A4", VA = "0xC975A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC9763C", Offset = "0xC9763C", VA = "0xC9763C")]
	private static string FloatToIntStr(float val)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC976FC", Offset = "0xC976FC", VA = "0xC976FC")]
	public WeaponHUD()
	{
	}
}
[Token(Token = "0x20000AF")]
public class WeaponManager : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boxer owner;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponBase[] weapons;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Assets.Scripts.Interact.Hand useHand;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int currentWeaponIndex;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsTutorial;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRGamePadMap controller;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ThrowController throwController;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<int, AnimaActionType> attackTypeDict;

	[Token(Token = "0x17000051")]
	public bool IsHumenPlayer
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xC97244", Offset = "0xC97244", VA = "0xC97244")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000052")]
	public WeaponBase currentWeapon
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0xC97570", Offset = "0xC97570", VA = "0xC97570")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public AnimaActionType CurrentWeaponType
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xC977B4", Offset = "0xC977B4", VA = "0xC977B4")]
		get
		{
			return default(AnimaActionType);
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<int> OnWeaponIndexChange
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0xC97400", Offset = "0xC97400", VA = "0xC97400")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000384")]
		[Address(RVA = "0xC97704", Offset = "0xC97704", VA = "0xC97704")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xC97808", Offset = "0xC97808", VA = "0xC97808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xC978B4", Offset = "0xC978B4", VA = "0xC978B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xC97920", Offset = "0xC97920", VA = "0xC97920")]
	public void SetRandomWeapon()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xC97A60", Offset = "0xC97A60", VA = "0xC97A60")]
	public void SetWeaponIndex(int index, float duration, int count)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xC97954", Offset = "0xC97954", VA = "0xC97954")]
	public void SetWeaponIndex(int index)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xC97A9C", Offset = "0xC97A9C", VA = "0xC97A9C")]
	public void NextWeapon()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC97AC8", Offset = "0xC97AC8", VA = "0xC97AC8")]
	public void PreviousWeapon()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC97900", Offset = "0xC97900", VA = "0xC97900")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC97340", Offset = "0xC97340", VA = "0xC97340")]
	public void ToggleDefaultWeapon()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC97AF8", Offset = "0xC97AF8", VA = "0xC97AF8")]
	public WeaponManager()
	{
	}
}
[Token(Token = "0x20000B0")]
public class WoodenDummy : MatchMapObject
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform flailAxis;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Hit hit;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hit hit2;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform offsetTranform;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool matching;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeOffset;

	[Token(Token = "0x17000054")]
	public WoodenDummyConfig Config
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xC97C0C", Offset = "0xC97C0C", VA = "0xC97C0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC97C88", Offset = "0xC97C88", VA = "0xC97C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC97E04", Offset = "0xC97E04", VA = "0xC97E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC97E64", Offset = "0xC97E64", VA = "0xC97E64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xC97E6C", Offset = "0xC97E6C", VA = "0xC97E6C", Slot = "5")]
	public override void MatchStart()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xC97E78", Offset = "0xC97E78", VA = "0xC97E78", Slot = "6")]
	public override void MatchEnd()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC97E80", Offset = "0xC97E80", VA = "0xC97E80")]
	private HitInfo OnHit(HitInfo info)
	{
		return default(HitInfo);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC97F14", Offset = "0xC97F14", VA = "0xC97F14")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC98030", Offset = "0xC98030", VA = "0xC98030")]
	public WoodenDummy()
	{
	}
}
[Token(Token = "0x20000B1")]
public class WoodenMachine : MatchMapObject
{
	[Serializable]
	[Token(Token = "0x20000B2")]
	public struct WoodenBlock
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject obj;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int size;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PlaceBlockInfo info;
	}

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<WoodenBlock> originBlock;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<WoodenDummy> children;

	[Token(Token = "0x17000055")]
	public WoodenMachineConfig Config
	{
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xC98038", Offset = "0xC98038", VA = "0xC98038")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC980B4", Offset = "0xC980B4", VA = "0xC980B4", Slot = "4")]
	public override void Active()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC981E4", Offset = "0xC981E4", VA = "0xC981E4", Slot = "5")]
	public override void MatchStart()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC98334", Offset = "0xC98334", VA = "0xC98334", Slot = "6")]
	public override void MatchEnd()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC98110", Offset = "0xC98110", VA = "0xC98110")]
	public void PlaceBlockNum(int normal, int big)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC98484", Offset = "0xC98484", VA = "0xC98484")]
	public bool PlaceBlock(WoodenBlock block)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC98710", Offset = "0xC98710", VA = "0xC98710")]
	public WoodenMachine()
	{
	}
}
[Token(Token = "0x20000B3")]
public class XRControllerXRay : MonoBehaviour
{
	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <InitControllerModule>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRControllerXRay <>4__this;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0xC98FA8", Offset = "0xC98FA8", VA = "0xC98FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0xC98FF0", Offset = "0xC98FF0", VA = "0xC98FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xC9882C", Offset = "0xC9882C", VA = "0xC9882C")]
		[DebuggerHidden]
		public <InitControllerModule>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xC98E20", Offset = "0xC98E20", VA = "0xC98E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xC98E24", Offset = "0xC98E24", VA = "0xC98E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xC98FB0", Offset = "0xC98FB0", VA = "0xC98FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRControllerKeyHighLight leftKeyLight;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRControllerKeyHighLight rightKeyLight;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftController;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightController;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftMeshParent;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightMeshParent;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<MeshRenderer> gloveMeshRenderers;

	[Token(Token = "0x17000056")]
	public bool EnableControllerXRay
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xC98A90", Offset = "0xC98A90", VA = "0xC98A90")]
		set
		{
		}
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC98798", Offset = "0xC98798", VA = "0xC98798")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC987B8", Offset = "0xC987B8", VA = "0xC987B8")]
	[IteratorStateMachine(typeof(<InitControllerModule>d__8))]
	private IEnumerator InitControllerModule()
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xC98854", Offset = "0xC98854", VA = "0xC98854")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC98AE0", Offset = "0xC98AE0", VA = "0xC98AE0")]
	private void SetMeshTransparent(bool transparent)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC98D98", Offset = "0xC98D98", VA = "0xC98D98")]
	public XRControllerXRay()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ButtonAnimation : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float initial_size_x;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float initial_size_y;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float factor;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool GO;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC98FF8", Offset = "0xC98FF8", VA = "0xC98FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC99040", Offset = "0xC99040", VA = "0xC99040")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC99124", Offset = "0xC99124", VA = "0xC99124")]
	private void Go()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC99164", Offset = "0xC99164", VA = "0xC99164")]
	public ButtonAnimation()
	{
	}
}
[Token(Token = "0x20000B6")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text_fx_name;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] fx_prefabs;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index_fx;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Ray ray;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RaycastHit2D ray_cast_hit;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD7D9AC", Offset = "0xD7D9AC", VA = "0xD7D9AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xD7DA8C", Offset = "0xD7DA8C", VA = "0xD7DA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xD7E224", Offset = "0xD7E224", VA = "0xD7E224")]
	public GameManager()
	{
	}
}
[Token(Token = "0x20000B7")]
public class SelfDestruct : MonoBehaviour
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float selfdestruct_in;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xD7E22C", Offset = "0xD7E22C", VA = "0xD7E22C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xD7E2C4", Offset = "0xD7E2C4", VA = "0xD7E2C4")]
	public SelfDestruct()
	{
	}
}
[Token(Token = "0x20000B8")]
public class CFX2_Demo : MonoBehaviour
{
	[Token(Token = "0x20000B9")]
	[CompilerGenerated]
	private sealed class <RandomSpawnsCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX2_Demo <>4__this;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0xD7F38C", Offset = "0xD7F38C", VA = "0xD7F38C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C4")]
			[Address(RVA = "0xD7F3D4", Offset = "0xD7F3D4", VA = "0xD7F3D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xD7F0C4", Offset = "0xD7F0C4", VA = "0xD7F0C4")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xD7F1A8", Offset = "0xD7F1A8", VA = "0xD7F1A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xD7F1AC", Offset = "0xD7F1AC", VA = "0xD7F1AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xD7F394", Offset = "0xD7F394", VA = "0xD7F394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool orderedSpawns;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float step;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float order;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material groundMat;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material waterMat;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int exampleIndex;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string randomSpawnsDelay;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool randomSpawns;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool slowMo;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xD7E2D4", Offset = "0xD7E2D4", VA = "0xD7E2D4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xD7E420", Offset = "0xD7E420", VA = "0xD7E420")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xD7E580", Offset = "0xD7E580", VA = "0xD7E580")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xD7F050", Offset = "0xD7F050", VA = "0xD7F050")]
	[IteratorStateMachine(typeof(<RandomSpawnsCoroutine>d__14))]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xD7F0EC", Offset = "0xD7F0EC", VA = "0xD7F0EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xD7EDD0", Offset = "0xD7EDD0", VA = "0xD7EDD0")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD7EF14", Offset = "0xD7EF14", VA = "0xD7EF14")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xD7F134", Offset = "0xD7F134", VA = "0xD7F134")]
	public CFX2_Demo()
	{
	}
}
[Token(Token = "0x20000BA")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX3_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xD7F3DC", Offset = "0xD7F3DC", VA = "0xD7F3DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xD7F3E8", Offset = "0xD7F3E8", VA = "0xD7F3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xD7F500", Offset = "0xD7F500", VA = "0xD7F500")]
	public CFX3_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x20000BB")]
public class CFX3_Demo : MonoBehaviour
{
	[Token(Token = "0x20000BC")]
	[CompilerGenerated]
	private sealed class <CheckForDeletedParticles>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX3_Demo <>4__this;

		[Token(Token = "0x1700005B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0xD809D4", Offset = "0xD809D4", VA = "0xD809D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0xD80A1C", Offset = "0xD80A1C", VA = "0xD80A1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xD806C4", Offset = "0xD806C4", VA = "0xD806C4")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xD80858", Offset = "0xD80858", VA = "0xD80858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xD8085C", Offset = "0xD8085C", VA = "0xD8085C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xD809DC", Offset = "0xD809DC", VA = "0xD809DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BD")]
	[CompilerGenerated]
	private sealed class <RandomSpawnsCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX3_Demo <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0xD80C08", Offset = "0xD80C08", VA = "0xD80C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0xD80C50", Offset = "0xD80C50", VA = "0xD80C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xD80760", Offset = "0xD80760", VA = "0xD80760")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD80A24", Offset = "0xD80A24", VA = "0xD80A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xD80A28", Offset = "0xD80A28", VA = "0xD80A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xD80C10", Offset = "0xD80C10", VA = "0xD80C10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool orderedSpawns;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float step;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float order;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer groundRenderer;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider groundCollider;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int exampleIndex;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string randomSpawnsDelay;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool randomSpawns;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool slowMo;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xD7F510", Offset = "0xD7F510", VA = "0xD7F510")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xD7F6A0", Offset = "0xD7F6A0", VA = "0xD7F6A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xD7FCBC", Offset = "0xD7FCBC", VA = "0xD7FCBC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xD7FA14", Offset = "0xD7FA14", VA = "0xD7FA14")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xD80650", Offset = "0xD80650", VA = "0xD80650")]
	[IteratorStateMachine(typeof(<CheckForDeletedParticles>d__16))]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xD806EC", Offset = "0xD806EC", VA = "0xD806EC")]
	[IteratorStateMachine(typeof(<RandomSpawnsCoroutine>d__17))]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xD7F87C", Offset = "0xD7F87C", VA = "0xD7F87C")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xD7F8B0", Offset = "0xD7F8B0", VA = "0xD7F8B0")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xD7F8E4", Offset = "0xD7F8E4", VA = "0xD7F8E4")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xD80788", Offset = "0xD80788", VA = "0xD80788")]
	public CFX3_Demo()
	{
	}
}
[Token(Token = "0x20000BE")]
public class CFX3_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xD80C58", Offset = "0xD80C58", VA = "0xD80C58")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xD80CF8", Offset = "0xD80CF8", VA = "0xD80CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xD80D68", Offset = "0xD80D68", VA = "0xD80D68")]
	public CFX3_Demo_Translate()
	{
	}
}
[Token(Token = "0x20000BF")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xD80DE4", Offset = "0xD80DE4", VA = "0xD80DE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xD80E6C", Offset = "0xD80E6C", VA = "0xD80E6C")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x20000C0")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xD80E84", Offset = "0xD80E84", VA = "0xD80E84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xD80FC0", Offset = "0xD80FC0", VA = "0xD80FC0")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x20000C1")]
public class CFX2_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xD8101C", Offset = "0xD8101C", VA = "0xD8101C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD81078", Offset = "0xD81078", VA = "0xD81078")]
	public CFX2_AutoRotate()
	{
	}
}
[Token(Token = "0x20000C2")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xD812C4", Offset = "0xD812C4", VA = "0xD812C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0xD8130C", Offset = "0xD8130C", VA = "0xD8130C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xD81150", Offset = "0xD81150", VA = "0xD81150")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xD81180", Offset = "0xD81180", VA = "0xD81180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xD81184", Offset = "0xD81184", VA = "0xD81184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xD812CC", Offset = "0xD812CC", VA = "0xD812CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xD81090", Offset = "0xD81090", VA = "0xD81090")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xD810DC", Offset = "0xD810DC", VA = "0xD810DC")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__2))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xD81178", Offset = "0xD81178", VA = "0xD81178")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x20000C4")]
public class CFX_AutodestructWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xD81314", Offset = "0xD81314", VA = "0xD81314")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xD813AC", Offset = "0xD813AC", VA = "0xD813AC")]
	public CFX_AutodestructWhenNoChildren()
	{
	}
}
[Token(Token = "0x20000C5")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xD813B4", Offset = "0xD813B4", VA = "0xD813B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xD81414", Offset = "0xD81414", VA = "0xD81414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xD81490", Offset = "0xD81490", VA = "0xD81490")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xD815F4", Offset = "0xD815F4", VA = "0xD815F4")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CFX_ShurikenThreadFix : MonoBehaviour
{
	[Token(Token = "0x20000C7")]
	[CompilerGenerated]
	private sealed class <WaitFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_ShurikenThreadFix <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0xD81840", Offset = "0xD81840", VA = "0xD81840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0xD81888", Offset = "0xD81888", VA = "0xD81888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xD81748", Offset = "0xD81748", VA = "0xD81748")]
		[DebuggerHidden]
		public <WaitFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xD81778", Offset = "0xD81778", VA = "0xD81778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xD8177C", Offset = "0xD8177C", VA = "0xD8177C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xD81848", Offset = "0xD81848", VA = "0xD81848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] systems;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xD81604", Offset = "0xD81604", VA = "0xD81604")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xD816D4", Offset = "0xD816D4", VA = "0xD816D4")]
	[IteratorStateMachine(typeof(<WaitFrame>d__2))]
	private IEnumerator WaitFrame()
	{
		return null;
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xD81770", Offset = "0xD81770", VA = "0xD81770")]
	public CFX_ShurikenThreadFix()
	{
	}
}
[Token(Token = "0x20000C8")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool allObjectsLoaded;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000063")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xD824BC", Offset = "0xD824BC", VA = "0xD824BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xD81890", Offset = "0xD81890", VA = "0xD81890")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xD81CFC", Offset = "0xD81CFC", VA = "0xD81CFC")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xD8206C", Offset = "0xD8206C", VA = "0xD8206C")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xD81D64", Offset = "0xD81D64", VA = "0xD81D64")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xD820C4", Offset = "0xD820C4", VA = "0xD820C4")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xD82510", Offset = "0xD82510", VA = "0xD82510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xD825F8", Offset = "0xD825F8", VA = "0xD825F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xD82678", Offset = "0xD82678", VA = "0xD82678")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MoveCharacter : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTransform;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveSpeed;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotateSpeed;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xD827B8", Offset = "0xD827B8", VA = "0xD827B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xD827BC", Offset = "0xD827BC", VA = "0xD827BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xD82964", Offset = "0xD82964", VA = "0xD82964")]
	public MoveCharacter()
	{
	}
}
[Token(Token = "0x20000CA")]
[AddComponentMenu("NGUI/Examples/Equip Items")]
public class EquipItems : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] itemIDs;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xD8296C", Offset = "0xD8296C", VA = "0xD8296C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xD82E04", Offset = "0xD82E04", VA = "0xD82E04")]
	public EquipItems()
	{
	}
}
[Token(Token = "0x20000CB")]
[AddComponentMenu("NGUI/Examples/Equip Random Item")]
public class EquipRandomItem : MonoBehaviour
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InvEquipment equipment;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD82E0C", Offset = "0xD82E0C", VA = "0xD82E0C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xD830C0", Offset = "0xD830C0", VA = "0xD830C0")]
	public EquipRandomItem()
	{
	}
}
[Token(Token = "0x20000CC")]
[RequireComponent(typeof(UISprite))]
[AddComponentMenu("NGUI/Examples/UI Cursor")]
public class UICursor : MonoBehaviour
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UICursor instance;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera uiCamera;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mTrans;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UISprite mSprite;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private INGUIAtlas mAtlas;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string mSpriteName;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xD830C8", Offset = "0xD830C8", VA = "0xD830C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xD83120", Offset = "0xD83120", VA = "0xD83120")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xD83174", Offset = "0xD83174", VA = "0xD83174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xD83348", Offset = "0xD83348", VA = "0xD83348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xD836F8", Offset = "0xD836F8", VA = "0xD836F8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xD837D4", Offset = "0xD837D4", VA = "0xD837D4")]
	public static void Set(INGUIAtlas atlas, string sprite)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xD8392C", Offset = "0xD8392C", VA = "0xD8392C")]
	public UICursor()
	{
	}
}
[Token(Token = "0x20000CD")]
[AddComponentMenu("NGUI/Examples/UI Equipment Slot")]
public class UIEquipmentSlot : UIItemSlot
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InvEquipment equipment;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InvBaseItem.Slot slot;

	[Token(Token = "0x17000064")]
	protected override InvGameItem observedItem
	{
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xD83934", Offset = "0xD83934", VA = "0xD83934", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xD839FC", Offset = "0xD839FC", VA = "0xD839FC", Slot = "5")]
	protected override InvGameItem Replace(InvGameItem item)
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xD83DA0", Offset = "0xD83DA0", VA = "0xD83DA0")]
	public UIEquipmentSlot()
	{
	}
}
[Token(Token = "0x20000CE")]
public abstract class UIItemSlot : MonoBehaviour
{
	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISprite icon;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIWidget background;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel label;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip grabSound;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip placeSound;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip errorSound;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InvGameItem mItem;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mText;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InvGameItem mDraggedItem;

	[Token(Token = "0x17000065")]
	protected abstract InvGameItem observedItem
	{
		[Token(Token = "0x600041A")]
		get;
	}

	[Token(Token = "0x600041B")]
	protected abstract InvGameItem Replace(InvGameItem item);

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xD83DFC", Offset = "0xD83DFC", VA = "0xD83DFC")]
	private void OnTooltip(bool show)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xD84A74", Offset = "0xD84A74", VA = "0xD84A74")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xD84D08", Offset = "0xD84D08", VA = "0xD84D08")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xD84B5C", Offset = "0xD84B5C", VA = "0xD84B5C")]
	private void OnDrop(GameObject go)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xD84C44", Offset = "0xD84C44", VA = "0xD84C44")]
	private void UpdateCursor()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xD84E10", Offset = "0xD84E10", VA = "0xD84E10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xD83DA4", Offset = "0xD83DA4", VA = "0xD83DA4")]
	protected UIItemSlot()
	{
	}
}
[Token(Token = "0x20000CF")]
[AddComponentMenu("NGUI/Examples/UI Item Storage")]
public class UIItemStorage : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxItemCount;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxRows;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxColumns;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject template;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIWidget background;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spacing;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int padding;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InvGameItem> mItems;

	[Token(Token = "0x17000066")]
	public List<InvGameItem> items
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xD85088", Offset = "0xD85088", VA = "0xD85088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xD85150", Offset = "0xD85150", VA = "0xD85150")]
	public InvGameItem GetItem(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xD851DC", Offset = "0xD851DC", VA = "0xD851DC")]
	public InvGameItem Replace(int slot, InvGameItem item)
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xD85290", Offset = "0xD85290", VA = "0xD85290")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xD85534", Offset = "0xD85534", VA = "0xD85534")]
	public UIItemStorage()
	{
	}
}
[Token(Token = "0x20000D0")]
[AddComponentMenu("NGUI/Examples/UI Storage Slot")]
public class UIStorageSlot : UIItemSlot
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemStorage storage;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int slot;

	[Token(Token = "0x17000067")]
	protected override InvGameItem observedItem
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xD855DC", Offset = "0xD855DC", VA = "0xD855DC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xD85664", Offset = "0xD85664", VA = "0xD85664", Slot = "5")]
	protected override InvGameItem Replace(InvGameItem item)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xD85700", Offset = "0xD85700", VA = "0xD85700")]
	public UIStorageSlot()
	{
	}
}
[Token(Token = "0x20000D1")]
[AddComponentMenu("NGUI/Examples/Item Attachment Point")]
public class InvAttachmentPoint : MonoBehaviour
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InvBaseItem.Slot slot;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject mPrefab;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject mChild;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xD85704", Offset = "0xD85704", VA = "0xD85704")]
	public GameObject Attach(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xD859BC", Offset = "0xD859BC", VA = "0xD859BC")]
	public InvAttachmentPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D2")]
public class InvBaseItem
{
	[Token(Token = "0x20000D3")]
	public enum Slot
	{
		[Token(Token = "0x4000422")]
		None,
		[Token(Token = "0x4000423")]
		Weapon,
		[Token(Token = "0x4000424")]
		Shield,
		[Token(Token = "0x4000425")]
		Body,
		[Token(Token = "0x4000426")]
		Shoulders,
		[Token(Token = "0x4000427")]
		Bracers,
		[Token(Token = "0x4000428")]
		Boots,
		[Token(Token = "0x4000429")]
		Trinket,
		[Token(Token = "0x400042A")]
		_LastDoNotUse
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id16;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slot slot;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int minItemLevel;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxItemLevel;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<InvStat> stats;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject attachment;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color color;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Object iconAtlas;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string iconName;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xD859C4", Offset = "0xD859C4", VA = "0xD859C4")]
	public InvBaseItem()
	{
	}
}
[Token(Token = "0x20000D4")]
[AddComponentMenu("NGUI/Examples/Item Database")]
[ExecuteInEditMode]
public class InvDatabase : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InvDatabase[] mList;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool mIsDirty;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int databaseID;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<InvBaseItem> items;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Object iconAtlas;

	[Token(Token = "0x17000068")]
	public static InvDatabase[] list
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xD82FD4", Offset = "0xD82FD4", VA = "0xD82FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xD85A84", Offset = "0xD85A84", VA = "0xD85A84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xD85AE0", Offset = "0xD85AE0", VA = "0xD85AE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xD85B3C", Offset = "0xD85B3C", VA = "0xD85B3C")]
	private InvBaseItem GetItem(int id16)
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xD85BE4", Offset = "0xD85BE4", VA = "0xD85BE4")]
	private static InvDatabase GetDatabase(int dbID)
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xD82C2C", Offset = "0xD82C2C", VA = "0xD82C2C")]
	public static InvBaseItem FindByID(int id32)
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xD85CA8", Offset = "0xD85CA8", VA = "0xD85CA8")]
	public static InvBaseItem FindByName(string exact)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xD85DEC", Offset = "0xD85DEC", VA = "0xD85DEC")]
	public static int FindItemID(InvBaseItem item)
	{
		return default(int);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xD85EEC", Offset = "0xD85EEC", VA = "0xD85EEC")]
	public InvDatabase()
	{
	}
}
[Token(Token = "0x20000D5")]
[AddComponentMenu("NGUI/Examples/Equipment")]
public class InvEquipment : MonoBehaviour
{
	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InvGameItem[] mItems;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InvAttachmentPoint[] mAttachments;

	[Token(Token = "0x17000069")]
	public InvGameItem[] equippedItems
	{
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xD85FC0", Offset = "0xD85FC0", VA = "0xD85FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xD83A98", Offset = "0xD83A98", VA = "0xD83A98")]
	public InvGameItem Replace(InvBaseItem.Slot slot, InvGameItem item)
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xD82D28", Offset = "0xD82D28", VA = "0xD82D28")]
	public InvGameItem Equip(InvGameItem item)
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xD85FC8", Offset = "0xD85FC8", VA = "0xD85FC8")]
	public InvGameItem Unequip(InvGameItem item)
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xD86010", Offset = "0xD86010", VA = "0xD86010")]
	public InvGameItem Unequip(InvBaseItem.Slot slot)
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xD86018", Offset = "0xD86018", VA = "0xD86018")]
	public bool HasEquipped(InvGameItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xD8605C", Offset = "0xD8605C", VA = "0xD8605C")]
	public bool HasEquipped(InvBaseItem.Slot slot)
	{
		return default(bool);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD839BC", Offset = "0xD839BC", VA = "0xD839BC")]
	public InvGameItem GetItem(InvBaseItem.Slot slot)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xD860EC", Offset = "0xD860EC", VA = "0xD860EC")]
	public InvEquipment()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D6")]
public class InvGameItem
{
	[Token(Token = "0x20000D7")]
	public enum Quality
	{
		[Token(Token = "0x4000437")]
		Broken,
		[Token(Token = "0x4000438")]
		Cursed,
		[Token(Token = "0x4000439")]
		Damaged,
		[Token(Token = "0x400043A")]
		Worn,
		[Token(Token = "0x400043B")]
		Sturdy,
		[Token(Token = "0x400043C")]
		Polished,
		[Token(Token = "0x400043D")]
		Improved,
		[Token(Token = "0x400043E")]
		Crafted,
		[Token(Token = "0x400043F")]
		Superior,
		[Token(Token = "0x4000440")]
		Enchanted,
		[Token(Token = "0x4000441")]
		Epic,
		[Token(Token = "0x4000442")]
		Legendary,
		[Token(Token = "0x4000443")]
		_LastDoNotUse
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private int mBaseItemID;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Quality quality;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int itemLevel;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InvBaseItem mBaseItem;

	[Token(Token = "0x1700006A")]
	public int baseItemID
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xD860F4", Offset = "0xD860F4", VA = "0xD860F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006B")]
	public InvBaseItem baseItem
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xD84450", Offset = "0xD84450", VA = "0xD84450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public string name
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0xD8464C", Offset = "0xD8464C", VA = "0xD8464C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public float statMultiplier
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0xD860FC", Offset = "0xD860FC", VA = "0xD860FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006E")]
	public Color color
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0xD844CC", Offset = "0xD844CC", VA = "0xD844CC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xD8614C", Offset = "0xD8614C", VA = "0xD8614C")]
	public InvGameItem(int id)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xD82CE4", Offset = "0xD82CE4", VA = "0xD82CE4")]
	public InvGameItem(int id, InvBaseItem bi)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xD846FC", Offset = "0xD846FC", VA = "0xD846FC")]
	public List<InvStat> CalculateStats()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000D8")]
public class InvStat
{
	[Token(Token = "0x20000D9")]
	public enum Identifier
	{
		[Token(Token = "0x4000448")]
		Strength,
		[Token(Token = "0x4000449")]
		Constitution,
		[Token(Token = "0x400044A")]
		Agility,
		[Token(Token = "0x400044B")]
		Intelligence,
		[Token(Token = "0x400044C")]
		Damage,
		[Token(Token = "0x400044D")]
		Crit,
		[Token(Token = "0x400044E")]
		Armor,
		[Token(Token = "0x400044F")]
		Health,
		[Token(Token = "0x4000450")]
		Mana,
		[Token(Token = "0x4000451")]
		Other
	}

	[Token(Token = "0x20000DA")]
	public enum Modifier
	{
		[Token(Token = "0x4000453")]
		Added,
		[Token(Token = "0x4000454")]
		Percent
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Identifier id;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Modifier modifier;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xD86188", Offset = "0xD86188", VA = "0xD86188")]
	public static string GetName(Identifier i)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xD861EC", Offset = "0xD861EC", VA = "0xD861EC")]
	public static string GetDescription(Identifier i)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xD8631C", Offset = "0xD8631C", VA = "0xD8631C")]
	public static int CompareArmor(InvStat a, InvStat b)
	{
		return default(int);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xD863C0", Offset = "0xD863C0", VA = "0xD863C0")]
	public static int CompareWeapon(InvStat a, InvStat b)
	{
		return default(int);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xD86180", Offset = "0xD86180", VA = "0xD86180")]
	public InvStat()
	{
	}
}
[Token(Token = "0x20000DB")]
[RequireComponent(typeof(UIInput))]
[AddComponentMenu("NGUI/Examples/Chat Input")]
public class ChatInput : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UITextList textList;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fillWithDummyData;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIInput mInput;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xD86464", Offset = "0xD86464", VA = "0xD86464")]
	private void Start()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xD865F8", Offset = "0xD865F8", VA = "0xD865F8")]
	public void OnSubmit()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xD86714", Offset = "0xD86714", VA = "0xD86714")]
	public ChatInput()
	{
	}
}
[Token(Token = "0x20000DC")]
[RequireComponent(typeof(UITexture))]
public class DownloadTexture : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DownloadTexture <>4__this;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0xD86A24", Offset = "0xD86A24", VA = "0xD86A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0xD86A6C", Offset = "0xD86A6C", VA = "0xD86A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xD86790", Offset = "0xD86790", VA = "0xD86790")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xD868A8", Offset = "0xD868A8", VA = "0xD868A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xD868AC", Offset = "0xD868AC", VA = "0xD868AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xD86A2C", Offset = "0xD86A2C", VA = "0xD86A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string url;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pixelPerfect;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D mTex;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xD8671C", Offset = "0xD8671C", VA = "0xD8671C")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xD867B8", Offset = "0xD867B8", VA = "0xD867B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xD86848", Offset = "0xD86848", VA = "0xD86848")]
	public DownloadTexture()
	{
	}
}
[Token(Token = "0x20000DE")]
[AddComponentMenu("NGUI/Examples/Drag and Drop Item (Example)")]
public class ExampleDragDropItem : UIDragDropItem
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject prefab;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xD86A74", Offset = "0xD86A74", VA = "0xD86A74", Slot = "18")]
	protected override void OnDragDropRelease(GameObject surface)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xD871F0", Offset = "0xD871F0", VA = "0xD871F0")]
	public ExampleDragDropItem()
	{
	}
}
[Token(Token = "0x20000DF")]
[AddComponentMenu("NGUI/Examples/Drag and Drop Surface (Example)")]
public class ExampleDragDropSurface : MonoBehaviour
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rotatePlacedObject;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xD87270", Offset = "0xD87270", VA = "0xD87270")]
	public ExampleDragDropSurface()
	{
	}
}
[Token(Token = "0x20000E0")]
public class LagPosition : MonoBehaviour
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ignoreTimeScale;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTrans;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 mRelative;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 mAbsolute;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mStarted;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xD87278", Offset = "0xD87278", VA = "0xD87278")]
	public void OnRepositionEnd()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xD87284", Offset = "0xD87284", VA = "0xD87284")]
	private void Interpolate(float delta)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xD873FC", Offset = "0xD873FC", VA = "0xD873FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xD87420", Offset = "0xD87420", VA = "0xD87420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xD87474", Offset = "0xD87474", VA = "0xD87474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xD87430", Offset = "0xD87430", VA = "0xD87430")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xD87480", Offset = "0xD87480", VA = "0xD87480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xD874B0", Offset = "0xD874B0", VA = "0xD874B0")]
	public LagPosition()
	{
	}
}
[Token(Token = "0x20000E1")]
[AddComponentMenu("NGUI/Examples/Lag Rotation")]
public class LagRotation : MonoBehaviour
{
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ignoreTimeScale;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mTrans;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion mRelative;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion mAbsolute;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xD874C8", Offset = "0xD874C8", VA = "0xD874C8")]
	public void OnRepositionEnd()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xD874D4", Offset = "0xD874D4", VA = "0xD874D4")]
	private void Interpolate(float delta)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xD87684", Offset = "0xD87684", VA = "0xD87684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xD876EC", Offset = "0xD876EC", VA = "0xD876EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xD8771C", Offset = "0xD8771C", VA = "0xD8771C")]
	public LagRotation()
	{
	}
}
[Token(Token = "0x20000E2")]
[AddComponentMenu("NGUI/Examples/Load Level On Click")]
public class LoadLevelOnClick : MonoBehaviour
{
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xD8772C", Offset = "0xD8772C", VA = "0xD8772C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xD877A4", Offset = "0xD877A4", VA = "0xD877A4")]
	public LoadLevelOnClick()
	{
	}
}
[Token(Token = "0x20000E3")]
[AddComponentMenu("NGUI/Examples/Look At Target")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int level;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform mTrans;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xD877AC", Offset = "0xD877AC", VA = "0xD877AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xD877D0", Offset = "0xD877D0", VA = "0xD877D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xD879C8", Offset = "0xD879C8", VA = "0xD879C8")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x20000E4")]
public class OpenURLOnClick : MonoBehaviour
{
	[Token(Token = "0x600046F")]
	[Address(RVA = "0xD879D8", Offset = "0xD879D8", VA = "0xD879D8")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xD87ADC", Offset = "0xD87ADC", VA = "0xD87ADC")]
	public OpenURLOnClick()
	{
	}
}
[Token(Token = "0x20000E5")]
[AddComponentMenu("NGUI/Examples/Pan With Mouse")]
public class PanWithMouse : MonoBehaviour
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 degrees;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTrans;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion mStart;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 mRot;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xD87AE4", Offset = "0xD87AE4", VA = "0xD87AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xD87B34", Offset = "0xD87B34", VA = "0xD87B34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xD87D10", Offset = "0xD87D10", VA = "0xD87D10")]
	public PanWithMouse()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PerspectivePixelPerfect : MonoBehaviour
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[UnityEngine.Tooltip("Bias is a value above 0 that determines how far offset the object will be from the near clip, in percent (near to far clip)")]
	public float bias;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xD87D7C", Offset = "0xD87D7C", VA = "0xD87D7C")]
	[ContextMenu("Execute")]
	private void Start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xD87E58", Offset = "0xD87E58", VA = "0xD87E58")]
	public PerspectivePixelPerfect()
	{
	}
}
[Token(Token = "0x20000E7")]
[AddComponentMenu("NGUI/Examples/Play Idle Animations")]
public class PlayIdleAnimations : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation mAnim;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationClip mIdle;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AnimationClip> mBreaks;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mNextBreak;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int mLastIndex;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xD87E6C", Offset = "0xD87E6C", VA = "0xD87E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xD88460", Offset = "0xD88460", VA = "0xD88460")]
	private void Update()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xD885D8", Offset = "0xD885D8", VA = "0xD885D8")]
	public PlayIdleAnimations()
	{
	}
}
[Token(Token = "0x20000E8")]
[RequireComponent(typeof(UIWidget))]
public class SetColorPickerColor : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIWidget mWidget;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xD88660", Offset = "0xD88660", VA = "0xD88660")]
	public void SetToCurrent()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xD88780", Offset = "0xD88780", VA = "0xD88780")]
	public SetColorPickerColor()
	{
	}
}
[Token(Token = "0x20000E9")]
[AddComponentMenu("NGUI/Examples/Spin")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationsPerSecond;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ignoreTimeScale;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody mRb;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform mTrans;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xD88788", Offset = "0xD88788", VA = "0xD88788")]
	private void Start()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xD887FC", Offset = "0xD887FC", VA = "0xD887FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xD88A90", Offset = "0xD88A90", VA = "0xD88A90")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xD88890", Offset = "0xD88890", VA = "0xD88890")]
	public void ApplyDelta(float delta)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xD88B10", Offset = "0xD88B10", VA = "0xD88B10")]
	public Spin()
	{
	}
}
[Token(Token = "0x20000EA")]
[AddComponentMenu("NGUI/Examples/Spin With Mouse")]
public class SpinWithMouse : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTrans;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xD88B28", Offset = "0xD88B28", VA = "0xD88B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xD88B4C", Offset = "0xD88B4C", VA = "0xD88B4C")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xD88D10", Offset = "0xD88D10", VA = "0xD88D10")]
	public SpinWithMouse()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Tutorial5 : MonoBehaviour
{
	[Token(Token = "0x6000483")]
	[Address(RVA = "0xD88D20", Offset = "0xD88D20", VA = "0xD88D20")]
	public void SetDurationToCurrentProgress()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xD88E18", Offset = "0xD88E18", VA = "0xD88E18")]
	public Tutorial5()
	{
	}
}
[Token(Token = "0x20000EC")]
[AddComponentMenu("NGUI/Examples/Slider Colors")]
public class UISliderColors : MonoBehaviour
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISprite sprite;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] colors;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIProgressBar mBar;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIBasicSprite mSprite;

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xD88E20", Offset = "0xD88E20", VA = "0xD88E20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xD88EB8", Offset = "0xD88EB8", VA = "0xD88EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xD890D4", Offset = "0xD890D4", VA = "0xD890D4")]
	public UISliderColors()
	{
	}
}
[Token(Token = "0x20000ED")]
[AddComponentMenu("NGUI/Examples/Window Auto-Yaw")]
public class WindowAutoYaw : MonoBehaviour
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateOrder;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera uiCamera;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yawAmount;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform mTrans;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xD89180", Offset = "0xD89180", VA = "0xD89180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xD891E0", Offset = "0xD891E0", VA = "0xD891E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xD892D0", Offset = "0xD892D0", VA = "0xD892D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xD893AC", Offset = "0xD893AC", VA = "0xD893AC")]
	public WindowAutoYaw()
	{
	}
}
[Token(Token = "0x20000EE")]
[AddComponentMenu("NGUI/Examples/Window Drag Tilt")]
public class WindowDragTilt : MonoBehaviour
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateOrder;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float degrees;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 mLastPos;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform mTrans;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mAngle;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xD893BC", Offset = "0xD893BC", VA = "0xD893BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xD8940C", Offset = "0xD8940C", VA = "0xD8940C")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xD89500", Offset = "0xD89500", VA = "0xD89500")]
	public WindowDragTilt()
	{
	}
}
[Token(Token = "0x20000EF")]
[RequireComponent(typeof(UIWidget))]
[AddComponentMenu("NGUI/Interaction/Envelop Content")]
public class EnvelopContent : MonoBehaviour
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetRoot;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int padLeft;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int padRight;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int padBottom;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int padTop;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ignoreDisabled;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool mStarted;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xD89510", Offset = "0xD89510", VA = "0xD89510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xD89814", Offset = "0xD89814", VA = "0xD89814")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xD8951C", Offset = "0xD8951C", VA = "0xD8951C")]
	[ContextMenu("Execute")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xD89824", Offset = "0xD89824", VA = "0xD89824")]
	public EnvelopContent()
	{
	}
}
[Token(Token = "0x20000F0")]
[RequireComponent(typeof(UIPopupList))]
[AddComponentMenu("NGUI/Interaction/Language Selection")]
public class LanguageSelection : MonoBehaviour
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIPopupList mList;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool mStarted;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xD89834", Offset = "0xD89834", VA = "0xD89834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xD8988C", Offset = "0xD8988C", VA = "0xD8988C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xD89BA4", Offset = "0xD89BA4", VA = "0xD89BA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xD899B8", Offset = "0xD899B8", VA = "0xD899B8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xD89BB4", Offset = "0xD89BB4", VA = "0xD89BB4")]
	private void OnLocalize()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xD89BB8", Offset = "0xD89BB8", VA = "0xD89BB8")]
	public LanguageSelection()
	{
	}
}
[Token(Token = "0x20000F2")]
[RequireComponent(typeof(UILabel))]
[AddComponentMenu("NGUI/Interaction/Typewriter Effect")]
public class TypewriterEffect : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	private struct FadeEntry
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string text;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;
	}

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TypewriterEffect current;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int charsPerSecond;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeInTime;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayOnPeriod;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayOnNewLine;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIScrollView scrollView;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool keepFullDimensions;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EventDelegate> onFinished;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UILabel mLabel;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string mFullText;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int mCurrentOffset;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mNextChar;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool mReset;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool mActive;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BetterList<FadeEntry> mFade;

	[Token(Token = "0x17000071")]
	public bool isActive
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xD89CC8", Offset = "0xD89CC8", VA = "0xD89CC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xD89CD0", Offset = "0xD89CD0", VA = "0xD89CD0")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xD89CF4", Offset = "0xD89CF4", VA = "0xD89CF4")]
	public void Finish()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xD8A670", Offset = "0xD8A670", VA = "0xD8A670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xD8A67C", Offset = "0xD8A67C", VA = "0xD8A67C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xD89E5C", Offset = "0xD89E5C", VA = "0xD89E5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xD8A680", Offset = "0xD8A680", VA = "0xD8A680")]
	public TypewriterEffect()
	{
	}
}
[Token(Token = "0x20000F4")]
[AddComponentMenu("NGUI/Interaction/Button")]
public class UIButton : UIButtonColor
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIButton current;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool dragHighlight;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string hoverSprite;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string pressedSprite;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string disabledSprite;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite hoverSprite2D;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite pressedSprite2D;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite disabledSprite2D;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool pixelSnap;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<EventDelegate> onClick;

	[NonSerialized]
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private UISprite mSprite;

	[NonSerialized]
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UI2DSprite mSprite2D;

	[NonSerialized]
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string mNormalSprite;

	[NonSerialized]
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Sprite mNormalSprite2D;

	[Token(Token = "0x17000072")]
	public override bool isEnabled
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xD8A798", Offset = "0xD8A798", VA = "0xD8A798", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xD8A8C0", Offset = "0xD8A8C0", VA = "0xD8A8C0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public string normalSprite
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xD8AB04", Offset = "0xD8AB04", VA = "0xD8AB04")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xD8AB30", Offset = "0xD8AB30", VA = "0xD8AB30")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public Sprite normalSprite2D
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xD8AD7C", Offset = "0xD8AD7C", VA = "0xD8AD7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xD8ADA8", Offset = "0xD8ADA8", VA = "0xD8ADA8")]
		set
		{
		}
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xD8B024", Offset = "0xD8B024", VA = "0xD8B024", Slot = "6")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xD8B4BC", Offset = "0xD8B4BC", VA = "0xD8B4BC", Slot = "7")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xD8B5BC", Offset = "0xD8B5BC", VA = "0xD8B5BC", Slot = "11")]
	protected override void OnDragOver()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xD8B754", Offset = "0xD8B754", VA = "0xD8B754", Slot = "12")]
	protected override void OnDragOut()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xD8B8EC", Offset = "0xD8B8EC", VA = "0xD8B8EC", Slot = "14")]
	protected virtual void OnClick()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xD8BA5C", Offset = "0xD8BA5C", VA = "0xD8BA5C", Slot = "13")]
	public override void SetState(State state, bool immediate)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xD8AC98", Offset = "0xD8AC98", VA = "0xD8AC98")]
	protected void SetSprite(string sp)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xD8AF18", Offset = "0xD8AF18", VA = "0xD8AF18")]
	protected void SetSprite(Sprite sp)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xD8BC68", Offset = "0xD8BC68", VA = "0xD8BC68")]
	public UIButton()
	{
	}
}
[Token(Token = "0x20000F5")]
[AddComponentMenu("NGUI/Interaction/Button Activate")]
public class UIButtonActivate : MonoBehaviour
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool state;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xD8BD50", Offset = "0xD8BD50", VA = "0xD8BD50")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xD8BE00", Offset = "0xD8BE00", VA = "0xD8BE00")]
	public UIButtonActivate()
	{
	}
}
[Token(Token = "0x20000F6")]
[AddComponentMenu("NGUI/Interaction/Button Color")]
[ExecuteInEditMode]
public class UIButtonColor : UIWidgetContainer
{
	[Token(Token = "0x20000F7")]
	[DoNotObfuscateNGUI]
	public enum State
	{
		[Token(Token = "0x40004C9")]
		Normal,
		[Token(Token = "0x40004CA")]
		Hover,
		[Token(Token = "0x40004CB")]
		Pressed,
		[Token(Token = "0x40004CC")]
		Disabled
	}

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tweenTarget;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color hover;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color pressed;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color disabledColor;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float duration;

	[NonSerialized]
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Color mStartingColor;

	[NonSerialized]
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Color mDefaultColor;

	[NonSerialized]
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected bool mInitDone;

	[NonSerialized]
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected UIWidget mWidget;

	[NonSerialized]
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected State mState;

	[Token(Token = "0x17000075")]
	public State state
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xD8BE10", Offset = "0xD8BE10", VA = "0xD8BE10")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xD8BE18", Offset = "0xD8BE18", VA = "0xD8BE18")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public Color defaultColor
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xD8BE2C", Offset = "0xD8BE2C", VA = "0xD8BE2C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xD8BE5C", Offset = "0xD8BE5C", VA = "0xD8BE5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public virtual bool isEnabled
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xD8BECC", Offset = "0xD8BECC", VA = "0xD8BECC", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xD8BED4", Offset = "0xD8BED4", VA = "0xD8BED4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xD8BEE0", Offset = "0xD8BEE0", VA = "0xD8BEE0")]
	public void ResetDefaultColor()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xD8BEEC", Offset = "0xD8BEEC", VA = "0xD8BEEC")]
	public void CacheDefaultColor()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xD8BF04", Offset = "0xD8BF04", VA = "0xD8BF04")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xD8B23C", Offset = "0xD8B23C", VA = "0xD8B23C", Slot = "6")]
	protected virtual void OnInit()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xD8BF60", Offset = "0xD8BF60", VA = "0xD8BF60", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xD8C10C", Offset = "0xD8C10C", VA = "0xD8C10C", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xD8C224", Offset = "0xD8C224", VA = "0xD8C224", Slot = "9")]
	protected virtual void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xD8C2E0", Offset = "0xD8C2E0", VA = "0xD8C2E0", Slot = "10")]
	protected virtual void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xD8B69C", Offset = "0xD8B69C", VA = "0xD8B69C", Slot = "11")]
	protected virtual void OnDragOver()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xD8B834", Offset = "0xD8B834", VA = "0xD8B834", Slot = "12")]
	protected virtual void OnDragOut()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xD8BC04", Offset = "0xD8BC04", VA = "0xD8BC04", Slot = "13")]
	public virtual void SetState(State state, bool instant)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xD8C4F0", Offset = "0xD8C4F0", VA = "0xD8C4F0")]
	public void UpdateColor(bool instant)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xD8BD1C", Offset = "0xD8BD1C", VA = "0xD8BD1C")]
	public UIButtonColor()
	{
	}
}
[Token(Token = "0x20000F8")]
[AddComponentMenu("NGUI/Interaction/Button Keys (Legacy)")]
[ExecuteInEditMode]
public class UIButtonKeys : UIKeyNavigation
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIButtonKeys selectOnClick;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIButtonKeys selectOnUp;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIButtonKeys selectOnDown;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIButtonKeys selectOnLeft;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIButtonKeys selectOnRight;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xD8C640", Offset = "0xD8C640", VA = "0xD8C640", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xD8C65C", Offset = "0xD8C65C", VA = "0xD8C65C")]
	public void Upgrade()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xD8CA30", Offset = "0xD8CA30", VA = "0xD8CA30")]
	public UIButtonKeys()
	{
	}
}
[Token(Token = "0x20000F9")]
[AddComponentMenu("NGUI/Interaction/Button Message (Legacy)")]
public class UIButtonMessage : MonoBehaviour
{
	[Token(Token = "0x20000FA")]
	[DoNotObfuscateNGUI]
	public enum Trigger
	{
		[Token(Token = "0x40004D8")]
		OnClick,
		[Token(Token = "0x40004D9")]
		OnMouseOver,
		[Token(Token = "0x40004DA")]
		OnMouseOut,
		[Token(Token = "0x40004DB")]
		OnPress,
		[Token(Token = "0x40004DC")]
		OnRelease,
		[Token(Token = "0x40004DD")]
		OnDoubleClick
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionName;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Trigger trigger;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool includeChildren;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool mStarted;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xD8CA88", Offset = "0xD8CA88", VA = "0xD8CA88")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xD8CA94", Offset = "0xD8CA94", VA = "0xD8CA94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xD8CB20", Offset = "0xD8CB20", VA = "0xD8CB20")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xD8CD04", Offset = "0xD8CD04", VA = "0xD8CD04")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xD8CD54", Offset = "0xD8CD54", VA = "0xD8CD54")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xD8CDE0", Offset = "0xD8CDE0", VA = "0xD8CDE0")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xD8CE10", Offset = "0xD8CE10", VA = "0xD8CE10")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xD8CB70", Offset = "0xD8CB70", VA = "0xD8CB70")]
	private void Send()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xD8CE44", Offset = "0xD8CE44", VA = "0xD8CE44")]
	public UIButtonMessage()
	{
	}
}
[Token(Token = "0x20000FB")]
[AddComponentMenu("NGUI/Interaction/Button Offset")]
public class UIButtonOffset : MonoBehaviour
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tweenTarget;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hover;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pressed;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float duration;

	[NonSerialized]
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 mPos;

	[NonSerialized]
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mStarted;

	[NonSerialized]
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool mPressed;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xD8CE4C", Offset = "0xD8CE4C", VA = "0xD8CE4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xD8CF00", Offset = "0xD8CF00", VA = "0xD8CF00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xD8D010", Offset = "0xD8D010", VA = "0xD8D010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xD8D104", Offset = "0xD8D104", VA = "0xD8D104")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xD8CF8C", Offset = "0xD8CF8C", VA = "0xD8CF8C")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xD8D22C", Offset = "0xD8D22C", VA = "0xD8D22C")]
	private void OnDragOver()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xD8D28C", Offset = "0xD8D28C", VA = "0xD8D28C")]
	private void OnDragOut()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xD8D2D4", Offset = "0xD8D2D4", VA = "0xD8D2D4")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xD8D360", Offset = "0xD8D360", VA = "0xD8D360")]
	public UIButtonOffset()
	{
	}
}
[Token(Token = "0x20000FC")]
[AddComponentMenu("NGUI/Interaction/Button Rotation")]
public class UIButtonRotation : MonoBehaviour
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tweenTarget;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hover;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pressed;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float duration;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion mRot;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool mStarted;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xD8D3CC", Offset = "0xD8D3CC", VA = "0xD8D3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xD8D480", Offset = "0xD8D480", VA = "0xD8D480")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xD8D644", Offset = "0xD8D644", VA = "0xD8D644")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xD8D738", Offset = "0xD8D738", VA = "0xD8D738")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xD8D50C", Offset = "0xD8D50C", VA = "0xD8D50C")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD8D970", Offset = "0xD8D970", VA = "0xD8D970")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xD8D9FC", Offset = "0xD8D9FC", VA = "0xD8D9FC")]
	public UIButtonRotation()
	{
	}
}
[Token(Token = "0x20000FD")]
[AddComponentMenu("NGUI/Interaction/Button Scale")]
public class UIButtonScale : MonoBehaviour
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tweenTarget;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hover;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pressed;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float duration;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 mScale;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mStarted;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xD8DA78", Offset = "0xD8DA78", VA = "0xD8DA78")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD8DB2C", Offset = "0xD8DB2C", VA = "0xD8DB2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xD8DC3C", Offset = "0xD8DC3C", VA = "0xD8DC3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xD8DD30", Offset = "0xD8DD30", VA = "0xD8DD30")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xD8DBB8", Offset = "0xD8DBB8", VA = "0xD8DBB8")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xD8DE48", Offset = "0xD8DE48", VA = "0xD8DE48")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xD8DED4", Offset = "0xD8DED4", VA = "0xD8DED4")]
	public UIButtonScale()
	{
	}
}
[Token(Token = "0x20000FE")]
[AddComponentMenu("NGUI/Interaction/Center Scroll View on Child")]
public class UICenterOnChild : MonoBehaviour
{
	[Token(Token = "0x20000FF")]
	public delegate void OnCenterCallback(GameObject centeredObject);

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float springStrength;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float nextPageThreshold;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpringPanel.OnFinished onFinished;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnCenterCallback onCenter;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIScrollView mScrollView;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject mCenteredObject;

	[Token(Token = "0x17000078")]
	public GameObject centeredObject
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xD8DF04", Offset = "0xD8DF04", VA = "0xD8DF04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xD8DF0C", Offset = "0xD8DF0C", VA = "0xD8DF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xD8EA20", Offset = "0xD8EA20", VA = "0xD8EA20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xD8EAB0", Offset = "0xD8EAB0", VA = "0xD8EAB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xD8EB38", Offset = "0xD8EB38", VA = "0xD8EB38")]
	private void OnDragFinished()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xD8EB60", Offset = "0xD8EB60", VA = "0xD8EB60")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xD8DF10", Offset = "0xD8DF10", VA = "0xD8DF10")]
	[ContextMenu("Execute")]
	public void Recenter()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xD8EB70", Offset = "0xD8EB70", VA = "0xD8EB70")]
	private void CenterOn(Transform target, Vector3 panelCenter)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xD8EF5C", Offset = "0xD8EF5C", VA = "0xD8EF5C")]
	public void CenterOn(Transform target)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xD8F078", Offset = "0xD8F078", VA = "0xD8F078")]
	public UICenterOnChild()
	{
	}
}
[Token(Token = "0x2000100")]
[AddComponentMenu("NGUI/Interaction/Center Scroll View on Click")]
public class UICenterOnClick : MonoBehaviour
{
	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xD8F178", Offset = "0xD8F178", VA = "0xD8F178")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xD8F404", Offset = "0xD8F404", VA = "0xD8F404")]
	public UICenterOnClick()
	{
	}
}
[Token(Token = "0x2000101")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Interaction/Drag Camera")]
public class UIDragCamera : MonoBehaviour
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIDraggableCamera draggableCamera;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xD8F40C", Offset = "0xD8F40C", VA = "0xD8F40C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xD8F4F4", Offset = "0xD8F4F4", VA = "0xD8F4F4")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xD8F5EC", Offset = "0xD8F5EC", VA = "0xD8F5EC")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xD8F6F8", Offset = "0xD8F6F8", VA = "0xD8F6F8")]
	private void OnScroll(float delta)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xD8F7FC", Offset = "0xD8F7FC", VA = "0xD8F7FC")]
	public UIDragCamera()
	{
	}
}
[Token(Token = "0x2000102")]
[AddComponentMenu("NGUI/Interaction/Drag and Drop Container")]
public class UIDragDropContainer : MonoBehaviour
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform reparentTarget;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xD8F804", Offset = "0xD8F804", VA = "0xD8F804", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xD8F8A0", Offset = "0xD8F8A0", VA = "0xD8F8A0")]
	public UIDragDropContainer()
	{
	}
}
[Token(Token = "0x2000103")]
[AddComponentMenu("NGUI/Interaction/Drag and Drop Item")]
public class UIDragDropItem : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[DoNotObfuscateNGUI]
	public enum Restriction
	{
		[Token(Token = "0x400050E")]
		None,
		[Token(Token = "0x400050F")]
		Horizontal,
		[Token(Token = "0x4000510")]
		Vertical,
		[Token(Token = "0x4000511")]
		PressAndHold
	}

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[UnityEngine.Tooltip("What kind of restriction is applied to the drag & drop logic before dragging is made possible.")]
	public Restriction restriction;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[UnityEngine.Tooltip("By default, dragging only happens while holding the mouse button / touch. If desired, you can opt to use a click-based approach instead. Note that this only works with a mouse.")]
	public bool clickToDrag;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[UnityEngine.Tooltip("Whether a copy of the item will be dragged instead of the item itself.")]
	public bool cloneOnDrag;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[UnityEngine.Tooltip("Whether this drag and drop item can be interacted with. If not, only tooltips will work.")]
	public bool interactable;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[UnityEngine.Tooltip("How long the user has to press on an item before the drag action activates.")]
	public float pressAndHoldDelay;

	[NonSerialized]
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform mTrans;

	[NonSerialized]
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform mParent;

	[NonSerialized]
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider mCollider;

	[NonSerialized]
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Collider2D mCollider2D;

	[NonSerialized]
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected UIButton mButton;

	[NonSerialized]
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected UIRoot mRoot;

	[NonSerialized]
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected UIGrid mGrid;

	[NonSerialized]
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected UITable mTable;

	[NonSerialized]
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float mDragStartTime;

	[NonSerialized]
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected UIDragScrollView mDragScrollView;

	[NonSerialized]
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected bool mPressed;

	[NonSerialized]
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	protected bool mDragging;

	[NonSerialized]
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected UICamera.MouseOrTouch mTouch;

	[NonSerialized]
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<UIDragDropItem> draggedItems;

	[NonSerialized]
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int mIgnoreClick;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xD8F8A8", Offset = "0xD8F8A8", VA = "0xD8F8A8")]
	public static bool IsDragged(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD8FA80", Offset = "0xD8FA80", VA = "0xD8FA80", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xD8FB40", Offset = "0xD8FB40", VA = "0xD8FB40", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xD8FB44", Offset = "0xD8FB44", VA = "0xD8FB44", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xD8FE04", Offset = "0xD8FE04", VA = "0xD8FE04", Slot = "7")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xD8FE94", Offset = "0xD8FE94", VA = "0xD8FE94", Slot = "8")]
	protected virtual void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xD8FFD8", Offset = "0xD8FFD8", VA = "0xD8FFD8", Slot = "9")]
	protected virtual void OnClick()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xD9037C", Offset = "0xD9037C", VA = "0xD9037C")]
	protected void OnGlobalPress(GameObject go, bool state)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xD90688", Offset = "0xD90688", VA = "0xD90688")]
	protected void OnGlobalClick(GameObject go)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xD90998", Offset = "0xD90998", VA = "0xD90998", Slot = "10")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xD909F8", Offset = "0xD909F8", VA = "0xD909F8", Slot = "11")]
	protected virtual void OnDragStart()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xD90AEC", Offset = "0xD90AEC", VA = "0xD90AEC", Slot = "12")]
	public virtual UIDragDropItem StartDragging()
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xD91010", Offset = "0xD91010", VA = "0xD91010", Slot = "13")]
	protected virtual void OnClone(GameObject original)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xD91014", Offset = "0xD91014", VA = "0xD91014", Slot = "14")]
	protected virtual void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xD91144", Offset = "0xD91144", VA = "0xD91144", Slot = "15")]
	protected virtual void OnDragEnd()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xD8FDE4", Offset = "0xD8FDE4", VA = "0xD8FDE4")]
	public void StopDragging([Optional] GameObject go)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xD91288", Offset = "0xD91288", VA = "0xD91288", Slot = "16")]
	protected virtual void OnDragDropStart()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xD917AC", Offset = "0xD917AC", VA = "0xD917AC", Slot = "17")]
	protected virtual void OnDragDropMove(Vector2 delta)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xD86D5C", Offset = "0xD86D5C", VA = "0xD86D5C", Slot = "18")]
	protected virtual void OnDragDropRelease(GameObject surface)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xD918A0", Offset = "0xD918A0", VA = "0xD918A0", Slot = "19")]
	protected virtual void DestroySelf()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xD9190C", Offset = "0xD9190C", VA = "0xD9190C", Slot = "20")]
	protected virtual void OnDragDropEnd(GameObject surface)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xD9199C", Offset = "0xD9199C", VA = "0xD9199C")]
	protected void EnableDragScrollView()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xD91A24", Offset = "0xD91A24", VA = "0xD91A24")]
	protected void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xD87258", Offset = "0xD87258", VA = "0xD87258")]
	public UIDragDropItem()
	{
	}
}
[Token(Token = "0x2000105")]
[AddComponentMenu("NGUI/Interaction/Drag and Drop Root")]
public class UIDragDropRoot : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform root;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xDBA5B0", Offset = "0xDBA5B0", VA = "0xDBA5B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xDBA614", Offset = "0xDBA614", VA = "0xDBA614")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xDBA6DC", Offset = "0xDBA6DC", VA = "0xDBA6DC")]
	public UIDragDropRoot()
	{
	}
}
[Token(Token = "0x2000106")]
[AddComponentMenu("NGUI/Interaction/Draggable Camera")]
[RequireComponent(typeof(Camera))]
public class UIDraggableCamera : MonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootForBounds;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 scale;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scrollWheelFactor;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UIDragObject.DragEffect dragEffect;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool smoothDragStart;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float momentumAmount;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mCam;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform mTrans;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mPressed;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 mMomentum;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Bounds mBounds;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float mScroll;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UIRoot mRoot;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool mDragStarted;

	[Token(Token = "0x17000079")]
	public Vector2 currentMomentum
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xDBA6E4", Offset = "0xDBA6E4", VA = "0xDBA6E4")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xDBA6EC", Offset = "0xDBA6EC", VA = "0xDBA6EC")]
		set
		{
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xDBA6F4", Offset = "0xDBA6F4", VA = "0xDBA6F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xDBA8C4", Offset = "0xDBA8C4", VA = "0xDBA8C4")]
	private Vector3 CalculateConstrainOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xDBAB84", Offset = "0xDBAB84", VA = "0xDBAB84")]
	public bool ConstrainToBounds(bool immediate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xDBACF0", Offset = "0xDBACF0", VA = "0xDBACF0")]
	public void Press(bool isPressed)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xDBAE9C", Offset = "0xDBAE9C", VA = "0xDBAE9C")]
	public void Drag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xDBB06C", Offset = "0xDBB06C", VA = "0xDBB06C")]
	public void Scroll(float delta)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xDBB138", Offset = "0xDBB138", VA = "0xDBB138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xDBB410", Offset = "0xDBB410", VA = "0xDBB410")]
	public UIDraggableCamera()
	{
	}
}
[Token(Token = "0x2000107")]
[AddComponentMenu("NGUI/Interaction/Drag Object")]
[ExecuteInEditMode]
public class UIDragObject : MonoBehaviour
{
	[Token(Token = "0x2000108")]
	[DoNotObfuscateNGUI]
	public enum DragEffect
	{
		[Token(Token = "0x4000534")]
		None,
		[Token(Token = "0x4000535")]
		Momentum,
		[Token(Token = "0x4000536")]
		MomentumAndSpring
	}

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPanel panelRegion;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 scrollMomentum;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool restrictWithinPanel;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIRect contentRect;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DragEffect dragEffect;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float momentumAmount;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Vector3 scale;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	[SerializeField]
	private float scrollWheelFactor;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Plane mPlane;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 mTargetPos;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 mLastPos;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 mMomentum;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 mScroll;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Bounds mBounds;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int mTouchID;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool mStarted;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool mPressed;

	[Token(Token = "0x1700007A")]
	public Vector3 dragMovement
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xDBB4B0", Offset = "0xDBB4B0", VA = "0xDBB4B0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xDBB4BC", Offset = "0xDBB4BC", VA = "0xDBB4BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xDBB4C8", Offset = "0xDBB4C8", VA = "0xDBB4C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xDBB678", Offset = "0xDBB678", VA = "0xDBB678")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xDBB680", Offset = "0xDBB680", VA = "0xDBB680")]
	private void FindPanel()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xDBB784", Offset = "0xDBB784", VA = "0xDBB784")]
	private void UpdateBounds()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xDBB9D8", Offset = "0xDBB9D8", VA = "0xDBB9D8")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xDBC1E4", Offset = "0xDBC1E4", VA = "0xDBC1E4")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xDBC580", Offset = "0xDBC580", VA = "0xDBC580")]
	private void Move(Vector3 worldDelta)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xDBC9AC", Offset = "0xDBC9AC", VA = "0xDBC9AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xDBBD7C", Offset = "0xDBBD7C", VA = "0xDBBD7C")]
	public void CancelMovement()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xDBC134", Offset = "0xDBC134", VA = "0xDBC134")]
	public void CancelSpring()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xDBCD3C", Offset = "0xDBCD3C", VA = "0xDBCD3C")]
	private void OnScroll(float delta)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xDBCE00", Offset = "0xDBCE00", VA = "0xDBCE00")]
	public UIDragObject()
	{
	}
}
[Token(Token = "0x2000109")]
[AddComponentMenu("NGUI/Interaction/Drag-Resize Widget")]
public class UIDragResize : MonoBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIWidget target;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIWidget.Pivot pivot;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int minWidth;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int minHeight;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxWidth;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxHeight;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool updateAnchors;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Plane mPlane;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 mRayPos;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 mLocalPos;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int mWidth;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int mHeight;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool mDragging;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xDBCE9C", Offset = "0xDBCE9C", VA = "0xDBCE9C")]
	private void OnDragStart()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xDBD03C", Offset = "0xDBD03C", VA = "0xDBD03C")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xDBD2E4", Offset = "0xDBD2E4", VA = "0xDBD2E4")]
	private void OnDragEnd()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xDBD2EC", Offset = "0xDBD2EC", VA = "0xDBD2EC")]
	public UIDragResize()
	{
	}
}
[Token(Token = "0x200010A")]
[AddComponentMenu("NGUI/Interaction/Drag Scroll View")]
public class UIDragScrollView : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIScrollView scrollView;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private UIScrollView draggablePanel;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTrans;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIScrollView mScroll;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mAutoFind;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool mStarted;

	[NonSerialized]
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool mPressed;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xDBD30C", Offset = "0xDBD30C", VA = "0xDBD30C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xDBD588", Offset = "0xDBD588", VA = "0xDBD588")]
	private void Start()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xDBD434", Offset = "0xDBD434", VA = "0xDBD434")]
	private void FindScrollView()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xDBD594", Offset = "0xDBD594", VA = "0xDBD594")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xDBDCF4", Offset = "0xDBDCF4", VA = "0xDBDCF4")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xDBDEA0", Offset = "0xDBDEA0", VA = "0xDBDEA0")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xDBE528", Offset = "0xDBE528", VA = "0xDBE528")]
	private void OnScroll(float delta)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xDBE6EC", Offset = "0xDBE6EC", VA = "0xDBE6EC")]
	public void OnPan(Vector2 delta)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xDBE944", Offset = "0xDBE944", VA = "0xDBE944")]
	public UIDragScrollView()
	{
	}
}
[Token(Token = "0x200010B")]
[AddComponentMenu("NGUI/Interaction/Event Trigger")]
public class UIEventTrigger : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIEventTrigger current;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventDelegate> onHoverOver;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EventDelegate> onHoverOut;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<EventDelegate> onPress;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<EventDelegate> onRelease;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EventDelegate> onSelect;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<EventDelegate> onDeselect;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<EventDelegate> onClick;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<EventDelegate> onDoubleClick;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<EventDelegate> onDragStart;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<EventDelegate> onDragEnd;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<EventDelegate> onDragOver;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<EventDelegate> onDragOut;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<EventDelegate> onDrag;

	[Token(Token = "0x1700007B")]
	public bool isColliderEnabled
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xDBE94C", Offset = "0xDBE94C", VA = "0xDBE94C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xDBEA6C", Offset = "0xDBEA6C", VA = "0xDBEA6C")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xDBEB90", Offset = "0xDBEB90", VA = "0xDBEB90")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xDBECB4", Offset = "0xDBECB4", VA = "0xDBECB4")]
	private void OnSelect(bool selected)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xDBEDD8", Offset = "0xDBEDD8", VA = "0xDBEDD8")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xDBEEE8", Offset = "0xDBEEE8", VA = "0xDBEEE8")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xDBEFF8", Offset = "0xDBEFF8", VA = "0xDBEFF8")]
	private void OnDragStart()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xDBF0FC", Offset = "0xDBF0FC", VA = "0xDBF0FC")]
	private void OnDragEnd()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xDBF200", Offset = "0xDBF200", VA = "0xDBF200")]
	private void OnDragOver(GameObject go)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xDBF310", Offset = "0xDBF310", VA = "0xDBF310")]
	private void OnDragOut(GameObject go)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xDBF420", Offset = "0xDBF420", VA = "0xDBF420")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xDBF524", Offset = "0xDBF524", VA = "0xDBF524")]
	public UIEventTrigger()
	{
	}
}
[Token(Token = "0x200010C")]
[AddComponentMenu("NGUI/Interaction/Forward Events (Legacy)")]
public class UIForwardEvents : MonoBehaviour
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onHover;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool onPress;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool onClick;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool onDoubleClick;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool onSelect;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool onDrag;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool onDrop;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool onSubmit;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool onScroll;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xDBF794", Offset = "0xDBF794", VA = "0xDBF794")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xDBF870", Offset = "0xDBF870", VA = "0xDBF870")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xDBF94C", Offset = "0xDBF94C", VA = "0xDBF94C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xDBF9F4", Offset = "0xDBF9F4", VA = "0xDBF9F4")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xDBFA9C", Offset = "0xDBFA9C", VA = "0xDBFA9C")]
	private void OnSelect(bool selected)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xDBFB78", Offset = "0xDBFB78", VA = "0xDBFB78")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xDBFC54", Offset = "0xDBFC54", VA = "0xDBFC54")]
	private void OnDrop(GameObject go)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xDBFD04", Offset = "0xDBFD04", VA = "0xDBFD04")]
	private void OnSubmit()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xDBFDAC", Offset = "0xDBFDAC", VA = "0xDBFDAC")]
	private void OnScroll(float delta)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xDBFE8C", Offset = "0xDBFE8C", VA = "0xDBFE8C")]
	public UIForwardEvents()
	{
	}
}
[Token(Token = "0x200010D")]
[AddComponentMenu("NGUI/Interaction/Grid")]
public class UIGrid : UIWidgetContainer
{
	[Token(Token = "0x200010E")]
	public delegate void OnReposition();

	[Token(Token = "0x200010F")]
	[DoNotObfuscateNGUI]
	public enum Arrangement
	{
		[Token(Token = "0x4000574")]
		Horizontal,
		[Token(Token = "0x4000575")]
		Vertical,
		[Token(Token = "0x4000576")]
		CellSnap
	}

	[Token(Token = "0x2000110")]
	[DoNotObfuscateNGUI]
	public enum Sorting
	{
		[Token(Token = "0x4000578")]
		None,
		[Token(Token = "0x4000579")]
		Alphabetic,
		[Token(Token = "0x400057A")]
		Horizontal,
		[Token(Token = "0x400057B")]
		Vertical,
		[Token(Token = "0x400057C")]
		Custom
	}

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Arrangement arrangement;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Sorting sorting;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIWidget.Pivot pivot;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxPerLine;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cellWidth;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float cellHeight;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[UnityEngine.Tooltip("Whether the grid will smoothly animate its children into the correct place.")]
	public bool animateSmoothly;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[UnityEngine.Tooltip("If 'true' and Animate Smoothly is also 'true', will check to see if elements have a TweenAlpha on them. If so, elements will appear in their target position instead of animating from the current position.")]
	public bool animateFadeIn;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool hideInactive;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool keepWithinPanel;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnReposition onReposition;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Comparison<Transform> onCustomSort;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private bool sorted;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool mReposition;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected UIPanel mPanel;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool mInitDone;

	[Token(Token = "0x1700007C")]
	public bool repositionNow
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xDBFE94", Offset = "0xDBFE94", VA = "0xDBFE94")]
		set
		{
		}
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xDBFEB0", Offset = "0xDBFEB0", VA = "0xDBFEB0")]
	public List<Transform> GetChildList()
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xDC01C4", Offset = "0xDC01C4", VA = "0xDC01C4")]
	public Transform GetChild(int index)
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xDC0248", Offset = "0xDC0248", VA = "0xDC0248")]
	public int GetIndex(Transform trans)
	{
		return default(int);
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xDC02A4", Offset = "0xDC02A4", VA = "0xDC02A4")]
	[Obsolete("Use gameObject.AddChild or transform.parent = gridTransform")]
	public void AddChild(Transform trans)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xDC0360", Offset = "0xDC0360", VA = "0xDC0360")]
	[Obsolete("Use gameObject.AddChild or transform.parent = gridTransform")]
	public void AddChild(Transform trans, bool sort)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xDC041C", Offset = "0xDC041C", VA = "0xDC041C")]
	public bool RemoveChild(Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xDC04A4", Offset = "0xDC04A4", VA = "0xDC04A4", Slot = "4")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xDC053C", Offset = "0xDC053C", VA = "0xDC053C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xDC0594", Offset = "0xDC0594", VA = "0xDC0594", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xDC05BC", Offset = "0xDC05BC", VA = "0xDC05BC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xDC0640", Offset = "0xDC0640", VA = "0xDC0640")]
	public static int SortByName(Transform a, Transform b)
	{
		return default(int);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xDC0688", Offset = "0xDC0688", VA = "0xDC0688")]
	public static int SortHorizontal(Transform a, Transform b)
	{
		return default(int);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xDC06DC", Offset = "0xDC06DC", VA = "0xDC06DC")]
	public static int SortVertical(Transform a, Transform b)
	{
		return default(int);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xDC0748", Offset = "0xDC0748", VA = "0xDC0748", Slot = "7")]
	protected virtual void Sort(List<Transform> list)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xDC074C", Offset = "0xDC074C", VA = "0xDC074C", Slot = "8")]
	[ContextMenu("Execute")]
	public virtual void Reposition()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xDC0880", Offset = "0xDC0880", VA = "0xDC0880")]
	public void ConstrainWithinPanel()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xDC0984", Offset = "0xDC0984", VA = "0xDC0984", Slot = "9")]
	protected virtual void ResetPosition(List<Transform> list)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xDC0FC4", Offset = "0xDC0FC4", VA = "0xDC0FC4")]
	public UIGrid()
	{
	}
}
[Token(Token = "0x2000111")]
[AddComponentMenu("NGUI/UI/Image Button")]
public class UIImageButton : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISprite target;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string normalSprite;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string hoverSprite;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pressedSprite;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string disabledSprite;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool pixelSnap;

	[Token(Token = "0x1700007D")]
	public bool isEnabled
	{
		[Token(Token = "0x600056F")]
		[Address(RVA = "0xDC10B4", Offset = "0xDC10B4", VA = "0xDC10B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xDC1168", Offset = "0xDC1168", VA = "0xDC1168")]
		set
		{
		}
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xDC1320", Offset = "0xDC1320", VA = "0xDC1320")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xDC13C8", Offset = "0xDC13C8", VA = "0xDC13C8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xDC123C", Offset = "0xDC123C", VA = "0xDC123C")]
	private void UpdateImage()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xDC15FC", Offset = "0xDC15FC", VA = "0xDC15FC")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xDC1698", Offset = "0xDC1698", VA = "0xDC1698")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xDC14EC", Offset = "0xDC14EC", VA = "0xDC14EC")]
	private void SetSprite(string sprite)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xDC16A8", Offset = "0xDC16A8", VA = "0xDC16A8")]
	public UIImageButton()
	{
	}
}
[Token(Token = "0x2000112")]
[AddComponentMenu("NGUI/Interaction/Key Binding")]
public class UIKeyBinding : MonoBehaviour
{
	[Token(Token = "0x2000113")]
	[DoNotObfuscateNGUI]
	public enum Action
	{
		[Token(Token = "0x400058B")]
		PressAndClick,
		[Token(Token = "0x400058C")]
		Select,
		[Token(Token = "0x400058D")]
		All
	}

	[Token(Token = "0x2000114")]
	[DoNotObfuscateNGUI]
	public enum Modifier
	{
		[Token(Token = "0x400058F")]
		Any,
		[Token(Token = "0x4000590")]
		Shift,
		[Token(Token = "0x4000591")]
		Ctrl,
		[Token(Token = "0x4000592")]
		Alt,
		[Token(Token = "0x4000593")]
		None
	}

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<UIKeyBinding> list;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode keyCode;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Modifier modifier;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action action;

	[NonSerialized]
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mIgnoreUp;

	[NonSerialized]
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool mIsInput;

	[NonSerialized]
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool mPress;

	[Token(Token = "0x1700007E")]
	public string captionText
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xDC16B8", Offset = "0xDC16B8", VA = "0xDC16B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xDC1790", Offset = "0xDC1790", VA = "0xDC1790")]
	public static bool IsBound(KeyCode key)
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xDC18CC", Offset = "0xDC18CC", VA = "0xDC18CC")]
	public static UIKeyBinding Find(string name)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xDC19FC", Offset = "0xDC19FC", VA = "0xDC19FC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xDC1AD0", Offset = "0xDC1AD0", VA = "0xDC1AD0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xDC1B50", Offset = "0xDC1B50", VA = "0xDC1B50", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xDC1C80", Offset = "0xDC1C80", VA = "0xDC1C80", Slot = "7")]
	protected virtual void OnSubmit()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xDC1D34", Offset = "0xDC1D34", VA = "0xDC1D34", Slot = "8")]
	protected virtual bool IsModifierActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xDC1D8C", Offset = "0xDC1D8C", VA = "0xDC1D8C")]
	public static bool IsModifierActive(Modifier modifier)
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xDC20A4", Offset = "0xDC20A4", VA = "0xDC20A4", Slot = "9")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xDC2330", Offset = "0xDC2330", VA = "0xDC2330", Slot = "10")]
	protected virtual void OnBindingPress(bool pressed)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xDC23F8", Offset = "0xDC23F8", VA = "0xDC23F8", Slot = "11")]
	protected virtual void OnBindingClick()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xDC2480", Offset = "0xDC2480", VA = "0xDC2480", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xDC24DC", Offset = "0xDC24DC", VA = "0xDC24DC")]
	public static string GetString(KeyCode keyCode, Modifier modifier)
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xDC25E0", Offset = "0xDC25E0", VA = "0xDC25E0")]
	public static bool GetKeyCode(string text, out KeyCode key, out Modifier modifier)
	{
		return default(bool);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xDC28B8", Offset = "0xDC28B8", VA = "0xDC28B8")]
	public static Modifier GetActiveModifier()
	{
		return default(Modifier);
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xDC2A64", Offset = "0xDC2A64", VA = "0xDC2A64")]
	public UIKeyBinding()
	{
	}
}
[Token(Token = "0x2000115")]
[AddComponentMenu("NGUI/Interaction/Key Navigation")]
public class UIKeyNavigation : MonoBehaviour
{
	[Token(Token = "0x2000116")]
	[DoNotObfuscateNGUI]
	public enum Constraint
	{
		[Token(Token = "0x40005A0")]
		None,
		[Token(Token = "0x40005A1")]
		Vertical,
		[Token(Token = "0x40005A2")]
		Horizontal,
		[Token(Token = "0x40005A3")]
		Explicit
	}

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BetterList<UIKeyNavigation> list;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Constraint constraint;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject onUp;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject onDown;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject onLeft;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject onRight;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject onClick;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject onTab;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool startsSelected;

	[NonSerialized]
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool mStarted;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int mLastFrame;

	[Token(Token = "0x1700007F")]
	public static UIKeyNavigation current
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xDC2B04", Offset = "0xDC2B04", VA = "0xDC2B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public bool isColliderEnabled
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xDC2BCC", Offset = "0xDC2BCC", VA = "0xDC2BCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xDC2D08", Offset = "0xDC2D08", VA = "0xDC2D08", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xDC2DC8", Offset = "0xDC2DC8", VA = "0xDC2DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xDC2E5C", Offset = "0xDC2E5C", VA = "0xDC2E5C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xDC2EDC", Offset = "0xDC2EDC", VA = "0xDC2EDC")]
	private static bool IsActive(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xDC3020", Offset = "0xDC3020", VA = "0xDC3020")]
	public GameObject GetLeft()
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xDC34AC", Offset = "0xDC34AC", VA = "0xDC34AC")]
	public GameObject GetRight()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xDC3578", Offset = "0xDC3578", VA = "0xDC3578")]
	public GameObject GetUp()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xDC3644", Offset = "0xDC3644", VA = "0xDC3644")]
	public GameObject GetDown()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xDC30EC", Offset = "0xDC30EC", VA = "0xDC30EC")]
	public GameObject Get(Vector3 myDir, float x = 1f, float y = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xDC3710", Offset = "0xDC3710", VA = "0xDC3710")]
	protected static Vector3 GetCenter(GameObject go)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xDC3968", Offset = "0xDC3968", VA = "0xDC3968", Slot = "6")]
	public virtual void OnNavigate(KeyCode key)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xDC3BC8", Offset = "0xDC3BC8", VA = "0xDC3BC8", Slot = "7")]
	public virtual void OnKey(KeyCode key)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xDC3F3C", Offset = "0xDC3F3C", VA = "0xDC3F3C", Slot = "8")]
	protected virtual void OnClick()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xDC3FDC", Offset = "0xDC3FDC", VA = "0xDC3FDC")]
	public UIKeyNavigation()
	{
	}
}
[Token(Token = "0x2000117")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Interaction/Play Animation")]
public class UIPlayAnimation : MonoBehaviour
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIPlayAnimation current;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation target;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string clipName;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Trigger trigger;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Direction playDirection;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool resetOnPlay;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool clearSelection;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public EnableCondition ifDisabledOnPlay;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DisableCondition disableWhenFinished;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<EventDelegate> onFinished;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private GameObject eventReceiver;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private string callWhenFinished;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mStarted;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool mActivated;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool dragHighlight;

	[Token(Token = "0x17000081")]
	private bool dualState
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xDC408C", Offset = "0xDC408C", VA = "0xDC408C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xDC40A0", Offset = "0xDC40A0", VA = "0xDC40A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xDC41D4", Offset = "0xDC41D4", VA = "0xDC41D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xDC43AC", Offset = "0xDC43AC", VA = "0xDC43AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xDC46A4", Offset = "0xDC46A4", VA = "0xDC46A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xDC462C", Offset = "0xDC462C", VA = "0xDC462C")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xDC4A78", Offset = "0xDC4A78", VA = "0xDC4A78")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xDC4B60", Offset = "0xDC4B60", VA = "0xDC4B60")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xDC4C14", Offset = "0xDC4C14", VA = "0xDC4C14")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xDC4CCC", Offset = "0xDC4CCC", VA = "0xDC4CCC")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xDC4D44", Offset = "0xDC4D44", VA = "0xDC4D44")]
	private void OnToggle()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xDC4EB4", Offset = "0xDC4EB4", VA = "0xDC4EB4")]
	private void OnDragOver()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xDC4FB4", Offset = "0xDC4FB4", VA = "0xDC4FB4")]
	private void OnDragOut()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xDC5094", Offset = "0xDC5094", VA = "0xDC5094")]
	private void OnDrop(GameObject go)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xDC517C", Offset = "0xDC517C", VA = "0xDC517C")]
	public void Play(bool forward)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xDC47CC", Offset = "0xDC47CC", VA = "0xDC47CC")]
	public void Play(bool forward, bool onlyIfDifferent)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xDC5188", Offset = "0xDC5188", VA = "0xDC5188")]
	public void PlayForward()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xDC5194", Offset = "0xDC5194", VA = "0xDC5194")]
	public void PlayReverse()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xDC51A0", Offset = "0xDC51A0", VA = "0xDC51A0")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xDC530C", Offset = "0xDC530C", VA = "0xDC530C")]
	public UIPlayAnimation()
	{
	}
}
[Token(Token = "0x2000118")]
[AddComponentMenu("NGUI/Interaction/Play Sound")]
public class UIPlaySound : MonoBehaviour
{
	[Token(Token = "0x2000119")]
	[DoNotObfuscateNGUI]
	public enum Trigger
	{
		[Token(Token = "0x40005BA")]
		OnClick,
		[Token(Token = "0x40005BB")]
		OnMouseOver,
		[Token(Token = "0x40005BC")]
		OnMouseOut,
		[Token(Token = "0x40005BD")]
		OnPress,
		[Token(Token = "0x40005BE")]
		OnRelease,
		[Token(Token = "0x40005BF")]
		Custom,
		[Token(Token = "0x40005C0")]
		OnEnable,
		[Token(Token = "0x40005C1")]
		OnDisable
	}

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Trigger trigger;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float volume;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 2f)]
	public float pitch;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool mIsOver;

	[Token(Token = "0x17000082")]
	private bool canPlay
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xDC539C", Offset = "0xDC539C", VA = "0xDC539C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xDC5408", Offset = "0xDC5408", VA = "0xDC5408")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xDC5494", Offset = "0xDC5494", VA = "0xDC5494")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xDC5520", Offset = "0xDC5520", VA = "0xDC5520")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xDC55EC", Offset = "0xDC55EC", VA = "0xDC55EC")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xDC56B8", Offset = "0xDC56B8", VA = "0xDC56B8")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xDC574C", Offset = "0xDC574C", VA = "0xDC574C")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xDC57D4", Offset = "0xDC57D4", VA = "0xDC57D4")]
	public void Play()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xDC5844", Offset = "0xDC5844", VA = "0xDC5844")]
	public UIPlaySound()
	{
	}
}
[Token(Token = "0x200011A")]
[AddComponentMenu("NGUI/Interaction/Play Tween")]
[ExecuteInEditMode]
public class UIPlayTween : MonoBehaviour
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIPlayTween current;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tweenTarget;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int tweenGroup;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Trigger trigger;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Direction playDirection;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool resetOnPlay;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool resetIfDisabled;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[UnityEngine.Tooltip("If true, Play Tween will reset all associated tweens to their starting state at the very start, before activation triggers")]
	public bool setState;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[UnityEngine.Tooltip("Starting factor to assume, 0 being the start and 1 being the end")]
	[Range(0f, 1f)]
	public float startState;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public EnableCondition ifDisabledOnPlay;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DisableCondition disableWhenFinished;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool includeChildren;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<EventDelegate> onFinished;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private GameObject eventReceiver;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private string callWhenFinished;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UITweener[] mTweens;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mStarted;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int mActive;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool mActivated;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xDC5854", Offset = "0xDC5854", VA = "0xDC5854")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xDC592C", Offset = "0xDC592C", VA = "0xDC592C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xDC5B98", Offset = "0xDC5B98", VA = "0xDC5B98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xDC6064", Offset = "0xDC6064", VA = "0xDC6064")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xDC618C", Offset = "0xDC618C", VA = "0xDC618C")]
	private void OnDragOver()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xDC5E18", Offset = "0xDC5E18", VA = "0xDC5E18")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xDC659C", Offset = "0xDC659C", VA = "0xDC659C")]
	private void CustomHoverListener(GameObject go, bool isOver)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xDC67B4", Offset = "0xDC67B4", VA = "0xDC67B4")]
	private void OnDragOut()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xDC67EC", Offset = "0xDC67EC", VA = "0xDC67EC")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xDC6860", Offset = "0xDC6860", VA = "0xDC6860")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xDC6894", Offset = "0xDC6894", VA = "0xDC6894")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xDC68CC", Offset = "0xDC68CC", VA = "0xDC68CC")]
	private void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xDC6940", Offset = "0xDC6940", VA = "0xDC6940")]
	private void OnToggle()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xDC6AA0", Offset = "0xDC6AA0", VA = "0xDC6AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xDC6BD0", Offset = "0xDC6BD0", VA = "0xDC6BD0")]
	[ContextMenu("Play")]
	public void Play()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xDC61A4", Offset = "0xDC61A4", VA = "0xDC61A4")]
	public void Play(bool forward)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xDC6BD8", Offset = "0xDC6BD8", VA = "0xDC6BD8")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xDC6D54", Offset = "0xDC6D54", VA = "0xDC6D54")]
	public UIPlayTween()
	{
	}
}
[Token(Token = "0x200011B")]
[AddComponentMenu("NGUI/Interaction/Popup List")]
[ExecuteInEditMode]
public class UIPopupList : UIWidgetContainer
{
	[Token(Token = "0x200011C")]
	[DoNotObfuscateNGUI]
	public enum Position
	{
		[Token(Token = "0x4000608")]
		Auto,
		[Token(Token = "0x4000609")]
		Above,
		[Token(Token = "0x400060A")]
		Below
	}

	[Token(Token = "0x200011D")]
	[DoNotObfuscateNGUI]
	public enum Selection
	{
		[Token(Token = "0x400060C")]
		OnPress,
		[Token(Token = "0x400060D")]
		OnClick
	}

	[Token(Token = "0x200011E")]
	[DoNotObfuscateNGUI]
	public enum OpenOn
	{
		[Token(Token = "0x400060F")]
		ClickOrTap,
		[Token(Token = "0x4000610")]
		RightClick,
		[Token(Token = "0x4000611")]
		DoubleClick,
		[Token(Token = "0x4000612")]
		Manual
	}

	[Token(Token = "0x200011F")]
	public delegate void LegacyEvent(string val);

	[Token(Token = "0x2000120")]
	[CompilerGenerated]
	private sealed class <UpdateTweenPosition>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPopupList <>4__this;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TweenPosition <tp>5__2;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0xDCBFD8", Offset = "0xDCBFD8", VA = "0xDCBFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xDCC020", Offset = "0xDCC020", VA = "0xDCC020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xDC8BBC", Offset = "0xDC8BBC", VA = "0xDC8BBC")]
		[DebuggerHidden]
		public <UpdateTweenPosition>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xDCBE30", Offset = "0xDCBE30", VA = "0xDCBE30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xDCBE34", Offset = "0xDCBE34", VA = "0xDCBE34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xDCBFE0", Offset = "0xDCBFE0", VA = "0xDCBFE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000121")]
	[CompilerGenerated]
	private sealed class <CloseIfUnselected>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPopupList <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0xDCC20C", Offset = "0xDCC20C", VA = "0xDCC20C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0xDCC254", Offset = "0xDCC254", VA = "0xDCC254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xDC9C00", Offset = "0xDC9C00", VA = "0xDC9C00")]
		[DebuggerHidden]
		public <CloseIfUnselected>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xDCC028", Offset = "0xDCC028", VA = "0xDCC028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xDCC02C", Offset = "0xDCC02C", VA = "0xDCC02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xDCC214", Offset = "0xDCC214", VA = "0xDCC214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIPopupList current;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static GameObject mChild;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static float mFadeOutComplete;

	[Token(Token = "0x40005D8")]
	private const float animSpeed = 0.15f;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object atlas;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object bitmapFont;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font trueTypeFont;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int fontSize;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public FontStyle fontStyle;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string backgroundSprite;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string highlightSprite;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite background2DSprite;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite highlight2DSprite;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Position position;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Selection selection;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NGUIText.Alignment alignment;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> items;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<object> itemData;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<System.Action> itemCallbacks;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 padding;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color textColor;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color backgroundColor;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color highlightColor;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool isAnimated;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool isLocalized;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public UILabel.Modifier textModifier;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool separatePanel;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int overlap;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OpenOn openOn;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<EventDelegate> onChange;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[HideInInspector]
	protected string mSelectedItem;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[HideInInspector]
	protected UIPanel mPanel;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[HideInInspector]
	protected UIBasicSprite mBackground;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[HideInInspector]
	protected UIBasicSprite mHighlight;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	[HideInInspector]
	protected UILabel mHighlightedLabel;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	[SerializeField]
	protected List<UILabel> mLabelList;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	[SerializeField]
	protected float mBgBorder;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[UnityEngine.Tooltip("Whether the selection will be persistent even after the popup list is closed. By default the selection is cleared when the popup is closed so that the same selection can be chosen again the next time the popup list is opened. If enabled, the selection will persist, but selecting the same choice in succession will not result in the onChange notification being triggered more than once.")]
	public bool keepValue;

	[NonSerialized]
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected GameObject mSelection;

	[NonSerialized]
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected int mOpenFrame;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	[HideInInspector]
	private GameObject eventReceiver;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	[HideInInspector]
	private string functionName;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	[HideInInspector]
	private float textScale;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	[HideInInspector]
	private UILabel textLabel;

	[NonSerialized]
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector3 startingPosition;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private LegacyEvent mLegacyEvent;

	[NonSerialized]
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected bool mExecuting;

	[NonSerialized]
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	protected bool mStarted;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	protected bool mTweening;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject source;

	[Token(Token = "0x17000083")]
	public INGUIFont font
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xDC6DE4", Offset = "0xDC6DE4", VA = "0xDC6DE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xDC6EC4", Offset = "0xDC6EC4", VA = "0xDC6EC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public UnityEngine.Object ambigiousFont
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xDC6F94", Offset = "0xDC6F94", VA = "0xDC6F94")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xDC7084", Offset = "0xDC7084", VA = "0xDC7084")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	[Obsolete("Use EventDelegate.Add(popup.onChange, YourCallback) instead, and UIPopupList.current.value to determine the state")]
	public LegacyEvent onSelectionChange
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xDC71A0", Offset = "0xDC71A0", VA = "0xDC71A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xDC71A8", Offset = "0xDC71A8", VA = "0xDC71A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public static bool isOpen
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xDC3AE4", Offset = "0xDC3AE4", VA = "0xDC3AE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000087")]
	public virtual string value
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xDC71B8", Offset = "0xDC71B8", VA = "0xDC71B8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xDC71C0", Offset = "0xDC71C0", VA = "0xDC71C0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public virtual object data
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xDC724C", Offset = "0xDC724C", VA = "0xDC724C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public System.Action callback
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xDC72F4", Offset = "0xDC72F4", VA = "0xDC72F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public bool isColliderEnabled
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xDC739C", Offset = "0xDC739C", VA = "0xDC739C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xDC74BC", Offset = "0xDC74BC", VA = "0xDC74BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	protected bool isValid
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xDC75E4", Offset = "0xDC75E4", VA = "0xDC75E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008C")]
	protected int activeFontSize
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xDC7650", Offset = "0xDC7650", VA = "0xDC7650")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008D")]
	protected float activeFontScale
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xDC7748", Offset = "0xDC7748", VA = "0xDC7748")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008E")]
	protected float fitScale
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xDC7848", Offset = "0xDC7848", VA = "0xDC7848")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xDC71C8", Offset = "0xDC71C8", VA = "0xDC71C8")]
	public void Set(string value, bool notify = true)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xDC7B80", Offset = "0xDC7B80", VA = "0xDC7B80", Slot = "7")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xDC7C60", Offset = "0xDC7C60", VA = "0xDC7C60", Slot = "8")]
	public virtual void AddItem(string text)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xDC7DFC", Offset = "0xDC7DFC", VA = "0xDC7DFC", Slot = "9")]
	public virtual void AddItem(string text, System.Action del)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xDC7F30", Offset = "0xDC7F30", VA = "0xDC7F30", Slot = "10")]
	public virtual void AddItem(string text, object data, [Optional] System.Action del)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xDC80E0", Offset = "0xDC80E0", VA = "0xDC80E0", Slot = "11")]
	public virtual void RemoveItem(string text)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xDC81E0", Offset = "0xDC81E0", VA = "0xDC81E0", Slot = "12")]
	public virtual void RemoveItemByData(object data)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xDC79E4", Offset = "0xDC79E4", VA = "0xDC79E4")]
	protected void TriggerCallbacks()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xDC82E0", Offset = "0xDC82E0", VA = "0xDC82E0", Slot = "13")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xDC8688", Offset = "0xDC8688", VA = "0xDC8688", Slot = "14")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xDC87F0", Offset = "0xDC87F0", VA = "0xDC87F0", Slot = "15")]
	protected virtual void OnLocalize()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xDC8800", Offset = "0xDC8800", VA = "0xDC8800", Slot = "16")]
	protected virtual void Highlight(UILabel lbl, bool instant)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xDC8984", Offset = "0xDC8984", VA = "0xDC8984", Slot = "17")]
	protected virtual Vector3 GetHighlightPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xDC8B48", Offset = "0xDC8B48", VA = "0xDC8B48", Slot = "18")]
	[IteratorStateMachine(typeof(<UpdateTweenPosition>d__95))]
	protected virtual IEnumerator UpdateTweenPosition()
	{
		return null;
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xDC8BE4", Offset = "0xDC8BE4", VA = "0xDC8BE4", Slot = "19")]
	protected virtual void OnItemHover(GameObject go, bool isOver)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xDC8C74", Offset = "0xDC8C74", VA = "0xDC8C74", Slot = "20")]
	protected virtual void OnItemPress(GameObject go, bool isPressed)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xDC8C94", Offset = "0xDC8C94", VA = "0xDC8C94", Slot = "21")]
	protected virtual void OnItemClick(GameObject go)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xDC8E48", Offset = "0xDC8E48", VA = "0xDC8E48")]
	private void Select(UILabel lbl, bool instant)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xDC8E5C", Offset = "0xDC8E5C", VA = "0xDC8E5C", Slot = "22")]
	protected virtual void OnNavigate(KeyCode key)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xDC8FB0", Offset = "0xDC8FB0", VA = "0xDC8FB0", Slot = "23")]
	protected virtual void OnKey(KeyCode key)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xDC90D4", Offset = "0xDC90D4", VA = "0xDC90D4", Slot = "24")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xDC90E4", Offset = "0xDC90E4", VA = "0xDC90E4", Slot = "25")]
	protected virtual void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xDC92B8", Offset = "0xDC92B8", VA = "0xDC92B8")]
	public static void Close()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xDC9380", Offset = "0xDC9380", VA = "0xDC9380", Slot = "26")]
	public virtual void CloseSelf()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xDC96E0", Offset = "0xDC96E0", VA = "0xDC96E0", Slot = "27")]
	protected virtual void AnimateColor(UIWidget widget)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xDC9764", Offset = "0xDC9764", VA = "0xDC9764", Slot = "28")]
	protected virtual void AnimatePosition(UIWidget widget, bool placeAbove, float bottom)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xDC9820", Offset = "0xDC9820", VA = "0xDC9820", Slot = "29")]
	protected virtual void AnimateScale(UIWidget widget, bool placeAbove, float bottom)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xDC99B0", Offset = "0xDC99B0", VA = "0xDC99B0")]
	protected void Animate(UIWidget widget, bool placeAbove, float bottom)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xDC9A08", Offset = "0xDC9A08", VA = "0xDC9A08", Slot = "30")]
	protected virtual void OnClick()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xDC9B6C", Offset = "0xDC9B6C", VA = "0xDC9B6C", Slot = "31")]
	protected virtual void OnDoubleClick()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xDC9B8C", Offset = "0xDC9B8C", VA = "0xDC9B8C")]
	[IteratorStateMachine(typeof(<CloseIfUnselected>d__112))]
	private IEnumerator CloseIfUnselected()
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xDC9C28", Offset = "0xDC9C28", VA = "0xDC9C28", Slot = "32")]
	public virtual void Show()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xDCBAFC", Offset = "0xDCBAFC", VA = "0xDCBAFC")]
	public UIPopupList()
	{
	}
}
[Token(Token = "0x2000122")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Interaction/NGUI Progress Bar")]
public class UIProgressBar : UIWidgetContainer
{
	[Token(Token = "0x2000123")]
	[DoNotObfuscateNGUI]
	public enum FillDirection
	{
		[Token(Token = "0x4000629")]
		LeftToRight,
		[Token(Token = "0x400062A")]
		RightToLeft,
		[Token(Token = "0x400062B")]
		BottomToTop,
		[Token(Token = "0x400062C")]
		TopToBottom
	}

	[Token(Token = "0x2000124")]
	public delegate void OnDragFinished();

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIProgressBar current;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnDragFinished onDragFinished;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform thumb;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	protected UIWidget mBG;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	protected UIWidget mFG;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	protected float mValue;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	protected FillDirection mFill;

	[NonSerialized]
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool mStarted;

	[NonSerialized]
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Transform mTrans;

	[NonSerialized]
	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool mIsDirty;

	[NonSerialized]
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Camera mCam;

	[NonSerialized]
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float mOffset;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int numberOfSteps;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<EventDelegate> onChange;

	[Token(Token = "0x17000093")]
	public Transform cachedTransform
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0xDCC25C", Offset = "0xDCC25C", VA = "0xDCC25C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000094")]
	public Camera cachedCamera
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0xDCC2F0", Offset = "0xDCC2F0", VA = "0xDCC2F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000095")]
	public UIWidget foregroundWidget
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0xDCC3CC", Offset = "0xDCC3CC", VA = "0xDCC3CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0xDCC3D4", Offset = "0xDCC3D4", VA = "0xDCC3D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public UIWidget backgroundWidget
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0xDCC464", Offset = "0xDCC464", VA = "0xDCC464")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000611")]
		[Address(RVA = "0xDCC46C", Offset = "0xDCC46C", VA = "0xDCC46C")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public FillDirection fillDirection
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xDCC4FC", Offset = "0xDCC4FC", VA = "0xDCC4FC")]
		get
		{
			return default(FillDirection);
		}
		[Token(Token = "0x6000613")]
		[Address(RVA = "0xDCC504", Offset = "0xDCC504", VA = "0xDCC504")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public float value
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0xDCC52C", Offset = "0xDCC52C", VA = "0xDCC52C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xDCC5E4", Offset = "0xDCC5E4", VA = "0xDCC5E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float alpha
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0xDCC770", Offset = "0xDCC770", VA = "0xDCC770")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xDCC82C", Offset = "0xDCC82C", VA = "0xDCC82C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	protected bool isHorizontal
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0xDCCCF0", Offset = "0xDCCCF0", VA = "0xDCCCF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	protected bool isInverted
	{
		[Token(Token = "0x6000619")]
		[Address(RVA = "0xDCCD00", Offset = "0xDCCD00", VA = "0xDCCD00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xDCC5EC", Offset = "0xDCC5EC", VA = "0xDCC5EC")]
	public bool Set(float val, bool notify = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xDCCD14", Offset = "0xDCCD14", VA = "0xDCCD14")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xDCCE44", Offset = "0xDCCE44", VA = "0xDCCE44")]
	public void Start()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xDCCFF4", Offset = "0xDCCFF4", VA = "0xDCCFF4", Slot = "4")]
	protected virtual void Upgrade()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xDCCFF8", Offset = "0xDCCFF8", VA = "0xDCCFF8", Slot = "5")]
	protected virtual void OnStart()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xDCCFFC", Offset = "0xDCCFFC", VA = "0xDCCFFC")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xDCD014", Offset = "0xDCD014", VA = "0xDCD014")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xDCD12C", Offset = "0xDCD12C", VA = "0xDCD12C")]
	protected float ScreenToValue(Vector2 screenPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xDCD2BC", Offset = "0xDCD2BC", VA = "0xDCD2BC", Slot = "6")]
	protected virtual float LocalToValue(Vector2 localPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xDCD3C4", Offset = "0xDCD3C4", VA = "0xDCD3C4", Slot = "7")]
	public virtual void ForceUpdate()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xDCDB30", Offset = "0xDCDB30", VA = "0xDCDB30")]
	protected void SetThumbPosition(Vector3 worldPos)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xDCDE5C", Offset = "0xDCDE5C", VA = "0xDCDE5C", Slot = "8")]
	public virtual void OnPan(Vector2 delta)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xDCDF0C", Offset = "0xDCDF0C", VA = "0xDCDF0C")]
	public UIProgressBar()
	{
	}
}
[Token(Token = "0x2000125")]
[AddComponentMenu("NGUI/Interaction/Saved Option")]
public class UISavedOption : MonoBehaviour
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyName;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIPopupList mList;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIToggle mCheck;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIProgressBar mSlider;

	[Token(Token = "0x1700009C")]
	private string key
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xDCE078", Offset = "0xDCE078", VA = "0xDCE078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xDCE0F4", Offset = "0xDCE0F4", VA = "0xDCE0F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xDCE1B4", Offset = "0xDCE1B4", VA = "0xDCE1B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xDCE534", Offset = "0xDCE534", VA = "0xDCE534")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xDCE79C", Offset = "0xDCE79C", VA = "0xDCE79C")]
	public void SaveSelection()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xDCE818", Offset = "0xDCE818", VA = "0xDCE818")]
	public void SaveState()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xDCE8A0", Offset = "0xDCE8A0", VA = "0xDCE8A0")]
	public void SaveProgress()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xDCE910", Offset = "0xDCE910", VA = "0xDCE910")]
	public UISavedOption()
	{
	}
}
[Token(Token = "0x2000126")]
[AddComponentMenu("NGUI/Interaction/NGUI Scroll Bar")]
[ExecuteInEditMode]
public class UIScrollBar : UISlider
{
	[Token(Token = "0x2000127")]
	private enum Direction
	{
		[Token(Token = "0x4000635")]
		Horizontal,
		[Token(Token = "0x4000636")]
		Vertical,
		[Token(Token = "0x4000637")]
		Upgraded
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[HideInInspector]
	protected float mSize;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	[SerializeField]
	private float mScroll;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	[HideInInspector]
	private Direction mDir;

	[Token(Token = "0x1700009D")]
	[Obsolete("Use 'value' instead")]
	public float scrollValue
	{
		[Token(Token = "0x6000633")]
		[Address(RVA = "0xDCE918", Offset = "0xDCE918", VA = "0xDCE918")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000634")]
		[Address(RVA = "0xDCE91C", Offset = "0xDCE91C", VA = "0xDCE91C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public float barSize
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0xDCE924", Offset = "0xDCE924", VA = "0xDCE924")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000636")]
		[Address(RVA = "0xDCE92C", Offset = "0xDCE92C", VA = "0xDCE92C")]
		set
		{
		}
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xDCEAAC", Offset = "0xDCEAAC", VA = "0xDCEAAC", Slot = "4")]
	protected override void Upgrade()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xDCEAE0", Offset = "0xDCEAE0", VA = "0xDCEAE0", Slot = "5")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xDCEDBC", Offset = "0xDCEDBC", VA = "0xDCEDBC", Slot = "6")]
	protected override float LocalToValue(Vector2 localPos)
	{
		return default(float);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xDCEFB0", Offset = "0xDCEFB0", VA = "0xDCEFB0", Slot = "7")]
	public override void ForceUpdate()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xDCF198", Offset = "0xDCF198", VA = "0xDCF198")]
	public UIScrollBar()
	{
	}
}
[Token(Token = "0x2000128")]
[RequireComponent(typeof(UIPanel))]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Interaction/Scroll View")]
public class UIScrollView : MonoBehaviour
{
	[Token(Token = "0x2000129")]
	[DoNotObfuscateNGUI]
	public enum Movement
	{
		[Token(Token = "0x4000660")]
		Horizontal,
		[Token(Token = "0x4000661")]
		Vertical,
		[Token(Token = "0x4000662")]
		Unrestricted,
		[Token(Token = "0x4000663")]
		Custom
	}

	[Token(Token = "0x200012A")]
	[DoNotObfuscateNGUI]
	public enum DragEffect
	{
		[Token(Token = "0x4000665")]
		None,
		[Token(Token = "0x4000666")]
		Momentum,
		[Token(Token = "0x4000667")]
		MomentumAndSpring
	}

	[Token(Token = "0x200012B")]
	[DoNotObfuscateNGUI]
	public enum ShowCondition
	{
		[Token(Token = "0x4000669")]
		Always,
		[Token(Token = "0x400066A")]
		OnlyIfNeeded,
		[Token(Token = "0x400066B")]
		WhenDragging
	}

	[Token(Token = "0x200012C")]
	public delegate void OnDragNotification();

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BetterList<UIScrollView> list;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Movement movement;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DragEffect dragEffect;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool restrictWithinPanel;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[UnityEngine.Tooltip("Whether the scroll view will execute its constrain within bounds logic on every drag operation")]
	public bool constrainOnDrag;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool disableDragIfFits;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool smoothDragStart;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool iOSDragEmulation;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scrollWheelFactor;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float momentumAmount;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float dampenStrength;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIProgressBar horizontalScrollBar;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIProgressBar verticalScrollBar;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ShowCondition showScrollBars;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 customMovement;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public UIWidget.Pivot contentPivot;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OnDragNotification onDragStarted;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OnDragNotification onDragFinished;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OnDragNotification onMomentumMove;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public OnDragNotification onStoppedMoving;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	private Vector3 scale;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	[SerializeField]
	private Vector2 relativePositionOnReset;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform mTrans;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected UIPanel mPanel;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected UnityEngine.Plane mPlane;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Vector3 mLastPos;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected bool mPressed;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3 mMomentum;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected float mScroll;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Bounds mBounds;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected bool mCalculatedBounds;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	protected bool mShouldMove;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	protected bool mIgnoreCallbacks;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected int mDragID;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected Vector2 mDragStartOffset;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected bool mDragStarted;

	[NonSerialized]
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool mStarted;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float maxMoveSpeed;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public UICenterOnChild centerOnChild;

	[Token(Token = "0x1700009F")]
	public UIPanel panel
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xDCF1B0", Offset = "0xDCF1B0", VA = "0xDCF1B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A0")]
	public bool isDragging
	{
		[Token(Token = "0x600063D")]
		[Address(RVA = "0xDCF1B8", Offset = "0xDCF1B8", VA = "0xDCF1B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	public virtual Bounds bounds
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xDCF1D8", Offset = "0xDCF1D8", VA = "0xDCF1D8", Slot = "4")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000A2")]
	public bool canMoveHorizontally
	{
		[Token(Token = "0x600063F")]
		[Address(RVA = "0xDCF2AC", Offset = "0xDCF2AC", VA = "0xDCF2AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	public bool canMoveVertically
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xDCF2E4", Offset = "0xDCF2E4", VA = "0xDCF2E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A4")]
	public virtual bool shouldMoveHorizontally
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xDCF31C", Offset = "0xDCF31C", VA = "0xDCF31C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	public virtual bool shouldMoveVertically
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0xDCF46C", Offset = "0xDCF46C", VA = "0xDCF46C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	protected virtual bool shouldMove
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0xDCF5BC", Offset = "0xDCF5BC", VA = "0xDCF5BC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A7")]
	public Vector3 currentMomentum
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0xDCF7E8", Offset = "0xDCF7E8", VA = "0xDCF7E8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000645")]
		[Address(RVA = "0xDCF7F4", Offset = "0xDCF7F4", VA = "0xDCF7F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xDCF808", Offset = "0xDCF808", VA = "0xDCF808")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xDCFA48", Offset = "0xDCFA48", VA = "0xDCFA48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xDCFD30", Offset = "0xDCFD30", VA = "0xDCFD30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xDCFAF0", Offset = "0xDCFAF0", VA = "0xDCFAF0")]
	private void CheckScrollbars()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xDCFD60", Offset = "0xDCFD60", VA = "0xDCFD60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xDCFDE8", Offset = "0xDCFDE8", VA = "0xDCFDE8")]
	public bool RestrictWithinBounds(bool instant)
	{
		return default(bool);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xDCFDF8", Offset = "0xDCFDF8", VA = "0xDCFDF8")]
	public bool RestrictWithinBounds(bool instant, bool horizontal, bool vertical)
	{
		return default(bool);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xDD0138", Offset = "0xDD0138", VA = "0xDD0138")]
	public void DisableSpring()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xDD01F0", Offset = "0xDD01F0", VA = "0xDD01F0")]
	public void UpdateScrollbars()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xDD0200", Offset = "0xDD0200", VA = "0xDD0200", Slot = "8")]
	public virtual void UpdateScrollbars(bool recalculateBounds)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xDD0734", Offset = "0xDD0734", VA = "0xDD0734")]
	protected void UpdateScrollbars(UIProgressBar slider, float contentMin, float contentMax, float contentSize, float viewSize, bool inverted)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xDD0998", Offset = "0xDD0998", VA = "0xDD0998", Slot = "9")]
	public virtual void SetDragAmount(float x, float y, bool updateScrollbars)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xDD0CE4", Offset = "0xDD0CE4", VA = "0xDD0CE4")]
	public void InvalidateBounds()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xDD0CEC", Offset = "0xDD0CEC", VA = "0xDD0CEC")]
	[ContextMenu("Reset Clipping Position")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xDD0DDC", Offset = "0xDD0DDC", VA = "0xDD0DDC")]
	public void UpdatePosition()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xDD0F74", Offset = "0xDD0F74", VA = "0xDD0F74")]
	public void OnScrollBar()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xDD1064", Offset = "0xDD1064", VA = "0xDD1064", Slot = "10")]
	public virtual void MoveRelative(Vector3 relative)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xDD10F8", Offset = "0xDD10F8", VA = "0xDD10F8")]
	public void MoveAbsolute(Vector3 absolute)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xDBD680", Offset = "0xDBD680", VA = "0xDBD680")]
	public void Press(bool pressed)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xDBDF50", Offset = "0xDBDF50", VA = "0xDBDF50")]
	public void Drag()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xDBE5EC", Offset = "0xDBE5EC", VA = "0xDBE5EC")]
	public void Scroll(float delta)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xDD11A4", Offset = "0xDD11A4", VA = "0xDD11A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xDBE7B8", Offset = "0xDBE7B8", VA = "0xDBE7B8")]
	public void OnPan(Vector2 delta)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xDD1804", Offset = "0xDD1804", VA = "0xDD1804")]
	public UIScrollView()
	{
	}
}
[Token(Token = "0x200012D")]
public class UIShowControlScheme : MonoBehaviour
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool mouse;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool touch;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool controller;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xDD1AAC", Offset = "0xDD1AAC", VA = "0xDD1AAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xDD1CA4", Offset = "0xDD1CA4", VA = "0xDD1CA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xDD1BBC", Offset = "0xDD1BBC", VA = "0xDD1BBC")]
	private void OnScheme()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xDD1DAC", Offset = "0xDD1DAC", VA = "0xDD1DAC")]
	public UIShowControlScheme()
	{
	}
}
[Token(Token = "0x200012E")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Interaction/NGUI Slider")]
public class UISlider : UIProgressBar
{
	[Token(Token = "0x200012F")]
	private enum Direction
	{
		[Token(Token = "0x4000675")]
		Horizontal,
		[Token(Token = "0x4000676")]
		Vertical,
		[Token(Token = "0x4000677")]
		Upgraded
	}

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	private Transform foreground;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	private float rawValue;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	[HideInInspector]
	private Direction direction;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	protected bool mInverted;

	[Token(Token = "0x170000A8")]
	public bool isColliderEnabled
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xDD1DBC", Offset = "0xDD1DBC", VA = "0xDD1DBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A9")]
	[Obsolete("Use 'value' instead")]
	public float sliderValue
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xDD1EDC", Offset = "0xDD1EDC", VA = "0xDD1EDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xDD1EE4", Offset = "0xDD1EE4", VA = "0xDD1EE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	[Obsolete("Use 'fillDirection' instead")]
	public bool inverted
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xDD1EEC", Offset = "0xDD1EEC", VA = "0xDD1EEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600066B")]
		[Address(RVA = "0xDD1EF4", Offset = "0xDD1EF4", VA = "0xDD1EF4")]
		set
		{
		}
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xDD1EF8", Offset = "0xDD1EF8", VA = "0xDD1EF8", Slot = "4")]
	protected override void Upgrade()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xDD1FD0", Offset = "0xDD1FD0", VA = "0xDD1FD0", Slot = "5")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xDD24A8", Offset = "0xDD24A8", VA = "0xDD24A8")]
	protected void OnPressBackground(GameObject go, bool isPressed)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xDD2584", Offset = "0xDD2584", VA = "0xDD2584")]
	protected void OnDragBackground(GameObject go, Vector2 delta)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xDD2634", Offset = "0xDD2634", VA = "0xDD2634")]
	protected void OnPressForeground(GameObject go, bool isPressed)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xDD277C", Offset = "0xDD277C", VA = "0xDD277C")]
	protected void OnDragForeground(GameObject go, Vector2 delta)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xDD2840", Offset = "0xDD2840", VA = "0xDD2840", Slot = "8")]
	public override void OnPan(Vector2 delta)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xDD2894", Offset = "0xDD2894", VA = "0xDD2894")]
	public UISlider()
	{
	}
}
[Token(Token = "0x2000130")]
[AddComponentMenu("NGUI/Interaction/Sound Volume")]
[RequireComponent(typeof(UISlider))]
public class UISoundVolume : MonoBehaviour
{
	[Token(Token = "0x6000674")]
	[Address(RVA = "0xDD28A8", Offset = "0xDD28A8", VA = "0xDD28A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xDD2ABC", Offset = "0xDD2ABC", VA = "0xDD2ABC")]
	private void OnChange()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xDD2B4C", Offset = "0xDD2B4C", VA = "0xDD2B4C")]
	public UISoundVolume()
	{
	}
}
[Token(Token = "0x2000131")]
[AddComponentMenu("NGUI/Interaction/Table")]
public class UITable : UIWidgetContainer
{
	[Token(Token = "0x2000132")]
	public delegate void OnReposition();

	[Token(Token = "0x2000133")]
	[DoNotObfuscateNGUI]
	public enum Direction
	{
		[Token(Token = "0x4000686")]
		Down,
		[Token(Token = "0x4000687")]
		Up
	}

	[Token(Token = "0x2000134")]
	[DoNotObfuscateNGUI]
	public enum Sorting
	{
		[Token(Token = "0x4000689")]
		None,
		[Token(Token = "0x400068A")]
		Alphabetic,
		[Token(Token = "0x400068B")]
		Horizontal,
		[Token(Token = "0x400068C")]
		Vertical,
		[Token(Token = "0x400068D")]
		Custom
	}

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int columns;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Direction direction;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sorting sorting;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UIWidget.Pivot pivot;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIWidget.Pivot cellAlignment;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideInactive;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool keepWithinPanel;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 padding;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnReposition onReposition;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Comparison<Transform> onCustomSort;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected UIPanel mPanel;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool mInitDone;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	protected bool mReposition;

	[Token(Token = "0x170000AB")]
	public bool repositionNow
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xDD2B54", Offset = "0xDD2B54", VA = "0xDD2B54")]
		set
		{
		}
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xDD2B70", Offset = "0xDD2B70", VA = "0xDD2B70")]
	public List<Transform> GetChildList()
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xDD2E58", Offset = "0xDD2E58", VA = "0xDD2E58", Slot = "4")]
	protected virtual void Sort(List<Transform> list)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xDD2EF4", Offset = "0xDD2EF4", VA = "0xDD2EF4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xDD2F2C", Offset = "0xDD2F2C", VA = "0xDD2F2C", Slot = "6")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xDD2FC4", Offset = "0xDD2FC4", VA = "0xDD2FC4", Slot = "7")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xDD2FF8", Offset = "0xDD2FF8", VA = "0xDD2FF8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xDD307C", Offset = "0xDD307C", VA = "0xDD307C")]
	protected void RepositionVariableSize(List<Transform> children)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xDD3AB0", Offset = "0xDD3AB0", VA = "0xDD3AB0", Slot = "8")]
	[ContextMenu("Execute")]
	public virtual void Reposition()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xDD3C6C", Offset = "0xDD3C6C", VA = "0xDD3C6C")]
	public UITable()
	{
	}
}
[Token(Token = "0x2000135")]
[AddComponentMenu("NGUI/Interaction/Toggle")]
[ExecuteInEditMode]
public class UIToggle : UIWidgetContainer
{
	[Token(Token = "0x2000136")]
	public delegate bool Validate(bool choice);

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BetterList<UIToggle> list;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UIToggle current;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int group;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIWidget activeSprite;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool invertSpriteState;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation activeAnimation;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UITweener tween;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool startsActive;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool instantTween;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool optionCanBeNone;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<EventDelegate> onChange;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Validate validator;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private UISprite checkSprite;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	[SerializeField]
	private Animation checkAnimation;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	private GameObject eventReceiver;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	private string functionName;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	private bool startsChecked;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool mIsActive;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool mStarted;

	[Token(Token = "0x170000AC")]
	public bool value
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xDD3DAC", Offset = "0xDD3DAC", VA = "0xDD3DAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xDD3DC8", Offset = "0xDD3DC8", VA = "0xDD3DC8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool isColliderEnabled
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xDD45B4", Offset = "0xDD45B4", VA = "0xDD45B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AE")]
	[Obsolete("Use 'value' instead")]
	public bool isChecked
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xDD46D4", Offset = "0xDD46D4", VA = "0xDD46D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xDD46F0", Offset = "0xDD46F0", VA = "0xDD46F0")]
		set
		{
		}
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xDD46F8", Offset = "0xDD46F8", VA = "0xDD46F8")]
	public static UIToggle GetActiveToggle(int group)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xDD4810", Offset = "0xDD4810", VA = "0xDD4810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xDD4890", Offset = "0xDD4890", VA = "0xDD4890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xDD4910", Offset = "0xDD4910", VA = "0xDD4910")]
	public void Start()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xDD4C0C", Offset = "0xDD4C0C", VA = "0xDD4C0C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xDD3DFC", Offset = "0xDD3DFC", VA = "0xDD3DFC")]
	public void Set(bool state, bool notify = true)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xDD5808", Offset = "0xDD5808", VA = "0xDD5808")]
	public UIToggle()
	{
	}
}
[Token(Token = "0x2000137")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Interaction/Toggled Components")]
[RequireComponent(typeof(UIToggle))]
public class UIToggledComponents : MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MonoBehaviour> activate;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MonoBehaviour> deactivate;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private MonoBehaviour target;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private bool inverse;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xDD5ABC", Offset = "0xDD5ABC", VA = "0xDD5ABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xDD5CB0", Offset = "0xDD5CB0", VA = "0xDD5CB0")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xDD5E40", Offset = "0xDD5E40", VA = "0xDD5E40")]
	public UIToggledComponents()
	{
	}
}
[Token(Token = "0x2000138")]
[AddComponentMenu("NGUI/Interaction/Toggled Objects")]
public class UIToggledObjects : MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> activate;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> deactivate;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private bool inverse;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xDD5E48", Offset = "0xDD5E48", VA = "0xDD5E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xDD603C", Offset = "0xDD603C", VA = "0xDD603C")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xDD617C", Offset = "0xDD617C", VA = "0xDD617C")]
	private void Set(GameObject go, bool state)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xDD622C", Offset = "0xDD622C", VA = "0xDD622C")]
	public UIToggledObjects()
	{
	}
}
[Token(Token = "0x2000139")]
[AddComponentMenu("NGUI/Interaction/Widget Container")]
public class UIWidgetContainer : MonoBehaviour
{
	[Token(Token = "0x600069D")]
	[Address(RVA = "0xDD3CC8", Offset = "0xDD3CC8", VA = "0xDD3CC8")]
	public UIWidgetContainer()
	{
	}
}
[Token(Token = "0x200013A")]
[AddComponentMenu("NGUI/Interaction/Wrap Content")]
public class UIWrapContent : MonoBehaviour
{
	[Token(Token = "0x200013B")]
	public delegate void OnInitializeItem(GameObject go, int wrapIndex, int realIndex);

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int itemSize;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool cullContent;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minIndex;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxIndex;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideInactive;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnInitializeItem onInitializeItem;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Transform mTrans;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected UIPanel mPanel;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected UIScrollView mScroll;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool mHorizontal;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	protected bool mFirstTime;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected List<Transform> mChildren;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xDD6234", Offset = "0xDD6234", VA = "0xDD6234", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xDD633C", Offset = "0xDD633C", VA = "0xDD633C", Slot = "5")]
	protected virtual void OnMove(UIPanel panel)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xDD6348", Offset = "0xDD6348", VA = "0xDD6348", Slot = "6")]
	[ContextMenu("Sort Based on Scroll Movement")]
	public virtual void SortBasedOnScrollMovement()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xDD66D8", Offset = "0xDD66D8", VA = "0xDD66D8", Slot = "7")]
	[ContextMenu("Sort Alphabetically")]
	public virtual void SortAlphabetically()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xDD6578", Offset = "0xDD6578", VA = "0xDD6578")]
	protected bool CacheScrollView()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xDD68D4", Offset = "0xDD68D4", VA = "0xDD68D4", Slot = "8")]
	protected virtual void ResetChildPositions()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xDD69C0", Offset = "0xDD69C0", VA = "0xDD69C0", Slot = "9")]
	public virtual void WrapContent()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xDD70AC", Offset = "0xDD70AC", VA = "0xDD70AC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xDD70C0", Offset = "0xDD70C0", VA = "0xDD70C0", Slot = "10")]
	protected virtual void UpdateItem(Transform item, int index)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xDD7264", Offset = "0xDD7264", VA = "0xDD7264")]
	public UIWrapContent()
	{
	}
}
[Token(Token = "0x200013C")]
[AddComponentMenu("NGUI/Internal/Active Animation")]
public class ActiveAnimation : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ActiveAnimation current;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventDelegate> onFinished;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject eventReceiver;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string callWhenFinished;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animation mAnim;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Direction mLastDirection;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Direction mDisableDirection;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool mNotify;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator mAnimator;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mClip;

	[Token(Token = "0x170000AF")]
	private float playbackTime
	{
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xDD747C", Offset = "0xDD747C", VA = "0xDD747C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B0")]
	public bool isPlaying
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xDD74EC", Offset = "0xDD74EC", VA = "0xDD74EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xDD5160", Offset = "0xDD5160", VA = "0xDD5160")]
	public void Finish()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xDD7900", Offset = "0xDD7900", VA = "0xDD7900")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xDD7CB8", Offset = "0xDD7CB8", VA = "0xDD7CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xDD7D8C", Offset = "0xDD7D8C", VA = "0xDD7D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xDD83F0", Offset = "0xDD83F0", VA = "0xDD83F0")]
	private void Play(string clipName, Direction playDirection)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xDD5540", Offset = "0xDD5540", VA = "0xDD5540")]
	public static ActiveAnimation Play(Animation anim, string clipName, Direction playDirection, EnableCondition enableBeforePlay, DisableCondition disableCondition)
	{
		return null;
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xDD89A8", Offset = "0xDD89A8", VA = "0xDD89A8")]
	public static ActiveAnimation Play(Animation anim, string clipName, Direction playDirection)
	{
		return null;
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xDD89B4", Offset = "0xDD89B4", VA = "0xDD89B4")]
	public static ActiveAnimation Play(Animation anim, Direction playDirection)
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xDD4E88", Offset = "0xDD4E88", VA = "0xDD4E88")]
	public static ActiveAnimation Play(Animator anim, string clipName, Direction playDirection, EnableCondition enableBeforePlay, DisableCondition disableCondition)
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xDD89C8", Offset = "0xDD89C8", VA = "0xDD89C8")]
	public ActiveAnimation()
	{
	}
}
[Token(Token = "0x200013D")]
public class BetterList<T>
{
	[Token(Token = "0x200013E")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200013F")]
	[CompilerGenerated]
	private sealed class <GetEnumerator>d__2 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BetterList<T> <>4__this;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000B2")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60006D0")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D2")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CD")]
		[DebuggerHidden]
		public <GetEnumerator>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60006CE")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CF")]
		[DebuggerStepThrough]
		[DebuggerHidden]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D1")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] buffer;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x170000B1")]
	[Obsolete("Access the list.buffer[index] instead -- direct array access avoids a copy, so it can be much faster")]
	[DebuggerHidden]
	public T this[int i]
	{
		[Token(Token = "0x60006B9")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60006BA")]
		set
		{
		}
	}

	[Token(Token = "0x60006B8")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	[IteratorStateMachine(typeof(BetterList<>.<GetEnumerator>d__2))]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	private void AllocateMore()
	{
	}

	[Token(Token = "0x60006BC")]
	private void Trim()
	{
	}

	[Token(Token = "0x60006BD")]
	public void Clear()
	{
	}

	[Token(Token = "0x60006BE")]
	public void Release()
	{
	}

	[Token(Token = "0x60006BF")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60006C0")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60006C1")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60006C3")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60006C5")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60006C6")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60006C7")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60006C8")]
	public BetterList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000140")]
public class BMFont
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	[SerializeField]
	private int mSize;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	[SerializeField]
	private int mBase;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private int mWidth;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	[SerializeField]
	private int mHeight;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string mSpriteName;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private List<BMGlyph> mSaved;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, BMGlyph> mDict;

	[Token(Token = "0x170000B4")]
	public bool isValid
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xDD8A74", Offset = "0xDD8A74", VA = "0xDD8A74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public int charSize
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xDD8AC4", Offset = "0xDD8AC4", VA = "0xDD8AC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xDD8ACC", Offset = "0xDD8ACC", VA = "0xDD8ACC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public int baseOffset
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xDD8AD4", Offset = "0xDD8AD4", VA = "0xDD8AD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xDD8ADC", Offset = "0xDD8ADC", VA = "0xDD8ADC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public int texWidth
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xDD8AE4", Offset = "0xDD8AE4", VA = "0xDD8AE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xDD8AEC", Offset = "0xDD8AEC", VA = "0xDD8AEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public int texHeight
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xDD8AF4", Offset = "0xDD8AF4", VA = "0xDD8AF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xDD8AFC", Offset = "0xDD8AFC", VA = "0xDD8AFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public int glyphCount
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xDD8B04", Offset = "0xDD8B04", VA = "0xDD8B04")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BA")]
	public string spriteName
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xDD8B60", Offset = "0xDD8B60", VA = "0xDD8B60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xDD8B68", Offset = "0xDD8B68", VA = "0xDD8B68")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public List<BMGlyph> glyphs
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xDD8B70", Offset = "0xDD8B70", VA = "0xDD8B70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xDD8B78", Offset = "0xDD8B78", VA = "0xDD8B78")]
	public BMGlyph GetGlyph(int index, bool createIfMissing)
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xDD8D84", Offset = "0xDD8D84", VA = "0xDD8D84")]
	public BMGlyph GetGlyph(int index)
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xDD8D8C", Offset = "0xDD8D8C", VA = "0xDD8D8C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xDD8E20", Offset = "0xDD8E20", VA = "0xDD8E20")]
	public void Trim(int xMin, int yMin, int xMax, int yMax)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xDD8F80", Offset = "0xDD8F80", VA = "0xDD8F80")]
	public BMFont()
	{
	}
}
[Serializable]
[Token(Token = "0x2000141")]
public class BMGlyph
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int x;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int y;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int width;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int height;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int offsetX;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int offsetY;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int advance;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int channel;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<int> kerning;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xDD9060", Offset = "0xDD9060", VA = "0xDD9060")]
	public int GetKerning(int previousChar)
	{
		return default(int);
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xDD912C", Offset = "0xDD912C", VA = "0xDD912C")]
	public void SetKerning(int previousChar, int amount)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xDD8EF4", Offset = "0xDD8EF4", VA = "0xDD8EF4")]
	public void Trim(int xMin, int yMin, int xMax, int yMax)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xDD8D7C", Offset = "0xDD8D7C", VA = "0xDD8D7C")]
	public BMGlyph()
	{
	}
}
[Serializable]
[Token(Token = "0x2000142")]
public class BMSymbol
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string sequence;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string spriteName;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool colored;

	[NonSerialized]
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UISpriteData mSprite;

	[NonSerialized]
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mIsValid;

	[NonSerialized]
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int mLength;

	[NonSerialized]
	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int mOffsetX;

	[NonSerialized]
	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int mOffsetY;

	[NonSerialized]
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int mWidth;

	[NonSerialized]
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int mHeight;

	[NonSerialized]
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int mAdvance;

	[NonSerialized]
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Rect mUV;

	[Token(Token = "0x170000BC")]
	public int length
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xDD9324", Offset = "0xDD9324", VA = "0xDD9324")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BD")]
	public int offsetX
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xDD9350", Offset = "0xDD9350", VA = "0xDD9350")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BE")]
	public int offsetY
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xDD9358", Offset = "0xDD9358", VA = "0xDD9358")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BF")]
	public int width
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xDD9360", Offset = "0xDD9360", VA = "0xDD9360")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C0")]
	public int height
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xDD9368", Offset = "0xDD9368", VA = "0xDD9368")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C1")]
	public int paddedHeight
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xDD9370", Offset = "0xDD9370", VA = "0xDD9370")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C2")]
	public int advance
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xDD9394", Offset = "0xDD9394", VA = "0xDD9394")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C3")]
	public Rect uvRect
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xDD939C", Offset = "0xDD939C", VA = "0xDD939C")]
		get
		{
			return default(Rect);
		}
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xDD93A8", Offset = "0xDD93A8", VA = "0xDD93A8")]
	public void MarkAsChanged()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xDD93B0", Offset = "0xDD93B0", VA = "0xDD93B0")]
	public bool Validate(INGUIAtlas atlas)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xDD9730", Offset = "0xDD9730", VA = "0xDD9730")]
	public BMSymbol()
	{
	}
}
[Token(Token = "0x2000143")]
public class ByteReader
{
	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private byte[] mBuffer;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int mOffset;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BetterList<string> mTemp;

	[Token(Token = "0x170000C4")]
	public bool canRead
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xDD98E4", Offset = "0xDD98E4", VA = "0xDD98E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xDD9738", Offset = "0xDD9738", VA = "0xDD9738")]
	public ByteReader(byte[] bytes)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xDD9768", Offset = "0xDD9768", VA = "0xDD9768")]
	public ByteReader(TextAsset asset)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xDD97AC", Offset = "0xDD97AC", VA = "0xDD97AC")]
	public static ByteReader Open(string path)
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xDD9908", Offset = "0xDD9908", VA = "0xDD9908")]
	private static string ReadLine(byte[] buffer, int start, int count)
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xDD9950", Offset = "0xDD9950", VA = "0xDD9950")]
	public string ReadLine()
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xDD9958", Offset = "0xDD9958", VA = "0xDD9958")]
	public string ReadLine(bool skipEmptyLines)
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xDD9A88", Offset = "0xDD9A88", VA = "0xDD9A88")]
	public Dictionary<string, string> ReadDictionary()
	{
		return null;
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xDD9C68", Offset = "0xDD9C68", VA = "0xDD9C68")]
	public BetterList<string> ReadCSV()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000144")]
public class EventDelegate
{
	[Serializable]
	[Token(Token = "0x2000145")]
	public class Parameter
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Object obj;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string field;

		[NonSerialized]
		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object mValue;

		[NonSerialized]
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type expectedType;

		[NonSerialized]
		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cached;

		[NonSerialized]
		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PropertyInfo propInfo;

		[NonSerialized]
		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FieldInfo fieldInfo;

		[Token(Token = "0x170000CA")]
		public object value
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xDDB734", Offset = "0xDDB734", VA = "0xDDB734")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000721")]
			[Address(RVA = "0xDDC6CC", Offset = "0xDDC6CC", VA = "0xDDC6CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public Type type
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xDDB9A8", Offset = "0xDDB9A8", VA = "0xDDB9A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xDDAFE4", Offset = "0xDDAFE4", VA = "0xDDAFE4")]
		public Parameter()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xDDC560", Offset = "0xDDC560", VA = "0xDDC560")]
		public Parameter(UnityEngine.Object obj, string field)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xDDC624", Offset = "0xDDC624", VA = "0xDDC624")]
		public Parameter(object val)
		{
		}
	}

	[Token(Token = "0x2000146")]
	public delegate void Callback();

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private MonoBehaviour mTarget;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string mMethodName;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Parameter[] mParameters;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool oneShot;

	[NonSerialized]
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Callback mCachedCallback;

	[NonSerialized]
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mRawDelegate;

	[NonSerialized]
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool mCached;

	[NonSerialized]
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MethodInfo mMethod;

	[NonSerialized]
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParameterInfo[] mParameterInfos;

	[NonSerialized]
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private object[] mArgs;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_Hash;

	[Token(Token = "0x170000C5")]
	public MonoBehaviour target
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xDDA134", Offset = "0xDDA134", VA = "0xDDA134")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xDDA13C", Offset = "0xDDA13C", VA = "0xDDA13C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public string methodName
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xDDA194", Offset = "0xDDA194", VA = "0xDDA194")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xDDA19C", Offset = "0xDDA19C", VA = "0xDDA19C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public Parameter[] parameters
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0xDDA1F4", Offset = "0xDDA1F4", VA = "0xDDA1F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	public bool isValid
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0xDDA91C", Offset = "0xDDA91C", VA = "0xDDA91C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	public bool isEnabled
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xDDA9C8", Offset = "0xDDA9C8", VA = "0xDDA9C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xDDAAA0", Offset = "0xDDAAA0", VA = "0xDDAAA0")]
	public EventDelegate()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xDDAAA8", Offset = "0xDDAAA8", VA = "0xDDAAA8")]
	public EventDelegate(Callback call)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xDDAC80", Offset = "0xDDAC80", VA = "0xDDAC80")]
	public EventDelegate(MonoBehaviour target, string methodName)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xDDACF4", Offset = "0xDDACF4", VA = "0xDDACF4")]
	private static string GetMethodName(Callback callback)
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xDDAD1C", Offset = "0xDDAD1C", VA = "0xDDAD1C")]
	private static bool IsValid(Callback callback)
	{
		return default(bool);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xDDAD40", Offset = "0xDDAD40", VA = "0xDDAD40", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xDDAF0C", Offset = "0xDDAF0C", VA = "0xDDAF0C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xDDAAD4", Offset = "0xDDAAD4", VA = "0xDDAAD4")]
	private void Set(Callback call)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xDDACB4", Offset = "0xDDACB4", VA = "0xDDACB4")]
	public void Set(MonoBehaviour target, string methodName)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xDDA218", Offset = "0xDDA218", VA = "0xDDA218")]
	private void Cache()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xDDB078", Offset = "0xDDB078", VA = "0xDDB078")]
	public bool Execute()
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xDDAF64", Offset = "0xDDAF64", VA = "0xDDAF64")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xDDBA78", Offset = "0xDDBA78", VA = "0xDDBA78", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xDD4CBC", Offset = "0xDD4CBC", VA = "0xDD4CBC")]
	public static void Execute(List<EventDelegate> list)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xDD4B70", Offset = "0xDD4B70", VA = "0xDD4B70")]
	public static bool IsValid(List<EventDelegate> list)
	{
		return default(bool);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xDDBBC4", Offset = "0xDDBBC4", VA = "0xDDBBC4")]
	public static EventDelegate Set(List<EventDelegate> list, Callback callback)
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xDDBCEC", Offset = "0xDDBCEC", VA = "0xDDBCEC")]
	public static void Set(List<EventDelegate> list, EventDelegate del)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xDD2A54", Offset = "0xDD2A54", VA = "0xDD2A54")]
	public static EventDelegate Add(List<EventDelegate> list, Callback callback)
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xDDBDD4", Offset = "0xDDBDD4", VA = "0xDDBDD4")]
	public static EventDelegate Add(List<EventDelegate> list, Callback callback, bool oneShot)
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xDDBF88", Offset = "0xDDBF88", VA = "0xDDBF88")]
	public static void Add(List<EventDelegate> list, EventDelegate ev)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xDDBFF8", Offset = "0xDDBFF8", VA = "0xDDBFF8")]
	public static void Add(List<EventDelegate> list, EventDelegate ev, bool oneShot)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xDDC33C", Offset = "0xDDC33C", VA = "0xDDC33C")]
	public static bool Remove(List<EventDelegate> list, Callback callback)
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xDDC414", Offset = "0xDDC414", VA = "0xDDC414")]
	public static bool Remove(List<EventDelegate> list, EventDelegate ev)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000147")]
public static class Localization
{
	[Token(Token = "0x2000148")]
	public delegate byte[] LoadFunction(string path);

	[Token(Token = "0x2000149")]
	public delegate void OnLocalizeNotification();

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadFunction loadFunction;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OnLocalizeNotification onLocalize;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool localizationHasBeenSet;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string[] mLanguages;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<string, string> mOldDictionary;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<string, string[]> mDictionary;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<string, string> mReplacement;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int mLanguageIndex;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string mLanguage;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool mMerging;

	[Token(Token = "0x170000CC")]
	public static Dictionary<string, string[]> dictionary
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0xDDC714", Offset = "0xDDC714", VA = "0xDDC714")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000728")]
		[Address(RVA = "0xDDCA88", Offset = "0xDDCA88", VA = "0xDDCA88")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public static string[] knownLanguages
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0xDDCAF4", Offset = "0xDDCAF4", VA = "0xDDCAF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public static string language
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0xDDCBC8", Offset = "0xDDCBC8", VA = "0xDDCBC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072B")]
		[Address(RVA = "0xDDCE7C", Offset = "0xDDCE7C", VA = "0xDDCE7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	[Obsolete("Localization is now always active. You no longer need to check this property.")]
	public static bool isActive
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xDDF994", Offset = "0xDDF994", VA = "0xDDF994")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xDDCF1C", Offset = "0xDDCF1C", VA = "0xDDCF1C")]
	public static bool Reload()
	{
		return default(bool);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xDDC7E8", Offset = "0xDDC7E8", VA = "0xDDC7E8")]
	private static bool LoadDictionary(string value, bool merge = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xDDCCBC", Offset = "0xDDCCBC", VA = "0xDDCCBC")]
	private static bool LoadAndSelect(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xDDD37C", Offset = "0xDDD37C", VA = "0xDDD37C")]
	public static void Load(TextAsset asset)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xDDD088", Offset = "0xDDD088", VA = "0xDDD088")]
	public static void Set(string languageName, byte[] bytes)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xDDD5EC", Offset = "0xDDD5EC", VA = "0xDDD5EC")]
	public static void ReplaceKey(string key, string val)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xDDD6C0", Offset = "0xDDD6C0", VA = "0xDDD6C0")]
	public static void ClearReplacements()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xDDD738", Offset = "0xDDD738", VA = "0xDDD738")]
	public static bool LoadCSV(TextAsset asset, bool merge = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xDDD024", Offset = "0xDDD024", VA = "0xDDD024")]
	public static bool LoadCSV(byte[] bytes, bool merge = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xDDE1E4", Offset = "0xDDE1E4", VA = "0xDDE1E4")]
	private static bool HasLanguage(string languageName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xDDD7B0", Offset = "0xDDD7B0", VA = "0xDDD7B0")]
	private static bool LoadCSV(byte[] bytes, TextAsset asset, bool merge = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xDDE2CC", Offset = "0xDDE2CC", VA = "0xDDE2CC")]
	private static void AddCSV(BetterList<string> newValues, string[] newLanguages, Dictionary<string, int> languageIndices)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xDDE5B8", Offset = "0xDDE5B8", VA = "0xDDE5B8")]
	private static string[] ExtractStrings(BetterList<string> added, string[] newLanguages, Dictionary<string, int> languageIndices)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xDDD13C", Offset = "0xDDD13C", VA = "0xDDD13C")]
	private static bool SelectLanguage(string language)
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xDDD428", Offset = "0xDDD428", VA = "0xDDD428")]
	public static void Set(string languageName, Dictionary<string, string> dictionary)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xDDE884", Offset = "0xDDE884", VA = "0xDDE884")]
	public static void Set(string key, string value)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xDDE990", Offset = "0xDDE990", VA = "0xDDE990")]
	public static bool Has(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xDDEDCC", Offset = "0xDDEDCC", VA = "0xDDEDCC")]
	public static string Get(string key, string fallback)
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xDDEE54", Offset = "0xDDEE54", VA = "0xDDEE54")]
	public static string Get(string key, bool warnIfMissing = true)
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xDDF464", Offset = "0xDDF464", VA = "0xDDF464")]
	public static string Format(string key, object parameter)
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xDDF598", Offset = "0xDDF598", VA = "0xDDF598")]
	public static string Format(string key, object arg0, object arg1)
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xDDF6D4", Offset = "0xDDF6D4", VA = "0xDDF6D4")]
	public static string Format(string key, object arg0, object arg1, object arg2)
	{
		return null;
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xDDF820", Offset = "0xDDF820", VA = "0xDDF820")]
	public static string Format(string key, params object[] parameters)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xDDF99C", Offset = "0xDDF99C", VA = "0xDDF99C")]
	[Obsolete("Use Localization.Get instead")]
	public static string Localize(string key)
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xDDF9F4", Offset = "0xDDF9F4", VA = "0xDDF9F4")]
	public static bool Exists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xDDFBD8", Offset = "0xDDFBD8", VA = "0xDDFBD8")]
	public static void Set(string language, string key, string text)
	{
	}
}
[Token(Token = "0x200014A")]
public class MinMaxRangeAttribute : PropertyAttribute
{
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minLimit;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxLimit;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xDE0550", Offset = "0xDE0550", VA = "0xDE0550")]
	public MinMaxRangeAttribute(float minLimit, float maxLimit)
	{
	}
}
[Token(Token = "0x200014B")]
[AddComponentMenu("NGUI/Internal/Debug")]
public class NGUIDebug : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool mRayDebug;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<string> mLines;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static NGUIDebug mInstance;

	[Token(Token = "0x170000D0")]
	public static bool debugRaycast
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xDE057C", Offset = "0xDE057C", VA = "0xDE057C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000752")]
		[Address(RVA = "0xDE05D4", Offset = "0xDE05D4", VA = "0xDE05D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xDE066C", Offset = "0xDE066C", VA = "0xDE066C")]
	public static void CreateInstance()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xDE07C4", Offset = "0xDE07C4", VA = "0xDE07C4")]
	private static void LogString(string text)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xDE0954", Offset = "0xDE0954", VA = "0xDE0954")]
	public static void Log(params object[] objs)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xDE0A58", Offset = "0xDE0A58", VA = "0xDE0A58")]
	public static void Log(string s)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xDE0B24", Offset = "0xDE0B24", VA = "0xDE0B24")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xDE0BBC", Offset = "0xDE0BBC", VA = "0xDE0BBC")]
	public static void DrawBounds(Bounds b)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xDE0D24", Offset = "0xDE0D24", VA = "0xDE0D24")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xDE1680", Offset = "0xDE1680", VA = "0xDE1680")]
	public NGUIDebug()
	{
	}
}
[Token(Token = "0x200014C")]
public static class NGUIMath
{
	[NonSerialized]
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<UIWidget> s_widgets;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xDE1738", Offset = "0xDE1738", VA = "0xDE1738")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static float Lerp(float from, float to, float factor)
	{
		return default(float);
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xDE1750", Offset = "0xDE1750", VA = "0xDE1750")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static int ClampIndex(int val, int max)
	{
		return default(int);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xDE176C", Offset = "0xDE176C", VA = "0xDE176C")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static int RepeatIndex(int val, int max)
	{
		return default(int);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xDE179C", Offset = "0xDE179C", VA = "0xDE179C")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xDE17F8", Offset = "0xDE17F8", VA = "0xDE17F8")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static float Wrap01(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xDE1870", Offset = "0xDE1870", VA = "0xDE1870")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static int HexToDecimal(char ch)
	{
		return default(int);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xDE189C", Offset = "0xDE189C", VA = "0xDE189C")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static char DecimalToHexChar(int num)
	{
		return default(char);
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xDE18C4", Offset = "0xDE18C4", VA = "0xDE18C4")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static string DecimalToHex8(int num)
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xDE1928", Offset = "0xDE1928", VA = "0xDE1928")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static string DecimalToHex24(int num)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xDE198C", Offset = "0xDE198C", VA = "0xDE198C")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static string DecimalToHex32(int num)
	{
		return null;
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xDE19DC", Offset = "0xDE19DC", VA = "0xDE19DC")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static int ColorToInt(Color c)
	{
		return default(int);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xDE1D14", Offset = "0xDE1D14", VA = "0xDE1D14")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static Color IntToColor(int val)
	{
		return default(Color);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xDE1D50", Offset = "0xDE1D50", VA = "0xDE1D50")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static string IntToBinary(int val, int bits)
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xDE1E48", Offset = "0xDE1E48", VA = "0xDE1E48")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static Color HexToColor(uint val)
	{
		return default(Color);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xDD9670", Offset = "0xDD9670", VA = "0xDD9670")]
	public static Rect ConvertToTexCoords(Rect rect, int width, int height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xDE1ED0", Offset = "0xDE1ED0", VA = "0xDE1ED0")]
	public static Rect ConvertToPixels(Rect rect, int width, int height, bool round)
	{
		return default(Rect);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xDE2304", Offset = "0xDE2304", VA = "0xDE2304")]
	public static Rect MakePixelPerfect(Rect rect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xDE2694", Offset = "0xDE2694", VA = "0xDE2694")]
	public static Rect MakePixelPerfect(Rect rect, int width, int height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xDE2AB0", Offset = "0xDE2AB0", VA = "0xDE2AB0")]
	public static Vector2 ConstrainRect(Vector2 minRect, Vector2 maxRect, Vector2 minArea, Vector2 maxArea)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xDE2BA8", Offset = "0xDE2BA8", VA = "0xDE2BA8")]
	public static Bounds CalculateAbsoluteWidgetBounds(Transform trans)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xDD3A00", Offset = "0xDD3A00", VA = "0xDD3A00")]
	public static Bounds CalculateRelativeWidgetBounds(Transform trans)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xDD38EC", Offset = "0xDD38EC", VA = "0xDD38EC")]
	public static Bounds CalculateRelativeWidgetBounds(Transform trans, bool considerInactive)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xDE32AC", Offset = "0xDE32AC", VA = "0xDE32AC")]
	public static Bounds CalculateRelativeWidgetBounds(Transform relativeTo, Transform content)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xDE3038", Offset = "0xDE3038", VA = "0xDE3038")]
	public static Bounds CalculateRelativeWidgetBounds(Transform relativeTo, Transform content, bool considerInactive, bool considerChildren = true)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xDE3364", Offset = "0xDE3364", VA = "0xDE3364")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	private static void CalculateRelativeWidgetBounds(Transform content, bool considerInactive, bool isRoot, ref Matrix4x4 toLocal, ref Vector3 vMin, ref Vector3 vMax, ref bool isSet, bool considerChildren)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xDE3780", Offset = "0xDE3780", VA = "0xDE3780")]
	public static Vector3 SpringDampen(ref Vector3 velocity, float strength, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xDE3900", Offset = "0xDE3900", VA = "0xDE3900")]
	public static Vector2 SpringDampen(ref Vector2 velocity, float strength, float deltaTime)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xDE3A6C", Offset = "0xDE3A6C", VA = "0xDE3A6C")]
	public static float SpringLerp(float strength, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xDE3BA4", Offset = "0xDE3BA4", VA = "0xDE3BA4")]
	public static float SpringLerp(float from, float to, float strength, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xDE3CE8", Offset = "0xDE3CE8", VA = "0xDE3CE8")]
	public static Vector2 SpringLerp(Vector2 from, Vector2 to, float strength, float deltaTime)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xDE3D9C", Offset = "0xDE3D9C", VA = "0xDE3D9C")]
	public static Vector3 SpringLerp(Vector3 from, Vector3 to, float strength, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xDE3E6C", Offset = "0xDE3E6C", VA = "0xDE3E6C")]
	public static Quaternion SpringLerp(Quaternion from, Quaternion to, float strength, float deltaTime)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xDE3F2C", Offset = "0xDE3F2C", VA = "0xDE3F2C")]
	public static float RotateTowards(float from, float to, float maxAngle)
	{
		return default(float);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xDE4014", Offset = "0xDE4014", VA = "0xDE4014")]
	private static float DistancePointToLineSegment(Vector2 point, Vector2 a, Vector2 b)
	{
		return default(float);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDE412C", Offset = "0xDE412C", VA = "0xDE412C")]
	public static float DistanceToRectangle(Vector2[] screenPoints, Vector2 mousePos)
	{
		return default(float);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDE4328", Offset = "0xDE4328", VA = "0xDE4328")]
	public static float DistanceToRectangle(Vector3[] worldPoints, Vector2 mousePos, Camera cam)
	{
		return default(float);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xDD397C", Offset = "0xDD397C", VA = "0xDD397C")]
	public static Vector2 GetPivotOffset(UIWidget.Pivot pv)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xDE4430", Offset = "0xDE4430", VA = "0xDE4430")]
	public static UIWidget.Pivot GetPivot(Vector2 offset)
	{
		return default(UIWidget.Pivot);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xDE44AC", Offset = "0xDE44AC", VA = "0xDE44AC")]
	public static void MoveWidget(UIRect w, float x, float y)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xDE4518", Offset = "0xDE4518", VA = "0xDE4518")]
	public static void MoveRect(UIRect rect, float x, float y)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xDE47B8", Offset = "0xDE47B8", VA = "0xDE47B8")]
	public static void ResizeWidget(UIWidget w, UIWidget.Pivot pivot, float x, float y, int minWidth, int minHeight)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xDE484C", Offset = "0xDE484C", VA = "0xDE484C")]
	public static void ResizeWidget(UIWidget w, UIWidget.Pivot pivot, float x, float y, int minWidth, int minHeight, int maxWidth, int maxHeight)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xDE563C", Offset = "0xDE563C", VA = "0xDE563C")]
	public static void AdjustWidget(UIWidget w, float left, float bottom, float right, float top)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xDE4C94", Offset = "0xDE4C94", VA = "0xDE4C94")]
	public static void AdjustWidget(UIWidget w, float left, float bottom, float right, float top, int minWidth, int minHeight)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xDE4D40", Offset = "0xDE4D40", VA = "0xDE4D40")]
	public static void AdjustWidget(UIWidget w, float left, float bottom, float right, float top, int minWidth, int minHeight, int maxWidth, int maxHeight)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xDE56D8", Offset = "0xDE56D8", VA = "0xDE56D8")]
	public static int AdjustByDPI(float height)
	{
		return default(int);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xDE5808", Offset = "0xDE5808", VA = "0xDE5808")]
	public static Vector2 ScreenToPixels(Vector2 pos, Transform relativeTo)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xDE5994", Offset = "0xDE5994", VA = "0xDE5994")]
	public static Vector2 ScreenToParentPixels(Vector2 pos, Transform relativeTo)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xDE5BAC", Offset = "0xDE5BAC", VA = "0xDE5BAC")]
	public static Vector3 WorldToLocalPoint(Vector3 worldPos, Camera worldCam, Camera uiCam, Transform relativeTo)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xDE5CE8", Offset = "0xDE5CE8", VA = "0xDE5CE8")]
	public static void OverlayPosition(this Transform trans, Vector3 worldPos, Camera worldCam, Camera myCam)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xDE5E08", Offset = "0xDE5E08", VA = "0xDE5E08")]
	public static void OverlayPosition(this Transform trans, Vector3 worldPos, Camera worldCam)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xDE5F48", Offset = "0xDE5F48", VA = "0xDE5F48")]
	public static void OverlayPosition(this Transform trans, Transform target)
	{
	}
}
[Token(Token = "0x200014D")]
public static class NGUIText
{
	[Token(Token = "0x200014E")]
	[DoNotObfuscateNGUI]
	public enum Alignment
	{
		[Token(Token = "0x400072F")]
		Automatic,
		[Token(Token = "0x4000730")]
		Left,
		[Token(Token = "0x4000731")]
		Center,
		[Token(Token = "0x4000732")]
		Right,
		[Token(Token = "0x4000733")]
		Justified
	}

	[Token(Token = "0x200014F")]
	[DoNotObfuscateNGUI]
	public enum SymbolStyle
	{
		[Token(Token = "0x4000735")]
		None,
		[Token(Token = "0x4000736")]
		Normal,
		[Token(Token = "0x4000737")]
		Colored,
		[Token(Token = "0x4000738")]
		NoOutline
	}

	[Token(Token = "0x2000150")]
	public class GlyphInfo
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 v0;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 v1;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 u0;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 u1;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 u2;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 u3;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float advance;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int channel;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xDF3264", Offset = "0xDF3264", VA = "0xDF3264")]
		public GlyphInfo()
		{
		}
	}

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static INGUIFont nguiFont;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Font dynamicFont;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GlyphInfo glyph;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int spaceWidth;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int fontSize;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float fontScale;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float pixelDensity;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static FontStyle fontStyle;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Alignment alignment;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color tint;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int rectWidth;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int rectHeight;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int regionWidth;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int regionHeight;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int maxLines;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static bool gradient;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Color gradientBottom;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Color gradientTop;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static bool encoding;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static float spacingX;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static float spacingY;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static bool premultiply;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static SymbolStyle symbolStyle;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int finalSize;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float finalSpacingX;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static float finalLineHeight;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float baseline;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static bool useSymbols;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static Color mInvisible;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static BetterList<Color> mColors;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static float mAlpha;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private static CharacterInfo mTempChar;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private static BetterList<float> mSizes;

	[NonSerialized]
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private static StringBuilder mSB;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static Color s_c0;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static Color s_c1;

	[Token(Token = "0x400072C")]
	private const float sizeShrinkage = 0.75f;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static float[] mBoldOffset;

	[Token(Token = "0x170000D1")]
	private static float symbolScale
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xDE95A4", Offset = "0xDE95A4", VA = "0xDE95A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D2")]
	private static float symbolOffset
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xDE96D4", Offset = "0xDE96D4", VA = "0xDE96D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D3")]
	private static int symbolMaxHeight
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xDE97C8", Offset = "0xDE97C8", VA = "0xDE97C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xDE6178", Offset = "0xDE6178", VA = "0xDE6178")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xDE61C8", Offset = "0xDE61C8", VA = "0xDE61C8")]
	public static void Update(bool request)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xDE65C8", Offset = "0xDE65C8", VA = "0xDE65C8")]
	public static void Prepare(string text)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xDE66C8", Offset = "0xDE66C8", VA = "0xDE66C8")]
	public static BMSymbol GetSymbol(ref string text, int index, int textLength)
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xDE67E4", Offset = "0xDE67E4", VA = "0xDE67E4")]
	public static float GetGlyphWidth(int ch, int prev, float fontScale)
	{
		return default(float);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xDE6A30", Offset = "0xDE6A30", VA = "0xDE6A30")]
	public static GlyphInfo GetGlyph(int ch, int prev, float fontScale = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xDE7254", Offset = "0xDE7254", VA = "0xDE7254")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static float ParseAlpha(string text, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xDE7310", Offset = "0xDE7310", VA = "0xDE7310")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static Color ParseColor(string text, int offset = 0)
	{
		return default(Color);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xDE7374", Offset = "0xDE7374", VA = "0xDE7374")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static Color ParseColor24(string text, int offset = 0)
	{
		return default(Color);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xDE7498", Offset = "0xDE7498", VA = "0xDE7498")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static Color ParseColor32(string text, int offset)
	{
		return default(Color);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xDE75F8", Offset = "0xDE75F8", VA = "0xDE75F8")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static string EncodeColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xDE76F8", Offset = "0xDE76F8", VA = "0xDE76F8")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static string EncodeColor(string text, Color c)
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xDE7944", Offset = "0xDE7944", VA = "0xDE7944")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static string EncodeAlpha(float a)
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xDE7674", Offset = "0xDE7674", VA = "0xDE7674")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static string EncodeColor24(Color c)
	{
		return null;
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xDE7A78", Offset = "0xDE7A78", VA = "0xDE7A78")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static string EncodeColor32(Color c)
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xDE7AF8", Offset = "0xDE7AF8", VA = "0xDE7AF8")]
	public static bool ParseSymbol(string text, ref int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xDE88C4", Offset = "0xDE88C4", VA = "0xDE88C4")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static bool IsHex(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xDE7BA8", Offset = "0xDE7BA8", VA = "0xDE7BA8")]
	public static bool ParseSymbol(string text, ref int index, BetterList<Color> colors, bool premultiply, ref int sub, ref bool bold, ref bool italic, ref bool underline, ref bool strike, ref bool ignoreColor)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xDE8900", Offset = "0xDE8900", VA = "0xDE8900")]
	public static string StripSymbols(string text)
	{
		return null;
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xDE8A44", Offset = "0xDE8A44", VA = "0xDE8A44")]
	public static void Align(List<Vector3> verts, int indexOffset, float printedWidth, int elements = 4)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xDE9134", Offset = "0xDE9134", VA = "0xDE9134")]
	public static int GetExactCharacterIndex(List<Vector3> verts, List<int> indices, Vector2 pos)
	{
		return default(int);
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xDE9280", Offset = "0xDE9280", VA = "0xDE9280")]
	public static int GetApproximateCharacterIndex(List<Vector3> verts, List<int> indices, Vector2 pos)
	{
		return default(int);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xDE93BC", Offset = "0xDE93BC", VA = "0xDE93BC")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static bool IsSpace(int ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xDE93EC", Offset = "0xDE93EC", VA = "0xDE93EC")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static void EndLine(ref StringBuilder s)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xDE94D0", Offset = "0xDE94D0", VA = "0xDE94D0")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	private static void ReplaceSpaceWithNewline(ref StringBuilder s)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xDE98B8", Offset = "0xDE98B8", VA = "0xDE98B8")]
	public static Vector2 CalculatePrintedSize(string text)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xDE9F18", Offset = "0xDE9F18", VA = "0xDE9F18")]
	public static int CalculateOffsetToFit(string text)
	{
		return default(int);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xDEA480", Offset = "0xDEA480", VA = "0xDEA480")]
	public static string GetEndOfLineThatFits(string text)
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xDEA4F4", Offset = "0xDEA4F4", VA = "0xDEA4F4")]
	public static bool WrapText(string text, out string finalText, bool wrapLineColors = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xDEA568", Offset = "0xDEA568", VA = "0xDEA568")]
	public static bool WrapText(string text, out string finalText, bool keepCharCount, bool wrapLineColors, bool useEllipsis = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xDEBC6C", Offset = "0xDEBC6C", VA = "0xDEBC6C")]
	public static void Print(string text, List<Vector3> verts, List<Vector2> uvs, List<Color> cols, [Optional] List<Vector3> sverts, [Optional] List<Vector2> suvs, [Optional] List<Color> scols)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xDEEFF8", Offset = "0xDEEFF8", VA = "0xDEEFF8")]
	public static void PrintApproximateCharacterPositions(string text, List<Vector3> verts, List<int> indices)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xDEF8A0", Offset = "0xDEF8A0", VA = "0xDEF8A0")]
	public static void PrintExactCharacterPositions(string text, List<Vector3> verts, List<int> indices)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xDF0108", Offset = "0xDF0108", VA = "0xDF0108")]
	public static void PrintCaretAndSelection(string text, int start, int end, List<Vector3> caret, List<Vector3> highlight)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xDF15C8", Offset = "0xDF15C8", VA = "0xDF15C8")]
	public static bool ReplaceLink(ref string text, ref int index, string type, [Optional] string prefix, [Optional] string suffix)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xDF1BE4", Offset = "0xDF1BE4", VA = "0xDF1BE4")]
	public static bool InsertHyperlink(ref string text, ref int index, string keyword, string link, [Optional] string prefix, [Optional] string suffix)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xDF1F44", Offset = "0xDF1F44", VA = "0xDF1F44")]
	public static void ReplaceLinks(ref string text, [Optional] string prefix, [Optional] string suffix)
	{
	}
}
[Token(Token = "0x2000151")]
public class DoNotObfuscateNGUI : Attribute
{
	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xDF326C", Offset = "0xDF326C", VA = "0xDF326C")]
	public DoNotObfuscateNGUI()
	{
	}
}
[Token(Token = "0x2000152")]
public static class NGUITools
{
	[Token(Token = "0x2000153")]
	public delegate void OnInitFunc<T>(T w) where T : UIWidget;

	[NonSerialized]
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioListener mListener;

	[NonSerialized]
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AudioSource audioSource;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool mLoaded;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float mGlobalVolume;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float mLastTimestamp;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static AudioClip mLastClip;

	[NonSerialized]
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<UIWidget> s_widgets;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<Type, string> mTypeNames;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Vector3[] mSides;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static KeyCode[] keys;

	[NonSerialized]
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Dictionary<string, UIWidget> mWidgets;

	[NonSerialized]
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static UIPanel mRoot;

	[NonSerialized]
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static GameObject mGo;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static ColorSpace mColorSpace;

	[Token(Token = "0x170000D4")]
	public static float soundVolume
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xDF3274", Offset = "0xDF3274", VA = "0xDF3274")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xDF3334", Offset = "0xDF3334", VA = "0xDF3334")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public static bool fileAccess
	{
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xDF33F0", Offset = "0xDF33F0", VA = "0xDF33F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D6")]
	public static string clipboard
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0xDF95A8", Offset = "0xDF95A8", VA = "0xDF95A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600080E")]
		[Address(RVA = "0xDF9614", Offset = "0xDF9614", VA = "0xDF9614")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public static Vector2 screenSize
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xDF9F98", Offset = "0xDF9F98", VA = "0xDF9F98")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xDF340C", Offset = "0xDF340C", VA = "0xDF340C")]
	public static AudioSource PlaySound(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xDF3B58", Offset = "0xDF3B58", VA = "0xDF3B58")]
	public static AudioSource PlaySound(AudioClip clip, float volume)
	{
		return null;
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xDF3468", Offset = "0xDF3468", VA = "0xDF3468")]
	public static AudioSource PlaySound(AudioClip clip, float volume, float pitch)
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xDF3CE4", Offset = "0xDF3CE4", VA = "0xDF3CE4")]
	public static int RandomRange(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xDF3CFC", Offset = "0xDF3CFC", VA = "0xDF3CFC")]
	public static string GetHierarchy(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60007C4")]
	public static T[] FindActive<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xDF3E50", Offset = "0xDF3E50", VA = "0xDF3E50")]
	public static Camera FindCameraForLayer(int layer)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xDF4084", Offset = "0xDF4084", VA = "0xDF4084")]
	public static void AddWidgetCollider(GameObject go)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xDF40DC", Offset = "0xDF40DC", VA = "0xDF40DC")]
	public static void AddWidgetCollider(GameObject go, bool considerInactive)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xDF4ABC", Offset = "0xDF4ABC", VA = "0xDF4ABC")]
	public static void UpdateWidgetCollider(GameObject go)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xDF4B14", Offset = "0xDF4B14", VA = "0xDF4B14")]
	public static void UpdateWidgetCollider(GameObject go, bool considerInactive)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xDF4474", Offset = "0xDF4474", VA = "0xDF4474")]
	public static void UpdateWidgetCollider(BoxCollider box, bool considerInactive)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xDF4C88", Offset = "0xDF4C88", VA = "0xDF4C88")]
	public static void UpdateWidgetCollider(UIWidget w)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xDF4DC4", Offset = "0xDF4DC4", VA = "0xDF4DC4")]
	public static void UpdateWidgetCollider(UIWidget w, BoxCollider box)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xDF50E4", Offset = "0xDF50E4", VA = "0xDF50E4")]
	public static void UpdateWidgetCollider(UIWidget w, BoxCollider2D box)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xDF4738", Offset = "0xDF4738", VA = "0xDF4738")]
	public static void UpdateWidgetCollider(BoxCollider2D box, bool considerInactive)
	{
	}

	[Token(Token = "0x60007CF")]
	public static string GetTypeName<T>()
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xDF53A8", Offset = "0xDF53A8", VA = "0xDF53A8")]
	public static string GetTypeName(UnityEngine.Object obj)
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xDF54C0", Offset = "0xDF54C0", VA = "0xDF54C0")]
	public static void RegisterUndo(UnityEngine.Object obj, string name)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xDF53A4", Offset = "0xDF53A4", VA = "0xDF53A4")]
	public static void SetDirty(UnityEngine.Object obj, string undoName = "last change")
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xDF54C4", Offset = "0xDF54C4", VA = "0xDF54C4")]
	public static void CheckForPrefabStage(GameObject gameObject)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xDF54C8", Offset = "0xDF54C8", VA = "0xDF54C8")]
	public static GameObject AddChild(GameObject parent)
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xDF5700", Offset = "0xDF5700", VA = "0xDF5700")]
	public static GameObject AddChild(this GameObject parent, int layer)
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xDF5768", Offset = "0xDF5768", VA = "0xDF5768")]
	public static GameObject AddChild(this GameObject parent, bool undo)
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xDF5524", Offset = "0xDF5524", VA = "0xDF5524")]
	public static GameObject AddChild(this GameObject parent, bool undo, int layer)
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xDF57C4", Offset = "0xDF57C4", VA = "0xDF57C4")]
	public static GameObject AddChild(this Transform parent, GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xDF595C", Offset = "0xDF595C", VA = "0xDF595C")]
	public static GameObject AddChild(this GameObject parent, GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xDF59C4", Offset = "0xDF59C4", VA = "0xDF59C4")]
	public static GameObject AddChild(this GameObject parent, GameObject prefab, int layer)
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xDF5BEC", Offset = "0xDF5BEC", VA = "0xDF5BEC")]
	public static int CalculateRaycastDepth(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xDF5EC8", Offset = "0xDF5EC8", VA = "0xDF5EC8")]
	public static int CalculateNextDepth(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xDF60A8", Offset = "0xDF60A8", VA = "0xDF60A8")]
	public static int CalculateNextDepth(GameObject go, bool ignoreChildrenWithColliders)
	{
		return default(int);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xDF6390", Offset = "0xDF6390", VA = "0xDF6390")]
	public static int AdjustDepth(GameObject go, int adjustment)
	{
		return default(int);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xDF6614", Offset = "0xDF6614", VA = "0xDF6614")]
	public static void BringForward(GameObject go)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xDF6888", Offset = "0xDF6888", VA = "0xDF6888")]
	public static void PushBack(GameObject go)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xDF692C", Offset = "0xDF692C", VA = "0xDF692C")]
	public static void NormalizeDepths()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xDF6820", Offset = "0xDF6820", VA = "0xDF6820")]
	public static void NormalizeWidgetDepths()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xDF6ADC", Offset = "0xDF6ADC", VA = "0xDF6ADC")]
	public static void NormalizeWidgetDepths(GameObject go)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xDF697C", Offset = "0xDF697C", VA = "0xDF697C")]
	public static void NormalizeWidgetDepths(UIWidget[] list)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xDF66B8", Offset = "0xDF66B8", VA = "0xDF66B8")]
	public static void NormalizePanelDepths()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xDF6B60", Offset = "0xDF6B60", VA = "0xDF6B60")]
	public static UIPanel CreateUI(bool advanced3D)
	{
		return null;
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xDF7718", Offset = "0xDF7718", VA = "0xDF7718")]
	public static UIPanel CreateUI(bool advanced3D, int layer)
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xDF6BBC", Offset = "0xDF6BBC", VA = "0xDF6BBC")]
	public static UIPanel CreateUI(Transform trans, bool advanced3D, int layer)
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xDF77A0", Offset = "0xDF77A0", VA = "0xDF77A0")]
	public static void SetChildLayer(this Transform t, int layer)
	{
	}

	[Token(Token = "0x60007EA")]
	public static T AddChild<T>(this GameObject parent) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	public static T AddChild<T>(this GameObject parent, bool undo) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	public static T AddWidget<T>(this GameObject go, int depth = int.MaxValue) where T : UIWidget
	{
		return null;
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xDF7870", Offset = "0xDF7870", VA = "0xDF7870")]
	public static UISprite AddSprite(this GameObject go, INGUIAtlas atlas, string spriteName, int depth = int.MaxValue)
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xDF79EC", Offset = "0xDF79EC", VA = "0xDF79EC")]
	public static GameObject GetRoot(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60007EF")]
	public static T FindInParents<T>(GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60007F0")]
	public static T FindInParents<T>(Transform trans) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xDF7A8C", Offset = "0xDF7A8C", VA = "0xDF7A8C")]
	public static void Destroy(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xDF7C74", Offset = "0xDF7C74", VA = "0xDF7C74")]
	public static void DestroyChildren(this Transform t)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xDF7D80", Offset = "0xDF7D80", VA = "0xDF7D80")]
	public static void DestroyImmediate(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xDF7E28", Offset = "0xDF7E28", VA = "0xDF7E28")]
	public static void Broadcast(string funcName)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xDF7F50", Offset = "0xDF7F50", VA = "0xDF7F50")]
	public static void Broadcast(string funcName, object param)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xDF7780", Offset = "0xDF7780", VA = "0xDF7780")]
	public static bool IsChild(Transform parent, Transform child)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xDF8080", Offset = "0xDF8080", VA = "0xDF8080")]
	private static void Activate(Transform t)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xDF80D8", Offset = "0xDF80D8", VA = "0xDF80D8")]
	private static void Activate(Transform t, bool compatibilityMode)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xDF8230", Offset = "0xDF8230", VA = "0xDF8230")]
	private static void Deactivate(Transform t)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xDF82AC", Offset = "0xDF82AC", VA = "0xDF82AC")]
	public static void SetActive(GameObject go, bool state)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xDF8314", Offset = "0xDF8314", VA = "0xDF8314")]
	public static void SetActive(GameObject go, bool state, bool compatibilityMode)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xDF8408", Offset = "0xDF8408", VA = "0xDF8408")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	private static void CallCreatePanel(Transform t)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xDF8520", Offset = "0xDF8520", VA = "0xDF8520")]
	public static void SetActiveChildren(GameObject go, bool state)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xDF8628", Offset = "0xDF8628", VA = "0xDF8628")]
	[Obsolete("Use NGUITools.GetActive instead")]
	public static bool IsActive(Behaviour mb)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xDF3BC8", Offset = "0xDF3BC8", VA = "0xDF3BC8")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static bool GetActive(Behaviour mb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xDF3C64", Offset = "0xDF3C64", VA = "0xDF3C64")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static bool GetActive(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xDF8218", Offset = "0xDF8218", VA = "0xDF8218")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public static void SetActiveSelf(GameObject go, bool state)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xDF86C8", Offset = "0xDF86C8", VA = "0xDF86C8")]
	public static void SetLayer(GameObject go, int layer)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xDF87AC", Offset = "0xDF87AC", VA = "0xDF87AC")]
	public static Vector3 Round(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xDF8944", Offset = "0xDF8944", VA = "0xDF8944")]
	public static void MakePixelPerfect(Transform t)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xDF8B6C", Offset = "0xDF8B6C", VA = "0xDF8B6C")]
	public static void FitOnScreen(this Camera cam, Transform t, bool considerInactive = false, bool considerChildren = true)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xDF8D64", Offset = "0xDF8D64", VA = "0xDF8D64")]
	public static void FitOnScreen(this Camera cam, Transform transform, Vector3 pos)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xDF8DF8", Offset = "0xDF8DF8", VA = "0xDF8DF8")]
	public static void FitOnScreen(this Camera cam, Transform transform, Transform content, Vector3 pos, bool considerInactive = false)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xDF8EB4", Offset = "0xDF8EB4", VA = "0xDF8EB4")]
	public static void FitOnScreen(this Camera cam, Transform transform, Transform content, Vector3 pos, out Bounds bounds, bool considerInactive = false)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xDF9268", Offset = "0xDF9268", VA = "0xDF9268")]
	public static bool Save(string fileName, byte[] bytes)
	{
		return default(bool);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xDF9430", Offset = "0xDF9430", VA = "0xDF9430")]
	public static byte[] Load(string fileName)
	{
		return null;
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xDF94E4", Offset = "0xDF94E4", VA = "0xDF94E4")]
	public static Color ApplyPMA(Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xDF9500", Offset = "0xDF9500", VA = "0xDF9500")]
	public static void MarkParentAsChanged(GameObject go)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xDF9694", Offset = "0xDF9694", VA = "0xDF9694")]
	[Obsolete("Use NGUIText.EncodeColor instead")]
	public static string EncodeColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xDF9714", Offset = "0xDF9714", VA = "0xDF9714")]
	[Obsolete("Use NGUIText.ParseColor instead")]
	public static Color ParseColor(string text, int offset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xDF977C", Offset = "0xDF977C", VA = "0xDF977C")]
	[Obsolete("Use NGUIText.StripSymbols instead")]
	public static string StripSymbols(string text)
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	public static T AddMissingComponent<T>(this GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xDF97D4", Offset = "0xDF97D4", VA = "0xDF97D4")]
	public static Vector3[] GetSides(this Camera cam)
	{
		return null;
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xDF9E94", Offset = "0xDF9E94", VA = "0xDF9E94")]
	public static Vector3[] GetSides(this Camera cam, float depth)
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xDF9EFC", Offset = "0xDF9EFC", VA = "0xDF9EFC")]
	public static Vector3[] GetSides(this Camera cam, Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xDF986C", Offset = "0xDF986C", VA = "0xDF986C")]
	public static Vector3[] GetSides(this Camera cam, float depth, Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xDF9FC0", Offset = "0xDF9FC0", VA = "0xDF9FC0")]
	public static Vector3[] GetWorldCorners(this Camera cam)
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xDFA4F8", Offset = "0xDFA4F8", VA = "0xDFA4F8")]
	public static Vector3[] GetWorldCorners(this Camera cam, float depth)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xDFA560", Offset = "0xDFA560", VA = "0xDFA560")]
	public static Vector3[] GetWorldCorners(this Camera cam, Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xDFA058", Offset = "0xDFA058", VA = "0xDFA058")]
	public static Vector3[] GetWorldCorners(this Camera cam, float depth, Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xDFA5FC", Offset = "0xDFA5FC", VA = "0xDFA5FC")]
	public static string GetFuncName(object obj, string method)
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	public static void Execute<T>(GameObject go, string funcName) where T : Component
	{
	}

	[Token(Token = "0x600081D")]
	public static void ExecuteAll<T>(GameObject root, string funcName) where T : Component
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xDFA6DC", Offset = "0xDFA6DC", VA = "0xDFA6DC")]
	public static void ImmediatelyCreateDrawCalls(GameObject root)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xDFA7EC", Offset = "0xDFA7EC", VA = "0xDFA7EC")]
	public static string KeyToCaption(KeyCode key)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xDFB648", Offset = "0xDFB648", VA = "0xDFB648")]
	public static KeyCode CaptionToKey(string caption)
	{
		return default(KeyCode);
	}

	[Token(Token = "0x6000822")]
	public static T Draw<T>(string id, [Optional] OnInitFunc<T> onInit) where T : UIWidget
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xDFD24C", Offset = "0xDFD24C", VA = "0xDFD24C")]
	public static Color GammaToLinearSpace(this Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xDFD370", Offset = "0xDFD370", VA = "0xDFD370")]
	public static Color LinearToGammaSpace(this Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xDFD494", Offset = "0xDFD494", VA = "0xDFD494")]
	public static bool CheckIfRelated(INGUIAtlas a, INGUIAtlas b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xDFD5BC", Offset = "0xDFD5BC", VA = "0xDFD5BC")]
	public static void Replace(INGUIAtlas before, INGUIAtlas after)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xDFD854", Offset = "0xDFD854", VA = "0xDFD854")]
	public static bool CheckIfRelated(INGUIFont a, INGUIFont b)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000154")]
[AddComponentMenu("NGUI/Internal/Property Binding")]
[ExecuteInEditMode]
public class PropertyBinding : MonoBehaviour
{
	[Token(Token = "0x2000155")]
	[DoNotObfuscateNGUI]
	public enum UpdateCondition
	{
		[Token(Token = "0x4000756")]
		OnStart,
		[Token(Token = "0x4000757")]
		OnUpdate,
		[Token(Token = "0x4000758")]
		OnLateUpdate,
		[Token(Token = "0x4000759")]
		OnFixedUpdate
	}

	[Token(Token = "0x2000156")]
	[DoNotObfuscateNGUI]
	public enum Direction
	{
		[Token(Token = "0x400075B")]
		SourceUpdatesTarget,
		[Token(Token = "0x400075C")]
		TargetUpdatesSource,
		[Token(Token = "0x400075D")]
		BiDirectional
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PropertyReference source;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PropertyReference target;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Direction direction;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UpdateCondition update;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool editMode;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private object mLastValue;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xDFDD68", Offset = "0xDFDD68", VA = "0xDFDD68")]
	private void Start()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xDFDF44", Offset = "0xDFDF44", VA = "0xDFDF44")]
	private void Update()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xDFDF58", Offset = "0xDFDF58", VA = "0xDFDF58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xDFDF6C", Offset = "0xDFDF6C", VA = "0xDFDF6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xDFDF80", Offset = "0xDFDF80", VA = "0xDFDF80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xDFDD98", Offset = "0xDFDD98", VA = "0xDFDD98")]
	[ContextMenu("Update Now")]
	public void UpdateTarget()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xDFE59C", Offset = "0xDFE59C", VA = "0xDFE59C")]
	public PropertyBinding()
	{
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class PropertyReference
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Component mTarget;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string mName;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FieldInfo mField;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PropertyInfo mProperty;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_Hash;

	[Token(Token = "0x170000D8")]
	public Component target
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0xDFE5B0", Offset = "0xDFE5B0", VA = "0xDFE5B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000835")]
		[Address(RVA = "0xDFE5B8", Offset = "0xDFE5B8", VA = "0xDFE5B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public string name
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0xDFE5EC", Offset = "0xDFE5EC", VA = "0xDFE5EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000837")]
		[Address(RVA = "0xDFE5F4", Offset = "0xDFE5F4", VA = "0xDFE5F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public bool isValid
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xDFE018", Offset = "0xDFE018", VA = "0xDFE018")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DB")]
	public bool isEnabled
	{
		[Token(Token = "0x6000839")]
		[Address(RVA = "0xDFE628", Offset = "0xDFE628", VA = "0xDFE628")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xDFE72C", Offset = "0xDFE72C", VA = "0xDFE72C")]
	public PropertyReference()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xDFE734", Offset = "0xDFE734", VA = "0xDFE734")]
	public PropertyReference(Component target, string fieldName)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xDFE48C", Offset = "0xDFE48C", VA = "0xDFE48C")]
	public Type GetPropertyType()
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xDFE898", Offset = "0xDFE898", VA = "0xDFE898", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xDFE988", Offset = "0xDFE988", VA = "0xDFE988", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xDFE9E0", Offset = "0xDFE9E0", VA = "0xDFE9E0")]
	public void Set(Component target, string methodName)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xDFEA10", Offset = "0xDFEA10", VA = "0xDFEA10")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xDFDFF0", Offset = "0xDFDFF0", VA = "0xDFDFF0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xDFEA38", Offset = "0xDFEA38", VA = "0xDFEA38", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xDFEA98", Offset = "0xDFEA98", VA = "0xDFEA98")]
	public static string ToString(Component comp, string property)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xDFE09C", Offset = "0xDFE09C", VA = "0xDFE09C")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	public object Get()
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xDFE178", Offset = "0xDFE178", VA = "0xDFE178")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public bool Set(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xDFE778", Offset = "0xDFE778", VA = "0xDFE778")]
	[DebuggerHidden]
	[DebuggerStepThrough]
	private bool Cache()
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xDFEBD4", Offset = "0xDFEBD4", VA = "0xDFEBD4")]
	private bool Convert(ref object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xDFF4AC", Offset = "0xDFF4AC", VA = "0xDFF4AC")]
	public static bool Convert(Type from, Type to)
	{
		return default(bool);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xDFF520", Offset = "0xDFF520", VA = "0xDFF520")]
	public static bool Convert(object value, Type to)
	{
		return default(bool);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xDFECD0", Offset = "0xDFECD0", VA = "0xDFECD0")]
	public static bool Convert(ref object value, Type from, Type to)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000158")]
public class RealTime : MonoBehaviour
{
	[Token(Token = "0x170000DC")]
	public static float time
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xDF3BC0", Offset = "0xDF3BC0", VA = "0xDF3BC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DD")]
	public static float deltaTime
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xDFF640", Offset = "0xDFF640", VA = "0xDFF640")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xDFF648", Offset = "0xDFF648", VA = "0xDFF648")]
	public RealTime()
	{
	}
}
[Token(Token = "0x2000159")]
[AddComponentMenu("NGUI/Internal/Spring Panel")]
[RequireComponent(typeof(UIPanel))]
public class SpringPanel : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	public delegate void OnFinished();

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpringPanel current;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 target;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float strength;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnFinished onFinished;

	[NonSerialized]
	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIPanel mPanel;

	[NonSerialized]
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform mTrans;

	[NonSerialized]
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIScrollView mDrag;

	[NonSerialized]
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mDelta;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xDFF650", Offset = "0xDFF650", VA = "0xDFF650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xDFF6FC", Offset = "0xDFF6FC", VA = "0xDFF6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xDFF708", Offset = "0xDFF708", VA = "0xDFF708", Slot = "4")]
	protected virtual void AdvanceTowardsPosition()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xDFFB38", Offset = "0xDFFB38", VA = "0xDFFB38")]
	public static SpringPanel Begin(GameObject go, Vector3 pos, float strength)
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xDFFC40", Offset = "0xDFFC40", VA = "0xDFFC40")]
	public static SpringPanel Stop(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xDFFD14", Offset = "0xDFFD14", VA = "0xDFFD14")]
	public SpringPanel()
	{
	}
}
[Token(Token = "0x200015B")]
public abstract class UIBasicSprite : UIWidget
{
	[Token(Token = "0x200015C")]
	[DoNotObfuscateNGUI]
	public enum Type
	{
		[Token(Token = "0x400077D")]
		Simple,
		[Token(Token = "0x400077E")]
		Sliced,
		[Token(Token = "0x400077F")]
		Tiled,
		[Token(Token = "0x4000780")]
		Filled,
		[Token(Token = "0x4000781")]
		Advanced
	}

	[Token(Token = "0x200015D")]
	[DoNotObfuscateNGUI]
	public enum FillDirection
	{
		[Token(Token = "0x4000783")]
		Horizontal,
		[Token(Token = "0x4000784")]
		Vertical,
		[Token(Token = "0x4000785")]
		Radial90,
		[Token(Token = "0x4000786")]
		Radial180,
		[Token(Token = "0x4000787")]
		Radial360
	}

	[Token(Token = "0x200015E")]
	[DoNotObfuscateNGUI]
	public enum AdvancedType
	{
		[Token(Token = "0x4000789")]
		Invisible,
		[Token(Token = "0x400078A")]
		Sliced,
		[Token(Token = "0x400078B")]
		Tiled
	}

	[Token(Token = "0x200015F")]
	[DoNotObfuscateNGUI]
	public enum Flip
	{
		[Token(Token = "0x400078D")]
		Nothing,
		[Token(Token = "0x400078E")]
		Horizontally,
		[Token(Token = "0x400078F")]
		Vertically,
		[Token(Token = "0x4000790")]
		Both
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	[HideInInspector]
	protected Type mType;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[SerializeField]
	[HideInInspector]
	protected FillDirection mFillDirection;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Range(0f, 1f)]
	[HideInInspector]
	[SerializeField]
	protected float mFillAmount;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[SerializeField]
	[HideInInspector]
	protected bool mInvert;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	[SerializeField]
	protected Flip mFlip;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[HideInInspector]
	[SerializeField]
	protected bool mApplyGradient;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	[SerializeField]
	protected Color mGradientTop;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	[HideInInspector]
	protected Color mGradientBottom;

	[NonSerialized]
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected Rect mInnerUV;

	[NonSerialized]
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	protected Rect mOuterUV;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AdvancedType centerType;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public AdvancedType leftType;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public AdvancedType rightType;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public AdvancedType bottomType;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public AdvancedType topType;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Vector2[] mTempPos;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static Vector2[] mTempUVs;

	[Token(Token = "0x170000DE")]
	public virtual Type type
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0xDFFE54", Offset = "0xDFFE54", VA = "0xDFFE54", Slot = "47")]
		get
		{
			return default(Type);
		}
		[Token(Token = "0x600085A")]
		[Address(RVA = "0xDFFE5C", Offset = "0xDFFE5C", VA = "0xDFFE5C", Slot = "48")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public Flip flip
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xDFFE80", Offset = "0xDFFE80", VA = "0xDFFE80")]
		get
		{
			return default(Flip);
		}
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xDFFE88", Offset = "0xDFFE88", VA = "0xDFFE88")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public FillDirection fillDirection
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0xDFFEAC", Offset = "0xDFFEAC", VA = "0xDFFEAC")]
		get
		{
			return default(FillDirection);
		}
		[Token(Token = "0x600085E")]
		[Address(RVA = "0xDFFEB4", Offset = "0xDFFEB4", VA = "0xDFFEB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public float fillAmount
	{
		[Token(Token = "0x600085F")]
		[Address(RVA = "0xDFFED0", Offset = "0xDFFED0", VA = "0xDFFED0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000860")]
		[Address(RVA = "0xDFFED8", Offset = "0xDFFED8", VA = "0xDFFED8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public override int minWidth
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xDFFF08", Offset = "0xDFFF08", VA = "0xDFFF08", Slot = "40")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E3")]
	public override int minHeight
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xE00088", Offset = "0xE00088", VA = "0xE00088", Slot = "41")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E4")]
	public bool invert
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xE00208", Offset = "0xE00208", VA = "0xE00208")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xE00210", Offset = "0xE00210", VA = "0xE00210")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public bool hasBorder
	{
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xE00230", Offset = "0xE00230", VA = "0xE00230")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E6")]
	public virtual bool premultipliedAlpha
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xE00278", Offset = "0xE00278", VA = "0xE00278", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E7")]
	public virtual float pixelSize
	{
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xE00280", Offset = "0xE00280", VA = "0xE00280", Slot = "50")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E8")]
	protected virtual Vector4 padding
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xE00288", Offset = "0xE00288", VA = "0xE00288", Slot = "51")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x170000E9")]
	protected Vector4 drawingUVs
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xE0029C", Offset = "0xE0029C", VA = "0xE0029C")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x170000EA")]
	protected Color drawingColor
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0xE003B8", Offset = "0xE003B8", VA = "0xE003B8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xE00460", Offset = "0xE00460", VA = "0xE00460")]
	protected void Fill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, Rect outer, Rect inner)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xE005D8", Offset = "0xE005D8", VA = "0xE005D8")]
	protected void SimpleFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, ref Vector4 v, ref Vector4 u, ref Color c)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xE00B48", Offset = "0xE00B48", VA = "0xE00B48")]
	protected void SlicedFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, ref Vector4 v, ref Vector4 u, ref Color gc)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xE03D24", Offset = "0xE03D24", VA = "0xE03D24")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	private void AddVertexColours(List<Color> cols, ref Color color, int x, int y)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xE02578", Offset = "0xE02578", VA = "0xE02578")]
	protected void TiledFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, ref Vector4 v, ref Color c)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xE017A8", Offset = "0xE017A8", VA = "0xE017A8")]
	protected void FilledFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, ref Vector4 v, ref Vector4 u, ref Color c)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xE02E1C", Offset = "0xE02E1C", VA = "0xE02E1C")]
	protected void AdvancedFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, ref Vector4 v, ref Vector4 u, ref Color c)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xE03FAC", Offset = "0xE03FAC", VA = "0xE03FAC")]
	private static bool RadialCut(Vector2[] xy, Vector2[] uv, float fill, bool invert, int corner)
	{
		return default(bool);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE04654", Offset = "0xE04654", VA = "0xE04654")]
	private static void RadialCut(Vector2[] xy, float cos, float sin, bool invert, int corner)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xE040CC", Offset = "0xE040CC", VA = "0xE040CC")]
	private static void Fill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, float v0x, float v1x, float v0y, float v1y, float u0x, float u1x, float u0y, float u1y, Color col)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xE04A58", Offset = "0xE04A58", VA = "0xE04A58")]
	protected UIBasicSprite()
	{
	}
}
[Token(Token = "0x2000160")]
[AddComponentMenu("NGUI/Internal/Draw Call")]
[ExecuteInEditMode]
public class UIDrawCall : MonoBehaviour
{
	[Token(Token = "0x2000161")]
	[DoNotObfuscateNGUI]
	public enum Clipping
	{
		[Token(Token = "0x40007BE")]
		None = 0,
		[Token(Token = "0x40007BF")]
		TextureMask = 1,
		[Token(Token = "0x40007C0")]
		SoftClip = 3,
		[Token(Token = "0x40007C1")]
		ConstrainButDontClip = 4
	}

	[Token(Token = "0x2000162")]
	public delegate void OnRenderCallback(Material mat);

	[Token(Token = "0x2000163")]
	public delegate void OnCreateDrawCall(UIDrawCall dc, MeshFilter filter, MeshRenderer ren);

	[Token(Token = "0x2000164")]
	[DoNotObfuscateNGUI]
	public enum ShadowMode
	{
		[Token(Token = "0x40007C3")]
		None,
		[Token(Token = "0x40007C4")]
		Receive,
		[Token(Token = "0x40007C5")]
		CastAndReceive
	}

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BetterList<UIDrawCall> mActiveList;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BetterList<UIDrawCall> mInactiveList;

	[NonSerialized]
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int widgetCount;

	[NonSerialized]
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int depthStart;

	[NonSerialized]
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int depthEnd;

	[NonSerialized]
	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public UIPanel manager;

	[NonSerialized]
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public UIPanel panel;

	[NonSerialized]
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Texture2D clipTexture;

	[NonSerialized]
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool alwaysOnScreen;

	[NonSerialized]
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<Vector3> verts;

	[NonSerialized]
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Vector3> norms;

	[NonSerialized]
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<Vector4> tans;

	[NonSerialized]
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<Vector2> uvs;

	[NonSerialized]
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<Vector4> uv2;

	[NonSerialized]
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<Color> cols;

	[NonSerialized]
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material mMaterial;

	[NonSerialized]
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Texture mTexture;

	[NonSerialized]
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shader mShader;

	[NonSerialized]
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int mClipCount;

	[NonSerialized]
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform mTrans;

	[NonSerialized]
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh mMesh;

	[NonSerialized]
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshFilter mFilter;

	[NonSerialized]
	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MeshRenderer mRenderer;

	[NonSerialized]
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material mDynamicMat;

	[NonSerialized]
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] mIndices;

	[NonSerialized]
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ShadowMode mShadowMode;

	[NonSerialized]
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool mRebuildMat;

	[NonSerialized]
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool mLegacyShader;

	[NonSerialized]
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int mRenderQueue;

	[NonSerialized]
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int mTriangles;

	[NonSerialized]
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool isDirty;

	[NonSerialized]
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool mTextureClip;

	[NonSerialized]
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool mIsNew;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public OnRenderCallback onRender;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public OnCreateDrawCall onCreateDrawCall;

	[NonSerialized]
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string mSortingLayerName;

	[NonSerialized]
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int mSortingOrder;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ColorSpace mColorSpace;

	[Token(Token = "0x40007B7")]
	private const int maxIndexBufferCache = 10;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<int[]> mCache;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected MaterialPropertyBlock mBlock;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] ClipRange;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] ClipArgs;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int dx9BugWorkaround;

	[Token(Token = "0x170000EB")]
	[Obsolete("Use UIDrawCall.activeList")]
	public static BetterList<UIDrawCall> list
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xE04B28", Offset = "0xE04B28", VA = "0xE04B28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EC")]
	public static BetterList<UIDrawCall> activeList
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xE04B80", Offset = "0xE04B80", VA = "0xE04B80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000ED")]
	public static BetterList<UIDrawCall> inactiveList
	{
		[Token(Token = "0x6000879")]
		[Address(RVA = "0xE04BD8", Offset = "0xE04BD8", VA = "0xE04BD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	public int renderQueue
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0xE04C30", Offset = "0xE04C30", VA = "0xE04C30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0xE04C38", Offset = "0xE04C38", VA = "0xE04C38")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public int sortingOrder
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0xE04CD4", Offset = "0xE04CD4", VA = "0xE04CD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600087D")]
		[Address(RVA = "0xE04CDC", Offset = "0xE04CDC", VA = "0xE04CDC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public string sortingLayerName
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0xE04D78", Offset = "0xE04D78", VA = "0xE04D78")]
		get
		{
			return null;
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xE04E24", Offset = "0xE04E24", VA = "0xE04E24")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public int finalRenderQueue
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0xE04EE4", Offset = "0xE04EE4", VA = "0xE04EE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F2")]
	public Transform cachedTransform
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0xE04F6C", Offset = "0xE04F6C", VA = "0xE04F6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F3")]
	public Material baseMaterial
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xE05000", Offset = "0xE05000", VA = "0xE05000")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0xE05008", Offset = "0xE05008", VA = "0xE05008")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public Material dynamicMaterial
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0xE05098", Offset = "0xE05098", VA = "0xE05098")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F5")]
	public Texture mainTexture
	{
		[Token(Token = "0x6000885")]
		[Address(RVA = "0xE050A0", Offset = "0xE050A0", VA = "0xE050A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000886")]
		[Address(RVA = "0xE050A8", Offset = "0xE050A8", VA = "0xE050A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public Shader shader
	{
		[Token(Token = "0x6000887")]
		[Address(RVA = "0xE051A4", Offset = "0xE051A4", VA = "0xE051A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000888")]
		[Address(RVA = "0xE051AC", Offset = "0xE051AC", VA = "0xE051AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public ShadowMode shadowMode
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0xE0523C", Offset = "0xE0523C", VA = "0xE0523C")]
		get
		{
			return default(ShadowMode);
		}
		[Token(Token = "0x600088A")]
		[Address(RVA = "0xE05244", Offset = "0xE05244", VA = "0xE05244")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public int triangles
	{
		[Token(Token = "0x600088B")]
		[Address(RVA = "0xE0532C", Offset = "0xE0532C", VA = "0xE0532C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F9")]
	public bool isClipped
	{
		[Token(Token = "0x600088C")]
		[Address(RVA = "0xE053A0", Offset = "0xE053A0", VA = "0xE053A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xE053B0", Offset = "0xE053B0", VA = "0xE053B0")]
	private void CreateMaterial()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xE05A9C", Offset = "0xE05A9C", VA = "0xE05A9C")]
	private Material RebuildMaterial()
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xE05C0C", Offset = "0xE05C0C", VA = "0xE05C0C")]
	private void UpdateMaterials()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xE05CF0", Offset = "0xE05CF0", VA = "0xE05CF0")]
	public void UpdateGeometry(int widgetCount, bool needsBounds)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xE06748", Offset = "0xE06748", VA = "0xE06748")]
	private int[] GenerateCachedIndexBuffer(int vertexCount, int indexCount)
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xE06A24", Offset = "0xE06A24", VA = "0xE06A24")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xE06FE8", Offset = "0xE06FE8", VA = "0xE06FE8")]
	private void SetClipping(int index, Vector4 cr, Vector2 soft, float angle)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xE071A0", Offset = "0xE071A0", VA = "0xE071A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xE074C4", Offset = "0xE074C4", VA = "0xE074C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xE074D0", Offset = "0xE074D0", VA = "0xE074D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xE07610", Offset = "0xE07610", VA = "0xE07610")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xE07678", Offset = "0xE07678", VA = "0xE07678")]
	public static UIDrawCall Create(UIPanel panel, Material mat, Texture tex, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xE076F8", Offset = "0xE076F8", VA = "0xE076F8")]
	private static UIDrawCall Create(string name, UIPanel pan, Material mat, Texture tex, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xE07808", Offset = "0xE07808", VA = "0xE07808")]
	private static UIDrawCall Create(string name)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xE07A58", Offset = "0xE07A58", VA = "0xE07A58")]
	public static void ClearAll()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xE07BE4", Offset = "0xE07BE4", VA = "0xE07BE4")]
	public static void ReleaseAll()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xE07C34", Offset = "0xE07C34", VA = "0xE07C34")]
	public static void ReleaseInactive()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xE07D94", Offset = "0xE07D94", VA = "0xE07D94")]
	public static int Count(UIPanel panel)
	{
		return default(int);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xE07EA8", Offset = "0xE07EA8", VA = "0xE07EA8")]
	public static void Destroy(UIDrawCall dc)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xE08098", Offset = "0xE08098", VA = "0xE08098")]
	public static void MoveToScene(Scene scene)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xE08640", Offset = "0xE08640", VA = "0xE08640")]
	public UIDrawCall()
	{
	}
}
[Token(Token = "0x2000165")]
[AddComponentMenu("NGUI/Internal/Event Listener")]
public class UIEventListener : MonoBehaviour
{
	[Token(Token = "0x2000166")]
	public delegate void VoidDelegate(GameObject go);

	[Token(Token = "0x2000167")]
	public delegate void BoolDelegate(GameObject go, bool state);

	[Token(Token = "0x2000168")]
	public delegate void FloatDelegate(GameObject go, float delta);

	[Token(Token = "0x2000169")]
	public delegate void VectorDelegate(GameObject go, Vector2 delta);

	[Token(Token = "0x200016A")]
	public delegate void ObjectDelegate(GameObject go, GameObject obj);

	[Token(Token = "0x200016B")]
	public delegate void KeyCodeDelegate(GameObject go, KeyCode key);

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object parameter;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VoidDelegate onSubmit;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VoidDelegate onClick;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoidDelegate onDoubleClick;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoolDelegate onHover;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoolDelegate onPress;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoolDelegate onSelect;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatDelegate onScroll;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VoidDelegate onDragStart;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VectorDelegate onDrag;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoidDelegate onDragOver;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VoidDelegate onDragOut;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VoidDelegate onDragEnd;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ObjectDelegate onDrop;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public KeyCodeDelegate onKey;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BoolDelegate onTooltip;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool needsActiveCollider;

	[Token(Token = "0x170000FA")]
	private bool isColliderEnabled
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xE08C3C", Offset = "0xE08C3C", VA = "0xE08C3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE08D5C", Offset = "0xE08D5C", VA = "0xE08D5C")]
	private void OnSubmit()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE08DB0", Offset = "0xE08DB0", VA = "0xE08DB0")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE08E04", Offset = "0xE08E04", VA = "0xE08E04")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE08E58", Offset = "0xE08E58", VA = "0xE08E58")]
	private void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE08EB4", Offset = "0xE08EB4", VA = "0xE08EB4")]
	private void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE08F10", Offset = "0xE08F10", VA = "0xE08F10")]
	private void OnSelect(bool selected)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE08F6C", Offset = "0xE08F6C", VA = "0xE08F6C")]
	private void OnScroll(float delta)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xE08FD4", Offset = "0xE08FD4", VA = "0xE08FD4")]
	private void OnDragStart()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE0900C", Offset = "0xE0900C", VA = "0xE0900C")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE09060", Offset = "0xE09060", VA = "0xE09060")]
	private void OnDragOver()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE090B4", Offset = "0xE090B4", VA = "0xE090B4")]
	private void OnDragOut()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE09108", Offset = "0xE09108", VA = "0xE09108")]
	private void OnDragEnd()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE09140", Offset = "0xE09140", VA = "0xE09140")]
	private void OnDrop(GameObject go)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE0919C", Offset = "0xE0919C", VA = "0xE0919C")]
	private void OnKey(KeyCode key)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE091F8", Offset = "0xE091F8", VA = "0xE091F8")]
	private void OnTooltip(bool show)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE09254", Offset = "0xE09254", VA = "0xE09254")]
	public void Clear()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE0934C", Offset = "0xE0934C", VA = "0xE0934C")]
	public static UIEventListener Get(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE0940C", Offset = "0xE0940C", VA = "0xE0940C")]
	public UIEventListener()
	{
	}
}
[Token(Token = "0x200016C")]
public class UIGeometry
{
	[Token(Token = "0x200016D")]
	public delegate void OnCustomWrite(List<Vector3> v, List<Vector2> u, List<Color> c, List<Vector3> n, List<Vector4> t, List<Vector4> u2);

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector3> verts;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector2> uvs;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Color> cols;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnCustomWrite onCustomWrite;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> mRtpVerts;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 mRtpNormal;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector4 mRtpTan;

	[Token(Token = "0x170000FB")]
	public bool hasVertices
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xE09BB0", Offset = "0xE09BB0", VA = "0xE09BB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FC")]
	public bool hasTransformed
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xE09C00", Offset = "0xE09C00", VA = "0xE09C00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE09C6C", Offset = "0xE09C6C", VA = "0xE09C6C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE09D10", Offset = "0xE09D10", VA = "0xE09D10")]
	public void ApplyTransform(Matrix4x4 widgetToPanel, bool generateNormals = true)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE0A050", Offset = "0xE0A050", VA = "0xE0A050")]
	public void WriteToBuffers(List<Vector3> v, List<Vector2> u, List<Color> c, List<Vector3> n, List<Vector4> t, List<Vector4> u2)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE0A644", Offset = "0xE0A644", VA = "0xE0A644")]
	public UIGeometry()
	{
	}
}
[Token(Token = "0x200016E")]
public abstract class UIRect : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016F")]
	public class AnchorPoint
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float relative;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int absolute;

		[NonSerialized]
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIRect rect;

		[NonSerialized]
		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera targetCam;

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xE0CAD0", Offset = "0xE0CAD0", VA = "0xE0CAD0")]
		public AnchorPoint()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xE0CAD8", Offset = "0xE0CAD8", VA = "0xE0CAD8")]
		public AnchorPoint(float relative)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xE0CB74", Offset = "0xE0CB74", VA = "0xE0CB74")]
		public void Set(float relative, float absolute)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xE0CBFC", Offset = "0xE0CBFC", VA = "0xE0CBFC")]
		public void Set(Transform target, float relative, float absolute)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xE0CC98", Offset = "0xE0CC98", VA = "0xE0CC98")]
		public void SetToNearest(float abs0, float abs1, float abs2)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xE0CCB4", Offset = "0xE0CCB4", VA = "0xE0CCB4")]
		public void SetToNearest(float rel0, float rel1, float rel2, float abs0, float abs1, float abs2)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xE0CD00", Offset = "0xE0CD00", VA = "0xE0CD00")]
		public void SetHorizontal(Transform parent, float localPos)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xE0CEBC", Offset = "0xE0CEBC", VA = "0xE0CEBC")]
		public void SetVertical(Transform parent, float localPos)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xE0D074", Offset = "0xE0D074", VA = "0xE0D074")]
		public Vector3[] GetSides(Transform relativeTo)
		{
			return null;
		}
	}

	[Token(Token = "0x2000170")]
	[DoNotObfuscateNGUI]
	public enum AnchorUpdate
	{
		[Token(Token = "0x40007F8")]
		OnEnable,
		[Token(Token = "0x40007F9")]
		OnUpdate,
		[Token(Token = "0x40007FA")]
		OnStart
	}

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnchorPoint leftAnchor;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnchorPoint rightAnchor;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnchorPoint bottomAnchor;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnchorPoint topAnchor;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnchorUpdate updateAnchors;

	[NonSerialized]
	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject mGo;

	[NonSerialized]
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Transform mTrans;

	[NonSerialized]
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected BetterList<UIRect> mChildren;

	[NonSerialized]
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool mChanged;

	[NonSerialized]
	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	protected bool mParentFound;

	[NonSerialized]
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool mUpdateAnchors;

	[NonSerialized]
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int mUpdateFrame;

	[NonSerialized]
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mAnchorsCached;

	[NonSerialized]
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIRoot mRoot;

	[NonSerialized]
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UIRect mParent;

	[NonSerialized]
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool mRootSet;

	[NonSerialized]
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Camera mCam;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected bool mStarted;

	[NonSerialized]
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float finalAlpha;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Vector3[] mSides;

	[Token(Token = "0x170000FD")]
	public GameObject cachedGameObject
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xE0A8FC", Offset = "0xE0A8FC", VA = "0xE0A8FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	public Transform cachedTransform
	{
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xE0A990", Offset = "0xE0A990", VA = "0xE0A990")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FF")]
	public Camera anchorCamera
	{
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xE0AA24", Offset = "0xE0AA24", VA = "0xE0AA24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	public bool isFullyAnchored
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xE0ACE8", Offset = "0xE0ACE8", VA = "0xE0ACE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000101")]
	public virtual bool isAnchoredHorizontally
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xE0ADE4", Offset = "0xE0ADE4", VA = "0xE0ADE4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000102")]
	public virtual bool isAnchoredVertically
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xE0AE88", Offset = "0xE0AE88", VA = "0xE0AE88", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000103")]
	public virtual bool canBeAnchored
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xE0AF2C", Offset = "0xE0AF2C", VA = "0xE0AF2C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000104")]
	public UIRect parent
	{
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xE0AF34", Offset = "0xE0AF34", VA = "0xE0AF34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public UIRoot root
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xE0AFE8", Offset = "0xE0AFE8", VA = "0xE0AFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000106")]
	public bool isAnchored
	{
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xE0B0E4", Offset = "0xE0B0E4", VA = "0xE0B0E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000107")]
	public abstract float alpha
	{
		[Token(Token = "0x60008EA")]
		get;
		[Token(Token = "0x60008EB")]
		set;
	}

	[Token(Token = "0x17000108")]
	public abstract Vector3[] localCorners
	{
		[Token(Token = "0x60008ED")]
		get;
	}

	[Token(Token = "0x17000109")]
	public abstract Vector3[] worldCorners
	{
		[Token(Token = "0x60008EE")]
		get;
	}

	[Token(Token = "0x1700010A")]
	protected float cameraRayDistance
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xE0B1F4", Offset = "0xE0B1F4", VA = "0xE0B1F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60008EC")]
	public abstract float CalculateFinalAlpha(int frameID);

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xE0B49C", Offset = "0xE0B49C", VA = "0xE0B49C", Slot = "12")]
	public virtual void Invalidate(bool includeChildren)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xE0B51C", Offset = "0xE0B51C", VA = "0xE0B51C", Slot = "13")]
	public virtual Vector3[] GetSides(Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xE0B754", Offset = "0xE0B754", VA = "0xE0B754")]
	protected Vector3 GetLocalPos(AnchorPoint ac, Transform trans)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xE0BA98", Offset = "0xE0BA98", VA = "0xE0BA98", Slot = "14")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xE0BAE8", Offset = "0xE0BAE8", VA = "0xE0BAE8", Slot = "15")]
	protected virtual void OnInit()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xE0BBA4", Offset = "0xE0BBA4", VA = "0xE0BBA4", Slot = "16")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xE0BC70", Offset = "0xE0BC70", VA = "0xE0BC70", Slot = "17")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xE0BD18", Offset = "0xE0BD18", VA = "0xE0BD18")]
	public void Start()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xE0BD60", Offset = "0xE0BD60", VA = "0xE0BD60")]
	public void Update()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xE0BE58", Offset = "0xE0BE58", VA = "0xE0BE58")]
	protected void UpdateAnchorsInternal(int frame)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xE0C0DC", Offset = "0xE0C0DC", VA = "0xE0C0DC")]
	public void UpdateAnchors()
	{
	}

	[Token(Token = "0x60008FB")]
	protected abstract void OnAnchor();

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xE0C11C", Offset = "0xE0C11C", VA = "0xE0C11C")]
	public void SetAnchor(Transform t)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xE0C194", Offset = "0xE0C194", VA = "0xE0C194")]
	public void SetAnchor(GameObject go)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xE0C27C", Offset = "0xE0C27C", VA = "0xE0C27C")]
	public void SetAnchor(GameObject go, int left, int bottom, int right, int top)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xE0C3CC", Offset = "0xE0C3CC", VA = "0xE0C3CC")]
	public void SetAnchor(GameObject go, float left, float bottom, float right, float top)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xE0C514", Offset = "0xE0C514", VA = "0xE0C514")]
	public void SetAnchor(GameObject go, float left, int leftOffset, float bottom, int bottomOffset, float right, int rightOffset, float top, int topOffset)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xE0C67C", Offset = "0xE0C67C", VA = "0xE0C67C")]
	public void SetAnchor(float left, int leftOffset, float bottom, int bottomOffset, float right, int rightOffset, float top, int topOffset)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xE0C78C", Offset = "0xE0C78C", VA = "0xE0C78C")]
	public void SetScreenRect(int left, int top, int width, int height)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xE0AA9C", Offset = "0xE0AA9C", VA = "0xE0AA9C")]
	public void ResetAnchors()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xE0BE40", Offset = "0xE0BE40", VA = "0xE0BE40")]
	public void ResetAndUpdateAnchors()
	{
	}

	[Token(Token = "0x6000905")]
	public abstract void SetRect(float x, float y, float width, float height);

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xE0B990", Offset = "0xE0B990", VA = "0xE0B990")]
	private void FindCameraFor(AnchorPoint ap)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xE0C7B0", Offset = "0xE0C7B0", VA = "0xE0C7B0", Slot = "20")]
	public virtual void ParentHasChanged()
	{
	}

	[Token(Token = "0x6000908")]
	protected abstract void OnStart();

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xE0C950", Offset = "0xE0C950", VA = "0xE0C950", Slot = "22")]
	protected virtual void OnUpdate()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xE0C954", Offset = "0xE0C954", VA = "0xE0C954")]
	protected UIRect()
	{
	}
}
[Token(Token = "0x2000171")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/Internal/Snapshot Point")]
public class UISnapshotPoint : MonoBehaviour
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOrthographic;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float nearClip;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float farClip;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(10f, 80f)]
	public int fieldOfView;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float orthoSize;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D thumbnail;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE0D1D0", Offset = "0xE0D1D0", VA = "0xE0D1D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xE0D244", Offset = "0xE0D244", VA = "0xE0D244")]
	public UISnapshotPoint()
	{
	}
}
[Token(Token = "0x2000172")]
[AddComponentMenu("NGUI/UI/Invisible Widget")]
[ExecuteInEditMode]
public class UIWidget : UIRect
{
	[Token(Token = "0x2000173")]
	[DoNotObfuscateNGUI]
	public enum Pivot
	{
		[Token(Token = "0x4000821")]
		TopLeft,
		[Token(Token = "0x4000822")]
		Top,
		[Token(Token = "0x4000823")]
		TopRight,
		[Token(Token = "0x4000824")]
		Left,
		[Token(Token = "0x4000825")]
		Center,
		[Token(Token = "0x4000826")]
		Right,
		[Token(Token = "0x4000827")]
		BottomLeft,
		[Token(Token = "0x4000828")]
		Bottom,
		[Token(Token = "0x4000829")]
		BottomRight
	}

	[Token(Token = "0x2000174")]
	public delegate void OnDimensionsChanged();

	[Token(Token = "0x2000175")]
	public delegate void OnPostFillCallback(UIWidget widget, int bufferOffset, List<Vector3> verts, List<Vector2> uvs, List<Color> cols);

	[Token(Token = "0x2000176")]
	[DoNotObfuscateNGUI]
	public enum AspectRatioSource
	{
		[Token(Token = "0x400082B")]
		Free,
		[Token(Token = "0x400082C")]
		BasedOnWidth,
		[Token(Token = "0x400082D")]
		BasedOnHeight
	}

	[Token(Token = "0x2000177")]
	public delegate bool HitCheck(Vector3 worldPos);

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[HideInInspector]
	protected Color mColor;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	[SerializeField]
	protected Pivot mPivot;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	[SerializeField]
	protected int mWidth;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	[SerializeField]
	protected int mHeight;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	[SerializeField]
	protected int mDepth;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[UnityEngine.Tooltip("Custom material, if desired")]
	[HideInInspector]
	protected Material mMat;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public OnDimensionsChanged onChange;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public OnPostFillCallback onPostFill;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UIDrawCall.OnRenderCallback mOnRender;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool autoResizeBoxCollider;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool hideIfOffScreen;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public AspectRatioSource keepAspectRatio;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float aspectRatio;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public HitCheck hitCheck;

	[NonSerialized]
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UIPanel panel;

	[NonSerialized]
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UIGeometry geometry;

	[NonSerialized]
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool fillGeometry;

	[NonSerialized]
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	protected bool mPlayMode;

	[NonSerialized]
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected Vector4 mDrawRegion;

	[NonSerialized]
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Matrix4x4 mLocalToPanel;

	[NonSerialized]
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool mIsVisibleByAlpha;

	[NonSerialized]
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool mIsVisibleByPanel;

	[NonSerialized]
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
	private bool mIsInFront;

	[NonSerialized]
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float mLastAlpha;

	[NonSerialized]
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool mMoved;

	[NonSerialized]
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UIDrawCall drawCall;

	[NonSerialized]
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected Vector3[] mCorners;

	[NonSerialized]
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int mAlphaFrameID;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int mMatrixFrame;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 mOldV0;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 mOldV1;

	[Token(Token = "0x1700010B")]
	public UIDrawCall.OnRenderCallback onRender
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xE0D26C", Offset = "0xE0D26C", VA = "0xE0D26C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xE0D274", Offset = "0xE0D274", VA = "0xE0D274")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public Vector4 drawRegion
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xE0D41C", Offset = "0xE0D41C", VA = "0xE0D41C")]
		get
		{
			return default(Vector4);
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xE0D42C", Offset = "0xE0D42C", VA = "0xE0D42C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public Vector2 pivotOffset
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xE0D5D0", Offset = "0xE0D5D0", VA = "0xE0D5D0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700010E")]
	public int width
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xE0D644", Offset = "0xE0D644", VA = "0xE0D644")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xE0D64C", Offset = "0xE0D64C", VA = "0xE0D64C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public int height
	{
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xE0DAE4", Offset = "0xE0DAE4", VA = "0xE0DAE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xE0DAEC", Offset = "0xE0DAEC", VA = "0xE0DAEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public Color color
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xE0DD38", Offset = "0xE0DD38", VA = "0xE0DD38")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xE0DD44", Offset = "0xE0DD44", VA = "0xE0DD44")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public override float alpha
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xE0DDE8", Offset = "0xE0DDE8", VA = "0xE0DDE8", Slot = "7")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xE0DDF0", Offset = "0xE0DDF0", VA = "0xE0DDF0", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public bool isVisible
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xE0DE14", Offset = "0xE0DE14", VA = "0xE0DE14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000113")]
	public bool hasVertices
	{
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xE0DEA8", Offset = "0xE0DEA8", VA = "0xE0DEA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000114")]
	public Pivot rawPivot
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xE0DEB8", Offset = "0xE0DEB8", VA = "0xE0DEB8")]
		get
		{
			return default(Pivot);
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xE0DEC0", Offset = "0xE0DEC0", VA = "0xE0DEC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public virtual Pivot pivot
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xE0DF08", Offset = "0xE0DF08", VA = "0xE0DF08", Slot = "23")]
		get
		{
			return default(Pivot);
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xE0DF10", Offset = "0xE0DF10", VA = "0xE0DF10", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public virtual int depth
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xE0E244", Offset = "0xE0E244", VA = "0xE0E244", Slot = "25")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0xE0E24C", Offset = "0xE0E24C", VA = "0xE0E24C", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public int raycastDepth
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0xE0E35C", Offset = "0xE0E35C", VA = "0xE0E35C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000118")]
	public override Vector3[] localCorners
	{
		[Token(Token = "0x600092E")]
		[Address(RVA = "0xE0E5BC", Offset = "0xE0E5BC", VA = "0xE0E5BC", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public virtual Vector2 localSize
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0xE0E66C", Offset = "0xE0E66C", VA = "0xE0E66C", Slot = "27")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700011A")]
	public Vector3 localCenter
	{
		[Token(Token = "0x6000930")]
		[Address(RVA = "0xE0E6AC", Offset = "0xE0E6AC", VA = "0xE0E6AC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011B")]
	public override Vector3[] worldCorners
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0xE0E714", Offset = "0xE0E714", VA = "0xE0E714", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	public Vector3 worldCenter
	{
		[Token(Token = "0x6000932")]
		[Address(RVA = "0xE0E858", Offset = "0xE0E858", VA = "0xE0E858")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011D")]
	public virtual Vector4 drawingDimensions
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0xE0E890", Offset = "0xE0E890", VA = "0xE0E890", Slot = "28")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x1700011E")]
	public virtual Material material
	{
		[Token(Token = "0x6000934")]
		[Address(RVA = "0xE0E970", Offset = "0xE0E970", VA = "0xE0E970", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000935")]
		[Address(RVA = "0xE0E978", Offset = "0xE0E978", VA = "0xE0E978", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public virtual Texture mainTexture
	{
		[Token(Token = "0x6000936")]
		[Address(RVA = "0xE0EAD0", Offset = "0xE0EAD0", VA = "0xE0EAD0", Slot = "31")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xE0EB70", Offset = "0xE0EB70", VA = "0xE0EB70", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public virtual Shader shader
	{
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xE0EBF8", Offset = "0xE0EBF8", VA = "0xE0EBF8", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000939")]
		[Address(RVA = "0xE0EC98", Offset = "0xE0EC98", VA = "0xE0EC98", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	[Obsolete("There is no relative scale anymore. Widgets now have width and height instead")]
	public Vector2 relativeSize
	{
		[Token(Token = "0x600093A")]
		[Address(RVA = "0xE0ED20", Offset = "0xE0ED20", VA = "0xE0ED20")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000122")]
	public bool hasBoxCollider
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0xE0ED60", Offset = "0xE0ED60", VA = "0xE0ED60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000123")]
	public virtual bool isSelectable
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0xE10F7C", Offset = "0xE10F7C", VA = "0xE10F7C", Slot = "38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000124")]
	public virtual int minWidth
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0xE117B4", Offset = "0xE117B4", VA = "0xE117B4", Slot = "40")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000125")]
	public virtual int minHeight
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0xE117BC", Offset = "0xE117BC", VA = "0xE117BC", Slot = "41")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000126")]
	public virtual Vector4 border
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xE117C4", Offset = "0xE117C4", VA = "0xE117C4", Slot = "42")]
		get
		{
			return default(Vector4);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xE11808", Offset = "0xE11808", VA = "0xE11808", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xE0DDA8", Offset = "0xE0DDA8", VA = "0xE0DDA8")]
	public void SetColorNoAlpha(Color c)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xE0D8A8", Offset = "0xE0D8A8", VA = "0xE0D8A8")]
	public void SetDimensions(int w, int h)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xE0EE9C", Offset = "0xE0EE9C", VA = "0xE0EE9C", Slot = "13")]
	public override Vector3[] GetSides(Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xE0F0B4", Offset = "0xE0F0B4", VA = "0xE0F0B4", Slot = "9")]
	public override float CalculateFinalAlpha(int frameID)
	{
		return default(float);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xE0F0E0", Offset = "0xE0F0E0", VA = "0xE0F0E0")]
	protected void UpdateFinalAlpha(int frameID)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xE0F19C", Offset = "0xE0F19C", VA = "0xE0F19C", Slot = "12")]
	public override void Invalidate(bool includeChildren)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xE0F2E0", Offset = "0xE0F2E0", VA = "0xE0F2E0")]
	public float CalculateCumulativeAlpha(int frameID)
	{
		return default(float);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xE0F3CC", Offset = "0xE0F3CC", VA = "0xE0F3CC", Slot = "19")]
	public override void SetRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xE0D4B8", Offset = "0xE0D4B8", VA = "0xE0D4B8")]
	public void ResizeCollider()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xE0F75C", Offset = "0xE0F75C", VA = "0xE0F75C")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static int FullCompareFunc(UIWidget left, UIWidget right)
	{
		return default(int);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xE0F7F8", Offset = "0xE0F7F8", VA = "0xE0F7F8")]
	[DebuggerStepThrough]
	[DebuggerHidden]
	public static int PanelCompareFunc(UIWidget left, UIWidget right)
	{
		return default(int);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xE0F944", Offset = "0xE0F944", VA = "0xE0F944")]
	public Bounds CalculateBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xE0F978", Offset = "0xE0F978", VA = "0xE0F978")]
	public Bounds CalculateBounds(Transform relativeParent)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xE0FC00", Offset = "0xE0FC00", VA = "0xE0FC00", Slot = "35")]
	public virtual void SetDirty()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xE0EA28", Offset = "0xE0EA28", VA = "0xE0EA28")]
	public void RemoveFromPanel()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xE0FCAC", Offset = "0xE0FCAC", VA = "0xE0FCAC", Slot = "36")]
	public virtual void MarkAsChanged()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xE0E414", Offset = "0xE0E414", VA = "0xE0E414")]
	public UIPanel CreatePanel()
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xE0FDC0", Offset = "0xE0FDC0", VA = "0xE0FDC0")]
	public void CheckLayer()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xE0FF00", Offset = "0xE0FF00", VA = "0xE0FF00", Slot = "20")]
	public override void ParentHasChanged()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xE10028", Offset = "0xE10028", VA = "0xE10028", Slot = "17")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xE1004C", Offset = "0xE1004C", VA = "0xE1004C", Slot = "15")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xE10074", Offset = "0xE10074", VA = "0xE10074", Slot = "37")]
	protected virtual void UpgradeFrom265()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xE1030C", Offset = "0xE1030C", VA = "0xE1030C", Slot = "21")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xE10310", Offset = "0xE10310", VA = "0xE10310", Slot = "18")]
	protected override void OnAnchor()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xE10ED0", Offset = "0xE10ED0", VA = "0xE10ED0", Slot = "22")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xE10F48", Offset = "0xE10F48", VA = "0xE10F48")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xE10F60", Offset = "0xE10F60", VA = "0xE10F60", Slot = "16")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xE10F78", Offset = "0xE10F78", VA = "0xE10F78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xE0F38C", Offset = "0xE0F38C", VA = "0xE0F38C")]
	public bool UpdateVisibility(bool visibleByAlpha, bool visibleByPanel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xE10F84", Offset = "0xE10F84", VA = "0xE10F84")]
	public bool UpdateTransform(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xE1122C", Offset = "0xE1122C", VA = "0xE1122C")]
	public bool UpdateGeometry(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xE1156C", Offset = "0xE1156C", VA = "0xE1156C")]
	public void WriteToBuffers(List<Vector3> v, List<Vector2> u, List<Color> c, List<Vector3> n, List<Vector4> t, List<Vector4> u2)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xE11584", Offset = "0xE11584", VA = "0xE11584", Slot = "39")]
	public virtual void MakePixelPerfect()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xE1180C", Offset = "0xE1180C", VA = "0xE1180C", Slot = "44")]
	public virtual void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xE11810", Offset = "0xE11810", VA = "0xE11810", Slot = "45")]
	public virtual void OnAddToPanel(UIPanel p)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xE11814", Offset = "0xE11814", VA = "0xE11814", Slot = "46")]
	public virtual void OnRemoveFromPanel(UIPanel p)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xE11818", Offset = "0xE11818", VA = "0xE11818")]
	public UIWidget()
	{
	}
}
[Token(Token = "0x2000178")]
[ExecuteInEditMode]
public class AnimatedAlpha : MonoBehaviour
{
	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float alpha;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIWidget mWidget;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIPanel mPanel;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xE11D48", Offset = "0xE11D48", VA = "0xE11D48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xE11DE0", Offset = "0xE11DE0", VA = "0xE11DE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xE11EAC", Offset = "0xE11EAC", VA = "0xE11EAC")]
	public AnimatedAlpha()
	{
	}
}
[Token(Token = "0x2000179")]
[RequireComponent(typeof(UIWidget))]
[ExecuteInEditMode]
public class AnimatedColor : MonoBehaviour
{
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIWidget mWidget;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xE11EBC", Offset = "0xE11EBC", VA = "0xE11EBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xE11F1C", Offset = "0xE11F1C", VA = "0xE11F1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xE11F40", Offset = "0xE11F40", VA = "0xE11F40")]
	public AnimatedColor()
	{
	}
}
[Token(Token = "0x200017A")]
[ExecuteInEditMode]
public class AnimatedWidget : MonoBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float width;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float height;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIWidget mWidget;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xE11F50", Offset = "0xE11F50", VA = "0xE11F50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xE11FB0", Offset = "0xE11FB0", VA = "0xE11FB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xE121F4", Offset = "0xE121F4", VA = "0xE121F4")]
	public AnimatedWidget()
	{
	}
}
[Token(Token = "0x200017B")]
[AddComponentMenu("NGUI/Tween/Spring Position")]
public class SpringPosition : MonoBehaviour
{
	[Token(Token = "0x200017C")]
	public delegate void OnFinished();

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpringPosition current;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 target;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float strength;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool worldSpace;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool ignoreTimeScale;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool updateScrollView;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnFinished onFinished;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private GameObject eventReceiver;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	public string callWhenFinished;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform mTrans;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mThreshold;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIScrollView mSv;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xE12204", Offset = "0xE12204", VA = "0xE12204")]
	private void Start()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xE122C8", Offset = "0xE122C8", VA = "0xE122C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xE1260C", Offset = "0xE1260C", VA = "0xE1260C")]
	private void NotifyListeners()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xE12704", Offset = "0xE12704", VA = "0xE12704")]
	public static SpringPosition Begin(GameObject go, Vector3 pos, float strength)
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xE1281C", Offset = "0xE1281C", VA = "0xE1281C")]
	public SpringPosition()
	{
	}
}
[Token(Token = "0x200017D")]
[AddComponentMenu("NGUI/Tween/Tween Alpha")]
public class TweenAlpha : UITweener
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 1f)]
	public float from;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Range(0f, 1f)]
	public float to;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[UnityEngine.Tooltip("If used on a renderer, the material should probably be cleaned up after this script gets destroyed...")]
	public bool autoCleanup;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[UnityEngine.Tooltip("Color to adjust")]
	public string colorProperty;

	[NonSerialized]
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool mCached;

	[NonSerialized]
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIRect mRect;

	[NonSerialized]
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material mShared;

	[NonSerialized]
	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mMat;

	[NonSerialized]
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Light mLight;

	[NonSerialized]
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SpriteRenderer mSr;

	[NonSerialized]
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float mBaseIntensity;

	[Token(Token = "0x17000127")]
	[Obsolete("Use 'value' instead")]
	public float alpha
	{
		[Token(Token = "0x6000983")]
		[Address(RVA = "0xE1295C", Offset = "0xE1295C", VA = "0xE1295C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000984")]
		[Address(RVA = "0xE12AA4", Offset = "0xE12AA4", VA = "0xE12AA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public float value
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0xE12960", Offset = "0xE12960", VA = "0xE12960")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000988")]
		[Address(RVA = "0xE12AA8", Offset = "0xE12AA8", VA = "0xE12AA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xE12C9C", Offset = "0xE12C9C", VA = "0xE12C9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xE12D7C", Offset = "0xE12D7C", VA = "0xE12D7C")]
	private void Cache()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xE12FE4", Offset = "0xE12FE4", VA = "0xE12FE4", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xE1300C", Offset = "0xE1300C", VA = "0xE1300C")]
	public static TweenAlpha Begin(GameObject go, float duration, float alpha, float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xE13218", Offset = "0xE13218", VA = "0xE13218", Slot = "8")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xE13230", Offset = "0xE13230", VA = "0xE13230", Slot = "9")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xE13248", Offset = "0xE13248", VA = "0xE13248")]
	public TweenAlpha()
	{
	}
}
[Token(Token = "0x200017E")]
[AddComponentMenu("NGUI/Tween/Tween Color")]
public class TweenColor : UITweener
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color from;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color to;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool mCached;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UIWidget mWidget;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mMat;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Light mLight;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SpriteRenderer mSr;

	[Token(Token = "0x17000129")]
	[Obsolete("Use 'value' instead")]
	public Color color
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0xE13640", Offset = "0xE13640", VA = "0xE13640")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000990")]
		[Address(RVA = "0xE13798", Offset = "0xE13798", VA = "0xE13798")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public Color value
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xE13644", Offset = "0xE13644", VA = "0xE13644")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xE1379C", Offset = "0xE1379C", VA = "0xE1379C")]
		set
		{
		}
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xE13430", Offset = "0xE13430", VA = "0xE13430")]
	private void Cache()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xE13994", Offset = "0xE13994", VA = "0xE13994", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xE139C8", Offset = "0xE139C8", VA = "0xE139C8")]
	public static TweenColor Begin(GameObject go, float duration, Color color)
	{
		return null;
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xE13A94", Offset = "0xE13A94", VA = "0xE13A94", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xE13AB0", Offset = "0xE13AB0", VA = "0xE13AB0", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xE13ACC", Offset = "0xE13ACC", VA = "0xE13ACC")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xE13AD8", Offset = "0xE13AD8", VA = "0xE13AD8")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xE13AE4", Offset = "0xE13AE4", VA = "0xE13AE4")]
	public TweenColor()
	{
	}
}
[Token(Token = "0x200017F")]
[AddComponentMenu("NGUI/Tween/Tween Fill")]
[RequireComponent(typeof(UIBasicSprite))]
public class TweenFill : UITweener
{
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 1f)]
	public float from;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Range(0f, 1f)]
	public float to;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool mCached;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UIBasicSprite mSprite;

	[Token(Token = "0x1700012B")]
	public float value
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xE13B50", Offset = "0xE13B50", VA = "0xE13B50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xE13BDC", Offset = "0xE13BDC", VA = "0xE13BDC")]
		set
		{
		}
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xE13AF0", Offset = "0xE13AF0", VA = "0xE13AF0")]
	private void Cache()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xE13C84", Offset = "0xE13C84", VA = "0xE13C84", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xE13CAC", Offset = "0xE13CAC", VA = "0xE13CAC")]
	public static TweenFill Begin(GameObject go, float duration, float fill)
	{
		return null;
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xE13D50", Offset = "0xE13D50", VA = "0xE13D50", Slot = "8")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xE13D68", Offset = "0xE13D68", VA = "0xE13D68", Slot = "9")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xE13D80", Offset = "0xE13D80", VA = "0xE13D80")]
	public TweenFill()
	{
	}
}
[Token(Token = "0x2000180")]
[AddComponentMenu("NGUI/Tween/Tween Field of View")]
[RequireComponent(typeof(Camera))]
public class TweenFOV : UITweener
{
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float from;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float to;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera mCam;

	[Token(Token = "0x1700012C")]
	public Camera cachedCamera
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xE13D8C", Offset = "0xE13D8C", VA = "0xE13D8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	[Obsolete("Use 'value' instead")]
	public float fov
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xE13E34", Offset = "0xE13E34", VA = "0xE13E34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xE13E54", Offset = "0xE13E54", VA = "0xE13E54")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float value
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xE13E38", Offset = "0xE13E38", VA = "0xE13E38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xE13E58", Offset = "0xE13E58", VA = "0xE13E58")]
		set
		{
		}
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xE13E84", Offset = "0xE13E84", VA = "0xE13E84", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xE13EA0", Offset = "0xE13EA0", VA = "0xE13EA0")]
	public static TweenFOV Begin(GameObject go, float duration, float to)
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xE13F44", Offset = "0xE13F44", VA = "0xE13F44", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xE13F5C", Offset = "0xE13F5C", VA = "0xE13F5C", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xE13F74", Offset = "0xE13F74", VA = "0xE13F74")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xE13F7C", Offset = "0xE13F7C", VA = "0xE13F7C")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xE13F84", Offset = "0xE13F84", VA = "0xE13F84")]
	public TweenFOV()
	{
	}
}
[Token(Token = "0x2000181")]
[AddComponentMenu("NGUI/Tween/Tween Height")]
[RequireComponent(typeof(UIWidget))]
public class TweenHeight : UITweener
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int from;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int to;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[UnityEngine.Tooltip("If set, 'from' value will be set to match the specified rectangle")]
	public UIWidget fromTarget;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[UnityEngine.Tooltip("If set, 'to' value will be set to match the specified rectangle")]
	public UIWidget toTarget;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[UnityEngine.Tooltip("Whether there is a table that should be updated")]
	public bool updateTable;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIWidget mWidget;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UITable mTable;

	[Token(Token = "0x1700012F")]
	public UIWidget cachedWidget
	{
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xE13F94", Offset = "0xE13F94", VA = "0xE13F94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	[Obsolete("Use 'value' instead")]
	public int height
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xE1403C", Offset = "0xE1403C", VA = "0xE1403C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xE14074", Offset = "0xE14074", VA = "0xE14074")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public int value
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xE14058", Offset = "0xE14058", VA = "0xE14058")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xE14078", Offset = "0xE14078", VA = "0xE14078")]
		set
		{
		}
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xE14098", Offset = "0xE14098", VA = "0xE14098", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xE1433C", Offset = "0xE1433C", VA = "0xE1433C")]
	public static TweenHeight Begin(UIWidget widget, float duration, int height)
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xE143EC", Offset = "0xE143EC", VA = "0xE143EC", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xE14410", Offset = "0xE14410", VA = "0xE14410", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xE14434", Offset = "0xE14434", VA = "0xE14434")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xE1443C", Offset = "0xE1443C", VA = "0xE1443C")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xE14444", Offset = "0xE14444", VA = "0xE14444")]
	public TweenHeight()
	{
	}
}
[Token(Token = "0x2000182")]
public class TweenLetters : UITweener
{
	[Token(Token = "0x2000183")]
	[DoNotObfuscateNGUI]
	public enum AnimationLetterOrder
	{
		[Token(Token = "0x400086A")]
		Forward,
		[Token(Token = "0x400086B")]
		Reverse,
		[Token(Token = "0x400086C")]
		Random
	}

	[Token(Token = "0x2000184")]
	private struct LetterProperties
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float start;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rot;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;
	}

	[Serializable]
	[Token(Token = "0x2000185")]
	public class AnimationProperties
	{
		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[UnityEngine.Tooltip("If set, overrides the tween's animation duration")]
		public float duration;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimationLetterOrder animationOrder;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float overlap;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[UnityEngine.Tooltip("If set, each letter will animate with a random duration")]
		public bool randomDurations;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[MinMaxRange(0f, 1f)]
		public Vector2 randomness;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool upgraded;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Vector2 offsetRange;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public Vector3 pos;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 rot;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public Vector3 scale;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 pos1;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 pos2;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rot1;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 rot2;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 scale1;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 scale2;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Range(0f, 1f)]
		[UnityEngine.Tooltip("Starting or finishing alpha")]
		public float alpha;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xE145DC", Offset = "0xE145DC", VA = "0xE145DC")]
		public void Upgrade()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xE15758", Offset = "0xE15758", VA = "0xE15758")]
		public AnimationProperties()
		{
		}
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationProperties hoverOver;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationProperties hoverOut;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UILabel mLabel;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int mVertexCount;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] mLetterOrder;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LetterProperties[] mLetter;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AnimationProperties mCurrent;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xE14450", Offset = "0xE14450", VA = "0xE14450")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xE14648", Offset = "0xE14648", VA = "0xE14648")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xE14768", Offset = "0xE14768", VA = "0xE14768", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xE14848", Offset = "0xE14848", VA = "0xE14848", Slot = "6")]
	public override void Play(bool forward)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xE1495C", Offset = "0xE1495C", VA = "0xE1495C")]
	private void OnPostFill(UIWidget widget, int bufferOffset, List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xE1566C", Offset = "0xE1566C", VA = "0xE1566C", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xE1508C", Offset = "0xE1508C", VA = "0xE1508C")]
	private void SetLetterOrder(int letterCount)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xE15430", Offset = "0xE15430", VA = "0xE15430")]
	private void GetLetterDuration(int letterCount)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xE15740", Offset = "0xE15740", VA = "0xE15740")]
	private float ScaleRange(float value, float baseMax, float limitMax)
	{
		return default(float);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xE1559C", Offset = "0xE1559C", VA = "0xE1559C")]
	private static Vector3 GetCenter(List<Vector3> verts, int firstVert, int length)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xE1574C", Offset = "0xE1574C", VA = "0xE1574C")]
	public TweenLetters()
	{
	}
}
[Token(Token = "0x2000186")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("NGUI/Tween/Tween Orthographic Size")]
public class TweenOrthoSize : UITweener
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float from;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float to;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera mCam;

	[Token(Token = "0x17000132")]
	public Camera cachedCamera
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xE15918", Offset = "0xE15918", VA = "0xE15918")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	[Obsolete("Use 'value' instead")]
	public float orthoSize
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xE159C0", Offset = "0xE159C0", VA = "0xE159C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xE159E0", Offset = "0xE159E0", VA = "0xE159E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public float value
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xE159C4", Offset = "0xE159C4", VA = "0xE159C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xE159E4", Offset = "0xE159E4", VA = "0xE159E4")]
		set
		{
		}
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xE15A10", Offset = "0xE15A10", VA = "0xE15A10", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xE15A2C", Offset = "0xE15A2C", VA = "0xE15A2C")]
	public static TweenOrthoSize Begin(GameObject go, float duration, float to)
	{
		return null;
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xE15AD0", Offset = "0xE15AD0", VA = "0xE15AD0", Slot = "8")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xE15AE8", Offset = "0xE15AE8", VA = "0xE15AE8", Slot = "9")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xE15B00", Offset = "0xE15B00", VA = "0xE15B00")]
	public TweenOrthoSize()
	{
	}
}
[Token(Token = "0x2000187")]
[AddComponentMenu("NGUI/Tween/Tween Position")]
public class TweenPosition : UITweener
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 from;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 to;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool worldSpace;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform mTrans;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UIRect mRect;

	[Token(Token = "0x17000135")]
	public Transform cachedTransform
	{
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xE15B0C", Offset = "0xE15B0C", VA = "0xE15B0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000136")]
	[Obsolete("Use 'value' instead")]
	public Vector3 position
	{
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xE15BA0", Offset = "0xE15BA0", VA = "0xE15BA0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xE15BD0", Offset = "0xE15BD0", VA = "0xE15BD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public Vector3 value
	{
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xE15BA4", Offset = "0xE15BA4", VA = "0xE15BA4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xE15BD4", Offset = "0xE15BD4", VA = "0xE15BD4")]
		set
		{
		}
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xE15D14", Offset = "0xE15D14", VA = "0xE15D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xE15D6C", Offset = "0xE15D6C", VA = "0xE15D6C", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xE15DA4", Offset = "0xE15DA4", VA = "0xE15DA4")]
	public static TweenPosition Begin(GameObject go, float duration, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xE15E60", Offset = "0xE15E60", VA = "0xE15E60")]
	public static TweenPosition Begin(GameObject go, float duration, Vector3 pos, bool worldSpace)
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xE15F30", Offset = "0xE15F30", VA = "0xE15F30", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xE15F4C", Offset = "0xE15F4C", VA = "0xE15F4C", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xE15F68", Offset = "0xE15F68", VA = "0xE15F68")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xE15F74", Offset = "0xE15F74", VA = "0xE15F74")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xE15F80", Offset = "0xE15F80", VA = "0xE15F80")]
	public TweenPosition()
	{
	}
}
[Token(Token = "0x2000188")]
[AddComponentMenu("NGUI/Tween/Tween Rotation")]
public class TweenRotation : UITweener
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 from;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 to;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool quaternionLerp;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform mTrans;

	[Token(Token = "0x17000138")]
	public Transform cachedTransform
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xE15F84", Offset = "0xE15F84", VA = "0xE15F84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000139")]
	[Obsolete("Use 'value' instead")]
	public Quaternion rotation
	{
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xE16018", Offset = "0xE16018", VA = "0xE16018")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xE16038", Offset = "0xE16038", VA = "0xE16038")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public Quaternion value
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xE1601C", Offset = "0xE1601C", VA = "0xE1601C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xE1603C", Offset = "0xE1603C", VA = "0xE1603C")]
		set
		{
		}
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xE16088", Offset = "0xE16088", VA = "0xE16088", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xE161AC", Offset = "0xE161AC", VA = "0xE161AC")]
	public static TweenRotation Begin(GameObject go, float duration, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xE162C8", Offset = "0xE162C8", VA = "0xE162C8", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xE16308", Offset = "0xE16308", VA = "0xE16308", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xE16348", Offset = "0xE16348", VA = "0xE16348")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xE16380", Offset = "0xE16380", VA = "0xE16380")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xE163B8", Offset = "0xE163B8", VA = "0xE163B8")]
	public TweenRotation()
	{
	}
}
[Token(Token = "0x2000189")]
[AddComponentMenu("NGUI/Tween/Tween Scale")]
public class TweenScale : UITweener
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 from;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 to;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool updateTable;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform mTrans;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UITable mTable;

	[Token(Token = "0x1700013B")]
	public Transform cachedTransform
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xE163BC", Offset = "0xE163BC", VA = "0xE163BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013C")]
	public Vector3 value
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xE16450", Offset = "0xE16450", VA = "0xE16450")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xE1646C", Offset = "0xE1646C", VA = "0xE1646C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	[Obsolete("Use 'value' instead")]
	public Vector3 scale
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xE164B0", Offset = "0xE164B0", VA = "0xE164B0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xE164B4", Offset = "0xE164B4", VA = "0xE164B4")]
		set
		{
		}
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xE164B8", Offset = "0xE164B8", VA = "0xE164B8", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xE1663C", Offset = "0xE1663C", VA = "0xE1663C")]
	public static TweenScale Begin(GameObject go, float duration, Vector3 scale)
	{
		return null;
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xE166F8", Offset = "0xE166F8", VA = "0xE166F8", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xE16714", Offset = "0xE16714", VA = "0xE16714", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xE16730", Offset = "0xE16730", VA = "0xE16730")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xE1673C", Offset = "0xE1673C", VA = "0xE1673C")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xE16748", Offset = "0xE16748", VA = "0xE16748")]
	public TweenScale()
	{
	}
}
[Token(Token = "0x200018A")]
[AddComponentMenu("NGUI/Tween/Tween Transform")]
public class TweenTransform : UITweener
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform from;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform to;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool parentWhenFinished;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform mTrans;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 mPos;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion mRot;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 mScale;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xE167B8", Offset = "0xE167B8", VA = "0xE167B8", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xE16B70", Offset = "0xE16B70", VA = "0xE16B70")]
	public static TweenTransform Begin(GameObject go, float duration, Transform to)
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xE16B7C", Offset = "0xE16B7C", VA = "0xE16B7C")]
	public static TweenTransform Begin(GameObject go, float duration, Transform from, Transform to)
	{
		return null;
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xE16C40", Offset = "0xE16C40", VA = "0xE16C40")]
	public TweenTransform()
	{
	}
}
[Token(Token = "0x200018B")]
[RequireComponent(typeof(AudioSource))]
[AddComponentMenu("NGUI/Tween/Tween Volume")]
public class TweenVolume : UITweener
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 1f)]
	public float from;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Range(0f, 1f)]
	public float to;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource mSource;

	[Token(Token = "0x1700013E")]
	public AudioSource audioSource
	{
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xE16C44", Offset = "0xE16C44", VA = "0xE16C44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013F")]
	[Obsolete("Use 'value' instead")]
	public float volume
	{
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xE16DB0", Offset = "0xE16DB0", VA = "0xE16DB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xE16E48", Offset = "0xE16E48", VA = "0xE16E48")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public float value
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xE16DB4", Offset = "0xE16DB4", VA = "0xE16DB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xE16E4C", Offset = "0xE16E4C", VA = "0xE16E4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xE16EF0", Offset = "0xE16EF0", VA = "0xE16EF0", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xE16F4C", Offset = "0xE16F4C", VA = "0xE16F4C")]
	public static TweenVolume Begin(GameObject go, float duration, float targetVolume)
	{
		return null;
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xE16FF8", Offset = "0xE16FF8", VA = "0xE16FF8", Slot = "8")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xE17010", Offset = "0xE17010", VA = "0xE17010", Slot = "9")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xE17028", Offset = "0xE17028", VA = "0xE17028")]
	public TweenVolume()
	{
	}
}
[Token(Token = "0x200018C")]
[AddComponentMenu("NGUI/Tween/Tween Width")]
[RequireComponent(typeof(UIWidget))]
public class TweenWidth : UITweener
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int from;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int to;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[UnityEngine.Tooltip("If set, 'from' value will be set to match the specified rectangle")]
	public UIWidget fromTarget;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[UnityEngine.Tooltip("If set, 'to' value will be set to match the specified rectangle")]
	public UIWidget toTarget;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[UnityEngine.Tooltip("Whether there is a table that should be updated")]
	public bool updateTable;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIWidget mWidget;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UITable mTable;

	[Token(Token = "0x17000141")]
	public UIWidget cachedWidget
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xE17034", Offset = "0xE17034", VA = "0xE17034")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000142")]
	[Obsolete("Use 'value' instead")]
	public int width
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xE170DC", Offset = "0xE170DC", VA = "0xE170DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xE17114", Offset = "0xE17114", VA = "0xE17114")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public int value
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xE170F8", Offset = "0xE170F8", VA = "0xE170F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xE17118", Offset = "0xE17118", VA = "0xE17118")]
		set
		{
		}
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xE17138", Offset = "0xE17138", VA = "0xE17138", Slot = "7")]
	protected override void OnUpdate(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xE173DC", Offset = "0xE173DC", VA = "0xE173DC")]
	public static TweenWidth Begin(UIWidget widget, float duration, int width)
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xE1748C", Offset = "0xE1748C", VA = "0xE1748C", Slot = "8")]
	[ContextMenu("Set 'From' to current value")]
	public override void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xE174B0", Offset = "0xE174B0", VA = "0xE174B0", Slot = "9")]
	[ContextMenu("Set 'To' to current value")]
	public override void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xE174D4", Offset = "0xE174D4", VA = "0xE174D4")]
	[ContextMenu("Assume value of 'From'")]
	private void SetCurrentValueToStart()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xE174DC", Offset = "0xE174DC", VA = "0xE174DC")]
	[ContextMenu("Assume value of 'To'")]
	private void SetCurrentValueToEnd()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xE174E4", Offset = "0xE174E4", VA = "0xE174E4")]
	public TweenWidth()
	{
	}
}
[Token(Token = "0x200018D")]
public abstract class UITweener : MonoBehaviour
{
	[Token(Token = "0x200018E")]
	[DoNotObfuscateNGUI]
	public enum Method
	{
		[Token(Token = "0x40008BB")]
		Linear,
		[Token(Token = "0x40008BC")]
		EaseIn,
		[Token(Token = "0x40008BD")]
		EaseOut,
		[Token(Token = "0x40008BE")]
		EaseInOut,
		[Token(Token = "0x40008BF")]
		BounceIn,
		[Token(Token = "0x40008C0")]
		BounceOut
	}

	[Token(Token = "0x200018F")]
	[DoNotObfuscateNGUI]
	public enum Style
	{
		[Token(Token = "0x40008C2")]
		Once,
		[Token(Token = "0x40008C3")]
		Loop,
		[Token(Token = "0x40008C4")]
		PingPong
	}

	[Token(Token = "0x2000190")]
	public enum DelayAffects
	{
		[Token(Token = "0x40008C6")]
		Forward,
		[Token(Token = "0x40008C7")]
		Reverse,
		[Token(Token = "0x40008C8")]
		Both
	}

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UITweener current;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Method method;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Style style;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AnimationCurve animationCurve;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool ignoreTimeScale;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float delay;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public DelayAffects delayAffects;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float duration;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool steeperCurves;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public int tweenGroup;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[UnityEngine.Tooltip("By default, Update() will be used for tweening. Setting this to 'true' will make the tween happen in FixedUpdate() insted.")]
	public bool useFixedUpdate;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<EventDelegate> onFinished;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject eventReceiver;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public string callWhenFinished;

	[NonSerialized]
	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeScale;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool mStarted;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float mStartTime;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float mDuration;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float mAmountPerDelta;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float mFactor;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<EventDelegate> mTemp;

	[Token(Token = "0x17000144")]
	public float amountPerDelta
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xE174F0", Offset = "0xE174F0", VA = "0xE174F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000145")]
	public float tweenFactor
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xE17548", Offset = "0xE17548", VA = "0xE17548")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xE17550", Offset = "0xE17550", VA = "0xE17550")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public Direction direction
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xE1756C", Offset = "0xE1756C", VA = "0xE1756C")]
		get
		{
			return default(Direction);
		}
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xE175D0", Offset = "0xE175D0", VA = "0xE175D0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xE17608", Offset = "0xE17608", VA = "0xE17608", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xE17AC8", Offset = "0xE17AC8", VA = "0xE17AC8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xE17AD8", Offset = "0xE17AD8", VA = "0xE17AD8")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xE1760C", Offset = "0xE1760C", VA = "0xE1760C")]
	protected void DoUpdate()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xE17AE8", Offset = "0xE17AE8", VA = "0xE17AE8")]
	public void SetOnFinished(EventDelegate.Callback del)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xE17B54", Offset = "0xE17B54", VA = "0xE17B54")]
	public void SetOnFinished(EventDelegate del)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xE17BC0", Offset = "0xE17BC0", VA = "0xE17BC0")]
	public void AddOnFinished(EventDelegate.Callback del)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xE17C2C", Offset = "0xE17C2C", VA = "0xE17C2C")]
	public void AddOnFinished(EventDelegate del)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xE17C98", Offset = "0xE17C98", VA = "0xE17C98")]
	public void RemoveOnFinished(EventDelegate del)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xE14840", Offset = "0xE14840", VA = "0xE14840", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xE17D0C", Offset = "0xE17D0C", VA = "0xE17D0C")]
	public void Finish()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xE130BC", Offset = "0xE130BC", VA = "0xE130BC")]
	public void Sample(float factor, bool isFinished)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xE17D64", Offset = "0xE17D64", VA = "0xE17D64")]
	private float BounceLogic(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xE17E1C", Offset = "0xE17E1C", VA = "0xE17E1C")]
	[Obsolete("Use PlayForward() instead")]
	public void Play()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xE17E2C", Offset = "0xE17E2C", VA = "0xE17E2C")]
	public void PlayForward()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xE17E3C", Offset = "0xE17E3C", VA = "0xE17E3C")]
	public void PlayReverse()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xE148BC", Offset = "0xE148BC", VA = "0xE148BC", Slot = "6")]
	public virtual void Play(bool forward)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xE17E4C", Offset = "0xE17E4C", VA = "0xE17E4C")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xE17EBC", Offset = "0xE17EBC", VA = "0xE17EBC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000A29")]
	protected abstract void OnUpdate(float factor, bool isFinished);

	[Token(Token = "0x6000A2A")]
	public static T Begin<T>(GameObject go, float duration, float delay = 0f) where T : UITweener
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xE17F34", Offset = "0xE17F34", VA = "0xE17F34", Slot = "8")]
	public virtual void SetStartToCurrentValue()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xE17F38", Offset = "0xE17F38", VA = "0xE17F38", Slot = "9")]
	public virtual void SetEndToCurrentValue()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xE1325C", Offset = "0xE1325C", VA = "0xE1325C")]
	protected UITweener()
	{
	}
}
[Token(Token = "0x2000191")]
public class UITweenerAdapter
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MonoBehaviour mb;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UITweener _ngui;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UGUITween _ugui;

	[Token(Token = "0x17000147")]
	public UITweener ngui
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xE17F3C", Offset = "0xE17F3C", VA = "0xE17F3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xE17F44", Offset = "0xE17F44", VA = "0xE17F44")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public UGUITween ugui
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xE17F74", Offset = "0xE17F74", VA = "0xE17F74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xE17F7C", Offset = "0xE17F7C", VA = "0xE17F7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xE17FAC", Offset = "0xE17FAC", VA = "0xE17FAC")]
	public void SetAutoDestroyMBAfterFinish()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xE181B0", Offset = "0xE181B0", VA = "0xE181B0")]
	public void SetAutoDestroyGOAfterFinish(bool autoDestroy, GameObject go)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xE18428", Offset = "0xE18428", VA = "0xE18428")]
	public void PlayForward()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xE184FC", Offset = "0xE184FC", VA = "0xE184FC")]
	public UITweenerAdapter()
	{
	}
}
[Token(Token = "0x2000193")]
public interface INGUITextureProcessor
{
	[Token(Token = "0x6000A3B")]
	void PrepareToProcess(List<Texture> textures);

	[Token(Token = "0x6000A3C")]
	Texture Process(Texture src);
}
[Token(Token = "0x2000194")]
public interface INGUIAtlas
{
	[Token(Token = "0x17000149")]
	Material spriteMaterial
	{
		[Token(Token = "0x6000A3D")]
		get;
		[Token(Token = "0x6000A3E")]
		set;
	}

	[Token(Token = "0x1700014A")]
	List<UISpriteData> spriteList
	{
		[Token(Token = "0x6000A3F")]
		get;
		[Token(Token = "0x6000A40")]
		set;
	}

	[Token(Token = "0x1700014B")]
	Texture texture
	{
		[Token(Token = "0x6000A41")]
		get;
	}

	[Token(Token = "0x1700014C")]
	float pixelSize
	{
		[Token(Token = "0x6000A42")]
		get;
		[Token(Token = "0x6000A43")]
		set;
	}

	[Token(Token = "0x1700014D")]
	bool premultipliedAlpha
	{
		[Token(Token = "0x6000A44")]
		get;
	}

	[Token(Token = "0x1700014E")]
	INGUIAtlas replacement
	{
		[Token(Token = "0x6000A45")]
		get;
		[Token(Token = "0x6000A46")]
		set;
	}

	[Token(Token = "0x6000A47")]
	UISpriteData GetSprite(string name);

	[Token(Token = "0x6000A48")]
	BetterList<string> GetListOfSprites();

	[Token(Token = "0x6000A49")]
	BetterList<string> GetListOfSprites(string match);

	[Token(Token = "0x6000A4A")]
	bool References(INGUIAtlas atlas);

	[Token(Token = "0x6000A4B")]
	void MarkAsChanged();

	[Token(Token = "0x6000A4C")]
	void SortAlphabetically();
}
[Token(Token = "0x2000195")]
public class NGUIAtlas : ScriptableObject, INGUIAtlas
{
	[Token(Token = "0x2000196")]
	private enum Coordinates
	{
		[Token(Token = "0x40008D6")]
		Pixels,
		[Token(Token = "0x40008D7")]
		TexCoords
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Material material;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<UISpriteData> mSprites;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private float mPixelSize;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private UnityEngine.Object mReplacement;

	[NonSerialized]
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int mPMA;

	[NonSerialized]
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, int> mSpriteIndices;

	[Token(Token = "0x1700014F")]
	public Material spriteMaterial
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xE1870C", Offset = "0xE1870C", VA = "0xE1870C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xE18854", Offset = "0xE18854", VA = "0xE18854", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public bool premultipliedAlpha
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xE18DCC", Offset = "0xE18DCC", VA = "0xE18DCC", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000151")]
	public List<UISpriteData> spriteList
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xE18F68", Offset = "0xE18F68", VA = "0xE18F68", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xE19020", Offset = "0xE19020", VA = "0xE19020", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public Texture texture
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xE190E8", Offset = "0xE190E8", VA = "0xE190E8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000153")]
	public float pixelSize
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xE191F8", Offset = "0xE191F8", VA = "0xE191F8", Slot = "9")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xE192B0", Offset = "0xE192B0", VA = "0xE192B0", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public INGUIAtlas replacement
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xE187C0", Offset = "0xE187C0", VA = "0xE187C0", Slot = "12")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xE193B0", Offset = "0xE193B0", VA = "0xE193B0", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xE195CC", Offset = "0xE195CC", VA = "0xE195CC", Slot = "14")]
	public UISpriteData GetSprite(string name)
	{
		return null;
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xE19820", Offset = "0xE19820", VA = "0xE19820")]
	public void MarkSpriteListAsChanged()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xE19910", Offset = "0xE19910", VA = "0xE19910", Slot = "19")]
	public void SortAlphabetically()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xE19A18", Offset = "0xE19A18", VA = "0xE19A18", Slot = "15")]
	public BetterList<string> GetListOfSprites()
	{
		return null;
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xE19BC0", Offset = "0xE19BC0", VA = "0xE19BC0", Slot = "16")]
	public BetterList<string> GetListOfSprites(string match)
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xE19F88", Offset = "0xE19F88", VA = "0xE19F88", Slot = "17")]
	public bool References(INGUIAtlas atlas)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xE189A0", Offset = "0xE189A0", VA = "0xE189A0", Slot = "18")]
	public void MarkAsChanged()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xE1A3B0", Offset = "0xE1A3B0", VA = "0xE1A3B0")]
	public NGUIAtlas()
	{
	}
}
[Token(Token = "0x2000198")]
public enum NGUIFontType
{
	[Token(Token = "0x40008DB")]
	Auto,
	[Token(Token = "0x40008DC")]
	Bitmap,
	[Token(Token = "0x40008DD")]
	Reference,
	[Token(Token = "0x40008DE")]
	Dynamic
}
[Token(Token = "0x2000199")]
public interface INGUIFont
{
	[Token(Token = "0x17000155")]
	NGUIFontType type
	{
		[Token(Token = "0x6000A62")]
		get;
		[Token(Token = "0x6000A63")]
		set;
	}

	[Token(Token = "0x17000156")]
	BMFont bmFont
	{
		[Token(Token = "0x6000A64")]
		get;
		[Token(Token = "0x6000A65")]
		set;
	}

	[Token(Token = "0x17000157")]
	int texWidth
	{
		[Token(Token = "0x6000A66")]
		get;
		[Token(Token = "0x6000A67")]
		set;
	}

	[Token(Token = "0x17000158")]
	int texHeight
	{
		[Token(Token = "0x6000A68")]
		get;
		[Token(Token = "0x6000A69")]
		set;
	}

	[Token(Token = "0x17000159")]
	bool hasSymbols
	{
		[Token(Token = "0x6000A6A")]
		get;
	}

	[Token(Token = "0x1700015A")]
	List<BMSymbol> symbols
	{
		[Token(Token = "0x6000A6B")]
		get;
		[Token(Token = "0x6000A6C")]
		set;
	}

	[Token(Token = "0x1700015B")]
	INGUIAtlas atlas
	{
		[Token(Token = "0x6000A6D")]
		get;
		[Token(Token = "0x6000A6E")]
		set;
	}

	[Token(Token = "0x1700015C")]
	INGUIAtlas symbolAtlas
	{
		[Token(Token = "0x6000A6F")]
		get;
	}

	[Token(Token = "0x1700015D")]
	Material material
	{
		[Token(Token = "0x6000A71")]
		get;
		[Token(Token = "0x6000A72")]
		set;
	}

	[Token(Token = "0x1700015E")]
	bool premultipliedAlphaShader
	{
		[Token(Token = "0x6000A73")]
		get;
	}

	[Token(Token = "0x1700015F")]
	bool packedFontShader
	{
		[Token(Token = "0x6000A74")]
		get;
	}

	[Token(Token = "0x17000160")]
	Texture2D texture
	{
		[Token(Token = "0x6000A75")]
		get;
	}

	[Token(Token = "0x17000161")]
	Rect uvRect
	{
		[Token(Token = "0x6000A76")]
		get;
		[Token(Token = "0x6000A77")]
		set;
	}

	[Token(Token = "0x17000162")]
	string spriteName
	{
		[Token(Token = "0x6000A78")]
		get;
		[Token(Token = "0x6000A79")]
		set;
	}

	[Token(Token = "0x17000163")]
	bool isValid
	{
		[Token(Token = "0x6000A7A")]
		get;
	}

	[Token(Token = "0x17000164")]
	int defaultSize
	{
		[Token(Token = "0x6000A7B")]
		get;
		[Token(Token = "0x6000A7C")]
		set;
	}

	[Token(Token = "0x17000165")]
	int spaceWidth
	{
		[Token(Token = "0x6000A7D")]
		get;
		[Token(Token = "0x6000A7E")]
		set;
	}

	[Token(Token = "0x17000166")]
	UISpriteData sprite
	{
		[Token(Token = "0x6000A7F")]
		get;
	}

	[Token(Token = "0x17000167")]
	INGUIFont replacement
	{
		[Token(Token = "0x6000A80")]
		get;
		[Token(Token = "0x6000A81")]
		set;
	}

	[Token(Token = "0x17000168")]
	INGUIFont finalFont
	{
		[Token(Token = "0x6000A82")]
		get;
	}

	[Token(Token = "0x17000169")]
	bool isDynamic
	{
		[Token(Token = "0x6000A83")]
		get;
	}

	[Token(Token = "0x1700016A")]
	Font dynamicFont
	{
		[Token(Token = "0x6000A84")]
		get;
		[Token(Token = "0x6000A85")]
		set;
	}

	[Token(Token = "0x1700016B")]
	FontStyle dynamicFontStyle
	{
		[Token(Token = "0x6000A86")]
		get;
		[Token(Token = "0x6000A87")]
		set;
	}

	[Token(Token = "0x6000A70")]
	UISpriteData GetSprite(string spriteName);

	[Token(Token = "0x6000A88")]
	bool References(INGUIFont font);

	[Token(Token = "0x6000A89")]
	void MarkAsChanged();

	[Token(Token = "0x6000A8A")]
	void UpdateUVRect();

	[Token(Token = "0x6000A8B")]
	BMSymbol MatchSymbol(ref string text, int offset, int textLength);

	[Token(Token = "0x6000A8C")]
	BMSymbol AddSymbol(string sequence, string spriteName);

	[Token(Token = "0x6000A8D")]
	void RemoveSymbol(string sequence);

	[Token(Token = "0x6000A8E")]
	void RenameSymbol(string before, string after);

	[Token(Token = "0x6000A8F")]
	bool UsesSprite(string s);
}
[Token(Token = "0x200019A")]
[ExecuteInEditMode]
public class NGUIFont : ScriptableObject, INGUIFont
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private NGUIFontType mType;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Material mMat;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private Rect mUVRect;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private BMFont mFont;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Object mAtlas;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Object mReplacement;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Object mSybolAtlas;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private float mSymbolScale;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	[SerializeField]
	private int mSymbolOffset;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private int mSymbolMaxHeight;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	[SerializeField]
	private List<BMSymbol> mSymbols;

	[NonSerialized]
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<BMSymbol> mEmbeddedSymbols;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	private Font mDynamicFont;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	private int mDynamicFontSize;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[HideInInspector]
	private FontStyle mDynamicFontStyle;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	[SerializeField]
	private int mSpaceWidth;

	[NonSerialized]
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UISpriteData mSprite;

	[NonSerialized]
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int mPMA;

	[NonSerialized]
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int mPacked;

	[Token(Token = "0x1700016C")]
	public NGUIFontType type
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xE1A544", Offset = "0xE1A544", VA = "0xE1A544", Slot = "4")]
		get
		{
			return default(NGUIFontType);
		}
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xE1A5EC", Offset = "0xE1A5EC", VA = "0xE1A5EC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public BMFont bmFont
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xE1A630", Offset = "0xE1A630", VA = "0xE1A630", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xE1A77C", Offset = "0xE1A77C", VA = "0xE1A77C", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public int texWidth
	{
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xE1A844", Offset = "0xE1A844", VA = "0xE1A844", Slot = "8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xE1A90C", Offset = "0xE1A90C", VA = "0xE1A90C", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public int texHeight
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xE1A9D4", Offset = "0xE1A9D4", VA = "0xE1A9D4", Slot = "10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xE1AA9C", Offset = "0xE1AA9C", VA = "0xE1AA9C", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public bool hasSymbols
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE1AB64", Offset = "0xE1AB64", VA = "0xE1AB64", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public List<BMSymbol> symbols
	{
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xE1AC94", Offset = "0xE1AC94", VA = "0xE1AC94", Slot = "13")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE1AD58", Offset = "0xE1AD58", VA = "0xE1AD58", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public INGUIAtlas atlas
	{
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE1A05C", Offset = "0xE1A05C", VA = "0xE1A05C", Slot = "15")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE1A154", Offset = "0xE1A154", VA = "0xE1A154", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public INGUIAtlas symbolAtlas
	{
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xE1AC4C", Offset = "0xE1AC4C", VA = "0xE1AC4C", Slot = "17")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xE1B4A4", Offset = "0xE1B4A4", VA = "0xE1B4A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public Material material
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE1B678", Offset = "0xE1B678", VA = "0xE1B678", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xE1B8C4", Offset = "0xE1B8C4", VA = "0xE1B8C4", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public Material symbolMaterial
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xE1BA08", Offset = "0xE1BA08", VA = "0xE1BA08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000176")]
	[Obsolete("Use premultipliedAlphaShader instead")]
	public bool premultipliedAlpha
	{
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xE1BAB8", Offset = "0xE1BAB8", VA = "0xE1BAB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000177")]
	public bool premultipliedAlphaShader
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xE1BABC", Offset = "0xE1BABC", VA = "0xE1BABC", Slot = "21")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000178")]
	public bool packedFontShader
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xE1BCC4", Offset = "0xE1BCC4", VA = "0xE1BCC4", Slot = "22")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000179")]
	public Texture2D texture
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xE1BEA8", Offset = "0xE1BEA8", VA = "0xE1BEA8", Slot = "23")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017A")]
	public Texture2D symbolTexture
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xE1BF60", Offset = "0xE1BF60", VA = "0xE1BF60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017B")]
	public Rect uvRect
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xE1B0E4", Offset = "0xE1B0E4", VA = "0xE1B0E4", Slot = "24")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xE1C018", Offset = "0xE1C018", VA = "0xE1C018", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public float symbolScale
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xE1C160", Offset = "0xE1C160", VA = "0xE1C160")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xE1C168", Offset = "0xE1C168", VA = "0xE1C168")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public int symbolOffset
	{
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xE1C198", Offset = "0xE1C198", VA = "0xE1C198")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xE1C1A0", Offset = "0xE1C1A0", VA = "0xE1C1A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public int symbolMaxHeight
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xE1C1B8", Offset = "0xE1C1B8", VA = "0xE1C1B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xE1C1C0", Offset = "0xE1C1C0", VA = "0xE1C1C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public string spriteName
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xE1C1D8", Offset = "0xE1C1D8", VA = "0xE1C1D8", Slot = "26")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xE1C2C8", Offset = "0xE1C2C8", VA = "0xE1C2C8", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public bool isValid
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xE1C3D8", Offset = "0xE1C3D8", VA = "0xE1C3D8", Slot = "28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	[Obsolete("Use defaultSize instead")]
	public int size
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xE1C460", Offset = "0xE1C460", VA = "0xE1C460")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xE1C554", Offset = "0xE1C554", VA = "0xE1C554")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public int defaultSize
	{
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xE1C464", Offset = "0xE1C464", VA = "0xE1C464", Slot = "29")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xE1C558", Offset = "0xE1C558", VA = "0xE1C558", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public int spaceWidth
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xE1C728", Offset = "0xE1C728", VA = "0xE1C728", Slot = "31")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xE1C7F0", Offset = "0xE1C7F0", VA = "0xE1C7F0", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public UISpriteData sprite
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xE1AE2C", Offset = "0xE1AE2C", VA = "0xE1AE2C", Slot = "33")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000185")]
	public INGUIFont replacement
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xE1A6E8", Offset = "0xE1A6E8", VA = "0xE1A6E8", Slot = "34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xE1CAF0", Offset = "0xE1CAF0", VA = "0xE1CAF0", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public INGUIFont finalFont
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xE1CD34", Offset = "0xE1CD34", VA = "0xE1CD34", Slot = "36")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000187")]
	public bool isDynamic
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xE1C618", Offset = "0xE1C618", VA = "0xE1C618", Slot = "37")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000188")]
	public Font dynamicFont
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xE1CDF4", Offset = "0xE1CDF4", VA = "0xE1CDF4", Slot = "38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xE1CEBC", Offset = "0xE1CEBC", VA = "0xE1CEBC", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public FontStyle dynamicFontStyle
	{
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xE1D02C", Offset = "0xE1D02C", VA = "0xE1D02C", Slot = "40")]
		get
		{
			return default(FontStyle);
		}
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xE1D0F4", Offset = "0xE1D0F4", VA = "0xE1D0F4", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xE1B5AC", Offset = "0xE1B5AC", VA = "0xE1B5AC", Slot = "18")]
	public UISpriteData GetSprite(string spriteName)
	{
		return null;
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xE1D1E0", Offset = "0xE1D1E0", VA = "0xE1D1E0")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xE1D738", Offset = "0xE1D738", VA = "0xE1D738", Slot = "42")]
	public bool References(INGUIFont font)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xE1B230", Offset = "0xE1B230", VA = "0xE1B230", Slot = "43")]
	public void MarkAsChanged()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xE1C8C0", Offset = "0xE1C8C0", VA = "0xE1C8C0", Slot = "44")]
	public void UpdateUVRect()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xE1D80C", Offset = "0xE1D80C", VA = "0xE1D80C")]
	private BMSymbol GetSymbol(string sequence, bool createIfMissing)
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xE1D988", Offset = "0xE1D988", VA = "0xE1D988", Slot = "45")]
	public BMSymbol MatchSymbol(ref string text, int offset, int textLength)
	{
		return null;
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xE1DF8C", Offset = "0xE1DF8C", VA = "0xE1DF8C", Slot = "46")]
	public BMSymbol AddSymbol(string sequence, string spriteName)
	{
		return null;
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xE1DFD4", Offset = "0xE1DFD4", VA = "0xE1DFD4", Slot = "47")]
	public void RemoveSymbol(string sequence)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xE1E050", Offset = "0xE1E050", VA = "0xE1E050", Slot = "48")]
	public void RenameSymbol(string before, string after)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xE1E088", Offset = "0xE1E088", VA = "0xE1E088", Slot = "49")]
	public bool UsesSprite(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xE1E178", Offset = "0xE1E178", VA = "0xE1E178")]
	public NGUIFont()
	{
	}
}
[Token(Token = "0x200019B")]
[AddComponentMenu("NGUI/UI/Unity2D Sprite")]
[ExecuteInEditMode]
public class UI2DSprite : UIBasicSprite
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	[HideInInspector]
	private Sprite mSprite;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[HideInInspector]
	[SerializeField]
	private Shader mShader;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[HideInInspector]
	[SerializeField]
	private Vector4 mBorder;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[HideInInspector]
	[SerializeField]
	private bool mFixedAspect;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[HideInInspector]
	[SerializeField]
	private float mPixelSize;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Sprite nextSprite;

	[NonSerialized]
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int mPMA;

	[Token(Token = "0x1700018A")]
	public Sprite sprite2D
	{
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xE1E294", Offset = "0xE1E294", VA = "0xE1E294")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xE1E29C", Offset = "0xE1E29C", VA = "0xE1E29C")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public override Material material
	{
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xE1E358", Offset = "0xE1E358", VA = "0xE1E358", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xE1E360", Offset = "0xE1E360", VA = "0xE1E360", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public override Shader shader
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xE1E41C", Offset = "0xE1E41C", VA = "0xE1E41C", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xE1E500", Offset = "0xE1E500", VA = "0xE1E500", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xE1E5E4", Offset = "0xE1E5E4", VA = "0xE1E5E4", Slot = "31")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018E")]
	public bool fixedAspect
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xE1E6AC", Offset = "0xE1E6AC", VA = "0xE1E6AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xE1E6B4", Offset = "0xE1E6B4", VA = "0xE1E6B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public override bool premultipliedAlpha
	{
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xE1E6E8", Offset = "0xE1E6E8", VA = "0xE1E6E8", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public override float pixelSize
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xE1E7C4", Offset = "0xE1E7C4", VA = "0xE1E7C4", Slot = "50")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000191")]
	public override Vector4 drawingDimensions
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xE1E7CC", Offset = "0xE1E7CC", VA = "0xE1E7CC", Slot = "28")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000192")]
	public override Vector4 border
	{
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xE1F008", Offset = "0xE1F008", VA = "0xE1F008", Slot = "42")]
		get
		{
			return default(Vector4);
		}
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xE1F01C", Offset = "0xE1F01C", VA = "0xE1F01C", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xE1F08C", Offset = "0xE1F08C", VA = "0xE1F08C", Slot = "22")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xE1F7BC", Offset = "0xE1F7BC", VA = "0xE1F7BC", Slot = "39")]
	public override void MakePixelPerfect()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xE1FAD0", Offset = "0xE1FAD0", VA = "0xE1FAD0", Slot = "44")]
	public override void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xE1FE40", Offset = "0xE1FE40", VA = "0xE1FE40")]
	public UI2DSprite()
	{
	}
}
[Token(Token = "0x200019C")]
public class UI2DSpriteAnimation : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int frameIndex;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected int framerate;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ignoreTimeScale;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool loop;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] frames;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer mUnitySprite;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UI2DSprite mNguiSprite;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mUpdate;

	[Token(Token = "0x17000193")]
	public bool isPlaying
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xE1FEE4", Offset = "0xE1FEE4", VA = "0xE1FEE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public int framesPerSecond
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xE1FEEC", Offset = "0xE1FEEC", VA = "0xE1FEEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xE1FEF4", Offset = "0xE1FEF4", VA = "0xE1FEF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xE1FEFC", Offset = "0xE1FEFC", VA = "0xE1FEFC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xE20218", Offset = "0xE20218", VA = "0xE20218")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xE20224", Offset = "0xE20224", VA = "0xE20224")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xE20258", Offset = "0xE20258", VA = "0xE20258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xE2025C", Offset = "0xE2025C", VA = "0xE2025C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xE1FF9C", Offset = "0xE1FF9C", VA = "0xE1FF9C")]
	private void UpdateSprite()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xE2036C", Offset = "0xE2036C", VA = "0xE2036C")]
	public UI2DSpriteAnimation()
	{
	}
}
[Token(Token = "0x200019D")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/UI/Anchor")]
public class UIAnchor : MonoBehaviour
{
	[Token(Token = "0x200019E")]
	[DoNotObfuscateNGUI]
	public enum Side
	{
		[Token(Token = "0x400090E")]
		BottomLeft,
		[Token(Token = "0x400090F")]
		Left,
		[Token(Token = "0x4000910")]
		TopLeft,
		[Token(Token = "0x4000911")]
		Top,
		[Token(Token = "0x4000912")]
		TopRight,
		[Token(Token = "0x4000913")]
		Right,
		[Token(Token = "0x4000914")]
		BottomRight,
		[Token(Token = "0x4000915")]
		Bottom,
		[Token(Token = "0x4000916")]
		Center
	}

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera uiCamera;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject container;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Side side;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool runOnlyOnce;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 relativeOffset;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 pixelOffset;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private UIWidget widgetContainer;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform mTrans;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animation mAnim;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rect mRect;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIRoot mRoot;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool mStarted;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xE20384", Offset = "0xE20384", VA = "0xE20384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xE20570", Offset = "0xE20570", VA = "0xE20570")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xE20674", Offset = "0xE20674", VA = "0xE20674")]
	private void ScreenSizeChanged()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xE21380", Offset = "0xE21380", VA = "0xE21380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xE2068C", Offset = "0xE2068C", VA = "0xE2068C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xE21544", Offset = "0xE21544", VA = "0xE21544")]
	public UIAnchor()
	{
	}
}
[Token(Token = "0x200019F")]
public class UIAtlas : MonoBehaviour, INGUIAtlas
{
	[Serializable]
	[Token(Token = "0x20001A0")]
	private class Sprite
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect outer;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rect inner;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool rotated;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float paddingLeft;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float paddingRight;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float paddingTop;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float paddingBottom;

		[Token(Token = "0x1700019B")]
		public bool hasPadding
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xE2401C", Offset = "0xE2401C", VA = "0xE2401C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xE24058", Offset = "0xE24058", VA = "0xE24058")]
		public Sprite()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	private enum Coordinates
	{
		[Token(Token = "0x4000928")]
		Pixels,
		[Token(Token = "0x4000929")]
		TexCoords
	}

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Material material;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private List<UISpriteData> mSprites;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private float mPixelSize;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private UnityEngine.Object mReplacement;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private Coordinates mCoordinates;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private List<Sprite> sprites;

	[NonSerialized]
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int mPMA;

	[NonSerialized]
	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, int> mSpriteIndices;

	[Token(Token = "0x17000195")]
	public Material spriteMaterial
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xE215B4", Offset = "0xE215B4", VA = "0xE215B4", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xE216B0", Offset = "0xE216B0", VA = "0xE216B0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000196")]
	public bool premultipliedAlpha
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xE21C2C", Offset = "0xE21C2C", VA = "0xE21C2C", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000197")]
	public List<UISpriteData> spriteList
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xE21DC8", Offset = "0xE21DC8", VA = "0xE21DC8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xE22B34", Offset = "0xE22B34", VA = "0xE22B34", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000198")]
	public Texture texture
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xE22BFC", Offset = "0xE22BFC", VA = "0xE22BFC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000199")]
	public float pixelSize
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xE22D0C", Offset = "0xE22D0C", VA = "0xE22D0C", Slot = "9")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xE22DC4", Offset = "0xE22DC4", VA = "0xE22DC4", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public INGUIAtlas replacement
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xE21668", Offset = "0xE21668", VA = "0xE21668", Slot = "12")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xE22EC4", Offset = "0xE22EC4", VA = "0xE22EC4", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xE230E0", Offset = "0xE230E0", VA = "0xE230E0", Slot = "14")]
	public UISpriteData GetSprite(string name)
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xE2334C", Offset = "0xE2334C", VA = "0xE2334C")]
	public void MarkSpriteListAsChanged()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xE2343C", Offset = "0xE2343C", VA = "0xE2343C", Slot = "19")]
	public void SortAlphabetically()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xE23544", Offset = "0xE23544", VA = "0xE23544", Slot = "15")]
	public BetterList<string> GetListOfSprites()
	{
		return null;
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xE23704", Offset = "0xE23704", VA = "0xE23704", Slot = "16")]
	public BetterList<string> GetListOfSprites(string match)
	{
		return null;
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xE23AE4", Offset = "0xE23AE4", VA = "0xE23AE4", Slot = "17")]
	public bool References(INGUIAtlas atlas)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xE217FC", Offset = "0xE217FC", VA = "0xE217FC", Slot = "18")]
	public void MarkAsChanged()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xE21EA8", Offset = "0xE21EA8", VA = "0xE21EA8")]
	private bool Upgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xE23ED4", Offset = "0xE23ED4", VA = "0xE23ED4")]
	public UIAtlas()
	{
	}
}
[Token(Token = "0x20001A3")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/UI/Event System (UICamera)")]
[RequireComponent(typeof(Camera))]
public class UICamera : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	[DoNotObfuscateNGUI]
	public enum ControlScheme
	{
		[Token(Token = "0x4000996")]
		Mouse,
		[Token(Token = "0x4000997")]
		Touch,
		[Token(Token = "0x4000998")]
		Controller
	}

	[Token(Token = "0x20001A5")]
	[DoNotObfuscateNGUI]
	public enum ClickNotification
	{
		[Token(Token = "0x400099A")]
		None,
		[Token(Token = "0x400099B")]
		Always,
		[Token(Token = "0x400099C")]
		BasedOnDelta
	}

	[Token(Token = "0x20001A6")]
	public class MouseOrTouch
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode key;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 pos;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 lastPos;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 delta;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 totalDelta;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera pressedCam;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject last;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject current;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject pressed;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject dragged;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject lastClickGO;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pressTime;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float clickTime;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ClickNotification clickNotification;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool touchBegan;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool pressStarted;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool dragStarted;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int ignoreDelta;

		[Token(Token = "0x170001B6")]
		public float deltaTime
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xE2E6FC", Offset = "0xE2E6FC", VA = "0xE2E6FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B7")]
		public bool isOverUI
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xE25D9C", Offset = "0xE25D9C", VA = "0xE25D9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xE2F3D0", Offset = "0xE2F3D0", VA = "0xE2F3D0")]
		public MouseOrTouch()
		{
		}
	}

	[Token(Token = "0x20001A7")]
	[DoNotObfuscateNGUI]
	public enum EventType
	{
		[Token(Token = "0x40009B0")]
		World_3D,
		[Token(Token = "0x40009B1")]
		UI_3D,
		[Token(Token = "0x40009B2")]
		World_2D,
		[Token(Token = "0x40009B3")]
		UI_2D
	}

	[Token(Token = "0x20001A8")]
	public delegate bool GetKeyStateFunc(KeyCode key);

	[Token(Token = "0x20001A9")]
	public delegate float GetAxisFunc(string name);

	[Token(Token = "0x20001AA")]
	public delegate bool GetAnyKeyFunc();

	[Token(Token = "0x20001AB")]
	public delegate MouseOrTouch GetMouseDelegate(int button);

	[Token(Token = "0x20001AC")]
	public delegate MouseOrTouch GetTouchDelegate(int id, bool createIfMissing);

	[Token(Token = "0x20001AD")]
	public delegate void RemoveTouchDelegate(int id);

	[Token(Token = "0x20001AE")]
	public delegate void OnScreenResize();

	[Token(Token = "0x20001AF")]
	[DoNotObfuscateNGUI]
	public enum ProcessEventsIn
	{
		[Token(Token = "0x40009B5")]
		Update,
		[Token(Token = "0x40009B6")]
		LateUpdate
	}

	[Token(Token = "0x20001B0")]
	public delegate void OnCustomInput();

	[Token(Token = "0x20001B1")]
	public delegate void OnSchemeChange();

	[Token(Token = "0x20001B2")]
	public delegate void MoveDelegate(Vector2 delta);

	[Token(Token = "0x20001B3")]
	public delegate void VoidDelegate(GameObject go);

	[Token(Token = "0x20001B4")]
	public delegate void BoolDelegate(GameObject go, bool state);

	[Token(Token = "0x20001B5")]
	public delegate void FloatDelegate(GameObject go, float delta);

	[Token(Token = "0x20001B6")]
	public delegate void VectorDelegate(GameObject go, Vector2 delta);

	[Token(Token = "0x20001B7")]
	public delegate void ObjectDelegate(GameObject go, GameObject obj);

	[Token(Token = "0x20001B8")]
	public delegate void KeyCodeDelegate(GameObject go, KeyCode key);

	[Token(Token = "0x20001B9")]
	private struct DepthEntry
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int depth;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public RaycastHit hit;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 point;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject go;
	}

	[Token(Token = "0x20001BA")]
	public class Touch
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int fingerId;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.TouchPhase phase;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 position;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int tapCount;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xE302F0", Offset = "0xE302F0", VA = "0xE302F0")]
		public Touch()
		{
		}
	}

	[Token(Token = "0x20001BB")]
	public delegate int GetTouchCountCallback();

	[Token(Token = "0x20001BC")]
	public delegate Touch GetTouchCallback(int index);

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BetterList<UICamera> list;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GetKeyStateFunc GetKeyDown;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GetKeyStateFunc GetKeyUp;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static GetKeyStateFunc GetKey;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static GetAxisFunc GetAxis;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static GetAnyKeyFunc GetAnyKeyDown;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static GetMouseDelegate GetMouse;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static GetTouchDelegate GetTouch;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static RemoveTouchDelegate RemoveTouch;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static OnScreenResize onScreenResize;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventType eventType;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool eventsGoToColliders;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask eventReceiverMask;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ProcessEventsIn processEventsIn;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool debug;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool useMouse;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool useTouch;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool allowMultiTouch;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool useKeyboard;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool useController;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool stickyTooltip;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float tooltipDelay;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool longPressTooltip;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float mouseDragThreshold;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float mouseClickThreshold;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float touchDragThreshold;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float touchClickThreshold;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rangeDistance;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string horizontalAxisName;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string verticalAxisName;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string horizontalPanAxisName;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string verticalPanAxisName;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string scrollAxisName;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[UnityEngine.Tooltip("If enabled, command-click will result in a right-click event on OSX")]
	public bool commandClick;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public KeyCode submitKey0;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public KeyCode submitKey1;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public KeyCode cancelKey0;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public KeyCode cancelKey1;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool autoHideCursor;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static OnCustomInput onCustomInput;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static bool showTooltips;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public static bool ignoreAllEvents;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public static bool ignoreControllerInput;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private static bool mDisableController;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static Vector2 mLastPos;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static Vector3 lastWorldPosition;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static Ray lastWorldRay;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static RaycastHit lastHit;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static UICamera current;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static Camera currentCamera;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static OnSchemeChange onSchemeChange;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private static ControlScheme mLastScheme;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public static int currentTouchID;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private static KeyCode mCurrentKey;

	[NonSerialized]
	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static MouseOrTouch currentTouch;

	[NonSerialized]
	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private static bool mInputFocus;

	[NonSerialized]
	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private static GameObject mGenericHandler;

	[NonSerialized]
	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static GameObject fallThrough;

	[NonSerialized]
	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static VoidDelegate onClick;

	[NonSerialized]
	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static VoidDelegate onDoubleClick;

	[NonSerialized]
	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static BoolDelegate onHover;

	[NonSerialized]
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static BoolDelegate onPress;

	[NonSerialized]
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static BoolDelegate onSelect;

	[NonSerialized]
	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static FloatDelegate onScroll;

	[NonSerialized]
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static VectorDelegate onDrag;

	[NonSerialized]
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static VoidDelegate onDragStart;

	[NonSerialized]
	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static ObjectDelegate onDragOver;

	[NonSerialized]
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static ObjectDelegate onDragOut;

	[NonSerialized]
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static VoidDelegate onDragEnd;

	[NonSerialized]
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static ObjectDelegate onDrop;

	[NonSerialized]
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static KeyCodeDelegate onKey;

	[NonSerialized]
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static KeyCodeDelegate onNavigate;

	[NonSerialized]
	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static VectorDelegate onPan;

	[NonSerialized]
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static BoolDelegate onTooltip;

	[NonSerialized]
	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static MoveDelegate onMouseMove;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private static MouseOrTouch[] mMouse;

	[NonSerialized]
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static MouseOrTouch controller;

	[NonSerialized]
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static List<MouseOrTouch> activeTouches;

	[NonSerialized]
	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private static List<int> mTouchIDs;

	[NonSerialized]
	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private static int mWidth;

	[NonSerialized]
	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private static int mHeight;

	[NonSerialized]
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private static GameObject mTooltip;

	[NonSerialized]
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera mCam;

	[NonSerialized]
	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private static float mTooltipTime;

	[NonSerialized]
	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float mNextRaycast;

	[NonSerialized]
	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public static bool isDragging;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private static int mLastInteractionCheck;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private static bool mLastInteractionResult;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private static int mLastFocusCheck;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private static bool mLastFocusResult;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private static int mLastOverCheck;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private static bool mLastOverResult;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private static GameObject mRayHitObject;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private static GameObject mHover;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private static GameObject mSelected;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private static DepthEntry mHit;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private static BetterList<DepthEntry> mHits;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private static RaycastHit[] mRayHits;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private static Collider2D[] mOverlap;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private static UnityEngine.Plane m2DPlane;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private static float mNextEvent;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private static int mNotifying;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private static bool mUsingTouchEvents;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static GetTouchCountCallback GetInputTouchCount;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public static GetTouchCallback GetInputTouch;

	[Token(Token = "0x1700019C")]
	[Obsolete("Use new OnDragStart / OnDragOver / OnDragOut / OnDragEnd events instead")]
	public bool stickyPress
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xE241B8", Offset = "0xE241B8", VA = "0xE241B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public static bool disableController
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xE241C0", Offset = "0xE241C0", VA = "0xE241C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xE2422C", Offset = "0xE2422C", VA = "0xE2422C")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	[Obsolete("Use lastEventPosition instead. It handles controller input properly.")]
	public static Vector2 lastTouchPosition
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xE24288", Offset = "0xE24288", VA = "0xE24288")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xE242E0", Offset = "0xE242E0", VA = "0xE242E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public static Vector2 lastEventPosition
	{
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xE24348", Offset = "0xE24348", VA = "0xE24348")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xE24834", Offset = "0xE24834", VA = "0xE24834")]
		set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	public static UICamera first
	{
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xE2489C", Offset = "0xE2489C", VA = "0xE2489C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public static ControlScheme currentScheme
	{
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xE244E8", Offset = "0xE244E8", VA = "0xE244E8")]
		get
		{
			return default(ControlScheme);
		}
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xE2495C", Offset = "0xE2495C", VA = "0xE2495C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public static KeyCode currentKey
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xE24C28", Offset = "0xE24C28", VA = "0xE24C28")]
		get
		{
			return default(KeyCode);
		}
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xE24A2C", Offset = "0xE24A2C", VA = "0xE24A2C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public static Ray currentRay
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xE24CD0", Offset = "0xE24CD0", VA = "0xE24CD0")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x170001A4")]
	public static bool inputHasFocus
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xE24DE8", Offset = "0xE24DE8", VA = "0xE24DE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A5")]
	[Obsolete("Use delegates instead such as UICamera.onClick, UICamera.onHover, etc.")]
	public static GameObject genericEventHandler
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xE24ECC", Offset = "0xE24ECC", VA = "0xE24ECC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xE24F24", Offset = "0xE24F24", VA = "0xE24F24")]
		set
		{
		}
	}

	[Token(Token = "0x170001A6")]
	public static MouseOrTouch mouse0
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xE24F84", Offset = "0xE24F84", VA = "0xE24F84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public static MouseOrTouch mouse1
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xE24FF4", Offset = "0xE24FF4", VA = "0xE24FF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A8")]
	public static MouseOrTouch mouse2
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xE25068", Offset = "0xE25068", VA = "0xE25068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A9")]
	private bool handlesEvents
	{
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE250DC", Offset = "0xE250DC", VA = "0xE250DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AA")]
	public Camera cachedCamera
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xE252C8", Offset = "0xE252C8", VA = "0xE252C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public static GameObject tooltipObject
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xE25370", Offset = "0xE25370", VA = "0xE25370")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xE253C8", Offset = "0xE253C8", VA = "0xE253C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001AC")]
	public static bool isOverUI
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xE257FC", Offset = "0xE257FC", VA = "0xE257FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AD")]
	public static bool uiHasFocus
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xE25B00", Offset = "0xE25B00", VA = "0xE25B00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AE")]
	public static bool interactingWithUI
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xE25EE8", Offset = "0xE25EE8", VA = "0xE25EE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AF")]
	public static GameObject hoveredObject
	{
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xE2469C", Offset = "0xE2469C", VA = "0xE2469C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE26100", Offset = "0xE26100", VA = "0xE26100")]
		set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public static GameObject controllerNavigationObject
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE26B4C", Offset = "0xE26B4C", VA = "0xE26B4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE26F44", Offset = "0xE26F44", VA = "0xE26F44")]
		set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public static GameObject selectedObject
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE2712C", Offset = "0xE2712C", VA = "0xE2712C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE27238", Offset = "0xE27238", VA = "0xE27238")]
		set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	[Obsolete("Use either 'CountInputSources()' or 'activeTouches.Count'")]
	public static int touchCount
	{
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xE27A84", Offset = "0xE27A84", VA = "0xE27A84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B3")]
	public static int dragCount
	{
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xE27CC8", Offset = "0xE27CC8", VA = "0xE27CC8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B4")]
	public static Camera mainCamera
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xE27EC0", Offset = "0xE27EC0", VA = "0xE27EC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B5")]
	public static UICamera eventHandler
	{
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xE25168", Offset = "0xE25168", VA = "0xE25168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xE256C8", Offset = "0xE256C8", VA = "0xE256C8")]
	public static bool IsPartOfUI(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xE278C8", Offset = "0xE278C8", VA = "0xE278C8")]
	public static bool IsPressed(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xE27AD0", Offset = "0xE27AD0", VA = "0xE27AD0")]
	public static int CountInputSources()
	{
		return default(int);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xE27F6C", Offset = "0xE27F6C", VA = "0xE27F6C")]
	private static int CompareFunc(UICamera a, UICamera b)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xE28008", Offset = "0xE28008", VA = "0xE28008")]
	private static Rigidbody FindRootRigidbody(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xE28130", Offset = "0xE28130", VA = "0xE28130")]
	private static Rigidbody2D FindRootRigidbody2D(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xE28258", Offset = "0xE28258", VA = "0xE28258")]
	public static void Raycast(MouseOrTouch touch)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xE283C4", Offset = "0xE283C4", VA = "0xE283C4")]
	public static bool Raycast(Vector3 inPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xE29AF0", Offset = "0xE29AF0", VA = "0xE29AF0")]
	private static bool IsVisible(Vector3 worldPoint, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xE29A0C", Offset = "0xE29A0C", VA = "0xE29A0C")]
	private static bool IsVisible(ref DepthEntry de)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xE29BF0", Offset = "0xE29BF0", VA = "0xE29BF0")]
	public static bool IsHighlighted(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xE26A10", Offset = "0xE26A10", VA = "0xE26A10")]
	public static UICamera FindCameraForLayer(int layer)
	{
		return null;
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xE29C7C", Offset = "0xE29C7C", VA = "0xE29C7C")]
	private static int GetDirection(KeyCode up, KeyCode down)
	{
		return default(int);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xE29D7C", Offset = "0xE29D7C", VA = "0xE29D7C")]
	private static int GetDirection(KeyCode up0, KeyCode up1, KeyCode down0, KeyCode down1)
	{
		return default(int);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xE29F2C", Offset = "0xE29F2C", VA = "0xE29F2C")]
	private static int GetDirection(string axis)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xE267A8", Offset = "0xE267A8", VA = "0xE267A8")]
	public static void Notify(GameObject go, string funcName, object obj)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xE2A068", Offset = "0xE2A068", VA = "0xE2A068")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xE2A1C4", Offset = "0xE2A1C4", VA = "0xE2A1C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xE2A2C0", Offset = "0xE2A2C0", VA = "0xE2A2C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xE2A340", Offset = "0xE2A340", VA = "0xE2A340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xE2A5A0", Offset = "0xE2A5A0", VA = "0xE2A5A0")]
	[ContextMenu("Start ignoring events")]
	private void StartIgnoring()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xE2A5FC", Offset = "0xE2A5FC", VA = "0xE2A5FC")]
	[ContextMenu("Stop ignoring events")]
	private void StopIgnoring()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xE2A654", Offset = "0xE2A654", VA = "0xE2A654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xE2AC40", Offset = "0xE2AC40", VA = "0xE2AC40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xE2A6D8", Offset = "0xE2A6D8", VA = "0xE2A6D8")]
	private void ProcessEvents()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xE2B230", Offset = "0xE2B230", VA = "0xE2B230")]
	public void ProcessMouse()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xE2ADBC", Offset = "0xE2ADBC", VA = "0xE2ADBC")]
	public void ProcessTouches()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xE2CAC4", Offset = "0xE2CAC4", VA = "0xE2CAC4")]
	private void ProcessFakeTouches()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xE2BBAC", Offset = "0xE2BBAC", VA = "0xE2BBAC")]
	public void ProcessOthers()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xE2CE18", Offset = "0xE2CE18", VA = "0xE2CE18")]
	private void ProcessPress(bool pressed, float click, float drag)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xE2DD14", Offset = "0xE2DD14", VA = "0xE2DD14")]
	private void ProcessRelease(bool isMouse, float drag)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xE2E5C4", Offset = "0xE2E5C4", VA = "0xE2E5C4")]
	private bool HasCollider(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xE2C7A4", Offset = "0xE2C7A4", VA = "0xE2C7A4")]
	public void ProcessTouch(bool pressed, bool released)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xE2E71C", Offset = "0xE2E71C", VA = "0xE2E71C")]
	public static void CancelNextTooltip()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xE2541C", Offset = "0xE2541C", VA = "0xE2541C")]
	public static bool ShowTooltip(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xE24C80", Offset = "0xE24C80", VA = "0xE24C80")]
	public static bool HideTooltip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xE2E774", Offset = "0xE2E774", VA = "0xE2E774")]
	public static void ResetTooltip(float delay = 0.5f)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xE2E7EC", Offset = "0xE2E7EC", VA = "0xE2E7EC")]
	public UICamera()
	{
	}
}
[Token(Token = "0x20001BE")]
[RequireComponent(typeof(UITexture))]
public class UIColorPicker : MonoBehaviour
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIColorPicker current;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color value;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIWidget selectionWidget;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<EventDelegate> onChange;

	[NonSerialized]
	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform mTrans;

	[NonSerialized]
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UITexture mUITex;

	[NonSerialized]
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D mTex;

	[NonSerialized]
	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UICamera mCam;

	[NonSerialized]
	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 mPos;

	[NonSerialized]
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int mWidth;

	[NonSerialized]
	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int mHeight;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AnimationCurve mRed;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AnimationCurve mGreen;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static AnimationCurve mBlue;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xE30C70", Offset = "0xE30C70", VA = "0xE30C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xE31C3C", Offset = "0xE31C3C", VA = "0xE31C3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xE31CA8", Offset = "0xE31CA8", VA = "0xE31CA8")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xE31FE4", Offset = "0xE31FE4", VA = "0xE31FE4")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xE3200C", Offset = "0xE3200C", VA = "0xE3200C")]
	private void OnPan(Vector2 delta)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xE31D2C", Offset = "0xE31D2C", VA = "0xE31D2C")]
	private void Sample()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xE32078", Offset = "0xE32078", VA = "0xE32078")]
	public void Select(Vector2 v)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xE31930", Offset = "0xE31930", VA = "0xE31930")]
	public Vector2 Select(Color c)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xE30F04", Offset = "0xE30F04", VA = "0xE30F04")]
	public static Color Sample(float x, float y)
	{
		return default(Color);
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xE322A4", Offset = "0xE322A4", VA = "0xE322A4")]
	public UIColorPicker()
	{
	}
}
[Token(Token = "0x20001BF")]
[ExecuteInEditMode]
public class UIFont : MonoBehaviour, INGUIFont
{
	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Material mMat;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Rect mUVRect;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private BMFont mFont;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Object mAtlas;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private UnityEngine.Object mReplacement;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private List<BMSymbol> mSymbols;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private Font mDynamicFont;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private int mDynamicFontSize;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	[SerializeField]
	private FontStyle mDynamicFontStyle;

	[NonSerialized]
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UISpriteData mSprite;

	[NonSerialized]
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int mPMA;

	[NonSerialized]
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int mPacked;

	[Token(Token = "0x170001B8")]
	public NGUIFontType type
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xE32334", Offset = "0xE32334", VA = "0xE32334", Slot = "4")]
		get
		{
			return default(NGUIFontType);
		}
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xE32510", Offset = "0xE32510", VA = "0xE32510", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public BMFont bmFont
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xE32514", Offset = "0xE32514", VA = "0xE32514", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xE325CC", Offset = "0xE325CC", VA = "0xE325CC", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public int texWidth
	{
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xE32694", Offset = "0xE32694", VA = "0xE32694", Slot = "8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xE3275C", Offset = "0xE3275C", VA = "0xE3275C", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	public int texHeight
	{
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xE32824", Offset = "0xE32824", VA = "0xE32824", Slot = "10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xE328EC", Offset = "0xE328EC", VA = "0xE328EC", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public bool hasSymbols
	{
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xE329B4", Offset = "0xE329B4", VA = "0xE329B4", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BD")]
	public List<BMSymbol> symbols
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xE32A90", Offset = "0xE32A90", VA = "0xE32A90", Slot = "13")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xE32B48", Offset = "0xE32B48", VA = "0xE32B48", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public INGUIAtlas atlas
	{
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xE23BB8", Offset = "0xE23BB8", VA = "0xE23BB8", Slot = "15")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xE23C88", Offset = "0xE23C88", VA = "0xE23C88", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public INGUIAtlas symbolAtlas
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xE3325C", Offset = "0xE3325C", VA = "0xE3325C", Slot = "17")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C0")]
	public Material material
	{
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xE3331C", Offset = "0xE3331C", VA = "0xE3331C", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xE3355C", Offset = "0xE3355C", VA = "0xE3355C", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	[Obsolete("Use premultipliedAlphaShader instead")]
	public bool premultipliedAlpha
	{
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xE33690", Offset = "0xE33690", VA = "0xE33690")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C2")]
	public bool premultipliedAlphaShader
	{
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xE33694", Offset = "0xE33694", VA = "0xE33694", Slot = "21")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C3")]
	public bool packedFontShader
	{
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xE3389C", Offset = "0xE3389C", VA = "0xE3389C", Slot = "22")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C4")]
	public Texture2D texture
	{
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xE33A68", Offset = "0xE33A68", VA = "0xE33A68", Slot = "23")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C5")]
	public Rect uvRect
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xE32EB8", Offset = "0xE32EB8", VA = "0xE32EB8", Slot = "24")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xE33BA8", Offset = "0xE33BA8", VA = "0xE33BA8", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public string spriteName
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xE33CE0", Offset = "0xE33CE0", VA = "0xE33CE0", Slot = "26")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xE33DA4", Offset = "0xE33DA4", VA = "0xE33DA4", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public bool isValid
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xE33EA4", Offset = "0xE33EA4", VA = "0xE33EA4", Slot = "28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C8")]
	[Obsolete("Use defaultSize instead")]
	public int size
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xE33F2C", Offset = "0xE33F2C", VA = "0xE33F2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xE34004", Offset = "0xE34004", VA = "0xE34004")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public int defaultSize
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xE33F30", Offset = "0xE33F30", VA = "0xE33F30", Slot = "29")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xE34008", Offset = "0xE34008", VA = "0xE34008", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public int spaceWidth
	{
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xE341B0", Offset = "0xE341B0", VA = "0xE341B0", Slot = "31")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xE34264", Offset = "0xE34264", VA = "0xE34264", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public UISpriteData sprite
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xE32C10", Offset = "0xE32C10", VA = "0xE32C10", Slot = "33")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CC")]
	public INGUIFont replacement
	{
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xE323C4", Offset = "0xE323C4", VA = "0xE323C4", Slot = "34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xE34550", Offset = "0xE34550", VA = "0xE34550", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public INGUIFont finalFont
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xE34794", Offset = "0xE34794", VA = "0xE34794", Slot = "36")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CE")]
	public bool isDynamic
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xE340C8", Offset = "0xE340C8", VA = "0xE340C8", Slot = "37")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CF")]
	public Font dynamicFont
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xE32458", Offset = "0xE32458", VA = "0xE32458", Slot = "38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xE34854", Offset = "0xE34854", VA = "0xE34854", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public FontStyle dynamicFontStyle
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xE349B4", Offset = "0xE349B4", VA = "0xE349B4", Slot = "40")]
		get
		{
			return default(FontStyle);
		}
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xE34A6C", Offset = "0xE34A6C", VA = "0xE34A6C", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xE33260", Offset = "0xE33260", VA = "0xE33260", Slot = "18")]
	public UISpriteData GetSprite(string spriteName)
	{
		return null;
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xE34B48", Offset = "0xE34B48", VA = "0xE34B48")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xE350A0", Offset = "0xE350A0", VA = "0xE350A0", Slot = "42")]
	public bool References(INGUIFont font)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xE32FF4", Offset = "0xE32FF4", VA = "0xE32FF4", Slot = "43")]
	public void MarkAsChanged()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xE34320", Offset = "0xE34320", VA = "0xE34320", Slot = "44")]
	public void UpdateUVRect()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xE35174", Offset = "0xE35174", VA = "0xE35174")]
	private BMSymbol GetSymbol(string sequence, bool createIfMissing)
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xE352F8", Offset = "0xE352F8", VA = "0xE352F8", Slot = "45")]
	public BMSymbol MatchSymbol(ref string text, int offset, int textLength)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xE3544C", Offset = "0xE3544C", VA = "0xE3544C", Slot = "46")]
	public BMSymbol AddSymbol(string sequence, string spriteName)
	{
		return null;
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xE35494", Offset = "0xE35494", VA = "0xE35494", Slot = "47")]
	public void RemoveSymbol(string sequence)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xE35510", Offset = "0xE35510", VA = "0xE35510", Slot = "48")]
	public void RenameSymbol(string before, string after)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xE35548", Offset = "0xE35548", VA = "0xE35548", Slot = "49")]
	public bool UsesSprite(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xE3563C", Offset = "0xE3563C", VA = "0xE3563C")]
	public UIFont()
	{
	}
}
[Token(Token = "0x20001C0")]
[AddComponentMenu("NGUI/UI/Input Field")]
public class UIInput : MonoBehaviour
{
	[Token(Token = "0x20001C1")]
	[DoNotObfuscateNGUI]
	public enum InputType
	{
		[Token(Token = "0x4000A0B")]
		Standard,
		[Token(Token = "0x4000A0C")]
		AutoCorrect,
		[Token(Token = "0x4000A0D")]
		Password
	}

	[Token(Token = "0x20001C2")]
	[DoNotObfuscateNGUI]
	public enum Validation
	{
		[Token(Token = "0x4000A0F")]
		None,
		[Token(Token = "0x4000A10")]
		Integer,
		[Token(Token = "0x4000A11")]
		Float,
		[Token(Token = "0x4000A12")]
		Alphanumeric,
		[Token(Token = "0x4000A13")]
		Username,
		[Token(Token = "0x4000A14")]
		Name,
		[Token(Token = "0x4000A15")]
		Filename
	}

	[Token(Token = "0x20001C3")]
	[DoNotObfuscateNGUI]
	public enum KeyboardType
	{
		[Token(Token = "0x4000A17")]
		Default,
		[Token(Token = "0x4000A18")]
		ASCIICapable,
		[Token(Token = "0x4000A19")]
		NumbersAndPunctuation,
		[Token(Token = "0x4000A1A")]
		URL,
		[Token(Token = "0x4000A1B")]
		NumberPad,
		[Token(Token = "0x4000A1C")]
		PhonePad,
		[Token(Token = "0x4000A1D")]
		NamePhonePad,
		[Token(Token = "0x4000A1E")]
		EmailAddress
	}

	[Token(Token = "0x20001C4")]
	[DoNotObfuscateNGUI]
	public enum OnReturnKey
	{
		[Token(Token = "0x4000A20")]
		Default,
		[Token(Token = "0x4000A21")]
		Submit,
		[Token(Token = "0x4000A22")]
		NewLine
	}

	[Token(Token = "0x20001C5")]
	public delegate char OnValidate(string text, int charIndex, char addedChar);

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIInput current;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UIInput selection;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel label;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputType inputType;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OnReturnKey onReturnKey;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyboardType keyboardType;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideInput;

	[NonSerialized]
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool selectAllTextOnFocus;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool submitOnUnselect;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Validation validation;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int characterLimit;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string savedAs;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private GameObject selectOnTab;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color activeTextColor;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color caretColor;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color selectionColor;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<EventDelegate> onSubmit;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<EventDelegate> onChange;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnValidate onValidate;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	[SerializeField]
	protected string mValue;

	[NonSerialized]
	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected string mDefaultText;

	[NonSerialized]
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Color mDefaultColor;

	[NonSerialized]
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected float mPosition;

	[NonSerialized]
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected bool mDoInit;

	[NonSerialized]
	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected NGUIText.Alignment mAlignment;

	[NonSerialized]
	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected bool mLoadSavedValue;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static int mDrawStart;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static string mLastIME;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static TouchScreenKeyboard mKeyboard;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool mWaitForKeyboard;

	[NonSerialized]
	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected int mSelectionStart;

	[NonSerialized]
	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected int mSelectionEnd;

	[NonSerialized]
	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected UITexture mHighlight;

	[NonSerialized]
	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected UITexture mCaret;

	[NonSerialized]
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Texture2D mBlankTex;

	[NonSerialized]
	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float mNextBlink;

	[NonSerialized]
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected float mLastAlpha;

	[NonSerialized]
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected string mCached;

	[NonSerialized]
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected int mSelectMe;

	[NonSerialized]
	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected int mSelectTime;

	[NonSerialized]
	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected bool mStarted;

	[NonSerialized]
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private UICamera mCam;

	[NonSerialized]
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool mEllipsis;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int mIgnoreKey;

	[NonSerialized]
	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public System.Action onUpArrow;

	[NonSerialized]
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public System.Action onDownArrow;

	[Token(Token = "0x170001D1")]
	public string defaultText
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xE36744", Offset = "0xE36744", VA = "0xE36744")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xE368B4", Offset = "0xE368B4", VA = "0xE368B4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public Color defaultColor
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xE374A0", Offset = "0xE374A0", VA = "0xE374A0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xE374C8", Offset = "0xE374C8", VA = "0xE374C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public bool inputShouldBeHidden
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xE375C8", Offset = "0xE375C8", VA = "0xE375C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D4")]
	[Obsolete("Use UIInput.value instead")]
	public string text
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xE37674", Offset = "0xE37674", VA = "0xE37674")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xE376BC", Offset = "0xE376BC", VA = "0xE376BC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public string value
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xE37698", Offset = "0xE37698", VA = "0xE37698")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xE376C4", Offset = "0xE376C4", VA = "0xE376C4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	[Obsolete("Use UIInput.isSelected instead")]
	public bool selected
	{
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xE37C38", Offset = "0xE37C38", VA = "0xE37C38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xE37C3C", Offset = "0xE37C3C", VA = "0xE37C3C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public bool isSelected
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xE37538", Offset = "0xE37538", VA = "0xE37538")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xE37C44", Offset = "0xE37C44", VA = "0xE37C44")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public int cursorPosition
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xE37CE4", Offset = "0xE37CE4", VA = "0xE37CE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xE37D88", Offset = "0xE37D88", VA = "0xE37D88")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public int selectionStart
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xE37E18", Offset = "0xE37E18", VA = "0xE37E18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xE37EC4", Offset = "0xE37EC4", VA = "0xE37EC4")]
		set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public int selectionEnd
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xE37F54", Offset = "0xE37F54", VA = "0xE37F54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xE37FF8", Offset = "0xE37FF8", VA = "0xE37FF8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public UITexture caret
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xE38088", Offset = "0xE38088", VA = "0xE38088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xE376CC", Offset = "0xE376CC", VA = "0xE376CC")]
	public void Set(string value, bool notify = true)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xE378A0", Offset = "0xE378A0", VA = "0xE378A0")]
	public string Validate(string val)
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xE383DC", Offset = "0xE383DC", VA = "0xE383DC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xE36768", Offset = "0xE36768", VA = "0xE36768")]
	protected void Init()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xE37A80", Offset = "0xE37A80", VA = "0xE37A80")]
	protected void SaveToPlayerPrefs(string val)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xE386CC", Offset = "0xE386CC", VA = "0xE386CC", Slot = "4")]
	protected virtual void OnSelect(bool isSelected)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xE38798", Offset = "0xE38798", VA = "0xE38798")]
	protected void OnSelectEvent()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xE388E8", Offset = "0xE388E8", VA = "0xE388E8")]
	protected void OnDeselectEvent()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xE38DE8", Offset = "0xE38DE8", VA = "0xE38DE8", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xE39C28", Offset = "0xE39C28", VA = "0xE39C28")]
	private void OnKey(KeyCode key)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xE39BA4", Offset = "0xE39BA4", VA = "0xE39BA4")]
	protected void DoBackspace()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xE39DEC", Offset = "0xE39DEC", VA = "0xE39DEC", Slot = "6")]
	protected virtual void Insert(string text)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xE3A0D8", Offset = "0xE3A0D8", VA = "0xE3A0D8")]
	protected string GetLeftText()
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xE3A1E4", Offset = "0xE3A1E4", VA = "0xE3A1E4")]
	protected string GetRightText()
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xE3A270", Offset = "0xE3A270", VA = "0xE3A270")]
	protected string GetSelection()
	{
		return null;
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xE3A2FC", Offset = "0xE3A2FC", VA = "0xE3A2FC")]
	protected int GetCharUnderMouse()
	{
		return default(int);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xE3A4D4", Offset = "0xE3A4D4", VA = "0xE3A4D4", Slot = "7")]
	protected virtual void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xE3A5E8", Offset = "0xE3A5E8", VA = "0xE3A5E8", Slot = "8")]
	protected virtual void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xE3A6BC", Offset = "0xE3A6BC", VA = "0xE3A6BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xE3A6C8", Offset = "0xE3A6C8", VA = "0xE3A6C8", Slot = "9")]
	protected virtual void Cleanup()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xE38C70", Offset = "0xE38C70", VA = "0xE38C70")]
	public void Submit()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xE368F4", Offset = "0xE368F4", VA = "0xE368F4")]
	public void UpdateLabel()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xE38090", Offset = "0xE38090", VA = "0xE38090")]
	protected char Validate(string text, int pos, char ch)
	{
		return default(char);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xE37AEC", Offset = "0xE37AEC", VA = "0xE37AEC")]
	protected void ExecuteOnChange()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xE3AD4C", Offset = "0xE3AD4C", VA = "0xE3AD4C")]
	public void RemoveFocus()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xE3AD54", Offset = "0xE3AD54", VA = "0xE3AD54")]
	public void SaveValue()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xE385B8", Offset = "0xE385B8", VA = "0xE385B8")]
	public void LoadValue()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xE3AD5C", Offset = "0xE3AD5C", VA = "0xE3AD5C")]
	public UIInput()
	{
	}
}
[Token(Token = "0x20001C6")]
[RequireComponent(typeof(UIInput))]
public class UIInputOnGUI : MonoBehaviour
{
	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xE3B0C4", Offset = "0xE3B0C4", VA = "0xE3B0C4")]
	public UIInputOnGUI()
	{
	}
}
[Token(Token = "0x20001C7")]
[AddComponentMenu("NGUI/UI/Label")]
[ExecuteInEditMode]
public class UILabel : UIWidget
{
	[Token(Token = "0x20001C8")]
	[DoNotObfuscateNGUI]
	public enum Effect
	{
		[Token(Token = "0x4000A56")]
		None,
		[Token(Token = "0x4000A57")]
		Shadow,
		[Token(Token = "0x4000A58")]
		Outline,
		[Token(Token = "0x4000A59")]
		Outline8
	}

	[Token(Token = "0x20001C9")]
	[DoNotObfuscateNGUI]
	public enum Overflow
	{
		[Token(Token = "0x4000A5B")]
		ShrinkContent,
		[Token(Token = "0x4000A5C")]
		ClampContent,
		[Token(Token = "0x4000A5D")]
		ResizeFreely,
		[Token(Token = "0x4000A5E")]
		ResizeHeight
	}

	[Token(Token = "0x20001CA")]
	[DoNotObfuscateNGUI]
	public enum Crispness
	{
		[Token(Token = "0x4000A60")]
		Never,
		[Token(Token = "0x4000A61")]
		OnDesktop,
		[Token(Token = "0x4000A62")]
		Always
	}

	[Token(Token = "0x20001CB")]
	[DoNotObfuscateNGUI]
	public enum Modifier
	{
		[Token(Token = "0x4000A64")]
		None = 0,
		[Token(Token = "0x4000A65")]
		ToUppercase = 1,
		[Token(Token = "0x4000A66")]
		ToLowercase = 2,
		[Token(Token = "0x4000A67")]
		Custom = 255
	}

	[Token(Token = "0x20001CC")]
	public delegate string ModifierFunc(string s);

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Crispness keepCrispWhenShrunk;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	[HideInInspector]
	private Font mTrueTypeFont;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	[HideInInspector]
	private UnityEngine.Object mFont;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	[HideInInspector]
	[Multiline(6)]
	private string mText;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	[SerializeField]
	private int mFontSize;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[HideInInspector]
	[SerializeField]
	private FontStyle mFontStyle;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[HideInInspector]
	[SerializeField]
	private NGUIText.Alignment mAlignment;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[SerializeField]
	[HideInInspector]
	private bool mEncoding;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	[SerializeField]
	private int mMaxLineCount;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	[SerializeField]
	[HideInInspector]
	private Effect mEffectStyle;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private Color mEffectColor;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	[HideInInspector]
	private NGUIText.SymbolStyle mSymbols;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[HideInInspector]
	[SerializeField]
	private Vector2 mEffectDistance;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[HideInInspector]
	[SerializeField]
	private Overflow mOverflow;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[HideInInspector]
	[SerializeField]
	private bool mApplyGradient;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[HideInInspector]
	[SerializeField]
	private Color mGradientTop;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	[SerializeField]
	[HideInInspector]
	private Color mGradientBottom;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	[SerializeField]
	[HideInInspector]
	private int mSpacingX;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	[HideInInspector]
	private int mSpacingY;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	[SerializeField]
	[HideInInspector]
	private bool mUseFloatSpacing;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	[HideInInspector]
	private float mFloatSpacingX;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	[SerializeField]
	[HideInInspector]
	private float mFloatSpacingY;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	[HideInInspector]
	private bool mOverflowEllipsis;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[HideInInspector]
	[SerializeField]
	private int mOverflowWidth;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	[HideInInspector]
	private int mOverflowHeight;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[HideInInspector]
	[SerializeField]
	private Modifier mModifier;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	[SerializeField]
	private int mSymbolDepth;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	[HideInInspector]
	[SerializeField]
	private bool mShrinkToFit;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	[SerializeField]
	private int mMaxLineWidth;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	[HideInInspector]
	[SerializeField]
	private int mMaxLineHeight;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	[HideInInspector]
	private float mLineWidth;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	[HideInInspector]
	[SerializeField]
	private bool mMultiline;

	[NonSerialized]
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private UILabelSymbols mLabSym;

	[NonSerialized]
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Font mActiveTTF;

	[NonSerialized]
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float mDensity;

	[NonSerialized]
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private bool mShouldBeProcessed;

	[NonSerialized]
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private string mProcessedText;

	[NonSerialized]
	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private bool mPremultiply;

	[NonSerialized]
	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private Vector2 mCalculatedSize;

	[NonSerialized]
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float mScale;

	[NonSerialized]
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private int mFinalFontSize;

	[NonSerialized]
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private int mLastWidth;

	[NonSerialized]
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private int mLastHeight;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public ModifierFunc customModifier;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BetterList<UILabel> mList;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Font, int> mFontUsage;

	[NonSerialized]
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static BetterList<UIDrawCall> mTempDrawcalls;

	[NonSerialized]
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool mTexRebuildAdded;

	[NonSerialized]
	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<Vector3> mTempVerts;

	[NonSerialized]
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<int> mTempIndices;

	[Token(Token = "0x170001DC")]
	public int finalFontSize
	{
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xE3B0CC", Offset = "0xE3B0CC", VA = "0xE3B0CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001DD")]
	private bool shouldBeProcessed
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xE3B318", Offset = "0xE3B318", VA = "0xE3B318")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xE3B320", Offset = "0xE3B320", VA = "0xE3B320")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public override bool isAnchoredHorizontally
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xE3B33C", Offset = "0xE3B33C", VA = "0xE3B33C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001DF")]
	public override bool isAnchoredVertically
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xE3B36C", Offset = "0xE3B36C", VA = "0xE3B36C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E0")]
	public override Material material
	{
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xE3B3A4", Offset = "0xE3B3A4", VA = "0xE3B3A4", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xE3B4E4", Offset = "0xE3B4E4", VA = "0xE3B4E4", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xE3B4EC", Offset = "0xE3B4EC", VA = "0xE3B4EC", Slot = "31")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xE3B638", Offset = "0xE3B638", VA = "0xE3B638", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	[Obsolete("Use UILabel.font instead")]
	public INGUIFont bitmapFont
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xE3B640", Offset = "0xE3B640", VA = "0xE3B640")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xE3B644", Offset = "0xE3B644", VA = "0xE3B644")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public INGUIFont font
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xE3A7EC", Offset = "0xE3A7EC", VA = "0xE3A7EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xE3B648", Offset = "0xE3B648", VA = "0xE3B648")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public INGUIAtlas atlas
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xE3B778", Offset = "0xE3B778", VA = "0xE3B778")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xE3B82C", Offset = "0xE3B82C", VA = "0xE3B82C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public Font trueTypeFont
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xE3B220", Offset = "0xE3B220", VA = "0xE3B220")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xE3B8E8", Offset = "0xE3B8E8", VA = "0xE3B8E8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public UnityEngine.Object ambigiousFont
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xE3BC80", Offset = "0xE3BC80", VA = "0xE3BC80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xE3BCF8", Offset = "0xE3BCF8", VA = "0xE3BCF8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public string text
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xE3BDA0", Offset = "0xE3BDA0", VA = "0xE3BDA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xE38B84", Offset = "0xE38B84", VA = "0xE38B84")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public int defaultFontSize
	{
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xE3BDA8", Offset = "0xE3BDA8", VA = "0xE3BDA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E9")]
	public int fontSize
	{
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xE3BEB0", Offset = "0xE3BEB0", VA = "0xE3BEB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xE3BEB8", Offset = "0xE3BEB8", VA = "0xE3BEB8")]
		set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public FontStyle fontStyle
	{
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xE3BEEC", Offset = "0xE3BEEC", VA = "0xE3BEEC")]
		get
		{
			return default(FontStyle);
		}
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xE3BEF4", Offset = "0xE3BEF4", VA = "0xE3BEF4")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public NGUIText.Alignment alignment
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xE3BF18", Offset = "0xE3BF18", VA = "0xE3BF18")]
		get
		{
			return default(NGUIText.Alignment);
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xE386A8", Offset = "0xE386A8", VA = "0xE386A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public bool applyGradient
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xE3BF20", Offset = "0xE3BF20", VA = "0xE3BF20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xE3BF28", Offset = "0xE3BF28", VA = "0xE3BF28")]
		set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public Color gradientTop
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xE3BF50", Offset = "0xE3BF50", VA = "0xE3BF50")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xE3BF64", Offset = "0xE3BF64", VA = "0xE3BF64")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public Color gradientBottom
	{
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xE3BFDC", Offset = "0xE3BFDC", VA = "0xE3BFDC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xE3BFF0", Offset = "0xE3BFF0", VA = "0xE3BFF0")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public int spacingX
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xE3C068", Offset = "0xE3C068", VA = "0xE3C068")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xE3C070", Offset = "0xE3C070", VA = "0xE3C070")]
		set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public int spacingY
	{
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xE3C094", Offset = "0xE3C094", VA = "0xE3C094")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xE3C09C", Offset = "0xE3C09C", VA = "0xE3C09C")]
		set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public bool useFloatSpacing
	{
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xE3C0C0", Offset = "0xE3C0C0", VA = "0xE3C0C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xE3C0C8", Offset = "0xE3C0C8", VA = "0xE3C0C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public float floatSpacingX
	{
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xE3C0EC", Offset = "0xE3C0EC", VA = "0xE3C0EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xE3C0F4", Offset = "0xE3C0F4", VA = "0xE3C0F4")]
		set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public float floatSpacingY
	{
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xE3C1AC", Offset = "0xE3C1AC", VA = "0xE3C1AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xE3C1B4", Offset = "0xE3C1B4", VA = "0xE3C1B4")]
		set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public float effectiveSpacingY
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xE3C26C", Offset = "0xE3C26C", VA = "0xE3C26C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F5")]
	public float effectiveSpacingX
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xE3C288", Offset = "0xE3C288", VA = "0xE3C288")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F6")]
	public bool overflowEllipsis
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xE3C2A4", Offset = "0xE3C2A4", VA = "0xE3C2A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xE38B5C", Offset = "0xE38B5C", VA = "0xE38B5C")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public int overflowWidth
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xE3C2AC", Offset = "0xE3C2AC", VA = "0xE3C2AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xE3C2B4", Offset = "0xE3C2B4", VA = "0xE3C2B4")]
		set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public int overflowHeight
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xE3C2DC", Offset = "0xE3C2DC", VA = "0xE3C2DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xE3C2E4", Offset = "0xE3C2E4", VA = "0xE3C2E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	private bool keepCrisp
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xE3C30C", Offset = "0xE3C30C", VA = "0xE3C30C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FA")]
	public bool supportEncoding
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xE3C394", Offset = "0xE3C394", VA = "0xE3C394")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xE38774", Offset = "0xE38774", VA = "0xE38774")]
		set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public NGUIText.SymbolStyle symbolStyle
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xE3C39C", Offset = "0xE3C39C", VA = "0xE3C39C")]
		get
		{
			return default(NGUIText.SymbolStyle);
		}
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xE3C3A4", Offset = "0xE3C3A4", VA = "0xE3C3A4")]
		set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public Overflow overflowMethod
	{
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xE3C3C4", Offset = "0xE3C3C4", VA = "0xE3C3C4")]
		get
		{
			return default(Overflow);
		}
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xE3C3CC", Offset = "0xE3C3CC", VA = "0xE3C3CC")]
		set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	[Obsolete("Use 'width' instead")]
	public int lineWidth
	{
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xE3C3EC", Offset = "0xE3C3EC", VA = "0xE3C3EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xE3C3F4", Offset = "0xE3C3F4", VA = "0xE3C3F4")]
		set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	[Obsolete("Use 'height' instead")]
	public int lineHeight
	{
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xE3C3FC", Offset = "0xE3C3FC", VA = "0xE3C3FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xE3C404", Offset = "0xE3C404", VA = "0xE3C404")]
		set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public bool multiLine
	{
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xE37664", Offset = "0xE37664", VA = "0xE37664")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xE3C40C", Offset = "0xE3C40C", VA = "0xE3C40C")]
		set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public override Vector3[] localCorners
	{
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xE3C43C", Offset = "0xE3C43C", VA = "0xE3C43C", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000201")]
	public override Vector3[] worldCorners
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xE3D4EC", Offset = "0xE3D4EC", VA = "0xE3D4EC", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000202")]
	public override Vector4 drawingDimensions
	{
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xE3D51C", Offset = "0xE3D51C", VA = "0xE3D51C", Slot = "28")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000203")]
	public int maxLineCount
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xE3D54C", Offset = "0xE3D54C", VA = "0xE3D54C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xE3D554", Offset = "0xE3D554", VA = "0xE3D554")]
		set
		{
		}
	}

	[Token(Token = "0x17000204")]
	public Effect effectStyle
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xE3D590", Offset = "0xE3D590", VA = "0xE3D590")]
		get
		{
			return default(Effect);
		}
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xE3D598", Offset = "0xE3D598", VA = "0xE3D598")]
		set
		{
		}
	}

	[Token(Token = "0x17000205")]
	public Color effectColor
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xE3D5B8", Offset = "0xE3D5B8", VA = "0xE3D5B8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xE3D5CC", Offset = "0xE3D5CC", VA = "0xE3D5CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public Vector2 effectDistance
	{
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xE3D640", Offset = "0xE3D640", VA = "0xE3D640")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xE3D64C", Offset = "0xE3D64C", VA = "0xE3D64C")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public int quadsPerCharacter
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE3D690", Offset = "0xE3D690", VA = "0xE3D690")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000208")]
	[Obsolete("Use 'overflowMethod == UILabel.Overflow.ShrinkContent' instead")]
	public bool shrinkToFit
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE3D6C4", Offset = "0xE3D6C4", VA = "0xE3D6C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xE3D6D4", Offset = "0xE3D6D4", VA = "0xE3D6D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public string processedText
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xE3D6F4", Offset = "0xE3D6F4", VA = "0xE3D6F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020A")]
	public Vector2 printedSize
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xE3D780", Offset = "0xE3D780", VA = "0xE3D780")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700020B")]
	public override Vector2 localSize
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xE3D7B0", Offset = "0xE3D7B0", VA = "0xE3D7B0", Slot = "27")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700020C")]
	private bool isValid
	{
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xE3D7E0", Offset = "0xE3D7E0", VA = "0xE3D7E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020D")]
	public bool symbolLabel
	{
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xE3D878", Offset = "0xE3D878", VA = "0xE3D878")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020E")]
	public Modifier modifier
	{
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xE3D8D4", Offset = "0xE3D8D4", VA = "0xE3D8D4")]
		get
		{
			return default(Modifier);
		}
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xE3D8DC", Offset = "0xE3D8DC", VA = "0xE3D8DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public override Pivot pivot
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xE3DDF4", Offset = "0xE3DDF4", VA = "0xE3DDF4", Slot = "23")]
		get
		{
			return default(Pivot);
		}
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE3DDFC", Offset = "0xE3DDFC", VA = "0xE3DDFC", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public int symbolDepth
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE3DEAC", Offset = "0xE3DEAC", VA = "0xE3DEAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE3DEB4", Offset = "0xE3DEB4", VA = "0xE3DEB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public string printedText
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xE3E1DC", Offset = "0xE3E1DC", VA = "0xE3E1DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000212")]
	private bool premultipliedAlphaShader
	{
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xE40BA0", Offset = "0xE40BA0", VA = "0xE40BA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000213")]
	private bool packedFontShader
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xE40C54", Offset = "0xE40C54", VA = "0xE40C54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000214")]
	public bool separateSymbols
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xE3DA24", Offset = "0xE3DA24", VA = "0xE3DA24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xE3D918", Offset = "0xE3D918", VA = "0xE3D918", Slot = "15")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xE3DB20", Offset = "0xE3DB20", VA = "0xE3DB20")]
	private void CreateSymbolLabel()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xE3DF6C", Offset = "0xE3DF6C", VA = "0xE3DF6C", Slot = "16")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xE3E0CC", Offset = "0xE3E0CC", VA = "0xE3E0CC", Slot = "35")]
	public override void SetDirty()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xE3B9F8", Offset = "0xE3B9F8", VA = "0xE3B9F8")]
	protected void SetActiveFont(Font fnt)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xE3E274", Offset = "0xE3E274", VA = "0xE3E274")]
	private static void OnFontChanged(Font font)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xE3E6D4", Offset = "0xE3E6D4", VA = "0xE3E6D4", Slot = "13")]
	public override Vector3[] GetSides(Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xE3E714", Offset = "0xE3E714", VA = "0xE3E714", Slot = "37")]
	protected override void UpgradeFrom265()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xE3E8D4", Offset = "0xE3E8D4", VA = "0xE3E8D4", Slot = "18")]
	protected override void OnAnchor()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xE3BBF4", Offset = "0xE3BBF4", VA = "0xE3BBF4")]
	private void ProcessAndRequest()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xE3E9AC", Offset = "0xE3E9AC", VA = "0xE3E9AC", Slot = "14")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xE3EAA0", Offset = "0xE3EAA0", VA = "0xE3EAA0", Slot = "21")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xE3ECF0", Offset = "0xE3ECF0", VA = "0xE3ECF0", Slot = "36")]
	public override void MarkAsChanged()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xE3C46C", Offset = "0xE3C46C", VA = "0xE3C46C")]
	public void ProcessText(bool legacyMode = false, bool full = true)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xE3F6B8", Offset = "0xE3F6B8", VA = "0xE3F6B8", Slot = "39")]
	public override void MakePixelPerfect()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xE3FC80", Offset = "0xE3FC80", VA = "0xE3FC80")]
	public void AssumeNaturalSize()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xE3FEF8", Offset = "0xE3FEF8", VA = "0xE3FEF8")]
	[Obsolete("Use UILabel.GetCharacterAtPosition instead")]
	public int GetCharacterIndex(Vector3 worldPos)
	{
		return default(int);
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xE3FF00", Offset = "0xE3FF00", VA = "0xE3FF00")]
	[Obsolete("Use UILabel.GetCharacterAtPosition instead")]
	public int GetCharacterIndex(Vector2 localPos)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xE3A470", Offset = "0xE3A470", VA = "0xE3A470")]
	public int GetCharacterIndexAtPosition(Vector3 worldPos, bool precise)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xE3FF08", Offset = "0xE3FF08", VA = "0xE3FF08")]
	public int GetCharacterIndexAtPosition(Vector2 localPos, bool precise)
	{
		return default(int);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xE403D4", Offset = "0xE403D4", VA = "0xE403D4")]
	public string GetWordAtPosition(Vector3 worldPos)
	{
		return null;
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xE40570", Offset = "0xE40570", VA = "0xE40570")]
	public string GetWordAtPosition(Vector2 localPos)
	{
		return null;
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xE403F4", Offset = "0xE403F4", VA = "0xE403F4")]
	public string GetWordAtCharacterIndex(int characterIndex)
	{
		return null;
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xE40590", Offset = "0xE40590", VA = "0xE40590")]
	public string GetUrlAtPosition(Vector3 worldPos)
	{
		return null;
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xE40768", Offset = "0xE40768", VA = "0xE40768")]
	public string GetUrlAtPosition(Vector2 localPos)
	{
		return null;
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xE405B0", Offset = "0xE405B0", VA = "0xE405B0")]
	public string GetUrlAtCharacterIndex(int characterIndex)
	{
		return null;
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xE40788", Offset = "0xE40788", VA = "0xE40788")]
	public int GetCharacterIndex(int currentIndex, KeyCode key)
	{
		return default(int);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xE3A8F0", Offset = "0xE3A8F0", VA = "0xE3A8F0")]
	public void PrintOverlay(int start, int end, UIGeometry caret, UIGeometry highlight, Color caretColor, Color highlightColor)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xE40D08", Offset = "0xE40D08", VA = "0xE40D08", Slot = "44")]
	public override void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xE40FA4", Offset = "0xE40FA4", VA = "0xE40FA4")]
	public void Fill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, List<Vector3> symbolVerts, List<Vector2> symbolUVs, List<Color> symbolCols)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xE40198", Offset = "0xE40198", VA = "0xE40198")]
	public Vector2 ApplyOffset(List<Vector3> verts, int start)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xE41818", Offset = "0xE41818", VA = "0xE41818")]
	public void ApplyShadow(List<Vector3> verts, List<Vector2> uvs, List<Color> cols, int start, int end, float x, float y)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xE3A834", Offset = "0xE3A834", VA = "0xE3A834")]
	public int CalculateOffsetToFit(string text)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xE41B8C", Offset = "0xE41B8C", VA = "0xE41B8C")]
	public void SetCurrentProgress()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xE41C6C", Offset = "0xE41C6C", VA = "0xE41C6C")]
	public void SetCurrentPercent()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xE41E30", Offset = "0xE41E30", VA = "0xE41E30")]
	public void SetCurrentSelection()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xE41F3C", Offset = "0xE41F3C", VA = "0xE41F3C")]
	public bool Wrap(string text, out string final)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xE41F48", Offset = "0xE41F48", VA = "0xE41F48")]
	public bool Wrap(string text, out string final, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xE3ED94", Offset = "0xE3ED94", VA = "0xE3ED94")]
	public void UpdateNGUIText()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xE4201C", Offset = "0xE4201C", VA = "0xE4201C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xE420B0", Offset = "0xE420B0", VA = "0xE420B0")]
	public UILabel()
	{
	}
}
[Token(Token = "0x20001CD")]
[HideInInspector]
public class UILabelSymbols : UIWidget
{
	[NonSerialized]
	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UILabel label;

	[NonSerialized]
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int fillFrame;

	[NonSerialized]
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<Vector3> cacheVerts;

	[NonSerialized]
	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<Vector2> cacheUVs;

	[NonSerialized]
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public List<Color> cacheCols;

	[NonSerialized]
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public List<Vector3> symbolVerts;

	[NonSerialized]
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<Vector2> symbolUVs;

	[NonSerialized]
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public List<Color> symbolCols;

	[Token(Token = "0x17000215")]
	public override bool isSelectable
	{
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xE4244C", Offset = "0xE4244C", VA = "0xE4244C", Slot = "38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000216")]
	public override Material material
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xE42454", Offset = "0xE42454", VA = "0xE42454", Slot = "29")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xE40ED0", Offset = "0xE40ED0", VA = "0xE40ED0")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xE42568", Offset = "0xE42568", VA = "0xE42568", Slot = "16")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xE42584", Offset = "0xE42584", VA = "0xE42584", Slot = "44")]
	public override void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xE426F8", Offset = "0xE426F8", VA = "0xE426F8")]
	public UILabelSymbols()
	{
	}
}
[Token(Token = "0x20001CE")]
[AddComponentMenu("NGUI/UI/Localize")]
[ExecuteInEditMode]
[RequireComponent(typeof(UIWidget))]
public class UILocalize : MonoBehaviour
{
	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool mStarted;

	[Token(Token = "0x17000217")]
	public string value
	{
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xE428B8", Offset = "0xE428B8", VA = "0xE428B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xE42C0C", Offset = "0xE42C0C", VA = "0xE42C0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xE42D30", Offset = "0xE42D30", VA = "0xE42D30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xE42C1C", Offset = "0xE42C1C", VA = "0xE42C1C")]
	private void OnLocalize()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xE42D3C", Offset = "0xE42D3C", VA = "0xE42D3C")]
	public UILocalize()
	{
	}
}
[Token(Token = "0x20001CF")]
[AddComponentMenu("NGUI/UI/Orthographic Camera")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
public class UIOrthoCamera : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera mCam;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mTrans;

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xE42D44", Offset = "0xE42D44", VA = "0xE42D44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xE42DD4", Offset = "0xE42DD4", VA = "0xE42DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xE42F38", Offset = "0xE42F38", VA = "0xE42F38")]
	public UIOrthoCamera()
	{
	}
}
[Token(Token = "0x20001D0")]
[AddComponentMenu("NGUI/UI/Panel")]
[ExecuteInEditMode]
public class UIPanel : UIRect
{
	[Token(Token = "0x20001D1")]
	[DoNotObfuscateNGUI]
	public enum RenderQueue
	{
		[Token(Token = "0x4000AA4")]
		Automatic,
		[Token(Token = "0x4000AA5")]
		StartAt,
		[Token(Token = "0x4000AA6")]
		Explicit
	}

	[Token(Token = "0x20001D2")]
	public delegate void OnGeometryUpdated();

	[Token(Token = "0x20001D3")]
	public delegate void OnClippingMoved(UIPanel panel);

	[Token(Token = "0x20001D4")]
	public delegate Material OnCreateMaterial(UIWidget widget, Material mat);

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<UIPanel> list;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OnGeometryUpdated onGeometryUpdated;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool showInPanelTool;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool generateNormals;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool generateUV2;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public UIDrawCall.ShadowMode shadowMode;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool widgetsAreStatic;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool cullWhileDragging;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool alwaysOnScreen;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool anchorOffset;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool softBorderPadding;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RenderQueue renderQueue;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int startingRenderQueue;

	[NonSerialized]
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<UIWidget> widgets;

	[NonSerialized]
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<UIDrawCall> drawCalls;

	[NonSerialized]
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Matrix4x4 worldToLocal;

	[NonSerialized]
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector4 drawCallClipRange;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public OnClippingMoved onClipMove;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public OnCreateMaterial onCreateMaterial;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UIDrawCall.OnCreateDrawCall onCreateDrawCall;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	[HideInInspector]
	private Texture2D mClipTexture;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	[HideInInspector]
	private float mAlpha;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	[HideInInspector]
	private string mAlphaProp;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	[SerializeField]
	private UIDrawCall.Clipping mClipping;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	[HideInInspector]
	private Vector4 mClipRange;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	[HideInInspector]
	private Vector2 mClipSoftness;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	[HideInInspector]
	private int mDepth;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	[SerializeField]
	private int mSortingOrder;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	[HideInInspector]
	private string mSortingLayerName;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool mRebuild;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool mResized;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[SerializeField]
	private Vector2 mClipOffset;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int mMatrixFrame;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int mAlphaFrameID;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int mLayer;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] mTemp;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector2 mMin;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector2 mMax;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool mSortWidgets;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mUpdateScroll;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	public bool useSortingOrder;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private UIPanel mParentPanel;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3[] mCorners;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int mUpdateFrame;

	[NonSerialized]
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool mHasMoved;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private UIDrawCall.OnRenderCallback mOnRender;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool mForced;

	[Token(Token = "0x17000218")]
	public string sortingLayerName
	{
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xE42F40", Offset = "0xE42F40", VA = "0xE42F40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xE42F48", Offset = "0xE42F48", VA = "0xE42F48")]
		set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public static int nextUnusedDepth
	{
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xE43534", Offset = "0xE43534", VA = "0xE43534")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700021A")]
	public override bool canBeAnchored
	{
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xE43634", Offset = "0xE43634", VA = "0xE43634", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021B")]
	public override float alpha
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xE43644", Offset = "0xE43644", VA = "0xE43644", Slot = "7")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xE4364C", Offset = "0xE4364C", VA = "0xE4364C", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public string alphaProperty
	{
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xE4376C", Offset = "0xE4376C", VA = "0xE4376C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xE43774", Offset = "0xE43774", VA = "0xE43774")]
		set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public int depth
	{
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xE437D4", Offset = "0xE437D4", VA = "0xE437D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xE437DC", Offset = "0xE437DC", VA = "0xE437DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public int sortingOrder
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xE438C8", Offset = "0xE438C8", VA = "0xE438C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xE438D0", Offset = "0xE438D0", VA = "0xE438D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700021F")]
	public float width
	{
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xE43A94", Offset = "0xE43A94", VA = "0xE43A94")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000220")]
	public float height
	{
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xE43B04", Offset = "0xE43B04", VA = "0xE43B04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000221")]
	public bool halfPixelOffset
	{
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xE43B18", Offset = "0xE43B18", VA = "0xE43B18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000222")]
	public bool usedForUI
	{
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xE43B20", Offset = "0xE43B20", VA = "0xE43B20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000223")]
	public Vector3 drawCallOffset
	{
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xE43BB8", Offset = "0xE43BB8", VA = "0xE43BB8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000224")]
	public UIDrawCall.Clipping clipping
	{
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xE44054", Offset = "0xE44054", VA = "0xE44054")]
		get
		{
			return default(UIDrawCall.Clipping);
		}
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xE4405C", Offset = "0xE4405C", VA = "0xE4405C")]
		set
		{
		}
	}

	[Token(Token = "0x17000225")]
	public UIPanel parentPanel
	{
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xE44080", Offset = "0xE44080", VA = "0xE44080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000226")]
	public int clipCount
	{
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xE44088", Offset = "0xE44088", VA = "0xE44088")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000227")]
	public bool hasClipping
	{
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xE44118", Offset = "0xE44118", VA = "0xE44118")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000228")]
	public bool hasCumulativeClipping
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xE4412C", Offset = "0xE4412C", VA = "0xE4412C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000229")]
	[Obsolete("Use 'hasClipping' or 'hasCumulativeClipping' instead")]
	public bool clipsChildren
	{
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xE44144", Offset = "0xE44144", VA = "0xE44144")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022A")]
	public Vector2 clipOffset
	{
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xE4415C", Offset = "0xE4415C", VA = "0xE4415C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xE44168", Offset = "0xE44168", VA = "0xE44168")]
		set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public Texture2D clipTexture
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xE4433C", Offset = "0xE4433C", VA = "0xE4433C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xE44344", Offset = "0xE44344", VA = "0xE44344")]
		set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	[Obsolete("Use 'finalClipRegion' or 'baseClipRegion' instead")]
	public Vector4 clipRange
	{
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xE443D4", Offset = "0xE443D4", VA = "0xE443D4")]
		get
		{
			return default(Vector4);
		}
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xE443E8", Offset = "0xE443E8", VA = "0xE443E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public Vector4 baseClipRegion
	{
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xE44540", Offset = "0xE44540", VA = "0xE44540")]
		get
		{
			return default(Vector4);
		}
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xE443EC", Offset = "0xE443EC", VA = "0xE443EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public Vector4 finalClipRegion
	{
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xE44554", Offset = "0xE44554", VA = "0xE44554")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x1700022F")]
	public Vector2 clipSoftness
	{
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xE44608", Offset = "0xE44608", VA = "0xE44608")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xE44614", Offset = "0xE44614", VA = "0xE44614")]
		set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public override Vector3[] localCorners
	{
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xE4464C", Offset = "0xE4464C", VA = "0xE4464C", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000231")]
	public override Vector3[] worldCorners
	{
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xE44804", Offset = "0xE44804", VA = "0xE44804", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xE4397C", Offset = "0xE4397C", VA = "0xE4397C")]
	public static int CompareFunc(UIPanel a, UIPanel b)
	{
		return default(int);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE441D0", Offset = "0xE441D0", VA = "0xE441D0")]
	private void InvalidateClipping()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xE44C6C", Offset = "0xE44C6C", VA = "0xE44C6C", Slot = "13")]
	public override Vector3[] GetSides(Transform relativeTo)
	{
		return null;
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xE450A4", Offset = "0xE450A4", VA = "0xE450A4", Slot = "12")]
	public override void Invalidate(bool includeChildren)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xE450B8", Offset = "0xE450B8", VA = "0xE450B8", Slot = "9")]
	public override float CalculateFinalAlpha(int frameID)
	{
		return default(float);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xE451A8", Offset = "0xE451A8", VA = "0xE451A8", Slot = "19")]
	public override void SetRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xE4548C", Offset = "0xE4548C", VA = "0xE4548C")]
	public bool IsVisible(Vector3 a, Vector3 b, Vector3 c, Vector3 d)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xE457CC", Offset = "0xE457CC", VA = "0xE457CC")]
	public bool IsVisible(Vector3 worldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xE4587C", Offset = "0xE4587C", VA = "0xE4587C")]
	public bool IsVisible(UIWidget w)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xE459AC", Offset = "0xE459AC", VA = "0xE459AC")]
	public bool Affects(UIWidget w)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xE45AB8", Offset = "0xE45AB8", VA = "0xE45AB8")]
	[ContextMenu("Force Refresh")]
	public void RebuildAllDrawCalls()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xE45AC4", Offset = "0xE45AC4", VA = "0xE45AC4")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xE45B70", Offset = "0xE45B70", VA = "0xE45B70", Slot = "17")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xE45B78", Offset = "0xE45B78", VA = "0xE45B78")]
	private void FindParent()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xE45C78", Offset = "0xE45C78", VA = "0xE45C78", Slot = "20")]
	public override void ParentHasChanged()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xE45C94", Offset = "0xE45C94", VA = "0xE45C94", Slot = "21")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xE45CC0", Offset = "0xE45CC0", VA = "0xE45CC0", Slot = "14")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xE45D08", Offset = "0xE45D08", VA = "0xE45D08", Slot = "15")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xE46048", Offset = "0xE46048", VA = "0xE46048", Slot = "16")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xE45710", Offset = "0xE45710", VA = "0xE45710")]
	private void UpdateTransformMatrix()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xE46244", Offset = "0xE46244", VA = "0xE46244", Slot = "18")]
	protected override void OnAnchor()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xE469FC", Offset = "0xE469FC", VA = "0xE469FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xE46BFC", Offset = "0xE46BFC", VA = "0xE46BFC")]
	private void UpdateSelf()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xE48024", Offset = "0xE48024", VA = "0xE48024")]
	public void SortWidgets()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xE47388", Offset = "0xE47388", VA = "0xE47388")]
	private void FillAllDrawCalls()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xE480C8", Offset = "0xE480C8", VA = "0xE480C8")]
	private void OnSetAlphaProp(Material mat)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xE3E638", Offset = "0xE3E638", VA = "0xE3E638")]
	public bool FillDrawCall(UIDrawCall dc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xE47C4C", Offset = "0xE47C4C", VA = "0xE47C4C")]
	public bool FillDrawCall(UIDrawCall dc, bool needsCulling)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xE43008", Offset = "0xE43008", VA = "0xE43008")]
	private void UpdateDrawCalls(int sortOrder)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xE46E68", Offset = "0xE46E68", VA = "0xE46E68")]
	private void UpdateLayers()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xE4704C", Offset = "0xE4704C", VA = "0xE4704C")]
	private void UpdateWidgets()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xE48160", Offset = "0xE48160", VA = "0xE48160")]
	public UIDrawCall FindDrawCall(UIWidget w)
	{
		return null;
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xE483C0", Offset = "0xE483C0", VA = "0xE483C0")]
	public void AddWidget(UIWidget w)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xE485D0", Offset = "0xE485D0", VA = "0xE485D0")]
	public void RemoveWidget(UIWidget w)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xE486E8", Offset = "0xE486E8", VA = "0xE486E8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xE487C0", Offset = "0xE487C0", VA = "0xE487C0", Slot = "23")]
	public virtual Vector3 CalculateConstrainOffset(Vector2 min, Vector2 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xE488BC", Offset = "0xE488BC", VA = "0xE488BC")]
	public bool ConstrainTargetToBounds(Transform target, ref Bounds targetBounds, bool immediate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xE48B20", Offset = "0xE48B20", VA = "0xE48B20")]
	public bool ConstrainTargetToBounds(Transform target, bool immediate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xE48BE0", Offset = "0xE48BE0", VA = "0xE48BE0")]
	public static UIPanel Find(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xE48D98", Offset = "0xE48D98", VA = "0xE48D98")]
	public static UIPanel Find(Transform trans, bool createIfMissing)
	{
		return null;
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xE48C3C", Offset = "0xE48C3C", VA = "0xE48C3C")]
	public static UIPanel Find(Transform trans, bool createIfMissing, int layer)
	{
		return null;
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xE43EB4", Offset = "0xE43EB4", VA = "0xE43EB4")]
	public Vector2 GetWindowSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xE43A98", Offset = "0xE43A98", VA = "0xE43A98")]
	public Vector2 GetViewSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xE48E00", Offset = "0xE48E00", VA = "0xE48E00")]
	public UIPanel()
	{
	}
}
[Token(Token = "0x20001D5")]
[ExecuteInEditMode]
[AddComponentMenu("NGUI/UI/Root")]
public class UIRoot : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	[DoNotObfuscateNGUI]
	public enum Scaling
	{
		[Token(Token = "0x4000AB3")]
		Flexible,
		[Token(Token = "0x4000AB4")]
		Constrained,
		[Token(Token = "0x4000AB5")]
		ConstrainedOnMobiles
	}

	[Token(Token = "0x20001D7")]
	[DoNotObfuscateNGUI]
	public enum Constraint
	{
		[Token(Token = "0x4000AB7")]
		Fit,
		[Token(Token = "0x4000AB8")]
		Fill,
		[Token(Token = "0x4000AB9")]
		FitWidth,
		[Token(Token = "0x4000ABA")]
		FitHeight
	}

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<UIRoot> list;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scaling scalingStyle;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int manualWidth;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int manualHeight;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int minimumHeight;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maximumHeight;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fitWidth;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool fitHeight;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool adjustByDPI;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool shrinkPortraitUI;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform mTrans;

	[Token(Token = "0x17000232")]
	public Constraint constraint
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xE49480", Offset = "0xE49480", VA = "0xE49480")]
		get
		{
			return default(Constraint);
		}
	}

	[Token(Token = "0x17000233")]
	public Scaling activeScaling
	{
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xE494A8", Offset = "0xE494A8", VA = "0xE494A8")]
		get
		{
			return default(Scaling);
		}
	}

	[Token(Token = "0x17000234")]
	public int activeHeight
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xE494B8", Offset = "0xE494B8", VA = "0xE494B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000235")]
	public float pixelSizeAdjustment
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xE497B0", Offset = "0xE497B0", VA = "0xE497B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xE4995C", Offset = "0xE4995C", VA = "0xE4995C")]
	public static float GetPixelSizeAdjustment(GameObject go)
	{
		return default(float);
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xE498FC", Offset = "0xE498FC", VA = "0xE498FC")]
	public float GetPixelSizeAdjustment(int height)
	{
		return default(float);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xE49A28", Offset = "0xE49A28", VA = "0xE49A28", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xE49A4C", Offset = "0xE49A4C", VA = "0xE49A4C", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xE49B20", Offset = "0xE49B20", VA = "0xE49B20", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xE49BA0", Offset = "0xE49BA0", VA = "0xE49BA0", Slot = "7")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xE49E64", Offset = "0xE49E64", VA = "0xE49E64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xE49D20", Offset = "0xE49D20", VA = "0xE49D20")]
	public void UpdateScale(bool updateAnchors = true)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xE49E6C", Offset = "0xE49E6C", VA = "0xE49E6C")]
	public static void Broadcast(string funcName)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE49FA4", Offset = "0xE49FA4", VA = "0xE49FA4")]
	public static void Broadcast(string funcName, object param)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE4A148", Offset = "0xE4A148", VA = "0xE4A148")]
	public UIRoot()
	{
	}
}
[Token(Token = "0x20001D8")]
[AddComponentMenu("NGUI/UI/Sprite")]
[ExecuteInEditMode]
public class UISprite : UIBasicSprite
{
	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Object mAtlas;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	[HideInInspector]
	private string mSpriteName;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[HideInInspector]
	[SerializeField]
	private bool mFixedAspect;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	[SerializeField]
	[HideInInspector]
	private bool mFillCenter;

	[NonSerialized]
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected UISpriteData mSprite;

	[NonSerialized]
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool mSpriteSet;

	[NonSerialized]
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool autoMakePixelPerfect;

	[Token(Token = "0x17000236")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xE4A1FC", Offset = "0xE4A1FC", VA = "0xE4A1FC", Slot = "31")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xE4A304", Offset = "0xE4A304", VA = "0xE4A304", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public override Material material
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xE4A30C", Offset = "0xE4A30C", VA = "0xE4A30C", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xE4A404", Offset = "0xE4A404", VA = "0xE4A404", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public INGUIAtlas atlas
	{
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xE4A40C", Offset = "0xE4A40C", VA = "0xE4A40C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xE4A454", Offset = "0xE4A454", VA = "0xE4A454")]
		set
		{
		}
	}

	[Token(Token = "0x17000239")]
	public bool fixedAspect
	{
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xE4A8E0", Offset = "0xE4A8E0", VA = "0xE4A8E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xE4A8E8", Offset = "0xE4A8E8", VA = "0xE4A8E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public string spriteName
	{
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xE4AA04", Offset = "0xE4AA04", VA = "0xE4AA04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xE4A7C4", Offset = "0xE4A7C4", VA = "0xE4A7C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public bool isValid
	{
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xE4AA0C", Offset = "0xE4AA0C", VA = "0xE4AA0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023C")]
	[Obsolete("Use 'centerType' instead")]
	public bool fillCenter
	{
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xE4AD08", Offset = "0xE4AD08", VA = "0xE4AD08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xE4AD18", Offset = "0xE4AD18", VA = "0xE4AD18")]
		set
		{
		}
	}

	[Token(Token = "0x1700023D")]
	public bool applyGradient
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xE4AD48", Offset = "0xE4AD48", VA = "0xE4AD48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xE4AD50", Offset = "0xE4AD50", VA = "0xE4AD50")]
		set
		{
		}
	}

	[Token(Token = "0x1700023E")]
	public Color gradientTop
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xE4AD78", Offset = "0xE4AD78", VA = "0xE4AD78")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xE4AD8C", Offset = "0xE4AD8C", VA = "0xE4AD8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public Color gradientBottom
	{
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xE4AE04", Offset = "0xE4AE04", VA = "0xE4AE04")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xE4AE18", Offset = "0xE4AE18", VA = "0xE4AE18")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public override Vector4 border
	{
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xE4AE90", Offset = "0xE4AE90", VA = "0xE4AE90", Slot = "42")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000241")]
	protected override Vector4 padding
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xE4AED0", Offset = "0xE4AED0", VA = "0xE4AED0", Slot = "51")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000242")]
	public override float pixelSize
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xE4AF10", Offset = "0xE4AF10", VA = "0xE4AF10", Slot = "50")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000243")]
	public override int minWidth
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xE4B008", Offset = "0xE4B008", VA = "0xE4B008", Slot = "40")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000244")]
	public override int minHeight
	{
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xE4B294", Offset = "0xE4B294", VA = "0xE4B294", Slot = "41")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000245")]
	public override Vector4 drawingDimensions
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xE4B520", Offset = "0xE4B520", VA = "0xE4B520", Slot = "28")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000246")]
	public override bool premultipliedAlpha
	{
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xE4BB8C", Offset = "0xE4BB8C", VA = "0xE4BB8C", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xE4A91C", Offset = "0xE4A91C", VA = "0xE4A91C")]
	public UISpriteData GetSprite(string spriteName)
	{
		return null;
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xE4A9D8", Offset = "0xE4A9D8", VA = "0xE4A9D8", Slot = "36")]
	public override void MarkAsChanged()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xE4AA24", Offset = "0xE4AA24", VA = "0xE4AA24")]
	public UISpriteData GetAtlasSprite()
	{
		return null;
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xE4A714", Offset = "0xE4A714", VA = "0xE4A714")]
	protected void SetAtlasSprite(UISpriteData sp)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xE4BC44", Offset = "0xE4BC44", VA = "0xE4BC44", Slot = "39")]
	public override void MakePixelPerfect()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xE4BFA0", Offset = "0xE4BFA0", VA = "0xE4BFA0", Slot = "15")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xE4BFBC", Offset = "0xE4BFBC", VA = "0xE4BFBC", Slot = "22")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xE4C294", Offset = "0xE4C294", VA = "0xE4C294", Slot = "44")]
	public override void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xE4C534", Offset = "0xE4C534", VA = "0xE4C534")]
	public UISprite()
	{
	}
}
[Token(Token = "0x20001D9")]
[ExecuteInEditMode]
[RequireComponent(typeof(UISprite))]
[AddComponentMenu("NGUI/UI/Sprite Animation")]
public class UISpriteAnimation : MonoBehaviour
{
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int frameIndex;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[HideInInspector]
	protected int mFPS;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	protected string mPrefix;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	protected bool mLoop;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	[SerializeField]
	protected bool mSnap;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected UISprite mSprite;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float mDelta;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool mActive;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<string> mSpriteNames;

	[Token(Token = "0x17000247")]
	public int frames
	{
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xE4C594", Offset = "0xE4C594", VA = "0xE4C594")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000248")]
	public int framesPerSecond
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xE4C5DC", Offset = "0xE4C5DC", VA = "0xE4C5DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xE4C5E4", Offset = "0xE4C5E4", VA = "0xE4C5E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public string namePrefix
	{
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xE4C5EC", Offset = "0xE4C5EC", VA = "0xE4C5EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xE4C5F4", Offset = "0xE4C5F4", VA = "0xE4C5F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public bool loop
	{
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xE4C910", Offset = "0xE4C910", VA = "0xE4C910")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xE4C918", Offset = "0xE4C918", VA = "0xE4C918")]
		set
		{
		}
	}

	[Token(Token = "0x1700024B")]
	public bool isPlaying
	{
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xE4C924", Offset = "0xE4C924", VA = "0xE4C924")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xE4C92C", Offset = "0xE4C92C", VA = "0xE4C92C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xE4C930", Offset = "0xE4C930", VA = "0xE4C930", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xE4C644", Offset = "0xE4C644", VA = "0xE4C644")]
	public void RebuildSpriteList()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xE4CA88", Offset = "0xE4CA88", VA = "0xE4CA88")]
	public void Play()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xE4CA94", Offset = "0xE4CA94", VA = "0xE4CA94")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xE4CA9C", Offset = "0xE4CA9C", VA = "0xE4CA9C")]
	public void ResetToBeginning()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xE4CB90", Offset = "0xE4CB90", VA = "0xE4CB90")]
	public UISpriteAnimation()
	{
	}
}
[Token(Token = "0x20001DA")]
[AddComponentMenu("NGUI/UI/Sprite Collection")]
[ExecuteInEditMode]
public class UISpriteCollection : UIBasicSprite
{
	[Token(Token = "0x20001DB")]
	public struct Sprite
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UISpriteData sprite;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 pos;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rot;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float width;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float height;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 color;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 pivot;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type type;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Flip flip;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enabled;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xE4D958", Offset = "0xE4D958", VA = "0xE4D958")]
		public Vector4 GetDrawingDimensions(float pixelSize)
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x20001DC")]
	public delegate void OnHoverCB(object obj, bool isOver);

	[Token(Token = "0x20001DD")]
	public delegate void OnPressCB(object obj, bool isPressed);

	[Token(Token = "0x20001DE")]
	public delegate void OnClickCB(object obj);

	[Token(Token = "0x20001DF")]
	public delegate void OnDragCB(object obj, Vector2 delta);

	[Token(Token = "0x20001E0")]
	public delegate void OnTooltipCB(object obj, bool show);

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Object mAtlas;

	[NonSerialized]
	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Dictionary<object, Sprite> mSprites;

	[NonSerialized]
	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private UISpriteData mSprite;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public OnHoverCB onHover;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public OnPressCB onPress;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public OnClickCB onClick;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public OnDragCB onDrag;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public OnTooltipCB onTooltip;

	[NonSerialized]
	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private object mLastHover;

	[NonSerialized]
	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private object mLastPress;

	[NonSerialized]
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private object mLastTooltip;

	[Token(Token = "0x1700024C")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xE4CC60", Offset = "0xE4CC60", VA = "0xE4CC60", Slot = "31")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xE4CDAC", Offset = "0xE4CDAC", VA = "0xE4CDAC", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x1700024D")]
	public override Material material
	{
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xE4CDB4", Offset = "0xE4CDB4", VA = "0xE4CDB4", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xE4CEA8", Offset = "0xE4CEA8", VA = "0xE4CEA8", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700024E")]
	public INGUIAtlas atlas
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xE4CD64", Offset = "0xE4CD64", VA = "0xE4CD64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xE4CEB0", Offset = "0xE4CEB0", VA = "0xE4CEB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public override float pixelSize
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xE4CFF8", Offset = "0xE4CFF8", VA = "0xE4CFF8", Slot = "50")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000250")]
	public override bool premultipliedAlpha
	{
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xE4D0B0", Offset = "0xE4D0B0", VA = "0xE4D0B0", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000251")]
	public override Vector4 border
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xE4D164", Offset = "0xE4D164", VA = "0xE4D164", Slot = "42")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000252")]
	protected override Vector4 padding
	{
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xE4D19C", Offset = "0xE4D19C", VA = "0xE4D19C", Slot = "51")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xE4D1D4", Offset = "0xE4D1D4", VA = "0xE4D1D4", Slot = "44")]
	public override void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xE4DDD0", Offset = "0xE4DDD0", VA = "0xE4DDD0")]
	public void Add(object obj, string spriteName, Vector2 pos, float width, float height)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xE4E078", Offset = "0xE4E078", VA = "0xE4E078")]
	public void Add(object obj, string spriteName, Vector2 pos, float width, float height, Color32 color)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xE4DDF0", Offset = "0xE4DDF0", VA = "0xE4DDF0")]
	public void AddSprite(object id, string spriteName, Vector2 pos, float width, float height, Color32 color, Vector2 pivot, float rot = 0f, Type type = Type.Simple, Flip flip = Flip.Nothing, bool enabled = true)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xE4E098", Offset = "0xE4E098", VA = "0xE4E098")]
	public Sprite? GetSprite(object id)
	{
		return null;
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xE4E168", Offset = "0xE4E168", VA = "0xE4E168")]
	public bool RemoveSprite(object id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xE4E1F0", Offset = "0xE4E1F0", VA = "0xE4E1F0")]
	public bool SetSprite(object id, Sprite sp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xE4E2B4", Offset = "0xE4E2B4", VA = "0xE4E2B4")]
	[ContextMenu("Clear")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xE4E34C", Offset = "0xE4E34C", VA = "0xE4E34C")]
	public bool IsActive(object id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xE4E3D8", Offset = "0xE4E3D8", VA = "0xE4E3D8")]
	public bool SetActive(object id, bool visible)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xE4E500", Offset = "0xE4E500", VA = "0xE4E500")]
	public bool SetPosition(object id, Vector2 pos, bool visible = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xE4E684", Offset = "0xE4E684", VA = "0xE4E684")]
	private static Vector2 Rotate(Vector2 pos, float rot)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xE4E6F0", Offset = "0xE4E6F0", VA = "0xE4E6F0")]
	public object GetCurrentSpriteID()
	{
		return null;
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xE4E9EC", Offset = "0xE4E9EC", VA = "0xE4E9EC")]
	public Sprite? GetCurrentSprite()
	{
		return null;
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xE4E754", Offset = "0xE4E754", VA = "0xE4E754")]
	public object GetCurrentSpriteID(Vector3 worldPos)
	{
		return null;
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xE4EA7C", Offset = "0xE4EA7C", VA = "0xE4EA7C")]
	public Sprite? GetCurrentSprite(Vector3 worldPos)
	{
		return null;
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xE4EDB8", Offset = "0xE4EDB8", VA = "0xE4EDB8")]
	protected void OnClick()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xE4EDFC", Offset = "0xE4EDFC", VA = "0xE4EDFC")]
	protected void OnPress(bool isPressed)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xE4EEA8", Offset = "0xE4EEA8", VA = "0xE4EEA8")]
	protected void OnHover(bool isOver)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xE4F074", Offset = "0xE4F074", VA = "0xE4F074")]
	protected void OnMove(Vector2 delta)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xE4F158", Offset = "0xE4F158", VA = "0xE4F158")]
	protected void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xE4F17C", Offset = "0xE4F17C", VA = "0xE4F17C")]
	protected void OnTooltip(bool show)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xE4F238", Offset = "0xE4F238", VA = "0xE4F238")]
	public UISpriteCollection()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E1")]
public class UISpriteData
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int x;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int y;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int height;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int borderLeft;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int borderRight;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int borderTop;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int borderBottom;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int paddingLeft;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int paddingRight;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int paddingTop;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int paddingBottom;

	[Token(Token = "0x17000253")]
	public bool hasBorder
	{
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xE4BF80", Offset = "0xE4BF80", VA = "0xE4BF80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000254")]
	public bool hasPadding
	{
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xE4FB44", Offset = "0xE4FB44", VA = "0xE4FB44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xE4FB64", Offset = "0xE4FB64", VA = "0xE4FB64")]
	public void SetRect(int x, int y, int width, int height)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xE4FB70", Offset = "0xE4FB70", VA = "0xE4FB70")]
	public void SetPadding(int left, int bottom, int right, int top)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xE4FB7C", Offset = "0xE4FB7C", VA = "0xE4FB7C")]
	public void SetBorder(int left, int bottom, int right, int top)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xE4FB88", Offset = "0xE4FB88", VA = "0xE4FB88")]
	public void CopyFrom(UISpriteData sd)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xE4FBD4", Offset = "0xE4FBD4", VA = "0xE4FBD4")]
	public void CopyBorderFrom(UISpriteData sd)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xE4FBF0", Offset = "0xE4FBF0", VA = "0xE4FBF0")]
	public UISpriteData()
	{
	}
}
[Token(Token = "0x20001E2")]
[AddComponentMenu("NGUI/UI/Stretch")]
[ExecuteInEditMode]
public class UIStretch : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	[DoNotObfuscateNGUI]
	public enum Style
	{
		[Token(Token = "0x4000AFE")]
		None,
		[Token(Token = "0x4000AFF")]
		Horizontal,
		[Token(Token = "0x4000B00")]
		Vertical,
		[Token(Token = "0x4000B01")]
		Both,
		[Token(Token = "0x4000B02")]
		BasedOnHeight,
		[Token(Token = "0x4000B03")]
		FillKeepingRatio,
		[Token(Token = "0x4000B04")]
		FitInternalKeepingRatio
	}

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera uiCamera;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject container;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Style style;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool runOnlyOnce;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 relativeSize;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 initialSize;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 borderPadding;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private UIWidget widgetContainer;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform mTrans;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIWidget mWidget;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UISprite mSprite;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIPanel mPanel;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UIRoot mRoot;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animation mAnim;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rect mRect;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool mStarted;

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xE4FC48", Offset = "0xE4FC48", VA = "0xE4FC48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xE4FE38", Offset = "0xE4FE38", VA = "0xE4FE38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xE4FF40", Offset = "0xE4FF40", VA = "0xE4FF40")]
	private void ScreenSizeChanged()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xE50B1C", Offset = "0xE50B1C", VA = "0xE50B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xE4FF58", Offset = "0xE4FF58", VA = "0xE4FF58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xE50CE0", Offset = "0xE50CE0", VA = "0xE50CE0")]
	public UIStretch()
	{
	}
}
[Token(Token = "0x20001E4")]
[AddComponentMenu("NGUI/UI/Text List")]
public class UITextList : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[DoNotObfuscateNGUI]
	public enum Style
	{
		[Token(Token = "0x4000B11")]
		Text,
		[Token(Token = "0x4000B12")]
		Chat
	}

	[Token(Token = "0x20001E6")]
	protected class Paragraph
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] lines;

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xE51C80", Offset = "0xE51C80", VA = "0xE51C80")]
		public Paragraph()
		{
		}
	}

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel textLabel;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIProgressBar scrollBar;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Style style;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int paragraphHistory;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected char[] mSeparator;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float mScroll;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int mTotalLines;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int mLastWidth;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int mLastHeight;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BetterList<Paragraph> mParagraphs;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, BetterList<Paragraph>> mHistory;

	[Token(Token = "0x17000255")]
	protected BetterList<Paragraph> paragraphs
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xE50D74", Offset = "0xE50D74", VA = "0xE50D74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000256")]
	public int paragraphCount
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xE50ECC", Offset = "0xE50ECC", VA = "0xE50ECC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000257")]
	public bool isValid
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xE50EE8", Offset = "0xE50EE8", VA = "0xE50EE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000258")]
	public float scrollValue
	{
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xE50F98", Offset = "0xE50F98", VA = "0xE50F98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xE50FA0", Offset = "0xE50FA0", VA = "0xE50FA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000259")]
	protected float lineHeight
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xE513D4", Offset = "0xE513D4", VA = "0xE513D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700025A")]
	protected int scrollHeight
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE5146C", Offset = "0xE5146C", VA = "0xE5146C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xE51520", Offset = "0xE51520", VA = "0xE51520")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xE5157C", Offset = "0xE5157C", VA = "0xE5157C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xE5172C", Offset = "0xE5172C", VA = "0xE5172C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xE51A50", Offset = "0xE51A50", VA = "0xE51A50")]
	public void OnScroll(float val)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xE51AB0", Offset = "0xE51AB0", VA = "0xE51AB0")]
	public void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xE51B10", Offset = "0xE51B10", VA = "0xE51B10")]
	private void OnScrollBar()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xE51B74", Offset = "0xE51B74", VA = "0xE51B74")]
	public void Add(string text)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xE51B7C", Offset = "0xE51B7C", VA = "0xE51B7C")]
	protected void Add(string text, bool updateVisible)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xE5177C", Offset = "0xE5177C", VA = "0xE5177C")]
	protected void Rebuild()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xE5107C", Offset = "0xE5107C", VA = "0xE5107C")]
	protected void UpdateVisibleText()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xE51C88", Offset = "0xE51C88", VA = "0xE51C88")]
	public UITextList()
	{
	}
}
[Token(Token = "0x20001E7")]
[AddComponentMenu("NGUI/UI/Texture")]
[ExecuteInEditMode]
public class UITexture : UIBasicSprite
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	[HideInInspector]
	[SerializeField]
	private Rect mRect;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[HideInInspector]
	[SerializeField]
	private Texture mTexture;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	[HideInInspector]
	private Shader mShader;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[HideInInspector]
	[SerializeField]
	private Vector4 mBorder;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	[SerializeField]
	private bool mFixedAspect;

	[NonSerialized]
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private int mPMA;

	[Token(Token = "0x1700025B")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xE51DA8", Offset = "0xE51DA8", VA = "0xE51DA8", Slot = "31")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xE51E64", Offset = "0xE51E64", VA = "0xE51E64", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x1700025C")]
	public override Material material
	{
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xE51FB8", Offset = "0xE51FB8", VA = "0xE51FB8", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xE51FC0", Offset = "0xE51FC0", VA = "0xE51FC0", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700025D")]
	public override Shader shader
	{
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xE5208C", Offset = "0xE5208C", VA = "0xE5208C", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xE52170", Offset = "0xE52170", VA = "0xE52170", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x1700025E")]
	public override bool premultipliedAlpha
	{
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xE522D4", Offset = "0xE522D4", VA = "0xE522D4", Slot = "49")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025F")]
	public override Vector4 border
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xE523F4", Offset = "0xE523F4", VA = "0xE523F4", Slot = "42")]
		get
		{
			return default(Vector4);
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xE52408", Offset = "0xE52408", VA = "0xE52408", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000260")]
	public Rect uvRect
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xE52478", Offset = "0xE52478", VA = "0xE52478")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xE5248C", Offset = "0xE5248C", VA = "0xE5248C")]
		set
		{
		}
	}

	[Token(Token = "0x17000261")]
	public override Vector4 drawingDimensions
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xE5251C", Offset = "0xE5251C", VA = "0xE5251C", Slot = "28")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000262")]
	public bool fixedAspect
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xE52780", Offset = "0xE52780", VA = "0xE52780")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xE52788", Offset = "0xE52788", VA = "0xE52788")]
		set
		{
		}
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xE527BC", Offset = "0xE527BC", VA = "0xE527BC", Slot = "39")]
	public override void MakePixelPerfect()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xE528F8", Offset = "0xE528F8", VA = "0xE528F8", Slot = "22")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xE52A44", Offset = "0xE52A44", VA = "0xE52A44", Slot = "44")]
	public override void OnFill(List<Vector3> verts, List<Vector2> uvs, List<Color> cols)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xE52DF0", Offset = "0xE52DF0", VA = "0xE52DF0")]
	public UITexture()
	{
	}
}
[Token(Token = "0x20001E8")]
[AddComponentMenu("NGUI/UI/Tooltip")]
public class UITooltip : MonoBehaviour
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static UITooltip mInstance;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera uiCamera;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel text;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tooltipRoot;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UISprite background;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float appearSpeed;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool scalingTransitions;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject mTooltip;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Transform mTrans;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float mTarget;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float mCurrent;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3 mPos;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 mSize;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected List<UIWidget> mWidgets;

	[Token(Token = "0x17000263")]
	public static bool isVisible
	{
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xE52EC4", Offset = "0xE52EC4", VA = "0xE52EC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xE52F70", Offset = "0xE52F70", VA = "0xE52F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xE52FC8", Offset = "0xE52FC8", VA = "0xE52FC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xE5301C", Offset = "0xE5301C", VA = "0xE5301C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xE5325C", Offset = "0xE5325C", VA = "0xE5325C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xE534CC", Offset = "0xE534CC", VA = "0xE534CC", Slot = "6")]
	protected virtual void SetAlpha(float val)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xE53580", Offset = "0xE53580", VA = "0xE53580", Slot = "7")]
	protected virtual void SetText(string tooltipText)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xE53CC4", Offset = "0xE53CC4", VA = "0xE53CC4")]
	[Obsolete("Use UITooltip.Show instead")]
	public static void ShowText(string text)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xE53D80", Offset = "0xE53D80", VA = "0xE53D80")]
	public static void Show(string text)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xE53E3C", Offset = "0xE53E3C", VA = "0xE53E3C")]
	public static void Hide()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xE53EF0", Offset = "0xE53EF0", VA = "0xE53EF0")]
	public UITooltip()
	{
	}
}
[Token(Token = "0x20001E9")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("NGUI/UI/Viewport Camera")]
[ExecuteInEditMode]
public class UIViewport : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera sourceCamera;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform topLeft;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bottomRight;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fullSize;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mCam;

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xE53FCC", Offset = "0xE53FCC", VA = "0xE53FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xE54090", Offset = "0xE54090", VA = "0xE54090")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xE542EC", Offset = "0xE542EC", VA = "0xE542EC")]
	public UIViewport()
	{
	}
}
[Token(Token = "0x20001EA")]
public class ActorCOMTransform : MonoBehaviour
{
	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiActor actor;

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xE542FC", Offset = "0xE542FC", VA = "0xE542FC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xE543F4", Offset = "0xE543F4", VA = "0xE543F4")]
	public ActorCOMTransform()
	{
	}
}
[Token(Token = "0x20001EB")]
public class ActorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor template;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int basePhase;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxInstances;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnDelay;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int phase;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int instances;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeFromLastSpawn;

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xE543FC", Offset = "0xE543FC", VA = "0xE543FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xE545F4", Offset = "0xE545F4", VA = "0xE545F4")]
	public ActorSpawner()
	{
	}
}
[Token(Token = "0x20001EC")]
[RequireComponent(typeof(ObiActor))]
public class AddRandomVelocity : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xE54614", Offset = "0xE54614", VA = "0xE54614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xE546AC", Offset = "0xE546AC", VA = "0xE546AC")]
	public AddRandomVelocity()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Blinker : MonoBehaviour
{
	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlightColor;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color original;

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xE546BC", Offset = "0xE546BC", VA = "0xE546BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xE54744", Offset = "0xE54744", VA = "0xE54744")]
	public void Blink()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xE54778", Offset = "0xE54778", VA = "0xE54778")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xE5485C", Offset = "0xE5485C", VA = "0xE5485C")]
	public Blinker()
	{
	}
}
[Token(Token = "0x20001EE")]
[RequireComponent(typeof(ObiSolver))]
public class ColliderHighlighter : MonoBehaviour
{
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xE54864", Offset = "0xE54864", VA = "0xE54864")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xE548BC", Offset = "0xE548BC", VA = "0xE548BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xE54948", Offset = "0xE54948", VA = "0xE54948")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xE549D4", Offset = "0xE549D4", VA = "0xE549D4")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xE54B6C", Offset = "0xE54B6C", VA = "0xE54B6C")]
	public ColliderHighlighter()
	{
	}
}
[Token(Token = "0x20001EF")]
[RequireComponent(typeof(ObiSolver))]
public class CollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int contactCount;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xE54B74", Offset = "0xE54B74", VA = "0xE54B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xE54BCC", Offset = "0xE54BCC", VA = "0xE54BCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xE54C58", Offset = "0xE54C58", VA = "0xE54C58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xE54CE4", Offset = "0xE54CE4", VA = "0xE54CE4")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xE54CF0", Offset = "0xE54CF0", VA = "0xE54CF0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xE5521C", Offset = "0xE5521C", VA = "0xE5521C")]
	public CollisionEventHandler()
	{
	}
}
[Token(Token = "0x20001F0")]
[ExecuteInEditMode]
[RequireComponent(typeof(ObiActor))]
public class DebugParticleFrames : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiActor actor;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float size;

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xE55224", Offset = "0xE55224", VA = "0xE55224")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xE5527C", Offset = "0xE5527C", VA = "0xE5527C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xE5546C", Offset = "0xE5546C", VA = "0xE5546C")]
	public DebugParticleFrames()
	{
	}
}
[Token(Token = "0x20001F1")]
public class ExtrapolationCamera : MonoBehaviour
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float extrapolation;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float smoothness;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float linearSpeed;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float rotationalSpeed;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Min(0f)]
	public float distanceFromTarget;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 extrapolatedPos;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xE5547C", Offset = "0xE5547C", VA = "0xE5547C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xE55500", Offset = "0xE55500", VA = "0xE55500")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xE55630", Offset = "0xE55630", VA = "0xE55630")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xE558EC", Offset = "0xE558EC", VA = "0xE558EC")]
	public void Teleport(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xE559FC", Offset = "0xE559FC", VA = "0xE559FC")]
	public ExtrapolationCamera()
	{
	}
}
[Token(Token = "0x20001F2")]
[RequireComponent(typeof(Text))]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showMedian;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medianLearnrate;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentFPS;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float median;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float average;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uguiText;

	[Token(Token = "0x17000264")]
	public float CurrentFPS
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xE55A18", Offset = "0xE55A18", VA = "0xE55A18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000265")]
	public float FPSMedian
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xE55A20", Offset = "0xE55A20", VA = "0xE55A20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000266")]
	public float FPSAverage
	{
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xE55A28", Offset = "0xE55A28", VA = "0xE55A28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xE55A30", Offset = "0xE55A30", VA = "0xE55A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xE55A94", Offset = "0xE55A94", VA = "0xE55A94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xE55C30", Offset = "0xE55C30", VA = "0xE55C30")]
	public void ResetMedianAndAverage()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xE55C38", Offset = "0xE55C38", VA = "0xE55C38")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x20001F3")]
public class ObiActorTeleport : MonoBehaviour
{
	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor actor;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xE55C54", Offset = "0xE55C54", VA = "0xE55C54")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xE55CF0", Offset = "0xE55CF0", VA = "0xE55CF0")]
	public ObiActorTeleport()
	{
	}
}
[Token(Token = "0x20001F4")]
[RequireComponent(typeof(ObiSolver))]
public class ObiParticleCounter : MonoBehaviour
{
	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int counter;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider2D targetCollider;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<int> particles;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xE55CF8", Offset = "0xE55CF8", VA = "0xE55CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xE55D50", Offset = "0xE55D50", VA = "0xE55D50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xE55DDC", Offset = "0xE55DDC", VA = "0xE55DDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xE55E68", Offset = "0xE55E68", VA = "0xE55E68")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xE56004", Offset = "0xE56004", VA = "0xE56004")]
	public ObiParticleCounter()
	{
	}
}
[Token(Token = "0x20001F5")]
public class ObjectDragger : MonoBehaviour
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xE5608C", Offset = "0xE5608C", VA = "0xE5608C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xE5617C", Offset = "0xE5617C", VA = "0xE5617C")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xE56214", Offset = "0xE56214", VA = "0xE56214")]
	public ObjectDragger()
	{
	}
}
[Token(Token = "0x20001F6")]
public class ObjectLimit : MonoBehaviour
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minX;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxX;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minY;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxY;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minZ;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxZ;

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xE5621C", Offset = "0xE5621C", VA = "0xE5621C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xE56308", Offset = "0xE56308", VA = "0xE56308")]
	public ObjectLimit()
	{
	}
}
[Token(Token = "0x20001F7")]
public class SlowmoToggler : MonoBehaviour
{
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xE56320", Offset = "0xE56320", VA = "0xE56320")]
	public void Slowmo(bool slowmo)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xE56338", Offset = "0xE56338", VA = "0xE56338")]
	public SlowmoToggler()
	{
	}
}
[Token(Token = "0x20001F8")]
[RequireComponent(typeof(ObiSolver))]
public class WorldSpaceGravity : MonoBehaviour
{
	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 worldGravity;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xE56340", Offset = "0xE56340", VA = "0xE56340")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xE56398", Offset = "0xE56398", VA = "0xE56398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xE563EC", Offset = "0xE563EC", VA = "0xE563EC")]
	public WorldSpaceGravity()
	{
	}
}
[Token(Token = "0x20001F9")]
public class CharacterControl2D : MonoBehaviour
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float jumpPower;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody unityRigidbody;

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xE56404", Offset = "0xE56404", VA = "0xE56404")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xE5645C", Offset = "0xE5645C", VA = "0xE5645C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xE56630", Offset = "0xE56630", VA = "0xE56630")]
	public CharacterControl2D()
	{
	}
}
[Token(Token = "0x20001FA")]
public class CraneController : MonoBehaviour
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xE5664C", Offset = "0xE5664C", VA = "0xE5664C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xE566E0", Offset = "0xE566E0", VA = "0xE566E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xE56828", Offset = "0xE56828", VA = "0xE56828")]
	public CraneController()
	{
	}
}
[Token(Token = "0x20001FB")]
[RequireComponent(typeof(ObiRope))]
public class CursorController : MonoBehaviour
{
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minLength;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xE56830", Offset = "0xE56830", VA = "0xE56830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xE568C0", Offset = "0xE568C0", VA = "0xE568C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xE56B1C", Offset = "0xE56B1C", VA = "0xE56B1C")]
	public CursorController()
	{
	}
}
[Token(Token = "0x20001FC")]
public class ExtendableGrapplingHook : MonoBehaviour
{
	[Token(Token = "0x20001FD")]
	[CompilerGenerated]
	private sealed class <AttachHook>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtendableGrapplingHook <>4__this;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObiConstraints<ObiPinConstraintsBatch> <pinConstraints>5__2;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentLength>5__3;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xE57C98", Offset = "0xE57C98", VA = "0xE57C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xE57CE0", Offset = "0xE57CE0", VA = "0xE57CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xE56F38", Offset = "0xE56F38", VA = "0xE56F38")]
		[DebuggerHidden]
		public <AttachHook>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xE570F0", Offset = "0xE570F0", VA = "0xE570F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xE570F4", Offset = "0xE570F4", VA = "0xE570F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xE57CA0", Offset = "0xE57CA0", VA = "0xE57CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiSolver solver;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObiCollider character;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObiRopeSection section;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float hookResolution;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float hookExtendRetractSpeed;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hookShootSpeed;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int particlePoolSize;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObiRope rope;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRopeBlueprint blueprint;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObiRopeExtrudedRenderer ropeRenderer;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastHit hookAttachment;

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xE56B30", Offset = "0xE56B30", VA = "0xE56B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xE56D14", Offset = "0xE56D14", VA = "0xE56D14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xE56D70", Offset = "0xE56D70", VA = "0xE56D70")]
	private void LaunchHook()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xE56EC4", Offset = "0xE56EC4", VA = "0xE56EC4")]
	[IteratorStateMachine(typeof(<AttachHook>d__16))]
	private IEnumerator AttachHook()
	{
		return null;
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xE56F60", Offset = "0xE56F60", VA = "0xE56F60")]
	private void DetachHook()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xE56FD4", Offset = "0xE56FD4", VA = "0xE56FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xE570D0", Offset = "0xE570D0", VA = "0xE570D0")]
	public ExtendableGrapplingHook()
	{
	}
}
[Token(Token = "0x20001FE")]
public class GrapplingHook : MonoBehaviour
{
	[Token(Token = "0x20001FF")]
	[CompilerGenerated]
	private sealed class <AttachHook>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrapplingHook <>4__this;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xE58AF4", Offset = "0xE58AF4", VA = "0xE58AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xE58B3C", Offset = "0xE58B3C", VA = "0xE58B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xE580E8", Offset = "0xE580E8", VA = "0xE580E8")]
		[DebuggerHidden]
		public <AttachHook>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xE58290", Offset = "0xE58290", VA = "0xE58290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xE58294", Offset = "0xE58294", VA = "0xE58294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xE58AFC", Offset = "0xE58AFC", VA = "0xE58AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiSolver solver;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObiCollider character;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hookExtendRetractSpeed;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObiRopeSection section;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ObiRope rope;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObiRopeBlueprint blueprint;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRopeExtrudedRenderer ropeRenderer;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hookAttachment;

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xE57CE8", Offset = "0xE57CE8", VA = "0xE57CE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xE57EC4", Offset = "0xE57EC4", VA = "0xE57EC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xE57F20", Offset = "0xE57F20", VA = "0xE57F20")]
	private void LaunchHook()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xE58074", Offset = "0xE58074", VA = "0xE58074")]
	[IteratorStateMachine(typeof(<AttachHook>d__13))]
	private IEnumerator AttachHook()
	{
		return null;
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xE58110", Offset = "0xE58110", VA = "0xE58110")]
	private void DetachHook()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xE58184", Offset = "0xE58184", VA = "0xE58184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xE58280", Offset = "0xE58280", VA = "0xE58280")]
	public GrapplingHook()
	{
	}
}
[Token(Token = "0x2000200")]
[RequireComponent(typeof(ObiRope))]
public class HosePump : MonoBehaviour
{
	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Bulge controls")]
	public float pumpSpeed;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bulgeFrequency;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float baseThickness;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bulgeThickness;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color bulgeColor;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Flow controls")]
	public ParticleSystem waterEmitter;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float flowSpeedMin;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float flowSpeedMax;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minEmitRate;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxEmitRate;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRope rope;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ObiPathSmoother smoother;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float time;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xE58B44", Offset = "0xE58B44", VA = "0xE58B44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xE58C3C", Offset = "0xE58C3C", VA = "0xE58C3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xE58CC8", Offset = "0xE58CC8", VA = "0xE58CC8")]
	private void Rope_OnBeginStep(ObiActor actor, float stepTime)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xE59090", Offset = "0xE59090", VA = "0xE59090")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xE592A0", Offset = "0xE592A0", VA = "0xE592A0")]
	public HosePump()
	{
	}
}
[Token(Token = "0x2000201")]
public class RopeBetweenTwoPoints : MonoBehaviour
{
	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiSolver solver;

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xE592CC", Offset = "0xE592CC", VA = "0xE592CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xE592D0", Offset = "0xE592D0", VA = "0xE592D0")]
	private void Generate()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xE59990", Offset = "0xE59990", VA = "0xE59990")]
	public RopeBetweenTwoPoints()
	{
	}
}
[Token(Token = "0x2000202")]
public class RopeNet : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2Int resolution;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 size;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float nodeSize;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xE59998", Offset = "0xE59998", VA = "0xE59998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xE59C2C", Offset = "0xE59C2C", VA = "0xE59C2C")]
	private void CreateNet(ObiSolver solver)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xE5A5CC", Offset = "0xE5A5CC", VA = "0xE5A5CC")]
	private void PinRope(ObiRope rope, ObiCollider bodyA, ObiCollider bodyB, Vector3 offsetA, Vector3 offsetB)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xE5A0F0", Offset = "0xE5A0F0", VA = "0xE5A0F0")]
	private ObiRope CreateRope(Vector3 pointA, Vector3 pointB)
	{
		return null;
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xE5A838", Offset = "0xE5A838", VA = "0xE5A838")]
	public RopeNet()
	{
	}
}
[Token(Token = "0x2000203")]
[RequireComponent(typeof(ObiRope))]
public class RopeSweepCut : MonoBehaviour
{
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 cutStartPosition;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xE5A860", Offset = "0xE5A860", VA = "0xE5A860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xE5AA64", Offset = "0xE5AA64", VA = "0xE5AA64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xE5A8C0", Offset = "0xE5A8C0", VA = "0xE5A8C0")]
	private void AddMouseLine()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xE5AA68", Offset = "0xE5AA68", VA = "0xE5AA68")]
	private void DeleteMouseLine()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xE5AB10", Offset = "0xE5AB10", VA = "0xE5AB10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xE5AB88", Offset = "0xE5AB88", VA = "0xE5AB88")]
	private void ProcessInput()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xE5ACBC", Offset = "0xE5ACBC", VA = "0xE5ACBC")]
	private void ScreenSpaceCut(Vector2 lineStart, Vector2 lineEnd)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xE5AED0", Offset = "0xE5AED0", VA = "0xE5AED0")]
	private bool SegmentSegmentIntersection(Vector2 A, Vector2 B, Vector2 C, Vector2 D, out float r, out float s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xE5B040", Offset = "0xE5B040", VA = "0xE5B040")]
	public RopeSweepCut()
	{
	}
}
[Token(Token = "0x2000204")]
public class RopeTenser : MonoBehaviour
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xC99178", Offset = "0xC99178", VA = "0xC99178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xC99220", Offset = "0xC99220", VA = "0xC99220")]
	public RopeTenser()
	{
	}
}
[Token(Token = "0x2000205")]
[RequireComponent(typeof(ObiRope))]
[RequireComponent(typeof(MeshRenderer))]
public class RopeTensionColorizer : MonoBehaviour
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTension;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTension;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normalColor;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color tensionColor;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RopeTenser tenser;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float tenserThreshold;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float tenserMax;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRope rope;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material localMaterial;

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xC99230", Offset = "0xC99230", VA = "0xC99230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xC992D0", Offset = "0xC992D0", VA = "0xC992D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xC9932C", Offset = "0xC9932C", VA = "0xC9932C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xC9946C", Offset = "0xC9946C", VA = "0xC9946C")]
	public RopeTensionColorizer()
	{
	}
}
[Token(Token = "0x2000206")]
public class RuntimeRopeGenerator
{
	[Token(Token = "0x2000207")]
	[CompilerGenerated]
	private sealed class <MakeRope>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xC995E4", Offset = "0xC995E4", VA = "0xC995E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xC9962C", Offset = "0xC9962C", VA = "0xC9962C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xC99500", Offset = "0xC99500", VA = "0xC99500")]
		[DebuggerHidden]
		public <MakeRope>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xC99548", Offset = "0xC99548", VA = "0xC99548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xC9954C", Offset = "0xC9954C", VA = "0xC9954C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xC995EC", Offset = "0xC995EC", VA = "0xC995EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ObiSolver solver;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int pinnedParticle;

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xC994A0", Offset = "0xC994A0", VA = "0xC994A0")]
	[IteratorStateMachine(typeof(<MakeRope>d__2))]
	public IEnumerator MakeRope(Transform anchoredTo, Vector3 attachmentOffset, float ropeLength)
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xC99528", Offset = "0xC99528", VA = "0xC99528")]
	public void AddPendulum(ObiCollider pendulum, Vector3 attachmentOffset)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xC9952C", Offset = "0xC9952C", VA = "0xC9952C")]
	public void RemovePendulum()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xC99530", Offset = "0xC99530", VA = "0xC99530")]
	public void ChangeRopeLength(float changeAmount)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xC99534", Offset = "0xC99534", VA = "0xC99534")]
	private void UpdateTethers()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xC99538", Offset = "0xC99538", VA = "0xC99538")]
	public RuntimeRopeGenerator()
	{
	}
}
[Token(Token = "0x2000208")]
public class RuntimeRopeGeneratorUse : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeRopeGeneratorUse <>4__this;

		[Token(Token = "0x1700026D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xC99860", Offset = "0xC99860", VA = "0xC99860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xC998A8", Offset = "0xC998A8", VA = "0xC998A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xC996A8", Offset = "0xC996A8", VA = "0xC996A8")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xC99734", Offset = "0xC99734", VA = "0xC99734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xC99738", Offset = "0xC99738", VA = "0xC99738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xC99868", Offset = "0xC99868", VA = "0xC99868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiCollider pendulum;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RuntimeRopeGenerator rg;

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xC99634", Offset = "0xC99634", VA = "0xC99634")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xC996D0", Offset = "0xC996D0", VA = "0xC996D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xC9972C", Offset = "0xC9972C", VA = "0xC9972C")]
	public RuntimeRopeGeneratorUse()
	{
	}
}
[Token(Token = "0x200020A")]
public class SnakeController : MonoBehaviour
{
	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headReferenceFrame;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float headSpeed;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float upSpeed;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float slitherSpeed;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiRope rope;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ObiSolver solver;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] traction;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] surfaceNormal;

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xC998B0", Offset = "0xC998B0", VA = "0xC998B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xC99AAC", Offset = "0xC99AAC", VA = "0xC99AAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xC99BD8", Offset = "0xC99BD8", VA = "0xC99BD8")]
	private void ResetSurfaceInfo(ObiSolver s, float stepTime)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xC99C98", Offset = "0xC99C98", VA = "0xC99C98")]
	private void AnalyzeContacts(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xC99E7C", Offset = "0xC99E7C", VA = "0xC99E7C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xC9A4D8", Offset = "0xC9A4D8", VA = "0xC9A4D8")]
	public SnakeController()
	{
	}
}
[Token(Token = "0x200020B")]
[ExecuteInEditMode]
public class SpiralCurve : MonoBehaviour
{
	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radialStep;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float heightStep;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float points;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationalMass;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xC9A4F4", Offset = "0xC9A4F4", VA = "0xC9A4F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xC9A4F8", Offset = "0xC9A4F8", VA = "0xC9A4F8")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xC9A8B8", Offset = "0xC9A8B8", VA = "0xC9A8B8")]
	public SpiralCurve()
	{
	}
}
[Token(Token = "0x200020C")]
public class Wrappable : MonoBehaviour
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wrapped;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color normalColor;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color wrappedColor;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material localMaterial;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xC9A8D4", Offset = "0xC9A8D4", VA = "0xC9A8D4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xC9A93C", Offset = "0xC9A93C", VA = "0xC9A93C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xC9A998", Offset = "0xC9A998", VA = "0xC9A998")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xC9A9C4", Offset = "0xC9A9C4", VA = "0xC9A9C4")]
	public void SetWrapped()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xC9A9F4", Offset = "0xC9A9F4", VA = "0xC9A9F4")]
	public bool IsWrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xC9A9FC", Offset = "0xC9A9FC", VA = "0xC9A9FC")]
	public Wrappable()
	{
	}
}
[Token(Token = "0x200020D")]
[RequireComponent(typeof(ObiSolver))]
public class WrapRopeGameController : MonoBehaviour
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Wrappable[] wrappables;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onFinish;

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xC9AA1C", Offset = "0xC9AA1C", VA = "0xC9AA1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xC9AA74", Offset = "0xC9AA74", VA = "0xC9AA74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xC9AB00", Offset = "0xC9AB00", VA = "0xC9AB00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xC9AB8C", Offset = "0xC9AB8C", VA = "0xC9AB8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xC9ABE8", Offset = "0xC9ABE8", VA = "0xC9ABE8")]
	private void Solver_OnCollision(ObiSolver s, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xC9B024", Offset = "0xC9B024", VA = "0xC9B024")]
	public WrapRopeGameController()
	{
	}
}
[Token(Token = "0x200020E")]
[RequireComponent(typeof(Rigidbody))]
public class WrapRopePlayerController : MonoBehaviour
{
	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xC9B098", Offset = "0xC9B098", VA = "0xC9B098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xC9B0F0", Offset = "0xC9B0F0", VA = "0xC9B0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xC9B364", Offset = "0xC9B364", VA = "0xC9B364")]
	public WrapRopePlayerController()
	{
	}
}
[Token(Token = "0x200020F")]
public class PreviousAndNext : MonoBehaviour
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefab;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int number;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentInstance;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool IsPressed;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xC9B374", Offset = "0xC9B374", VA = "0xC9B374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xC9B4AC", Offset = "0xC9B4AC", VA = "0xC9B4AC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xC9B37C", Offset = "0xC9B37C", VA = "0xC9B37C")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xC9B53C", Offset = "0xC9B53C", VA = "0xC9B53C")]
	public PreviousAndNext()
	{
	}
}
[Token(Token = "0x2000210")]
public class BBAudioManagerGlobal : BoxBoxingAudioManager
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BBAudioManagerGlobal instance;

	[Token(Token = "0x1700026F")]
	public static BBAudioManagerGlobal Instance
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xC9B544", Offset = "0xC9B544", VA = "0xC9B544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xC9B694", Offset = "0xC9B694", VA = "0xC9B694")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xC9B6E4", Offset = "0xC9B6E4", VA = "0xC9B6E4")]
	public BBAudioManagerGlobal()
	{
	}
}
[Token(Token = "0x2000211")]
public class BoxBoxingAudioManager : FastAudiosManager
{
	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioPlayList<BBAudio> audioPlayList;

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xC9B6EC", Offset = "0xC9B6EC", VA = "0xC9B6EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xC9B73C", Offset = "0xC9B73C", VA = "0xC9B73C")]
	public void PlayAudio(BBAudio audioName, bool loop = false, float volume = 1f)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xC9B794", Offset = "0xC9B794", VA = "0xC9B794")]
	public void PlayAudioRandom(BBAudio audioName)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xC9B7D4", Offset = "0xC9B7D4", VA = "0xC9B7D4", Slot = "6")]
	public virtual void PlayAudioSolo(BBAudio audioName, bool breakOnPlaying = false, float volume = 1f)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xC9B6E8", Offset = "0xC9B6E8", VA = "0xC9B6E8")]
	public BoxBoxingAudioManager()
	{
	}
}
[Token(Token = "0x2000212")]
public class FastAudiosManager : MonoBehaviour
{
	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource templateAudioSource;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<AudioSource> freeAudioSources;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<AudioSource> playingAudioSources;

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xC9BC30", Offset = "0xC9BC30", VA = "0xC9BC30", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xC9BD98", Offset = "0xC9BD98", VA = "0xC9BD98", Slot = "5")]
	public virtual void PlayAudio(AudioClip audioClip, bool loop = false, float volume = 1f)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xC9BA24", Offset = "0xC9BA24", VA = "0xC9BA24")]
	public void StopAllAudio()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xC9B874", Offset = "0xC9B874", VA = "0xC9B874")]
	public bool IsPlaying(AudioClip audioClip)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xC9C018", Offset = "0xC9C018", VA = "0xC9C018")]
	public void StopAudio(AudioClip audioClip)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xC9BC34", Offset = "0xC9BC34", VA = "0xC9BC34")]
	protected void CheckNoPlayingAudioSources()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xC9BE04", Offset = "0xC9BE04", VA = "0xC9BE04")]
	protected AudioSource GetFreeAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xC9BB78", Offset = "0xC9BB78", VA = "0xC9BB78")]
	public FastAudiosManager()
	{
	}
}
[Token(Token = "0x2000213")]
public class GameSound : MonoBehaviour
{
	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventTrigger m_EventTrigger;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioClip;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource As;

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xC9C1BC", Offset = "0xC9C1BC", VA = "0xC9C1BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xC9C27C", Offset = "0xC9C27C", VA = "0xC9C27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xC9C588", Offset = "0xC9C588", VA = "0xC9C588")]
	private void PlayAudioClip(AudioClip clip)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xC9C61C", Offset = "0xC9C61C", VA = "0xC9C61C")]
	private void OnPointerClickDelegate(BaseEventData data)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xC9C6E8", Offset = "0xC9C6E8", VA = "0xC9C6E8")]
	private void OnPointerEnterDelegate(BaseEventData data)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xC9C780", Offset = "0xC9C780", VA = "0xC9C780")]
	public GameSound()
	{
	}
}
[Token(Token = "0x2000214")]
public class AutoFloat : MonoBehaviour
{
	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offset;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveRange;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originPos;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool relative;

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xC9C888", Offset = "0xC9C888", VA = "0xC9C888")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xC9C8B8", Offset = "0xC9C8B8", VA = "0xC9C8B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xC9C9C4", Offset = "0xC9C9C4", VA = "0xC9C9C4")]
	public AutoFloat()
	{
	}
}
[Token(Token = "0x2000215")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotate;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotate;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotate;

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xC9C9CC", Offset = "0xC9C9CC", VA = "0xC9C9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xC9CA28", Offset = "0xC9CA28", VA = "0xC9CA28")]
	public AutoRotate()
	{
	}
}
[Serializable]
[Token(Token = "0x2000216")]
public class ArtNumber : MonoBehaviour
{
	[Token(Token = "0x2000217")]
	[CompilerGenerated]
	private sealed class <SetNumberCor>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint uiNumber;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArtNumber <>4__this;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fDelay;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fDuration;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <iCurNumber>5__2;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <iPerGap>5__3;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xC9D3E4", Offset = "0xC9D3E4", VA = "0xC9D3E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xC9D42C", Offset = "0xC9D42C", VA = "0xC9D42C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xC9CAFC", Offset = "0xC9CAFC", VA = "0xC9CAFC")]
		[DebuggerHidden]
		public <SetNumberCor>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xC9D180", Offset = "0xC9D180", VA = "0xC9D180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xC9D184", Offset = "0xC9D184", VA = "0xC9D184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xC9D3EC", Offset = "0xC9D3EC", VA = "0xC9D3EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite[] m_NumberSprites;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_SinglePrefab;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_Number;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xC9CA30", Offset = "0xC9CA30", VA = "0xC9CA30")]
	public void SetNumberAnimated(uint uiNumber, float fDelay, float fDuration)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xC9CA64", Offset = "0xC9CA64", VA = "0xC9CA64")]
	[IteratorStateMachine(typeof(<SetNumberCor>d__4))]
	private IEnumerator SetNumberCor(uint uiNumber, float fDelay, float fDuration)
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xC9CB24", Offset = "0xC9CB24", VA = "0xC9CB24")]
	public void SetNumber(uint uiNumber)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xC9D178", Offset = "0xC9D178", VA = "0xC9D178")]
	public ArtNumber()
	{
	}
}
[Token(Token = "0x2000218")]
public class BannerGUI : MonoBehaviour
{
	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <PlayAnima>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BannerGUI <>4__this;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fill>5__2;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__3;

		[Token(Token = "0x17000272")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0xC9D70C", Offset = "0xC9D70C", VA = "0xC9D70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xC9D754", Offset = "0xC9D754", VA = "0xC9D754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xC9D558", Offset = "0xC9D558", VA = "0xC9D558")]
		[DebuggerHidden]
		public <PlayAnima>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xC9D588", Offset = "0xC9D588", VA = "0xC9D588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xC9D58C", Offset = "0xC9D58C", VA = "0xC9D58C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xC9D714", Offset = "0xC9D714", VA = "0xC9D714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISprite texture;

	[Token(Token = "0x4000BEF")]
	private const string MatchBegin = "start_banner";

	[Token(Token = "0x4000BF0")]
	private const string MatchEnd = "matchend_banner";

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xC9D434", Offset = "0xC9D434", VA = "0xC9D434")]
	public void SetBannerType(int type)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xC9D4C4", Offset = "0xC9D4C4", VA = "0xC9D4C4")]
	public void PlayBanner()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xC9D4E4", Offset = "0xC9D4E4", VA = "0xC9D4E4")]
	[IteratorStateMachine(typeof(<PlayAnima>d__5))]
	private IEnumerator PlayAnima()
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xC9D580", Offset = "0xC9D580", VA = "0xC9D580")]
	public BannerGUI()
	{
	}
}
[Token(Token = "0x200021A")]
public abstract class ButtonSelectGUI : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <waitsound>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonSelectGUI <>4__this;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x17000274")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xC9DBA8", Offset = "0xC9DBA8", VA = "0xC9DBA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xC9DBF0", Offset = "0xC9DBF0", VA = "0xC9DBF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xC9DA8C", Offset = "0xC9DA8C", VA = "0xC9DA8C")]
		[DebuggerHidden]
		public <waitsound>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xC9DABC", Offset = "0xC9DABC", VA = "0xC9DABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xC9DAC0", Offset = "0xC9DAC0", VA = "0xC9DAC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xC9DBB0", Offset = "0xC9DBB0", VA = "0xC9DBB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] NormalUI;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] SelectUI;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button[] ButtonUI;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xC9D75C", Offset = "0xC9D75C", VA = "0xC9D75C", Slot = "4")]
	public virtual void OnSelect(int index)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xC9DA08", Offset = "0xC9DA08", VA = "0xC9DA08")]
	[IteratorStateMachine(typeof(<waitsound>d__4))]
	private IEnumerator waitsound(int index)
	{
		return null;
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xC9DAB4", Offset = "0xC9DAB4", VA = "0xC9DAB4")]
	protected ButtonSelectGUI()
	{
	}
}
[Token(Token = "0x200021C")]
[AppearEffect(AppearType.FADE_UGUI, 0.5f, 0.5f, false)]
public class FadeMainScene : EasySmallView
{
	[Token(Token = "0x200021D")]
	[CompilerGenerated]
	private sealed class <Intent>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Obj;

		[Token(Token = "0x17000276")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xC9DE30", Offset = "0xC9DE30", VA = "0xC9DE30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xC9DE78", Offset = "0xC9DE78", VA = "0xC9DE78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xC9DD2C", Offset = "0xC9DD2C", VA = "0xC9DD2C")]
		[DebuggerHidden]
		public <Intent>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xC9DD5C", Offset = "0xC9DD5C", VA = "0xC9DD5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xC9DD60", Offset = "0xC9DD60", VA = "0xC9DD60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xC9DE38", Offset = "0xC9DE38", VA = "0xC9DE38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] GamePanel;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject HidePanel;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastClickedTime;

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xC9DBF8", Offset = "0xC9DBF8", VA = "0xC9DBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xC9DBFC", Offset = "0xC9DBFC", VA = "0xC9DBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xC9DC00", Offset = "0xC9DC00", VA = "0xC9DC00")]
	public void hide(int index)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xC9DC74", Offset = "0xC9DC74", VA = "0xC9DC74")]
	public void AfterWindow(int index)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xC9DCB8", Offset = "0xC9DCB8", VA = "0xC9DCB8")]
	[IteratorStateMachine(typeof(<Intent>d__7))]
	private IEnumerator Intent(GameObject Obj)
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xC9DD54", Offset = "0xC9DD54", VA = "0xC9DD54")]
	public FadeMainScene()
	{
	}
}
[Token(Token = "0x200021E")]
[AppearEffect(AppearType.FADE_UGUI, 0.5f, 0.5f, false)]
public class FadeModeScene : EasySmallView
{
	[Token(Token = "0x200021F")]
	[CompilerGenerated]
	private sealed class <EnterMode>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeModeScene <>4__this;

		[Token(Token = "0x17000278")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xC9E4E0", Offset = "0xC9E4E0", VA = "0xC9E4E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xC9E528", Offset = "0xC9E528", VA = "0xC9E528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xC9E164", Offset = "0xC9E164", VA = "0xC9E164")]
		[DebuggerHidden]
		public <EnterMode>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xC9E3E8", Offset = "0xC9E3E8", VA = "0xC9E3E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xC9E3EC", Offset = "0xC9E3EC", VA = "0xC9E3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xC9E4E8", Offset = "0xC9E4E8", VA = "0xC9E4E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <Init_Window>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeModeScene <>4__this;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xC9E60C", Offset = "0xC9E60C", VA = "0xC9E60C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xC9E654", Offset = "0xC9E654", VA = "0xC9E654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xC9E3B8", Offset = "0xC9E3B8", VA = "0xC9E3B8")]
		[DebuggerHidden]
		public <Init_Window>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xC9E530", Offset = "0xC9E530", VA = "0xC9E530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xC9E534", Offset = "0xC9E534", VA = "0xC9E534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xC9E614", Offset = "0xC9E614", VA = "0xC9E614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GameModeCanvas;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastClickedTime;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject GamePanel;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SelfPanel;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button PlayButton;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerSuiteAssmble Psa;

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xC9DE80", Offset = "0xC9DE80", VA = "0xC9DE80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xC9DE84", Offset = "0xC9DE84", VA = "0xC9DE84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xC9DE88", Offset = "0xC9DE88", VA = "0xC9DE88")]
	public void PlayHide()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xC9E0F0", Offset = "0xC9E0F0", VA = "0xC9E0F0")]
	[IteratorStateMachine(typeof(<EnterMode>d__9))]
	private IEnumerator EnterMode()
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xC9E18C", Offset = "0xC9E18C", VA = "0xC9E18C")]
	public void LevelHide()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xC9E254", Offset = "0xC9E254", VA = "0xC9E254")]
	public static void Play(bool b)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xC9E014", Offset = "0xC9E014", VA = "0xC9E014")]
	private bool IsLock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xC9E320", Offset = "0xC9E320", VA = "0xC9E320")]
	private void Error()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xC9E324", Offset = "0xC9E324", VA = "0xC9E324", Slot = "9")]
	public override void AfterWindowClosed()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xC9E344", Offset = "0xC9E344", VA = "0xC9E344")]
	[IteratorStateMachine(typeof(<Init_Window>d__15))]
	private IEnumerator Init_Window()
	{
		return null;
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xC9E3E0", Offset = "0xC9E3E0", VA = "0xC9E3E0")]
	public FadeModeScene()
	{
	}
}
[Token(Token = "0x2000221")]
[AppearEffect(AppearType.FADE_UGUI, 0f, 0f, false)]
public class FadeSplash : MonoBehaviour
{
	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private sealed class <SplashHide>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeSplash <>4__this;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <xt>5__2;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject <go>5__4;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__5;

		[Token(Token = "0x1700027C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xC9EDB8", Offset = "0xC9EDB8", VA = "0xC9EDB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xC9EE00", Offset = "0xC9EE00", VA = "0xC9EE00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xC9E738", Offset = "0xC9E738", VA = "0xC9E738")]
		[DebuggerHidden]
		public <SplashHide>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xC9E768", Offset = "0xC9E768", VA = "0xC9E768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xC9E794", Offset = "0xC9E794", VA = "0xC9E794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xC9ED68", Offset = "0xC9ED68", VA = "0xC9ED68")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xC9EDC0", Offset = "0xC9EDC0", VA = "0xC9EDC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Logo;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup group;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup LogoGroup;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> splashList;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool SplashFinished;

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xC9E65C", Offset = "0xC9E65C", VA = "0xC9E65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xC9E6A4", Offset = "0xC9E6A4", VA = "0xC9E6A4")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xC9E6C4", Offset = "0xC9E6C4", VA = "0xC9E6C4")]
	[IteratorStateMachine(typeof(<SplashHide>d__7))]
	private IEnumerator SplashHide()
	{
		return null;
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xC9E760", Offset = "0xC9E760", VA = "0xC9E760")]
	public FadeSplash()
	{
	}
}
[Token(Token = "0x2000223")]
public class LevelUI : MonoBehaviour
{
	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI[] LevelMode;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] Count;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xC9EE08", Offset = "0xC9EE08", VA = "0xC9EE08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xC9EF40", Offset = "0xC9EF40", VA = "0xC9EF40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xC9EE0C", Offset = "0xC9EE0C", VA = "0xC9EE0C")]
	public void SetText()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xC9EF44", Offset = "0xC9EF44", VA = "0xC9EF44")]
	public LevelUI()
	{
	}
}
[Token(Token = "0x2000224")]
public class PlayerRankGUI : MonoBehaviour
{
	[Token(Token = "0x2000225")]
	[CompilerGenerated]
	private sealed class <UpdateList>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRankGUI <>4__this;

		[Token(Token = "0x1700027E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0xC9FEF4", Offset = "0xC9FEF4", VA = "0xC9FEF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0xC9FF3C", Offset = "0xC9FF3C", VA = "0xC9FF3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xC9F4F8", Offset = "0xC9F4F8", VA = "0xC9F4F8")]
		[DebuggerHidden]
		public <UpdateList>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xC9FE24", Offset = "0xC9FE24", VA = "0xC9FE24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xC9FE28", Offset = "0xC9FE28", VA = "0xC9FE28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xC9FEFC", Offset = "0xC9FEFC", VA = "0xC9FEFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[CompilerGenerated]
	private sealed class <RankTime>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRankGUI <>4__this;

		[Token(Token = "0x17000280")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0xCA0434", Offset = "0xCA0434", VA = "0xCA0434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xCA047C", Offset = "0xCA047C", VA = "0xCA047C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xC9F524", Offset = "0xC9F524", VA = "0xC9F524")]
		[DebuggerHidden]
		public <RankTime>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xC9FF44", Offset = "0xC9FF44", VA = "0xC9FF44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xC9FF48", Offset = "0xC9FF48", VA = "0xC9FF48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xCA043C", Offset = "0xCA043C", VA = "0xCA043C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RankTable m_RankTable;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OnSelectGameObject;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject RankSelf;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject RankList;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<RankItem> m_RankList;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI m_RankTime;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string nickname;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FistRank Winner;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FistRank Calories;

	[Token(Token = "0x4000C26")]
	private const int RankCount = 8;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int IconIndex;

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xC9F0D4", Offset = "0xC9F0D4", VA = "0xC9F0D4")]
	public void RankLanguage()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xC9F298", Offset = "0xC9F298", VA = "0xC9F298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xC9F484", Offset = "0xC9F484", VA = "0xC9F484")]
	[IteratorStateMachine(typeof(<UpdateList>d__13))]
	private IEnumerator UpdateList()
	{
		return null;
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xC9F520", Offset = "0xC9F520", VA = "0xC9F520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xC9F224", Offset = "0xC9F224", VA = "0xC9F224")]
	[IteratorStateMachine(typeof(<RankTime>d__15))]
	private IEnumerator RankTime()
	{
		return null;
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xC9F11C", Offset = "0xC9F11C", VA = "0xC9F11C")]
	public void SetWinRankList(int index)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xC9F1A0", Offset = "0xC9F1A0", VA = "0xC9F1A0")]
	public void SetCalrioiesRankList(int index)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xC9F54C", Offset = "0xC9F54C", VA = "0xC9F54C")]
	public void SetRankList(FistRank FR, int SelectIndex)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xC9FD94", Offset = "0xC9FD94", VA = "0xC9FD94")]
	public PlayerRankGUI()
	{
	}
}
[Serializable]
[Token(Token = "0x2000227")]
public class FistRank
{
	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RankInfo m_List;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_Content;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xC9F47C", Offset = "0xC9F47C", VA = "0xC9F47C")]
	public FistRank()
	{
	}
}
[Token(Token = "0x2000228")]
public class RankMode : ButtonSelectGUI
{
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xCA0484", Offset = "0xCA0484", VA = "0xCA0484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xCA0494", Offset = "0xCA0494", VA = "0xCA0494")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xCA0498", Offset = "0xCA0498", VA = "0xCA0498", Slot = "4")]
	public override void OnSelect(int index)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xCA049C", Offset = "0xCA049C", VA = "0xCA049C")]
	public RankMode()
	{
	}
}
[Token(Token = "0x2000229")]
public class UILook : MonoBehaviour
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Person;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xCA04A4", Offset = "0xCA04A4", VA = "0xCA04A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xCA04A8", Offset = "0xCA04A8", VA = "0xCA04A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xCA0530", Offset = "0xCA0530", VA = "0xCA0530")]
	public UILook()
	{
	}
}
[Token(Token = "0x200022A")]
public class ButtonSelect : MonoBehaviour
{
	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xCA0538", Offset = "0xCA0538", VA = "0xCA0538")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xCA053C", Offset = "0xCA053C", VA = "0xCA053C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xCA0540", Offset = "0xCA0540", VA = "0xCA0540")]
	public ButtonSelect()
	{
	}
}
[Token(Token = "0x200022B")]
public class GameInputSnap
{
	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool leftKeyDown;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool rightKeyDown;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool jumpKeyDown;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool actionKeyDown;

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xCA0548", Offset = "0xCA0548", VA = "0xCA0548")]
	public void SyncKey(IGameInput inputModule)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xCA0724", Offset = "0xCA0724", VA = "0xCA0724")]
	public GameInputSnap()
	{
	}
}
[Token(Token = "0x200022C")]
public interface IGameInput
{
	[Token(Token = "0x6000F02")]
	void Init();

	[Token(Token = "0x6000F03")]
	void Update();

	[Token(Token = "0x6000F04")]
	void OnDestroy();

	[Token(Token = "0x6000F05")]
	bool LeftDown();

	[Token(Token = "0x6000F06")]
	bool RightDown();

	[Token(Token = "0x6000F07")]
	bool JumpDown();

	[Token(Token = "0x6000F08")]
	bool ActionDown();
}
[Token(Token = "0x200022D")]
public class KeyboardInput : MonoBehaviour, IGameInput
{
	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xCA072C", Offset = "0xCA072C", VA = "0xCA072C", Slot = "10")]
	public bool ActionDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xCA0738", Offset = "0xCA0738", VA = "0xCA0738", Slot = "4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xCA073C", Offset = "0xCA073C", VA = "0xCA073C", Slot = "9")]
	public bool JumpDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xCA0748", Offset = "0xCA0748", VA = "0xCA0748", Slot = "7")]
	public bool LeftDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xCA0754", Offset = "0xCA0754", VA = "0xCA0754", Slot = "6")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xCA0758", Offset = "0xCA0758", VA = "0xCA0758", Slot = "8")]
	public bool RightDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xCA0764", Offset = "0xCA0764", VA = "0xCA0764", Slot = "5")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xCA0768", Offset = "0xCA0768", VA = "0xCA0768")]
	public KeyboardInput()
	{
	}
}
[Token(Token = "0x200022E")]
public enum KeyState
{
	[Token(Token = "0x4000C36")]
	Pressed,
	[Token(Token = "0x4000C37")]
	Down,
	[Token(Token = "0x4000C38")]
	Up
}
[Token(Token = "0x200022F")]
public enum FBKeyCode
{
	[Token(Token = "0x4000C3A")]
	Left,
	[Token(Token = "0x4000C3B")]
	Right,
	[Token(Token = "0x4000C3C")]
	Jump,
	[Token(Token = "0x4000C3D")]
	Action
}
[Token(Token = "0x2000230")]
public class PlayerInput : MonoBehaviour
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> inputModules;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<IGameInput> gameInputModules;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameInputSnap> lastInputs;

	[Token(Token = "0x17000282")]
	public static PlayerInput Instance
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xCA0770", Offset = "0xCA0770", VA = "0xCA0770")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xCA07B8", Offset = "0xCA07B8", VA = "0xCA07B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<KeyState> OnLeftKey
	{
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xCA0810", Offset = "0xCA0810", VA = "0xCA0810")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xCA08C0", Offset = "0xCA08C0", VA = "0xCA08C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<KeyState> OnRightKey
	{
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xCA0970", Offset = "0xCA0970", VA = "0xCA0970")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xCA0A20", Offset = "0xCA0A20", VA = "0xCA0A20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<KeyState> OnActionKey
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xCA0AD0", Offset = "0xCA0AD0", VA = "0xCA0AD0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCA0B80", Offset = "0xCA0B80", VA = "0xCA0B80")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<KeyState> OnJumpKey
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xCA0C30", Offset = "0xCA0C30", VA = "0xCA0C30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xCA0CE0", Offset = "0xCA0CE0", VA = "0xCA0CE0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xCA0D90", Offset = "0xCA0D90", VA = "0xCA0D90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xCA1118", Offset = "0xCA1118", VA = "0xCA1118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xCA19DC", Offset = "0xCA19DC", VA = "0xCA19DC")]
	public PlayerInput()
	{
	}
}
[Token(Token = "0x2000231")]
public class TouchInput : MonoBehaviour, IGameInput
{
	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject buttonLeftGo;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonRightGo;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject buttonJumpGo;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject buttonActionGo;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject offenseBtnGroup;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject defenseBtnGroup;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject normalBtnGroup;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool leftKeyDown;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool rightKeyDown;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool jumpKeyDown;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool actionKeyDown;

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xCA1B04", Offset = "0xCA1B04", VA = "0xCA1B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xCA1EC0", Offset = "0xCA1EC0", VA = "0xCA1EC0")]
	private void OnButtonPress(GameObject go, bool press)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xCA1FD8", Offset = "0xCA1FD8", VA = "0xCA1FD8")]
	public void SetControlButtonState(int type)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xCA20C0", Offset = "0xCA20C0", VA = "0xCA20C0")]
	private void UpdateBtnReferences(GameObject btnGroup)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xCA218C", Offset = "0xCA218C", VA = "0xCA218C", Slot = "10")]
	public bool ActionDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xCA2194", Offset = "0xCA2194", VA = "0xCA2194", Slot = "4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xCA2198", Offset = "0xCA2198", VA = "0xCA2198", Slot = "9")]
	public bool JumpDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xCA21A0", Offset = "0xCA21A0", VA = "0xCA21A0", Slot = "7")]
	public bool LeftDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xCA21A8", Offset = "0xCA21A8", VA = "0xCA21A8", Slot = "6")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xCA21AC", Offset = "0xCA21AC", VA = "0xCA21AC", Slot = "8")]
	public bool RightDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xCA21B4", Offset = "0xCA21B4", VA = "0xCA21B4", Slot = "5")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xCA21B8", Offset = "0xCA21B8", VA = "0xCA21B8")]
	public TouchInput()
	{
	}
}
[Token(Token = "0x2000232")]
[DefaultExecutionOrder(-300)]
public class XRInput : MonoBehaviour
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRInput Ins;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionAsset inputActionAsset;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static XRGamePadMap leftController;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static XRGamePadMap rightController;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static XRHMDMap head;

	[Token(Token = "0x17000283")]
	public static XRGamePadMap LeftController
	{
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xCA21C0", Offset = "0xCA21C0", VA = "0xCA21C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000284")]
	public static XRGamePadMap RightController
	{
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xCA2208", Offset = "0xCA2208", VA = "0xCA2208")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000285")]
	public static XRHMDMap Head
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xCA2250", Offset = "0xCA2250", VA = "0xCA2250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000286")]
	public static Vector2 LeftStick
	{
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xCA2298", Offset = "0xCA2298", VA = "0xCA2298")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000287")]
	public static bool LeftStickTouch
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xCA2340", Offset = "0xCA2340", VA = "0xCA2340")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000288")]
	public static bool LeftStickClick
	{
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xCA23E8", Offset = "0xCA23E8", VA = "0xCA23E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000289")]
	public static float LeftTriggerVol
	{
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xCA2490", Offset = "0xCA2490", VA = "0xCA2490")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700028A")]
	public static bool LeftTriggerDown
	{
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xCA2538", Offset = "0xCA2538", VA = "0xCA2538")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028B")]
	public static bool LeftTrigger
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xCA25EC", Offset = "0xCA25EC", VA = "0xCA25EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028C")]
	public static bool LeftTriggerTouch
	{
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xCA2694", Offset = "0xCA2694", VA = "0xCA2694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028D")]
	public static float LeftGripVol
	{
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xCA273C", Offset = "0xCA273C", VA = "0xCA273C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700028E")]
	public static bool LeftGripDown
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xCA27E4", Offset = "0xCA27E4", VA = "0xCA27E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028F")]
	public static bool LeftGrip
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xCA2898", Offset = "0xCA2898", VA = "0xCA2898")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000290")]
	public static bool LeftPrimaryButton
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xCA2940", Offset = "0xCA2940", VA = "0xCA2940")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000291")]
	public static bool LeftPrimaryButtonDown
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xCA29E8", Offset = "0xCA29E8", VA = "0xCA29E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000292")]
	public static bool LeftSecondaryButton
	{
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xCA2A9C", Offset = "0xCA2A9C", VA = "0xCA2A9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000293")]
	public static bool LeftSecondaryButtonDown
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xCA2B44", Offset = "0xCA2B44", VA = "0xCA2B44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000294")]
	public static bool LeftPrimaryButtonTouch
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xCA2BF8", Offset = "0xCA2BF8", VA = "0xCA2BF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000295")]
	public static bool LeftSecondaryButtonTouch
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xCA2CA0", Offset = "0xCA2CA0", VA = "0xCA2CA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000296")]
	public static Vector3 LeftControllerPosition
	{
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xCA2D48", Offset = "0xCA2D48", VA = "0xCA2D48")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000297")]
	public static Quaternion LeftControllerRotation
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCA2DF0", Offset = "0xCA2DF0", VA = "0xCA2DF0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000298")]
	public static bool LeftAppButtonDown
	{
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xCA2E98", Offset = "0xCA2E98", VA = "0xCA2E98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000299")]
	public static Vector2 RightStick
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCA2F4C", Offset = "0xCA2F4C", VA = "0xCA2F4C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700029A")]
	public static bool RightStickTouch
	{
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xCA2F9C", Offset = "0xCA2F9C", VA = "0xCA2F9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029B")]
	public static bool RightStickClick
	{
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xCA2FEC", Offset = "0xCA2FEC", VA = "0xCA2FEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029C")]
	public static float RightTriggerVol
	{
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xCA303C", Offset = "0xCA303C", VA = "0xCA303C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700029D")]
	public static bool RightTriggerDown
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xCA308C", Offset = "0xCA308C", VA = "0xCA308C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029E")]
	public static bool RightTrigger
	{
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xCA30DC", Offset = "0xCA30DC", VA = "0xCA30DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029F")]
	public static bool RightTriggerTouch
	{
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xCA312C", Offset = "0xCA312C", VA = "0xCA312C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A0")]
	public static float RightGripVol
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xCA317C", Offset = "0xCA317C", VA = "0xCA317C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002A1")]
	public static bool RightGripDown
	{
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xCA31CC", Offset = "0xCA31CC", VA = "0xCA31CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A2")]
	public static bool RightGrip
	{
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xCA321C", Offset = "0xCA321C", VA = "0xCA321C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A3")]
	public static bool RightPrimaryButton
	{
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xCA326C", Offset = "0xCA326C", VA = "0xCA326C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A4")]
	public static bool RightPrimaryButtonDown
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xCA32BC", Offset = "0xCA32BC", VA = "0xCA32BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A5")]
	public static bool RightSecondaryButton
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xCA330C", Offset = "0xCA330C", VA = "0xCA330C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A6")]
	public static bool RightSecondaryButtonDown
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xCA335C", Offset = "0xCA335C", VA = "0xCA335C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A7")]
	public static bool RightPrimaryButtonTouch
	{
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xCA33AC", Offset = "0xCA33AC", VA = "0xCA33AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A8")]
	public static bool RightSecondaryButtonTouch
	{
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xCA33FC", Offset = "0xCA33FC", VA = "0xCA33FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A9")]
	public static Vector3 RightControllerPosition
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xCA344C", Offset = "0xCA344C", VA = "0xCA344C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170002AA")]
	public static Quaternion RightControllerRotation
	{
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xCA349C", Offset = "0xCA349C", VA = "0xCA349C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170002AB")]
	public static bool RightHomeButtonDown
	{
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xCA34EC", Offset = "0xCA34EC", VA = "0xCA34EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xCA353C", Offset = "0xCA353C", VA = "0xCA353C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xCA359C", Offset = "0xCA359C", VA = "0xCA359C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xCA37D4", Offset = "0xCA37D4", VA = "0xCA37D4")]
	public XRInput()
	{
	}
}
[Token(Token = "0x2000233")]
public class XRGamePadMap
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InputActionMap gamePadMap;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRNode currControllerNode;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float PressThreshold;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected InputAction TriggerAction;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected InputAction GripAction;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected InputAction PrimaryButtonAction;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected InputAction SecondaryButtonAction;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected InputAction StickAction;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected InputAction StickClickAction;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected InputAction StickTouchAction;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected InputAction TriggerTouchAction;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected InputAction PrimaryButtonTouchAction;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected InputAction SecondaryButtonTouchAction;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected InputAction TriggerPressed;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected InputAction gripPressed;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected InputAction appButton;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected InputAction position;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected InputAction rotation;

	[Token(Token = "0x170002AC")]
	public UnityEngine.XR.InputDevice inputDevice
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xCA37DC", Offset = "0xCA37DC", VA = "0xCA37DC")]
		get
		{
			return default(UnityEngine.XR.InputDevice);
		}
	}

	[Token(Token = "0x170002AD")]
	public bool Enable
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xCA3814", Offset = "0xCA3814", VA = "0xCA3814")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xCA37E8", Offset = "0xCA37E8", VA = "0xCA37E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002AE")]
	public Vector2 Stick
	{
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xCA22E8", Offset = "0xCA22E8", VA = "0xCA22E8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170002AF")]
	public bool StickTouch
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xCA2390", Offset = "0xCA2390", VA = "0xCA2390")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B0")]
	public bool StickClick
	{
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xCA2438", Offset = "0xCA2438", VA = "0xCA2438")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B1")]
	public float TriggerVol
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xCA24E0", Offset = "0xCA24E0", VA = "0xCA24E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002B2")]
	public bool TriggerDown
	{
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xCA2588", Offset = "0xCA2588", VA = "0xCA2588")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B3")]
	public bool Trigger
	{
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xCA263C", Offset = "0xCA263C", VA = "0xCA263C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B4")]
	public bool TriggerTouch
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xCA26E4", Offset = "0xCA26E4", VA = "0xCA26E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B5")]
	public float GripVol
	{
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xCA278C", Offset = "0xCA278C", VA = "0xCA278C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002B6")]
	public bool GripDown
	{
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xCA2834", Offset = "0xCA2834", VA = "0xCA2834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B7")]
	public bool Grip
	{
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xCA28E8", Offset = "0xCA28E8", VA = "0xCA28E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B8")]
	public bool PrimaryButton
	{
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xCA2990", Offset = "0xCA2990", VA = "0xCA2990")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B9")]
	public bool PrimaryButtonDown
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xCA2A38", Offset = "0xCA2A38", VA = "0xCA2A38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BA")]
	public bool SecondaryButton
	{
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xCA2AEC", Offset = "0xCA2AEC", VA = "0xCA2AEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BB")]
	public bool SecondaryButtonDown
	{
		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xCA2B94", Offset = "0xCA2B94", VA = "0xCA2B94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BC")]
	public bool PrimaryButtonTouch
	{
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xCA2C48", Offset = "0xCA2C48", VA = "0xCA2C48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BD")]
	public bool SecondaryButtonTouch
	{
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xCA2CF0", Offset = "0xCA2CF0", VA = "0xCA2CF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BE")]
	public bool AppButtonDown
	{
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xCA2EE8", Offset = "0xCA2EE8", VA = "0xCA2EE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BF")]
	public Vector3 Position
	{
		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xCA2D98", Offset = "0xCA2D98", VA = "0xCA2D98")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170002C0")]
	public Quaternion Rotation
	{
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xCA2E40", Offset = "0xCA2E40", VA = "0xCA2E40")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xCA3A1C", Offset = "0xCA3A1C", VA = "0xCA3A1C")]
	public bool SendHapticImpulse(float amplitude, float duration)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xCA3ABC", Offset = "0xCA3ABC", VA = "0xCA3ABC")]
	public void SendHapticStop()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xCA3830", Offset = "0xCA3830", VA = "0xCA3830")]
	private static Vector2 GetAxis2D(InputAction action)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xCA397C", Offset = "0xCA397C", VA = "0xCA397C")]
	private static Vector3 GetAxis3D(InputAction action)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xCA39CC", Offset = "0xCA39CC", VA = "0xCA39CC")]
	private static Quaternion GetAxis4D(InputAction action)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xCA3880", Offset = "0xCA3880", VA = "0xCA3880")]
	private static bool GetButton(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xCA3968", Offset = "0xCA3968", VA = "0xCA3968")]
	private static bool GetButtonDown(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xCA3918", Offset = "0xCA3918", VA = "0xCA3918")]
	private static float GetFloat(InputAction action)
	{
		return default(float);
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xCA3748", Offset = "0xCA3748", VA = "0xCA3748")]
	public XRGamePadMap(InputActionMap map, bool leftController)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xCA3B2C", Offset = "0xCA3B2C", VA = "0xCA3B2C")]
	private void Init()
	{
	}
}
[Token(Token = "0x2000234")]
public class XRHMDMap
{
	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InputActionMap gamePadMap;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected InputAction position;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected InputAction rotation;

	[Token(Token = "0x170002C1")]
	public bool Enable
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCA3F6C", Offset = "0xCA3F6C", VA = "0xCA3F6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xCA3F40", Offset = "0xCA3F40", VA = "0xCA3F40")]
		set
		{
		}
	}

	[Token(Token = "0x170002C2")]
	public Vector3 Position
	{
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xCA3F88", Offset = "0xCA3F88", VA = "0xCA3F88")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170002C3")]
	public Quaternion Rotation
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xCA3FE0", Offset = "0xCA3FE0", VA = "0xCA3FE0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xCA3F90", Offset = "0xCA3F90", VA = "0xCA3F90")]
	private static Vector3 GetAxis3D(InputAction action)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xCA3FE8", Offset = "0xCA3FE8", VA = "0xCA3FE8")]
	private static Quaternion GetAxis4D(InputAction action)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xCA379C", Offset = "0xCA379C", VA = "0xCA379C")]
	public XRHMDMap(InputActionMap map)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xCA4038", Offset = "0xCA4038", VA = "0xCA4038")]
	private void Init()
	{
	}
}
[Token(Token = "0x2000235")]
public class HandInputAnima : MonoBehaviour
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int Idle;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public readonly int Point;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int GrabLarge;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public readonly int GrabSmall;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int GrabStickUp;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public readonly int GrabStickFront;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public readonly int ThumbUp;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public readonly int Fist;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly int Gun;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public readonly int GunShoot;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly int PushButton;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public readonly int Spread;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly int MiddleFinger;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public readonly int Peace;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public readonly int OK;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public readonly int Phone;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly int Rock;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public readonly int Natural;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public readonly int Number3;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public readonly int Number4;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool leftHand;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool lastButton;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int lastTrigger;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private XRGamePadMap controller;

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xCA40F4", Offset = "0xCA40F4", VA = "0xCA40F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xCA4204", Offset = "0xCA4204", VA = "0xCA4204")]
	public void SetState(int state)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xCA4250", Offset = "0xCA4250", VA = "0xCA4250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xCA42C0", Offset = "0xCA42C0", VA = "0xCA42C0")]
	public void OnGrip(bool press)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xCA42D8", Offset = "0xCA42D8", VA = "0xCA42D8")]
	public HandInputAnima()
	{
	}
}
[Token(Token = "0x2000236")]
public struct MoveDelta
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 delta;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float deltaTime;

	[Token(Token = "0x170002C4")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xCA45FC", Offset = "0xCA45FC", VA = "0xCA45FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170002C5")]
	public float Speed
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xCA4614", Offset = "0xCA4614", VA = "0xCA4614")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xCA469C", Offset = "0xCA469C", VA = "0xCA469C")]
	public MoveDelta(Vector3 delta, float dt)
	{
	}
}
[Token(Token = "0x2000237")]
public class MoveTool : MonoBehaviour
{
	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool worldSpace;

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xCA46A8", Offset = "0xCA46A8", VA = "0xCA46A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xCA4714", Offset = "0xCA4714", VA = "0xCA4714")]
	public MoveTool()
	{
	}
}
[Token(Token = "0x2000238")]
public class TCP : MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TCPServer server;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TCPClient client;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel serverReceive;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel clientReceive;

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xCA471C", Offset = "0xCA471C", VA = "0xCA471C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xCA4814", Offset = "0xCA4814", VA = "0xCA4814")]
	private void OnReceive(string s)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xCA4930", Offset = "0xCA4930", VA = "0xCA4930")]
	public TCP()
	{
	}
}
[Token(Token = "0x200023A")]
public class TCPClient : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	[CompilerGenerated]
	private sealed class <FindHostIp>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TCPClient <>4__this;

		[Token(Token = "0x170002C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xCA4FBC", Offset = "0xCA4FBC", VA = "0xCA4FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xCA5004", Offset = "0xCA5004", VA = "0xCA5004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCA4ABC", Offset = "0xCA4ABC", VA = "0xCA4ABC")]
		[DebuggerHidden]
		public <FindHostIp>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCA4D58", Offset = "0xCA4D58", VA = "0xCA4D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCA4D5C", Offset = "0xCA4D5C", VA = "0xCA4D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCA4FC4", Offset = "0xCA4FC4", VA = "0xCA4FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string serverIP;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int serverPort;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xCA4978", Offset = "0xCA4978", VA = "0xCA4978")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xCA497C", Offset = "0xCA497C", VA = "0xCA497C")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xCA4A48", Offset = "0xCA4A48", VA = "0xCA4A48")]
	[IteratorStateMachine(typeof(<FindHostIp>d__4))]
	public IEnumerator FindHostIp()
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xCA4AE4", Offset = "0xCA4AE4", VA = "0xCA4AE4")]
	public void Send123()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xCA4B8C", Offset = "0xCA4B8C", VA = "0xCA4B8C")]
	public void Send456()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xCA4C34", Offset = "0xCA4C34", VA = "0xCA4C34")]
	public void HandleAction(ReceiveMsg msg)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xCA4D50", Offset = "0xCA4D50", VA = "0xCA4D50")]
	public TCPClient()
	{
	}
}
[Token(Token = "0x200023D")]
public class TCPServer : MonoBehaviour
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int listenPort;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<string> OnReceive;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shutdown;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Socket socketServer;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<Socket> listPlayer;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<Thread> listThread;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Socket sTemp;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Thread threadListenAccept;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnitySocket s;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xCA509C", Offset = "0xCA509C", VA = "0xCA509C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xCA5380", Offset = "0xCA5380", VA = "0xCA5380")]
	public void OnStartServer()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xCA50A0", Offset = "0xCA50A0", VA = "0xCA50A0")]
	public void init()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xCA5384", Offset = "0xCA5384", VA = "0xCA5384")]
	private void ListenAccept()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xCA569C", Offset = "0xCA569C", VA = "0xCA569C")]
	private void ReceiveMessage()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xCA5948", Offset = "0xCA5948", VA = "0xCA5948")]
	private void DealServer(ReceiveMsg msg)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xCA5BB0", Offset = "0xCA5BB0", VA = "0xCA5BB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xCA66D4", Offset = "0xCA66D4", VA = "0xCA66D4")]
	public TCPServer()
	{
	}
}
[Token(Token = "0x200023F")]
public class UDP : MonoBehaviour
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UDPServer server;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UDPClient client;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel serverReceive;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel clientReceive;

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xCA685C", Offset = "0xCA685C", VA = "0xCA685C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xCA68EC", Offset = "0xCA68EC", VA = "0xCA68EC")]
	public void OnReceive(string s)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xCA6A70", Offset = "0xCA6A70", VA = "0xCA6A70")]
	public void OnReceiveClient(string s)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xCA6BF4", Offset = "0xCA6BF4", VA = "0xCA6BF4")]
	public UDP()
	{
	}
}
[Token(Token = "0x2000242")]
public class UDPClient : MonoBehaviour
{
	[Token(Token = "0x2000243")]
	[CompilerGenerated]
	private sealed class <FindHostIp>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0xCA72FC", Offset = "0xCA72FC", VA = "0xCA72FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xCA7344", Offset = "0xCA7344", VA = "0xCA7344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xCA6F00", Offset = "0xCA6F00", VA = "0xCA6F00")]
		[DebuggerHidden]
		public <FindHostIp>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCA725C", Offset = "0xCA725C", VA = "0xCA725C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCA7260", Offset = "0xCA7260", VA = "0xCA7260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCA7304", Offset = "0xCA7304", VA = "0xCA7304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int listenPort;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int serverPort;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int clientId;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UdpUtil udpUtil;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncUdpSever server;

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xCA6C7C", Offset = "0xCA6C7C", VA = "0xCA6C7C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xCA6DC8", Offset = "0xCA6DC8", VA = "0xCA6DC8")]
	public void BroadCast()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xCA6EA0", Offset = "0xCA6EA0", VA = "0xCA6EA0")]
	[IteratorStateMachine(typeof(<FindHostIp>d__7))]
	public IEnumerator FindHostIp()
	{
		return null;
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xCA6F28", Offset = "0xCA6F28", VA = "0xCA6F28")]
	public void HandleAction(ReceiveMsg msg, IPEndPoint iep)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xCA7060", Offset = "0xCA7060", VA = "0xCA7060")]
	public void Send123()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xCA7150", Offset = "0xCA7150", VA = "0xCA7150")]
	public void Send456()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xCA7240", Offset = "0xCA7240", VA = "0xCA7240")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xCA7254", Offset = "0xCA7254", VA = "0xCA7254")]
	public UDPClient()
	{
	}
}
[Token(Token = "0x2000245")]
public class UDPServer : UDPClient
{
	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xCA7618", Offset = "0xCA7618", VA = "0xCA7618")]
	public UDPServer()
	{
	}
}
[Token(Token = "0x2000246")]
public class GameTool : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	private class FuckingAudio
	{
		[Token(Token = "0x2000248")]
		[CompilerGenerated]
		private sealed class <LoadAudioResOutside>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FuckingAudio <>4__this;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string fileName;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFC")]
				[Address(RVA = "0xCAA52C", Offset = "0xCAA52C", VA = "0xCAA52C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFE")]
				[Address(RVA = "0xCAA574", Offset = "0xCAA574", VA = "0xCAA574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xCAA2BC", Offset = "0xCAA2BC", VA = "0xCAA2BC")]
			[DebuggerHidden]
			public <LoadAudioResOutside>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xCAA2E4", Offset = "0xCAA2E4", VA = "0xCAA2E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xCAA2E8", Offset = "0xCAA2E8", VA = "0xCAA2E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xCAA534", Offset = "0xCAA534", VA = "0xCAA534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WWW www;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip audioClip;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<AudioClip> howToPlay;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public object locker;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xCA98BC", Offset = "0xCA98BC", VA = "0xCA98BC")]
		[IteratorStateMachine(typeof(<LoadAudioResOutside>d__4))]
		public IEnumerator LoadAudioResOutside(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xCA9848", Offset = "0xCA9848", VA = "0xCA9848")]
		public FuckingAudio()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <HttpRequest>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<string> error;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> action;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xCAA9FC", Offset = "0xCAA9FC", VA = "0xCAA9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xCAAA44", Offset = "0xCAAA44", VA = "0xCAAA44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xCAA0D4", Offset = "0xCAA0D4", VA = "0xCAA0D4")]
		[DebuggerHidden]
		public <HttpRequest>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xCAA57C", Offset = "0xCAA57C", VA = "0xCAA57C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xCAA598", Offset = "0xCAA598", VA = "0xCAA598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xCAA94C", Offset = "0xCAA94C", VA = "0xCAA94C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xCAAA04", Offset = "0xCAAA04", VA = "0xCAAA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, GameObject> cachingGameObejct;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DateTime lastGestureTime;

	[Token(Token = "0x170002CA")]
	private static bool gestureEnabled
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xCA9CF4", Offset = "0xCA9CF4", VA = "0xCA9CF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xCA7620", Offset = "0xCA7620", VA = "0xCA7620")]
	public static void ResetVRSensorOrigin()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xCA7688", Offset = "0xCA7688", VA = "0xCA7688")]
	public static void DisableMonoScriptByTag(string tagName)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xCA7770", Offset = "0xCA7770", VA = "0xCA7770")]
	public static void EnableMonoScriptByTag(string tagName)
	{
	}

	[Token(Token = "0x6000FC4")]
	public static T xran<T>(List<T> list, List<int> p)
	{
		return (T)null;
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xCA7858", Offset = "0xCA7858", VA = "0xCA7858")]
	public static void TestQuit()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xCA7880", Offset = "0xCA7880", VA = "0xCA7880")]
	public static Vector3 ClickPos2UIPos(Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xCA7940", Offset = "0xCA7940", VA = "0xCA7940")]
	public static Vector3 FxWorldPos(Vector3 pos, Camera cam3d, Camera camfx, int z = 40)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xCA797C", Offset = "0xCA797C", VA = "0xCA797C")]
	public static Vector3 WorldTransScreen(Vector3 vWorld, Camera cam3d, Camera cam2d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xCA79B0", Offset = "0xCA79B0", VA = "0xCA79B0")]
	public static Vector3 ScreenTransWorld(Vector3 vScreen, Camera cam3d, Camera cam2d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xCA79E0", Offset = "0xCA79E0", VA = "0xCA79E0")]
	public static void ReplaceGameObject(ref GameObject oldGo, ref GameObject newGo)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xCA7AD0", Offset = "0xCA7AD0", VA = "0xCA7AD0")]
	public static void TransformLU2C(ref float pX, ref float pY, float pWidth, float pHeight)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xCA7AF8", Offset = "0xCA7AF8", VA = "0xCA7AF8")]
	public static void TransformLB2C(ref float pX, ref float pY, float pWidth, float pHeight)
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xCA7B20", Offset = "0xCA7B20", VA = "0xCA7B20")]
	public static void TransformC2LU(ref float pX, ref float pY, float pWidth, float pHeight)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xCA7B48", Offset = "0xCA7B48", VA = "0xCA7B48")]
	public static void LoadPrefabAsGameObject(ref GameObject myGameObject, Vector3 v3Position, string prefabName, Transform trParant)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xCA4F38", Offset = "0xCA4F38", VA = "0xCA4F38")]
	public static GameObject LoadPrefabByPath(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xCA7CC0", Offset = "0xCA7CC0", VA = "0xCA7CC0")]
	public static Texture LoadTexture(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xCA7DCC", Offset = "0xCA7DCC", VA = "0xCA7DCC")]
	public static Texture2D LoadTextture2D(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xCA7E50", Offset = "0xCA7E50", VA = "0xCA7E50")]
	public static Texture2D LoadTextture2DCached(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xCA7E80", Offset = "0xCA7E80", VA = "0xCA7E80")]
	public static AudioClip LoadAudio(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xCA7EB0", Offset = "0xCA7EB0", VA = "0xCA7EB0")]
	public static AudioClip LoadAudioInRes(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xCA7CB8", Offset = "0xCA7CB8", VA = "0xCA7CB8")]
	public static UnityEngine.Object Load(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xCA7DC4", Offset = "0xCA7DC4", VA = "0xCA7DC4")]
	public static UnityEngine.Object Load(string path, Type t)
	{
		return null;
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xCA7F68", Offset = "0xCA7F68", VA = "0xCA7F68")]
	public static GameObject LoadResCaching(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xCA808C", Offset = "0xCA808C", VA = "0xCA808C")]
	public static TextMesh GetTextMesh(ref GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xCA810C", Offset = "0xCA810C", VA = "0xCA810C")]
	public static bool ExistenceSprite(UISprite sprite, string spriteName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xCA836C", Offset = "0xCA836C", VA = "0xCA836C")]
	public static void DeleteGridChild(GameObject grid)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xCA84E8", Offset = "0xCA84E8", VA = "0xCA84E8")]
	public static void DeleteTableChild(GameObject table)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xCA87C4", Offset = "0xCA87C4", VA = "0xCA87C4")]
	public static void DeletChild(Transform t)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xCA88D0", Offset = "0xCA88D0", VA = "0xCA88D0")]
	public static string Md5(string str)
	{
		return null;
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xCA8A10", Offset = "0xCA8A10", VA = "0xCA8A10")]
	public static void DeleteChildFromParent(GameObject parent)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xCA8D40", Offset = "0xCA8D40", VA = "0xCA8D40")]
	public static long TimeStamp()
	{
		return default(long);
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xCA03BC", Offset = "0xCA03BC", VA = "0xCA03BC")]
	public static DateTime getTime(long _time)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xCA8DEC", Offset = "0xCA8DEC", VA = "0xCA8DEC")]
	public static void ChangeButtonSelectState(List<UIButton> buttonList, int index)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xCA8F4C", Offset = "0xCA8F4C", VA = "0xCA8F4C")]
	public static void SetCarmera(Camera camera, float coefficient = 1f, float w = 960f, float h = 540f)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xCA90A4", Offset = "0xCA90A4", VA = "0xCA90A4")]
	public static void SetCarmeraMoved(Camera camera, float moveX, float moveY, float coefficient = 1f, float w = 960f, float h = 540f)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xCA92D8", Offset = "0xCA92D8", VA = "0xCA92D8")]
	public static void SetCarmeraRelative(Camera camera, float coefficient = 1f, float w = 960f, float h = 540f)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xCA9444", Offset = "0xCA9444", VA = "0xCA9444")]
	public static void SetCarmeraAutoFitAndCrop(Camera camera, GameObject relatedGo, float coefficient = 1f, float w = 960f, float h = 720f)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xCA9574", Offset = "0xCA9574", VA = "0xCA9574")]
	public static string GetXmlNameByPath(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xCA95D8", Offset = "0xCA95D8", VA = "0xCA95D8")]
	public static void LoadAudio(string path, Action<AudioClip> howToPlay)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xCA9618", Offset = "0xCA9618", VA = "0xCA9618")]
	public static void LoadAudioInRes(string path, Action<AudioClip> howToPlay)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xCA96CC", Offset = "0xCA96CC", VA = "0xCA96CC")]
	public static void LoadAudioTryOutRes(string fileName, Action<AudioClip> howToPlay)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xCA994C", Offset = "0xCA994C", VA = "0xCA994C")]
	public static void PlayBGM(string soundUri)
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xCA99F0", Offset = "0xCA99F0", VA = "0xCA99F0")]
	public static void PlayBGM(AudioClip ac)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xCA9A80", Offset = "0xCA9A80", VA = "0xCA9A80")]
	public static void PlaySoundEffect(string soundUri)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xCA9B24", Offset = "0xCA9B24", VA = "0xCA9B24")]
	public static void PlaySoundEffect(AudioClip ac)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xCA9B7C", Offset = "0xCA9B7C", VA = "0xCA9B7C")]
	public static Material LoadMaterial(string path)
	{
		return null;
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xCA9C80", Offset = "0xCA9C80", VA = "0xCA9C80")]
	public static bool IsTutorialEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xCA9DFC", Offset = "0xCA9DFC", VA = "0xCA9DFC")]
	public static void SendGestures(GameObject cameraCenter, Vector3 pos, string text, bool isLeft, MonoBehaviour mb)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xCA9EF4", Offset = "0xCA9EF4", VA = "0xCA9EF4")]
	public static string M(string m1)
	{
		return null;
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xCAA030", Offset = "0xCAA030", VA = "0xCAA030")]
	[IteratorStateMachine(typeof(<HttpRequest>d__54))]
	public static IEnumerator HttpRequest(string url, Action<string> action, Action<string> error)
	{
		return null;
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xCAA0FC", Offset = "0xCAA0FC", VA = "0xCAA0FC")]
	public static long GetStrNumber(string str)
	{
		return default(long);
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xCAA21C", Offset = "0xCAA21C", VA = "0xCAA21C")]
	public GameTool()
	{
	}
}
[Token(Token = "0x200024A")]
[AppearEffect(AppearType.NONE)]
public class FinishLoading : EasyBaseView<LandLoadingController>
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startTime;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool loadingFinished;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedUp;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startProgress;

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xCAAA4C", Offset = "0xCAAA4C", VA = "0xCAAA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xCAAB40", Offset = "0xCAAB40", VA = "0xCAAB40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xCAAD54", Offset = "0xCAAD54", VA = "0xCAAD54")]
	public FinishLoading()
	{
	}
}
[Token(Token = "0x200024B")]
[NoStaticTop]
[PrefabAttr("Loading/Prefab_LandLoading")]
public class LandLoadingController : EasyBaseController<LandLoadingView>
{
	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float startProgress;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float subStart;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float subEnd;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public System.Action onComplete;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<LandLoadingView> startLoading;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public IEnumerator asyncLoadingStart;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool autoFinish;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool asyncLoading;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool isVersion;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BaseController nextModule;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public System.Action AfterComplete;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float loadingSpeed;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string LoadingScenceName;

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xCAADA8", Offset = "0xCAADA8", VA = "0xCAADA8", Slot = "6")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xCAAFA4", Offset = "0xCAAFA4", VA = "0xCAAFA4")]
	public LandLoadingController()
	{
	}
}
[Token(Token = "0x200024C")]
[AppearEffect(AppearType.NONE)]
public class LandLoadingView : EasyBaseView<LandLoadingController>
{
	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private sealed class <FinishLoadFile>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LandLoadingView <>4__this;

		[Token(Token = "0x170002D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xCAB770", Offset = "0xCAB770", VA = "0xCAB770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xCAB7B8", Offset = "0xCAB7B8", VA = "0xCAB7B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xCAB328", Offset = "0xCAB328", VA = "0xCAB328")]
		[DebuggerHidden]
		public <FinishLoadFile>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xCAB6B0", Offset = "0xCAB6B0", VA = "0xCAB6B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xCAB6B4", Offset = "0xCAB6B4", VA = "0xCAB6B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xCAB778", Offset = "0xCAB778", VA = "0xCAB778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LoadingPanel loadingPanel;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<LandLoadingView> startLoading;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool autoFinish;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public System.Action onComplete;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float loadingBarValue;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isAutoMoving;

	[Token(Token = "0x170002CF")]
	public float LoadingBarValue
	{
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xCAB000", Offset = "0xCAB000", VA = "0xCAB000")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600100C")]
		[Address(RVA = "0xCAAD20", Offset = "0xCAAD20", VA = "0xCAAD20")]
		set
		{
		}
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xCAB008", Offset = "0xCAB008", VA = "0xCAB008", Slot = "5")]
	public override void InitView()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xCAB26C", Offset = "0xCAB26C", VA = "0xCAB26C")]
	public void StartAutoMove(IEnumerator ie)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xCAB294", Offset = "0xCAB294", VA = "0xCAB294")]
	public void LoadFileFinish()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xCAB2B4", Offset = "0xCAB2B4", VA = "0xCAB2B4")]
	[IteratorStateMachine(typeof(<FinishLoadFile>d__12))]
	private IEnumerator FinishLoadFile()
	{
		return null;
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xCAB350", Offset = "0xCAB350", VA = "0xCAB350", Slot = "9")]
	public virtual void StartLoading()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xCAB438", Offset = "0xCAB438", VA = "0xCAB438", Slot = "10")]
	public virtual void StartLoadingAsync()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xCAB4AC", Offset = "0xCAB4AC", VA = "0xCAB4AC")]
	public void LoadingAsyncFinish()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xCAB660", Offset = "0xCAB660", VA = "0xCAB660")]
	public LandLoadingView()
	{
	}
}
[Token(Token = "0x200024E")]
public class LoadSystemConfig
{
	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <ReadPersistent>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadSystemConfig <>4__this;

		[Token(Token = "0x170002D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0xCABB9C", Offset = "0xCABB9C", VA = "0xCABB9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xCABBE4", Offset = "0xCABBE4", VA = "0xCABBE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xCAB874", Offset = "0xCAB874", VA = "0xCAB874")]
		[DebuggerHidden]
		public <ReadPersistent>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xCAB904", Offset = "0xCAB904", VA = "0xCAB904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xCAB908", Offset = "0xCAB908", VA = "0xCAB908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xCABBA4", Offset = "0xCABBA4", VA = "0xCABBA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LandLoadingView llv;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int totalCount;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool needUpdateResource;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int loaded;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FxsLoader loader;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> localVersion;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xCAB7C0", Offset = "0xCAB7C0", VA = "0xCAB7C0")]
	public void StartLoading(LandLoadingView llv)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xCAB800", Offset = "0xCAB800", VA = "0xCAB800")]
	[IteratorStateMachine(typeof(<ReadPersistent>d__7))]
	private IEnumerator ReadPersistent()
	{
		return null;
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xCAB89C", Offset = "0xCAB89C", VA = "0xCAB89C")]
	public void afterLoading(List<string> list)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xCAB8F4", Offset = "0xCAB8F4", VA = "0xCAB8F4")]
	public LoadSystemConfig()
	{
	}
}
[Token(Token = "0x2000250")]
public class XmlUpdater
{
	[Token(Token = "0x6001025")]
	[Address(RVA = "0xCABBEC", Offset = "0xCABBEC", VA = "0xCABBEC")]
	public XmlUpdater()
	{
	}
}
[Token(Token = "0x2000251")]
public class Lzh_LoopItemData
{
	[Token(Token = "0x6001026")]
	[Address(RVA = "0xCABBF4", Offset = "0xCABBF4", VA = "0xCABBF4")]
	public Lzh_LoopItemData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000252")]
public class Lzh_LoopItemObject
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIWidget widget;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int dataIndex;

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xCABBFC", Offset = "0xCABBFC", VA = "0xCABBFC")]
	public Lzh_LoopItemObject()
	{
	}
}
[Token(Token = "0x2000253")]
public class Lzh_LoopScrollView : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	public enum ArrangeDirection
	{
		[Token(Token = "0x4000CFB")]
		Left_to_Right,
		[Token(Token = "0x4000CFC")]
		Right_to_Left,
		[Token(Token = "0x4000CFD")]
		Up_to_Down,
		[Token(Token = "0x4000CFE")]
		Down_to_Up
	}

	[Token(Token = "0x2000255")]
	public delegate void DelegateHandler(Lzh_LoopItemObject item, Lzh_LoopItemData data);

	[Token(Token = "0x2000256")]
	public delegate bool AddEvent(Lzh_LoopItemObject backItem, Lzh_LoopItemObject newItem, int newIndex, Lzh_LoopItemData newData, Lzh_LoopScrollView loop);

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrangeDirection arrangeDirection;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject itemPrefab;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Lzh_LoopItemObject> itemsList;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Lzh_LoopItemData> datasList;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIScrollView scrollView;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject itemParent;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool bEnableRestrict;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Lzh_LoopItemObject firstItem;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Lzh_LoopItemObject lastItem;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int rows;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int columns;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DelegateHandler OnItemInit;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AddEvent AddBack;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AddEvent AddFront;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<Lzh_LoopItemObject, Lzh_LoopScrollView> InitFirst;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 itemStartPos;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float gapDis;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Queue<Lzh_LoopItemObject> itemLoop;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool needRefresh;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Lzh_LoopItemObject> CacheItems;

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xCABC0C", Offset = "0xCABC0C", VA = "0xCABC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xCABD38", Offset = "0xCABD38", VA = "0xCABD38")]
	private void Update()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xCABD3C", Offset = "0xCABD3C", VA = "0xCABD3C")]
	private void Validate()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xCACF3C", Offset = "0xCACF3C", VA = "0xCACF3C")]
	public void Init(List<Lzh_LoopItemData> datas, DelegateHandler onItemInitCallback)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xCAD008", Offset = "0xCAD008", VA = "0xCAD008")]
	public void ReInit(List<Lzh_LoopItemData> datas, DelegateHandler onItemInitCallback)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xCAD220", Offset = "0xCAD220", VA = "0xCAD220")]
	public void ReTopInit()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xCAD3A0", Offset = "0xCAD3A0", VA = "0xCAD3A0")]
	public void AddpendData(List<Lzh_LoopItemData> datas)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xCAD450", Offset = "0xCAD450", VA = "0xCAD450")]
	private Lzh_LoopItemObject CreateItem()
	{
		return null;
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xCAC64C", Offset = "0xCAC64C", VA = "0xCAC64C")]
	private void InitItem(Lzh_LoopItemObject item, int dataIndex, Lzh_LoopItemData data)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xCAC6D8", Offset = "0xCAC6D8", VA = "0xCAC6D8")]
	private void AddToFront(Lzh_LoopItemObject priorItem, Lzh_LoopItemObject newItem, int newIndex, Lzh_LoopItemData newData)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xCACB74", Offset = "0xCACB74", VA = "0xCACB74")]
	private void AddToBack(Lzh_LoopItemObject backItem, Lzh_LoopItemObject newItem, int newIndex, Lzh_LoopItemData newData)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xCAD52C", Offset = "0xCAD52C", VA = "0xCAD52C")]
	public void DeleteItem(UIWidget widget)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xCADA34", Offset = "0xCADA34", VA = "0xCADA34")]
	public Lzh_LoopItemObject FindCenterItem(Transform t)
	{
		return null;
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xCAC550", Offset = "0xCAC550", VA = "0xCAC550")]
	private Lzh_LoopItemObject GetItemFromLoop()
	{
		return null;
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xCACAF0", Offset = "0xCACAF0", VA = "0xCACAF0")]
	private void PutItemToLoop(Lzh_LoopItemObject item)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xCADD04", Offset = "0xCADD04", VA = "0xCADD04")]
	public Lzh_LoopScrollView()
	{
	}
}
[Token(Token = "0x2000258")]
public class AbsPusher : RemoteContext
{
	[Token(Token = "0x2000259")]
	public class CoroutineStatus
	{
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isDone;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RemoteHandler rh;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<object> args;

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xCAEEE0", Offset = "0xCAEEE0", VA = "0xCAEEE0")]
		public void DoInvoke()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xCAE504", Offset = "0xCAE504", VA = "0xCAE504")]
		public CoroutineStatus()
		{
		}
	}

	[Token(Token = "0x200025A")]
	[CompilerGenerated]
	private sealed class <DoCallback>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RemoteHandler rh;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CoroutineStatus status;

		[Token(Token = "0x170002D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xCAF6E0", Offset = "0xCAF6E0", VA = "0xCAF6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xCAF728", Offset = "0xCAF728", VA = "0xCAF728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xCAE61C", Offset = "0xCAE61C", VA = "0xCAE61C")]
		[DebuggerHidden]
		public <DoCallback>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xCAF610", Offset = "0xCAF610", VA = "0xCAF610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xCAF614", Offset = "0xCAF614", VA = "0xCAF614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xCAF6E8", Offset = "0xCAF6E8", VA = "0xCAF6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[CompilerGenerated]
	private sealed class <DoCallback>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AbsPusher <>4__this;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xCAF83C", Offset = "0xCAF83C", VA = "0xCAF83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xCAF884", Offset = "0xCAF884", VA = "0xCAF884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xCAE644", Offset = "0xCAE644", VA = "0xCAE644")]
		[DebuggerHidden]
		public <DoCallback>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xCAF730", Offset = "0xCAF730", VA = "0xCAF730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xCAF734", Offset = "0xCAF734", VA = "0xCAF734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xCAF844", Offset = "0xCAF844", VA = "0xCAF844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RemoteContext defaultContext;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected RemoteContext ctx;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BlockQueue<CoroutineStatus> queue;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected MonoBehaviour target;

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xCAE1E4", Offset = "0xCAE1E4", VA = "0xCAE1E4")]
	public RemoteContext GetContext()
	{
		return null;
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xCAE248", Offset = "0xCAE248", VA = "0xCAE248")]
	public void SetContext(RemoteContext ctx)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xCAE250", Offset = "0xCAE250", VA = "0xCAE250")]
	protected AbsPusher(MonoBehaviour target)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xCAE384", Offset = "0xCAE384", VA = "0xCAE384")]
	public void InvokeCallback(RemoteHandler rh, List<object> args)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xCAE58C", Offset = "0xCAE58C", VA = "0xCAE58C")]
	[IteratorStateMachine(typeof(<DoCallback>d__9))]
	protected IEnumerator DoCallback(RemoteHandler rh, CoroutineStatus status)
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xCAE310", Offset = "0xCAE310", VA = "0xCAE310")]
	[IteratorStateMachine(typeof(<DoCallback>d__10))]
	protected IEnumerator DoCallback()
	{
		return null;
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xCAE66C", Offset = "0xCAE66C", VA = "0xCAE66C")]
	protected void RegistHandler(string key, Delegate d)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xCAEBBC", Offset = "0xCAEBBC", VA = "0xCAEBBC")]
	public void PushScore(Action<int> action, bool reg)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xCAED64", Offset = "0xCAED64", VA = "0xCAED64")]
	public void Pushtest(Action<string> action, bool reg)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xCAEC2C", Offset = "0xCAEC2C", VA = "0xCAEC2C")]
	protected void UnregistHandler(string action, Delegate d)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xCAEA1C", Offset = "0xCAEA1C", VA = "0xCAEA1C")]
	protected static RemoteHandler find(RemoteHandler h, HashSet<RemoteHandler> set)
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xCAEDD4", Offset = "0xCAEDD4", VA = "0xCAEDD4")]
	protected void UnregistAction(string action)
	{
	}
}
[Token(Token = "0x200025C")]
public class AbsRequest
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HttpInnerSender fullyTestSender;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RemoteContext defaultContext;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected RemoteContext ctx;

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xCAF88C", Offset = "0xCAF88C", VA = "0xCAF88C")]
	public RemoteContext GetContext()
	{
		return null;
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xCAF8F0", Offset = "0xCAF8F0", VA = "0xCAF8F0")]
	public void SetContext(RemoteContext ctx)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xCAF8F8", Offset = "0xCAF8F8", VA = "0xCAF8F8")]
	protected InnerSender Sender()
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xCAFA08", Offset = "0xCAFA08", VA = "0xCAFA08")]
	public void Send(Delegate d, string remoteFuncName, params object[] obj)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xCAFA44", Offset = "0xCAFA44", VA = "0xCAFA44")]
	public void SendSync(Delegate d, string remoteFuncName, params object[] obj)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xCAFA80", Offset = "0xCAFA80", VA = "0xCAFA80")]
	public AbsRequest()
	{
	}
}
[Token(Token = "0x200025D")]
public class DefaultContext : RemoteContext, IRemoteContext
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static DefaultContext ctx;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object loadingWindow;

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xCAFB04", Offset = "0xCAFB04", VA = "0xCAFB04")]
	public static DefaultContext GetDefault()
	{
		return null;
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xCAFB94", Offset = "0xCAFB94", VA = "0xCAFB94", Slot = "4")]
	private void IRemoteContext.OnResponseReturn()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xCAFC18", Offset = "0xCAFC18", VA = "0xCAFC18", Slot = "5")]
	private void IRemoteContext.OnShowWaiting()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xCAEED8", Offset = "0xCAEED8", VA = "0xCAEED8")]
	public DefaultContext()
	{
	}
}
[Token(Token = "0x200025E")]
public class BizException : Complex
{
	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int code;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string info;

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xCAFCD4", Offset = "0xCAFCD4", VA = "0xCAFCD4", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xCAFD20", Offset = "0xCAFD20", VA = "0xCAFD20")]
	public BizException()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xCAFD28", Offset = "0xCAFD28", VA = "0xCAFD28")]
	public BizException(int code, string info)
	{
	}
}
[Token(Token = "0x200025F")]
public class RemoteHandler
{
	[Token(Token = "0x2000260")]
	public class StatusFlag
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool ok;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xCB2C48", Offset = "0xCB2C48", VA = "0xCB2C48")]
		public StatusFlag()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[CompilerGenerated]
	private sealed class <DoCallback>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RemoteHandler <>4__this;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DateTime <start>5__2;

		[Token(Token = "0x170002DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xCB34A4", Offset = "0xCB34A4", VA = "0xCB34A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xCB34EC", Offset = "0xCB34EC", VA = "0xCB34EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xCB2C50", Offset = "0xCB2C50", VA = "0xCB2C50")]
		[DebuggerHidden]
		public <DoCallback>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xCB2C78", Offset = "0xCB2C78", VA = "0xCB2C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xCB2C7C", Offset = "0xCB2C7C", VA = "0xCB2C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xCB34AC", Offset = "0xCB34AC", VA = "0xCB34AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Delegate successCallback;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Delegate failedCallback;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OutMessage reqMessage;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour corBaser;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Delegate activeDelegate;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private object thisLock;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected IRemoteContext context;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool needToBeRecycle;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AbsPusher relatedPusher;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ret;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool error;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool end;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool cancel;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected StatusFlag flag;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<object> args;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int showWaitingMsg;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int maxRetMsg;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxSendMsg;

	[Token(Token = "0x170002D8")]
	public static int ShowWaitingMsg
	{
		[Token(Token = "0x600107A")]
		[Address(RVA = "0xCB1B60", Offset = "0xCB1B60", VA = "0xCB1B60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002D9")]
	public static int MaxRetMsg
	{
		[Token(Token = "0x600107B")]
		[Address(RVA = "0xCB1BA8", Offset = "0xCB1BA8", VA = "0xCB1BA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600107C")]
		[Address(RVA = "0xCB1BF0", Offset = "0xCB1BF0", VA = "0xCB1BF0")]
		set
		{
		}
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xCAE83C", Offset = "0xCAE83C", VA = "0xCAE83C")]
	public RemoteHandler(Delegate success, IRemoteContext context)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xCAFD60", Offset = "0xCAFD60", VA = "0xCAFD60")]
	public RemoteHandler(Delegate success, Delegate failed, IRemoteContext context)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xCAFEAC", Offset = "0xCAFEAC", VA = "0xCAFEAC")]
	public void CheckWait()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xCB0830", Offset = "0xCB0830", VA = "0xCB0830")]
	public void CallBack(ReceiveMsg msg, bool success)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xCB0DD8", Offset = "0xCB0DD8", VA = "0xCB0DD8")]
	public void ForceFailed()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xCB1064", Offset = "0xCB1064", VA = "0xCB1064")]
	public List<object> CopyArgs()
	{
		return null;
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xCAEF08", Offset = "0xCAEF08", VA = "0xCAEF08")]
	public void DoInvoke(List<object> invokingArgs)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xCB0D2C", Offset = "0xCB0D2C", VA = "0xCB0D2C")]
	public void ReadResponseFailed(BizException be)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xCB1260", Offset = "0xCB1260", VA = "0xCB1260")]
	public void ReadResponseFailed(int type, object info)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xCB1398", Offset = "0xCB1398", VA = "0xCB1398")]
	public List<object> PushCallBack(ReceiveMsg msg, bool success)
	{
		return null;
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xCB15F4", Offset = "0xCB15F4", VA = "0xCB15F4")]
	public void PushCallBack(List<object> args, bool success)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xCB0C04", Offset = "0xCB0C04", VA = "0xCB0C04")]
	private void readArg(ReceiveMsg msg, MethodInfo mi, List<object> args)
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xCB19BC", Offset = "0xCB19BC", VA = "0xCB19BC")]
	public void SendConnectionFailed(Message m)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xCB1A74", Offset = "0xCB1A74", VA = "0xCB1A74")]
	[IteratorStateMachine(typeof(<DoCallback>d__29))]
	public IEnumerator DoCallback()
	{
		return null;
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xCB1AE8", Offset = "0xCB1AE8", VA = "0xCB1AE8")]
	public static bool NeedShowWaiting()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000262")]
public class Route
{
	[Token(Token = "0x2000263")]
	[CompilerGenerated]
	private sealed class <AfterConnectionIEnum>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Route <>4__this;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SendThread <st>5__2;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Thread <threadSend>5__3;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xCB4F48", Offset = "0xCB4F48", VA = "0xCB4F48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xCB4F90", Offset = "0xCB4F90", VA = "0xCB4F90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xCB3DB4", Offset = "0xCB3DB4", VA = "0xCB3DB4")]
		[DebuggerHidden]
		public <AfterConnectionIEnum>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xCB488C", Offset = "0xCB488C", VA = "0xCB488C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xCB4890", Offset = "0xCB4890", VA = "0xCB4890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xCB4F50", Offset = "0xCB4F50", VA = "0xCB4F50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ip;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int port;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool firstTime;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object locker;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnitySocket conn;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Thread receiver;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ReceiveThread rt;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<bool> AfterConnectionReg;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string gameIp;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int gamePort;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Route Game;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Route HttpDummy;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xCB34F4", Offset = "0xCB34F4", VA = "0xCB34F4")]
	public Route(string ip, int port)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xCB3598", Offset = "0xCB3598", VA = "0xCB3598")]
	public bool ResetConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xCB3764", Offset = "0xCB3764", VA = "0xCB3764")]
	public bool IsInited()
	{
		return default(bool);
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xCB3890", Offset = "0xCB3890", VA = "0xCB3890")]
	public UnitySocket GetConnection()
	{
		return null;
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xCB3960", Offset = "0xCB3960", VA = "0xCB3960")]
	private void AfterReconnected()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xCB3A8C", Offset = "0xCB3A8C", VA = "0xCB3A8C")]
	public void RestartReceiveAndSend()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xCB3B54", Offset = "0xCB3B54", VA = "0xCB3B54")]
	public bool StartConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xCB3ADC", Offset = "0xCB3ADC", VA = "0xCB3ADC")]
	private void AfterConnection()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xCB3D40", Offset = "0xCB3D40", VA = "0xCB3D40")]
	[IteratorStateMachine(typeof(<AfterConnectionIEnum>d__16))]
	private IEnumerator AfterConnectionIEnum()
	{
		return null;
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xCB3DDC", Offset = "0xCB3DDC", VA = "0xCB3DDC")]
	public void EndReceive(bool forReconnect = false)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xCB3ED8", Offset = "0xCB3ED8", VA = "0xCB3ED8")]
	public void Disconnect(bool needReconn)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xCB464C", Offset = "0xCB464C", VA = "0xCB464C")]
	public static Route ReloadDefault(string gameIp, int gamePort)
	{
		return null;
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xCB46E8", Offset = "0xCB46E8", VA = "0xCB46E8")]
	public static Route GetDefault()
	{
		return null;
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xCB4740", Offset = "0xCB4740", VA = "0xCB4740")]
	public static Route GetHttpDummy()
	{
		return null;
	}
}
[Token(Token = "0x2000264")]
public class Connector
{
	[Token(Token = "0x6001099")]
	[Address(RVA = "0xCB4F98", Offset = "0xCB4F98", VA = "0xCB4F98")]
	public static UnitySocket getConnection(Route r)
	{
		return null;
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xCB5034", Offset = "0xCB5034", VA = "0xCB5034")]
	public static UnitySocket getConnectionWithLog(Route r)
	{
		return null;
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xCB5310", Offset = "0xCB5310", VA = "0xCB5310")]
	public Connector()
	{
	}
}
[Token(Token = "0x2000265")]
public interface IRemoteContext
{
	[Token(Token = "0x600109C")]
	void OnResponseReturn();

	[Token(Token = "0x600109D")]
	void OnShowWaiting();

	[Token(Token = "0x600109E")]
	void OnTimeout(OutMessage m);

	[Token(Token = "0x600109F")]
	void OnServeralTimeout(OutMessage m);

	[Token(Token = "0x60010A0")]
	void OnLongTimeNoConnection(OutMessage m);

	[Token(Token = "0x60010A1")]
	void OnRequestStart();

	[Token(Token = "0x60010A2")]
	void OnReadResponseFailed(BizException be);

	[Token(Token = "0x60010A3")]
	void OnManagedFailed(BizException be);

	[Token(Token = "0x60010A4")]
	int GetWaitingTimeout();

	[Token(Token = "0x60010A5")]
	int GetWaitingDialogDelay();

	[Token(Token = "0x60010A6")]
	void OnSendConnectionFailed(RemoteHandler remoteHandler, Message m);

	[Token(Token = "0x60010A7")]
	int GetServeralRetryTime();
}
[Token(Token = "0x2000266")]
public class BaseEntity : Complex
{
	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xCB5318", Offset = "0xCB5318", VA = "0xCB5318", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xCB531C", Offset = "0xCB531C", VA = "0xCB531C", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xCB5320", Offset = "0xCB5320", VA = "0xCB5320")]
	public BaseEntity()
	{
	}
}
[Token(Token = "0x2000267")]
public class BattleObserver : Complex
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long accountId;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int userHead;

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xCB5328", Offset = "0xCB5328", VA = "0xCB5328", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xCB5408", Offset = "0xCB5408", VA = "0xCB5408", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xCB56E4", Offset = "0xCB56E4", VA = "0xCB56E4")]
	public BattleObserver()
	{
	}
}
[Token(Token = "0x2000268")]
public class BattlePlayer : Complex
{
	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xCB56EC", Offset = "0xCB56EC", VA = "0xCB56EC", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xCB56F0", Offset = "0xCB56F0", VA = "0xCB56F0", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xCB56F4", Offset = "0xCB56F4", VA = "0xCB56F4")]
	public BattlePlayer()
	{
	}
}
[Token(Token = "0x2000269")]
public class BattlePlayerSnap : Complex
{
	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long accountId;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int userHead;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerPos pp;

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xCB56FC", Offset = "0xCB56FC", VA = "0xCB56FC", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xCB5DF4", Offset = "0xCB5DF4", VA = "0xCB5DF4", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xCB6458", Offset = "0xCB6458", VA = "0xCB6458")]
	public BattlePlayerSnap()
	{
	}
}
[Token(Token = "0x200026A")]
public class BattleRoomSnap : Complex
{
	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int status;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string roomId;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string roomCreator;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public long roomCreatorId;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<BattlePlayerSnap> playerList;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<BattleObserver> obList;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int joinedPlayer;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int joinedObserver;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int maxPlayer;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string scenceName;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int scenceId;

	[Token(Token = "0x4000D4F")]
	public const int JOIN_TYPE_PLAYER = 0;

	[Token(Token = "0x4000D50")]
	public const int JOIN_TYPE_OBSERVER = 1;

	[Token(Token = "0x4000D51")]
	public const int ROOM_STATUS_WAITING = 0;

	[Token(Token = "0x4000D52")]
	public const int ROOM_STATUS_PLAYING = 1;

	[Token(Token = "0x4000D53")]
	public const int ROOM_STATUS_FINISHED = 2;

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xCB6460", Offset = "0xCB6460", VA = "0xCB6460", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xCB68E8", Offset = "0xCB68E8", VA = "0xCB68E8", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xCB698C", Offset = "0xCB698C", VA = "0xCB698C")]
	public BattleRoomSnap()
	{
	}
}
[Token(Token = "0x200026B")]
public class BattleRoomSnapTiny : Complex
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int status;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int userHead;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string roomId;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string roomCreator;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int joinedPlayer;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int joinedObserver;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxPlayer;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string scenceName;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int scenceId;

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xCB6994", Offset = "0xCB6994", VA = "0xCB6994", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xCB6A90", Offset = "0xCB6A90", VA = "0xCB6A90", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xCB6B1C", Offset = "0xCB6B1C", VA = "0xCB6B1C")]
	public BattleRoomSnapTiny()
	{
	}
}
[Token(Token = "0x200026C")]
public class JoinInfo : Complex
{
	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string roomId;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int joinType;

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xCB6B24", Offset = "0xCB6B24", VA = "0xCB6B24", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xCB6B78", Offset = "0xCB6B78", VA = "0xCB6B78", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xCB6BB0", Offset = "0xCB6BB0", VA = "0xCB6BB0")]
	public JoinInfo()
	{
	}
}
[Token(Token = "0x200026D")]
public class PlayerPos : Complex
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long playerId;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int x;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int y;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int z;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int stamp;

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xCB6BB8", Offset = "0xCB6BB8", VA = "0xCB6BB8", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xCB6C74", Offset = "0xCB6C74", VA = "0xCB6C74", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xCB6DA4", Offset = "0xCB6DA4", VA = "0xCB6DA4")]
	public PlayerPos()
	{
	}
}
[Token(Token = "0x200026E")]
public class RoleConfig : Complex
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isMaster;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sex;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string weaponName;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string description;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int starId;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string star;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int roleClass;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int normalAttack;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int skill1;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int skill2;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int skill3;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int skill4;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool display;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string attribute;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int quality;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int attackRate;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int defenceRate;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int maxHpRate;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int speedRate;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int hitRate;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int hitResRate;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int critRate;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int critResRate;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int element;

	[Token(Token = "0x4000D7E")]
	public const int ROLE_CLASS_DPS = 1;

	[Token(Token = "0x4000D7F")]
	public const int ROLE_CLASS_T = 2;

	[Token(Token = "0x4000D80")]
	public const int ROLE_CLASS_HELP = 3;

	[Token(Token = "0x4000D81")]
	public const int ROLE_CLASS_HEAL = 4;

	[Token(Token = "0x4000D82")]
	public const int SEX_MAN = 1;

	[Token(Token = "0x4000D83")]
	public const int SEX_WOMAN = 2;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xCB6DAC", Offset = "0xCB6DAC", VA = "0xCB6DAC", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xCB7090", Offset = "0xCB7090", VA = "0xCB7090", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xCB72F8", Offset = "0xCB72F8", VA = "0xCB72F8")]
	public RoleConfig()
	{
	}
}
[Token(Token = "0x200026F")]
public class ScoreEntity : Complex
{
	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xCB7300", Offset = "0xCB7300", VA = "0xCB7300", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xCB7304", Offset = "0xCB7304", VA = "0xCB7304", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xCB7308", Offset = "0xCB7308", VA = "0xCB7308")]
	public ScoreEntity()
	{
	}
}
[Token(Token = "0x2000270")]
public class TData : Complex
{
	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xCB7310", Offset = "0xCB7310", VA = "0xCB7310", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xCB7314", Offset = "0xCB7314", VA = "0xCB7314", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xCB7318", Offset = "0xCB7318", VA = "0xCB7318")]
	public TData()
	{
	}
}
[Token(Token = "0x2000271")]
public class TFighterData : Complex
{
	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xCB7320", Offset = "0xCB7320", VA = "0xCB7320", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xCB7324", Offset = "0xCB7324", VA = "0xCB7324", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xCB7328", Offset = "0xCB7328", VA = "0xCB7328")]
	public TFighterData()
	{
	}
}
[Token(Token = "0x2000272")]
public class TUnitSnap : Complex
{
	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int unitID;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int x;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int y;

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xCB7330", Offset = "0xCB7330", VA = "0xCB7330", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xCB739C", Offset = "0xCB739C", VA = "0xCB739C", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xCB73E0", Offset = "0xCB73E0", VA = "0xCB73E0")]
	public TUnitSnap()
	{
	}
}
[Token(Token = "0x2000273")]
public class TokenErrorNotify : Complex
{
	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xCB73E8", Offset = "0xCB73E8", VA = "0xCB73E8", Slot = "4")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xCB73EC", Offset = "0xCB73EC", VA = "0xCB73EC", Slot = "5")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xCB73F0", Offset = "0xCB73F0", VA = "0xCB73F0")]
	public TokenErrorNotify()
	{
	}
}
[Token(Token = "0x2000274")]
public class Message
{
	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isReconnectMsg;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Route route;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int msgId;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int autoRetryCount;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<byte[]> onceSend;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int totalLength;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string remoteFuncName;

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xCB72E4", Offset = "0xCB72E4", VA = "0xCB72E4")]
	public void Send(bool data)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xCB71E8", Offset = "0xCB71E8", VA = "0xCB71E8")]
	public void Send(byte data)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xCB73F8", Offset = "0xCB73F8", VA = "0xCB73F8")]
	public void Send(float data)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xCB742C", Offset = "0xCB742C", VA = "0xCB742C")]
	public void SendFloat(float datam, int acc = 1000)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xCB6CD0", Offset = "0xCB6CD0", VA = "0xCB6CD0")]
	public void Send(short data)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xCB544C", Offset = "0xCB544C", VA = "0xCB544C")]
	public void Send(long data)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xCB5610", Offset = "0xCB5610", VA = "0xCB5610")]
	public void Send(int data)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xCB5520", Offset = "0xCB5520", VA = "0xCB5520")]
	public void Send(string data)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xCB7714", Offset = "0xCB7714", VA = "0xCB7714")]
	public void SendLength(int length)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xCB5E44", Offset = "0xCB5E44", VA = "0xCB5E44")]
	public void Send(object c)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xCB77A4", Offset = "0xCB77A4", VA = "0xCB77A4")]
	public void SendList(IList list)
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xCB7AFC", Offset = "0xCB7AFC", VA = "0xCB7AFC")]
	public void SendDict(IDictionary dict)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xCB7F58", Offset = "0xCB7F58", VA = "0xCB7F58")]
	public byte[] Format()
	{
		return null;
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xCB81CC", Offset = "0xCB81CC", VA = "0xCB81CC")]
	public byte[] FormatLocal()
	{
		return null;
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xCB8408", Offset = "0xCB8408", VA = "0xCB8408")]
	public Message()
	{
	}
}
[Token(Token = "0x2000275")]
public class NetWorkDictionary
{
	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, RemoteHandler> handlerMap;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, HashSet<RemoteHandler>> serverPusherHandlerMap;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static object locker;

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xCB8490", Offset = "0xCB8490", VA = "0xCB8490")]
	public static void AddToHandlerMap(int id, RemoteHandler rh)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xCB85D8", Offset = "0xCB85D8", VA = "0xCB85D8")]
	public static void Remove(int id)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xCB871C", Offset = "0xCB871C", VA = "0xCB871C")]
	public NetWorkDictionary()
	{
	}
}
[Token(Token = "0x2000276")]
public class ReceiveMsg
{
	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte[] msg;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cur;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int segment;

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xCB8850", Offset = "0xCB8850", VA = "0xCB8850")]
	public ReceiveMsg(byte[] msg)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xCB88CC", Offset = "0xCB88CC", VA = "0xCB88CC")]
	private byte[] ReadSize(int size)
	{
		return null;
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xCB8958", Offset = "0xCB8958", VA = "0xCB8958")]
	public float ReceiveFloat()
	{
		return default(float);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xCB896C", Offset = "0xCB896C", VA = "0xCB896C")]
	public float ReceiveFloatFromInt(int acc = 1000)
	{
		return default(float);
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xCB8A30", Offset = "0xCB8A30", VA = "0xCB8A30")]
	public double ReceiveDouble()
	{
		return default(double);
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xCB6C5C", Offset = "0xCB6C5C", VA = "0xCB6C5C")]
	public short ReceiveShort()
	{
		return default(short);
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xCB53F0", Offset = "0xCB53F0", VA = "0xCB53F0")]
	public int ReceiveInt()
	{
		return default(int);
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xCB5394", Offset = "0xCB5394", VA = "0xCB5394")]
	public long ReceiveLong()
	{
		return default(long);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xCB7078", Offset = "0xCB7078", VA = "0xCB7078")]
	public bool ReceiveBool()
	{
		return default(bool);
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xCB704C", Offset = "0xCB704C", VA = "0xCB704C")]
	public byte ReceiveByte()
	{
		return default(byte);
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xCB53AC", Offset = "0xCB53AC", VA = "0xCB53AC")]
	public string ReceiveString()
	{
		return null;
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xCB8C20", Offset = "0xCB8C20", VA = "0xCB8C20")]
	public string ReceiveStringX()
	{
		return null;
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xCB8C64", Offset = "0xCB8C64", VA = "0xCB8C64")]
	public object ReceiveObjPartiable(Type c)
	{
		return null;
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xCB585C", Offset = "0xCB585C", VA = "0xCB585C")]
	public object ReceiveObj(Type c)
	{
		return null;
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xCB91FC", Offset = "0xCB91FC", VA = "0xCB91FC")]
	public IDictionary ReceiveDict(Type kt, Type vt)
	{
		return null;
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xCB6708", Offset = "0xCB6708", VA = "0xCB6708")]
	public IList ReceiveList(Type c)
	{
		return null;
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xCB8BC4", Offset = "0xCB8BC4", VA = "0xCB8BC4")]
	public int ReceiveLength()
	{
		return default(int);
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xCB94A0", Offset = "0xCB94A0", VA = "0xCB94A0")]
	public byte[] GetAll()
	{
		return null;
	}
}
[Token(Token = "0x2000277")]
public class ReceiveThread
{
	[Token(Token = "0x2000278")]
	public class Receiver
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<ReceiveMsg> HandleAction;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ReceiveMsg, IPEndPoint> HandleActionWithIEP;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int ROOM_CREATOR_BIKE_ID;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Dictionary<int, IPAddress> sessionDict;

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xCB98E4", Offset = "0xCB98E4", VA = "0xCB98E4")]
		public static void onMsgRecive(UnitySocket mSocket, System.Action ReceiveNextCallback)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xCB9AA4", Offset = "0xCB9AA4", VA = "0xCB9AA4")]
		public static void HandleMsg(ReceiveMsg msg)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xCB9E38", Offset = "0xCB9E38", VA = "0xCB9E38")]
		public static void HandleMsg(ReceiveMsg msg, IPEndPoint iep)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xCBA024", Offset = "0xCBA024", VA = "0xCBA024")]
		private static void ThreadHandleRoomPush(ReceiveMsg msg, IPEndPoint iep)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xCB9D4C", Offset = "0xCB9D4C", VA = "0xCB9D4C")]
		private static void ThreadHandlePush(ReceiveMsg msg)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xCB9C60", Offset = "0xCB9C60", VA = "0xCB9C60")]
		private static void ThreadHandleRequest(ReceiveMsg msg)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xCBAA40", Offset = "0xCBAA40", VA = "0xCBAA40")]
		private static void HandlePushList(List<PushContent> pushList)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xCBA4E0", Offset = "0xCBA4E0", VA = "0xCBA4E0")]
		private static void HandlePush(string methodName, ReceiveMsg msg, bool combined)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xCBAD48", Offset = "0xCBAD48", VA = "0xCBAD48")]
		public Receiver()
		{
		}
	}

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool readyToReceive;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool interrupt;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Route route;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DateTime lastReceivedPackageTime;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initSuccess;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Thread currentThread;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ReceiveThread baseInstance;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static double Time;

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xCB94A8", Offset = "0xCB94A8", VA = "0xCB94A8")]
	public static bool IsLongTimeNoReceived()
	{
		return default(bool);
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xCB4CD8", Offset = "0xCB4CD8", VA = "0xCB4CD8")]
	public static ReceiveThread CreateNewInstance()
	{
		return null;
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xCB9560", Offset = "0xCB9560", VA = "0xCB9560")]
	private ReceiveThread()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xCB9570", Offset = "0xCB9570", VA = "0xCB9570")]
	private void ReceiveNextCallback()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xCB957C", Offset = "0xCB957C", VA = "0xCB957C")]
	public void run()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xCB3180", Offset = "0xCB3180", VA = "0xCB3180")]
	public static void LoadTime(string key)
	{
	}
}
[Token(Token = "0x200027B")]
public class ReqTalkChannel : AbsRequest
{
	[Token(Token = "0x600110C")]
	[Address(RVA = "0xCBB2A8", Offset = "0xCBB2A8", VA = "0xCBB2A8")]
	public void Enter(Action<bool> action, string channel)
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xCBB378", Offset = "0xCBB378", VA = "0xCBB378")]
	public void EnterBatch(Action<bool> action, List<string> list)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xCBB448", Offset = "0xCBB448", VA = "0xCBB448")]
	public void Quit(Action<bool> action, string channel)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xCBB518", Offset = "0xCBB518", VA = "0xCBB518")]
	public ReqTalkChannel()
	{
	}
}
[Token(Token = "0x200027C")]
public class SendThread
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Thread currentThread;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SendThread _instance;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool initSuccess;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool interrupted;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BlockQueue<Message> list;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xCBB570", Offset = "0xCBB570", VA = "0xCBB570")]
	private SendThread()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xCB4DEC", Offset = "0xCB4DEC", VA = "0xCB4DEC")]
	public static SendThread NewInstance()
	{
		return null;
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xCB37FC", Offset = "0xCB37FC", VA = "0xCB37FC")]
	public static SendThread GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xCBB578", Offset = "0xCBB578", VA = "0xCBB578")]
	public static void AddMsg(Message m)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xCB4E7C", Offset = "0xCB4E7C", VA = "0xCB4E7C")]
	public static void Reset()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xCBB638", Offset = "0xCBB638", VA = "0xCBB638")]
	public void run()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xCBB9B0", Offset = "0xCBB9B0", VA = "0xCBB9B0")]
	public bool DoSendMessage(Message m)
	{
		return default(bool);
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xCBB8C4", Offset = "0xCBB8C4", VA = "0xCBB8C4")]
	private void SendFailed(Message m)
	{
	}
}
[Token(Token = "0x200027E")]
public class OutMessage
{
	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InnerSender sender;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RemoteHandler h;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string remoteFuncName;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public object[] obj;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Route route;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int msgId;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int retryTime;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Message sendMessage;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isOnceMessage;

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xCBBDCC", Offset = "0xCBBDCC", VA = "0xCBBDCC")]
	public OutMessage(InnerSender sender, RemoteHandler h, string remoteFuncName, object[] obj)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xCBBE40", Offset = "0xCBBE40", VA = "0xCBBE40")]
	private OutMessage()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xCBBE48", Offset = "0xCBBE48", VA = "0xCBBE48")]
	private OutMessage copy()
	{
		return null;
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xCBBF44", Offset = "0xCBBF44", VA = "0xCBBF44")]
	public void Resend()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xCBC1D8", Offset = "0xCBC1D8", VA = "0xCBC1D8")]
	public static bool IsRetryable(RemoteHandler h)
	{
		return default(bool);
	}
}
[Token(Token = "0x200027F")]
public class HttpInnerSender : InnerSender
{
	[Token(Token = "0x6001120")]
	[Address(RVA = "0xCBC2C0", Offset = "0xCBC2C0", VA = "0xCBC2C0")]
	public HttpInnerSender(IRemoteContext context)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xCBC364", Offset = "0xCBC364", VA = "0xCBC364", Slot = "4")]
	protected override void Add(OutMessage outMsg)
	{
	}
}
[Token(Token = "0x2000280")]
public class InnerSender
{
	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object thisLock;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int autoMsgId;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IRemoteContext context;

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xCBC334", Offset = "0xCBC334", VA = "0xCBC334")]
	public InnerSender(IRemoteContext context)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xCBC628", Offset = "0xCBC628", VA = "0xCBC628")]
	public void Send(Delegate d, string remoteFuncName, params object[] obj)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xCBC6E0", Offset = "0xCBC6E0", VA = "0xCBC6E0")]
	public void Send(Delegate d, Route r, string remoteFuncName, params object[] obj)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xCBCA5C", Offset = "0xCBCA5C", VA = "0xCBCA5C")]
	public void SendSync(Delegate d, string remoteFuncName, params object[] obj)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xCBC830", Offset = "0xCBC830", VA = "0xCBC830")]
	private OutMessage CreateOutMessage(Delegate d, string remoteFuncName, object[] obj)
	{
		return null;
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xCBCB44", Offset = "0xCBCB44", VA = "0xCBCB44")]
	private bool CreateCoroutineWait(Delegate d, RemoteHandler sh)
	{
		return default(bool);
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xCBCCB0", Offset = "0xCBCCB0", VA = "0xCBCCB0", Slot = "4")]
	protected virtual void Add(OutMessage outMsg)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xCBC02C", Offset = "0xCBC02C", VA = "0xCBC02C")]
	public void Resend(OutMessage outMsg)
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xCBCEA8", Offset = "0xCBCEA8", VA = "0xCBCEA8")]
	public void Resend(RemoteHandler h, Message msg)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xCBCF48", Offset = "0xCBCF48", VA = "0xCBCF48")]
	public System.Action CreateSendReqDelegate(RemoteHandler h, Message msg)
	{
		return null;
	}
}
[Token(Token = "0x2000284")]
public class UnitySocket
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Socket socket;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IPEndPoint ipe;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reconnectInited;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LocalIP;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int LocalPort;

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xCBD3E8", Offset = "0xCBD3E8", VA = "0xCBD3E8")]
	public string Showinfo()
	{
		return null;
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xCB3D08", Offset = "0xCB3D08", VA = "0xCB3D08")]
	public UnitySocket(string LocalIP, int LocalPort)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xCBD448", Offset = "0xCBD448", VA = "0xCBD448")]
	private bool ResetSelf(string LocalIP, int LocalPort, System.Action AfterConnect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xCBD658", Offset = "0xCBD658", VA = "0xCBD658")]
	private bool DoConnect(System.Action AfterConnect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xCBD968", Offset = "0xCBD968", VA = "0xCBD968")]
	public bool DoConnectIOS(System.Action AfterConnect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xCBD65C", Offset = "0xCBD65C", VA = "0xCBD65C")]
	public bool DoConnectAndroid(System.Action AfterConnect)
	{
		return default(bool);
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xCBDB64", Offset = "0xCBDB64", VA = "0xCBDB64")]
	private void ConnectCallback(IAsyncResult conn)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xCB3678", Offset = "0xCB3678", VA = "0xCB3678")]
	public bool Reconnect(System.Action AfterConnect)
	{
		return default(bool);
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xCBDB68", Offset = "0xCBDB68", VA = "0xCBDB68")]
	private void EndSend(IAsyncResult i)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xCBBC48", Offset = "0xCBBC48", VA = "0xCBBC48")]
	public bool Send(Message msg)
	{
		return default(bool);
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xCBDB84", Offset = "0xCBDB84", VA = "0xCBDB84")]
	public void Close()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xCB3940", Offset = "0xCB3940", VA = "0xCB3940")]
	public bool IsConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xCBDBB8", Offset = "0xCBDBB8", VA = "0xCBDBB8")]
	public ReceiveMsg ReadAll()
	{
		return null;
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xCB9A0C", Offset = "0xCB9A0C", VA = "0xCB9A0C")]
	public void ReadAllAsync(Action<ReceiveMsg> msg, System.Action ReceiveNextCallback)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xCBDF48", Offset = "0xCBDF48", VA = "0xCBDF48")]
	public void ReadRest(int size, Action<ReceiveMsg> msgDo)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xCBDD70", Offset = "0xCBDD70", VA = "0xCBDD70")]
	private int ReceiveInt()
	{
		return default(int);
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xCBDDE4", Offset = "0xCBDDE4", VA = "0xCBDDE4")]
	private void ReceiveIntAsync(Action<int, Action<ReceiveMsg>> ReadInfo, Action<ReceiveMsg> msg, System.Action ReceiveNextCallback)
	{
	}
}
[Token(Token = "0x2000286")]
public class RemoteContext : IRemoteContext
{
	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected InnerSender sender;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private object loadingWindow;

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xCBE2B8", Offset = "0xCBE2B8", VA = "0xCBE2B8")]
	public RemoteContext()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xCBE32C", Offset = "0xCBE32C", VA = "0xCBE32C")]
	public InnerSender GetSender()
	{
		return null;
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xCBE334", Offset = "0xCBE334", VA = "0xCBE334")]
	public void SetSender(InnerSender sender)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xCBE33C", Offset = "0xCBE33C", VA = "0xCBE33C", Slot = "4")]
	private void IRemoteContext.OnResponseReturn()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xCBE404", Offset = "0xCBE404", VA = "0xCBE404", Slot = "5")]
	private void IRemoteContext.OnShowWaiting()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xCBE504", Offset = "0xCBE504", VA = "0xCBE504", Slot = "6")]
	private void IRemoteContext.OnTimeout(OutMessage outMsg)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xCBE508", Offset = "0xCBE508", VA = "0xCBE508")]
	protected void TimeoutRetryStrategy(OutMessage outMsg)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xCBE7E0", Offset = "0xCBE7E0", VA = "0xCBE7E0", Slot = "13")]
	private int IRemoteContext.GetWaitingDialogDelay()
	{
		return default(int);
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xCBE7E8", Offset = "0xCBE7E8", VA = "0xCBE7E8", Slot = "12")]
	private int IRemoteContext.GetWaitingTimeout()
	{
		return default(int);
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xCBE7F0", Offset = "0xCBE7F0", VA = "0xCBE7F0", Slot = "15")]
	private int IRemoteContext.GetServeralRetryTime()
	{
		return default(int);
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xCBE7F8", Offset = "0xCBE7F8", VA = "0xCBE7F8", Slot = "9")]
	private void IRemoteContext.OnRequestStart()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xCBE824", Offset = "0xCBE824", VA = "0xCBE824", Slot = "10")]
	private void IRemoteContext.OnReadResponseFailed(BizException be)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xCBE904", Offset = "0xCBE904", VA = "0xCBE904", Slot = "8")]
	private void IRemoteContext.OnLongTimeNoConnection(OutMessage msg)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xCBEABC", Offset = "0xCBEABC", VA = "0xCBEABC", Slot = "7")]
	private void IRemoteContext.OnServeralTimeout(OutMessage msg)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xCBEB14", Offset = "0xCBEB14", VA = "0xCBEB14", Slot = "14")]
	private void IRemoteContext.OnSendConnectionFailed(RemoteHandler remoteHandler, Message m)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xCBECC4", Offset = "0xCBECC4", VA = "0xCBECC4", Slot = "11")]
	private void IRemoteContext.OnManagedFailed(BizException be)
	{
	}
}
[Token(Token = "0x200028A")]
public class LateContext : RemoteContext, IRemoteContext
{
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static LateContext ctx;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xCBF260", Offset = "0xCBF260", VA = "0xCBF260")]
	public static LateContext GetDefault()
	{
		return null;
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xCBF2F0", Offset = "0xCBF2F0", VA = "0xCBF2F0", Slot = "13")]
	private int IRemoteContext.GetWaitingDialogDelay()
	{
		return default(int);
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xCBF2F8", Offset = "0xCBF2F8", VA = "0xCBF2F8", Slot = "9")]
	private void IRemoteContext.OnRequestStart()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xCBF2EC", Offset = "0xCBF2EC", VA = "0xCBF2EC")]
	public LateContext()
	{
	}
}
[Token(Token = "0x200028B")]
public class SimpleContext : RemoteContext, IRemoteContext
{
	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static SimpleContext ctx;

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xCBF2FC", Offset = "0xCBF2FC", VA = "0xCBF2FC")]
	public static SimpleContext GetDefault()
	{
		return null;
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xCBF38C", Offset = "0xCBF38C", VA = "0xCBF38C", Slot = "4")]
	private void IRemoteContext.OnResponseReturn()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xCBF3B8", Offset = "0xCBF3B8", VA = "0xCBF3B8", Slot = "5")]
	private void IRemoteContext.OnShowWaiting()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xCBF3BC", Offset = "0xCBF3BC", VA = "0xCBF3BC", Slot = "6")]
	private void IRemoteContext.OnTimeout(OutMessage outMsg)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xCBF3C0", Offset = "0xCBF3C0", VA = "0xCBF3C0", Slot = "9")]
	private void IRemoteContext.OnRequestStart()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xCBF3C4", Offset = "0xCBF3C4", VA = "0xCBF3C4", Slot = "10")]
	private void IRemoteContext.OnReadResponseFailed(BizException be)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xCBF3F0", Offset = "0xCBF3F0", VA = "0xCBF3F0", Slot = "14")]
	private void IRemoteContext.OnSendConnectionFailed(RemoteHandler remoteHandler, Message m)
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xCBF388", Offset = "0xCBF388", VA = "0xCBF388")]
	public SimpleContext()
	{
	}
}
[Token(Token = "0x200028C")]
public class IgnoreStateContext : SimpleContext, IRemoteContext
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MonoBehaviour mb;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator ie;

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xCBF41C", Offset = "0xCBF41C", VA = "0xCBF41C")]
	public IgnoreStateContext(MonoBehaviour mb, IEnumerator ie)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xCBF45C", Offset = "0xCBF45C", VA = "0xCBF45C", Slot = "6")]
	private void IRemoteContext.OnTimeout(OutMessage outMsg)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xCBF630", Offset = "0xCBF630", VA = "0xCBF630", Slot = "12")]
	private int IRemoteContext.GetWaitingTimeout()
	{
		return default(int);
	}
}
[Token(Token = "0x200028D")]
public class EmptyContext : SimpleContext, IRemoteContext
{
	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static EmptyContext emptyCtx;

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xCBF638", Offset = "0xCBF638", VA = "0xCBF638")]
	public new static EmptyContext GetDefault()
	{
		return null;
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xCBF6C8", Offset = "0xCBF6C8", VA = "0xCBF6C8", Slot = "6")]
	private void IRemoteContext.OnTimeout(OutMessage outMsg)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xCBF6CC", Offset = "0xCBF6CC", VA = "0xCBF6CC", Slot = "12")]
	private int IRemoteContext.GetWaitingTimeout()
	{
		return default(int);
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xCBF6C4", Offset = "0xCBF6C4", VA = "0xCBF6C4")]
	public EmptyContext()
	{
	}
}
[Token(Token = "0x200028E")]
public class ServerLoginContext : SimpleContext, IRemoteContext
{
	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static ServerLoginContext serverLoginCtx;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xCBF6D4", Offset = "0xCBF6D4", VA = "0xCBF6D4")]
	public new static ServerLoginContext GetDefault()
	{
		return null;
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xCBF764", Offset = "0xCBF764", VA = "0xCBF764", Slot = "6")]
	private void IRemoteContext.OnTimeout(OutMessage outMsg)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xCBF760", Offset = "0xCBF760", VA = "0xCBF760")]
	public ServerLoginContext()
	{
	}
}
[Token(Token = "0x200028F")]
public class BlockQueue<T>
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly int SizeLimit;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<T> _inner_queue;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool _IsShutdown;

	[Token(Token = "0x170002DE")]
	public int Count
	{
		[Token(Token = "0x6001176")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001177")]
	public BlockQueue(int sizeLimit)
	{
	}

	[Token(Token = "0x6001178")]
	public BlockQueue()
	{
	}

	[Token(Token = "0x6001179")]
	public void Push(T item)
	{
	}

	[Token(Token = "0x600117A")]
	public T NotBlockPeak()
	{
		return (T)null;
	}

	[Token(Token = "0x600117B")]
	public T Peak()
	{
		return (T)null;
	}

	[Token(Token = "0x600117C")]
	public void Shutdown()
	{
	}
}
[Token(Token = "0x2000290")]
public class TypeConvert
{
	[Token(Token = "0x600117D")]
	[Address(RVA = "0xCBF8B4", Offset = "0xCBF8B4", VA = "0xCBF8B4")]
	public TypeConvert()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xCBF8BC", Offset = "0xCBF8BC", VA = "0xCBF8BC")]
	public static byte[] getBytes(float s, bool asc)
	{
		return null;
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xCB7450", Offset = "0xCB7450", VA = "0xCB7450")]
	public static byte[] getBytes(short s, bool asc)
	{
		return null;
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xCB7628", Offset = "0xCB7628", VA = "0xCB7628")]
	public static byte[] getBytes(int s, bool asc)
	{
		return null;
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xCB753C", Offset = "0xCB753C", VA = "0xCB753C")]
	public static byte[] getBytes(long s, bool asc)
	{
		return null;
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xCB8B74", Offset = "0xCB8B74", VA = "0xCB8B74")]
	public static bool getBool(byte[] buf, bool asc)
	{
		return default(bool);
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xCB8BA0", Offset = "0xCB8BA0", VA = "0xCB8BA0")]
	public static byte getByte(byte[] buf, bool asc)
	{
		return default(byte);
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xCBF8EC", Offset = "0xCBF8EC", VA = "0xCBF8EC")]
	public static float getFloat(byte[] buf, bool asc)
	{
		return default(float);
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xCB8A44", Offset = "0xCB8A44", VA = "0xCB8A44")]
	public static short getShort(byte[] buf, bool asc)
	{
		return default(short);
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xCB8998", Offset = "0xCB8998", VA = "0xCB8998")]
	public static int getInt(byte[] buf, bool asc)
	{
		return default(int);
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xCB8ADC", Offset = "0xCB8ADC", VA = "0xCB8ADC")]
	public static long getLong(byte[] buf, bool asc)
	{
		return default(long);
	}
}
[Token(Token = "0x2000291")]
public class WebSocketFakeRoom
{
	[Token(Token = "0x2000292")]
	[CompilerGenerated]
	private sealed class <DoHeartBeat>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0xCC0004", Offset = "0xCC0004", VA = "0xCC0004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xCC004C", Offset = "0xCC004C", VA = "0xCC004C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xCBF970", Offset = "0xCBF970", VA = "0xCBF970")]
		[DebuggerHidden]
		public <DoHeartBeat>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xCBFF34", Offset = "0xCBFF34", VA = "0xCBFF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xCBFF38", Offset = "0xCBFF38", VA = "0xCBFF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xCC000C", Offset = "0xCC000C", VA = "0xCC000C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000293")]
	[CompilerGenerated]
	private struct <WebSocket>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long accountId;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string channel;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte[] <result>5__2;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<WebSocketReceiveResult> <>u__2;

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xCC0054", Offset = "0xCC0054", VA = "0xCC0054", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xCC0820", Offset = "0xCC0820", VA = "0xCC0820", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ClientWebSocket ws;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool heartbeat;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CancellationToken ct;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool isws;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Coroutine mTimer;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action<byte[]> OnReceiver;

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xCBF910", Offset = "0xCBF910", VA = "0xCBF910")]
	[IteratorStateMachine(typeof(<DoHeartBeat>d__6))]
	private static IEnumerator DoHeartBeat()
	{
		return null;
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xCBF998", Offset = "0xCBF998", VA = "0xCBF998")]
	[AsyncStateMachine(typeof(<WebSocket>d__7))]
	public static void WebSocket(long accountId, string channel, string token)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xCBFA58", Offset = "0xCBFA58", VA = "0xCBFA58")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xCBFAF4", Offset = "0xCBFAF4", VA = "0xCBFAF4")]
	public static byte[] ByteCut(byte[] b, byte cut)
	{
		return null;
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xCBFC84", Offset = "0xCBFC84", VA = "0xCBFC84")]
	public static void SendData(Message m)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xCBFD54", Offset = "0xCBFD54", VA = "0xCBFD54")]
	public static void SendData(byte[] data)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xCBFE0C", Offset = "0xCBFE0C", VA = "0xCBFE0C")]
	private static void heartTime()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xCBFF2C", Offset = "0xCBFF2C", VA = "0xCBFF2C")]
	public WebSocketFakeRoom()
	{
	}
}
[Token(Token = "0x2000294")]
public class WebSocketIO
{
	[Token(Token = "0x2000295")]
	[CompilerGenerated]
	private sealed class <DoHeartBeat>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xCC0DB8", Offset = "0xCC0DB8", VA = "0xCC0DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xCC0E00", Offset = "0xCC0E00", VA = "0xCC0E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xCC088C", Offset = "0xCC088C", VA = "0xCC088C")]
		[DebuggerHidden]
		public <DoHeartBeat>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xCC0CE8", Offset = "0xCC0CE8", VA = "0xCC0CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xCC0CEC", Offset = "0xCC0CEC", VA = "0xCC0CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xCC0DC0", Offset = "0xCC0DC0", VA = "0xCC0DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000297")]
	[CompilerGenerated]
	private struct <WebSocket>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long accountId;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string channel;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string token;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private byte[] <result>5__2;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<WebSocketReceiveResult> <>u__2;

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xCC0F1C", Offset = "0xCC0F1C", VA = "0xCC0F1C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xCC1764", Offset = "0xCC1764", VA = "0xCC1764", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ClientWebSocket ws;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool heartbeat;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CancellationToken ct;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool isws;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Coroutine mTimer;

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xCC082C", Offset = "0xCC082C", VA = "0xCC082C")]
	[IteratorStateMachine(typeof(<DoHeartBeat>d__5))]
	private static IEnumerator DoHeartBeat()
	{
		return null;
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xCC08B4", Offset = "0xCC08B4", VA = "0xCC08B4")]
	[AsyncStateMachine(typeof(<WebSocket>d__6))]
	public static void WebSocket(long accountId, string channel, string token)
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xCC0994", Offset = "0xCC0994", VA = "0xCC0994")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xCC0A30", Offset = "0xCC0A30", VA = "0xCC0A30")]
	public static byte[] ByteCut(byte[] b, byte cut)
	{
		return null;
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xCC0BC0", Offset = "0xCC0BC0", VA = "0xCC0BC0")]
	private static void heartTime()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xCC0CE0", Offset = "0xCC0CE0", VA = "0xCC0CE0")]
	public WebSocketIO()
	{
	}
}
[Token(Token = "0x2000298")]
public class GlobalData
{
	[Token(Token = "0x2000299")]
	public class SoldierData
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Soldier> list;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Soldier>[] soldiers;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<BattleSoldier>[] battleSoldiers;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SoldierCost[] soldierCosts;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SoldierType> soldierTypes;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xCC1E18", Offset = "0xCC1E18", VA = "0xCC1E18")]
		public SoldierData(List<Soldier> list, List<SoldierCost> costList, List<SoldierType> soldierTypes)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xCC30BC", Offset = "0xCC30BC", VA = "0xCC30BC")]
		public SoldierType GetSoldierType(int stypeId)
		{
			return null;
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xCC31A0", Offset = "0xCC31A0", VA = "0xCC31A0")]
		public List<SoldierType> GetAllSoldierTypes()
		{
			return null;
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xCC31A8", Offset = "0xCC31A8", VA = "0xCC31A8")]
		public Soldier GetSoldierData(int lv, int ctype)
		{
			return null;
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xCC32C4", Offset = "0xCC32C4", VA = "0xCC32C4")]
		public BattleSoldier GetBattleSoldierData(int lv, int ctype)
		{
			return null;
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xCC33E0", Offset = "0xCC33E0", VA = "0xCC33E0")]
		public SoldierType GetSoldierTypeByStrId(string strId)
		{
			return null;
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xCC3564", Offset = "0xCC3564", VA = "0xCC3564")]
		public List<SoldierType> GetUpdateableSoldierType()
		{
			return null;
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xCC366C", Offset = "0xCC366C", VA = "0xCC366C")]
		public SoldierCost GetUpgradeNeed(int currentLevel)
		{
			return null;
		}
	}

	[Token(Token = "0x200029E")]
	public class DragonData
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DragonStat[] dragonStat;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DragonCost[] dragonCosts;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xCC2550", Offset = "0xCC2550", VA = "0xCC2550")]
		public DragonData(List<DragonStat> statList, List<DragonCost> costList)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xCC37A0", Offset = "0xCC37A0", VA = "0xCC37A0")]
		public DragonCost GetUpgradeNeed(int currentLevel)
		{
			return null;
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xCC37D0", Offset = "0xCC37D0", VA = "0xCC37D0")]
		public DragonStat GetDragonStat(int level)
		{
			return null;
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xCC3B50", Offset = "0xCC3B50", VA = "0xCC3B50")]
		public UserDragonLevel CreateFakeDragonLevel(int lv)
		{
			return null;
		}
	}

	[Token(Token = "0x200029F")]
	public class BattleSoldier
	{
		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lv;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ctype;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attack;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float hp;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xCC3030", Offset = "0xCC3030", VA = "0xCC3030")]
		public BattleSoldier(Soldier soldier)
		{
		}
	}

	[Token(Token = "0x20002A0")]
	public class GateDefineData
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GateDefine> gateDefineList;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BossSkillData> bossSkillDatas;

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xCC28D8", Offset = "0xCC28D8", VA = "0xCC28D8")]
		public GateDefineData(List<GateDefine> gateDefineList, List<BossSkillData> bossSkillDatas)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xCC3BB8", Offset = "0xCC3BB8", VA = "0xCC3BB8")]
		public GateDefine FindGateDefine(long id)
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xCC3D1C", Offset = "0xCC3D1C", VA = "0xCC3D1C")]
		public BossSkillData FindBossSkillData(long id)
		{
			return null;
		}
	}

	[Token(Token = "0x20002A1")]
	public class LayoutData
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GateLayout> layoutList;

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xCC291C", Offset = "0xCC291C", VA = "0xCC291C")]
		public LayoutData(List<GateLayout> list)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xCC3E80", Offset = "0xCC3E80", VA = "0xCC3E80")]
		public int[,] FindGateLayoutIntArray(long id)
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xCC3F0C", Offset = "0xCC3F0C", VA = "0xCC3F0C")]
		public GateLayout FindGateLayout(long id)
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xCC4070", Offset = "0xCC4070", VA = "0xCC4070")]
		public int[,] ToIntArray(GateLayout gl)
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xCC4338", Offset = "0xCC4338", VA = "0xCC4338")]
		public bool IsIceBlock(int data)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xCC4348", Offset = "0xCC4348", VA = "0xCC4348")]
		public bool IsChainBlock(int data)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xCC4358", Offset = "0xCC4358", VA = "0xCC4358")]
		public bool IsIronBlock(int data)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xCC4368", Offset = "0xCC4368", VA = "0xCC4368")]
		public int GetColor(int data)
		{
			return default(int);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xCC438C", Offset = "0xCC438C", VA = "0xCC438C")]
		public int GetItemType(int data)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoldierData soldierData;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DragonData dragonData;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GateDefineData gateDefineData;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static LayoutData layoutData;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static LevelConstData levelConstData;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static GateSoldierData gateSoldierData;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static TipsWrapperData tipsWrapperData;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool IsInited;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int[] scoreData;

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xCC1770", Offset = "0xCC1770", VA = "0xCC1770")]
	public static void FullInit()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xCC2EF4", Offset = "0xCC2EF4", VA = "0xCC2EF4")]
	public static int GetSingleMatchScore(int onceClear)
	{
		return default(int);
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xCC2F84", Offset = "0xCC2F84", VA = "0xCC2F84")]
	public GlobalData()
	{
	}
}
[Token(Token = "0x20002A2")]
public class UserSoldierLevelWrapper
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UserSoldierLevel userSoldierLevel;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] levelData;

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xCC43C8", Offset = "0xCC43C8", VA = "0xCC43C8")]
	public UserSoldierLevelWrapper(UserSoldierLevel usl)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xCC459C", Offset = "0xCC459C", VA = "0xCC459C")]
	public int GetLevelOut(SoldierType st)
	{
		return default(int);
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xCC45EC", Offset = "0xCC45EC", VA = "0xCC45EC")]
	public bool UpgradeLevel(SoldierType st)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xCC4648", Offset = "0xCC4648", VA = "0xCC4648")]
	public int GetLevelBattle(SoldierType st)
	{
		return default(int);
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xCC46A0", Offset = "0xCC46A0", VA = "0xCC46A0")]
	public static UserSoldierLevelWrapper CreateFakeLevel(int level)
	{
		return null;
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xCC4744", Offset = "0xCC4744", VA = "0xCC4744")]
	public static UserSoldierLevelWrapper CreateFakeLevelFirst5(int level)
	{
		return null;
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xCC47D4", Offset = "0xCC47D4", VA = "0xCC47D4")]
	public void Dump()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xCC4840", Offset = "0xCC4840", VA = "0xCC4840")]
	public int GetFakeWarriorLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xCC485C", Offset = "0xCC485C", VA = "0xCC485C")]
	public List<long> GetUnlockedSoldierTypeId()
	{
		return null;
	}
}
[Token(Token = "0x20002A3")]
public class UserPackWrapper
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GoodsAndCount> packs;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, GoodsAndCount> dicPack;

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xCC4980", Offset = "0xCC4980", VA = "0xCC4980")]
	public UserPackWrapper()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xCC4988", Offset = "0xCC4988", VA = "0xCC4988")]
	public UserPackWrapper(List<GoodsAndCount> packs)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xCC4BF0", Offset = "0xCC4BF0", VA = "0xCC4BF0")]
	public int GetGood(int goodId)
	{
		return default(int);
	}
}
[Token(Token = "0x20002A4")]
public class TipsWrapperData
{
	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> tips;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int lastTips;

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xCC2D54", Offset = "0xCC2D54", VA = "0xCC2D54")]
	public TipsWrapperData(string txt)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xCC4C88", Offset = "0xCC4C88", VA = "0xCC4C88")]
	public string GetRandomTips()
	{
		return null;
	}
}
[Token(Token = "0x20002A5")]
public enum CareerDiff
{
	[Token(Token = "0x4000E1A")]
	NORMAL,
	[Token(Token = "0x4000E1B")]
	HARD
}
[Token(Token = "0x20002A6")]
public class UserCareerWrapper
{
	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UserCareer career;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] normalData;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] hardData;

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xCC4D54", Offset = "0xCC4D54", VA = "0xCC4D54")]
	public UserCareerWrapper(UserCareer uc)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xCC4F44", Offset = "0xCC4F44", VA = "0xCC4F44")]
	public int[] GetDataByDiffi(CareerDiff cd)
	{
		return null;
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xCC4F5C", Offset = "0xCC4F5C", VA = "0xCC4F5C")]
	private int GetSectionIdByGateId(int gateId)
	{
		return default(int);
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xCC4F7C", Offset = "0xCC4F7C", VA = "0xCC4F7C")]
	private int GetGateOffsetMask(int gateId)
	{
		return default(int);
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xCC4FA8", Offset = "0xCC4FA8", VA = "0xCC4FA8")]
	public int GetStarByGateId(int gateId, CareerDiff cd)
	{
		return default(int);
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xCC5050", Offset = "0xCC5050", VA = "0xCC5050")]
	private int GetStarBySectionInfoAndGateId(int gateId, int sectionStarInfo)
	{
		return default(int);
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xCC5098", Offset = "0xCC5098", VA = "0xCC5098")]
	public List<int> GetAllStars(CareerDiff cd)
	{
		return null;
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xCC5244", Offset = "0xCC5244", VA = "0xCC5244")]
	public void PutStar(int gateId, int star, CareerDiff cd)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xCC52F0", Offset = "0xCC52F0", VA = "0xCC52F0")]
	public bool IsUnlocked(int gateId, CareerDiff cd)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xCC53C8", Offset = "0xCC53C8", VA = "0xCC53C8")]
	public int CheckStartGateNewGuide(int gateId)
	{
		return default(int);
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xCC53EC", Offset = "0xCC53EC", VA = "0xCC53EC")]
	public int[] GetUnlockedCubeItem(int gateId, ref bool isNewFunction)
	{
		return null;
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xCC556C", Offset = "0xCC556C", VA = "0xCC556C")]
	public int GetUnlockedGateId(CareerDiff cd, int maxGateId = 50)
	{
		return default(int);
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xCC5680", Offset = "0xCC5680", VA = "0xCC5680")]
	public bool IsUnLockHard()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A7")]
public class LevelConstData
{
	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LevelConst[] levelConsts;

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xCC294C", Offset = "0xCC294C", VA = "0xCC294C")]
	public LevelConstData(List<LevelConst> list)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xCC568C", Offset = "0xCC568C", VA = "0xCC568C")]
	public LevelConst GetLevelConst(int level)
	{
		return null;
	}
}
[Token(Token = "0x20002A8")]
public class GateSoldierData
{
	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GateSoldierWrapper> list;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, GateSoldierWrapper> dict;

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xCC2B58", Offset = "0xCC2B58", VA = "0xCC2B58")]
	public GateSoldierData(List<GateSoldier> list)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xCC586C", Offset = "0xCC586C", VA = "0xCC586C")]
	public GateSoldierWrapper GetGateSoldier(int gateId, int wave)
	{
		return null;
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xCC5954", Offset = "0xCC5954", VA = "0xCC5954")]
	public int GetGateSoldierCount(int gateId)
	{
		return default(int);
	}
}
[Token(Token = "0x20002AB")]
public class GateSoldierWrapper
{
	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GateSoldier gateSoldier;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gateId;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int waveId;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] soldiers;

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xCC56D0", Offset = "0xCC56D0", VA = "0xCC56D0")]
	public GateSoldierWrapper(GateSoldier gs)
	{
	}
}
[Token(Token = "0x20002AC")]
public class HttpServerObjectView : MonoBehaviour
{
	[Token(Token = "0x20002AD")]
	[CompilerGenerated]
	private sealed class <SendErrorMsg>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string data;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xCCA7F4", Offset = "0xCCA7F4", VA = "0xCCA7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0xCCA83C", Offset = "0xCCA83C", VA = "0xCCA83C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xCC60D4", Offset = "0xCC60D4", VA = "0xCC60D4")]
		[DebuggerHidden]
		public <SendErrorMsg>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xCCA03C", Offset = "0xCCA03C", VA = "0xCCA03C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xCCA058", Offset = "0xCCA058", VA = "0xCCA058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xCCA744", Offset = "0xCCA744", VA = "0xCCA744")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xCCA7FC", Offset = "0xCCA7FC", VA = "0xCCA7FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AE")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool firstInitOver;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string error;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ret;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool entitled;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string accessToken;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string openId;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string nickName;

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xCCA844", Offset = "0xCCA844", VA = "0xCCA844")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xCCA84C", Offset = "0xCCA84C", VA = "0xCCA84C")]
		internal void <DoLogin>b__0(Message<PlatformInitializeResult> m)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xCCAA80", Offset = "0xCCAA80", VA = "0xCCAA80")]
		internal void <DoLogin>b__1(Assets.FitBoxing.Scripts.PlatformAdapater.Message msg)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xCCAB10", Offset = "0xCCAB10", VA = "0xCCAB10")]
		internal void <DoLogin>b__2(Message<string> msg)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xCCABF4", Offset = "0xCCABF4", VA = "0xCCABF4")]
		internal void <DoLogin>b__3(Message<VUser> msg)
		{
		}
	}

	[Token(Token = "0x20002AF")]
	[CompilerGenerated]
	private sealed class <DoLogin>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass12_0 <>8__1;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HttpServerObjectView <>4__this;

		[Token(Token = "0x170002E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xCCB5D4", Offset = "0xCCB5D4", VA = "0xCCB5D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xCCB61C", Offset = "0xCCB61C", VA = "0xCCB61C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xCC60FC", Offset = "0xCC60FC", VA = "0xCC60FC")]
		[DebuggerHidden]
		public <DoLogin>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xCCACF8", Offset = "0xCCACF8", VA = "0xCCACF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xCCACFC", Offset = "0xCCACFC", VA = "0xCCACFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xCCB5DC", Offset = "0xCCB5DC", VA = "0xCCB5DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private sealed class <ToMainScene>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HttpServerObjectView <>4__this;

		[Token(Token = "0x170002E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xCCCEB0", Offset = "0xCCCEB0", VA = "0xCCCEB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xCCCEF8", Offset = "0xCCCEF8", VA = "0xCCCEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xCCCB40", Offset = "0xCCCB40", VA = "0xCCCB40")]
		[DebuggerHidden]
		public <ToMainScene>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xCCCB68", Offset = "0xCCCB68", VA = "0xCCCB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xCCCB6C", Offset = "0xCCCB6C", VA = "0xCCCB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xCCCEB8", Offset = "0xCCCEB8", VA = "0xCCCEB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B4")]
	[CompilerGenerated]
	private sealed class <GetRequest>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutMessage outMsg;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xCCD328", Offset = "0xCCD328", VA = "0xCCD328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xCCD370", Offset = "0xCCD370", VA = "0xCCD370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xCCCF3C", Offset = "0xCCCF3C", VA = "0xCCCF3C")]
		[DebuggerHidden]
		public <GetRequest>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xCCCF64", Offset = "0xCCCF64", VA = "0xCCCF64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xCCCF80", Offset = "0xCCCF80", VA = "0xCCCF80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xCCD278", Offset = "0xCCD278", VA = "0xCCD278")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xCCD330", Offset = "0xCCD330", VA = "0xCCD330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B5")]
	[CompilerGenerated]
	private sealed class <GetUrl>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xCCD6C4", Offset = "0xCCD6C4", VA = "0xCCD6C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xCCD70C", Offset = "0xCCD70C", VA = "0xCCD70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xCCD378", Offset = "0xCCD378", VA = "0xCCD378")]
		[DebuggerHidden]
		public <GetUrl>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xCCD3A0", Offset = "0xCCD3A0", VA = "0xCCD3A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xCCD3BC", Offset = "0xCCD3BC", VA = "0xCCD3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xCCD614", Offset = "0xCCD614", VA = "0xCCD614")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xCCD6CC", Offset = "0xCCD6CC", VA = "0xCCD6CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B6")]
	[CompilerGenerated]
	private sealed class <PostRequest>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Message m;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OutMessage outMsg;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xCCE090", Offset = "0xCCE090", VA = "0xCCE090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xCCE0D8", Offset = "0xCCE0D8", VA = "0xCCE0D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xCCD714", Offset = "0xCCD714", VA = "0xCCD714")]
		[DebuggerHidden]
		public <PostRequest>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xCCD73C", Offset = "0xCCD73C", VA = "0xCCD73C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xCCD758", Offset = "0xCCD758", VA = "0xCCD758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xCCDFE0", Offset = "0xCCDFE0", VA = "0xCCDFE0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xCCE098", Offset = "0xCCE098", VA = "0xCCE098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VersionInfo vi;

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xCCE490", Offset = "0xCCE490", VA = "0xCCE490")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xCCE498", Offset = "0xCCE498", VA = "0xCCE498")]
		internal void <CheckVersion>b__2()
		{
		}
	}

	[Token(Token = "0x20002B9")]
	[CompilerGenerated]
	private sealed class <CheckVersion>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HttpServerObjectView <>4__this;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> action;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass49_0 <>8__1;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xCCF144", Offset = "0xCCF144", VA = "0xCCF144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xCCF18C", Offset = "0xCCF18C", VA = "0xCCF18C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xCCE6C0", Offset = "0xCCE6C0", VA = "0xCCE6C0")]
		[DebuggerHidden]
		public <CheckVersion>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xCCE6E8", Offset = "0xCCE6E8", VA = "0xCCE6E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xCCE704", Offset = "0xCCE704", VA = "0xCCE704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xCCF094", Offset = "0xCCF094", VA = "0xCCF094")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xCCF14C", Offset = "0xCCF14C", VA = "0xCCF14C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[CompilerGenerated]
	private sealed class <AfterReconnectedRetry>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xCCF210", Offset = "0xCCF210", VA = "0xCCF210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0xCCF258", Offset = "0xCCF258", VA = "0xCCF258", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xCCF194", Offset = "0xCCF194", VA = "0xCCF194")]
		[DebuggerHidden]
		public <AfterReconnectedRetry>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xCCF1BC", Offset = "0xCCF1BC", VA = "0xCCF1BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xCCF1C0", Offset = "0xCCF1C0", VA = "0xCCF1C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xCCF218", Offset = "0xCCF218", VA = "0xCCF218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isExit;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static HttpServerObjectView _instance;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public System.Action afterReloginCallback;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFirstTime;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool coreServiceInited;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<System.Action> actionList;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int connectionStatus;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int serverStatus;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private long lastTickTime;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lastTickReturnTime;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Thread threadSend;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Route route;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PushDefault pd;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ReqLogin r;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ServerEventTrigger trigger;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DateTime lastReloginTime;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public object reloginCallbackLock;

	[Token(Token = "0x170002E3")]
	public static HttpServerObjectView instance
	{
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xCC5C10", Offset = "0xCC5C10", VA = "0xCC5C10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E4")]
	public Route GetRoute
	{
		[Token(Token = "0x6001215")]
		[Address(RVA = "0xCC8BA4", Offset = "0xCC8BA4", VA = "0xCC8BA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xCC5C58", Offset = "0xCC5C58", VA = "0xCC5C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xCC5C5C", Offset = "0xCC5C5C", VA = "0xCC5C5C")]
	public void InitView()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xCC5F08", Offset = "0xCC5F08", VA = "0xCC5F08")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xCC5F0C", Offset = "0xCC5F0C", VA = "0xCC5F0C")]
	private void ConnectOK(bool b)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xCC6060", Offset = "0xCC6060", VA = "0xCC6060")]
	[IteratorStateMachine(typeof(<SendErrorMsg>d__10))]
	public IEnumerator SendErrorMsg(string data)
	{
		return null;
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xCC5FDC", Offset = "0xCC5FDC", VA = "0xCC5FDC")]
	[IteratorStateMachine(typeof(<DoLogin>d__12))]
	public IEnumerator DoLogin(float delay)
	{
		return null;
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xCC6124", Offset = "0xCC6124", VA = "0xCC6124")]
	public void RequstPermission()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xCC62D8", Offset = "0xCC62D8", VA = "0xCC62D8")]
	public void GetPermission()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xCC63FC", Offset = "0xCC63FC", VA = "0xCC63FC")]
	public void Login()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xCBF834", Offset = "0xCBF834", VA = "0xCBF834")]
	public void ShowRelogin()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xCC6748", Offset = "0xCC6748", VA = "0xCC6748")]
	public void DoLoginToServer()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xCC6860", Offset = "0xCC6860", VA = "0xCC6860")]
	private void SetLoginTips(string info)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xCC69A4", Offset = "0xCC69A4", VA = "0xCC69A4")]
	private void DoRetry()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xCC69CC", Offset = "0xCC69CC", VA = "0xCC69CC")]
	private void AfterUserLogin(TinyUser tu, User user, UserAccount ua, UserExtend pe, GlobalServerData serverData)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xCC6D14", Offset = "0xCC6D14", VA = "0xCC6D14")]
	[IteratorStateMachine(typeof(<ToMainScene>d__21))]
	private IEnumerator ToMainScene()
	{
		return null;
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xCC6BEC", Offset = "0xCC6BEC", VA = "0xCC6BEC")]
	public void AfterLogin(TinyUser tp, User p, UserAccount ua, UserExtend pe)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xCC727C", Offset = "0xCC727C", VA = "0xCC727C")]
	private void H()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xCC751C", Offset = "0xCC751C", VA = "0xCC751C")]
	private void O(string a, bool b, long c, string d)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xCC6D88", Offset = "0xCC6D88", VA = "0xCC6D88")]
	private void AddEvent()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xCC79F0", Offset = "0xCC79F0", VA = "0xCC79F0")]
	private void PushExample(User p)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xCC7AD0", Offset = "0xCC7AD0", VA = "0xCC7AD0")]
	private void HelloBool(BattleAward b)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xCC7B28", Offset = "0xCC7B28", VA = "0xCC7B28")]
	private void Hello(BattleAward ba)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xCC669C", Offset = "0xCC669C", VA = "0xCC669C")]
	public void RunNextFrame(System.Action action)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xCC7BF8", Offset = "0xCC7BF8", VA = "0xCC7BF8")]
	public void LogOut()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xCBC514", Offset = "0xCBC514", VA = "0xCBC514")]
	public void CreateRequest(OutMessage outMsg, Message m)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xCC7CC0", Offset = "0xCC7CC0", VA = "0xCC7CC0")]
	[IteratorStateMachine(typeof(<GetRequest>d__33))]
	public IEnumerator GetRequest(OutMessage outMsg, Message m)
	{
		return null;
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xCC7D34", Offset = "0xCC7D34", VA = "0xCC7D34")]
	[IteratorStateMachine(typeof(<GetUrl>d__34))]
	public IEnumerator GetUrl(string url)
	{
		return null;
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xCC7DA8", Offset = "0xCC7DA8", VA = "0xCC7DA8")]
	[IteratorStateMachine(typeof(<PostRequest>d__35))]
	public IEnumerator PostRequest(OutMessage outMsg, Message m)
	{
		return null;
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xCC7E38", Offset = "0xCC7E38", VA = "0xCC7E38")]
	private static void ThreadHandleRequest(ReceiveMsg msg, RemoteHandler h)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xCC7F40", Offset = "0xCC7F40", VA = "0xCC7F40")]
	private static void HandlePushList(List<PushContent> pushList)
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xCC8234", Offset = "0xCC8234", VA = "0xCC8234")]
	private static void HandlePush(string methodName, ReceiveMsg msg, bool combined)
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xCC8750", Offset = "0xCC8750", VA = "0xCC8750")]
	private void Update()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xCC5D74", Offset = "0xCC5D74", VA = "0xCC5D74")]
	public bool DoStartNetwork(Action<bool> action)
	{
		return default(bool);
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xCC8BAC", Offset = "0xCC8BAC", VA = "0xCC8BAC")]
	[IteratorStateMachine(typeof(<CheckVersion>d__49))]
	public IEnumerator CheckVersion(Action<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xCC5D6C", Offset = "0xCC5D6C", VA = "0xCC5D6C")]
	private void InitServer()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xCC8C3C", Offset = "0xCC8C3C", VA = "0xCC8C3C")]
	private void AfterConnectAndReg(bool b)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xCC8E90", Offset = "0xCC8E90", VA = "0xCC8E90")]
	private void PushSessionNotLogin(int type)
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xCC8F94", Offset = "0xCC8F94", VA = "0xCC8F94")]
	private void PushSessionKill(int type)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xCC9078", Offset = "0xCC9078", VA = "0xCC9078")]
	private void PushNotice(List<Notice> list)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xCC90BC", Offset = "0xCC90BC", VA = "0xCC90BC")]
	private void PushServerMsg(int type, string info)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xCC9184", Offset = "0xCC9184", VA = "0xCC9184")]
	[IteratorStateMachine(typeof(<AfterReconnectedRetry>d__59))]
	public IEnumerator AfterReconnectedRetry()
	{
		return null;
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xCC91E4", Offset = "0xCC91E4", VA = "0xCC91E4")]
	public bool IsRecentlyRelogin()
	{
		return default(bool);
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xCC91EC", Offset = "0xCC91EC", VA = "0xCC91EC")]
	private void AutoLoginRet(int s, long t, Player p)
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xCC967C", Offset = "0xCC967C", VA = "0xCC967C")]
	public void DestroySelf()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xCC7C70", Offset = "0xCC7C70", VA = "0xCC7C70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xCC9950", Offset = "0xCC9950", VA = "0xCC9950")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xCC9954", Offset = "0xCC9954", VA = "0xCC9954")]
	public HttpServerObjectView()
	{
	}
}
[Token(Token = "0x20002BB")]
public class PersistInstance : MonoBehaviour
{
	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool exists;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PersistInstance _instance;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<System.Action> actionList;

	[Token(Token = "0x170002F5")]
	public static PersistInstance instance
	{
		[Token(Token = "0x6001271")]
		[Address(RVA = "0xCCF260", Offset = "0xCCF260", VA = "0xCCF260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xCCF2A8", Offset = "0xCCF2A8", VA = "0xCCF2A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xCCF2AC", Offset = "0xCCF2AC", VA = "0xCCF2AC")]
	public void InitView()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xCCF364", Offset = "0xCCF364", VA = "0xCCF364")]
	public void RunNextFrame(System.Action action)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xCCF410", Offset = "0xCCF410", VA = "0xCCF410")]
	private void Update()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xCCF4C8", Offset = "0xCCF4C8", VA = "0xCCF4C8")]
	public PersistInstance()
	{
	}
}
[Token(Token = "0x20002BC")]
public class Boolable
{
	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool retry;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Func<bool> BeforeOnOkAction;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public System.Action OnOkAction;

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xCCF550", Offset = "0xCCF550", VA = "0xCCF550")]
	public Boolable()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xCCF558", Offset = "0xCCF558", VA = "0xCCF558")]
	public Boolable(bool b)
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xCCF580", Offset = "0xCCF580", VA = "0xCCF580")]
	public bool Value()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002BD")]
public class ServerListenerView : MonoBehaviour
{
	[Token(Token = "0x20002BE")]
	public static class ExceptionHandler
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0xCD09D4", Offset = "0xCD09D4", VA = "0xCD09D4")]
		public static bool HandleMoreException(BizException be)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002BF")]
	[CompilerGenerated]
	private sealed class <FrameAction>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public System.Action action;

		[Token(Token = "0x170002F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xCD1744", Offset = "0xCD1744", VA = "0xCD1744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xCD178C", Offset = "0xCD178C", VA = "0xCD178C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xCD07B4", Offset = "0xCD07B4", VA = "0xCD07B4")]
		[DebuggerHidden]
		public <FrameAction>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xCD16D4", Offset = "0xCD16D4", VA = "0xCD16D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xCD16D8", Offset = "0xCD16D8", VA = "0xCD16D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xCD174C", Offset = "0xCD174C", VA = "0xCD174C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C1")]
	[CompilerGenerated]
	private sealed class <ShowDelay2s>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public System.Action action;

		[Token(Token = "0x170002F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xCD1A58", Offset = "0xCD1A58", VA = "0xCD1A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xCD1AA0", Offset = "0xCD1AA0", VA = "0xCD1AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xCD0F04", Offset = "0xCD0F04", VA = "0xCD0F04")]
		[DebuggerHidden]
		public <ShowDelay2s>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xCD1940", Offset = "0xCD1940", VA = "0xCD1940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xCD1944", Offset = "0xCD1944", VA = "0xCD1944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xCD1A60", Offset = "0xCD1A60", VA = "0xCD1A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isEnabled;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool isRequestStart;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool isResponseReturn;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool isShowWaiting;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool isTimeOut;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	private static bool isErrInfoStatic;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BizException errInfo;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isLoginTimeOut;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool isConnectionFailed;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Boolable isReConnetion;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool isReconnectLogin;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Queue<System.Action> nextFrameDo;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Queue<OutMessage> timeoutMsgList;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static object reconnectFlag;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int ConnectionServerErrorCount;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string LoginTimeOutInfo;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isTermination;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string TerminationInfo;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static bool isMoneyNotEnought;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string MoneyNotEnoughtCode;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static bool isLoadingClose;

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xCCF588", Offset = "0xCCF588", VA = "0xCCF588")]
	public static void ResetFlags()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xCCF634", Offset = "0xCCF634", VA = "0xCCF634")]
	public static void showResponseReturnByStatic()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xCCF690", Offset = "0xCCF690", VA = "0xCCF690")]
	public static void showRequestStartByStatic()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xCCF6EC", Offset = "0xCCF6EC", VA = "0xCCF6EC")]
	public static void showWaitingByStatic()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xCCF748", Offset = "0xCCF748", VA = "0xCCF748")]
	public static void showTimeOutByStatic(OutMessage outMsg)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xCCF7D0", Offset = "0xCCF7D0", VA = "0xCCF7D0")]
	public static void showErrInfoByStatic(BizException info)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xCCF838", Offset = "0xCCF838", VA = "0xCCF838")]
	private void Start()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xCCF83C", Offset = "0xCCF83C", VA = "0xCCF83C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xCD0740", Offset = "0xCD0740", VA = "0xCD0740")]
	[IteratorStateMachine(typeof(<FrameAction>d__21))]
	private IEnumerator FrameAction(System.Action action)
	{
		return null;
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xCCFC94", Offset = "0xCCFC94", VA = "0xCCFC94")]
	private void ShowResponseReturnBack()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xCCFCA0", Offset = "0xCCFCA0", VA = "0xCCFCA0")]
	private void ShowRequestStartBack()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xCCFCAC", Offset = "0xCCFCAC", VA = "0xCCFCAC")]
	private void ShowWaitingBack()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xCCFCD4", Offset = "0xCCFCD4", VA = "0xCCFCD4")]
	private void showTimeOut()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xCD07DC", Offset = "0xCD07DC", VA = "0xCD07DC")]
	private void TimeOutRetry()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xCD09CC", Offset = "0xCD09CC", VA = "0xCD09CC")]
	private void TimeOutBack()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xCCFE1C", Offset = "0xCCFE1C", VA = "0xCCFE1C")]
	private void showErrInfo()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xCD0C7C", Offset = "0xCD0C7C", VA = "0xCD0C7C")]
	private void ErrInfoOK()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xCD0C80", Offset = "0xCD0C80", VA = "0xCD0C80")]
	public static void ReconnectLogin()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xCD0CDC", Offset = "0xCD0CDC", VA = "0xCD0CDC")]
	public static void showConnectionFailedByStatic(Boolable reconnet)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xCD004C", Offset = "0xCD004C", VA = "0xCD004C")]
	private void showConnectionFailed()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xCD0E90", Offset = "0xCD0E90", VA = "0xCD0E90")]
	[IteratorStateMachine(typeof(<ShowDelay2s>d__36))]
	private IEnumerator ShowDelay2s(System.Action action)
	{
		return null;
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xCD0F2C", Offset = "0xCD0F2C", VA = "0xCD0F2C")]
	private void ConnectionFailedBackOK()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xCD1174", Offset = "0xCD1174", VA = "0xCD1174")]
	private void ConnectionFailedBackNot()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xCD117C", Offset = "0xCD117C", VA = "0xCD117C")]
	public static void showTokenTimeOutByStatic(string str)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xCD02D0", Offset = "0xCD02D0", VA = "0xCD02D0")]
	public void showTokenTimeOut()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xCD12A8", Offset = "0xCD12A8", VA = "0xCD12A8")]
	private void TokenTimeOutBack()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xCD12B0", Offset = "0xCD12B0", VA = "0xCD12B0")]
	public static void ShowTerminationByStatic(string str)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xCD03A4", Offset = "0xCD03A4", VA = "0xCD03A4")]
	private void showTermination()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xCD1324", Offset = "0xCD1324", VA = "0xCD1324")]
	private void showTerminationBack()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xCD13F8", Offset = "0xCD13F8", VA = "0xCD13F8")]
	public static void ShowMoneyNotEnoughtByStatic(string code)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xCD0478", Offset = "0xCD0478", VA = "0xCD0478")]
	public void ShowMoneyNotEnought()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xCD146C", Offset = "0xCD146C", VA = "0xCD146C")]
	private void ShowMoneyNotEnoughtBack()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xCD1470", Offset = "0xCD1470", VA = "0xCD1470")]
	public static void ShowLoadingCloseByStatic()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xCD06DC", Offset = "0xCD06DC", VA = "0xCD06DC")]
	private static void ShowLoadingClose()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xCD14CC", Offset = "0xCD14CC", VA = "0xCD14CC")]
	public ServerListenerView()
	{
	}
}
[Token(Token = "0x20002C2")]
public class ServerObjectView : MonoBehaviour
{
	[Token(Token = "0x20002C3")]
	[CompilerGenerated]
	private sealed class <AfterReconnectedRetry>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xCD3814", Offset = "0xCD3814", VA = "0xCD3814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xCD385C", Offset = "0xCD385C", VA = "0xCD385C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xCD2678", Offset = "0xCD2678", VA = "0xCD2678")]
		[DebuggerHidden]
		public <AfterReconnectedRetry>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xCD37C0", Offset = "0xCD37C0", VA = "0xCD37C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xCD37C4", Offset = "0xCD37C4", VA = "0xCD37C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xCD381C", Offset = "0xCD381C", VA = "0xCD381C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isExit;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ServerObjectView _instance;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public System.Action afterReloginCallback;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFirstTime;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<System.Action> actionList;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Thread threadSend;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Route route;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PushDefault pd;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ReqLogin r;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DateTime lastReloginTime;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public object reloginCallbackLock;

	[Token(Token = "0x170002FA")]
	public static ServerObjectView instance
	{
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xCD1AA8", Offset = "0xCD1AA8", VA = "0xCD1AA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002FB")]
	public Route GetRoute
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xCD1DAC", Offset = "0xCD1DAC", VA = "0xCD1DAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xCD1AF0", Offset = "0xCD1AF0", VA = "0xCD1AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xCD1AF4", Offset = "0xCD1AF4", VA = "0xCD1AF4")]
	public void initView()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xCD1C34", Offset = "0xCD1C34", VA = "0xCD1C34")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xCD1C38", Offset = "0xCD1C38", VA = "0xCD1C38")]
	public void RunNextFrame(System.Action action)
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xCD1CE4", Offset = "0xCD1CE4", VA = "0xCD1CE4")]
	public void LogOut()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xCD1DB4", Offset = "0xCD1DB4", VA = "0xCD1DB4")]
	public bool DoStartNetwork(Action<bool> action)
	{
		return default(bool);
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xCD1BB4", Offset = "0xCD1BB4", VA = "0xCD1BB4")]
	private void InitServer()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xCD1F3C", Offset = "0xCD1F3C", VA = "0xCD1F3C")]
	private void AfterConnectAndReg(bool b)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xCD22F8", Offset = "0xCD22F8", VA = "0xCD22F8")]
	private void PushSessionNotLogin(int type)
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xCD2468", Offset = "0xCD2468", VA = "0xCD2468")]
	private void PushSessionKill(int type)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xCD253C", Offset = "0xCD253C", VA = "0xCD253C")]
	private void PushNotice(List<Notice> list)
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xCD2580", Offset = "0xCD2580", VA = "0xCD2580")]
	private void PushServerMsg(int type, string info)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xCD2634", Offset = "0xCD2634", VA = "0xCD2634")]
	private void PushUserInfo(User player)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xCD06E0", Offset = "0xCD06E0", VA = "0xCD06E0")]
	[IteratorStateMachine(typeof(<AfterReconnectedRetry>d__26))]
	public IEnumerator AfterReconnectedRetry()
	{
		return null;
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xCD26A0", Offset = "0xCD26A0", VA = "0xCD26A0")]
	public bool IsRecentlyRelogin()
	{
		return default(bool);
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xCD26A8", Offset = "0xCD26A8", VA = "0xCD26A8")]
	private void AutoLoginRet(int s, long t, Player p)
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xCD2D48", Offset = "0xCD2D48", VA = "0xCD2D48")]
	public void DestroySelf()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xCD1D5C", Offset = "0xCD1D5C", VA = "0xCD1D5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xCD36BC", Offset = "0xCD36BC", VA = "0xCD36BC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xCD36C0", Offset = "0xCD36C0", VA = "0xCD36C0")]
	public ServerObjectView()
	{
	}
}
[Token(Token = "0x20002C4")]
public class UserInstance
{
	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserInstance _instance;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float battleSpeed;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int difficultyLevel;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UserSoldierLevelWrapper soldierLevels;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UserCareerWrapper career;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UserDragonLevel udl;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UserEvent ue;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GlobalServerData serverData;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private User userInfo;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float soundVolume;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public long Delta_T;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UserPackWrapper userPack;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TinyUser _loginInfo;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int unlockSoldierId;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int unlockSoldierShowId;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<LocalNotice> EventNoticeList;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<LocalNotice> BroadcastNotice;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Queue<List<string>> UserSpeakContent;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isLoading;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UserExtend userExtend;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UserAccount userAccount;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CurrentBattle currentBattle;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int unLockDragon;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int unLockDragonShow;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long accountId;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string token;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string nickname;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string serverId;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int headId;

	[Token(Token = "0x170002FE")]
	public static UserInstance instance
	{
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xCD3864", Offset = "0xCD3864", VA = "0xCD3864")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002FF")]
	public int gameMode
	{
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xCD3BE4", Offset = "0xCD3BE4", VA = "0xCD3BE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000300")]
	public static bool isLogin
	{
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xCD23EC", Offset = "0xCD23EC", VA = "0xCD23EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000301")]
	public UserDetail userDetail
	{
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xCD3C70", Offset = "0xCD3C70", VA = "0xCD3C70")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xCD3CF4", Offset = "0xCD3CF4", VA = "0xCD3CF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000302")]
	public TinyUser LoginInfo
	{
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xCD3D68", Offset = "0xCD3D68", VA = "0xCD3D68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xCD3E0C", Offset = "0xCD3E0C", VA = "0xCD3E0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000303")]
	public bool IsDragonUnlock
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xCD42FC", Offset = "0xCD42FC", VA = "0xCD42FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000304")]
	public User UserInfo
	{
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xCD431C", Offset = "0xCD431C", VA = "0xCD431C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000305")]
	public UserExtend UserExtend
	{
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xCD3CDC", Offset = "0xCD3CDC", VA = "0xCD3CDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xCD4324", Offset = "0xCD4324", VA = "0xCD4324")]
		set
		{
		}
	}

	[Token(Token = "0x17000306")]
	public UserAccount UserAccount
	{
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xCD432C", Offset = "0xCD432C", VA = "0xCD432C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xCD4344", Offset = "0xCD4344", VA = "0xCD4344")]
		set
		{
		}
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xCD3A40", Offset = "0xCD3A40", VA = "0xCD3A40")]
	public string GetServerConfig(string key)
	{
		return null;
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xCD3BFC", Offset = "0xCD3BFC", VA = "0xCD3BFC")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xCD3E14", Offset = "0xCD3E14", VA = "0xCD3E14")]
	public long GetServerTime()
	{
		return default(long);
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xCD3EA4", Offset = "0xCD3EA4", VA = "0xCD3EA4")]
	public void SetFakeUserSoldierLevel(int level)
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xCD3ECC", Offset = "0xCD3ECC", VA = "0xCD3ECC")]
	public void CreateFakeLevelFirst5(int level)
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xCD3EF4", Offset = "0xCD3EF4", VA = "0xCD3EF4")]
	public void SetFakeCareer()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xCD3FD8", Offset = "0xCD3FD8", VA = "0xCD3FD8")]
	public void SetCareer(UserCareer uc)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xCD4050", Offset = "0xCD4050", VA = "0xCD4050")]
	public void SetSoldierLevel(UserSoldierLevel usl)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xCD40C8", Offset = "0xCD40C8", VA = "0xCD40C8")]
	public void SetDragonLevel(UserDragonLevel udl)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xCD40D0", Offset = "0xCD40D0", VA = "0xCD40D0")]
	public void SetPlayerLevel(int level)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xCD40EC", Offset = "0xCD40EC", VA = "0xCD40EC")]
	public void SetUserEvent(UserEvent ue)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xCD40F4", Offset = "0xCD40F4", VA = "0xCD40F4")]
	public void DoLogin(User userBase)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xCD40FC", Offset = "0xCD40FC", VA = "0xCD40FC")]
	public void InitPack(List<GoodsAndCount> list)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xCD4174", Offset = "0xCD4174", VA = "0xCD4174")]
	public void UnlockSoldier(int id)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xCD417C", Offset = "0xCD417C", VA = "0xCD417C")]
	public void OnFullClothUpdate(string str)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xCD422C", Offset = "0xCD422C", VA = "0xCD422C")]
	public void OnSeasonRankUpdate(List<RankInfo> list)
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xCD42F8", Offset = "0xCD42F8", VA = "0xCD42F8")]
	public void OnSingleCardUpdate(CardNft cardNft)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xCD3C60", Offset = "0xCD3C60", VA = "0xCD3C60")]
	public bool IsLogin()
	{
		return default(bool);
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xCD434C", Offset = "0xCD434C", VA = "0xCD434C")]
	public void UnLockDragon(int flag)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xCD391C", Offset = "0xCD391C", VA = "0xCD391C")]
	public UserInstance()
	{
	}
}
[Token(Token = "0x20002C5")]
public class Player
{
	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xCD44F0", Offset = "0xCD44F0", VA = "0xCD44F0")]
	public Player()
	{
	}
}
[Token(Token = "0x20002C6")]
public class CurrentBattle
{
	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long battleId;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string salt;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int difficultyLevel;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int sceneId;

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xCD44F8", Offset = "0xCD44F8", VA = "0xCD44F8")]
	public CurrentBattle()
	{
	}
}
[Token(Token = "0x20002C7")]
public class WebSocketFakeRoomPlugs : MonoBehaviour, INetSocket
{
	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int testId;

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xCD4500", Offset = "0xCD4500", VA = "0xCD4500")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xCD4584", Offset = "0xCD4584", VA = "0xCD4584")]
	public void Update()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xCD4714", Offset = "0xCD4714", VA = "0xCD4714")]
	public void DestroySelf()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xCD471C", Offset = "0xCD471C", VA = "0xCD471C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xCD4724", Offset = "0xCD4724", VA = "0xCD4724")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xCD472C", Offset = "0xCD472C", VA = "0xCD472C", Slot = "4")]
	public void SendData(byte[] data)
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xCD4738", Offset = "0xCD4738", VA = "0xCD4738", Slot = "5")]
	public void SetReceiverHandler(Action<byte[]> handler)
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xCD4818", Offset = "0xCD4818", VA = "0xCD4818")]
	public WebSocketFakeRoomPlugs()
	{
	}
}
[Token(Token = "0x20002C8")]
public enum MoudleType
{
	[Token(Token = "0x4000EC0")]
	moulde,
	[Token(Token = "0x4000EC1")]
	window
}
[Token(Token = "0x20002C9")]
public abstract class BaseController
{
	[Token(Token = "0x20002CA")]
	[CompilerGenerated]
	private sealed class <CloseLoadingPanel>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000307")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xCD5FA8", Offset = "0xCD5FA8", VA = "0xCD5FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xCD5FF0", Offset = "0xCD5FF0", VA = "0xCD5FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xCD4F0C", Offset = "0xCD4F0C", VA = "0xCD4F0C")]
		[DebuggerHidden]
		public <CloseLoadingPanel>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xCD5ECC", Offset = "0xCD5ECC", VA = "0xCD5ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xCD5ED0", Offset = "0xCD5ED0", VA = "0xCD5ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xCD5FB0", Offset = "0xCD5FB0", VA = "0xCD5FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool dontDestroy;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool HideTop;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool loadViewFinish;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MoudleType type;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseModel model;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public System.Action DoinitFinish;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MonoBehaviour oldMb;

	[Token(Token = "0x60012F6")]
	public abstract BaseView GetView();

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xCD4828", Offset = "0xCD4828", VA = "0xCD4828")]
	public BaseController()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xCD4A8C", Offset = "0xCD4A8C", VA = "0xCD4A8C")]
	public BaseController(MoudleType type)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xCD4B3C", Offset = "0xCD4B3C", VA = "0xCD4B3C", Slot = "5")]
	public virtual void BeforDoinit(System.Action DoinitFinish)
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xCD4B8C", Offset = "0xCD4B8C", VA = "0xCD4B8C", Slot = "6")]
	public virtual void DoInit()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xCD4B90", Offset = "0xCD4B90", VA = "0xCD4B90", Slot = "7")]
	public virtual void DoinitBack(BaseModel model)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xCD4B9C", Offset = "0xCD4B9C", VA = "0xCD4B9C", Slot = "8")]
	public virtual void DoHide(bool isShow)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xCD4D68", Offset = "0xCD4D68", VA = "0xCD4D68", Slot = "9")]
	public virtual void OnHide()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xCD4D6C", Offset = "0xCD4D6C", VA = "0xCD4D6C", Slot = "10")]
	public virtual void OnShow()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xCD4D70", Offset = "0xCD4D70", VA = "0xCD4D70")]
	public void AfterShow()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xCD4EAC", Offset = "0xCD4EAC", VA = "0xCD4EAC")]
	[IteratorStateMachine(typeof(<CloseLoadingPanel>d__17))]
	private IEnumerator CloseLoadingPanel()
	{
		return null;
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xCD4F34", Offset = "0xCD4F34", VA = "0xCD4F34", Slot = "11")]
	public virtual void DoShow(BaseController subMoudle, object obj)
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xCD5230", Offset = "0xCD5230", VA = "0xCD5230")]
	public void DoDestoryImmediately()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xCD5390", Offset = "0xCD5390", VA = "0xCD5390", Slot = "12")]
	public virtual void DoDestory()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xCD595C", Offset = "0xCD595C", VA = "0xCD595C", Slot = "13")]
	public virtual void DoMoveBack(object obj)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xCD5A90", Offset = "0xCD5A90", VA = "0xCD5A90", Slot = "14")]
	public virtual void DoBackHome()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xCD5A94", Offset = "0xCD5A94", VA = "0xCD5A94")]
	private void DestoryOldTurnInAndOut()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xCD517C", Offset = "0xCD517C", VA = "0xCD517C")]
	public MonoBehaviour TurnIn()
	{
		return null;
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xCD5D38", Offset = "0xCD5D38", VA = "0xCD5D38")]
	public MonoBehaviour TurnOut()
	{
		return null;
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xCD5528", Offset = "0xCD5528", VA = "0xCD5528")]
	public MonoBehaviour TurnOutAndDestroy()
	{
		return null;
	}
}
[Token(Token = "0x20002CC")]
public class BaseModel
{
	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, bool> boolDic;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, int> intDic;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, float> floatDic;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> stringDic;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, object> objectDic;

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xCD60E0", Offset = "0xCD60E0", VA = "0xCD60E0")]
	public object GetValue(string name)
	{
		return null;
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xCD612C", Offset = "0xCD612C", VA = "0xCD612C")]
	public void SetBool(string name, bool value)
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xCD61F8", Offset = "0xCD61F8", VA = "0xCD61F8")]
	public bool GetBool(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xCD628C", Offset = "0xCD628C", VA = "0xCD628C")]
	public void SetFloat(string name, float value)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xCD6358", Offset = "0xCD6358", VA = "0xCD6358")]
	public float GetFloat(string name)
	{
		return default(float);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xCD63EC", Offset = "0xCD63EC", VA = "0xCD63EC")]
	public void SetInt(string name, int value)
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xCD64B8", Offset = "0xCD64B8", VA = "0xCD64B8")]
	public int GetInt(string name)
	{
		return default(int);
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xCD654C", Offset = "0xCD654C", VA = "0xCD654C")]
	public void SetString(string name, string value)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xCD6618", Offset = "0xCD6618", VA = "0xCD6618")]
	public string GetString(string name)
	{
		return null;
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xCD66C0", Offset = "0xCD66C0", VA = "0xCD66C0")]
	public void SetObject(string name, object value)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xCD678C", Offset = "0xCD678C", VA = "0xCD678C")]
	public object GetObject(string name)
	{
		return null;
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xCD48C4", Offset = "0xCD48C4", VA = "0xCD48C4")]
	public BaseModel()
	{
	}
}
[Token(Token = "0x20002CD")]
public class BaseView : MonoBehaviour
{
	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BaseController controller;

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xCD6820", Offset = "0xCD6820", VA = "0xCD6820", Slot = "4")]
	public virtual void InitViewExtend()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xCD5170", Offset = "0xCD5170", VA = "0xCD5170")]
	public void InitBack()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xCD682C", Offset = "0xCD682C", VA = "0xCD682C", Slot = "5")]
	public virtual void InitView()
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xCD6830", Offset = "0xCD6830", VA = "0xCD6830", Slot = "6")]
	public virtual void InitData()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xCD6834", Offset = "0xCD6834", VA = "0xCD6834")]
	public void NoFunctionOnClick()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xCD6928", Offset = "0xCD6928", VA = "0xCD6928", Slot = "7")]
	public virtual void ClickBack()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xCD6950", Offset = "0xCD6950", VA = "0xCD6950", Slot = "8")]
	public virtual void ClickHome()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xCD6974", Offset = "0xCD6974", VA = "0xCD6974")]
	public BaseView()
	{
	}
}
[Token(Token = "0x20002CE")]
public class EasyBaseView<T> : BaseView where T : BaseController
{
	[Token(Token = "0x17000309")]
	public T Controller
	{
		[Token(Token = "0x6001328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001327")]
	public T GetController()
	{
		return null;
	}

	[Token(Token = "0x6001329")]
	public override void InitViewExtend()
	{
	}

	[Token(Token = "0x600132A")]
	public EasyBaseView()
	{
	}
}
[Token(Token = "0x20002CF")]
public class EasyBaseController<T> : BaseController, IEasyBaseController where T : BaseView
{
	[Token(Token = "0x20002D0")]
	[CompilerGenerated]
	private sealed class <EasyOnShow>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EasyBaseController<T> <>4__this;

		[Token(Token = "0x1700030A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001336")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001338")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001333")]
		[DebuggerHidden]
		public <EasyOnShow>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001334")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001335")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private new bool loadViewFinish;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T view;

	[Token(Token = "0x600132B")]
	public bool CheckLoadViewFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x600132C")]
	public EasyBaseController()
	{
	}

	[Token(Token = "0x600132D")]
	public EasyBaseController(MoudleType type)
	{
	}

	[Token(Token = "0x600132E")]
	public BaseController Module(MoudleType type)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	public override BaseView GetView()
	{
		return null;
	}

	[Token(Token = "0x6001330")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6001331")]
	[IteratorStateMachine(typeof(EasyBaseController<>.<EasyOnShow>d__8))]
	public IEnumerator EasyOnShow()
	{
		return null;
	}

	[Token(Token = "0x6001332")]
	public virtual void InitData()
	{
	}
}
[Token(Token = "0x20002D1")]
public interface IEasyBaseController
{
	[Token(Token = "0x6001339")]
	bool CheckLoadViewFinish();
}
[Token(Token = "0x20002D2")]
public class GameRandomTool
{
	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] current5Random;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string nextSource;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int autoIncr;

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xCD697C", Offset = "0xCD697C", VA = "0xCD697C")]
	public GameRandomTool(string seed)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xCD6A04", Offset = "0xCD6A04", VA = "0xCD6A04")]
	public int[] CalMD5()
	{
		return null;
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xCD6B9C", Offset = "0xCD6B9C", VA = "0xCD6B9C")]
	private static int[] BytesToInt(byte[] bytes)
	{
		return null;
	}
}
[Token(Token = "0x20002D3")]
public enum ButtonType
{
	[Token(Token = "0x4000EDC")]
	OK,
	[Token(Token = "0x4000EDD")]
	OKCancel,
	[Token(Token = "0x4000EDE")]
	Close,
	[Token(Token = "0x4000EDF")]
	OKClose,
	[Token(Token = "0x4000EE0")]
	OkCancelClose
}
[Token(Token = "0x20002D4")]
public enum ClickType
{
	[Token(Token = "0x4000EE2")]
	OK,
	[Token(Token = "0x4000EE3")]
	Cancel,
	[Token(Token = "0x4000EE4")]
	Close
}
[Token(Token = "0x20002D5")]
public class MessageBox : MonoBehaviour
{
	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel title;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel message;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton ok;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton cancel;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIButton close;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] poss;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<ClickType> eventcallback;

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xCD6CA8", Offset = "0xCD6CA8", VA = "0xCD6CA8")]
	public static GameObject Create()
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xCD6E2C", Offset = "0xCD6E2C", VA = "0xCD6E2C")]
	public static void Show(string message, ButtonType type = ButtonType.OK, [Optional] Action<ClickType> callback, string title = "")
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xCD74CC", Offset = "0xCD74CC", VA = "0xCD74CC")]
	public void Click_OK()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xCD756C", Offset = "0xCD756C", VA = "0xCD756C")]
	public void Click_Cancel()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xCD75A0", Offset = "0xCD75A0", VA = "0xCD75A0")]
	public void Click_Close()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xCD7500", Offset = "0xCD7500", VA = "0xCD7500")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xCD75D4", Offset = "0xCD75D4", VA = "0xCD75D4")]
	public MessageBox()
	{
	}
}
[Token(Token = "0x20002D6")]
public class NextFrameEvent : MonoBehaviour
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isNextEvent;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private System.Action callevent;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int NextEventCount;

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xCD7638", Offset = "0xCD7638", VA = "0xCD7638")]
	private void Update()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xCD76D4", Offset = "0xCD76D4", VA = "0xCD76D4")]
	public void InitView(System.Action back)
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xCD76F8", Offset = "0xCD76F8", VA = "0xCD76F8")]
	public NextFrameEvent()
	{
	}
}
[Token(Token = "0x20002D7")]
public class PrefabAttr : Attribute
{
	[Token(Token = "0x1700030C")]
	public string Path
	{
		[Token(Token = "0x6001348")]
		[Address(RVA = "0xCD7730", Offset = "0xCD7730", VA = "0xCD7730")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001349")]
		[Address(RVA = "0xCD7738", Offset = "0xCD7738", VA = "0xCD7738")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xCD7700", Offset = "0xCD7700", VA = "0xCD7700")]
	public PrefabAttr(string path)
	{
	}
}
[Token(Token = "0x20002D8")]
public class NoStaticTop : Attribute
{
	[Token(Token = "0x600134A")]
	[Address(RVA = "0xCD7740", Offset = "0xCD7740", VA = "0xCD7740")]
	public NoStaticTop()
	{
	}
}
[Token(Token = "0x20002D9")]
public class NoLoadingShow : Attribute
{
	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int i;

	[Token(Token = "0x4000EF2")]
	public const int NO_LOADING = 0;

	[Token(Token = "0x4000EF3")]
	public const int HARD_TURN = 1;

	[Token(Token = "0x1700030D")]
	public string Path
	{
		[Token(Token = "0x600134D")]
		[Address(RVA = "0xCD7778", Offset = "0xCD7778", VA = "0xCD7778")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600134E")]
		[Address(RVA = "0xCD7780", Offset = "0xCD7780", VA = "0xCD7780")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xCD7748", Offset = "0xCD7748", VA = "0xCD7748")]
	public NoLoadingShow()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xCD7750", Offset = "0xCD7750", VA = "0xCD7750")]
	public NoLoadingShow(int i)
	{
	}
}
[Token(Token = "0x20002DA")]
public class AppearEffect : Attribute
{
	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float inDuration;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float outDuration;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool autoDestroy;

	[Token(Token = "0x1700030E")]
	public AppearType AppearType
	{
		[Token(Token = "0x600134F")]
		[Address(RVA = "0xCD7788", Offset = "0xCD7788", VA = "0xCD7788")]
		[CompilerGenerated]
		get
		{
			return default(AppearType);
		}
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xCD7790", Offset = "0xCD7790", VA = "0xCD7790")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xCD7798", Offset = "0xCD7798", VA = "0xCD7798")]
	public AppearEffect(AppearType at)
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xCD77C0", Offset = "0xCD77C0", VA = "0xCD77C0")]
	public AppearEffect(AppearType at, bool autoDestroy)
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xCD77F0", Offset = "0xCD77F0", VA = "0xCD77F0")]
	public AppearEffect(AppearType at, float inDuration, float outDuration)
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xCD782C", Offset = "0xCD782C", VA = "0xCD782C")]
	public AppearEffect(AppearType at, float inDuration, float outDuration, bool autoDestroy)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xCD7870", Offset = "0xCD7870", VA = "0xCD7870")]
	private float checkDefault(bool isIn, float defaultDuration)
	{
		return default(float);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0xCD5B24", Offset = "0xCD5B24", VA = "0xCD5B24")]
	public static AppearEffect Find(MonoBehaviour mb)
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xCD788C", Offset = "0xCD788C", VA = "0xCD788C")]
	public UITweenerAdapter TurnIn(GameObject go, ref MonoBehaviour oldMb, bool autoStart = true)
	{
		return null;
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xCD5C7C", Offset = "0xCD5C7C", VA = "0xCD5C7C")]
	public UITweenerAdapter TurnIn(MonoBehaviour bv, ref MonoBehaviour oldMb, bool autoStart = true)
	{
		return null;
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xCD7CD4", Offset = "0xCD7CD4", VA = "0xCD7CD4")]
	public UITweenerAdapter TurnOut(GameObject go, ref MonoBehaviour oldMb, bool autoStart = true)
	{
		return null;
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xCD5E08", Offset = "0xCD5E08", VA = "0xCD5E08")]
	public UITweenerAdapter TurnOut(MonoBehaviour bv, ref MonoBehaviour oldMb, bool autoStart = true)
	{
		return null;
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xCD8228", Offset = "0xCD8228", VA = "0xCD8228")]
	public UITweenerAdapter EasyTurnIn(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xCD8240", Offset = "0xCD8240", VA = "0xCD8240")]
	public UITweenerAdapter EasyTurnIn(GameObject go, ref MonoBehaviour oldMb)
	{
		return null;
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xCD8324", Offset = "0xCD8324", VA = "0xCD8324")]
	public UITweenerAdapter EasyTurnOut(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xCD833C", Offset = "0xCD833C", VA = "0xCD833C")]
	public UITweenerAdapter EasyTurnOut(GameObject go, ref MonoBehaviour oldMb)
	{
		return null;
	}
}
[Token(Token = "0x20002DC")]
public enum AppearType
{
	[Token(Token = "0x4000EFA")]
	NONE,
	[Token(Token = "0x4000EFB")]
	FADE,
	[Token(Token = "0x4000EFC")]
	FADE_UGUI,
	[Token(Token = "0x4000EFD")]
	MOVE,
	[Token(Token = "0x4000EFE")]
	SHRINK,
	[Token(Token = "0x4000EFF")]
	SHRINK_UGUI
}
[Token(Token = "0x20002DD")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x20002DE")]
	[CompilerGenerated]
	private sealed class <InitManager>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIManager <>4__this;

		[Token(Token = "0x17000310")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xCDDEE8", Offset = "0xCDDEE8", VA = "0xCDDEE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xCDDF30", Offset = "0xCDDF30", VA = "0xCDDF30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xCD9080", Offset = "0xCD9080", VA = "0xCD9080")]
		[DebuggerHidden]
		public <InitManager>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xCDDD9C", Offset = "0xCDDD9C", VA = "0xCDDD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xCDDDA0", Offset = "0xCDDDA0", VA = "0xCDDDA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xCDDEF0", Offset = "0xCDDEF0", VA = "0xCDDEF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DF")]
	[CompilerGenerated]
	private sealed class <CrossScenceLoadingEnumerator>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scenceName;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float subStart;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<LandLoadingController> action;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LandLoadingController lbv;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__2;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperation <op>5__3;

		[Token(Token = "0x17000312")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0xCDE290", Offset = "0xCDE290", VA = "0xCDE290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xCDE2D8", Offset = "0xCDE2D8", VA = "0xCDE2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xCD9B30", Offset = "0xCD9B30", VA = "0xCD9B30")]
		[DebuggerHidden]
		public <CrossScenceLoadingEnumerator>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xCDDF38", Offset = "0xCDDF38", VA = "0xCDDF38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xCDDF3C", Offset = "0xCDDF3C", VA = "0xCDDF3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xCDE298", Offset = "0xCDE298", VA = "0xCDE298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E0")]
	[CompilerGenerated]
	private sealed class <HideLater>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseController bc;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEasyBaseController nextBc;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonoBehaviour <mb>5__2;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <maxWait>5__3;

		[Token(Token = "0x17000314")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0xCDE500", Offset = "0xCDE500", VA = "0xCDE500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0xCDE548", Offset = "0xCDE548", VA = "0xCDE548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xCD9D88", Offset = "0xCD9D88", VA = "0xCD9D88")]
		[DebuggerHidden]
		public <HideLater>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xCDE2E0", Offset = "0xCDE2E0", VA = "0xCDE2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xCDE2E4", Offset = "0xCDE2E4", VA = "0xCDE2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xCDE508", Offset = "0xCDE508", VA = "0xCDE508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E1")]
	[CompilerGenerated]
	private sealed class <NextMoudleInit>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIManager <>4__this;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BaseController nextMoudle;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BaseController <bc>5__2;

		[Token(Token = "0x17000316")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xCDE808", Offset = "0xCDE808", VA = "0xCDE808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xCDE850", Offset = "0xCDE850", VA = "0xCDE850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xCDA108", Offset = "0xCDA108", VA = "0xCDA108")]
		[DebuggerHidden]
		public <NextMoudleInit>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xCDE550", Offset = "0xCDE550", VA = "0xCDE550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xCDE554", Offset = "0xCDE554", VA = "0xCDE554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xCDE810", Offset = "0xCDE810", VA = "0xCDE810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[CompilerGenerated]
	private sealed class <NextMoudleWinInit>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIManager <>4__this;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BaseController nextMoudle;

		[Token(Token = "0x17000318")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xCDEA24", Offset = "0xCDEA24", VA = "0xCDEA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xCDEA6C", Offset = "0xCDEA6C", VA = "0xCDEA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xCDA254", Offset = "0xCDA254", VA = "0xCDA254")]
		[DebuggerHidden]
		public <NextMoudleWinInit>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xCDE858", Offset = "0xCDE858", VA = "0xCDE858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xCDE85C", Offset = "0xCDE85C", VA = "0xCDE85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xCDEA2C", Offset = "0xCDEA2C", VA = "0xCDEA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E8")]
	[CompilerGenerated]
	private sealed class <OnDelay>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public System.Action action;

		[Token(Token = "0x1700031A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xCDEC5C", Offset = "0xCDEC5C", VA = "0xCDEC5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xCDECA4", Offset = "0xCDECA4", VA = "0xCDECA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xCDDA54", Offset = "0xCDDA54", VA = "0xCDDA54")]
		[DebuggerHidden]
		public <OnDelay>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xCDEB94", Offset = "0xCDEB94", VA = "0xCDEB94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xCDEB98", Offset = "0xCDEB98", VA = "0xCDEB98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xCDEC64", Offset = "0xCDEC64", VA = "0xCDEC64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E9")]
	[CompilerGenerated]
	private sealed class <LoadScene>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string toBeLoad;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string toBeUnload;

		[Token(Token = "0x1700031C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xCDF41C", Offset = "0xCDF41C", VA = "0xCDF41C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xCDF464", Offset = "0xCDF464", VA = "0xCDF464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xCDDBEC", Offset = "0xCDDBEC", VA = "0xCDDBEC")]
		[DebuggerHidden]
		public <LoadScene>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xCDECAC", Offset = "0xCDECAC", VA = "0xCDECAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xCDECB0", Offset = "0xCDECB0", VA = "0xCDECB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xCDF424", Offset = "0xCDF424", VA = "0xCDF424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string staticModelPath;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string maskPath;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DateTime nowTime;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string messageBoxPath;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isInGame;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<BaseController> UIList;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string nextSceneName;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static BaseModel nextSceneObject;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool isAudioPlay;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static GameObject gameOb;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showNoticeStart;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static UIManager _instance;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool isFirstEnter;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Coroutine ct;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool HandViewActive;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<System.Action> actionList;

	[Token(Token = "0x4000F10")]
	public const string Boxing = "sBoxing";

	[Token(Token = "0x4000F11")]
	public const string Tutorial = "sBeginnerGuide";

	[Token(Token = "0x4000F12")]
	public const string Bridge = "sBeginBridge";

	[Token(Token = "0x4000F13")]
	public const string Tqzl = "sIronFist";

	[Token(Token = "0x4000F14")]
	public const string MainScene = "sMain";

	[Token(Token = "0x4000F15")]
	public const string SplashLoader = "SplashLoader";

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string FirstLoadingScene;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool IsLoadingState;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string sceneNext;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string sceneCurrent;

	[Token(Token = "0x1700030F")]
	public static UIManager instance
	{
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xCD2B24", Offset = "0xCD2B24", VA = "0xCD2B24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xCD8470", Offset = "0xCD8470", VA = "0xCD8470")]
	public static double NowTime(string s)
	{
		return default(double);
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xCD857C", Offset = "0xCD857C", VA = "0xCD857C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xCD8904", Offset = "0xCD8904", VA = "0xCD8904")]
	private void Start()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xCD8D1C", Offset = "0xCD8D1C", VA = "0xCD8D1C")]
	public void StopAllCoroutineAndNotice()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xCD8D18", Offset = "0xCD8D18", VA = "0xCD8D18")]
	private void AddBeforeEffect()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xCD8A08", Offset = "0xCD8A08", VA = "0xCD8A08")]
	private void InitUIList()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xCD87C4", Offset = "0xCD87C4", VA = "0xCD87C4")]
	private void PlayBGM()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xCD900C", Offset = "0xCD900C", VA = "0xCD900C")]
	[IteratorStateMachine(typeof(<InitManager>d__18))]
	private IEnumerator InitManager()
	{
		return null;
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xCD9008", Offset = "0xCD9008", VA = "0xCD9008")]
	private void AfterCreateFirstModle()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xCD90A8", Offset = "0xCD90A8", VA = "0xCD90A8")]
	public void CreateFirstMoudle(BaseController moudle)
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xCD9348", Offset = "0xCD9348", VA = "0xCD9348")]
	public static void TurnBackScene(string name, BaseModel obj)
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xCD93C8", Offset = "0xCD93C8", VA = "0xCD93C8")]
	public void TurnNextMoudle(BaseController nextMoudle, BaseModel obj)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xCD952C", Offset = "0xCD952C", VA = "0xCD952C")]
	public void TurnNextMoudleLater(BaseController nextMoudle, BaseModel obj)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xCD9614", Offset = "0xCD9614", VA = "0xCD9614")]
	public void TurnNextMoudleWithLoading(BaseController nextMoudle, BaseModel obj, float subStart = 0.02f, float subEnd = 1f, [Optional] System.Action AfterComplete)
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xCD992C", Offset = "0xCD992C", VA = "0xCD992C")]
	public void CrossScenceLoading(Action<LandLoadingController> action, string scenceName, float subMid)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xCD9A7C", Offset = "0xCD9A7C", VA = "0xCD9A7C")]
	[IteratorStateMachine(typeof(<CrossScenceLoadingEnumerator>d__26))]
	public IEnumerator CrossScenceLoadingEnumerator(Action<LandLoadingController> action, LandLoadingController lbv, string scenceName, float subStart, float subEnd)
	{
		return null;
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xCD9218", Offset = "0xCD9218", VA = "0xCD9218")]
	private void ClearMoudle()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xCD9B58", Offset = "0xCD9B58", VA = "0xCD9B58")]
	public BaseController NextMoudleForNewMoudle(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0xCD9CF8", Offset = "0xCD9CF8", VA = "0xCD9CF8")]
	[IteratorStateMachine(typeof(<HideLater>d__29))]
	private IEnumerator HideLater(IEasyBaseController nextBc, BaseController bc)
	{
		return null;
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xCD9DB0", Offset = "0xCD9DB0", VA = "0xCD9DB0")]
	public BaseController NextMoudleImmediately(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xCD9EC4", Offset = "0xCD9EC4", VA = "0xCD9EC4")]
	public BaseController NextMoudleForNewMoudleByMask(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xCDA078", Offset = "0xCDA078", VA = "0xCDA078")]
	[IteratorStateMachine(typeof(<NextMoudleInit>d__32))]
	private IEnumerator NextMoudleInit(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xCD9F58", Offset = "0xCD9F58", VA = "0xCD9F58")]
	private void ShowSwithSmallLoading(BaseController nextMoudle)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xCDA130", Offset = "0xCDA130", VA = "0xCDA130")]
	public BaseController NextMoudleForNewWin(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xCDA1C4", Offset = "0xCDA1C4", VA = "0xCDA1C4")]
	[IteratorStateMachine(typeof(<NextMoudleWinInit>d__35))]
	private IEnumerator NextMoudleWinInit(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0xCDA27C", Offset = "0xCDA27C", VA = "0xCDA27C")]
	public void ToNextMudelRemoveBefore(BaseController nextMoudle)
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xCDA4E0", Offset = "0xCDA4E0", VA = "0xCDA4E0")]
	public void ToNextModleAndRemoeModleByCnt(List<Type> typeList, Type nextType)
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xCDA7F0", Offset = "0xCDA7F0", VA = "0xCDA7F0")]
	public BaseController NextModuleLoading(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xCDA3F4", Offset = "0xCDA3F4", VA = "0xCDA3F4")]
	public BaseController NextMoudle(BaseController nextMoudle)
	{
		return null;
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xCDAD6C", Offset = "0xCDAD6C", VA = "0xCDAD6C")]
	public void HideBeforeAll(Type bc)
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xCDABF0", Offset = "0xCDABF0", VA = "0xCDABF0")]
	public void HideBeforeAll(BaseController bc)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xCDAF28", Offset = "0xCDAF28", VA = "0xCDAF28")]
	public void NextMoudles(List<BaseController> nextMoudles)
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xCDB090", Offset = "0xCDB090", VA = "0xCDB090")]
	public void NextWinMoudles(List<BaseController> nextMoudles)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xCDB1E0", Offset = "0xCDB1E0", VA = "0xCDB1E0")]
	public void GoMoudle(BaseController goMoudle)
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xCD8D74", Offset = "0xCD8D74", VA = "0xCD8D74")]
	public BaseController ToMoudle(string controllerName, BaseModel model)
	{
		return null;
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xCDB4C0", Offset = "0xCDB4C0", VA = "0xCDB4C0")]
	public BaseController FindToMoudle(BaseController bc)
	{
		return null;
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xCDB75C", Offset = "0xCDB75C", VA = "0xCDB75C")]
	public void AddMoudle(BaseController bc)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xCDB840", Offset = "0xCDB840", VA = "0xCDB840")]
	public BaseController ToMoudle(BaseController baseCon, BaseModel model)
	{
		return null;
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xCDBA50", Offset = "0xCDBA50", VA = "0xCDBA50")]
	public BaseController ToMoudleNoShow(BaseController baseCon, BaseModel model)
	{
		return null;
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xCDBC00", Offset = "0xCDBC00", VA = "0xCDBC00")]
	public void ToMoudle(BaseController targetMoudle, int index)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xCD59CC", Offset = "0xCD59CC", VA = "0xCD59CC")]
	public void BackMoudle(BaseController subMoudle, object obj)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0xCDBD24", Offset = "0xCDBD24", VA = "0xCDBD24")]
	public void BackModuleFromWin(BaseController subMoudle)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xCDB310", Offset = "0xCDB310", VA = "0xCDB310")]
	public void ShowBeforeWin(BaseController bc)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xCDBDD0", Offset = "0xCDBDD0", VA = "0xCDBDD0")]
	public void BackViewWithLoading(BaseController controller)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xCDC0DC", Offset = "0xCDC0DC", VA = "0xCDC0DC")]
	public void BackMainMenu()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xCDC2E8", Offset = "0xCDC2E8", VA = "0xCDC2E8")]
	public void TurnBack()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xCDA9F8", Offset = "0xCDA9F8", VA = "0xCDA9F8")]
	public void ClearAsset(bool isBack = false)
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xCD2CBC", Offset = "0xCD2CBC", VA = "0xCD2CBC")]
	public BaseController getCurrUIController()
	{
		return null;
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xCDC360", Offset = "0xCDC360", VA = "0xCDC360")]
	public BaseController GetPrevCont()
	{
		return null;
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xCDC428", Offset = "0xCDC428", VA = "0xCDC428")]
	public GameObject ShowPanel(string name)
	{
		return null;
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xCDC448", Offset = "0xCDC448", VA = "0xCDC448")]
	public GameObject ShowPanel(string name, GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xCDC578", Offset = "0xCDC578", VA = "0xCDC578")]
	public GameObject ShowPanel(string name, string code)
	{
		return null;
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xCD6D8C", Offset = "0xCD6D8C", VA = "0xCD6D8C")]
	public GameObject Load(string path)
	{
		return null;
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0xCDC708", Offset = "0xCDC708", VA = "0xCDC708")]
	public static GameObject getGameObject()
	{
		return null;
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xCDC7C8", Offset = "0xCDC7C8", VA = "0xCDC7C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xCD8A04", Offset = "0xCD8A04", VA = "0xCD8A04")]
	private static void AdaptiveUI()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xCDC7CC", Offset = "0xCDC7CC", VA = "0xCDC7CC")]
	public void TurnDownSound()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xCDCA24", Offset = "0xCDCA24", VA = "0xCDCA24")]
	public void TurnUpSound()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xCDCA5C", Offset = "0xCDCA5C", VA = "0xCDCA5C")]
	public void SetSoundMute()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xCDCAA8", Offset = "0xCDCAA8", VA = "0xCDCAA8")]
	public bool GetPauseState()
	{
		return default(bool);
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xCDCACC", Offset = "0xCDCACC", VA = "0xCDCACC")]
	public bool GetSoundMuteState()
	{
		return default(bool);
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xCDCB10", Offset = "0xCDCB10", VA = "0xCDCB10")]
	public void LoadAudioSoundEffect(string audioname, bool loop = true)
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xCDCB88", Offset = "0xCDCB88", VA = "0xCDCB88")]
	public void LoadAudioEffectOnce(string audioname)
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xCDCE40", Offset = "0xCDCE40", VA = "0xCDCE40")]
	public static Vector3 ShowGeneralPopupTips(GameObject pressingObject, GameObject tipsObject)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xCDD674", Offset = "0xCDD674", VA = "0xCDD674")]
	public void ToggleHandView()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xCDD678", Offset = "0xCDD678", VA = "0xCDD678")]
	public void RunNextFrame(System.Action action)
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xCDD724", Offset = "0xCDD724", VA = "0xCDD724")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xCDD7DC", Offset = "0xCDD7DC", VA = "0xCDD7DC")]
	public void RemoveController(BaseController b)
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xCDD9B0", Offset = "0xCDD9B0", VA = "0xCDD9B0")]
	public Coroutine Delay(float t, System.Action action)
	{
		return null;
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xCDD9D0", Offset = "0xCDD9D0", VA = "0xCDD9D0")]
	[IteratorStateMachine(typeof(<OnDelay>d__87))]
	private IEnumerator OnDelay(float t, System.Action action)
	{
		return null;
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xCDDA7C", Offset = "0xCDDA7C", VA = "0xCDDA7C")]
	public static bool IsRealGuideScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xCDDACC", Offset = "0xCDDACC", VA = "0xCDDACC")]
	public static void DoLoadScene(string toBeLoad, string toBeUnload)
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xCCCE20", Offset = "0xCCCE20", VA = "0xCCCE20")]
	[IteratorStateMachine(typeof(<LoadScene>d__100))]
	public static IEnumerator LoadScene(string toBeLoad, string toBeUnload)
	{
		return null;
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xCDDC14", Offset = "0xCDDC14", VA = "0xCDDC14")]
	public UIManager()
	{
	}
}
[Token(Token = "0x20002EA")]
public class UIMaskFlowScirpt : MonoBehaviour
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BaseController controller;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject goUIMask;

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xCDA91C", Offset = "0xCDA91C", VA = "0xCDA91C")]
	public void InitView(BaseController controller)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xCDF46C", Offset = "0xCDF46C", VA = "0xCDF46C")]
	private void DoNextMoudle()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xCDF4FC", Offset = "0xCDF4FC", VA = "0xCDF4FC")]
	private void DoinitFinishBack()
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xCDF740", Offset = "0xCDF740", VA = "0xCDF740")]
	private void DoinitFinishBackBack()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xCDF5F8", Offset = "0xCDF5F8", VA = "0xCDF5F8")]
	private GameObject GetUIMask()
	{
		return null;
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xCDF7A8", Offset = "0xCDF7A8", VA = "0xCDF7A8")]
	public UIMaskFlowScirpt()
	{
	}
}
[Token(Token = "0x20002EB")]
public struct AudioNode
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource audioSource;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int volumeAdd;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float durationTime;

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xCDF7B0", Offset = "0xCDF7B0", VA = "0xCDF7B0")]
	public AudioNode(GameObject obj, AudioClip m_clip, float m_initVolume, int m_volumeAdd, float m_durationTime, bool isLoop)
	{
	}
}
[Token(Token = "0x20002EC")]
public class AudioPlay : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource auds;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLoop;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float totalVolue;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float SEVolume;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float BGMVolume;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool audioMute;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool BGMMute;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AudioSource> audioList;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioPlay instance;

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xCDC808", Offset = "0xCDC808", VA = "0xCDC808")]
	public static AudioPlay GetInstance()
	{
		return null;
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xCDF89C", Offset = "0xCDF89C", VA = "0xCDF89C")]
	public void SetSEVolume(float v)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xCDF9FC", Offset = "0xCDF9FC", VA = "0xCDF9FC")]
	public void SetBGMVolume(float v)
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xCDFA8C", Offset = "0xCDFA8C", VA = "0xCDFA8C")]
	public void SetTotalVolume(float v)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xCDFA98", Offset = "0xCDFA98", VA = "0xCDFA98")]
	public void Stop(string str)
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xCDCBA8", Offset = "0xCDCBA8", VA = "0xCDCBA8")]
	public void LoadEffectOnceWithAudioName(string name)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xCDCAF4", Offset = "0xCDCAF4", VA = "0xCDCAF4")]
	public bool GetSoundMuteState()
	{
		return default(bool);
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xCDCA88", Offset = "0xCDCA88", VA = "0xCDCA88")]
	public void setSoundMute()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xCDCAC4", Offset = "0xCDCAC4", VA = "0xCDCAC4")]
	public bool getSoundPauseState()
	{
		return default(bool);
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xCDC9FC", Offset = "0xCDC9FC", VA = "0xCDC9FC")]
	public void setSoundVolume(float _volume)
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xCDFD68", Offset = "0xCDFD68", VA = "0xCDFD68")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xCDFEB8", Offset = "0xCDFEB8", VA = "0xCDFEB8")]
	public AudioPlay()
	{
	}
}
[Token(Token = "0x20002ED")]
public class AutoFly : MonoBehaviour
{
	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh tm;

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xCDFF50", Offset = "0xCDFF50", VA = "0xCDFF50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xCDFFCC", Offset = "0xCDFFCC", VA = "0xCDFFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xCE0038", Offset = "0xCE0038", VA = "0xCE0038")]
	public AutoFly()
	{
	}
}
[Token(Token = "0x20002EE")]
public class BattleVolumeController
{
	[Token(Token = "0x20002EF")]
	[CompilerGenerated]
	private sealed class <TurnVolume>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isOn;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattleVolumeController <>4__this;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tm>5__2;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <startSaturation>5__3;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <endSaturation>5__4;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <startColor>5__5;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color <endColor>5__6;

		[Token(Token = "0x1700031E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xCE096C", Offset = "0xCE096C", VA = "0xCE096C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xCE09B4", Offset = "0xCE09B4", VA = "0xCE09B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xCE03C4", Offset = "0xCE03C4", VA = "0xCE03C4")]
		[DebuggerHidden]
		public <TurnVolume>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xCE07E0", Offset = "0xCE07E0", VA = "0xCE07E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xCE07E4", Offset = "0xCE07E4", VA = "0xCE07E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xCE0974", Offset = "0xCE0974", VA = "0xCE0974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[CompilerGenerated]
	private sealed class <TurnVolume>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattleVolumeController <>4__this;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color start;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color end;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public System.Action AfterTurn;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <tm>5__2;

		[Token(Token = "0x17000320")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xCE0AF4", Offset = "0xCE0AF4", VA = "0xCE0AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xCE0B3C", Offset = "0xCE0B3C", VA = "0xCE0B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xCE0794", Offset = "0xCE0794", VA = "0xCE0794")]
		[DebuggerHidden]
		public <TurnVolume>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xCE09BC", Offset = "0xCE09BC", VA = "0xCE09BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xCE09C0", Offset = "0xCE09C0", VA = "0xCE09C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xCE0AFC", Offset = "0xCE0AFC", VA = "0xCE0AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FilmGrain filmGrain;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ColorAdjustments colorAdjustments;

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xCE0048", Offset = "0xCE0048", VA = "0xCE0048")]
	public void Show(MonoBehaviour mb)
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xCE032C", Offset = "0xCE032C", VA = "0xCE032C")]
	[IteratorStateMachine(typeof(<TurnVolume>d__3))]
	private IEnumerator TurnVolume(bool isOn, float time)
	{
		return null;
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xCE03EC", Offset = "0xCE03EC", VA = "0xCE03EC")]
	public void Close(MonoBehaviour mb)
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xCDF2A0", Offset = "0xCDF2A0", VA = "0xCDF2A0")]
	public IEnumerator MaskBlack(MonoBehaviour mb)
	{
		return null;
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xCE05B8", Offset = "0xCE05B8", VA = "0xCE05B8")]
	public void CancelBlack(MonoBehaviour mb)
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xCE04CC", Offset = "0xCE04CC", VA = "0xCE04CC")]
	[IteratorStateMachine(typeof(<TurnVolume>d__7))]
	private IEnumerator TurnVolume(Color start, Color end, float time, [Optional] System.Action AfterTurn)
	{
		return null;
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xCE07BC", Offset = "0xCE07BC", VA = "0xCE07BC")]
	public BattleVolumeController()
	{
	}
}
[Token(Token = "0x20002F1")]
public class BeginScenceInit : MonoBehaviour
{
	[Token(Token = "0x20002F2")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000322")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0xCE0CBC", Offset = "0xCE0CBC", VA = "0xCE0CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0xCE0D04", Offset = "0xCE0D04", VA = "0xCE0D04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xCE0BA4", Offset = "0xCE0BA4", VA = "0xCE0BA4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xCE0BD4", Offset = "0xCE0BD4", VA = "0xCE0BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xCE0BD8", Offset = "0xCE0BD8", VA = "0xCE0BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xCE0CC4", Offset = "0xCE0CC4", VA = "0xCE0CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xCE0B44", Offset = "0xCE0B44", VA = "0xCE0B44")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xCE0BCC", Offset = "0xCE0BCC", VA = "0xCE0BCC")]
	public BeginScenceInit()
	{
	}
}
[Token(Token = "0x20002F3")]
public class BroadcastController : EasySmallController<BroadcastView>
{
	[Token(Token = "0x6001413")]
	[Address(RVA = "0xCE0D0C", Offset = "0xCE0D0C", VA = "0xCE0D0C")]
	public void InitData(List<Notice> list)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xCE0D10", Offset = "0xCE0D10", VA = "0xCE0D10", Slot = "4")]
	public override BroadcastView CreateView()
	{
		return null;
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xCE0E6C", Offset = "0xCE0E6C", VA = "0xCE0E6C")]
	public BroadcastController()
	{
	}
}
[Token(Token = "0x20002F4")]
public class LocalNotice
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime nextPlayTime;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Notice notice;

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xCE0EB4", Offset = "0xCE0EB4", VA = "0xCE0EB4")]
	public void playOver()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xCE0F40", Offset = "0xCE0F40", VA = "0xCE0F40")]
	public LocalNotice()
	{
	}
}
[Token(Token = "0x20002F5")]
public class BroadcastView : EasySmallView
{
	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel content;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TweenPosition tween;

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xCE0F48", Offset = "0xCE0F48", VA = "0xCE0F48")]
	public void Init(LocalNotice n)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xCE110C", Offset = "0xCE110C", VA = "0xCE110C")]
	private void PlayFinish()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xCE117C", Offset = "0xCE117C", VA = "0xCE117C")]
	public BroadcastView()
	{
	}
}
[Token(Token = "0x20002F7")]
public class CacheComplexRes
{
	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ResDict young;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ResDict youngPre;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ResDict perm;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, GameObjectContainer> permContainer;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, GameObjectContainer> youngContainer;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool youngPointer;

	[Token(Token = "0x17000324")]
	public GameObject this[string s]
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0xCE15CC", Offset = "0xCE15CC", VA = "0xCE15CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000325")]
	public ResDict Perm
	{
		[Token(Token = "0x6001423")]
		[Address(RVA = "0xCE1A84", Offset = "0xCE1A84", VA = "0xCE1A84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001424")]
		[Address(RVA = "0xCE1A8C", Offset = "0xCE1A8C", VA = "0xCE1A8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000326")]
	public ResDict Young
	{
		[Token(Token = "0x6001425")]
		[Address(RVA = "0xCE1418", Offset = "0xCE1418", VA = "0xCE1418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000327")]
	private ResDict YoungPre
	{
		[Token(Token = "0x6001427")]
		[Address(RVA = "0xCE1BF4", Offset = "0xCE1BF4", VA = "0xCE1BF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xCE11B4", Offset = "0xCE11B4", VA = "0xCE11B4")]
	public void CopyAllTo(ResDict dict)
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xCE16FC", Offset = "0xCE16FC", VA = "0xCE16FC")]
	public void ClearYoungContainer()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xCE174C", Offset = "0xCE174C", VA = "0xCE174C")]
	public void ResetPermContainer()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xCE18F8", Offset = "0xCE18F8", VA = "0xCE18F8")]
	public GameObjectContainer GetGroup(string s)
	{
		return null;
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xCE1A1C", Offset = "0xCE1A1C", VA = "0xCE1A1C")]
	public void SetGroup(string s, GameObjectContainer goc)
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xCE1B70", Offset = "0xCE1B70", VA = "0xCE1B70")]
	public bool HasKey(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xCE1BFC", Offset = "0xCE1BFC", VA = "0xCE1BFC")]
	public static void LoadAndCheckCache(ResDict dict, string prefix, string key)
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xCE1FB8", Offset = "0xCE1FB8", VA = "0xCE1FB8")]
	public static void LoadAllAndCheckCache(ResDict dict, string prefix, string key)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xCE1E74", Offset = "0xCE1E74", VA = "0xCE1E74")]
	public CacheComplexRes()
	{
	}
}
[Token(Token = "0x20002F8")]
public class GameObjectContainer
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] gos;

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xCE23B8", Offset = "0xCE23B8", VA = "0xCE23B8")]
	public void CopyTo(ResDict dict)
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xCE19B8", Offset = "0xCE19B8", VA = "0xCE19B8")]
	public GameObjectContainer()
	{
	}
}
[Token(Token = "0x20002F9")]
public class CacheStrategy
{
	[Token(Token = "0x600142D")]
	[Address(RVA = "0xCE2478", Offset = "0xCE2478", VA = "0xCE2478", Slot = "4")]
	public virtual void AfterBattleFinish()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xCE247C", Offset = "0xCE247C", VA = "0xCE247C")]
	public CacheStrategy()
	{
	}
}
[Token(Token = "0x20002FA")]
public class AndroidCacheStrategy : CacheStrategy
{
	[Token(Token = "0x600142F")]
	[Address(RVA = "0xCE2484", Offset = "0xCE2484", VA = "0xCE2484", Slot = "4")]
	public override void AfterBattleFinish()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xCE25A8", Offset = "0xCE25A8", VA = "0xCE25A8")]
	public AndroidCacheStrategy()
	{
	}
}
[Token(Token = "0x20002FB")]
public class IOSCacheStrategy : CacheStrategy
{
	[Token(Token = "0x6001431")]
	[Address(RVA = "0xCE25B0", Offset = "0xCE25B0", VA = "0xCE25B0", Slot = "4")]
	public override void AfterBattleFinish()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xCE2620", Offset = "0xCE2620", VA = "0xCE2620")]
	public IOSCacheStrategy()
	{
	}
}
[Token(Token = "0x20002FC")]
public class DataHelper
{
	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DataHelper _instance;

	[Token(Token = "0x17000328")]
	public static DataHelper instance
	{
		[Token(Token = "0x6001433")]
		[Address(RVA = "0xCE2628", Offset = "0xCE2628", VA = "0xCE2628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xCE26C0", Offset = "0xCE26C0", VA = "0xCE26C0")]
	public static int StandardCameraMinus()
	{
		return default(int);
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xCE26B8", Offset = "0xCE26B8", VA = "0xCE26B8")]
	public DataHelper()
	{
	}
}
[Token(Token = "0x20002FD")]
public class Destroy : MonoBehaviour
{
	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xCE271C", Offset = "0xCE271C", VA = "0xCE271C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xCE2798", Offset = "0xCE2798", VA = "0xCE2798")]
	public Destroy()
	{
	}
}
[Token(Token = "0x20002FE")]
public abstract class EasySmallController<T> where T : EasySmallView
{
	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected MonoBehaviour oldEffect;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T goView;

	[Token(Token = "0x6001438")]
	public abstract T CreateView();

	[Token(Token = "0x6001439")]
	public void CloseWindow()
	{
	}

	[Token(Token = "0x600143A")]
	public void ShowWindow()
	{
	}

	[Token(Token = "0x600143B")]
	protected EasySmallController()
	{
	}
}
[Token(Token = "0x20002FF")]
public class EasySmallView : BaseView
{
	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected MonoBehaviour oldEffect;

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xCE27A8", Offset = "0xCE27A8", VA = "0xCE27A8")]
	public void CloseWindow()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xCE27F8", Offset = "0xCE27F8", VA = "0xCE27F8", Slot = "9")]
	public virtual void AfterWindowClosed()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xCE27FC", Offset = "0xCE27FC", VA = "0xCE27FC")]
	public void InitWindow()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xCE1184", Offset = "0xCE1184", VA = "0xCE1184")]
	public EasySmallView()
	{
	}
}
[Token(Token = "0x2000300")]
[NoStaticTop]
public class EmptyController : EasyBaseController<EmptyView>
{
	[Token(Token = "0x6001440")]
	[Address(RVA = "0xCE283C", Offset = "0xCE283C", VA = "0xCE283C")]
	public EmptyController()
	{
	}
}
[Token(Token = "0x2000301")]
public class EmptyView : EasyBaseView<EmptyController>
{
	[Token(Token = "0x6001441")]
	[Address(RVA = "0xCE2884", Offset = "0xCE2884", VA = "0xCE2884")]
	public EmptyView()
	{
	}
}
[Token(Token = "0x2000302")]
public class FullScreenLoadingController
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FullScreenLoadingView _view;

	[Token(Token = "0x17000329")]
	public FullScreenLoadingView view
	{
		[Token(Token = "0x6001445")]
		[Address(RVA = "0xCE28CC", Offset = "0xCE28CC", VA = "0xCE28CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xCDF158", Offset = "0xCDF158", VA = "0xCDF158")]
	public void Show()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xCE2B50", Offset = "0xCE2B50", VA = "0xCE2B50")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xCE2BC8", Offset = "0xCE2BC8", VA = "0xCE2BC8")]
	public void Close()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xCE2C5C", Offset = "0xCE2C5C", VA = "0xCE2C5C")]
	public FullScreenLoadingController()
	{
	}
}
[Token(Token = "0x2000303")]
[AppearEffect(AppearType.FADE_UGUI, 1f, 1f, true)]
public class FullScreenLoadingView : EasySmallView
{
	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fastTips;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI m_TipText;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool MessageEnabled;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public System.Action AfterDestroy;

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xCE2C64", Offset = "0xCE2C64", VA = "0xCE2C64")]
	public void Start()
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xCE2D6C", Offset = "0xCE2D6C", VA = "0xCE2D6C", Slot = "5")]
	public override void InitView()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xCE2C58", Offset = "0xCE2C58", VA = "0xCE2C58")]
	public void Close()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xCE2E78", Offset = "0xCE2E78", VA = "0xCE2E78")]
	private void DoDestory()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xCE2AA4", Offset = "0xCE2AA4", VA = "0xCE2AA4")]
	public void Show()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xCE2B70", Offset = "0xCE2B70", VA = "0xCE2B70")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xCE2EAC", Offset = "0xCE2EAC", VA = "0xCE2EAC")]
	public FullScreenLoadingView()
	{
	}
}
[Token(Token = "0x2000304")]
public class Global
{
	[Token(Token = "0x4000F7F")]
	public const string BUNDLE_VERSION = "1.0.4";

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<TalkMessage> charMessageList;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool debugMode;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string terminal;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string baseUrl;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string hostUrl;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string wsBase;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string wsUrl;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string apiUrl;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string downloadUrl;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static CacheStrategy cacheStrategry;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string GameName;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string DeviceId;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string serverConfig;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static bool isLocal;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static ResDict fxs;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string openid;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string phoneNum;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string token;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string platform;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string defaultPlatform;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float soundVolume;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static DateTime RECORDTIME;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static long loginStartMsgId;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static bool _isNewMail;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private static bool isHaveNewAchievement;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static List<int> newAchievementList;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private static bool _isNewMission;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static Texture2D GameEndCapture;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static int headCurrFloor;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public static float headCurrX;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static int DiamondUsedInGame;

	[Token(Token = "0x1700032A")]
	public static string checkVersionUrl
	{
		[Token(Token = "0x600144E")]
		[Address(RVA = "0xCCEED8", Offset = "0xCCEED8", VA = "0xCCEED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032B")]
	public static string accountLoginUrl
	{
		[Token(Token = "0x600144F")]
		[Address(RVA = "0xCE2F64", Offset = "0xCE2F64", VA = "0xCE2F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032C")]
	public static bool IsAdDisabled
	{
		[Token(Token = "0x6001450")]
		[Address(RVA = "0xCE2FD8", Offset = "0xCE2FD8", VA = "0xCE2FD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700032D")]
	public static ResDict BATTLE_FXS
	{
		[Token(Token = "0x6001451")]
		[Address(RVA = "0xCE3054", Offset = "0xCE3054", VA = "0xCE3054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032E")]
	public static ResDict BATTLE_MODEL
	{
		[Token(Token = "0x6001452")]
		[Address(RVA = "0xCE30AC", Offset = "0xCE30AC", VA = "0xCE30AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032F")]
	public static string version
	{
		[Token(Token = "0x6001453")]
		[Address(RVA = "0xCE2EBC", Offset = "0xCE2EBC", VA = "0xCE2EBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000330")]
	public static bool sound
	{
		[Token(Token = "0x6001454")]
		[Address(RVA = "0xCDFCD4", Offset = "0xCDFCD4", VA = "0xCDFCD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001455")]
		[Address(RVA = "0xCE3104", Offset = "0xCE3104", VA = "0xCE3104")]
		set
		{
		}
	}

	[Token(Token = "0x17000331")]
	public static bool isNewMail
	{
		[Token(Token = "0x6001456")]
		[Address(RVA = "0xCE3150", Offset = "0xCE3150", VA = "0xCE3150")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001457")]
		[Address(RVA = "0xCE31A8", Offset = "0xCE31A8", VA = "0xCE31A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000332")]
	public static bool IsHaveNewAchievement
	{
		[Token(Token = "0x6001458")]
		[Address(RVA = "0xCE3204", Offset = "0xCE3204", VA = "0xCE3204")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001459")]
		[Address(RVA = "0xCE325C", Offset = "0xCE325C", VA = "0xCE325C")]
		set
		{
		}
	}

	[Token(Token = "0x17000333")]
	public static bool isNewMission
	{
		[Token(Token = "0x600145A")]
		[Address(RVA = "0xCE32B8", Offset = "0xCE32B8", VA = "0xCE32B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600145B")]
		[Address(RVA = "0xCE3310", Offset = "0xCE3310", VA = "0xCE3310")]
		set
		{
		}
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xCE336C", Offset = "0xCE336C", VA = "0xCE336C")]
	public Global()
	{
	}
}
[Token(Token = "0x2000305")]
public class GlobalManager
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MessageController _messageController;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetworkLoadingController _networkLoadingController;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FullScreenLoadingController _fullScreenLoadingController;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BattleVolumeController _battleVolumeController;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MessageItemController _messageItemController;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MsgToastController _msgToastController;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MsgToastControllerUGUI _msgToastControllerUGUI;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextureToastController _textureToastController;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MessageHUDController _messageHUDController;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventController _eventController;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ToastTaskContrller _toasttaskController;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MessageServerController _messageServerController;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GlobalManager _instance;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BroadcastController _broadcastController;

	[Token(Token = "0x17000334")]
	public MessageController messageController
	{
		[Token(Token = "0x600145E")]
		[Address(RVA = "0xCCC9C0", Offset = "0xCCC9C0", VA = "0xCCC9C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000335")]
	public NetworkLoadingController networkLoadingController
	{
		[Token(Token = "0x600145F")]
		[Address(RVA = "0xCE3828", Offset = "0xCE3828", VA = "0xCE3828")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000336")]
	public FullScreenLoadingController fullScreenLoadingController
	{
		[Token(Token = "0x6001460")]
		[Address(RVA = "0xCDF0E0", Offset = "0xCDF0E0", VA = "0xCDF0E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000337")]
	public BattleVolumeController battleVolumeController
	{
		[Token(Token = "0x6001461")]
		[Address(RVA = "0xCDF228", Offset = "0xCDF228", VA = "0xCDF228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000338")]
	public MessageItemController messageItemController
	{
		[Token(Token = "0x6001462")]
		[Address(RVA = "0xCE38A0", Offset = "0xCE38A0", VA = "0xCE38A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000339")]
	public MsgToastController msgToastController
	{
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xCD0C04", Offset = "0xCD0C04", VA = "0xCD0C04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033A")]
	public MsgToastControllerUGUI msgToastControllerUGUI
	{
		[Token(Token = "0x6001464")]
		[Address(RVA = "0xCD0B8C", Offset = "0xCD0B8C", VA = "0xCD0B8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033B")]
	public TextureToastController textureToastController
	{
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xCE3920", Offset = "0xCE3920", VA = "0xCE3920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033C")]
	public MessageHUDController messageHUDController
	{
		[Token(Token = "0x6001466")]
		[Address(RVA = "0xCE3998", Offset = "0xCE3998", VA = "0xCE3998")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033D")]
	public EventController eventController
	{
		[Token(Token = "0x6001467")]
		[Address(RVA = "0xCE3A18", Offset = "0xCE3A18", VA = "0xCE3A18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033E")]
	public ToastTaskContrller toasttaskController
	{
		[Token(Token = "0x6001468")]
		[Address(RVA = "0xCE3A90", Offset = "0xCE3A90", VA = "0xCE3A90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033F")]
	public MessageServerController messageServerController
	{
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xCD18C8", Offset = "0xCD18C8", VA = "0xCD18C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000340")]
	public static GlobalManager instance
	{
		[Token(Token = "0x600146A")]
		[Address(RVA = "0xCCC930", Offset = "0xCCC930", VA = "0xCCC930")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000341")]
	public BroadcastController broadcastController
	{
		[Token(Token = "0x600146B")]
		[Address(RVA = "0xCE3B10", Offset = "0xCE3B10", VA = "0xCE3B10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xCE3B08", Offset = "0xCE3B08", VA = "0xCE3B08")]
	public GlobalManager()
	{
	}
}
[Token(Token = "0x2000306")]
public class LoadingManager
{
	[Token(Token = "0x2000307")]
	[CompilerGenerated]
	private sealed class <AutoMove>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingManager <>4__this;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <backcount>5__3;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xCE48D0", Offset = "0xCE48D0", VA = "0xCE48D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xCE4918", Offset = "0xCE4918", VA = "0xCE4918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xCE3E20", Offset = "0xCE3E20", VA = "0xCE3E20")]
		[DebuggerHidden]
		public <AutoMove>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xCE473C", Offset = "0xCE473C", VA = "0xCE473C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xCE4740", Offset = "0xCE4740", VA = "0xCE4740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xCE48D8", Offset = "0xCE48D8", VA = "0xCE48D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000308")]
	[CompilerGenerated]
	private sealed class <FinishLoading>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingManager <>4__this;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonoBehaviour mb;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delayTime;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xCE4A58", Offset = "0xCE4A58", VA = "0xCE4A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xCE4AA0", Offset = "0xCE4AA0", VA = "0xCE4AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xCE4490", Offset = "0xCE4490", VA = "0xCE4490")]
		[DebuggerHidden]
		public <FinishLoading>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xCE4920", Offset = "0xCE4920", VA = "0xCE4920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xCE4924", Offset = "0xCE4924", VA = "0xCE4924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xCE4A60", Offset = "0xCE4A60", VA = "0xCE4A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[CompilerGenerated]
	private sealed class <HideLoading>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingManager <>4__this;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xCE4C90", Offset = "0xCE4C90", VA = "0xCE4C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xCE4CD8", Offset = "0xCE4CD8", VA = "0xCE4CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xCE463C", Offset = "0xCE463C", VA = "0xCE463C")]
		[DebuggerHidden]
		public <HideLoading>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xCE4AA8", Offset = "0xCE4AA8", VA = "0xCE4AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xCE4AAC", Offset = "0xCE4AAC", VA = "0xCE4AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xCE4C98", Offset = "0xCE4C98", VA = "0xCE4C98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LandLoadingView llv;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadingManager _instance;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LoadingPanel _loadingPanel;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator auto;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float to;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float perAdd;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float subStart;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float subEnd;

	[Token(Token = "0x17000342")]
	public static LoadingManager instance
	{
		[Token(Token = "0x600147B")]
		[Address(RVA = "0xCDE1F8", Offset = "0xCDE1F8", VA = "0xCDE1F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xCE3B84", Offset = "0xCE3B84", VA = "0xCE3B84")]
	public void StartLoading()
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xCE3C30", Offset = "0xCE3C30", VA = "0xCE3C30")]
	public void SetLoadingView(LandLoadingView llv, LoadingPanel lp)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xCE3BBC", Offset = "0xCE3BBC", VA = "0xCE3BBC")]
	[IteratorStateMachine(typeof(<AutoMove>d__7))]
	private IEnumerator AutoMove()
	{
		return null;
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xCE3E48", Offset = "0xCE3E48", VA = "0xCE3E48")]
	public void StopMove()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xCE3ED4", Offset = "0xCE3ED4", VA = "0xCE3ED4")]
	public void StartStepMove(float to, int totalCount)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xCE41F0", Offset = "0xCE41F0", VA = "0xCE41F0")]
	public void StepMove()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xCE428C", Offset = "0xCE428C", VA = "0xCE428C")]
	public void EasyMove()
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xCE3DE8", Offset = "0xCE3DE8", VA = "0xCE3DE8")]
	public void SubLoad(float start, float end)
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xCE43C0", Offset = "0xCE43C0", VA = "0xCE43C0")]
	public void XMove(float to)
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xCE4298", Offset = "0xCE4298", VA = "0xCE4298")]
	public void EasyMove(float to)
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xCE43F0", Offset = "0xCE43F0", VA = "0xCE43F0")]
	[IteratorStateMachine(typeof(<FinishLoading>d__18))]
	public IEnumerator FinishLoading(MonoBehaviour mb, float delayTime = 0.3f)
	{
		return null;
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xCE44B8", Offset = "0xCE44B8", VA = "0xCE44B8")]
	public void Finish(MonoBehaviour mb)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xCE45C8", Offset = "0xCE45C8", VA = "0xCE45C8")]
	[IteratorStateMachine(typeof(<HideLoading>d__20))]
	public IEnumerator HideLoading()
	{
		return null;
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xCE4664", Offset = "0xCE4664", VA = "0xCE4664")]
	public void SetValue(float f)
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xCE472C", Offset = "0xCE472C", VA = "0xCE472C")]
	public LoadingManager()
	{
	}
}
[Token(Token = "0x200030A")]
public class MessageController
{
	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MessagerViewUGUI _view;

	[Token(Token = "0x17000349")]
	public MessagerViewUGUI view
	{
		[Token(Token = "0x600149B")]
		[Address(RVA = "0xCE4CE0", Offset = "0xCE4CE0", VA = "0xCE4CE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xCD6854", Offset = "0xCD6854", VA = "0xCD6854")]
	public void Show()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xCE4EE4", Offset = "0xCE4EE4", VA = "0xCE4EE4")]
	public void Close()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xCD1620", Offset = "0xCD1620", VA = "0xCD1620")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xCCDF28", Offset = "0xCCDF28", VA = "0xCCDF28")]
	public void Show(string content, System.Action actionOK)
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xCD11F0", Offset = "0xCD11F0", VA = "0xCD11F0")]
	public void ShowPro(string content, System.Action actionOK)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xCE4FB8", Offset = "0xCE4FB8", VA = "0xCE4FB8")]
	public void ShowPro(string title, string content, System.Action actionOK)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xCCCA38", Offset = "0xCCCA38", VA = "0xCCCA38")]
	public void Show(string title, string content, System.Action actionOK)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xCE5080", Offset = "0xCE5080", VA = "0xCE5080")]
	public void Show(string title, string content, System.Action actionOK, System.Action actionCanel)
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xCCE5A0", Offset = "0xCCE5A0", VA = "0xCCE5A0")]
	public void ShowPro(string title, string content, string okLabel, System.Action actionOK, int prior)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xCD0D4C", Offset = "0xCD0D4C", VA = "0xCD0D4C")]
	public void ShowPro(string title, string content, System.Action actionOK, System.Action actionCanel, int level)
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xCE518C", Offset = "0xCE518C", VA = "0xCE518C")]
	public void ShowPro(string title, string content, System.Action actionOK, System.Action actionCanel, string strOK, string strCancel, int level)
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xCCEF58", Offset = "0xCCEF58", VA = "0xCCEF58")]
	public void Show(string title, string content, string strLabel1, string strLabel2, System.Action actionOk, System.Action actionCacel, int level = 0)
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0xCE3820", Offset = "0xCE3820", VA = "0xCE3820")]
	public MessageController()
	{
	}
}
[Token(Token = "0x200030B")]
public class MessageHUDController
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MsgHUDView _view;

	[Token(Token = "0x1700034A")]
	public MsgHUDView view
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0xCE53CC", Offset = "0xCE53CC", VA = "0xCE53CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0xCE529C", Offset = "0xCE529C", VA = "0xCE529C")]
	public void ShowConnection()
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0xCE55A4", Offset = "0xCE55A4", VA = "0xCE55A4")]
	public void Show()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0xCE3A10", Offset = "0xCE3A10", VA = "0xCE3A10")]
	public MessageHUDController()
	{
	}
}
[Token(Token = "0x200030C")]
public class MessageItemController
{
	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MessageItemView _view;

	[Token(Token = "0x1700034B")]
	public MessageItemView view
	{
		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xCE576C", Offset = "0xCE576C", VA = "0xCE576C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0xCE5678", Offset = "0xCE5678", VA = "0xCE5678")]
	public void Show(List<Award> list)
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0xCE5680", Offset = "0xCE5680", VA = "0xCE5680")]
	public void Show(List<Award> list, System.Action actionOK)
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0xCE3918", Offset = "0xCE3918", VA = "0xCE3918")]
	public MessageItemController()
	{
	}
}
[Token(Token = "0x200030D")]
[AppearEffect(AppearType.SHRINK, 0.2f, 0.2f, true)]
public class MessageItemView : EasySmallView
{
	[Token(Token = "0x200030E")]
	[CompilerGenerated]
	private sealed class <WaitNextReposition>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageItemView <>4__this;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xCE6EB4", Offset = "0xCE6EB4", VA = "0xCE6EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0xCE6EFC", Offset = "0xCE6EFC", VA = "0xCE6EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xCE6D90", Offset = "0xCE6D90", VA = "0xCE6D90")]
		[DebuggerHidden]
		public <WaitNextReposition>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xCE6DB8", Offset = "0xCE6DB8", VA = "0xCE6DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xCE6DBC", Offset = "0xCE6DBC", VA = "0xCE6DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xCE6EBC", Offset = "0xCE6EBC", VA = "0xCE6EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030F")]
	[CompilerGenerated]
	private sealed class <OnOk>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageItemView <>4__this;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0xCE6FF8", Offset = "0xCE6FF8", VA = "0xCE6FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xCE7040", Offset = "0xCE7040", VA = "0xCE7040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xCE6F04", Offset = "0xCE6F04", VA = "0xCE6F04")]
		[DebuggerHidden]
		public <OnOk>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xCE6F2C", Offset = "0xCE6F2C", VA = "0xCE6F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xCE6F30", Offset = "0xCE6F30", VA = "0xCE6F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xCE7000", Offset = "0xCE7000", VA = "0xCE7000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[CompilerGenerated]
	private sealed class <MoveToPack>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MessageItemView <>4__this;

		[Token(Token = "0x17000350")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xCE7274", Offset = "0xCE7274", VA = "0xCE7274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xCE72BC", Offset = "0xCE72BC", VA = "0xCE72BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xCE7048", Offset = "0xCE7048", VA = "0xCE7048")]
		[DebuggerHidden]
		public <MoveToPack>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xCE7070", Offset = "0xCE7070", VA = "0xCE7070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xCE7074", Offset = "0xCE7074", VA = "0xCE7074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xCE727C", Offset = "0xCE727C", VA = "0xCE727C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton btnOK;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject goItem;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIGrid grid;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UISprite bg;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIPanel panel;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject packIcon;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private System.Action actionOK;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool MessageEnabled;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public System.Action AfterDestroy;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float duration;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float firstDuration;

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0xCE5AD8", Offset = "0xCE5AD8", VA = "0xCE5AD8")]
	public new void InitView()
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0xCE5900", Offset = "0xCE5900", VA = "0xCE5900")]
	public void Show(List<Award> list, System.Action actionOK, int type = -1)
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0xCE5B3C", Offset = "0xCE5B3C", VA = "0xCE5B3C")]
	[IteratorStateMachine(typeof(<WaitNextReposition>d__9))]
	private IEnumerator WaitNextReposition()
	{
		return null;
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0xCE5BB0", Offset = "0xCE5BB0", VA = "0xCE5BB0")]
	public void Show(System.Action actionOK)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0xCE5BDC", Offset = "0xCE5BDC", VA = "0xCE5BDC")]
	private void DoDestory()
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0xCE5C10", Offset = "0xCE5C10", VA = "0xCE5C10")]
	private void ClickOK()
	{
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0xCE5C30", Offset = "0xCE5C30", VA = "0xCE5C30")]
	[IteratorStateMachine(typeof(<OnOk>d__15))]
	private IEnumerator OnOk()
	{
		return null;
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xCE5CA4", Offset = "0xCE5CA4", VA = "0xCE5CA4")]
	[IteratorStateMachine(typeof(<MoveToPack>d__18))]
	private IEnumerator MoveToPack(Transform t)
	{
		return null;
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xCE5D34", Offset = "0xCE5D34", VA = "0xCE5D34")]
	public void ClickNot()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xCE5D54", Offset = "0xCE5D54", VA = "0xCE5D54")]
	public void GuiderCallBack()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xCE5D74", Offset = "0xCE5D74", VA = "0xCE5D74")]
	public MessageItemView()
	{
	}
}
[Token(Token = "0x2000311")]
public class MessagerItem : MonoBehaviour
{
	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel text;

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xCE72C4", Offset = "0xCE72C4", VA = "0xCE72C4")]
	public MessagerItem()
	{
	}
}
[Token(Token = "0x2000312")]
[AppearEffect(AppearType.SHRINK, 0.25f, 1.1f, true)]
public class MessagerView : EasySmallView
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel lbTitle;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel lbcontent;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIButton btnOK;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIButton btnKnow;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIButton btnCancel;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIButton btnGem;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UILabel label_left;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UILabel label_center;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UILabel label_right;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject adButton;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private System.Action actionWatchAd;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UISprite defaultPrompt;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject goItem;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIGrid grid;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject closeGo;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private System.Action actionOK;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private System.Action actionNot;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private System.Action actionCancel;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool MessageEnabled;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public System.Action AfterDestroy;

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xCE72CC", Offset = "0xCE72CC", VA = "0xCE72CC", Slot = "5")]
	public override void InitView()
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xCE7334", Offset = "0xCE7334", VA = "0xCE7334")]
	public void Show(string title, string content, System.Action actionOK)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xCE746C", Offset = "0xCE746C", VA = "0xCE746C")]
	public void Show(string title, List<Award> list, System.Action actionOK, int type = -1)
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xCE7708", Offset = "0xCE7708", VA = "0xCE7708")]
	public void Show(string title, string content, System.Action actionOK, System.Action actionCancel)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xCE7854", Offset = "0xCE7854", VA = "0xCE7854")]
	public void Show(string title, string content, string strLabel1, string strLabel2, System.Action actionOk, System.Action actionCacel)
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xCE7B58", Offset = "0xCE7B58", VA = "0xCE7B58")]
	public void ShowGem(string content, int num, string btnText, System.Action actionOk, System.Action actionCancel)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xCE7E94", Offset = "0xCE7E94", VA = "0xCE7E94")]
	public void ShowAd(string content, string other, string watchAd, System.Action actionWatchAd, System.Action actionAdOther)
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xCE8094", Offset = "0xCE8094", VA = "0xCE8094")]
	public void Show()
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xCE8170", Offset = "0xCE8170", VA = "0xCE8170")]
	private void DoDestory()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xCE81A8", Offset = "0xCE81A8", VA = "0xCE81A8")]
	public System.Action PopUpLater(System.Action baseAction)
	{
		return null;
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xCE8284", Offset = "0xCE8284", VA = "0xCE8284")]
	public void ClickOK()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xCE82B0", Offset = "0xCE82B0", VA = "0xCE82B0")]
	public void ClickNot()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xCE82DC", Offset = "0xCE82DC", VA = "0xCE82DC")]
	public void ClickCancel()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xCE8308", Offset = "0xCE8308", VA = "0xCE8308")]
	public void ClickWatchAd()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xCE8324", Offset = "0xCE8324", VA = "0xCE8324")]
	public void ClickOut()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xCE83B4", Offset = "0xCE83B4", VA = "0xCE83B4")]
	public MessagerView()
	{
	}
}
[Token(Token = "0x2000314")]
public class SelectInfo
{
	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public System.Action onSelect;

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xCE83E8", Offset = "0xCE83E8", VA = "0xCE83E8")]
	public static SelectInfo Create(string name, System.Action onSelect)
	{
		return null;
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xCE8474", Offset = "0xCE8474", VA = "0xCE8474")]
	public SelectInfo()
	{
	}
}
[Token(Token = "0x2000315")]
[AppearEffect(AppearType.SHRINK, 0.25f, 1.1f, true)]
public class MessagerViewUGUI : EasySmallView
{
	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI lbTitle;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI lbcontent;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button btnOK;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button btnKnow;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button btnCancel;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI label_left;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI label_center;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI label_right;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentPopLevel;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private System.Action actionOK;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private System.Action actionNot;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private System.Action actionCancel;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool MessageEnabled;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public System.Action AfterDestroy;

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0xCE847C", Offset = "0xCE847C", VA = "0xCE847C", Slot = "5")]
	public override void InitView()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0xCE85F8", Offset = "0xCE85F8", VA = "0xCE85F8")]
	public void Show(string title, string content, System.Action actionOK, int prior = 0)
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0xCE8760", Offset = "0xCE8760", VA = "0xCE8760")]
	public bool CheckPopUpPrior(int prior = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0xCE8830", Offset = "0xCE8830", VA = "0xCE8830")]
	public void Show(string title, string content, string okLabel, System.Action actionOK, int prior = 0)
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0xCE89B8", Offset = "0xCE89B8", VA = "0xCE89B8")]
	public void Show(string title, string content, System.Action actionOK, System.Action actionCancel)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0xCE8B30", Offset = "0xCE8B30", VA = "0xCE8B30")]
	public void Show(string title, string content, string strLabel1, string strLabel2, System.Action actionOk, System.Action actionCacel, int level)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0xCE8780", Offset = "0xCE8780", VA = "0xCE8780")]
	private void SetMessageTitle(string title)
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0xCE8DAC", Offset = "0xCE8DAC", VA = "0xCE8DAC")]
	public void Show()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0xCE8E80", Offset = "0xCE8E80", VA = "0xCE8E80")]
	private void DoDestory()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0xCE8F10", Offset = "0xCE8F10", VA = "0xCE8F10")]
	public System.Action PopUpLater(System.Action baseAction)
	{
		return null;
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0xCE8FEC", Offset = "0xCE8FEC", VA = "0xCE8FEC")]
	public void ClickOK()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0xCE9018", Offset = "0xCE9018", VA = "0xCE9018")]
	public void ClickNot()
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xCE9044", Offset = "0xCE9044", VA = "0xCE9044")]
	public void ClickCancel()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xCE9070", Offset = "0xCE9070", VA = "0xCE9070")]
	public void ClickOut()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xCE90C0", Offset = "0xCE90C0", VA = "0xCE90C0")]
	public MessagerViewUGUI()
	{
	}
}
[Token(Token = "0x2000318")]
public class MessageServerController
{
	[Token(Token = "0x60014EB")]
	[Address(RVA = "0xCE91B8", Offset = "0xCE91B8", VA = "0xCE91B8")]
	public void ResponseReturn()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xCE9208", Offset = "0xCE9208", VA = "0xCE9208")]
	public void ShowServerWaitingPanel()
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xCE929C", Offset = "0xCE929C", VA = "0xCE929C")]
	public void Timeout(OutMessage outMsg)
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xCE92F4", Offset = "0xCE92F4", VA = "0xCE92F4")]
	public void RequestStart()
	{
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xCE92F8", Offset = "0xCE92F8", VA = "0xCE92F8")]
	public void ReadResponseFailed(BizException errMsg)
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xCE9350", Offset = "0xCE9350", VA = "0xCE9350")]
	public void SendConnectionFailed(Boolable isable)
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xCE93A8", Offset = "0xCE93A8", VA = "0xCE93A8")]
	public void ManagedFailed(BizException errMsg)
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xCE9400", Offset = "0xCE9400", VA = "0xCE9400")]
	public void TokenTimeOut(string errMsg)
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xCE9458", Offset = "0xCE9458", VA = "0xCE9458")]
	public void Termination(string errMsg)
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xCE94B0", Offset = "0xCE94B0", VA = "0xCE94B0")]
	public void MoneyNotEnought(string code)
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xCE9508", Offset = "0xCE9508", VA = "0xCE9508")]
	public void LoadingClose()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xCE9558", Offset = "0xCE9558", VA = "0xCE9558")]
	public MessageServerController()
	{
	}
}
[Token(Token = "0x2000319")]
[AppearEffect(AppearType.FADE_UGUI, 0.5f, 0.5f, true)]
public class MsgHUDView : MonoBehaviour
{
	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MsgHUDView Instance;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image connectionIndicator;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Sprite> connectionImages;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup panel;

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xCE9560", Offset = "0xCE9560", VA = "0xCE9560")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xCE962C", Offset = "0xCE962C", VA = "0xCE962C")]
	public void InitView(string content, System.Action back)
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xCE9630", Offset = "0xCE9630", VA = "0xCE9630")]
	public void Show()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xCE9634", Offset = "0xCE9634", VA = "0xCE9634")]
	public void ShowConnectionImage(int index)
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0xCE96B8", Offset = "0xCE96B8", VA = "0xCE96B8")]
	public MsgHUDView()
	{
	}
}
[Token(Token = "0x200031A")]
public class MsgToastController
{
	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xCE96C0", Offset = "0xCE96C0", VA = "0xCE96C0")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xCE9754", Offset = "0xCE9754", VA = "0xCE9754")]
	public void Show(string content, System.Action back)
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xCE9834", Offset = "0xCE9834", VA = "0xCE9834")]
	private MsgToastView getView()
	{
		return null;
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xCE99CC", Offset = "0xCE99CC", VA = "0xCE99CC")]
	public MsgToastController()
	{
	}
}
[Token(Token = "0x200031B")]
public class MsgToastControllerUGUI
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MsgToastViewUGUI _view;

	[Token(Token = "0x17000352")]
	public MsgToastViewUGUI view
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0xCE9AEC", Offset = "0xCE9AEC", VA = "0xCE9AEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xCE99D4", Offset = "0xCE99D4", VA = "0xCE99D4")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xCE9A04", Offset = "0xCE9A04", VA = "0xCE9A04")]
	public void Show(string content, System.Action back)
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xCE9D3C", Offset = "0xCE9D3C", VA = "0xCE9D3C")]
	public MsgToastControllerUGUI()
	{
	}
}
[Token(Token = "0x200031C")]
public class MsgToastView : MonoBehaviour
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel lbContent;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPanel panel;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Action back;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 beginPos;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 holdPos;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 endPos;

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xCE9978", Offset = "0xCE9978", VA = "0xCE9978")]
	public void InitView(string content, System.Action back)
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xCE9D44", Offset = "0xCE9D44", VA = "0xCE9D44")]
	private void ParseOne()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xCE9E24", Offset = "0xCE9E24", VA = "0xCE9E24")]
	private void ParseTwo()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xCE9EFC", Offset = "0xCE9EFC", VA = "0xCE9EFC")]
	public MsgToastView()
	{
	}
}
[Token(Token = "0x200031D")]
[AppearEffect(AppearType.FADE_UGUI, 0.5f, 0.5f, true)]
public class MsgToastViewUGUI : MonoBehaviour
{
	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text lbContent;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup panel;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Action back;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 beginPos;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 holdPos;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 endPos;

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xCE9CE0", Offset = "0xCE9CE0", VA = "0xCE9CE0")]
	public void InitView(string content, System.Action back)
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xCE9F70", Offset = "0xCE9F70", VA = "0xCE9F70")]
	private void ParseOne()
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xCEA050", Offset = "0xCEA050", VA = "0xCEA050")]
	private void ParseTwo()
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0xCEA128", Offset = "0xCEA128", VA = "0xCEA128")]
	public MsgToastViewUGUI()
	{
	}
}
[Token(Token = "0x200031E")]
public class NetworkLoadingController
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NetworkLoadingViewUGUI _view;

	[Token(Token = "0x17000353")]
	public NetworkLoadingViewUGUI view
	{
		[Token(Token = "0x6001511")]
		[Address(RVA = "0xCEA26C", Offset = "0xCEA26C", VA = "0xCEA26C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xCEA19C", Offset = "0xCEA19C", VA = "0xCEA19C")]
	public void Show()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xCEA48C", Offset = "0xCEA48C", VA = "0xCEA48C")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xCEA4F4", Offset = "0xCEA4F4", VA = "0xCEA4F4")]
	public void Close()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xCEA588", Offset = "0xCEA588", VA = "0xCEA588")]
	public NetworkLoadingController()
	{
	}
}
[Token(Token = "0x200031F")]
[AppearEffect(AppearType.FADE_UGUI, 0.5f, 0.5f, true)]
public class NetworkLoadingViewUGUI : EasySmallView
{
	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image spLoading;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image spMask;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text text;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool MessageEnabled;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public System.Action AfterDestroy;

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xCEA590", Offset = "0xCEA590", VA = "0xCEA590", Slot = "5")]
	public override void InitView()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xCEA584", Offset = "0xCEA584", VA = "0xCEA584")]
	public void Close()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0xCEA64C", Offset = "0xCEA64C", VA = "0xCEA64C")]
	private void DoDestory()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xCEA444", Offset = "0xCEA444", VA = "0xCEA444")]
	public void Show()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xCEA4AC", Offset = "0xCEA4AC", VA = "0xCEA4AC")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xCEA684", Offset = "0xCEA684", VA = "0xCEA684")]
	public NetworkLoadingViewUGUI()
	{
	}
}
[Token(Token = "0x2000320")]
public class ResInstance
{
	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ResInstance _instance;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CacheComplexRes cacheResMyRole;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResDict cacheResCommon;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioDict audios;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextureDict textureDict;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ResDict _dollHouse;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ResDict battleDialogueRole;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _baseCarator;

	[Token(Token = "0x17000354")]
	public static ResInstance instance
	{
		[Token(Token = "0x6001519")]
		[Address(RVA = "0xCEA694", Offset = "0xCEA694", VA = "0xCEA694")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000355")]
	public GameObject baseCharator
	{
		[Token(Token = "0x600151A")]
		[Address(RVA = "0xCEA7C8", Offset = "0xCEA7C8", VA = "0xCEA7C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xCEA720", Offset = "0xCEA720", VA = "0xCEA720")]
	public ResInstance()
	{
	}
}
[Token(Token = "0x2000321")]
public class AudioDict : Dictionary<string, AudioClip>
{
	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] sample;

	[Token(Token = "0x17000356")]
	public new AudioClip this[string key]
	{
		[Token(Token = "0x600151C")]
		[Address(RVA = "0xCEA918", Offset = "0xCEA918", VA = "0xCEA918")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0xCEAAD8", Offset = "0xCEAAD8", VA = "0xCEAAD8")]
	public void PlayAudio(string key, Action<AudioClip> howToPlay)
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xCEACA8", Offset = "0xCEACA8", VA = "0xCEACA8")]
	public void ResRelease()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xCEA888", Offset = "0xCEA888", VA = "0xCEA888")]
	public AudioDict()
	{
	}
}
[Token(Token = "0x2000324")]
public class TextureDict : Dictionary<string, Texture2D>
{
	[Token(Token = "0x17000357")]
	public new Texture2D this[string key]
	{
		[Token(Token = "0x6001525")]
		[Address(RVA = "0xCEAE7C", Offset = "0xCEAE7C", VA = "0xCEAE7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xCEA8D0", Offset = "0xCEA8D0", VA = "0xCEA8D0")]
	public TextureDict()
	{
	}
}
[Token(Token = "0x2000325")]
public class ResDict : Dictionary<string, GameObject>
{
	[Token(Token = "0x6001527")]
	[Address(RVA = "0xCEB02C", Offset = "0xCEB02C", VA = "0xCEB02C", Slot = "46")]
	public virtual bool HasKey(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xCEB094", Offset = "0xCEB094", VA = "0xCEB094")]
	public void CopyFrom(Dictionary<string, GameObject> dict)
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xCEB204", Offset = "0xCEB204", VA = "0xCEB204")]
	public string ToS()
	{
		return null;
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xCEB3B4", Offset = "0xCEB3B4", VA = "0xCEB3B4")]
	public ResDict()
	{
	}
}
[Token(Token = "0x2000326")]
public class FxsLoader
{
	[Token(Token = "0x2000327")]
	[CompilerGenerated]
	private sealed class <LoadFXSMyRole>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000358")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0xCEBE10", Offset = "0xCEBE10", VA = "0xCEBE10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0xCEBE58", Offset = "0xCEBE58", VA = "0xCEBE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xCEB664", Offset = "0xCEB664", VA = "0xCEB664")]
		[DebuggerHidden]
		public <LoadFXSMyRole>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xCEBDBC", Offset = "0xCEBDBC", VA = "0xCEBDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xCEBDC0", Offset = "0xCEBDC0", VA = "0xCEBDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xCEBE18", Offset = "0xCEBE18", VA = "0xCEBE18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[CompilerGenerated]
	private sealed class <LoadFXSCommon>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxsLoader <>4__this;

		[Token(Token = "0x1700035A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0xCEC054", Offset = "0xCEC054", VA = "0xCEC054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xCEC09C", Offset = "0xCEC09C", VA = "0xCEC09C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xCEB700", Offset = "0xCEB700", VA = "0xCEB700")]
		[DebuggerHidden]
		public <LoadFXSCommon>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xCEBE60", Offset = "0xCEBE60", VA = "0xCEBE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xCEBE64", Offset = "0xCEBE64", VA = "0xCEBE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xCEC05C", Offset = "0xCEC05C", VA = "0xCEC05C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000329")]
	[CompilerGenerated]
	private sealed class <CopyAllReadyLoaded>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxsLoader <>4__this;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ResDict battleDict;

		[Token(Token = "0x1700035C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0xCEC214", Offset = "0xCEC214", VA = "0xCEC214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0xCEC25C", Offset = "0xCEC25C", VA = "0xCEC25C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xCEB7B8", Offset = "0xCEB7B8", VA = "0xCEB7B8")]
		[DebuggerHidden]
		public <CopyAllReadyLoaded>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xCEC0A4", Offset = "0xCEC0A4", VA = "0xCEC0A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xCEC0A8", Offset = "0xCEC0A8", VA = "0xCEC0A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xCEC21C", Offset = "0xCEC21C", VA = "0xCEC21C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032A")]
	[CompilerGenerated]
	private sealed class <GetLoadingFxs>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxsLoader <>4__this;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <last>5__3;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timex>5__4;

		[Token(Token = "0x1700035E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xCEC9EC", Offset = "0xCEC9EC", VA = "0xCEC9EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xCECA34", Offset = "0xCECA34", VA = "0xCECA34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xCEB854", Offset = "0xCEB854", VA = "0xCEB854")]
		[DebuggerHidden]
		public <GetLoadingFxs>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xCEC264", Offset = "0xCEC264", VA = "0xCEC264", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xCEC268", Offset = "0xCEC268", VA = "0xCEC268", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xCEC9F4", Offset = "0xCEC9F4", VA = "0xCEC9F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032B")]
	[CompilerGenerated]
	private sealed class <LoadSkill>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int skillId;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ResDict dict;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FxsLoader <>4__this;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isShift;

		[Token(Token = "0x17000360")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0xCECC44", Offset = "0xCECC44", VA = "0xCECC44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0xCECC8C", Offset = "0xCECC8C", VA = "0xCECC8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xCEB928", Offset = "0xCEB928", VA = "0xCEB928")]
		[DebuggerHidden]
		public <LoadSkill>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xCECA3C", Offset = "0xCECA3C", VA = "0xCECA3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xCECA40", Offset = "0xCECA40", VA = "0xCECA40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xCECC4C", Offset = "0xCECC4C", VA = "0xCECC4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[CompilerGenerated]
	private sealed class <LoadAttack>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000362")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xCECCE8", Offset = "0xCECCE8", VA = "0xCECCE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xCECD30", Offset = "0xCECD30", VA = "0xCECD30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xCEB9B0", Offset = "0xCEB9B0", VA = "0xCEB9B0")]
		[DebuggerHidden]
		public <LoadAttack>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xCECC94", Offset = "0xCECC94", VA = "0xCECC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xCECC98", Offset = "0xCECC98", VA = "0xCECC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xCECCF0", Offset = "0xCECCF0", VA = "0xCECCF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[CompilerGenerated]
	private sealed class <LoadModel>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxsLoader <>4__this;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ResDict dict;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int modelId;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isShift;

		[Token(Token = "0x17000364")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xCECD78", Offset = "0xCECD78", VA = "0xCECD78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0xCECDC0", Offset = "0xCECDC0", VA = "0xCECDC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xCEBA84", Offset = "0xCEBA84", VA = "0xCEBA84")]
		[DebuggerHidden]
		public <LoadModel>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xCECD38", Offset = "0xCECD38", VA = "0xCECD38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xCECD3C", Offset = "0xCECD3C", VA = "0xCECD3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xCECD80", Offset = "0xCECD80", VA = "0xCECD80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[CompilerGenerated]
	private sealed class <LoadAllFx>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxsLoader <>4__this;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ResDict dict;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string name;

		[Token(Token = "0x17000366")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0xCECE00", Offset = "0xCECE00", VA = "0xCECE00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0xCECE48", Offset = "0xCECE48", VA = "0xCECE48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xCEBCFC", Offset = "0xCEBCFC", VA = "0xCEBCFC")]
		[DebuggerHidden]
		public <LoadAllFx>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xCECDC8", Offset = "0xCECDC8", VA = "0xCECDC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xCECDCC", Offset = "0xCECDCC", VA = "0xCECDCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xCECE08", Offset = "0xCECE08", VA = "0xCECE08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ResDict dict;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour mb;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Finish;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool CacheMyRoleFinish;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool CacheCommonFinish;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<string> LoadCountFlag;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IEnumerator LoadMore;

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xCEB3FC", Offset = "0xCEB3FC", VA = "0xCEB3FC")]
	public static string LoadCountToString()
	{
		return null;
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xCEB5CC", Offset = "0xCEB5CC", VA = "0xCEB5CC")]
	public FxsLoader()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xCEB5D4", Offset = "0xCEB5D4", VA = "0xCEB5D4")]
	public FxsLoader(MonoBehaviour mb)
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xCEB604", Offset = "0xCEB604", VA = "0xCEB604")]
	[IteratorStateMachine(typeof(<LoadFXSMyRole>d__10))]
	public IEnumerator LoadFXSMyRole()
	{
		return null;
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xCEB68C", Offset = "0xCEB68C", VA = "0xCEB68C")]
	[IteratorStateMachine(typeof(<LoadFXSCommon>d__11))]
	public IEnumerator LoadFXSCommon()
	{
		return null;
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xCEB728", Offset = "0xCEB728", VA = "0xCEB728")]
	[IteratorStateMachine(typeof(<CopyAllReadyLoaded>d__12))]
	public IEnumerator CopyAllReadyLoaded(ResDict battleDict)
	{
		return null;
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xCEB7E0", Offset = "0xCEB7E0", VA = "0xCEB7E0")]
	[IteratorStateMachine(typeof(<GetLoadingFxs>d__13))]
	public IEnumerator GetLoadingFxs(bool isPVP)
	{
		return null;
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xCEB87C", Offset = "0xCEB87C", VA = "0xCEB87C")]
	[IteratorStateMachine(typeof(<LoadSkill>d__14))]
	private IEnumerator LoadSkill(ResDict dict, int skillId, bool isShift)
	{
		return null;
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xCEB950", Offset = "0xCEB950", VA = "0xCEB950")]
	[IteratorStateMachine(typeof(<LoadAttack>d__15))]
	private IEnumerator LoadAttack(ResDict dict, int modelId, bool isShift)
	{
		return null;
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xCEB9D8", Offset = "0xCEB9D8", VA = "0xCEB9D8")]
	[IteratorStateMachine(typeof(<LoadModel>d__16))]
	private IEnumerator LoadModel(ResDict dict, int modelId, bool isShift)
	{
		return null;
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xCEBAAC", Offset = "0xCEBAAC", VA = "0xCEBAAC")]
	public void LoadFxSync(ResDict dict, string modelName)
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xCEBB08", Offset = "0xCEBB08", VA = "0xCEBB08")]
	public void LoadModelSync(ResDict dict, string modelName)
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0xCEBB64", Offset = "0xCEBB64", VA = "0xCEBB64")]
	public void LoadModelSync(ResDict dict, int modelId, bool isShift)
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0xCEBC58", Offset = "0xCEBC58", VA = "0xCEBC58")]
	[IteratorStateMachine(typeof(<LoadAllFx>d__20))]
	private IEnumerator LoadAllFx(ResDict dict, string name)
	{
		return null;
	}
}
[Token(Token = "0x200032F")]
public class Singleton : MonoBehaviour
{
	[Token(Token = "0x2000330")]
	[CompilerGenerated]
	private sealed class <TurnDownAudio>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audio;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000368")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0xCED934", Offset = "0xCED934", VA = "0xCED934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xCED97C", Offset = "0xCED97C", VA = "0xCED97C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xCED524", Offset = "0xCED524", VA = "0xCED524")]
		[DebuggerHidden]
		public <TurnDownAudio>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xCED814", Offset = "0xCED814", VA = "0xCED814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xCED818", Offset = "0xCED818", VA = "0xCED818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xCED93C", Offset = "0xCED93C", VA = "0xCED93C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[CompilerGenerated]
	private sealed class <TurnUpAudio>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audio;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700036A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xCEDA80", Offset = "0xCEDA80", VA = "0xCEDA80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xCEDAC8", Offset = "0xCEDAC8", VA = "0xCEDAC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xCED54C", Offset = "0xCED54C", VA = "0xCED54C")]
		[DebuggerHidden]
		public <TurnUpAudio>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xCED984", Offset = "0xCED984", VA = "0xCED984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xCED988", Offset = "0xCED988", VA = "0xCED988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xCEDA88", Offset = "0xCEDA88", VA = "0xCEDA88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[CompilerGenerated]
	private sealed class <AudioSourceVolume>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Singleton <>4__this;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <initVolume>5__2;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <preTime>5__3;

		[Token(Token = "0x1700036C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xCEDC14", Offset = "0xCEDC14", VA = "0xCEDC14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xCEDC5C", Offset = "0xCEDC5C", VA = "0xCEDC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xCED574", Offset = "0xCED574", VA = "0xCED574")]
		[DebuggerHidden]
		public <AudioSourceVolume>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xCEDAD0", Offset = "0xCEDAD0", VA = "0xCEDAD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xCEDAD4", Offset = "0xCEDAD4", VA = "0xCEDAD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xCEDC1C", Offset = "0xCEDC1C", VA = "0xCEDC1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Singleton instance;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object _lock;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource BGMScurce;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float BgmVolume;

	[Token(Token = "0x600156A")]
	[Address(RVA = "0xCECE50", Offset = "0xCECE50", VA = "0xCECE50")]
	public static Singleton GetInstance()
	{
		return null;
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0xCED09C", Offset = "0xCED09C", VA = "0xCED09C")]
	public void PlayBGM(string name, bool loop = true)
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xCED36C", Offset = "0xCED36C", VA = "0xCED36C")]
	public void TurnHideBgm()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xCED448", Offset = "0xCED448", VA = "0xCED448")]
	public void TurnShowBgm()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xCED3D4", Offset = "0xCED3D4", VA = "0xCED3D4")]
	[IteratorStateMachine(typeof(<TurnDownAudio>d__9))]
	public static IEnumerator TurnDownAudio(AudioSource audio)
	{
		return null;
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xCED4B0", Offset = "0xCED4B0", VA = "0xCED4B0")]
	[IteratorStateMachine(typeof(<TurnUpAudio>d__10))]
	public static IEnumerator TurnUpAudio(AudioSource audio)
	{
		return null;
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xCED2C8", Offset = "0xCED2C8", VA = "0xCED2C8")]
	[IteratorStateMachine(typeof(<AudioSourceVolume>d__11))]
	private IEnumerator AudioSourceVolume(AudioSource audioSource, AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xCED59C", Offset = "0xCED59C", VA = "0xCED59C")]
	public void PlaySound(string name, float volume = 1f)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xCED6D4", Offset = "0xCED6D4", VA = "0xCED6D4")]
	public void ClickAudioAbled(bool isable)
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xCED6F4", Offset = "0xCED6F4", VA = "0xCED6F4")]
	public void PlayOnClick()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xCED788", Offset = "0xCED788", VA = "0xCED788")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000333")]
public class StaticModelController
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BaseController staticBC;

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xCEDC64", Offset = "0xCEDC64", VA = "0xCEDC64")]
	public static void SetStaticController(BaseController bc)
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xCEDCD8", Offset = "0xCEDCD8", VA = "0xCEDCD8")]
	public static void CheckHideTop(BaseController bc)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xCEDECC", Offset = "0xCEDECC", VA = "0xCEDECC")]
	public static void UpdateInfo()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xCEDE00", Offset = "0xCEDE00", VA = "0xCEDE00")]
	public static void ShowStaticMoudle()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xCEDE68", Offset = "0xCEDE68", VA = "0xCEDE68")]
	public static void HideStaticMoudle()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xCEDED0", Offset = "0xCEDED0", VA = "0xCEDED0")]
	public StaticModelController()
	{
	}
}
[Token(Token = "0x2000334")]
public class TextureToastController
{
	[Token(Token = "0x600158E")]
	[Address(RVA = "0xCEDED8", Offset = "0xCEDED8", VA = "0xCEDED8")]
	public void Show(string uri, int width, int height)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xCEDF20", Offset = "0xCEDF20", VA = "0xCEDF20")]
	public void Show(string uri, int width, int height, System.Action back)
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xCEE01C", Offset = "0xCEE01C", VA = "0xCEE01C")]
	private TextureToastView getView()
	{
		return null;
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0xCEE288", Offset = "0xCEE288", VA = "0xCEE288")]
	public TextureToastController()
	{
	}
}
[Token(Token = "0x2000335")]
public class TextureToastView : MonoBehaviour
{
	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel lbContent;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPanel panel;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UITexture tex;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private System.Action back;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 beginPos;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 holdPos;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 endPos;

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xCEE160", Offset = "0xCEE160", VA = "0xCEE160")]
	public void InitView(string uri, int width, int height, System.Action back)
	{
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xCEE290", Offset = "0xCEE290", VA = "0xCEE290")]
	private void ParseOne()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xCEE370", Offset = "0xCEE370", VA = "0xCEE370")]
	private void ParseTwo()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xCEE448", Offset = "0xCEE448", VA = "0xCEE448")]
	public TextureToastView()
	{
	}
}
[Token(Token = "0x2000336")]
public enum ToastDirection
{
	[Token(Token = "0x4001071")]
	up,
	[Token(Token = "0x4001072")]
	down
}
[Token(Token = "0x2000337")]
public class ToastInfoModel
{
	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string content;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToastDirection direction;

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xCEE4BC", Offset = "0xCEE4BC", VA = "0xCEE4BC")]
	public ToastInfoModel()
	{
	}
}
[Token(Token = "0x2000338")]
public class ToastController
{
	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isShowing;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ToastInfoModel> _listToast;

	[Token(Token = "0x1700036E")]
	public List<ToastInfoModel> listToast
	{
		[Token(Token = "0x6001598")]
		[Address(RVA = "0xCEE4C4", Offset = "0xCEE4C4", VA = "0xCEE4C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xCEE550", Offset = "0xCEE550", VA = "0xCEE550")]
	public void CheckDelayToast()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xCEE7C4", Offset = "0xCEE7C4", VA = "0xCEE7C4")]
	public void Show(string content)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xCEE7CC", Offset = "0xCEE7CC", VA = "0xCEE7CC")]
	public void Show(string content, ToastDirection direction)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xCEE5F8", Offset = "0xCEE5F8", VA = "0xCEE5F8")]
	private void ShowFirstModel()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xCEEA78", Offset = "0xCEEA78", VA = "0xCEEA78")]
	private void ShowBack(ToastInfoModel model)
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xCEE8D0", Offset = "0xCEE8D0", VA = "0xCEE8D0")]
	public ToastView getNewView()
	{
		return null;
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xCEEAE0", Offset = "0xCEEAE0", VA = "0xCEEAE0")]
	public ToastController()
	{
	}
}
[Token(Token = "0x2000339")]
public class ToastTaskModel
{
	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string content;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0xCEEAE8", Offset = "0xCEEAE8", VA = "0xCEEAE8")]
	public ToastTaskModel()
	{
	}
}
[Token(Token = "0x200033A")]
public class ToastTaskContrller
{
	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isShowing;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ToastTaskModel> _listToast;

	[Token(Token = "0x1700036F")]
	public static List<ToastTaskModel> listToast
	{
		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xCEEAF0", Offset = "0xCEEAF0", VA = "0xCEEAF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xCEEBA8", Offset = "0xCEEBA8", VA = "0xCEEBA8")]
	public void CheckDelayToast()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xCEEDCC", Offset = "0xCEEDCC", VA = "0xCEEDCC")]
	public void Show(string content, string title)
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xCEEC88", Offset = "0xCEEC88", VA = "0xCEEC88")]
	private void ShowFirstModel()
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xCEF090", Offset = "0xCEF090", VA = "0xCEF090")]
	private void ShowBack(ToastTaskModel model)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xCEEED4", Offset = "0xCEEED4", VA = "0xCEEED4")]
	public ToastTaskView getNewView()
	{
		return null;
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xCEF0F4", Offset = "0xCEF0F4", VA = "0xCEF0F4")]
	public ToastTaskContrller()
	{
	}
}
[Token(Token = "0x200033B")]
public class ToastTaskView : MonoBehaviour
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel lbTitle;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel lbContent;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject panel;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<ToastTaskModel> back;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToastTaskModel model;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float showTime;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float appearTime;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 posStart;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 posHold;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 posEnd;

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0xCEF0FC", Offset = "0xCEF0FC", VA = "0xCEF0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0xCEF100", Offset = "0xCEF100", VA = "0xCEF100")]
	private void Update()
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0xCEF104", Offset = "0xCEF104", VA = "0xCEF104")]
	public void InitView()
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0xCEF018", Offset = "0xCEF018", VA = "0xCEF018")]
	public void Show(ToastTaskModel model, Action<ToastTaskModel> back)
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0xCEF108", Offset = "0xCEF108", VA = "0xCEF108")]
	private void appear()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xCEF1D4", Offset = "0xCEF1D4", VA = "0xCEF1D4")]
	private void hold()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xCEF224", Offset = "0xCEF224", VA = "0xCEF224")]
	private void hide()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xCEF2CC", Offset = "0xCEF2CC", VA = "0xCEF2CC")]
	private void finish()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xCEF358", Offset = "0xCEF358", VA = "0xCEF358")]
	public ToastTaskView()
	{
	}
}
[Token(Token = "0x200033C")]
public class ToastView : MonoBehaviour
{
	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILabel lbContent;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float height;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float space;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float showTime;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float appearTime;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<ToastInfoModel> back;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToastInfoModel model;

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xCEF388", Offset = "0xCEF388", VA = "0xCEF388")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xCEF38C", Offset = "0xCEF38C", VA = "0xCEF38C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xCEEA14", Offset = "0xCEEA14", VA = "0xCEEA14")]
	public void Show(ToastInfoModel model, Action<ToastInfoModel> back)
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xCEF390", Offset = "0xCEF390", VA = "0xCEF390")]
	private void appear()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xCEF584", Offset = "0xCEF584", VA = "0xCEF584")]
	private void hold()
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xCEF5D4", Offset = "0xCEF5D4", VA = "0xCEF5D4")]
	private void hide()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xCEF6A4", Offset = "0xCEF6A4", VA = "0xCEF6A4")]
	private void finish()
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xCEF544", Offset = "0xCEF544", VA = "0xCEF544")]
	private Vector3 getMoveDistant(ToastDirection direction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xCEF4C8", Offset = "0xCEF4C8", VA = "0xCEF4C8")]
	private Vector3 getPos(ToastDirection direction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xCEF6A8", Offset = "0xCEF6A8", VA = "0xCEF6A8")]
	public ToastView()
	{
	}
}
[Token(Token = "0x200033D")]
public class UILoading
{
	[Token(Token = "0x400108C")]
	public const int REQUESTING = 0;

	[Token(Token = "0x400108D")]
	public const int LOADINGRES = 1;

	[Token(Token = "0x400108E")]
	public const int IMPORTANTREQ = 2;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int maxLevel;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject _go;

	[Token(Token = "0x17000370")]
	public static GameObject go
	{
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xCEF758", Offset = "0xCEF758", VA = "0xCEF758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xCEF6C4", Offset = "0xCEF6C4", VA = "0xCEF6C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xCEF6C8", Offset = "0xCEF6C8", VA = "0xCEF6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xCEF6CC", Offset = "0xCEF6CC", VA = "0xCEF6CC")]
	public static void Begin()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xCEF8E4", Offset = "0xCEF8E4", VA = "0xCEF8E4")]
	public static void Mask(int level = 0)
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xCEFA34", Offset = "0xCEFA34", VA = "0xCEFA34")]
	public static void Show(int level = 0)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xCEFB40", Offset = "0xCEFB40", VA = "0xCEFB40")]
	public static void Close(int level = 0)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xCEF9F0", Offset = "0xCEF9F0", VA = "0xCEF9F0")]
	private static UIloadingView getView()
	{
		return null;
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xCEFC50", Offset = "0xCEFC50", VA = "0xCEFC50")]
	public UILoading()
	{
	}
}
[Token(Token = "0x200033E")]
public class UIloadingView : MonoBehaviour
{
	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISprite spLoading;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UISprite spMask;

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xCEFC58", Offset = "0xCEFC58", VA = "0xCEFC58")]
	private void Start()
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xCEFC5C", Offset = "0xCEFC5C", VA = "0xCEFC5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xCEFC60", Offset = "0xCEFC60", VA = "0xCEFC60")]
	public UIloadingView()
	{
	}
}
[Token(Token = "0x200033F")]
public class LoadingPanel : MonoBehaviour
{
	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIPanel loadingPanel;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UILabel label_tips;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UILabel title;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel content;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UISlider slider;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UITexture bg;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D[] bgs;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject silderEffect;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 defaultPos;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int baseOffset;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string tipsText;

	[Token(Token = "0x17000371")]
	public string TipsText
	{
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xCEFC68", Offset = "0xCEFC68", VA = "0xCEFC68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xCEFC70", Offset = "0xCEFC70", VA = "0xCEFC70")]
		set
		{
		}
	}

	[Token(Token = "0x17000372")]
	public float BarValue
	{
		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xCEFCAC", Offset = "0xCEFCAC", VA = "0xCEFCAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xCEFCC8", Offset = "0xCEFCC8", VA = "0xCEFCC8")]
		set
		{
		}
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xCEFE6C", Offset = "0xCEFE6C", VA = "0xCEFE6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xCEFECC", Offset = "0xCEFECC", VA = "0xCEFECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xCEFF0C", Offset = "0xCEFF0C", VA = "0xCEFF0C")]
	public void SetValue(float v)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xCEFF10", Offset = "0xCEFF10", VA = "0xCEFF10")]
	public LoadingPanel()
	{
	}
}
[Token(Token = "0x2000340")]
public class LoadingRunAnimtion : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UISpriteData> animtionList;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UISprite sprite1;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UISprite sprite2;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UILabel lb;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UISprite sprite;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool b;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int counter;

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xCEFFA4", Offset = "0xCEFFA4", VA = "0xCEFFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xCEFFA8", Offset = "0xCEFFA8", VA = "0xCEFFA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xCF0020", Offset = "0xCF0020", VA = "0xCF0020")]
	private void UpdateAnimtion()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xCF00C4", Offset = "0xCF00C4", VA = "0xCF00C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xCF00FC", Offset = "0xCF00FC", VA = "0xCF00FC")]
	public LoadingRunAnimtion()
	{
	}
}
[Token(Token = "0x2000341")]
public class AsyncUdpSever
{
	[Token(Token = "0x2000342")]
	public class ServerUdpSocket
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Socket _socket;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AsyncUdpSever server;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint _local;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Thread _receiveThread;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xCF1274", Offset = "0xCF1274", VA = "0xCF1274")]
		public ServerUdpSocket(AsyncUdpSever server)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xCF133C", Offset = "0xCF133C", VA = "0xCF133C")]
		public void StartReceive()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xCF1040", Offset = "0xCF1040", VA = "0xCF1040")]
		public void SendData(byte[] data, IPAddress remoteIP, int remotePort)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xCF1170", Offset = "0xCF1170", VA = "0xCF1170")]
		public void Close()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xCF1448", Offset = "0xCF1448", VA = "0xCF1448")]
		private void Receive()
		{
		}
	}

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IPEndPoint ipEndPoint;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IPEndPoint remoteEP;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UDPClient udpClient;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UdpClient udpReceive;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UdpClient udpSend;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UdpState udpReceiveState;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UdpState udpSendState;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ManualResetEvent sendDone;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ManualResetEvent receiveDone;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ServerUdpSocket serverSocket;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IPEndPoint wifiController;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int MAX_POOL;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentPool;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private object locker;

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xCF0104", Offset = "0xCF0104", VA = "0xCF0104")]
	public AsyncUdpSever(UDPClient udpClient)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xCF0400", Offset = "0xCF0400", VA = "0xCF0400")]
	public void ReceiveMsg()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xCF04E4", Offset = "0xCF04E4", VA = "0xCF04E4")]
	public void RoomHandler(byte[] receiveBytes, IPEndPoint iep)
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xCF0580", Offset = "0xCF0580", VA = "0xCF0580")]
	private void BroadCastMsg(int playerId, byte[] sendBytes)
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xCF07E8", Offset = "0xCF07E8", VA = "0xCF07E8")]
	public void SendUnpackedUdpMsg(int selfId, int remoteId, params object[] obj)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xCF08D0", Offset = "0xCF08D0", VA = "0xCF08D0")]
	public void SendUdpMsg(int roomId, int playerId, string funcName, params object[] obj)
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xCF0C94", Offset = "0xCF0C94", VA = "0xCF0C94")]
	private void SendMsg(IPAddress ipAddress, string message)
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xCF0DC0", Offset = "0xCF0DC0", VA = "0xCF0DC0")]
	private void SendCallback(IAsyncResult iar)
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0xCF0ECC", Offset = "0xCF0ECC", VA = "0xCF0ECC")]
	private void SendRoomCallback(IAsyncResult iar)
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0xCF0FD8", Offset = "0xCF0FD8", VA = "0xCF0FD8")]
	public void SendMsgToHttpServer(IPAddress ipAddress, int port, string message)
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xCF10D8", Offset = "0xCF10D8", VA = "0xCF10D8")]
	public void HandleMsg(string parser)
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xCF1130", Offset = "0xCF1130", VA = "0xCF1130")]
	public void OnDestroy()
	{
	}
}
[Token(Token = "0x2000344")]
public class UdpState
{
	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UdpClient udpClient;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IPEndPoint ipEndPoint;

	[Token(Token = "0x40010BB")]
	public const int BufferSize = 1024;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public byte[] buffer;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int counter;

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xCF039C", Offset = "0xCF039C", VA = "0xCF039C")]
	public UdpState()
	{
	}
}
[Token(Token = "0x2000345")]
public class ConfigFile<T> : Complex
{
	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string version;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<T> list;

	[Token(Token = "0x60015EA")]
	public override void Read(ReceiveMsg rm)
	{
	}

	[Token(Token = "0x60015EB")]
	public override void Write(Message msg)
	{
	}

	[Token(Token = "0x60015EC")]
	public ConfigFile()
	{
	}
}
[Token(Token = "0x2000346")]
public class DbUtil
{
	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string path;

	[Token(Token = "0x40010C1")]
	public const string fileSuffix = ".xml";

	[Token(Token = "0x17000373")]
	public static string DefalutPath
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xCF19F4", Offset = "0xCF19F4", VA = "0xCF19F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015EE")]
	public static byte[] Encode<T>(T o) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015EF")]
	public static T Decode<T>(byte[] bts) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015F0")]
	public static void Save<T>(T obj) where T : Complex
	{
	}

	[Token(Token = "0x60015F1")]
	public static byte[] Save<T>(T obj, string key) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015F2")]
	public static T Load<T>() where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015F3")]
	public static T Load<T>(string key) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015F4")]
	public static void SavePlain<T>(string key, string str) where T : Complex
	{
	}

	[Token(Token = "0x60015F5")]
	public static string LoadPlainFromAsset<T>(string key)
	{
		return null;
	}

	[Token(Token = "0x60015F6")]
	public static string LoadPlainFromAsset<T>(string key, string folder)
	{
		return null;
	}

	[Token(Token = "0x60015F7")]
	public static string LoadPlain<T>(string key) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015F8")]
	public static byte[] LoadTxt<T>(string key) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015F9")]
	public static T LoadFromAssets<T>(string key) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015FA")]
	public static ConfigFile<T> LoadConfig<T>() where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015FB")]
	public static ConfigFile<T> LoadConfigFromAssets<T>() where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015FC")]
	public static ConfigFile<T> LoadConfigFromAssetsByIos<T>() where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015FD")]
	public static byte[] SaveConfig<T>(ConfigFile<T> obj) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015FE")]
	public static byte[] EncodeConfig<T>(ConfigFile<T> o) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x60015FF")]
	public static ConfigFile<T> LoadConfigFile<T>(string key) where T : Complex
	{
		return null;
	}

	[Token(Token = "0x6001600")]
	public static void SaveData<T>(T obj) where T : Complex
	{
	}

	[Token(Token = "0x6001601")]
	public static T LoadData<T>() where T : Complex
	{
		return null;
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xCF1A7C", Offset = "0xCF1A7C", VA = "0xCF1A7C")]
	public DbUtil()
	{
	}
}
[Token(Token = "0x2000347")]
public class GameConfig
{
	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TextAsset m_TipConfig;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<string> m_TipList;

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xCF1ADC", Offset = "0xCF1ADC", VA = "0xCF1ADC")]
	public static void ParseTipConfig()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xCF1E80", Offset = "0xCF1E80", VA = "0xCF1E80")]
	public GameConfig()
	{
	}
}
[Token(Token = "0x2000348")]
public class Log
{
	[Token(Token = "0x40010C4")]
	public const int debugLevel = -1;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool exdebug;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool debug;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool info;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool warn;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool error;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool business;

	[Token(Token = "0x40010CB")]
	public const int OFF = -1;

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xCF1F34", Offset = "0xCF1F34", VA = "0xCF1F34")]
	[Conditional("LOG")]
	public static void f(object s)
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xCE96F0", Offset = "0xCE96F0", VA = "0xCE96F0")]
	public static void b(object s)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xCF1F8C", Offset = "0xCF1F8C", VA = "0xCF1F8C")]
	public static void e(object s)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xCF0C30", Offset = "0xCF0C30", VA = "0xCF0C30")]
	public static void w(object s)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xCF1FF0", Offset = "0xCF1FF0", VA = "0xCF1FF0")]
	public static void i(object s)
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xCF2054", Offset = "0xCF2054", VA = "0xCF2054")]
	public static void d(object s)
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xCF20B8", Offset = "0xCF20B8", VA = "0xCF20B8")]
	public static void dl(byte[] s)
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xCF21D4", Offset = "0xCF21D4", VA = "0xCF21D4")]
	public static string Join(int[] s)
	{
		return null;
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xCF22AC", Offset = "0xCF22AC", VA = "0xCF22AC")]
	public static void Join(IList s)
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xCF26D0", Offset = "0xCF26D0", VA = "0xCF26D0")]
	public Log()
	{
	}
}
[Token(Token = "0x2000349")]
public class ToolFile
{
	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToolFile _instance;

	[Token(Token = "0x17000374")]
	public static ToolFile instance
	{
		[Token(Token = "0x6001611")]
		[Address(RVA = "0xCF26D8", Offset = "0xCF26D8", VA = "0xCF26D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xCF2770", Offset = "0xCF2770", VA = "0xCF2770")]
	public void SaveFileInLocal(byte[] bs, string name)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xCF29AC", Offset = "0xCF29AC", VA = "0xCF29AC")]
	public string getSavePath_StreamingAssets()
	{
		return null;
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xCF2960", Offset = "0xCF2960", VA = "0xCF2960")]
	public string getSavePath_PersistentDataPath()
	{
		return null;
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xCF2B04", Offset = "0xCF2B04", VA = "0xCF2B04")]
	public string GetConfigXml(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xCF2B54", Offset = "0xCF2B54", VA = "0xCF2B54")]
	public string GetBaseConfigXml(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xCF2BA4", Offset = "0xCF2BA4", VA = "0xCF2BA4")]
	public string GetConfigXmlOrBase(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xCF2CA4", Offset = "0xCF2CA4", VA = "0xCF2CA4")]
	public bool CheckConfigUpdateExists(string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xCF2CB8", Offset = "0xCF2CB8", VA = "0xCF2CB8")]
	public string ReadTextFromStreamingAssets(string path)
	{
		return null;
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xCF2F5C", Offset = "0xCF2F5C", VA = "0xCF2F5C")]
	public byte[] ReadBytesFromStreamingAssets(string path)
	{
		return null;
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xCF2768", Offset = "0xCF2768", VA = "0xCF2768")]
	public ToolFile()
	{
	}
}
[Token(Token = "0x200034A")]
public class UdpUtil
{
	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AsyncUdpSever udpServer;

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xCF31DC", Offset = "0xCF31DC", VA = "0xCF31DC")]
	public UdpUtil(AsyncUdpSever server)
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xCF320C", Offset = "0xCF320C", VA = "0xCF320C")]
	public void SendToUser(long playerId, string funcName, params object[] obj)
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xCF3234", Offset = "0xCF3234", VA = "0xCF3234")]
	public void RoomBroadCast(string funcName, params object[] obj)
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xCF325C", Offset = "0xCF325C", VA = "0xCF325C")]
	public void RoomBroadCast(int roomId, string funcName, params object[] obj)
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xCF3280", Offset = "0xCF3280", VA = "0xCF3280")]
	public void SendUnpackedUdpMsg(int remoteId, params object[] obj)
	{
	}
}
[Token(Token = "0x200034B")]
public class WindowDll
{
	[PreserveSig]
	[Token(Token = "0x6001621")]
	[Address(RVA = "0xCF32AC", Offset = "0xCF32AC", VA = "0xCF32AC")]
	private static extern bool GetOpenFileName([In][Out] OpenFileName ofn);

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xCF33EC", Offset = "0xCF33EC", VA = "0xCF33EC")]
	private static bool GetOpenFileName1([In][Out] OpenFileName ofn)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001623")]
	[Address(RVA = "0xCF33F0", Offset = "0xCF33F0", VA = "0xCF33F0")]
	private static extern bool GetSaveFileName([In][Out] OpenFileName ofn);

	[Token(Token = "0x6001624")]
	[Address(RVA = "0xCF34D0", Offset = "0xCF34D0", VA = "0xCF34D0")]
	private static bool GetSFN([In][Out] OpenFileName ofn)
	{
		return default(bool);
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xCF34D4", Offset = "0xCF34D4", VA = "0xCF34D4")]
	public static string OpenFile(string path)
	{
		return null;
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xCF36F0", Offset = "0xCF36F0", VA = "0xCF36F0")]
	public static string SaveFile()
	{
		return null;
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xCF3904", Offset = "0xCF3904", VA = "0xCF3904")]
	public WindowDll()
	{
	}
}
[StructLayout(0, CharSet = CharSet.Auto)]
[Token(Token = "0x200034C")]
public class OpenFileName
{
	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int structSize;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr dlgOwner;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntPtr instance;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filter;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string customFilter;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxCustFilter;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int filterIndex;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string file;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int maxFile;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string fileTitle;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int maxFileTitle;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string initialDir;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string title;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int flags;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public short fileOffset;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	public short fileExtension;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string defExt;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public IntPtr custData;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IntPtr hook;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string templateName;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IntPtr reservedPtr;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int reservedInt;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int flagsEx;

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xCF338C", Offset = "0xCF338C", VA = "0xCF338C")]
	public OpenFileName()
	{
	}
}
[Token(Token = "0x200034D")]
public class XmlUtils
{
	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string defalutPath;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string streamingAssetsPath;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string streamingAssetsFilePath;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string path;

	[Token(Token = "0x17000375")]
	public static string DefalutPath
	{
		[Token(Token = "0x6001629")]
		[Address(RVA = "0xCF390C", Offset = "0xCF390C", VA = "0xCF390C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xCF3964", Offset = "0xCF3964", VA = "0xCF3964")]
	public XmlUtils()
	{
	}
}
[Token(Token = "0x200034E")]
public class RigMove : MonoBehaviour
{
	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rigTransform;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController characterController;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveSpeed;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float backMovsSpeed;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool moveDirForward;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool enableRotate;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Assets.Scripts.Interact.Hand useHand;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _vertSpeed;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform cameraTransform;

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xCF3A90", Offset = "0xCF3A90", VA = "0xCF3A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xCF3B2C", Offset = "0xCF3B2C", VA = "0xCF3B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xCF3E30", Offset = "0xCF3E30", VA = "0xCF3E30")]
	private Vector3 GetFowardHead()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0xCF3E54", Offset = "0xCF3E54", VA = "0xCF3E54")]
	private Vector3 GetFoward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0xCF40FC", Offset = "0xCF40FC", VA = "0xCF40FC")]
	private Vector3 GetRight()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0xCF417C", Offset = "0xCF417C", VA = "0xCF417C")]
	public RigMove()
	{
	}
}
[Token(Token = "0x200034F")]
public class BlackPanelUI : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	[CompilerGenerated]
	private sealed class <DelayHide>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlackPanelUI <>4__this;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000376")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0xCF4514", Offset = "0xCF4514", VA = "0xCF4514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0xCF455C", Offset = "0xCF455C", VA = "0xCF455C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xCF42D4", Offset = "0xCF42D4", VA = "0xCF42D4")]
		[DebuggerHidden]
		public <DelayHide>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xCF43F8", Offset = "0xCF43F8", VA = "0xCF43F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xCF43FC", Offset = "0xCF43FC", VA = "0xCF43FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xCF451C", Offset = "0xCF451C", VA = "0xCF451C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000351")]
	[CompilerGenerated]
	private sealed class <DelayClear>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlackPanelUI <>4__this;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000378")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0xCF4648", Offset = "0xCF4648", VA = "0xCF4648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0xCF4690", Offset = "0xCF4690", VA = "0xCF4690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xCF4370", Offset = "0xCF4370", VA = "0xCF4370")]
		[DebuggerHidden]
		public <DelayClear>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xCF4564", Offset = "0xCF4564", VA = "0xCF4564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xCF4568", Offset = "0xCF4568", VA = "0xCF4568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xCF4650", Offset = "0xCF4650", VA = "0xCF4650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Action OnScreenBlack;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator currCouritineHide;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IEnumerator currCouritineClear;

	[Token(Token = "0x6001632")]
	[Address(RVA = "0xCF418C", Offset = "0xCF418C", VA = "0xCF418C")]
	public void ShowMask(System.Action act)
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0xCF4260", Offset = "0xCF4260", VA = "0xCF4260")]
	[IteratorStateMachine(typeof(<DelayHide>d__6))]
	private IEnumerator DelayHide()
	{
		return null;
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0xCF42FC", Offset = "0xCF42FC", VA = "0xCF42FC")]
	[IteratorStateMachine(typeof(<DelayClear>d__7))]
	private IEnumerator DelayClear()
	{
		return null;
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0xCF4398", Offset = "0xCF4398", VA = "0xCF4398")]
	public void HideMask()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0xCF43E8", Offset = "0xCF43E8", VA = "0xCF43E8")]
	public BlackPanelUI()
	{
	}
}
[Token(Token = "0x2000352")]
public class MoveCar : MonoBehaviour
{
	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 endPosition;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x6001643")]
	[Address(RVA = "0xCF4698", Offset = "0xCF4698", VA = "0xCF4698")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xCF46C8", Offset = "0xCF46C8", VA = "0xCF46C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0xCF4900", Offset = "0xCF4900", VA = "0xCF4900")]
	public MoveCar()
	{
	}
}
[Token(Token = "0x2000353")]
public class Parabola : MonoBehaviour
{
	[Token(Token = "0x6001646")]
	[Address(RVA = "0xCF4908", Offset = "0xCF4908", VA = "0xCF4908")]
	public static Vector3 GetParabolaVelocity(Vector3 start, Vector3 end, float tanAngle, float g = 9.81f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0xCF4B80", Offset = "0xCF4B80", VA = "0xCF4B80")]
	public Parabola()
	{
	}
}
[Token(Token = "0x2000354")]
public class RelactivePosition : MonoBehaviour
{
	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x6001648")]
	[Address(RVA = "0xCF4B88", Offset = "0xCF4B88", VA = "0xCF4B88")]
	private void Update()
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0xCF4C88", Offset = "0xCF4C88", VA = "0xCF4C88")]
	public RelactivePosition()
	{
	}
}
[Token(Token = "0x2000355")]
public class SceneLoadTool : MonoBehaviour
{
	[Token(Token = "0x2000356")]
	[CompilerGenerated]
	private sealed class <Load>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadTool <>4__this;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x1700037D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xCF59F4", Offset = "0xCF59F4", VA = "0xCF59F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xCF5A3C", Offset = "0xCF5A3C", VA = "0xCF5A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xCF52EC", Offset = "0xCF52EC", VA = "0xCF52EC")]
		[DebuggerHidden]
		public <Load>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xCF5448", Offset = "0xCF5448", VA = "0xCF5448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xCF544C", Offset = "0xCF544C", VA = "0xCF544C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xCF59FC", Offset = "0xCF59FC", VA = "0xCF59FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000357")]
	[CompilerGenerated]
	private sealed class <FadeAlpha>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<float> fill;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float a;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float b;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__2;

		[Token(Token = "0x1700037F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xCF5B14", Offset = "0xCF5B14", VA = "0xCF5B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xCF5B5C", Offset = "0xCF5B5C", VA = "0xCF5B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xCF5418", Offset = "0xCF5418", VA = "0xCF5418")]
		[DebuggerHidden]
		public <FadeAlpha>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xCF5A44", Offset = "0xCF5A44", VA = "0xCF5A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xCF5A48", Offset = "0xCF5A48", VA = "0xCF5A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xCF5B1C", Offset = "0xCF5B1C", VA = "0xCF5B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneLoadTool ins;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup loadCanvas;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text loadText;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string showText;

	[Token(Token = "0x1700037A")]
	public static SceneLoadTool Ins
	{
		[Token(Token = "0x600164A")]
		[Address(RVA = "0xCF4C90", Offset = "0xCF4C90", VA = "0xCF4C90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037B")]
	public static string LoadingText
	{
		[Token(Token = "0x600164C")]
		[Address(RVA = "0xCF4D54", Offset = "0xCF4D54", VA = "0xCF4D54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600164B")]
		[Address(RVA = "0xCF4CE8", Offset = "0xCF4CE8", VA = "0xCF4CE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700037C")]
	public static bool IsLoading
	{
		[Token(Token = "0x600164E")]
		[Address(RVA = "0xCF4EAC", Offset = "0xCF4EAC", VA = "0xCF4EAC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600164F")]
		[Address(RVA = "0xCF4F04", Offset = "0xCF4F04", VA = "0xCF4F04")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0xCF4DB8", Offset = "0xCF4DB8", VA = "0xCF4DB8")]
	static SceneLoadTool()
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0xCF4F60", Offset = "0xCF4F60", VA = "0xCF4F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0xCF50CC", Offset = "0xCF50CC", VA = "0xCF50CC")]
	public static void LoadScene(string name)
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0xCF525C", Offset = "0xCF525C", VA = "0xCF525C")]
	[IteratorStateMachine(typeof(<Load>d__16))]
	private IEnumerator Load(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0xCF5314", Offset = "0xCF5314", VA = "0xCF5314")]
	private void SetCanvasAlpha(float a)
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0xCF5330", Offset = "0xCF5330", VA = "0xCF5330")]
	private void SetTextAlpha(float a)
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0xCF5380", Offset = "0xCF5380", VA = "0xCF5380")]
	[IteratorStateMachine(typeof(<FadeAlpha>d__19))]
	private static IEnumerator FadeAlpha(float a, float b, float duration, Action<float> fill)
	{
		return null;
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0xCF5440", Offset = "0xCF5440", VA = "0xCF5440")]
	public SceneLoadTool()
	{
	}
}
[Token(Token = "0x2000358")]
public class SmoothLookTransform : MonoBehaviour
{
	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x6001663")]
	[Address(RVA = "0xCF5B64", Offset = "0xCF5B64", VA = "0xCF5B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0xCF5E10", Offset = "0xCF5E10", VA = "0xCF5E10")]
	public SmoothLookTransform()
	{
	}
}
[Token(Token = "0x2000359")]
public class Timer
{
	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float maxTime;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currTime;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRinged;

	[Token(Token = "0x17000381")]
	public float MaxTime
	{
		[Token(Token = "0x6001665")]
		[Address(RVA = "0xCF5E28", Offset = "0xCF5E28", VA = "0xCF5E28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001666")]
		[Address(RVA = "0xCF5E30", Offset = "0xCF5E30", VA = "0xCF5E30")]
		set
		{
		}
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xCF5E38", Offset = "0xCF5E38", VA = "0xCF5E38")]
	public Timer(float maxTime)
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0xCF5E64", Offset = "0xCF5E64", VA = "0xCF5E64")]
	public bool Tick(float elaspedTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0xCF5E98", Offset = "0xCF5E98", VA = "0xCF5E98")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200035A")]
public class TriggerCaller : MonoBehaviour
{
	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool compareLayer;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool compareTag;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string tagName;

	[Token(Token = "0x14000012")]
	public event Action<Collider> OnEnter
	{
		[Token(Token = "0x600166A")]
		[Address(RVA = "0xCF5EA4", Offset = "0xCF5EA4", VA = "0xCF5EA4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xCF5F54", Offset = "0xCF5F54", VA = "0xCF5F54")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<Collider> OnStay
	{
		[Token(Token = "0x600166C")]
		[Address(RVA = "0xCF6004", Offset = "0xCF6004", VA = "0xCF6004")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xCF60B4", Offset = "0xCF60B4", VA = "0xCF60B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action<Collider> OnExit
	{
		[Token(Token = "0x600166E")]
		[Address(RVA = "0xCF6164", Offset = "0xCF6164", VA = "0xCF6164")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xCF6214", Offset = "0xCF6214", VA = "0xCF6214")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xCF62C4", Offset = "0xCF62C4", VA = "0xCF62C4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xCF63D4", Offset = "0xCF63D4", VA = "0xCF63D4")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0xCF6438", Offset = "0xCF6438", VA = "0xCF6438")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0xCF6328", Offset = "0xCF6328", VA = "0xCF6328")]
	private bool Compare(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0xCF649C", Offset = "0xCF649C", VA = "0xCF649C")]
	public TriggerCaller()
	{
	}
}
[Token(Token = "0x200035B")]
[RequireComponent(typeof(CanvasGroup))]
public class UGUITween : MonoBehaviour
{
	[Token(Token = "0x200035C")]
	[CompilerGenerated]
	private sealed class <Play>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UGUITween <>4__this;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000382")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xCF69F8", Offset = "0xCF69F8", VA = "0xCF69F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xCF6A40", Offset = "0xCF6A40", VA = "0xCF6A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xCF65BC", Offset = "0xCF65BC", VA = "0xCF65BC")]
		[DebuggerHidden]
		public <Play>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xCF666C", Offset = "0xCF666C", VA = "0xCF666C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xCF6670", Offset = "0xCF6670", VA = "0xCF6670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xCF6A00", Offset = "0xCF6A00", VA = "0xCF6A00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float animateTime;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayStartTime;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isTweenPosition;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 posFrom;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 posTo;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve positionCurve;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isTweenScale;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 scaleBase;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isTweenAlpha;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve alphaCurve;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<System.Action> OnFinished;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isLoop;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool isAutoPlay;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x6001675")]
	[Address(RVA = "0xCF64A4", Offset = "0xCF64A4", VA = "0xCF64A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0xCF651C", Offset = "0xCF651C", VA = "0xCF651C")]
	public void PlayAnimation()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0xCF6548", Offset = "0xCF6548", VA = "0xCF6548")]
	[IteratorStateMachine(typeof(<Play>d__17))]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0xCF65E4", Offset = "0xCF65E4", VA = "0xCF65E4")]
	public UGUITween()
	{
	}
}
[Token(Token = "0x200035D")]
public class UIFollowPos : MonoBehaviour
{
	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool centerOrigin;

	[Token(Token = "0x600167F")]
	[Address(RVA = "0xCF6A48", Offset = "0xCF6A48", VA = "0xCF6A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0xCF6AD0", Offset = "0xCF6AD0", VA = "0xCF6AD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0xCF6B14", Offset = "0xCF6B14", VA = "0xCF6B14")]
	private void SetUI(Vector3 pixPos)
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0xCF6BAC", Offset = "0xCF6BAC", VA = "0xCF6BAC")]
	public UIFollowPos()
	{
	}
}
[Token(Token = "0x200035E")]
public class UGUIEventListener : EventTrigger
{
	[Token(Token = "0x6001683")]
	[Address(RVA = "0xCF6BB4", Offset = "0xCF6BB4", VA = "0xCF6BB4")]
	public static UGUIEventListener AddListener(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0xCF6C4C", Offset = "0xCF6C4C", VA = "0xCF6C4C")]
	public UGUIEventListener()
	{
	}
}
[Token(Token = "0x200035F")]
public class XRControllerKeyHighLight : MonoBehaviour
{
	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D textureIdle;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D textureStick;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D textureTrigger;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D textureGrip;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D textureA;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D textureB;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<XRControllerKey, Texture2D> keyTextureDic;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool tipsState;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D currHitTexture;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float flickerTime;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float currFlickerTime;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool tick;

	[Token(Token = "0x6001685")]
	[Address(RVA = "0xCF6C54", Offset = "0xCF6C54", VA = "0xCF6C54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0xCF6D48", Offset = "0xCF6D48", VA = "0xCF6D48")]
	public void SetKeyHitFlicker(XRControllerKey key)
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0xCF6E94", Offset = "0xCF6E94", VA = "0xCF6E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0xCF6EFC", Offset = "0xCF6EFC", VA = "0xCF6EFC")]
	private void ToggleTexture(bool tick)
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0xCF6DD8", Offset = "0xCF6DD8", VA = "0xCF6DD8")]
	public void SetKeyLight(XRControllerKey key)
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0xCF6F4C", Offset = "0xCF6F4C", VA = "0xCF6F4C")]
	public XRControllerKeyHighLight()
	{
	}
}
[Token(Token = "0x2000360")]
public enum XRControllerKey
{
	[Token(Token = "0x4001147")]
	Idle,
	[Token(Token = "0x4001148")]
	Stick,
	[Token(Token = "0x4001149")]
	PrimaryButton,
	[Token(Token = "0x400114A")]
	SecondaryButton,
	[Token(Token = "0x400114B")]
	Trigger,
	[Token(Token = "0x400114C")]
	Grip,
	[Token(Token = "0x400114D")]
	MenuButton
}
[Token(Token = "0x2000361")]
public class ShootSphere : MonoBehaviour
{
	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject g;

	[Token(Token = "0x600168B")]
	[Address(RVA = "0xCF6FE0", Offset = "0xCF6FE0", VA = "0xCF6FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0xCF6FE4", Offset = "0xCF6FE4", VA = "0xCF6FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0xCF7210", Offset = "0xCF7210", VA = "0xCF7210")]
	public ShootSphere()
	{
	}
}
[Token(Token = "0x2000362")]
public class ULoadingPanel : MonoBehaviour
{
	[Token(Token = "0x2000363")]
	[CompilerGenerated]
	private sealed class <DoEffect1>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ULoadingPanel <>4__this;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <zt>5__3;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startZt>5__4;

		[Token(Token = "0x17000384")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xCF7840", Offset = "0xCF7840", VA = "0xCF7840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0xCF7888", Offset = "0xCF7888", VA = "0xCF7888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xCF73C0", Offset = "0xCF73C0", VA = "0xCF73C0")]
		[DebuggerHidden]
		public <DoEffect1>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xCF748C", Offset = "0xCF748C", VA = "0xCF748C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xCF7490", Offset = "0xCF7490", VA = "0xCF7490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xCF7848", Offset = "0xCF7848", VA = "0xCF7848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <DoEffect2>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ULoadingPanel <>4__this;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000386")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xCF79FC", Offset = "0xCF79FC", VA = "0xCF79FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xCF7A44", Offset = "0xCF7A44", VA = "0xCF7A44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xCF745C", Offset = "0xCF745C", VA = "0xCF745C")]
		[DebuggerHidden]
		public <DoEffect2>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xCF7890", Offset = "0xCF7890", VA = "0xCF7890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xCF7894", Offset = "0xCF7894", VA = "0xCF7894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xCF7A04", Offset = "0xCF7A04", VA = "0xCF7A04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup TwinkleLoading;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mImage;

	[Token(Token = "0x600168E")]
	[Address(RVA = "0xCF7218", Offset = "0xCF7218", VA = "0xCF7218")]
	private void Awake()
	{
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0xCF7244", Offset = "0xCF7244", VA = "0xCF7244")]
	private void Start()
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0xCF737C", Offset = "0xCF737C", VA = "0xCF737C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0xCF7308", Offset = "0xCF7308", VA = "0xCF7308")]
	[IteratorStateMachine(typeof(<DoEffect1>d__6))]
	private IEnumerator DoEffect1()
	{
		return null;
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0xCF73E8", Offset = "0xCF73E8", VA = "0xCF73E8")]
	[IteratorStateMachine(typeof(<DoEffect2>d__7))]
	private IEnumerator DoEffect2()
	{
		return null;
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0xCF7484", Offset = "0xCF7484", VA = "0xCF7484")]
	public ULoadingPanel()
	{
	}
}
[Token(Token = "0x2000365")]
public class handanimations : MonoBehaviour
{
	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int Idle;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int Point;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int GrabLarge;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int GrabSmall;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int GrabStickUp;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int GrabStickFront;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int ThumbUp;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int Fist;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int Gun;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int GunShoot;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int PushButton;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Spread;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int MiddleFinger;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int Peace;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int OK;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int Phone;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int Rock;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int Natural;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int Number3;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int Number4;

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xCF7A4C", Offset = "0xCF7A4C", VA = "0xCF7A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xCF7AA4", Offset = "0xCF7AA4", VA = "0xCF7AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xCF7D40", Offset = "0xCF7D40", VA = "0xCF7D40")]
	public handanimations()
	{
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000366")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x2000367")]
		private class CameraState
		{
			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xCF8848", Offset = "0xCF8848", VA = "0xCF8848")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xCF8F9C", Offset = "0xCF8F9C", VA = "0xCF8F9C")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xCF901C", Offset = "0xCF901C", VA = "0xCF901C")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xCF90A4", Offset = "0xCF90A4", VA = "0xCF90A4")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xCF92D0", Offset = "0xCF92D0", VA = "0xCF92D0")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001172")]
		private const float k_MouseSensitivityMultiplier = 0.01f;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Movement Settings")]
		[UnityEngine.Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		public float boost;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[UnityEngine.Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float positionLerpTime;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[UnityEngine.Tooltip("Multiplier for the sensitivity of the rotation.")]
		[Header("Rotation Settings")]
		public float mouseSensitivity;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[UnityEngine.Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0.001f, 1f)]
		[UnityEngine.Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		public float rotationLerpTime;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[UnityEngine.Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputAction movementAction;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputAction verticalMovementAction;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputAction lookAction;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputAction boostFactorAction;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool mouseRightButtonPressed;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xCF8064", Offset = "0xCF8064", VA = "0xCF8064")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xCF87F4", Offset = "0xCF87F4", VA = "0xCF87F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xCF88CC", Offset = "0xCF88CC", VA = "0xCF88CC")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xCF8968", Offset = "0xCF8968", VA = "0xCF8968")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xCF8F3C", Offset = "0xCF8F3C", VA = "0xCF8F3C")]
		private float GetBoostFactor()
		{
			return default(float);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xCF8E00", Offset = "0xCF8E00", VA = "0xCF8E00")]
		private Vector2 GetInputLookRotation()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xCF8E70", Offset = "0xCF8E70", VA = "0xCF8E70")]
		private bool IsBoostPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xCF8BA0", Offset = "0xCF8BA0", VA = "0xCF8BA0")]
		private bool IsEscapePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xCF8CC0", Offset = "0xCF8CC0", VA = "0xCF8CC0")]
		private bool IsCameraRotationAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xCF8C00", Offset = "0xCF8C00", VA = "0xCF8C00")]
		private bool IsRightMouseButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xCF8C60", Offset = "0xCF8C60", VA = "0xCF8C60")]
		private bool IsRightMouseButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xCF90EC", Offset = "0xCF90EC", VA = "0xCF90EC")]
		public SimpleCameraController()
		{
		}
	}
}
namespace Super3Core
{
	[Token(Token = "0x2000368")]
	public class PeopleAnimtorControl : MonoBehaviour
	{
		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator anim;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timer;

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xCF92D8", Offset = "0xCF92D8", VA = "0xCF92D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xCF9338", Offset = "0xCF9338", VA = "0xCF9338")]
		private void PlayAnimation()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xCF9438", Offset = "0xCF9438", VA = "0xCF9438")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xCF9498", Offset = "0xCF9498", VA = "0xCF9498")]
		public PeopleAnimtorControl()
		{
		}
	}
}
namespace UnityEngine
{
	[Token(Token = "0x2000369")]
	public static class MonoBehaviourExtensions
	{
		[Token(Token = "0x200036A")]
		[CompilerGenerated]
		private sealed class <Coroutine>d__1<T> : IEnumerator<object>, IEnumerator, IDisposable where T : YieldInstruction, new()
		{
			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public System.Action action;

			[Token(Token = "0x17000388")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016BD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000389")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016BF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016BA")]
			[DebuggerHidden]
			public <Coroutine>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60016BB")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016BC")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016BE")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016B8")]
		public static void StartCoroutine<T>(this MonoBehaviour monoBehaviour, System.Action action) where T : YieldInstruction, new()
		{
		}

		[Token(Token = "0x60016B9")]
		[IteratorStateMachine(typeof(<Coroutine>d__1<>))]
		private static IEnumerator Coroutine<T>(System.Action action) where T : YieldInstruction, new()
		{
			return null;
		}
	}
	[Token(Token = "0x200036B")]
	public class CoroutineBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MonoBehaviour Instance;

		[Token(Token = "0x60016C0")]
		public static void StartCoroutine<T>(System.Action action) where T : YieldInstruction, new()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xCF94A8", Offset = "0xCF94A8", VA = "0xCF94A8")]
		public CoroutineBehaviour()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal
{
	[Token(Token = "0x200036C")]
	public enum BufferType
	{
		[Token(Token = "0x400118D")]
		CameraColor,
		[Token(Token = "0x400118E")]
		Custom
	}
	[Token(Token = "0x200036D")]
	public class DrawFullscreenFeature : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x200036E")]
		public class Settings
		{
			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderPassEvent renderPassEvent;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material blitMaterial;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int blitMaterialPassIndex;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public BufferType sourceType;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BufferType destinationType;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string sourceTextureId;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string destinationTextureId;

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xCF9874", Offset = "0xCF9874", VA = "0xCF9874")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Settings settings;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DrawFullscreenPass blitPass;

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xCF9564", Offset = "0xCF9564", VA = "0xCF9564", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xCF9678", Offset = "0xCF9678", VA = "0xCF9678", Slot = "7")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xCF9804", Offset = "0xCF9804", VA = "0xCF9804")]
		public DrawFullscreenFeature()
		{
		}
	}
	[Token(Token = "0x200036F")]
	internal class DrawFullscreenPass : ScriptableRenderPass
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public DrawFullscreenFeature.Settings settings;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RenderTargetIdentifier source;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RenderTargetIdentifier destination;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int temporaryRTId;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int sourceId;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int destinationId;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool isSourceAndDestinationSameTarget;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private string m_ProfilerTag;

		[Token(Token = "0x1700038A")]
		public FilterMode filterMode
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xCF9908", Offset = "0xCF9908", VA = "0xCF9908")]
			[CompilerGenerated]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xCF9910", Offset = "0xCF9910", VA = "0xCF9910")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xCF95E0", Offset = "0xCF95E0", VA = "0xCF95E0")]
		public DrawFullscreenPass(string tag)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xCF9918", Offset = "0xCF9918", VA = "0xCF9918", Slot = "5")]
		public override void OnCameraSetup(CommandBuffer cmd, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xCF9BB0", Offset = "0xCF9BB0", VA = "0xCF9BB0", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xCF9D7C", Offset = "0xCF9D7C", VA = "0xCF9D7C", Slot = "4")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}
	}
}
namespace System
{
	[Token(Token = "0x2000370")]
	public static class ActionExtensions
	{
		[Token(Token = "0x60016CD")]
		public static void PerformAfterCoroutine<T>(this Action action) where T : YieldInstruction, new()
		{
		}
	}
}
namespace ConsoleApplication1
{
	[Token(Token = "0x2000371")]
	internal class MinaPackageSizeException : Exception
	{
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xCF9E18", Offset = "0xCF9E18", VA = "0xCF9E18")]
		public MinaPackageSizeException()
		{
		}
	}
	[Token(Token = "0x2000372")]
	internal class ServerConnectionException : Exception
	{
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xCF9E70", Offset = "0xCF9E70", VA = "0xCF9E70")]
		public ServerConnectionException()
		{
		}
	}
}
namespace GGTransfer
{
	[Token(Token = "0x2000373")]
	public abstract class Complex
	{
		[Token(Token = "0x60016D0")]
		public abstract void Read(ReceiveMsg rm);

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xCF9EC8", Offset = "0xCF9EC8", VA = "0xCF9EC8", Slot = "5")]
		public virtual void Write(Message msg)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xCF9ECC", Offset = "0xCF9ECC", VA = "0xCF9ECC", Slot = "6")]
		public virtual int TypeId()
		{
			return default(int);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xCF9ED4", Offset = "0xCF9ED4", VA = "0xCF9ED4")]
		protected Complex()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class ScoreInfo : Complex
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> list;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScoreInfo si;

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xCF9EDC", Offset = "0xCF9EDC", VA = "0xCF9EDC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xCFA0D8", Offset = "0xCFA0D8", VA = "0xCFA0D8")]
		public ScoreInfo()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class TipsData : Complex
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string txt;

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xCFA0E0", Offset = "0xCFA0E0", VA = "0xCFA0E0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xCFA0E4", Offset = "0xCFA0E4", VA = "0xCFA0E4")]
		public TipsData()
		{
		}
	}
	[Token(Token = "0x2000376")]
	internal class ManagedException
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<int, string> dict;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ManagedException instance;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xCFA0EC", Offset = "0xCFA0EC", VA = "0xCFA0EC")]
		private ManagedException()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xCFA290", Offset = "0xCFA290", VA = "0xCFA290")]
		public static void AddMoreException(int key, string value)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xCFA324", Offset = "0xCFA324", VA = "0xCFA324")]
		private static ManagedException getInstance()
		{
			return null;
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xCFA3B0", Offset = "0xCFA3B0", VA = "0xCFA3B0")]
		public static string get(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x2000377")]
	public class ExceptionInfo : Complex
	{
		[Token(Token = "0x40011A8")]
		public const int UnkownLocalException = 100;

		[Token(Token = "0x40011A9")]
		public const int UndefinedResponseType = 101;

		[Token(Token = "0x40011AA")]
		public const int ResponseResolveError = 102;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string content;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fromIp;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long createTime;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long updateTime;

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xCFA43C", Offset = "0xCFA43C", VA = "0xCFA43C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xCFA4C8", Offset = "0xCFA4C8", VA = "0xCFA4C8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xCFA538", Offset = "0xCFA538", VA = "0xCFA538")]
		public ExceptionInfo()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class SocketConnectionReadException : Exception
	{
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xCFA540", Offset = "0xCFA540", VA = "0xCFA540")]
		public SocketConnectionReadException()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class Account : Complex
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string phoneNum;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string email;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string address;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string openId;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string platform;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long lastLoginTime;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string lastLoginVersion;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long createTime;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long updateTime;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string loginToken;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int realNameStatus;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int emailStatus;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int status;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string nickName;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string accessToken;

		[Token(Token = "0x40011C0")]
		public const int EMAIL_STATUS_WAIT_FOR_VERIFY = 1;

		[Token(Token = "0x40011C1")]
		public const int EMAIL_STATUS_VERIFIED = 2;

		[Token(Token = "0x40011C2")]
		public const string PLATFORM_OFFICIAL = "OFFICIAL";

		[Token(Token = "0x40011C3")]
		public const int STATUS_正常用户账号 = 0;

		[Token(Token = "0x40011C4")]
		public const int STATUS_封禁用户账号 = 1;

		[Token(Token = "0x40011C5")]
		public const int STATUS_测试用户账号 = 2;

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xCFA598", Offset = "0xCFA598", VA = "0xCFA598", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xCFA724", Offset = "0xCFA724", VA = "0xCFA724", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xCFA844", Offset = "0xCFA844", VA = "0xCFA844")]
		public Account()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class AccountRealName : Complex
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string realName;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string cardId;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int under18;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long createTime;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long updateTime;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int status;

		[Token(Token = "0x40011CD")]
		public const int UNDER_18_IS_UNFILL = 0;

		[Token(Token = "0x40011CE")]
		public const int UNDER_18_IS_CHILD = 1;

		[Token(Token = "0x40011CF")]
		public const int UNDER_18_IS_ADULT = 2;

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xCFA84C", Offset = "0xCFA84C", VA = "0xCFA84C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xCFA8F8", Offset = "0xCFA8F8", VA = "0xCFA8F8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xCFA988", Offset = "0xCFA988", VA = "0xCFA988")]
		public AccountRealName()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class AddFriend : Complex
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long userId;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long friendId;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userIdAllow;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string friendIdAllow;

		[Token(Token = "0x40011D4")]
		public const string ALLOW = "YES";

		[Token(Token = "0x40011D5")]
		public const string DISALLOW = "NO";

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xCFA990", Offset = "0xCFA990", VA = "0xCFA990", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xCFAA08", Offset = "0xCFAA08", VA = "0xCFAA08", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xCFAA68", Offset = "0xCFAA68", VA = "0xCFAA68")]
		public AddFriend()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class AuctionBid : Complex
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long auctionItemId;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long accountId;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int bid;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long createTime;

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xCFAA70", Offset = "0xCFAA70", VA = "0xCFAA70", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xCFAAE4", Offset = "0xCFAAE4", VA = "0xCFAAE4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xCFAB54", Offset = "0xCFAB54", VA = "0xCFAB54")]
		public AuctionBid()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public class AuctionBidInfo : Complex
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int bid;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long accountId;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string avatar;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xCFAB5C", Offset = "0xCFAB5C", VA = "0xCFAB5C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xCFABE4", Offset = "0xCFABE4", VA = "0xCFABE4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xCFAC54", Offset = "0xCFAC54", VA = "0xCFAC54")]
		public AuctionBidInfo()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class AuctionItem : Complex
	{
		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long sellerAccountId;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long cardNftId;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long chainNftId;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string snapshotId;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int currentWorld;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int allStarPoint;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int startBid;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int bidCount;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentBid;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long highestAccountId;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long activeAuctionBidId;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public long startTime;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public long endTime;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int status;

		[Token(Token = "0x40011F0")]
		public const int ORDER_BY_TIME = 0;

		[Token(Token = "0x40011F1")]
		public const int ORDER_BY_ALL_STAR = 1;

		[Token(Token = "0x40011F2")]
		public const int ORDER_BY_PRICE = 2;

		[Token(Token = "0x40011F3")]
		public const int ORDER_BY_HOT = 3;

		[Token(Token = "0x40011F4")]
		public const int STATUS_拍卖进行中 = 0;

		[Token(Token = "0x40011F5")]
		public const int STATUS_拍卖已结束待付款 = 1;

		[Token(Token = "0x40011F6")]
		public const int STATUS_拍卖已付款完成 = 2;

		[Token(Token = "0x40011F7")]
		public const int STATUS_拍卖成功交割 = 3;

		[Token(Token = "0x40011F8")]
		public const int STATUS_拍卖时间到无人竞拍 = 10;

		[Token(Token = "0x40011F9")]
		public const int STATUS_拍卖得标人未付款 = 11;

		[Token(Token = "0x40011FA")]
		public const int STATUS_拍卖已撤回 = 20;

		[Token(Token = "0x40011FB")]
		public const int STATUS_拍卖已重开 = 21;

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xCFAC5C", Offset = "0xCFAC5C", VA = "0xCFAC5C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xCFAD98", Offset = "0xCFAD98", VA = "0xCFAD98", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xCFAEB8", Offset = "0xCFAEB8", VA = "0xCFAEB8")]
		public AuctionItem()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class AuctionItemData : Complex
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long sellerAccountId;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long cardNftId;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long chainNftId;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string snapshotId;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int currentWorld;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int allStarPoint;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int startBid;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int bidCount;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentBid;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long highestAccountId;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long activeAuctionBidId;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public long startTime;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public long endTime;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int status;

		[Token(Token = "0x400120C")]
		public const int ORDER_BY_TIME = 0;

		[Token(Token = "0x400120D")]
		public const int ORDER_BY_ALL_STAR = 1;

		[Token(Token = "0x400120E")]
		public const int ORDER_BY_PRICE = 2;

		[Token(Token = "0x400120F")]
		public const int ORDER_BY_HOT = 3;

		[Token(Token = "0x4001210")]
		public const int STATUS_拍卖进行中 = 0;

		[Token(Token = "0x4001211")]
		public const int STATUS_拍卖已结束待付款 = 1;

		[Token(Token = "0x4001212")]
		public const int STATUS_拍卖已付款完成 = 2;

		[Token(Token = "0x4001213")]
		public const int STATUS_拍卖成功交割 = 3;

		[Token(Token = "0x4001214")]
		public const int STATUS_拍卖时间到无人竞拍 = 10;

		[Token(Token = "0x4001215")]
		public const int STATUS_拍卖得标人未付款 = 11;

		[Token(Token = "0x4001216")]
		public const int STATUS_拍卖已撤回 = 20;

		[Token(Token = "0x4001217")]
		public const int STATUS_拍卖已重开 = 21;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xCFAEC0", Offset = "0xCFAEC0", VA = "0xCFAEC0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xCFAFFC", Offset = "0xCFAFFC", VA = "0xCFAFFC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xCFB11C", Offset = "0xCFB11C", VA = "0xCFB11C")]
		public AuctionItemData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000380")]
	public class AuctionItemUpdateInfo : Complex
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bidCount;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int currentBid;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long highestAccountId;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long activeAuctionBidId;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int status;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AuctionBidInfo abi;

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xCFB124", Offset = "0xCFB124", VA = "0xCFB124", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xCFB28C", Offset = "0xCFB28C", VA = "0xCFB28C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xCFB30C", Offset = "0xCFB30C", VA = "0xCFB30C")]
		public AuctionItemUpdateInfo()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class AuctionJoin : Complex
	{
		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long auctionItemId;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long accountId;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string snapshotId;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long cardNftId;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long chainNftId;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string name;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int lastBid;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int payForJoin;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long createTime;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long lastBidTime;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long cancelTime;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public long approveTime;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public long approveOrderId;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int status;

		[Token(Token = "0x400122D")]
		public const int STATUS_未出价 = 0;

		[Token(Token = "0x400122E")]
		public const int STATUS_当前最高价 = 1;

		[Token(Token = "0x400122F")]
		public const int STATUS_被压价出局 = 2;

		[Token(Token = "0x4001230")]
		public const int STATUS_得标待支付 = 10;

		[Token(Token = "0x4001231")]
		public const int STATUS_得标已支付 = 11;

		[Token(Token = "0x4001232")]
		public const int STATUS_得标未支付 = 20;

		[Token(Token = "0x4001233")]
		public const int STATUS_押金已撤回 = 30;

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xCFB314", Offset = "0xCFB314", VA = "0xCFB314", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xCFB440", Offset = "0xCFB440", VA = "0xCFB440", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xCFB550", Offset = "0xCFB550", VA = "0xCFB550")]
		public AuctionJoin()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class Award : Complex
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int type;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int itemId;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int num;

		[Token(Token = "0x4001237")]
		public const int TYPE_CLOTH = 1;

		[Token(Token = "0x4001238")]
		public const int TYPE_ITEM = 0;

		[Token(Token = "0x4001239")]
		public const int TYPE_GOLD = 7;

		[Token(Token = "0x400123A")]
		public const int TYPE_DIAMOND = 8;

		[Token(Token = "0x400123B")]
		public const int TYPE_PLAYER_ENERGY = 9;

		[Token(Token = "0x400123C")]
		public const int TYPE_PLAYER_ENERGY_MAX = 10;

		[Token(Token = "0x400123D")]
		public const int TYPE_PLAYER_EXP = 11;

		[Token(Token = "0x400123E")]
		public const int CANNOT_GET = 0;

		[Token(Token = "0x400123F")]
		public const int CAN_GET = 1;

		[Token(Token = "0x4001240")]
		public const int ALEADY_GET = 2;

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xCFC558", Offset = "0xCFC558", VA = "0xCFC558", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xCFC5B4", Offset = "0xCFC5B4", VA = "0xCFC5B4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xCFC604", Offset = "0xCFC604", VA = "0xCFC604")]
		public Award()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class AwardConfig : Complex
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int type;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int subType;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string lootInfo;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string numInfo;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string randomLootInfo;

		[Token(Token = "0x4001248")]
		public const int TYPE_CHEST = 1;

		[Token(Token = "0x4001249")]
		public const int TYPE_SEVEN_DAYS = 2;

		[Token(Token = "0x400124A")]
		public const int TYPE_CD_KEY = 3;

		[Token(Token = "0x400124B")]
		public const int TYPE_LEVEL_AWARDS = 4;

		[Token(Token = "0x400124C")]
		public const int TYPE_HIGH_RANK_AWARDS = 5;

		[Token(Token = "0x400124D")]
		public const int TYPE_FESTIVAL_GIFT = 6;

		[Token(Token = "0x400124E")]
		public const int TYPE_WORLD_LOOT = 7;

		[Token(Token = "0x400124F")]
		public const int TYPE_FIRST_CHARGE = 8;

		[Token(Token = "0x4001250")]
		public const int TYPE_个人基金 = 9;

		[Token(Token = "0x4001251")]
		public const int TYPE_全服基金 = 10;

		[Token(Token = "0x4001252")]
		public const int TYPE_累计充值 = 11;

		[Token(Token = "0x4001253")]
		public const int TYPE_累计消费 = 12;

		[Token(Token = "0x4001254")]
		public const int TYPE_本期橙色 = 13;

		[Token(Token = "0x4001255")]
		public const int TYPE_叶罗丽热度奖励 = 14;

		[Token(Token = "0x4001256")]
		public const int TYPE_全民兑换规则 = 15;

		[Token(Token = "0x4001257")]
		public const int TYPE_掉落翻倍模式 = 16;

		[Token(Token = "0x4001258")]
		public const int TYPE_某钻奖励 = 17;

		[Token(Token = "0x4001259")]
		public const int TYPE_邀请奖励 = 18;

		[Token(Token = "0x400125A")]
		public const int TYPE_绑定邀请人奖励 = 19;

		[Token(Token = "0x400125B")]
		public const int VAL_邀请奖励等级需求 = 40;

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xCFC60C", Offset = "0xCFC60C", VA = "0xCFC60C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xCFC6CC", Offset = "0xCFC6CC", VA = "0xCFC6CC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xCFC75C", Offset = "0xCFC75C", VA = "0xCFC75C")]
		public AwardConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public class BasketBallWorldData : Complex
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int position;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int level;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int exp;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int shoot;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int dunk;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int block;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rebound;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int steal;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int pass;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int dribble;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string title;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string honor;

		[Token(Token = "0x4001268")]
		public const int POSITION_C = 16;

		[Token(Token = "0x4001269")]
		public const int POSITION_PF = 8;

		[Token(Token = "0x400126A")]
		public const int POSITION_SF = 4;

		[Token(Token = "0x400126B")]
		public const int POSITION_SG = 2;

		[Token(Token = "0x400126C")]
		public const int POSITION_PG = 1;

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xCFC764", Offset = "0xCFC764", VA = "0xCFC764", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xCFC85C", Offset = "0xCFC85C", VA = "0xCFC85C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xCFC93C", Offset = "0xCFC93C", VA = "0xCFC93C")]
		public BasketBallWorldData()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class BasketExtend : Complex
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserDetail userDetail;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UserCareer userCareer;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Mail> mailList;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GoodsAndCount> pack;

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xCFC944", Offset = "0xCFC944", VA = "0xCFC944", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xCFCC78", Offset = "0xCFCC78", VA = "0xCFCC78", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xCFCCD8", Offset = "0xCFCCD8", VA = "0xCFCCD8")]
		public BasketExtend()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class BasketFastTeam : Complex
	{
		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title1;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description1;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string team1;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title2;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string description2;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string team2;

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xCFCCE0", Offset = "0xCFCCE0", VA = "0xCFCCE0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xCFCDA8", Offset = "0xCFCDA8", VA = "0xCFCDA8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xCFCE28", Offset = "0xCFCE28", VA = "0xCFCE28")]
		public BasketFastTeam()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class BasketFastTeamData : Complex
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int tid;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<long> cardNftIds;

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xCFCE30", Offset = "0xCFCE30", VA = "0xCFCE30", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xCFCF90", Offset = "0xCFCF90", VA = "0xCFCF90", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xCFCFF0", Offset = "0xCFCFF0", VA = "0xCFCFF0")]
		public BasketFastTeamData()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class BasketMail : Mail
	{
		[Token(Token = "0x600170D")]
		[Address(RVA = "0xCFCFF8", Offset = "0xCFCFF8", VA = "0xCFCFF8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xCFD214", Offset = "0xCFD214", VA = "0xCFD214", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xCFD308", Offset = "0xCFD308", VA = "0xCFD308")]
		public BasketMail()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class BasketPVPTeamData : Complex
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long accountId;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string oppUserAvatar;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string oppUserName;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long battleId;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CardNftBasketBallWorldData> oppCardList;

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xCFD318", Offset = "0xCFD318", VA = "0xCFD318", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xCFD48C", Offset = "0xCFD48C", VA = "0xCFD48C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xCFD4FC", Offset = "0xCFD4FC", VA = "0xCFD4FC")]
		public BasketPVPTeamData()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class Battle : Complex
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int battleResult;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int fightTime;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fightKills;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int fightCalories;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fightStrikes;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int fightEffectiveHits;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int fightRank;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long battleStartTime;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long battleEndTime;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int difficulty;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int sceneId;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string salt;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string clothes;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string roomId;

		[Token(Token = "0x4001290")]
		public const int RESULT_UNFINISHED = 0;

		[Token(Token = "0x4001291")]
		public const int RESULT_NO_WIN = 1;

		[Token(Token = "0x4001292")]
		public const int RESULT_WIN_CHICKEN = 2;

		[Token(Token = "0x4001293")]
		public const int FIGHT_UN_RANK = 0;

		[Token(Token = "0x4001294")]
		public const int DIFFICULTY_PRIMARY = 0;

		[Token(Token = "0x4001295")]
		public const int DIFFICULTY_MIDDLE = 1;

		[Token(Token = "0x4001296")]
		public const int DIFFICULTY_SENIOR = 2;

		[Token(Token = "0x4001297")]
		public const int DIFFICULTY_PVP = 99;

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xCFD504", Offset = "0xCFD504", VA = "0xCFD504", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xCFD648", Offset = "0xCFD648", VA = "0xCFD648", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xCFD768", Offset = "0xCFD768", VA = "0xCFD768")]
		public Battle()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class BattleAward : Complex
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int exp;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gold;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Award> goods;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Award> goodsInBox;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int afterLevel;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int afterExp;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int star;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool hasNewBonus;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xCFD770", Offset = "0xCFD770", VA = "0xCFD770", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xCFD980", Offset = "0xCFD980", VA = "0xCFD980", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xCFDA20", Offset = "0xCFDA20", VA = "0xCFDA20")]
		public BattleAward()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class BattleEndInfo : Complex
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long battleId;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sign;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int battleResult;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int fightRank;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fightTime;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int fightKills;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fightCalories;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int fightStrikes;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int fightEffectiveHits;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string roomId;

		[Token(Token = "0x40012AA")]
		public const int RESULT_UNFINISHED = 0;

		[Token(Token = "0x40012AB")]
		public const int RESULT_NO_WIN = 1;

		[Token(Token = "0x40012AC")]
		public const int RESULT_WIN_CHICKEN = 2;

		[Token(Token = "0x40012AD")]
		public const int FIGHT_UN_RANK = 0;

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xCFDA28", Offset = "0xCFDA28", VA = "0xCFDA28", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xCFDB00", Offset = "0xCFDB00", VA = "0xCFDB00", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xCFDBC0", Offset = "0xCFDBC0", VA = "0xCFDBC0")]
		public BattleEndInfo()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class BattleNftStat : Complex
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long cardNftId;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long battleId;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int score;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ast;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int reb;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int blk;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int stl;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int dnk;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int shot;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int goal;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int shot3;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int goal3;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int brk;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long collectTime;

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xCFDBC8", Offset = "0xCFDBC8", VA = "0xCFDBC8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xCFDCCC", Offset = "0xCFDCCC", VA = "0xCFDCCC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xCFDDCC", Offset = "0xCFDDCC", VA = "0xCFDDCC")]
		public BattleNftStat()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class BattleStartInfo : Complex
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long battleId;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string salt;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RivalPlayer> joinedPlayer;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long time;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int sceneId;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sign;

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xCFDDD4", Offset = "0xCFDDD4", VA = "0xCFDDD4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xCFDF58", Offset = "0xCFDF58", VA = "0xCFDF58", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xCFDFD8", Offset = "0xCFDFD8", VA = "0xCFDFD8")]
		public BattleStartInfo()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class BattleStat : Complex
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long battleId;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BattleNftStat> list;

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xCFDFE0", Offset = "0xCFDFE0", VA = "0xCFDFE0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xCFE108", Offset = "0xCFE108", VA = "0xCFE108", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xCFE148", Offset = "0xCFE148", VA = "0xCFE148")]
		public BattleStat()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class BossSkillData : Complex
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int skill1;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int skill2;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int skill3;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int skill4;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int skill5;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int skill6;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xCFE150", Offset = "0xCFE150", VA = "0xCFE150", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xCFE1E4", Offset = "0xCFE1E4", VA = "0xCFE1E4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xCFE274", Offset = "0xCFE274", VA = "0xCFE274")]
		public BossSkillData()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class CardNft : Complex
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long categoryId;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long serialId;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long chainNftId;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long dna;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte rarity;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int weight;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int level;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int exp;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int strength;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int stamina;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int speed;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int explosive;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int inUse;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int price;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int currentWorld;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int battleScore;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int selling;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public long belongAccountId;

		[Token(Token = "0x40012E0")]
		public const int IN_USE_未上阵 = 0;

		[Token(Token = "0x40012E1")]
		public const int IN_USE_篮球上阵中 = 1;

		[Token(Token = "0x40012E2")]
		public const int IN_USE_足球上阵中 = 2;

		[Token(Token = "0x40012E3")]
		public const int IN_USE_橄榄球上阵中 = 4;

		[Token(Token = "0x40012E4")]
		public const int CURRENT_WORLD_篮球 = 1;

		[Token(Token = "0x40012E5")]
		public const int CURRENT_WORLD_足球 = 2;

		[Token(Token = "0x40012E6")]
		public const int CURRENT_WORLD_橄榄球 = 4;

		[Token(Token = "0x40012E7")]
		public const int SELLING_转移中未确权 = 2;

		[Token(Token = "0x40012E8")]
		public const int SELLING_YES = 1;

		[Token(Token = "0x40012E9")]
		public const int SELLING_NO = 0;

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xCFE27C", Offset = "0xCFE27C", VA = "0xCFE27C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xCFE3FC", Offset = "0xCFE3FC", VA = "0xCFE3FC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xCFE56C", Offset = "0xCFE56C", VA = "0xCFE56C")]
		public CardNft()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class CardNftBasketBallWorldData : Complex
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CardNft nft;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketBallWorldData data;

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xCFE574", Offset = "0xCFE574", VA = "0xCFE574", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xCFE750", Offset = "0xCFE750", VA = "0xCFE750", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xCFE7A0", Offset = "0xCFE7A0", VA = "0xCFE7A0")]
		public CardNftBasketBallWorldData()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class CardNftBasketHistory : Complex
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int shoot;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int dunk;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int block;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rebound;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int steal;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int pass;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int dribble;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int shootAdd;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int dunkAdd;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int blockAdd;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int reboundAdd;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int stealAdd;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int passAdd;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int dribbleAdd;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int addDataExists;

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xCFE7A8", Offset = "0xCFE7A8", VA = "0xCFE7A8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xCFE8CC", Offset = "0xCFE8CC", VA = "0xCFE8CC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xCFE9EC", Offset = "0xCFE9EC", VA = "0xCFE9EC")]
		public CardNftBasketHistory()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class CardNftDataHistory : Complex
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int strength;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int stamina;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int speed;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int explosive;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int strengthAdd;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int staminaAdd;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int speedAdd;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int explosiveAdd;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int addDataExists;

		[Token(Token = "0x4001307")]
		public const int ADD_DATA_EXISTS = 1;

		[Token(Token = "0x4001308")]
		public const int ADD_DATA_NOT_EXISTS = 0;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xCFE9F4", Offset = "0xCFE9F4", VA = "0xCFE9F4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xCFEAB8", Offset = "0xCFEAB8", VA = "0xCFEAB8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xCFEB78", Offset = "0xCFEB78", VA = "0xCFEB78")]
		public CardNftDataHistory()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class CardNftDetail : Complex
	{
		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string basket;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string foot;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xCFEB80", Offset = "0xCFEB80", VA = "0xCFEB80", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xCFEBD8", Offset = "0xCFEBD8", VA = "0xCFEBD8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xCFEC18", Offset = "0xCFEC18", VA = "0xCFEC18")]
		public CardNftDetail()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class CardNftSnapshot : Complex
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long nftId;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long chainNftId;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long dna;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string name;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte rarity;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int snapVersion;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long belongAccountId;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string fullNftData;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xCFEC20", Offset = "0xCFEC20", VA = "0xCFEC20", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xCFECF4", Offset = "0xCFECF4", VA = "0xCFECF4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xCFEDA4", Offset = "0xCFEDA4", VA = "0xCFEDA4")]
		public CardNftSnapshot()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class ChargeInfo : Complex
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int diamond;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int mallId;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int monthCard;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool hasDouble;

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xCFEDAC", Offset = "0xCFEDAC", VA = "0xCFEDAC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xCFEE14", Offset = "0xCFEE14", VA = "0xCFEE14", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xCFEE74", Offset = "0xCFEE74", VA = "0xCFEE74")]
		public ChargeInfo()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class Clothes : Complex
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string role;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string part;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string unlock;

		[Token(Token = "0x400131C")]
		public const string ROLE_猥琐男_头饰 = "11";

		[Token(Token = "0x400131D")]
		public const string ROLE_猥琐男_面部 = "12";

		[Token(Token = "0x400131E")]
		public const string ROLE_猥琐男_服装 = "13";

		[Token(Token = "0x400131F")]
		public const string ROLE_猥琐男_拳套 = "14";

		[Token(Token = "0x4001320")]
		public const string ROLE_猥琐男_头发 = "15";

		[Token(Token = "0x4001321")]
		public const string ROLE_黑老大_头饰 = "21";

		[Token(Token = "0x4001322")]
		public const string ROLE_黑老大_面部 = "22";

		[Token(Token = "0x4001323")]
		public const string ROLE_黑老大_服装 = "23";

		[Token(Token = "0x4001324")]
		public const string ROLE_黑老大_拳套 = "24";

		[Token(Token = "0x4001325")]
		public const string ROLE_黑老大_头发 = "25";

		[Token(Token = "0x4001326")]
		public const string ROLE_悟空_头饰 = "31";

		[Token(Token = "0x4001327")]
		public const string ROLE_悟空_面部 = "32";

		[Token(Token = "0x4001328")]
		public const string ROLE_悟空_服装 = "33";

		[Token(Token = "0x4001329")]
		public const string ROLE_悟空_拳套 = "34";

		[Token(Token = "0x400132A")]
		public const string ROLE_吕布_头饰 = "41";

		[Token(Token = "0x400132B")]
		public const string ROLE_吕布_面部 = "42";

		[Token(Token = "0x400132C")]
		public const string ROLE_吕布_服装 = "43";

		[Token(Token = "0x400132D")]
		public const string ROLE_吕布_拳套 = "44";

		[Token(Token = "0x400132E")]
		public const string ROLE_吕布_头发 = "45";

		[Token(Token = "0x400132F")]
		public const string ROLE_特离谱_头饰 = "51";

		[Token(Token = "0x4001330")]
		public const string ROLE_特离谱_面部 = "52";

		[Token(Token = "0x4001331")]
		public const string ROLE_特离谱_服装 = "53";

		[Token(Token = "0x4001332")]
		public const string ROLE_特离谱_拳套 = "54";

		[Token(Token = "0x4001333")]
		public const string ROLE_特离谱_头发 = "55";

		[Token(Token = "0x4001334")]
		public const string ROLE_狗头人_面部 = "62";

		[Token(Token = "0x4001335")]
		public const string ROLE_狗头人_服装 = "63";

		[Token(Token = "0x4001336")]
		public const string ROLE_狗头人_拳套 = "64";

		[Token(Token = "0x4001337")]
		public const string ROLE_狗头人_头发 = "65";

		[Token(Token = "0x4001338")]
		public const string ROLE_月少女_头饰 = "71";

		[Token(Token = "0x4001339")]
		public const string ROLE_月少女_面部 = "72";

		[Token(Token = "0x400133A")]
		public const string ROLE_月少女_服装 = "73";

		[Token(Token = "0x400133B")]
		public const string ROLE_月少女_拳套 = "74";

		[Token(Token = "0x400133C")]
		public const string ROLE_月少女_头发 = "75";

		[Token(Token = "0x400133D")]
		public const string ROLE_白雪公主_头饰 = "81";

		[Token(Token = "0x400133E")]
		public const string ROLE_白雪公主_面部 = "82";

		[Token(Token = "0x400133F")]
		public const string ROLE_白雪公主_服装 = "83";

		[Token(Token = "0x4001340")]
		public const string ROLE_白雪公主_拳套 = "84";

		[Token(Token = "0x4001341")]
		public const string ROLE_白雪公主_头发 = "85";

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xCFEE7C", Offset = "0xCFEE7C", VA = "0xCFEE7C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xCFEF00", Offset = "0xCFEF00", VA = "0xCFEF00", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xCFEF60", Offset = "0xCFEF60", VA = "0xCFEF60")]
		public Clothes()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class ClothesMerge : Complex
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string collocation;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long userId;

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xCFEF68", Offset = "0xCFEF68", VA = "0xCFEF68", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xCFEFC8", Offset = "0xCFEFC8", VA = "0xCFEFC8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xCFF018", Offset = "0xCFF018", VA = "0xCFF018")]
		public ClothesMerge()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class ConfigData : Complex
	{
		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string datas;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long updateTime;

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xCFF020", Offset = "0xCFF020", VA = "0xCFF020", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xCFF09C", Offset = "0xCFF09C", VA = "0xCFF09C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xCFF0FC", Offset = "0xCFF0FC", VA = "0xCFF0FC")]
		public ConfigData()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class DailyInfo : Complex
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long normalOneFreeTime;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xCFF104", Offset = "0xCFF104", VA = "0xCFF104", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xCFF12C", Offset = "0xCFF12C", VA = "0xCFF12C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xCFF150", Offset = "0xCFF150", VA = "0xCFF150")]
		public DailyInfo()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class Dict : Complex
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string category;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string value;

		[Token(Token = "0x400134E")]
		public const string ALLOW_LOCAL_TOKEN_PICO = null;

		[Token(Token = "0x400134F")]
		public const string ALLOW_SERVER_TOKEN_PICO = null;

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xCFF158", Offset = "0xCFF158", VA = "0xCFF158", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xCFF1DC", Offset = "0xCFF1DC", VA = "0xCFF1DC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xCFF23C", Offset = "0xCFF23C", VA = "0xCFF23C")]
		public Dict()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class DragonCost : Complex
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lv;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int itemNum;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int goldNum;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xCFF244", Offset = "0xCFF244", VA = "0xCFF244", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xCFF2A8", Offset = "0xCFF2A8", VA = "0xCFF2A8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xCFF308", Offset = "0xCFF308", VA = "0xCFF308")]
		public DragonCost()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class DragonStat : Complex
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lv;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long attack;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long life;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long magic;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xCFF310", Offset = "0xCFF310", VA = "0xCFF310", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xCFF374", Offset = "0xCFF374", VA = "0xCFF374", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xCFF3D4", Offset = "0xCFF3D4", VA = "0xCFF3D4")]
		public DragonStat()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class Eliminate : Complex
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string knockout;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string obsolete;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long eliminateTime;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long updateTime;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int status;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string battleRoomId;

		[Token(Token = "0x400135F")]
		public const int STATUS_主动淘汰 = 1;

		[Token(Token = "0x4001360")]
		public const int STATUS_自杀 = 2;

		[Token(Token = "0x4001361")]
		public const int STATUS_被淘汰 = 3;

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xCFF3DC", Offset = "0xCFF3DC", VA = "0xCFF3DC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xCFF490", Offset = "0xCFF490", VA = "0xCFF490", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xCFF520", Offset = "0xCFF520", VA = "0xCFF520")]
		public Eliminate()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class EquipmentInfo : Complex
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string useTime;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hurt;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string description;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int status;

		[Token(Token = "0x4001368")]
		public const int STATUS_攻击 = 0;

		[Token(Token = "0x4001369")]
		public const int STATUS_防守 = 1;

		[Token(Token = "0x400136A")]
		public const int STATUS_特殊 = 2;

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xCFF528", Offset = "0xCFF528", VA = "0xCFF528", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xCFF5D0", Offset = "0xCFF5D0", VA = "0xCFF5D0", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xCFF650", Offset = "0xCFF650", VA = "0xCFF650")]
		public EquipmentInfo()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class ExceptionEntity : Complex
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int code;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string info;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xCFF658", Offset = "0xCFF658", VA = "0xCFF658", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xCFF6A4", Offset = "0xCFF6A4", VA = "0xCFF6A4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xCFF6E4", Offset = "0xCFF6E4", VA = "0xCFF6E4")]
		public ExceptionEntity()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class Friends : Complex
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long friendId;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int status;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long createTime;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long updateTime;

		[Token(Token = "0x4001373")]
		public const int STATUS_正常 = 0;

		[Token(Token = "0x4001374")]
		public const int STATUS_黑名单 = 1;

		[Token(Token = "0x4001375")]
		public const int STATUS_非好友 = 2;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xCFF6EC", Offset = "0xCFF6EC", VA = "0xCFF6EC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xCFF770", Offset = "0xCFF770", VA = "0xCFF770", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xCFF7F0", Offset = "0xCFF7F0", VA = "0xCFF7F0")]
		public Friends()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class GMTalkInfo : Complex
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long playerId;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string type;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerInfo;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string GMInfo;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xCFF7F8", Offset = "0xCFF7F8", VA = "0xCFF7F8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xCFF87C", Offset = "0xCFF87C", VA = "0xCFF87C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xCFF8DC", Offset = "0xCFF8DC", VA = "0xCFF8DC")]
		public GMTalkInfo()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class GateAward : Complex
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gold;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string awardInfo;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string star3AwardInfo;

		[Token(Token = "0x400137E")]
		public const int RANDOM_GATE_BOX_START = 9900;

		[Token(Token = "0x400137F")]
		public const int RANDOM_MALL_BOX_START = 9800;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xCFF8E4", Offset = "0xCFF8E4", VA = "0xCFF8E4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xCFF95C", Offset = "0xCFF95C", VA = "0xCFF95C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xCFF9BC", Offset = "0xCFF9BC", VA = "0xCFF9BC")]
		public GateAward()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class GateDefine : Complex
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int color;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int difficulty;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int wave;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int bossGate;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int soldierProb;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int itemCooldownBlock;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int star1;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int star2;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int star3;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int waveTime;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int lastWaveTime;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int level;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int levelPercent;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int open;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long layoutId;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long towerAttack;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long towerHp;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string bossPerfab;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int bossZoom;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public long bossAttack;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public long bossHp;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int loot1;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int loot2;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int loot3;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int sceneId;

		[Token(Token = "0x400139A")]
		public const int BONUS_GATE_ID = 10001;

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xCFF9C4", Offset = "0xCFF9C4", VA = "0xCFF9C4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xCFFB94", Offset = "0xCFFB94", VA = "0xCFFB94", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xCFFD54", Offset = "0xCFFD54", VA = "0xCFFD54")]
		public GateDefine()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class GateLayout : Complex
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int c60;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int c61;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int c62;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int c63;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c64;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c65;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int c66;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int c50;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c51;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int c52;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c53;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c54;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c55;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int c56;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int c40;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c41;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int c42;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c43;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int c44;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int c45;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int c46;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int c30;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int c31;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int c32;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int c33;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int c34;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int c35;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int c36;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int c20;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int c21;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int c22;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int c23;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int c24;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int c25;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int c26;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int c10;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int c11;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int c12;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int c13;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int c14;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int c15;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int c16;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int c00;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int c01;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int c02;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int c03;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int c04;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int c05;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int c06;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xCFFD5C", Offset = "0xCFFD5C", VA = "0xCFFD5C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xD00164", Offset = "0xD00164", VA = "0xD00164", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xD004A4", Offset = "0xD004A4", VA = "0xD004A4")]
		public GateLayout()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class GateSoldier : Complex
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long gateId;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int waveId;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int s1;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int s2;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int s3;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int s4;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int s5;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int s6;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int s7;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int s8;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int s9;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int s10;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int s11;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int s12;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int s13;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int s14;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int s15;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int s16;

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xD004AC", Offset = "0xD004AC", VA = "0xD004AC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xD00644", Offset = "0xD00644", VA = "0xD00644", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xD00794", Offset = "0xD00794", VA = "0xD00794")]
		public GateSoldier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class GetVerifyCodeResponse : Complex
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string info;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int cooldownDelay;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string code;

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xD0079C", Offset = "0xD0079C", VA = "0xD0079C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xD00818", Offset = "0xD00818", VA = "0xD00818", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xD00878", Offset = "0xD00878", VA = "0xD00878")]
		public GetVerifyCodeResponse()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class GlobalServerData : Complex
	{
		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Notice> noticeList;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ConfigData> configList;

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xD00880", Offset = "0xD00880", VA = "0xD00880", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xD00A4C", Offset = "0xD00A4C", VA = "0xD00A4C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xD00A8C", Offset = "0xD00A8C", VA = "0xD00A8C")]
		public GlobalServerData()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class GoodBall : Complex
	{
		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long accountId;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userName;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string userAvatar;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long cardNftId;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int cardNftLevel;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int cardNftPos;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string cardNftName;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long battleId;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string imgPath;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string recordPath;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int heart;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int dailyGroup;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public long createTime;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public long updateTime;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xD00A94", Offset = "0xD00A94", VA = "0xD00A94", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xD00BE4", Offset = "0xD00BE4", VA = "0xD00BE4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xD00CF4", Offset = "0xD00CF4", VA = "0xD00CF4")]
		public GoodBall()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class GoodsAndCount : Complex
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int goodsId;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int count;

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xD00CFC", Offset = "0xD00CFC", VA = "0xD00CFC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xD00D48", Offset = "0xD00D48", VA = "0xD00D48", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xD00D88", Offset = "0xD00D88", VA = "0xD00D88")]
		public GoodsAndCount()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class LevelConst : Complex
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int exp;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int goldBase;

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xD00D90", Offset = "0xD00D90", VA = "0xD00D90", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD00DE4", Offset = "0xD00DE4", VA = "0xD00DE4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xD00E34", Offset = "0xD00E34", VA = "0xD00E34")]
		public LevelConst()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class LogAccount : Complex
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long accountId;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string info;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long createTime;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string version;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ip;

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xD00E3C", Offset = "0xD00E3C", VA = "0xD00E3C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xD00ED0", Offset = "0xD00ED0", VA = "0xD00ED0", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xD00F40", Offset = "0xD00F40", VA = "0xD00F40")]
		public LogAccount()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class LogClothesMergeInfo : Complex
	{
		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long createTime;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string info;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string oldInfo;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string newInfo;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string reason;

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xD00F48", Offset = "0xD00F48", VA = "0xD00F48", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD01008", Offset = "0xD01008", VA = "0xD01008", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xD01098", Offset = "0xD01098", VA = "0xD01098")]
		public LogClothesMergeInfo()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class LogUser : Complex
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string info;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long createTime;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ip;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD010A0", Offset = "0xD010A0", VA = "0xD010A0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD01128", Offset = "0xD01128", VA = "0xD01128", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD01198", Offset = "0xD01198", VA = "0xD01198")]
		public LogUser()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class Mail : Complex
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Award> awardList;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long id;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long accountId;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string content;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int mailType;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string awards;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int isRead;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int isReceive;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long sendTime;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long receiveTime;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string senderName;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string extraInfo;

		[Token(Token = "0x4001418")]
		public const int TYPE_SYS = 0;

		[Token(Token = "0x4001419")]
		public const int TYPE_PVP_A = 10;

		[Token(Token = "0x400141A")]
		public const int TYPE_PVP_D = 20;

		[Token(Token = "0x400141B")]
		public const int TYPE_奖励邮件 = 3;

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xCFCFFC", Offset = "0xCFCFFC", VA = "0xCFCFFC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xCFD218", Offset = "0xCFD218", VA = "0xCFD218", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xCFD310", Offset = "0xCFD310", VA = "0xCFD310")]
		public Mail()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class Mall : Complex
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int cost;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int costType;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int discount;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int mallType;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int buyType;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int itemId;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int num;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string giftContent;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TinyAwardConfig tinyAwardConfig;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int labelType;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int limitType;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int limitNum;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int goodType;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int goodRank;

		[Token(Token = "0x400142C")]
		public const int MALL_TYPE_卡包 = 100;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD011A0", Offset = "0xD011A0", VA = "0xD011A0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD013EC", Offset = "0xD013EC", VA = "0xD013EC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD0150C", Offset = "0xD0150C", VA = "0xD0150C")]
		public Mall()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class MallConst : Complex
	{
		[Token(Token = "0x400142D")]
		public const int COST_TYPE_DOLLAR = 1;

		[Token(Token = "0x400142E")]
		public const int COST_TYPE_GOLD = 7;

		[Token(Token = "0x400142F")]
		public const int COST_TYPE_GEM = 8;

		[Token(Token = "0x4001430")]
		public const int COST_TYPE_SCORE = 12;

		[Token(Token = "0x4001431")]
		public const int COST_TYPE_BIND_DIAMOND = 13;

		[Token(Token = "0x4001432")]
		public const int BUY_TYPE_ITEM = 0;

		[Token(Token = "0x4001433")]
		public const int BUY_TYPE_GEM = 8;

		[Token(Token = "0x4001434")]
		public const int BUY_TYPE_GOLD = 7;

		[Token(Token = "0x4001435")]
		public const int BUY_TYPE_ENERGY = 9;

		[Token(Token = "0x4001436")]
		public const int BUY_TYPE_ENERGY_MAX = 10;

		[Token(Token = "0x4001437")]
		public const int BUY_TYPE_SERVICE = 5;

		[Token(Token = "0x4001438")]
		public const int BUY_TYPE_GIFT = 6;

		[Token(Token = "0x4001439")]
		public const int BUY_TYPE_LOCK = 7;

		[Token(Token = "0x400143A")]
		public const int BUY_TYPE_GARMENT = 8;

		[Token(Token = "0x400143B")]
		public const int BUY_TYPE_KEY = 9;

		[Token(Token = "0x400143C")]
		public const int BUY_TYPE_FAVORABLE = 10;

		[Token(Token = "0x400143D")]
		public const int BUY_TYPE_BIND_DIAMOND = 14;

		[Token(Token = "0x400143E")]
		public const int ID_MONTH_CARD = 1;

		[Token(Token = "0x400143F")]
		public const int ID_EXTREME_CARD = 2;

		[Token(Token = "0x4001440")]
		public const int RECHARGE_DOUBLE_ITEM = 8;

		[Token(Token = "0x4001441")]
		public const int RECOMMEND_ITEM = 16;

		[Token(Token = "0x4001442")]
		public const int GROUP_ITEM = 1;

		[Token(Token = "0x4001443")]
		public const int GROUP_MATERIAL = 2;

		[Token(Token = "0x4001444")]
		public const int GROUP_GEM = 3;

		[Token(Token = "0x4001445")]
		public const int GROUP_GIFT = 4;

		[Token(Token = "0x4001446")]
		public const int BUY_TYPE_ARENA = 14;

		[Token(Token = "0x4001447")]
		public const int LABEL_HOT = 1;

		[Token(Token = "0x4001448")]
		public const int LABEL_NEW = 2;

		[Token(Token = "0x4001449")]
		public const int LABEL_DISCOUNT = 3;

		[Token(Token = "0x400144A")]
		public const int LIMIT_NIL = 0;

		[Token(Token = "0x400144B")]
		public const int LIMIT_PLAYER = 1;

		[Token(Token = "0x400144C")]
		public const int MALL_TYPE_NORMAL = 0;

		[Token(Token = "0x400144D")]
		public const int MALL_TYPE_ARENA = 1;

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD01514", Offset = "0xD01514", VA = "0xD01514", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD01518", Offset = "0xD01518", VA = "0xD01518", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xD0151C", Offset = "0xD0151C", VA = "0xD0151C")]
		public MallConst()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class MallItem : Complex
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mall mall;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int userBuyLimit;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int userBuyHistory;

		[Token(Token = "0x4001451")]
		public const int BUY_LIMIT_SOLD_OUT = -1;

		[Token(Token = "0x4001452")]
		public const int BUY_LIMIT_NO_LIMIT = 9999;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xD01524", Offset = "0xD01524", VA = "0xD01524", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xD0166C", Offset = "0xD0166C", VA = "0xD0166C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD016BC", Offset = "0xD016BC", VA = "0xD016BC")]
		public MallItem()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class MatchingInfo : Complex
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string t;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchingInfoPacket d;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xD016C4", Offset = "0xD016C4", VA = "0xD016C4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD017F8", Offset = "0xD017F8", VA = "0xD017F8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD01838", Offset = "0xD01838", VA = "0xD01838")]
		public MatchingInfo()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class MatchingInfoPacket : Complex
	{
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int joined;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long endTime;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxSize;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long now;

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xD01840", Offset = "0xD01840", VA = "0xD01840", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD018A4", Offset = "0xD018A4", VA = "0xD018A4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD01904", Offset = "0xD01904", VA = "0xD01904")]
		public MatchingInfoPacket()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class MatchingSuccess : Complex
	{
		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string t;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchingSuccessPacket d;

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD0190C", Offset = "0xD0190C", VA = "0xD0190C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD01A40", Offset = "0xD01A40", VA = "0xD01A40", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD01A80", Offset = "0xD01A80", VA = "0xD01A80")]
		public MatchingSuccess()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class MatchingSuccessPacket : Complex
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<PlayListToWebSocket> playList;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int roomType;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roomId;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomInfoToWebSocket roomInfo;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int npc;

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD01A88", Offset = "0xD01A88", VA = "0xD01A88", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD01C98", Offset = "0xD01C98", VA = "0xD01C98", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD01D08", Offset = "0xD01D08", VA = "0xD01D08")]
		public MatchingSuccessPacket()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class Notice : Complex
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long noticeId;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string body;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long createTime;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long startTime;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long endTime;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int priority;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string serverId;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string channelId;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int delaySecond;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int xtype;

		[Token(Token = "0x400146B")]
		public const string TITLE_UPDATEVERSION = "版本更新";

		[Token(Token = "0x400146C")]
		public const int XTYPE_IMMEDIATELY = 2;

		[Token(Token = "0x400146D")]
		public const int XTYPE_LOGIN = 1;

		[Token(Token = "0x400146E")]
		public const int PRIORITY_GM = 10;

		[Token(Token = "0x400146F")]
		public const string CHANNEL_ID_PICO = "PICO";

		[Token(Token = "0x4001470")]
		public const string CHANNEL_ID_ALL = "ALL";

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD01D10", Offset = "0xD01D10", VA = "0xD01D10", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xD01E14", Offset = "0xD01E14", VA = "0xD01E14", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xD01EE4", Offset = "0xD01EE4", VA = "0xD01EE4")]
		public Notice()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class Notify : Complex
	{
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xD01EEC", Offset = "0xD01EEC", VA = "0xD01EEC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xD01EF0", Offset = "0xD01EF0", VA = "0xD01EF0", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xD01EF4", Offset = "0xD01EF4", VA = "0xD01EF4")]
		public Notify()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class OnlineTime : Complex
	{
		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string dateTime;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long lastWeekOnlineSeconds;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long nowWeekOnlineSeconds;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long totalOnlineSeconds;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long todayOnlineSeconds;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long updateTime;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long lastActiveTime;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xD01EFC", Offset = "0xD01EFC", VA = "0xD01EFC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xD01FBC", Offset = "0xD01FBC", VA = "0xD01FBC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xD0206C", Offset = "0xD0206C", VA = "0xD0206C")]
		public OnlineTime()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class Order : Complex
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string token;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int gems;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int mallId;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int status;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long createTime;

		[Token(Token = "0x4001480")]
		public const int ORDER_STATUS_UNPAY = 0;

		[Token(Token = "0x4001481")]
		public const int ORDER_STATUS_PAYED = 1;

		[Token(Token = "0x4001482")]
		public const int ORDER_STATUS_FINISH = 2;

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD02074", Offset = "0xD02074", VA = "0xD02074", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xD02104", Offset = "0xD02104", VA = "0xD02104", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xD02184", Offset = "0xD02184", VA = "0xD02184")]
		public Order()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class OrderSuccess : Complex
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long playerId;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long accountId;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string serverId;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string username;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int diamond;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int mallId;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string terminal;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string publishChannel;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int totalCharge;

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xD0218C", Offset = "0xD0218C", VA = "0xD0218C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xD0229C", Offset = "0xD0229C", VA = "0xD0229C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xD0236C", Offset = "0xD0236C", VA = "0xD0236C")]
		public OrderSuccess()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class ParseableResponse : Complex
	{
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xD02374", Offset = "0xD02374", VA = "0xD02374", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xD02378", Offset = "0xD02378", VA = "0xD02378", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xD0237C", Offset = "0xD0237C", VA = "0xD0237C")]
		public ParseableResponse()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class PlayListToWebSocket : Complex
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long accountId;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nickName;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string defaultClothes;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xD02384", Offset = "0xD02384", VA = "0xD02384", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xD023EC", Offset = "0xD023EC", VA = "0xD023EC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xD0243C", Offset = "0xD0243C", VA = "0xD0243C")]
		public PlayListToWebSocket()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class PlayerFeedbackInfo : Complex
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string serverID;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long playerID;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string info;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reply;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int status;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long createTime;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long replyTime;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string name;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string publishChannel;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string type;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xD02444", Offset = "0xD02444", VA = "0xD02444", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xD02568", Offset = "0xD02568", VA = "0xD02568", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xD02638", Offset = "0xD02638", VA = "0xD02638")]
		public PlayerFeedbackInfo()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class PlayerInfo : Complex
	{
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xD02640", Offset = "0xD02640", VA = "0xD02640", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xD02644", Offset = "0xD02644", VA = "0xD02644", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xD02648", Offset = "0xD02648", VA = "0xD02648")]
		public PlayerInfo()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class PlayerSeasonCaloriesRank : Complex
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int seasonCaloriesRank;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string username;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long seasonCalories;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xD02650", Offset = "0xD02650", VA = "0xD02650", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xD026B0", Offset = "0xD026B0", VA = "0xD026B0", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xD02700", Offset = "0xD02700", VA = "0xD02700")]
		public PlayerSeasonCaloriesRank()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class PlayerSeasonWinRank : Complex
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int seasonWinRank;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string username;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long seasonWin;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xD02708", Offset = "0xD02708", VA = "0xD02708", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xD02768", Offset = "0xD02768", VA = "0xD02768", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xD027B8", Offset = "0xD027B8", VA = "0xD027B8")]
		public PlayerSeasonWinRank()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class PlayerTalkInfo : Complex
	{
		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long playerId;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long accountID;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int level;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int vipLevel;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int faceLevel;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int headIco;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sex;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int status;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xD027C0", Offset = "0xD027C0", VA = "0xD027C0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD02894", Offset = "0xD02894", VA = "0xD02894", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xD02944", Offset = "0xD02944", VA = "0xD02944")]
		public PlayerTalkInfo()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class PushContent : Complex
	{
		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<byte> content;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xD0294C", Offset = "0xD0294C", VA = "0xD0294C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xD02A80", Offset = "0xD02A80", VA = "0xD02A80", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xD02AC0", Offset = "0xD02AC0", VA = "0xD02AC0")]
		public PushContent()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class RankInfo : Complex
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RankItem> list;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long startTime;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long endTime;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long nextStartTime;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long serverTime;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RankItem selfRank;

		[Token(Token = "0x40014B3")]
		public const int OUT_OF_RANK = 30000;

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xD02AC8", Offset = "0xD02AC8", VA = "0xD02AC8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xD02CC0", Offset = "0xD02CC0", VA = "0xD02CC0", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xD02D40", Offset = "0xD02D40", VA = "0xD02D40")]
		public RankInfo()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class RankItem : Complex
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public short rank;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nickName;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long rankValue;

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xD02D48", Offset = "0xD02D48", VA = "0xD02D48", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xD02DB8", Offset = "0xD02DB8", VA = "0xD02DB8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xD02E18", Offset = "0xD02E18", VA = "0xD02E18")]
		public RankItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public class RegAndLoginInfo : Complex
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string info;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string openId;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string phoneNum;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string token;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xD02E20", Offset = "0xD02E20", VA = "0xD02E20", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xD02EC4", Offset = "0xD02EC4", VA = "0xD02EC4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xD02F34", Offset = "0xD02F34", VA = "0xD02F34")]
		public RegAndLoginInfo()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class RivalPlayer : Complex
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long userId;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nickName;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string icon;

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xD02F3C", Offset = "0xD02F3C", VA = "0xD02F3C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xD02FA4", Offset = "0xD02FA4", VA = "0xD02FA4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xD02FF4", Offset = "0xD02FF4", VA = "0xD02FF4")]
		public RivalPlayer()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class Robot : Complex
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string username;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int growthTime;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int winLowerLimit;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int winUpperLimit;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int caloriesLowerLimit;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int caloriesUpperLimit;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string activeTime;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string offlineTime;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long lastTickTime;

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xD02FFC", Offset = "0xD02FFC", VA = "0xD02FFC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xD030E4", Offset = "0xD030E4", VA = "0xD030E4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xD031A4", Offset = "0xD031A4", VA = "0xD031A4")]
		public Robot()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class RoomInfo : Complex
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string roomId;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roomUser;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int roomPeopleCount;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long createTime;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long updateTime;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string salt;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string winner;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int roomType;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int status;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long gameFinishTime;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string gameFinishInfo;

		[Token(Token = "0x40014D6")]
		public const int STATUS_正常 = 0;

		[Token(Token = "0x40014D7")]
		public const int STATUS_已结束 = 1;

		[Token(Token = "0x40014D8")]
		public const int STATUS_有疑义 = 2;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xD031AC", Offset = "0xD031AC", VA = "0xD031AC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xD032C8", Offset = "0xD032C8", VA = "0xD032C8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xD033A8", Offset = "0xD033A8", VA = "0xD033A8")]
		public RoomInfo()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class RoomInfoToWebSocket : Complex
	{
		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string salt;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long startTime;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long roomInfoId;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xD033B0", Offset = "0xD033B0", VA = "0xD033B0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xD03410", Offset = "0xD03410", VA = "0xD03410", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xD03460", Offset = "0xD03460", VA = "0xD03460")]
		public RoomInfoToWebSocket()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class RoomPacketTest : Complex
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int packType;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xD03468", Offset = "0xD03468", VA = "0xD03468", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xD034C4", Offset = "0xD034C4", VA = "0xD034C4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xD03514", Offset = "0xD03514", VA = "0xD03514")]
		public RoomPacketTest()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class Season : Complex
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long userId;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int seasonId;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int seasonWin;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long seasonCalories;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long lastUpdateTime;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string username;

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xD0351C", Offset = "0xD0351C", VA = "0xD0351C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xD035B8", Offset = "0xD035B8", VA = "0xD035B8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xD03648", Offset = "0xD03648", VA = "0xD03648")]
		public Season()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class SeasonCalories : Complex
	{
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xD03650", Offset = "0xD03650", VA = "0xD03650", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD03654", Offset = "0xD03654", VA = "0xD03654", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD03658", Offset = "0xD03658", VA = "0xD03658")]
		public SeasonCalories()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class Server : Complex
	{
		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string serverId;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string groupType;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string innerAddr;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string outAddr;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long createTime;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long reportTime;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int connCount;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int status;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public long updateTime;

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD03660", Offset = "0xD03660", VA = "0xD03660", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xD03770", Offset = "0xD03770", VA = "0xD03770", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD03840", Offset = "0xD03840", VA = "0xD03840")]
		public Server()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class ServerEvent : Complex
	{
		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long eventId;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string eventName;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string targetUser;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long noticeId;

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xD03848", Offset = "0xD03848", VA = "0xD03848", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xD038D4", Offset = "0xD038D4", VA = "0xD038D4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xD03944", Offset = "0xD03944", VA = "0xD03944")]
		public ServerEvent()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class ServerKey : Complex
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string xvalue;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xD0394C", Offset = "0xD0394C", VA = "0xD0394C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xD0397C", Offset = "0xD0397C", VA = "0xD0397C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xD039A0", Offset = "0xD039A0", VA = "0xD039A0")]
		public ServerKey()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class ServerRes : Complex
	{
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xD039A8", Offset = "0xD039A8", VA = "0xD039A8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xD039AC", Offset = "0xD039AC", VA = "0xD039AC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xD039B0", Offset = "0xD039B0", VA = "0xD039B0")]
		public ServerRes()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class Soldier : Complex
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lv;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ctype;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int attack;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int hp;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int speed;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xD039B8", Offset = "0xD039B8", VA = "0xD039B8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xD03A3C", Offset = "0xD03A3C", VA = "0xD03A3C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xD03ABC", Offset = "0xD03ABC", VA = "0xD03ABC")]
		public Soldier()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class SoldierCost : Complex
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lv;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int itemNum;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int goldNum;

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xD03AC4", Offset = "0xD03AC4", VA = "0xD03AC4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xD03B28", Offset = "0xD03B28", VA = "0xD03B28", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xD03B88", Offset = "0xD03B88", VA = "0xD03B88")]
		public SoldierCost()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class SoldierType : Complex
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string strId;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string cname;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ename;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int dataId;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int canUpgrade;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int upgradeItemId;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int userLevelRelateId;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int userLevelAdd;

		[Token(Token = "0x400150A")]
		public const int ID_WARRIOR = 1;

		[Token(Token = "0x400150B")]
		public const int ID_ARCH = 2;

		[Token(Token = "0x400150C")]
		public const int ID_SHIELD = 3;

		[Token(Token = "0x400150D")]
		public const int ID_CAV = 4;

		[Token(Token = "0x400150E")]
		public const int ID_CAV_SPEAR = 5;

		[Token(Token = "0x400150F")]
		public const int ID_CAV_SHIELD = 6;

		[Token(Token = "0x4001510")]
		public const int ID_MAGE_LIGHT = 7;

		[Token(Token = "0x4001511")]
		public const int ID_CATAP = 8;

		[Token(Token = "0x4001512")]
		public const int ID_MAGE_POISION = 9;

		[Token(Token = "0x4001513")]
		public const int ID_MAGE_ICE = 10;

		[Token(Token = "0x4001514")]
		public const int ID_SKELETON_WARRIOR = 11;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xD03B90", Offset = "0xD03B90", VA = "0xD03B90", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xD03C68", Offset = "0xD03C68", VA = "0xD03C68", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xD03D18", Offset = "0xD03D18", VA = "0xD03D18")]
		public SoldierType()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class Student : Complex
	{
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int number;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sex;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string phone;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string address;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string town;

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xD03D20", Offset = "0xD03D20", VA = "0xD03D20", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xD03DEC", Offset = "0xD03DEC", VA = "0xD03DEC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xD03E7C", Offset = "0xD03E7C", VA = "0xD03E7C")]
		public Student()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class TAccount : Complex
	{
		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string username;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long roleID;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte type;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string publishChannel;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string publishChannelUsername;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long unlockedTime;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int isBindMsisdn;

		[Token(Token = "0x4001524")]
		public const int BIND_SUCCESSS = 1;

		[Token(Token = "0x4001525")]
		public const int BIND_FAIL = 0;

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xD03E84", Offset = "0xD03E84", VA = "0xD03E84", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xD03F4C", Offset = "0xD03F4C", VA = "0xD03F4C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xD03FEC", Offset = "0xD03FEC", VA = "0xD03FEC")]
		public TAccount()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class TalkMessage : Complex
	{
		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerTalkInfo playerTalkInfo;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string msg;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string channel;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int createTime;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int msgType;

		[Token(Token = "0x400152B")]
		public const string TALK_CHANNEL_WORLD = "0";

		[Token(Token = "0x400152C")]
		public const int MSGTYPE_LOUDSPEAKER = 1;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xD03FF4", Offset = "0xD03FF4", VA = "0xD03FF4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xD04170", Offset = "0xD04170", VA = "0xD04170", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xD041E0", Offset = "0xD041E0", VA = "0xD041E0")]
		public TalkMessage()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class TechStat : Complex
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rank;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long cardNftId;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int pos;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int allStar;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int level;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long accountId;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string userName;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string userAvatar;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int score;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int assist;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int rebound;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int block;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int steal;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int fgp;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int fgp3;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int dunk;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool hasDouble;

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xD041E8", Offset = "0xD041E8", VA = "0xD041E8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xD04354", Offset = "0xD04354", VA = "0xD04354", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xD04494", Offset = "0xD04494", VA = "0xD04494")]
		public TechStat()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class TestGen : Complex
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string username;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string publishChannel;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string token;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xD0449C", Offset = "0xD0449C", VA = "0xD0449C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xD04520", Offset = "0xD04520", VA = "0xD04520", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xD04580", Offset = "0xD04580", VA = "0xD04580")]
		public TestGen()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class ThirdLogin : Complex
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string loginType;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string openId;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string accessToken;

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xD04588", Offset = "0xD04588", VA = "0xD04588", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xD0460C", Offset = "0xD0460C", VA = "0xD0460C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xD0466C", Offset = "0xD0466C", VA = "0xD0466C")]
		public ThirdLogin()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class TinyAccount : Complex
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte type;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string publishChannel;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string token;

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xD04674", Offset = "0xD04674", VA = "0xD04674", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xD04708", Offset = "0xD04708", VA = "0xD04708", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD04778", Offset = "0xD04778", VA = "0xD04778")]
		public TinyAccount()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class TinyAwardConfig : Complex
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int type;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string awardInfo;

		[Token(Token = "0x400154E")]
		public const int TYPE_FIXATION = 0;

		[Token(Token = "0x400154F")]
		public const int TYPE_RANDOM = 1;

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD04780", Offset = "0xD04780", VA = "0xD04780", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD047CC", Offset = "0xD047CC", VA = "0xD047CC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xD0480C", Offset = "0xD0480C", VA = "0xD0480C")]
		public TinyAwardConfig()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class TinyUser : Complex
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long accountId;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string token;

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xD04814", Offset = "0xD04814", VA = "0xD04814", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xD04870", Offset = "0xD04870", VA = "0xD04870", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xD048C0", Offset = "0xD048C0", VA = "0xD048C0")]
		public TinyUser()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class Tutorial : Complex
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int stepId;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long updateTime;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long createTime;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xD048C8", Offset = "0xD048C8", VA = "0xD048C8", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xD0492C", Offset = "0xD0492C", VA = "0xD0492C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xD0498C", Offset = "0xD0498C", VA = "0xD0498C")]
		public Tutorial()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class User : Complex
	{
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string username;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long createTime;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int totalPay;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string defaultClothes;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long accountId;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long lastLoginTime;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long updateTime;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int lv;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int exp;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int gem;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int gold;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string nickName;

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xD04994", Offset = "0xD04994", VA = "0xD04994", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xD04AA8", Offset = "0xD04AA8", VA = "0xD04AA8", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xD04B98", Offset = "0xD04B98", VA = "0xD04B98")]
		public User()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class UserAccount : Complex
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string phoneNum;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string email;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool needChangePassword;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool needRealName;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string userName;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string userAvatar;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string address;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string openId;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xD04BA0", Offset = "0xD04BA0", VA = "0xD04BA0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xD04C90", Offset = "0xD04C90", VA = "0xD04C90", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xD04D30", Offset = "0xD04D30", VA = "0xD04D30")]
		public UserAccount()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class UserCareer : Complex
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int c1;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int c2;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int c3;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int c4;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c5;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c6;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int c7;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int c8;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c9;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int c10;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int h1;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int h2;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int h3;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int h4;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int h5;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int h6;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int h7;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int h8;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int h9;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int h10;

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xD04D38", Offset = "0xD04D38", VA = "0xD04D38", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xD04EAC", Offset = "0xD04EAC", VA = "0xD04EAC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xD0501C", Offset = "0xD0501C", VA = "0xD0501C")]
		public UserCareer()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class UserDetail : Complex
	{
		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int status;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long totalFightTime;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int totalKill;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int totalWin;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalStrikeCount;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int totalEffectiveHits;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long totalCalories;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long lastUpdateTime;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int difficultyLevel;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long lastBattleEndTime;

		[Token(Token = "0x400158C")]
		public const int STATUS_TYPE_ROBOT = 0;

		[Token(Token = "0x400158D")]
		public const int STATUS_TYPE_HUMAN = 1;

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xD05024", Offset = "0xD05024", VA = "0xD05024", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xD050FC", Offset = "0xD050FC", VA = "0xD050FC", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xD051CC", Offset = "0xD051CC", VA = "0xD051CC")]
		public UserDetail()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class UserDragonLevel : Complex
	{
		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int useDragon;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int attack;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int life;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int magic;

		[Token(Token = "0x4001592")]
		public const int ATTACK_ITEM_ID = 151;

		[Token(Token = "0x4001593")]
		public const int LIFE_ITEM_ID = 152;

		[Token(Token = "0x4001594")]
		public const int MAGIC_ITEM_ID = 153;

		[Token(Token = "0x4001595")]
		public const int DRAGON_ID_MR_SMAUG = 1;

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xD051D4", Offset = "0xD051D4", VA = "0xD051D4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xD05248", Offset = "0xD05248", VA = "0xD05248", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xD052A8", Offset = "0xD052A8", VA = "0xD052A8")]
		public UserDragonLevel()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class UserEvent : Complex
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bonusGate;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int unused;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long nextFreeAwardTime;

		[Token(Token = "0x4001599")]
		public const int BONUS_GATE_NONE = 0;

		[Token(Token = "0x400159A")]
		public const int BONUS_GATE_FOR_PAY = 1;

		[Token(Token = "0x400159B")]
		public const int BONUS_GATE_ACTIVE = 2;

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xD052B0", Offset = "0xD052B0", VA = "0xD052B0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xD05304", Offset = "0xD05304", VA = "0xD05304", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xD05354", Offset = "0xD05354", VA = "0xD05354")]
		public UserEvent()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class UserExtend : Complex
	{
		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long userId;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UserDetail userDetail;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RankInfo rankInfoWin;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RankItem playerSeasonWinRank;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RankInfo rankInfoCalories;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RankItem playerSeasonCaloriesRank;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int tutorialStep;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string userCollection;

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xD0535C", Offset = "0xD0535C", VA = "0xD0535C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xD0573C", Offset = "0xD0573C", VA = "0xD0573C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xD057DC", Offset = "0xD057DC", VA = "0xD057DC")]
		public UserExtend()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class UserHotInfo : Complex
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long lastActiveTime;

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xD057E4", Offset = "0xD057E4", VA = "0xD057E4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xD05828", Offset = "0xD05828", VA = "0xD05828", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xD05868", Offset = "0xD05868", VA = "0xD05868")]
		public UserHotInfo()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class UserMallInfo : Complex
	{
		[Token(Token = "0x600182D")]
		[Address(RVA = "0xD05870", Offset = "0xD05870", VA = "0xD05870", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xD05874", Offset = "0xD05874", VA = "0xD05874", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xD05878", Offset = "0xD05878", VA = "0xD05878")]
		public UserMallInfo()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class UserSoldierLevel : Complex
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int s1;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int s2;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int s3;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int s4;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int s5;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int s6;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int s7;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int s8;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int s9;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int s10;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int s11;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int s12;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int s13;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int s14;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int s15;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int s16;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int s17;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int s18;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int s19;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int s20;

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xD05880", Offset = "0xD05880", VA = "0xD05880", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xD05A44", Offset = "0xD05A44", VA = "0xD05A44", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xD05BB4", Offset = "0xD05BB4", VA = "0xD05BB4")]
		public UserSoldierLevel()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class UserZ : Complex
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xD05BBC", Offset = "0xD05BBC", VA = "0xD05BBC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xD05BE4", Offset = "0xD05BE4", VA = "0xD05BE4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xD05C08", Offset = "0xD05C08", VA = "0xD05C08")]
		public UserZ()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class VersionInfo : Complex
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string downloadUrl;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mustUpdate;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string serverVersion;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string extraInfo;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long publishTime;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string message;

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xD05C10", Offset = "0xD05C10", VA = "0xD05C10", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xD05CD4", Offset = "0xD05CD4", VA = "0xD05CD4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xD05D64", Offset = "0xD05D64", VA = "0xD05D64")]
		public VersionInfo()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class WeightAward : Award
	{
		[Token(Token = "0x6001839")]
		[Address(RVA = "0xD05D6C", Offset = "0xD05D6C", VA = "0xD05D6C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xD05D70", Offset = "0xD05D70", VA = "0xD05D70", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xD05D74", Offset = "0xD05D74", VA = "0xD05D74")]
		public WeightAward()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class XEntry : Complex
	{
		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xD05D7C", Offset = "0xD05D7C", VA = "0xD05D7C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xD05DD4", Offset = "0xD05DD4", VA = "0xD05DD4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xD05E14", Offset = "0xD05E14", VA = "0xD05E14")]
		public XEntry()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class GeneratedException
	{
		[Token(Token = "0x600183F")]
		[Address(RVA = "0xD05E1C", Offset = "0xD05E1C", VA = "0xD05E1C")]
		public static void Add(Dictionary<int, string> dict)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xD06E80", Offset = "0xD06E80", VA = "0xD06E80")]
		public GeneratedException()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class PushDefault : AbsPusher
	{
		[Token(Token = "0x6001841")]
		[Address(RVA = "0xD06E88", Offset = "0xD06E88", VA = "0xD06E88")]
		public PushDefault(MonoBehaviour mb)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xD06EF0", Offset = "0xD06EF0", VA = "0xD06EF0")]
		public void PushAuctionItemUpdate(Action<AuctionItemUpdateInfo> action, bool reg)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xD06F64", Offset = "0xD06F64", VA = "0xD06F64")]
		public void PushChargeInfo(Action<ChargeInfo> action, bool reg)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xD06FD8", Offset = "0xD06FD8", VA = "0xD06FD8")]
		public void PushConnectionStatusUpdate(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xD0704C", Offset = "0xD0704C", VA = "0xD0704C")]
		public void PushDailyInfo(Action<DailyInfo> action, bool reg)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xD070C0", Offset = "0xD070C0", VA = "0xD070C0")]
		public void PushDragonUnlock(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xD07134", Offset = "0xD07134", VA = "0xD07134")]
		public void PushDragonUpdate(Action<UserDragonLevel> action, bool reg)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xD071A8", Offset = "0xD071A8", VA = "0xD071A8")]
		public void PushFeedback(Action<PlayerFeedbackInfo> action, bool reg)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xD0721C", Offset = "0xD0721C", VA = "0xD0721C")]
		public void PushFullClothUpdate(Action<string> action, bool reg)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xD07290", Offset = "0xD07290", VA = "0xD07290")]
		public void PushMailUpdate(Action<Mail> action, bool reg)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xD07304", Offset = "0xD07304", VA = "0xD07304")]
		public void PushMissionFinish(Action<List<int>> action, bool reg)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xD07378", Offset = "0xD07378", VA = "0xD07378")]
		public void PushNotice(Action<List<Notice>> action, bool reg)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xD073EC", Offset = "0xD073EC", VA = "0xD073EC")]
		public void PushOrderSuccess(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xD07460", Offset = "0xD07460", VA = "0xD07460")]
		public void PushPackUpdate(Action<List<GoodsAndCount>> action, bool reg)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xD074D4", Offset = "0xD074D4", VA = "0xD074D4")]
		public void PushUserCareer(Action<UserCareer> action, bool reg)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xD07548", Offset = "0xD07548", VA = "0xD07548")]
		public void PushUserInfo(Action<User> action, bool reg)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xD075BC", Offset = "0xD075BC", VA = "0xD075BC")]
		public void PushPlayerLevelUp(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xD07630", Offset = "0xD07630", VA = "0xD07630")]
		public void PushSeasonRankUpdate(Action<List<RankInfo>> action, bool reg)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xD076A4", Offset = "0xD076A4", VA = "0xD076A4")]
		public void PushSessionKill(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xD07718", Offset = "0xD07718", VA = "0xD07718")]
		public void PushSessionNotLogin(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xD0778C", Offset = "0xD0778C", VA = "0xD0778C")]
		public void PushSingleBBCardUpdate(Action<CardNftBasketBallWorldData> action, bool reg)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xD07800", Offset = "0xD07800", VA = "0xD07800")]
		public void PushSingleCardUpdate(Action<CardNft> action, bool reg)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xD07874", Offset = "0xD07874", VA = "0xD07874")]
		public void PushSoldierUnlock(Action<int> action, bool reg)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xD078E8", Offset = "0xD078E8", VA = "0xD078E8")]
		public void PushUserEvent(Action<UserEvent> action, bool reg)
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class EventController
	{
		[Token(Token = "0x20003F1")]
		public delegate void delegate_pushAuctionItemUpdate(AuctionItemUpdateInfo data);

		[Token(Token = "0x20003F2")]
		public delegate void delegate_pushChargeInfo(ChargeInfo data);

		[Token(Token = "0x20003F3")]
		public delegate void delegate_pushConnectionStatusUpdate(int data);

		[Token(Token = "0x20003F4")]
		public delegate void delegate_pushDailyInfo(DailyInfo data);

		[Token(Token = "0x20003F5")]
		public delegate void delegate_pushDragonUnlock(int data);

		[Token(Token = "0x20003F6")]
		public delegate void delegate_pushDragonUpdate(UserDragonLevel data);

		[Token(Token = "0x20003F7")]
		public delegate void delegate_pushFeedback(PlayerFeedbackInfo data);

		[Token(Token = "0x20003F8")]
		public delegate void delegate_pushFullClothUpdate(string data);

		[Token(Token = "0x20003F9")]
		public delegate void delegate_pushMailUpdate(Mail data);

		[Token(Token = "0x20003FA")]
		public delegate void delegate_pushMissionFinish(List<int> data);

		[Token(Token = "0x20003FB")]
		public delegate void delegate_pushNotice(List<Notice> data);

		[Token(Token = "0x20003FC")]
		public delegate void delegate_pushOrderSuccess(int data);

		[Token(Token = "0x20003FD")]
		public delegate void delegate_pushPackUpdate(List<GoodsAndCount> data);

		[Token(Token = "0x20003FE")]
		public delegate void delegate_pushUserCareer(UserCareer data);

		[Token(Token = "0x20003FF")]
		public delegate void delegate_pushUserInfo(User data);

		[Token(Token = "0x2000400")]
		public delegate void delegate_pushPlayerLevelUp(int data);

		[Token(Token = "0x2000401")]
		public delegate void delegate_pushSeasonRankUpdate(List<RankInfo> data);

		[Token(Token = "0x2000402")]
		public delegate void delegate_pushSessionKill(int data);

		[Token(Token = "0x2000403")]
		public delegate void delegate_pushSessionNotLogin(int data);

		[Token(Token = "0x2000404")]
		public delegate void delegate_pushSingleBBCardUpdate(CardNftBasketBallWorldData data);

		[Token(Token = "0x2000405")]
		public delegate void delegate_pushSingleCardUpdate(CardNft data);

		[Token(Token = "0x2000406")]
		public delegate void delegate_pushSoldierUnlock(int data);

		[Token(Token = "0x2000407")]
		public delegate void delegate_pushUserEvent(UserEvent data);

		[Token(Token = "0x2000408")]
		public delegate void delegate_userDataChange();

		[Token(Token = "0x2000409")]
		public delegate void delegate_LoginOut();

		[Token(Token = "0x200040A")]
		public delegate void delegate_soundChange();

		[Token(Token = "0x14000015")]
		public event delegate_pushAuctionItemUpdate PushAuctionItemUpdateEvent
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xD0795C", Offset = "0xD0795C", VA = "0xD0795C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xD079F8", Offset = "0xD079F8", VA = "0xD079F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event delegate_pushChargeInfo PushChargeInfoEvent
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xD07F58", Offset = "0xD07F58", VA = "0xD07F58")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xD07FF4", Offset = "0xD07FF4", VA = "0xD07FF4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event delegate_pushConnectionStatusUpdate PushConnectionStatusUpdateEvent
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xD0816C", Offset = "0xD0816C", VA = "0xD0816C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xD08208", Offset = "0xD08208", VA = "0xD08208")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event delegate_pushDailyInfo PushDailyInfoEvent
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xD083A8", Offset = "0xD083A8", VA = "0xD083A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xD08444", Offset = "0xD08444", VA = "0xD08444")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event delegate_pushDragonUnlock PushDragonUnlockEvent
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xD085BC", Offset = "0xD085BC", VA = "0xD085BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xD08658", Offset = "0xD08658", VA = "0xD08658")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event delegate_pushDragonUpdate PushDragonUpdateEvent
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0xD087F8", Offset = "0xD087F8", VA = "0xD087F8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xD08894", Offset = "0xD08894", VA = "0xD08894")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event delegate_pushFeedback PushFeedbackEvent
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0xD08A0C", Offset = "0xD08A0C", VA = "0xD08A0C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600186C")]
			[Address(RVA = "0xD08AA8", Offset = "0xD08AA8", VA = "0xD08AA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event delegate_pushFullClothUpdate PushFullClothUpdateEvent
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0xD08C20", Offset = "0xD08C20", VA = "0xD08C20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600186F")]
			[Address(RVA = "0xD08CBC", Offset = "0xD08CBC", VA = "0xD08CBC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event delegate_pushMailUpdate PushMailUpdateEvent
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0xD08E34", Offset = "0xD08E34", VA = "0xD08E34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001872")]
			[Address(RVA = "0xD08ED0", Offset = "0xD08ED0", VA = "0xD08ED0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event delegate_pushMissionFinish PushMissionFinishEvent
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0xD09048", Offset = "0xD09048", VA = "0xD09048")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001875")]
			[Address(RVA = "0xD090E4", Offset = "0xD090E4", VA = "0xD090E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event delegate_pushNotice PushNoticeEvent
		{
			[Token(Token = "0x6001877")]
			[Address(RVA = "0xD0925C", Offset = "0xD0925C", VA = "0xD0925C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001878")]
			[Address(RVA = "0xD092F8", Offset = "0xD092F8", VA = "0xD092F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event delegate_pushOrderSuccess PushOrderSuccessEvent
		{
			[Token(Token = "0x600187A")]
			[Address(RVA = "0xD09470", Offset = "0xD09470", VA = "0xD09470")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600187B")]
			[Address(RVA = "0xD0950C", Offset = "0xD0950C", VA = "0xD0950C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event delegate_pushPackUpdate PushPackUpdateEvent
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0xD096AC", Offset = "0xD096AC", VA = "0xD096AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600187E")]
			[Address(RVA = "0xD09748", Offset = "0xD09748", VA = "0xD09748")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event delegate_pushUserCareer PushUserCareerEvent
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0xD098C0", Offset = "0xD098C0", VA = "0xD098C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001881")]
			[Address(RVA = "0xD0995C", Offset = "0xD0995C", VA = "0xD0995C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event delegate_pushUserInfo PushUserInfoEvent
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0xD09AD4", Offset = "0xD09AD4", VA = "0xD09AD4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xD09B70", Offset = "0xD09B70", VA = "0xD09B70")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event delegate_pushPlayerLevelUp PushPlayerLevelUpEvent
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xD09CE8", Offset = "0xD09CE8", VA = "0xD09CE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001887")]
			[Address(RVA = "0xD09D84", Offset = "0xD09D84", VA = "0xD09D84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event delegate_pushSeasonRankUpdate PushSeasonRankUpdateEvent
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xD09F24", Offset = "0xD09F24", VA = "0xD09F24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600188A")]
			[Address(RVA = "0xD09FC0", Offset = "0xD09FC0", VA = "0xD09FC0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event delegate_pushSessionKill PushSessionKillEvent
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0xD0A138", Offset = "0xD0A138", VA = "0xD0A138")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600188D")]
			[Address(RVA = "0xD0A1D4", Offset = "0xD0A1D4", VA = "0xD0A1D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event delegate_pushSessionNotLogin PushSessionNotLoginEvent
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xD0A374", Offset = "0xD0A374", VA = "0xD0A374")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xD0A410", Offset = "0xD0A410", VA = "0xD0A410")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event delegate_pushSingleBBCardUpdate PushSingleBBCardUpdateEvent
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xD0A5B0", Offset = "0xD0A5B0", VA = "0xD0A5B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001893")]
			[Address(RVA = "0xD0A64C", Offset = "0xD0A64C", VA = "0xD0A64C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event delegate_pushSingleCardUpdate PushSingleCardUpdateEvent
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xD0A7C4", Offset = "0xD0A7C4", VA = "0xD0A7C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xD0A860", Offset = "0xD0A860", VA = "0xD0A860")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event delegate_pushSoldierUnlock PushSoldierUnlockEvent
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0xD0A9D8", Offset = "0xD0A9D8", VA = "0xD0A9D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001899")]
			[Address(RVA = "0xD0AA74", Offset = "0xD0AA74", VA = "0xD0AA74")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event delegate_pushUserEvent PushUserEventEvent
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xD0AC14", Offset = "0xD0AC14", VA = "0xD0AC14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600189C")]
			[Address(RVA = "0xD0ACB0", Offset = "0xD0ACB0", VA = "0xD0ACB0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event delegate_userDataChange UserDataChangeEvent
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0xD0AE28", Offset = "0xD0AE28", VA = "0xD0AE28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xD0AEC4", Offset = "0xD0AEC4", VA = "0xD0AEC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event delegate_LoginOut PushLoginOutEvent
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xD0B06C", Offset = "0xD0B06C", VA = "0xD0B06C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xD0B108", Offset = "0xD0B108", VA = "0xD0B108")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event delegate_soundChange PushSoundChangeEvent
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xD0B294", Offset = "0xD0B294", VA = "0xD0B294")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xD0B330", Offset = "0xD0B330", VA = "0xD0B330")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xD07A94", Offset = "0xD07A94", VA = "0xD07A94")]
		public void sendPushAuctionItemUpdateEvent(AuctionItemUpdateInfo data)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xD08090", Offset = "0xD08090", VA = "0xD08090")]
		public void sendPushChargeInfoEvent(ChargeInfo data)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xD082A4", Offset = "0xD082A4", VA = "0xD082A4")]
		public void sendPushConnectionStatusUpdateEvent(int data)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xD084E0", Offset = "0xD084E0", VA = "0xD084E0")]
		public void sendPushDailyInfoEvent(DailyInfo data)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xD086F4", Offset = "0xD086F4", VA = "0xD086F4")]
		public void sendPushDragonUnlockEvent(int data)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xD08930", Offset = "0xD08930", VA = "0xD08930")]
		public void sendPushDragonUpdateEvent(UserDragonLevel data)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xD08B44", Offset = "0xD08B44", VA = "0xD08B44")]
		public void sendPushFeedbackEvent(PlayerFeedbackInfo data)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xD08D58", Offset = "0xD08D58", VA = "0xD08D58")]
		public void sendPushFullClothUpdateEvent(string data)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xD08F6C", Offset = "0xD08F6C", VA = "0xD08F6C")]
		public void sendPushMailUpdateEvent(Mail data)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xD09180", Offset = "0xD09180", VA = "0xD09180")]
		public void sendPushMissionFinishEvent(List<int> data)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xD09394", Offset = "0xD09394", VA = "0xD09394")]
		public void sendPushNoticeEvent(List<Notice> data)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xD095A8", Offset = "0xD095A8", VA = "0xD095A8")]
		public void sendPushOrderSuccessEvent(int data)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xD097E4", Offset = "0xD097E4", VA = "0xD097E4")]
		public void sendPushPackUpdateEvent(List<GoodsAndCount> data)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xD099F8", Offset = "0xD099F8", VA = "0xD099F8")]
		public void sendPushUserCareerEvent(UserCareer data)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xD09C0C", Offset = "0xD09C0C", VA = "0xD09C0C")]
		public void sendPushUserInfoEvent(User data)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xD09E20", Offset = "0xD09E20", VA = "0xD09E20")]
		public void sendPushPlayerLevelUpEvent(int data)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xD0A05C", Offset = "0xD0A05C", VA = "0xD0A05C")]
		public void sendPushSeasonRankUpdateEvent(List<RankInfo> data)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xD0A270", Offset = "0xD0A270", VA = "0xD0A270")]
		public void sendPushSessionKillEvent(int data)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xD0A4AC", Offset = "0xD0A4AC", VA = "0xD0A4AC")]
		public void sendPushSessionNotLoginEvent(int data)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xD0A6E8", Offset = "0xD0A6E8", VA = "0xD0A6E8")]
		public void sendPushSingleBBCardUpdateEvent(CardNftBasketBallWorldData data)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xD0A8FC", Offset = "0xD0A8FC", VA = "0xD0A8FC")]
		public void sendPushSingleCardUpdateEvent(CardNft data)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xD0AB10", Offset = "0xD0AB10", VA = "0xD0AB10")]
		public void sendPushSoldierUnlockEvent(int data)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xD0AD4C", Offset = "0xD0AD4C", VA = "0xD0AD4C")]
		public void sendPushUserEventEvent(UserEvent data)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xD0AF60", Offset = "0xD0AF60", VA = "0xD0AF60")]
		public void sendUserDataChangeEvent()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xD07B70", Offset = "0xD07B70", VA = "0xD07B70")]
		private void ExecuteDelegatePush(Delegate e, params object[] args)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xD0AF7C", Offset = "0xD0AF7C", VA = "0xD0AF7C")]
		public void sendPushNewMail()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xD0B1A4", Offset = "0xD0B1A4", VA = "0xD0B1A4")]
		public void sendPushLoginOutEvent()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD0B3CC", Offset = "0xD0B3CC", VA = "0xD0B3CC")]
		public void sendSoundChangeEvent()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD0B4BC", Offset = "0xD0B4BC", VA = "0xD0B4BC")]
		public EventController()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class ServerEventTrigger
	{
		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD0D45C", Offset = "0xD0D45C", VA = "0xD0D45C")]
		public void PushAuctionItemUpdate(AuctionItemUpdateInfo data)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD0D490", Offset = "0xD0D490", VA = "0xD0D490")]
		public void PushChargeInfo(ChargeInfo data)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD0D4C4", Offset = "0xD0D4C4", VA = "0xD0D4C4")]
		public void PushConnectionStatusUpdate(int data)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD0D4F8", Offset = "0xD0D4F8", VA = "0xD0D4F8")]
		public void PushDailyInfo(DailyInfo data)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD0D52C", Offset = "0xD0D52C", VA = "0xD0D52C")]
		public void PushDragonUnlock(int data)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD0D560", Offset = "0xD0D560", VA = "0xD0D560")]
		public void PushDragonUpdate(UserDragonLevel data)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD0D594", Offset = "0xD0D594", VA = "0xD0D594")]
		public void PushFeedback(PlayerFeedbackInfo data)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD0D5C8", Offset = "0xD0D5C8", VA = "0xD0D5C8")]
		public void PushFullClothUpdate(string data)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xD0D5FC", Offset = "0xD0D5FC", VA = "0xD0D5FC")]
		public void PushMailUpdate(Mail data)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xD0D630", Offset = "0xD0D630", VA = "0xD0D630")]
		public void PushMissionFinish(List<int> data)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD0D664", Offset = "0xD0D664", VA = "0xD0D664")]
		public void PushNotice(List<Notice> data)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xD0D698", Offset = "0xD0D698", VA = "0xD0D698")]
		public void PushOrderSuccess(int data)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xD0D6CC", Offset = "0xD0D6CC", VA = "0xD0D6CC")]
		public void PushPackUpdate(List<GoodsAndCount> data)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD0D700", Offset = "0xD0D700", VA = "0xD0D700")]
		public void PushUserCareer(UserCareer data)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xD0D734", Offset = "0xD0D734", VA = "0xD0D734")]
		public void PushUserInfo(User data)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xD0D768", Offset = "0xD0D768", VA = "0xD0D768")]
		public void PushPlayerLevelUp(int data)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xD0D79C", Offset = "0xD0D79C", VA = "0xD0D79C")]
		public void PushSeasonRankUpdate(List<RankInfo> data)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xD0D7D0", Offset = "0xD0D7D0", VA = "0xD0D7D0")]
		public void PushSessionKill(int data)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xD0D804", Offset = "0xD0D804", VA = "0xD0D804")]
		public void PushSessionNotLogin(int data)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xD0D838", Offset = "0xD0D838", VA = "0xD0D838")]
		public void PushSingleBBCardUpdate(CardNftBasketBallWorldData data)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xD0D86C", Offset = "0xD0D86C", VA = "0xD0D86C")]
		public void PushSingleCardUpdate(CardNft data)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xD0D8A0", Offset = "0xD0D8A0", VA = "0xD0D8A0")]
		public void PushSoldierUnlock(int data)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xD0D8D4", Offset = "0xD0D8D4", VA = "0xD0D8D4")]
		public void PushUserEvent(UserEvent data)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xD0D908", Offset = "0xD0D908", VA = "0xD0D908")]
		public void Bind(PushDefault pd)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xD0E110", Offset = "0xD0E110", VA = "0xD0E110")]
		public ServerEventTrigger()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class ReqActivity : AbsRequest
	{
		[Token(Token = "0x600192B")]
		[Address(RVA = "0xD0E118", Offset = "0xD0E118", VA = "0xD0E118")]
		public void ViewAdRecoverEnergy(Action<string> action)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xD0E1D8", Offset = "0xD0E1D8", VA = "0xD0E1D8")]
		public ReqActivity()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class ReqAuction : AbsRequest
	{
		[Token(Token = "0x600192D")]
		[Address(RVA = "0xD0E230", Offset = "0xD0E230", VA = "0xD0E230")]
		public void CreateJoinOrder(Action<bool> action, long auctionId, int payForJoin, string password)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xD0E3DC", Offset = "0xD0E3DC", VA = "0xD0E3DC")]
		public void OnPaySuccess(Action<List<Award>, long> action, string platform, long localOrderId, string remoteOrderId, string payChannel)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xD0E590", Offset = "0xD0E590", VA = "0xD0E590")]
		public void PullBack(Action<AuctionItem> action, long auctionItemId)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xD0E694", Offset = "0xD0E694", VA = "0xD0E694")]
		public void QueryAuction(Action<List<AuctionItem>> action, int world, int orderBy, bool ascForTrue)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xD0E858", Offset = "0xD0E858", VA = "0xD0E858")]
		public void QueryAuctionItem(Action<AuctionItem, CardNft, CardNftDetail, List<AuctionBid>> action, long auctionItemId)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD0E95C", Offset = "0xD0E95C", VA = "0xD0E95C")]
		public void SellCardNft(Action<AuctionItem, List<MallItem>> action, long nftId, int startPrice, string password)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xD0EB08", Offset = "0xD0EB08", VA = "0xD0EB08")]
		public ReqAuction()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class ReqBarrack : AbsRequest
	{
		[Token(Token = "0x6001934")]
		[Address(RVA = "0xD0EB60", Offset = "0xD0EB60", VA = "0xD0EB60")]
		public void ShowUpdateDragonGem(Action<int> action, int category)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xD0EC64", Offset = "0xD0EC64", VA = "0xD0EC64")]
		public void ShowUpdateSoldierGem(Action<int> action, int soldierTypeId)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xD0ED68", Offset = "0xD0ED68", VA = "0xD0ED68")]
		public void UpdateDragon(Action<bool> action, int dragonType)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xD0EE6C", Offset = "0xD0EE6C", VA = "0xD0EE6C")]
		public void UpdateDragonWithGem(Action<bool> action, int category, int costGem)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xD0EFC4", Offset = "0xD0EFC4", VA = "0xD0EFC4")]
		public void UpdateSoldier(Action<bool> action, int soldierTypeId)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xD0F0C8", Offset = "0xD0F0C8", VA = "0xD0F0C8")]
		public void UpdateSoldierWithGem(Action<bool> action, int soldierTypeId, int costGem)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xD0F220", Offset = "0xD0F220", VA = "0xD0F220")]
		public ReqBarrack()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class ReqBasket : AbsRequest
	{
		[Token(Token = "0x600193B")]
		[Address(RVA = "0xD0F278", Offset = "0xD0F278", VA = "0xD0F278")]
		public void QueryBasketInfo(Action<User, BasketExtend> action)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xD0F338", Offset = "0xD0F338", VA = "0xD0F338")]
		public ReqBasket()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class ReqBasketActivity : AbsRequest
	{
		[Token(Token = "0x600193D")]
		[Address(RVA = "0xD0F390", Offset = "0xD0F390", VA = "0xD0F390")]
		public void SumHandler(Action<int> action, int i, int j)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xD0F4E8", Offset = "0xD0F4E8", VA = "0xD0F4E8")]
		public void AddGoodBallHeart(Action<GoodBall> action, long goodBallId)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xD0F5EC", Offset = "0xD0F5EC", VA = "0xD0F5EC")]
		public void QueryDailyGoodBall(Action<List<GoodBall>> action)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xD0F6AC", Offset = "0xD0F6AC", VA = "0xD0F6AC")]
		public ReqBasketActivity()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class ReqBasketMail : AbsRequest
	{
		[Token(Token = "0x6001941")]
		[Address(RVA = "0xD0F704", Offset = "0xD0F704", VA = "0xD0F704")]
		public void Delete(Action<bool> action, long id)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xD0F808", Offset = "0xD0F808", VA = "0xD0F808")]
		public void QueryList(Action<List<Mail>> action)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xD0F8C8", Offset = "0xD0F8C8", VA = "0xD0F8C8")]
		public void Read(Action<Mail> action, long id)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xD0F9CC", Offset = "0xD0F9CC", VA = "0xD0F9CC")]
		public void Receive(Action<bool> action, long id)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xD0FAD0", Offset = "0xD0FAD0", VA = "0xD0FAD0")]
		public void ReceiveAll(Action<List<Award>, List<Mail>> action)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xD0FB90", Offset = "0xD0FB90", VA = "0xD0FB90")]
		public ReqBasketMail()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class ReqBattle : AbsRequest
	{
		[Token(Token = "0x6001947")]
		[Address(RVA = "0xD0FBE8", Offset = "0xD0FBE8", VA = "0xD0FBE8")]
		public void BattleHistory(Action<List<Battle>> action)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xD0FCA8", Offset = "0xD0FCA8", VA = "0xD0FCA8")]
		public void EnterPvPRoom(Action<BattleStartInfo> action, string id1, string id2, string id3, string id4, string id5, string info, string roomId)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xD0FEE0", Offset = "0xD0FEE0", VA = "0xD0FEE0")]
		public void FinishBattle(Action<UserDetail> action, BattleEndInfo battleEndInfo)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xD0FFB0", Offset = "0xD0FFB0", VA = "0xD0FFB0")]
		public void FinishPvPBattle(Action<UserDetail> action, BattleEndInfo battleEndInfo)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xD10080", Offset = "0xD10080", VA = "0xD10080")]
		public void MatchingManagement(Action<string> action, string id1, string id2, string id3, string id4, string id5, string info)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xD10280", Offset = "0xD10280", VA = "0xD10280")]
		public void StartBattle(Action<BattleStartInfo> action, string id1, string id2, string id3, string id4, string id5, int difficultyLevel, string info)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xD104E4", Offset = "0xD104E4", VA = "0xD104E4")]
		public ReqBattle()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class ReqCard : AbsRequest
	{
		[Token(Token = "0x600194E")]
		[Address(RVA = "0xD1053C", Offset = "0xD1053C", VA = "0xD1053C")]
		public void AbortUpgradeBase(Action<CardNft, CardNftDataHistory> action, long nftId)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xD10640", Offset = "0xD10640", VA = "0xD10640")]
		public void ApproveUpgradeBase(Action<CardNft, CardNftDataHistory> action, long nftId)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xD10744", Offset = "0xD10744", VA = "0xD10744")]
		public void ApproveUpgradeBasket(Action<CardNftBasketBallWorldData, CardNftBasketHistory> action, long nftId)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xD10848", Offset = "0xD10848", VA = "0xD10848")]
		public void QueryBaseUpgradeData(Action<CardNft, CardNftDataHistory> action, long nftId)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xD1094C", Offset = "0xD1094C", VA = "0xD1094C")]
		public void QueryBasketUpgradeData(Action<CardNftBasketBallWorldData, CardNftBasketHistory> action, long nftId)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD10A50", Offset = "0xD10A50", VA = "0xD10A50")]
		public void RefreshUpgradeBase(Action<CardNft, CardNftDataHistory> action, long nftId, int type)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD10BBC", Offset = "0xD10BBC", VA = "0xD10BBC")]
		public void RefreshUpgradeBasket(Action<CardNftBasketBallWorldData, CardNftBasketHistory> action, long nftId, int type)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD10D28", Offset = "0xD10D28", VA = "0xD10D28")]
		public void UpgradeBase(Action<CardNft, CardNftDataHistory> action, long nftId)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD10E2C", Offset = "0xD10E2C", VA = "0xD10E2C")]
		public void UpgradeSkillBasketball(Action<CardNftBasketBallWorldData, CardNftBasketHistory> action, long nftId)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD10F30", Offset = "0xD10F30", VA = "0xD10F30")]
		public ReqCard()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class ReqClothesMerge : AbsRequest
	{
		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD10F88", Offset = "0xD10F88", VA = "0xD10F88")]
		public void Method1(Action<bool> action)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD11048", Offset = "0xD11048", VA = "0xD11048")]
		public ReqClothesMerge()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class ReqConfigData : AbsRequest
	{
		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD110A0", Offset = "0xD110A0", VA = "0xD110A0")]
		public void InsertConfigData(Action<bool> action)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD11160", Offset = "0xD11160", VA = "0xD11160")]
		public void ReadAllConfig(Action<string, string, string> action, string title)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD11230", Offset = "0xD11230", VA = "0xD11230")]
		public void ReadConfig(Action<string> action, string title)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD11300", Offset = "0xD11300", VA = "0xD11300")]
		public void SaveConfigData(Action<bool> action, string name)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD113D0", Offset = "0xD113D0", VA = "0xD113D0")]
		public ReqConfigData()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class ReqDefault : AbsRequest
	{
		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD11428", Offset = "0xD11428", VA = "0xD11428")]
		public ReqDefault()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class ReqEquipmentInfo : AbsRequest
	{
		[Token(Token = "0x6001960")]
		[Address(RVA = "0xD11480", Offset = "0xD11480", VA = "0xD11480")]
		public ReqEquipmentInfo()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class ReqFriends : AbsRequest
	{
		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD114D8", Offset = "0xD114D8", VA = "0xD114D8")]
		public void AddFriends(Action<bool> action, long userId, long friendId)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD11630", Offset = "0xD11630", VA = "0xD11630")]
		public void BlockFriends(Action<bool> action, int status, long userId, long friendId)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD117F0", Offset = "0xD117F0", VA = "0xD117F0")]
		public void FindAllFriends(Action<bool> action, long userId)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD118F4", Offset = "0xD118F4", VA = "0xD118F4")]
		public void UpdateFriendStatus(Action<bool> action, int status, long userId, long friendId)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD11AB4", Offset = "0xD11AB4", VA = "0xD11AB4")]
		public ReqFriends()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class ReqHome : AbsRequest
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD11B0C", Offset = "0xD11B0C", VA = "0xD11B0C")]
		public void CheckStatus(Action<bool> action)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD11BCC", Offset = "0xD11BCC", VA = "0xD11BCC")]
		public void Heartbeat(Action<string, bool, long, string> action, long id, string info)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD11D10", Offset = "0xD11D10", VA = "0xD11D10")]
		public void SaveClothes(Action<bool> action, string id1, string id2, string id3, string id4, string id5)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD11ED0", Offset = "0xD11ED0", VA = "0xD11ED0")]
		public void SaveTutorialStep(Action<bool> action, int stepId)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD11FD4", Offset = "0xD11FD4", VA = "0xD11FD4")]
		public void UpdateVersion(Action<Notice> action)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD12094", Offset = "0xD12094", VA = "0xD12094")]
		public ReqHome()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class ReqLogin : AbsRequest
	{
		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD120EC", Offset = "0xD120EC", VA = "0xD120EC")]
		public void Login(Action<TinyUser, User, UserAccount, UserExtend, GlobalServerData> action, string openid, string platform, string loginToken, string versionCode)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD12274", Offset = "0xD12274", VA = "0xD12274")]
		public ReqLogin()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class ReqMail : AbsRequest
	{
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD122CC", Offset = "0xD122CC", VA = "0xD122CC")]
		public void Delete(Action<bool> action, long id)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD123D0", Offset = "0xD123D0", VA = "0xD123D0")]
		public void QueryList(Action<List<Mail>> action)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD12490", Offset = "0xD12490", VA = "0xD12490")]
		public void Read(Action<Mail> action, long id)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD12594", Offset = "0xD12594", VA = "0xD12594")]
		public void Receive(Action<bool> action, long id)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD12698", Offset = "0xD12698", VA = "0xD12698")]
		public ReqMail()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class ReqMatchManagement : AbsRequest
	{
		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD126F0", Offset = "0xD126F0", VA = "0xD126F0")]
		public ReqMatchManagement()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class ReqNotice : AbsRequest
	{
		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD12748", Offset = "0xD12748", VA = "0xD12748")]
		public void PullNotice(Action<List<Notice>> action)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD12808", Offset = "0xD12808", VA = "0xD12808")]
		public ReqNotice()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class ReqRank : AbsRequest
	{
		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD12860", Offset = "0xD12860", VA = "0xD12860")]
		public void QueryRank(Action<RankInfo, RankInfo> action)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD12920", Offset = "0xD12920", VA = "0xD12920")]
		public ReqRank()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class ReqRoomEliminate : AbsRequest
	{
		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD12978", Offset = "0xD12978", VA = "0xD12978")]
		public void ActiveEliminate(Action<bool> action, long userId, string battleRoomId)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD12ABC", Offset = "0xD12ABC", VA = "0xD12ABC")]
		public void EatChickenByMultiplePeople(Action<bool> action, string roomId)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD12B8C", Offset = "0xD12B8C", VA = "0xD12B8C")]
		public void EatChickenByOne(Action<bool> action, string roomId)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD12C5C", Offset = "0xD12C5C", VA = "0xD12C5C")]
		public void KillOwn(Action<bool> action, string battleRoomId)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD12D2C", Offset = "0xD12D2C", VA = "0xD12D2C")]
		public void RecordGameFinishInfo(Action<bool> action, long accountId, string roomId)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD12E70", Offset = "0xD12E70", VA = "0xD12E70")]
		public void SufferEliminate(Action<bool> action, long userId, string battleRoomId)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD12FB4", Offset = "0xD12FB4", VA = "0xD12FB4")]
		public ReqRoomEliminate()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class ReqSetting : AbsRequest
	{
		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD1300C", Offset = "0xD1300C", VA = "0xD1300C")]
		public void DoChangeEmail(Action<bool, UserAccount> action, string email)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD130DC", Offset = "0xD130DC", VA = "0xD130DC")]
		public void DoChangeName(Action<UserAccount> action, string name)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD131AC", Offset = "0xD131AC", VA = "0xD131AC")]
		public void DoRealNameVerify(Action<UserAccount> action, string realName, string cardId)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD132BC", Offset = "0xD132BC", VA = "0xD132BC")]
		public void DoSettingAvatar(Action<UserAccount> action, string avatarPath)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD1338C", Offset = "0xD1338C", VA = "0xD1338C")]
		public void DoSettingPassword(Action<bool> action, string oldPassword, string newPassword)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD1349C", Offset = "0xD1349C", VA = "0xD1349C")]
		public ReqSetting()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class ReqUserDetail : AbsRequest
	{
		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD134F4", Offset = "0xD134F4", VA = "0xD134F4")]
		public void QueryUserDetailByUid(Action<UserDetail> action, long userId)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD135F8", Offset = "0xD135F8", VA = "0xD135F8")]
		public ReqUserDetail()
		{
		}
	}
}
namespace AnimationRecordTool
{
	[Token(Token = "0x2000422")]
	public class AnimationPlayer : MonoBehaviour
	{
		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD13650", Offset = "0xD13650", VA = "0xD13650")]
		public AnimationPlayer()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class AnimationRecorder : MonoBehaviour
	{
		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int frameRate;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected bool isRecording;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastRecordTime;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float recordStartTime;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rootTransform;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<RecordGameObject> recordTransform;

		[Token(Token = "0x1700038B")]
		public Transform RootTransform
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xD13658", Offset = "0xD13658", VA = "0xD13658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public float ElapsedTime
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xD136EC", Offset = "0xD136EC", VA = "0xD136EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD1370C", Offset = "0xD1370C", VA = "0xD1370C", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD13850", Offset = "0xD13850", VA = "0xD13850", Slot = "5")]
		protected virtual void RecordInit()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD13854", Offset = "0xD13854", VA = "0xD13854", Slot = "6")]
		protected virtual void Record()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD13858", Offset = "0xD13858", VA = "0xD13858", Slot = "7")]
		protected virtual void StopRecord()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD1385C", Offset = "0xD1385C", VA = "0xD1385C")]
		public AnimationRecorder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000424")]
	public class RecordGameObject
	{
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool recordPosition;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool recordRotation;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool recordScale;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD1386C", Offset = "0xD1386C", VA = "0xD1386C")]
		public RecordGameObject()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class AnimationRecorderAmin : AnimationRecorder
	{
		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationClip clip;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isLoop;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool isLegacy;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.Object savePathAsset;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<RecordGameObject, AnimationCurveBuilder> curveBuilders;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD13874", Offset = "0xD13874", VA = "0xD13874", Slot = "5")]
		protected override void RecordInit()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD13CEC", Offset = "0xD13CEC", VA = "0xD13CEC", Slot = "6")]
		protected override void Record()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD13B18", Offset = "0xD13B18", VA = "0xD13B18")]
		public string GetPath(Transform tf)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD13FA4", Offset = "0xD13FA4", VA = "0xD13FA4")]
		protected void CreatePositionFrameKey(AnimationCurveBuilder build, float time, Vector3 value)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD140E0", Offset = "0xD140E0", VA = "0xD140E0")]
		protected void CreateRotationFrameKey(AnimationCurveBuilder build, float time, Quaternion value)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD14260", Offset = "0xD14260", VA = "0xD14260")]
		protected void CreateScaleFrameKey(AnimationCurveBuilder build, float time, Vector3 value)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD144AC", Offset = "0xD144AC", VA = "0xD144AC", Slot = "7")]
		protected override void StopRecord()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD14514", Offset = "0xD14514", VA = "0xD14514")]
		protected void SaveRecord()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD14518", Offset = "0xD14518", VA = "0xD14518")]
		public AnimationRecorderAmin()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class AnimationCurveBuilder
	{
		[Token(Token = "0x2000427")]
		private class CurveType
		{
			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string propName;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve curve;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float lastTime;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float lastValue;

			[Token(Token = "0x600199C")]
			[Address(RVA = "0xD14528", Offset = "0xD14528", VA = "0xD14528")]
			public CurveType(Type type, string propName)
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0xD145CC", Offset = "0xD145CC", VA = "0xD145CC")]
			public void AddKey(float time, float value)
			{
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0xD14798", Offset = "0xD14798", VA = "0xD14798")]
			private void AddKey(float time, float value, float inTangent, float outTangent)
			{
			}
		}

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, CurveType> propName2Curve;

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD13C48", Offset = "0xD13C48", VA = "0xD13C48")]
		public AnimationCurveBuilder(string path)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD1439C", Offset = "0xD1439C", VA = "0xD1439C")]
		public void AddKey(Type type, string propName, float time, float value)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD14624", Offset = "0xD14624", VA = "0xD14624")]
		public void AddCurveToClip(AnimationClip clip)
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class AnimationRecorderTrack : AnimationRecorder
	{
		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<Transform, List<Track>> recordTracks;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD147F0", Offset = "0xD147F0", VA = "0xD147F0", Slot = "5")]
		protected override void RecordInit()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD14D90", Offset = "0xD14D90", VA = "0xD14D90", Slot = "6")]
		protected override void Record()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD1504C", Offset = "0xD1504C", VA = "0xD1504C")]
		private void CreateAC()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD15050", Offset = "0xD15050", VA = "0xD15050", Slot = "7")]
		protected override void StopRecord()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD15054", Offset = "0xD15054", VA = "0xD15054")]
		public AnimationRecorderTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000429")]
	public class FrameKey<ValueType>
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ValueType value;

		[Token(Token = "0x60019A4")]
		public FrameKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042A")]
	public class PositionTrack : Track
	{
		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FrameKey<Vector3>> keys;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastValue;

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD15064", Offset = "0xD15064", VA = "0xD15064", Slot = "9")]
		public override void Play(float time)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD152F8", Offset = "0xD152F8", VA = "0xD152F8", Slot = "8")]
		public override void Recored(float time)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD15470", Offset = "0xD15470", VA = "0xD15470", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD15628", Offset = "0xD15628", VA = "0xD15628", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD14C80", Offset = "0xD14C80", VA = "0xD14C80")]
		public PositionTrack()
		{
		}
	}
	[Token(Token = "0x200042B")]
	[CreateAssetMenu(fileName = "AnimationRecordFile", menuName = "CBABasketballVR/AnimationRecordFile", order = 0)]
	public class RecordFile : ScriptableObject
	{
		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int frameRate;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public byte[] trackData;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<Track> tracks;

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD157E0", Offset = "0xD157E0", VA = "0xD157E0")]
		public void WriteData()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD15A48", Offset = "0xD15A48", VA = "0xD15A48")]
		public void ReadData()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD15BFC", Offset = "0xD15BFC", VA = "0xD15BFC")]
		public RecordFile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042C")]
	public class RotationTrack : Track
	{
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FrameKey<Quaternion>> keys;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion lastValue;

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD15C84", Offset = "0xD15C84", VA = "0xD15C84", Slot = "9")]
		public override void Play(float time)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD15F28", Offset = "0xD15F28", VA = "0xD15F28", Slot = "8")]
		public override void Recored(float time)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD160A4", Offset = "0xD160A4", VA = "0xD160A4", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD1626C", Offset = "0xD1626C", VA = "0xD1626C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD14D08", Offset = "0xD14D08", VA = "0xD14D08")]
		public RotationTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042D")]
	public class Track : Complex
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string objPath;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD16430", Offset = "0xD16430", VA = "0xD16430", Slot = "7")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD16434", Offset = "0xD16434", VA = "0xD16434", Slot = "8")]
		public virtual void Recored(float time)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD16438", Offset = "0xD16438", VA = "0xD16438", Slot = "9")]
		public virtual void Play(float time)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD157D4", Offset = "0xD157D4", VA = "0xD157D4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD1643C", Offset = "0xD1643C", VA = "0xD1643C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD157D8", Offset = "0xD157D8", VA = "0xD157D8")]
		public Track()
		{
		}
	}
}
namespace Obi
{
	[Token(Token = "0x200042E")]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(CapsuleCollider))]
	[RequireComponent(typeof(Animator))]
	public class ObiCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(1f, 4f)]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x400160F")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD16440", Offset = "0xD16440", VA = "0xD16440")]
		private void Start()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD165B8", Offset = "0xD165B8", VA = "0xD165B8")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD16BD4", Offset = "0xD16BD4", VA = "0xD16BD4")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD16DF4", Offset = "0xD16DF4", VA = "0xD16DF4")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD16F74", Offset = "0xD16F74", VA = "0xD16F74")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD16B3C", Offset = "0xD16B3C", VA = "0xD16B3C")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD16A20", Offset = "0xD16A20", VA = "0xD16A20")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD1699C", Offset = "0xD1699C", VA = "0xD1699C")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD17234", Offset = "0xD17234", VA = "0xD17234")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD16814", Offset = "0xD16814", VA = "0xD16814")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD172C4", Offset = "0xD172C4", VA = "0xD172C4")]
		public ObiCharacter()
		{
		}
	}
	[Token(Token = "0x200042F")]
	[RequireComponent(typeof(ObiCharacter))]
	public class SampleCharacterController : MonoBehaviour
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiCharacter m_Character;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD172E4", Offset = "0xD172E4", VA = "0xD172E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD173F4", Offset = "0xD173F4", VA = "0xD173F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD176F8", Offset = "0xD176F8", VA = "0xD176F8")]
		public SampleCharacterController()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[RequireComponent(typeof(ObiActor))]
	public class ColorFromPhase : MonoBehaviour
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD17700", Offset = "0xD17700", VA = "0xD17700")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xD17758", Offset = "0xD17758", VA = "0xD17758")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xD1794C", Offset = "0xD1794C", VA = "0xD1794C")]
		public ColorFromPhase()
		{
		}
	}
	[Token(Token = "0x2000431")]
	[RequireComponent(typeof(ObiActor))]
	public class ColorFromVelocity : MonoBehaviour
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensibility;

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xD17954", Offset = "0xD17954", VA = "0xD17954")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD179AC", Offset = "0xD179AC", VA = "0xD179AC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xD179B0", Offset = "0xD179B0", VA = "0xD179B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD17B74", Offset = "0xD17B74", VA = "0xD17B74")]
		public ColorFromVelocity()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[RequireComponent(typeof(ObiActor))]
	public class ColorRandomizer : MonoBehaviour
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xD17B88", Offset = "0xD17B88", VA = "0xD17B88")]
		private void Start()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD17C9C", Offset = "0xD17C9C", VA = "0xD17C9C")]
		public ColorRandomizer()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[RequireComponent(typeof(Camera))]
	public class LookAroundCamera : MonoBehaviour
	{
		[Token(Token = "0x2000434")]
		public struct CameraShot
		{
			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 up;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fieldOfView;

			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xD17E44", Offset = "0xD17E44", VA = "0xD17E44")]
			public CameraShot(Vector3 position, Quaternion rotation, Vector3 up, float fieldOfView)
			{
			}
		}

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraShot currentShot;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float movementSpeed;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float rotationSpeed;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float translationResponse;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotationResponse;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fovResponse;

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xD17D10", Offset = "0xD17D10", VA = "0xD17D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD17E6C", Offset = "0xD17E6C", VA = "0xD17E6C")]
		private void LookAt(Vector3 position, Vector3 up)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xD17EA8", Offset = "0xD17EA8", VA = "0xD17EA8")]
		private void UpdateShot()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD1805C", Offset = "0xD1805C", VA = "0xD1805C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD18470", Offset = "0xD18470", VA = "0xD18470")]
		public LookAroundCamera()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class MoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000436")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x60019D8")]
			[Address(RVA = "0xD1856C", Offset = "0xD1856C", VA = "0xD1856C")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD1848C", Offset = "0xD1848C", VA = "0xD1848C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD184A8", Offset = "0xD184A8", VA = "0xD184A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD18564", Offset = "0xD18564", VA = "0xD18564")]
		public MoveAndRotate()
		{
		}
	}
}
namespace AnimationOrTween
{
	[Token(Token = "0x2000437")]
	[DoNotObfuscateNGUI]
	public enum Trigger
	{
		[Token(Token = "0x4001633")]
		OnClick,
		[Token(Token = "0x4001634")]
		OnHover,
		[Token(Token = "0x4001635")]
		OnPress,
		[Token(Token = "0x4001636")]
		OnHoverTrue,
		[Token(Token = "0x4001637")]
		OnHoverFalse,
		[Token(Token = "0x4001638")]
		OnPressTrue,
		[Token(Token = "0x4001639")]
		OnPressFalse,
		[Token(Token = "0x400163A")]
		OnActivate,
		[Token(Token = "0x400163B")]
		OnActivateTrue,
		[Token(Token = "0x400163C")]
		OnActivateFalse,
		[Token(Token = "0x400163D")]
		OnDoubleClick,
		[Token(Token = "0x400163E")]
		OnSelect,
		[Token(Token = "0x400163F")]
		OnSelectTrue,
		[Token(Token = "0x4001640")]
		OnSelectFalse,
		[Token(Token = "0x4001641")]
		Manual
	}
	[Token(Token = "0x2000438")]
	[DoNotObfuscateNGUI]
	public enum Direction
	{
		[Token(Token = "0x4001643")]
		Reverse = -1,
		[Token(Token = "0x4001644")]
		Toggle,
		[Token(Token = "0x4001645")]
		Forward
	}
	[Token(Token = "0x2000439")]
	[DoNotObfuscateNGUI]
	public enum EnableCondition
	{
		[Token(Token = "0x4001647")]
		DoNothing,
		[Token(Token = "0x4001648")]
		EnableThenPlay,
		[Token(Token = "0x4001649")]
		IgnoreDisabledState
	}
	[Token(Token = "0x200043A")]
	[DoNotObfuscateNGUI]
	public enum DisableCondition
	{
		[Token(Token = "0x400164B")]
		DisableAfterReverse = -1,
		[Token(Token = "0x400164C")]
		DoNotDisable,
		[Token(Token = "0x400164D")]
		DisableAfterForward
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200043B")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD1857C", Offset = "0xD1857C", VA = "0xD1857C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD18580", Offset = "0xD18580", VA = "0xD18580")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD188B4", Offset = "0xD188B4", VA = "0xD188B4")]
		public SmoothFollow()
		{
		}
	}
}
namespace FBCore.StateMachine
{
	[Token(Token = "0x200043C")]
	public abstract class State
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StateMachine stateMachine;

		[Token(Token = "0x1700038D")]
		public static StateMachine StateMachine
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0xD188C8", Offset = "0xD188C8", VA = "0xD188C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xD18910", Offset = "0xD18910", VA = "0xD18910")]
			private set
			{
			}
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD18968", Offset = "0xD18968", VA = "0xD18968")]
		public State(StateMachine stateMachine)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD189D8", Offset = "0xD189D8", VA = "0xD189D8", Slot = "4")]
		public virtual void Enter(params object[] para)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD189DC", Offset = "0xD189DC", VA = "0xD189DC", Slot = "5")]
		public virtual void Run()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD189E0", Offset = "0xD189E0", VA = "0xD189E0", Slot = "6")]
		public virtual void Exit()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD189E4", Offset = "0xD189E4", VA = "0xD189E4")]
		public void Finish()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD18AE8", Offset = "0xD18AE8", VA = "0xD18AE8")]
		public void Finish(params object[] para)
		{
		}
	}
	[Token(Token = "0x200043D")]
	public abstract class StateMachine
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State currentState;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State nextState;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object[] param;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Type, State> states;

		[Token(Token = "0x1700038E")]
		public string CurrentStateName
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0xD18CBC", Offset = "0xD18CBC", VA = "0xD18CBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xD18CC4", Offset = "0xD18CC4", VA = "0xD18CC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public State CurrentState
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0xD18CCC", Offset = "0xD18CCC", VA = "0xD18CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		public bool IsRunning
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xD18CD4", Offset = "0xD18CD4", VA = "0xD18CD4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xD18CDC", Offset = "0xD18CDC", VA = "0xD18CDC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public bool DebugState
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xD18CE8", Offset = "0xD18CE8", VA = "0xD18CE8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xD18CF0", Offset = "0xD18CF0", VA = "0xD18CF0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<State, State> OnStateChange
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xD18B5C", Offset = "0xD18B5C", VA = "0xD18B5C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xD18C0C", Offset = "0xD18C0C", VA = "0xD18C0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xD18CFC", Offset = "0xD18CFC", VA = "0xD18CFC", Slot = "4")]
		public virtual void InitRegester()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xD18D00", Offset = "0xD18D00", VA = "0xD18D00", Slot = "5")]
		protected virtual void InitState(State state)
		{
		}

		[Token(Token = "0x60019EF")]
		public void RegisterState<T>() where T : State
		{
		}

		[Token(Token = "0x60019F0")]
		public void SetNextState<T>() where T : State
		{
		}

		[Token(Token = "0x60019F1")]
		public void SetNextState<T>(params object[] obj) where T : State
		{
		}

		[Token(Token = "0x60019F2")]
		public abstract void OnStateFinish(State finishState, params object[] para);

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xD18D04", Offset = "0xD18D04", VA = "0xD18D04", Slot = "7")]
		public virtual void Run()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xD18A3C", Offset = "0xD18A3C", VA = "0xD18A3C")]
		public void StateFinish(State state)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xD18B50", Offset = "0xD18B50", VA = "0xD18B50")]
		public void StateFinish(State state, params object[] para)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xD18F1C", Offset = "0xD18F1C", VA = "0xD18F1C")]
		protected StateMachine()
		{
		}
	}
}
namespace TombAdventure.Scripts
{
	[Token(Token = "0x200043E")]
	public class SerialFrameTexture : MonoBehaviour
	{
		[Token(Token = "0x200043F")]
		[CompilerGenerated]
		private sealed class <FrameAnimation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SerialFrameTexture <>4__this;

			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <index>5__2;

			[Token(Token = "0x17000392")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A00")]
				[Address(RVA = "0xD191F0", Offset = "0xD191F0", VA = "0xD191F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A02")]
				[Address(RVA = "0xD19238", Offset = "0xD19238", VA = "0xD19238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xD19084", Offset = "0xD19084", VA = "0xD19084")]
			[DebuggerHidden]
			public <FrameAnimation>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xD190D8", Offset = "0xD190D8", VA = "0xD190D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xD190DC", Offset = "0xD190DC", VA = "0xD190DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xD191F8", Offset = "0xD191F8", VA = "0xD191F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage texture;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] frames;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.05f, 1f)]
		public float playInterval;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator curr;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool autoPlay;

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xD18FA4", Offset = "0xD18FA4", VA = "0xD18FA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xD19004", Offset = "0xD19004", VA = "0xD19004")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xD18FB4", Offset = "0xD18FB4", VA = "0xD18FB4")]
		public void Play()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xD19010", Offset = "0xD19010", VA = "0xD19010")]
		[IteratorStateMachine(typeof(<FrameAnimation>d__8))]
		private IEnumerator FrameAnimation()
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xD190AC", Offset = "0xD190AC", VA = "0xD190AC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xD190D0", Offset = "0xD190D0", VA = "0xD190D0")]
		public SerialFrameTexture()
		{
		}
	}
}
namespace Assets.Cat.CatScript
{
	[Token(Token = "0x2000440")]
	public class StrokeObjectControl : MonoBehaviour
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandInputAnima handInputAnima;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StrokeAbleObject currObject;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject handMeshGo;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask targetMask;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rayLength;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool leftHand;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 handOriginPos;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 handOriginEurla;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool lastTrigger;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool canRay;

		[Token(Token = "0x17000394")]
		public bool Trigger
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xD19240", Offset = "0xD19240", VA = "0xD19240")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xD19258", Offset = "0xD19258", VA = "0xD19258")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xD192B4", Offset = "0xD192B4", VA = "0xD192B4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xD19330", Offset = "0xD19330", VA = "0xD19330")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xD193D0", Offset = "0xD193D0", VA = "0xD193D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xD196F8", Offset = "0xD196F8", VA = "0xD196F8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xD19798", Offset = "0xD19798", VA = "0xD19798")]
		public StrokeObjectControl()
		{
		}
	}
}
namespace Assets.Scripts.Language
{
	[Token(Token = "0x2000441")]
	public class LanguageBoxerAudio : LanguageComponent
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxerAudioManager audioManager;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioPlayList<BBAudio>[] audioPlayList;

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xD197A0", Offset = "0xD197A0", VA = "0xD197A0", Slot = "6")]
		public override void SetLanguage(LanguageType language)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xD19848", Offset = "0xD19848", VA = "0xD19848")]
		public LanguageBoxerAudio()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class LanguageComponent : MonoBehaviour
	{
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xD19858", Offset = "0xD19858", VA = "0xD19858", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xD19A34", Offset = "0xD19A34", VA = "0xD19A34", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xD19B68", Offset = "0xD19B68", VA = "0xD19B68", Slot = "6")]
		public virtual void SetLanguage(LanguageType language)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xD19850", Offset = "0xD19850", VA = "0xD19850")]
		public LanguageComponent()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class LanguageGameObject : LanguageComponent
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] gameObjects;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xD19B6C", Offset = "0xD19B6C", VA = "0xD19B6C", Slot = "6")]
		public override void SetLanguage(LanguageType language)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xD19BF4", Offset = "0xD19BF4", VA = "0xD19BF4")]
		public LanguageGameObject()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class LanguageImage : LanguageComponent
	{
		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image image;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite[] langSprites;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xD19BFC", Offset = "0xD19BFC", VA = "0xD19BFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xD19C54", Offset = "0xD19C54", VA = "0xD19C54", Slot = "6")]
		public override void SetLanguage(LanguageType language)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xD19CAC", Offset = "0xD19CAC", VA = "0xD19CAC")]
		public LanguageImage()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public enum LanguageType
	{
		[Token(Token = "0x4001675")]
		Chinese,
		[Token(Token = "0x4001676")]
		English
	}
	[Token(Token = "0x2000446")]
	public class LanguageManager
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LanguageManager instance;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LanguageType languageType;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TranslateDict translate;

		[Token(Token = "0x17000395")]
		public static LanguageManager Instance
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xD198F8", Offset = "0xD198F8", VA = "0xD198F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public LanguageType Language
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xD19E64", Offset = "0xD19E64", VA = "0xD19E64")]
			get
			{
				return default(LanguageType);
			}
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xD19DD8", Offset = "0xD19DD8", VA = "0xD19DD8")]
			set
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<LanguageType> LanguageChanged
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xD19984", Offset = "0xD19984", VA = "0xD19984")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xD19AB8", Offset = "0xD19AB8", VA = "0xD19AB8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xD19CB4", Offset = "0xD19CB4", VA = "0xD19CB4")]
		public LanguageManager()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xD19E48", Offset = "0xD19E48", VA = "0xD19E48")]
		private void EmitLanguageChanged(LanguageType lType)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xD19DF8", Offset = "0xD19DF8", VA = "0xD19DF8")]
		public void LoadLanguageConfig()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xD19F58", Offset = "0xD19F58", VA = "0xD19F58")]
		private string GetValue(string key)
		{
			return null;
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xD1A080", Offset = "0xD1A080", VA = "0xD1A080")]
		public string GetTranslation(string key)
		{
			return null;
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xD1A084", Offset = "0xD1A084", VA = "0xD1A084")]
		public string GetTranslation(string key, string[] args)
		{
			return null;
		}
	}
	[Token(Token = "0x2000447")]
	public static class LanguageExtend
	{
		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xD1A0A0", Offset = "0xD1A0A0", VA = "0xD1A0A0")]
		public static string ToLanguage(this string key)
		{
			return null;
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD1A0C0", Offset = "0xD1A0C0", VA = "0xD1A0C0")]
		public static string ToLanguage(this string key, string[] args)
		{
			return null;
		}
	}
	[Token(Token = "0x2000448")]
	public class LanguageMaterial : LanguageComponent
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D[] langTexs;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int matIndex;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string replaceTexName;

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xD1A0F8", Offset = "0xD1A0F8", VA = "0xD1A0F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xD1A17C", Offset = "0xD1A17C", VA = "0xD1A17C", Slot = "6")]
		public override void SetLanguage(LanguageType language)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xD1A1DC", Offset = "0xD1A1DC", VA = "0xD1A1DC")]
		public LanguageMaterial()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class LanguageText : LanguageComponent
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string keyName;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] args;

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xD1A1E4", Offset = "0xD1A1E4", VA = "0xD1A1E4", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD1A2E8", Offset = "0xD1A2E8", VA = "0xD1A2E8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD1A380", Offset = "0xD1A380", VA = "0xD1A380", Slot = "7")]
		public virtual void OnSetText(string str)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD1A384", Offset = "0xD1A384", VA = "0xD1A384", Slot = "6")]
		public override void SetLanguage(LanguageType language)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD1A28C", Offset = "0xD1A28C", VA = "0xD1A28C")]
		public void SetLanguageFormat(LanguageType language)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD1A3B8", Offset = "0xD1A3B8", VA = "0xD1A3B8")]
		public LanguageText()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class LanguageTextMeshPro : LanguageText
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI textMeshPro;

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xD1A3C0", Offset = "0xD1A3C0", VA = "0xD1A3C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD1A418", Offset = "0xD1A418", VA = "0xD1A418", Slot = "7")]
		public override void OnSetText(string str)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xD1A43C", Offset = "0xD1A43C", VA = "0xD1A43C")]
		public LanguageTextMeshPro()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class TranslateDict
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string fileString;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<string, string[]> dictionary;

		[Token(Token = "0x4001684")]
		public const string NULLKEY = "KeyNull";

		[Token(Token = "0x4001685")]
		public const string NULLVALUE = "ValueNull";

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xD19D50", Offset = "0xD19D50", VA = "0xD19D50")]
		public TranslateDict()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD19F7C", Offset = "0xD19F7C", VA = "0xD19F7C")]
		public string GetValue(string key, int langIndex, int defLang = 0)
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD19E6C", Offset = "0xD19E6C", VA = "0xD19E6C")]
		public void LoadFromResources(string filename)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD1A6E4", Offset = "0xD1A6E4", VA = "0xD1A6E4")]
		public void LoadFromString(string data)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD1A444", Offset = "0xD1A444", VA = "0xD1A444")]
		private void CreateDict()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD1A700", Offset = "0xD1A700", VA = "0xD1A700")]
		private void AddKeyValueToDict(string key, string[] values)
		{
		}
	}
}
namespace Assets.Scripts.Tools
{
	[Token(Token = "0x200044C")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 tilt;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float dampening;

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD1A768", Offset = "0xD1A768", VA = "0xD1A768")]
		private static float DampenFactor(float dampening, float elapsed)
		{
			return default(float);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD1A79C", Offset = "0xD1A79C", VA = "0xD1A79C", Slot = "4")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xD1AA3C", Offset = "0xD1AA3C", VA = "0xD1AA3C")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class TargetAngleOffset : MonoBehaviour
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform looker;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float angle;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float height;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float distance;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xD1AA44", Offset = "0xD1AA44", VA = "0xD1AA44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xD1AC54", Offset = "0xD1AC54", VA = "0xD1AC54")]
		public TargetAngleOffset()
		{
		}
	}
}
namespace Assets.Scripts.Interact
{
	[Token(Token = "0x200044E")]
	public class AnimalGripObject : GripAbleObject
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NavMeshAgent agent;

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD1AC5C", Offset = "0xD1AC5C", VA = "0xD1AC5C", Slot = "5")]
		public override void PickUp(GripInteractControl parent)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xD1AE1C", Offset = "0xD1AE1C", VA = "0xD1AE1C", Slot = "6")]
		public override void Drop(Vector3 velo)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD1AF3C", Offset = "0xD1AF3C", VA = "0xD1AF3C")]
		public AnimalGripObject()
		{
		}
	}
	[Token(Token = "0x200044F")]
	[RequireComponent(typeof(SmoothFollow))]
	public class GripAbleObject : InteractAbleObjectBase
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool accpetVelocity;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public System.Action OnPickUp;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public System.Action OnDrop;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float velocityMultiplier;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Rigidbody rig;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public SmoothFollow follow;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform offsetTransform;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] forcePreset;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int forceIndex;

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD1AFE0", Offset = "0xD1AFE0", VA = "0xD1AFE0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD1ACCC", Offset = "0xD1ACCC", VA = "0xD1ACCC", Slot = "5")]
		public virtual void PickUp(GripInteractControl parent)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD1AEAC", Offset = "0xD1AEAC", VA = "0xD1AEAC", Slot = "6")]
		public virtual void Drop(Vector3 velo)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD1B148", Offset = "0xD1B148", VA = "0xD1B148")]
		public void SetFollowOffset(Vector3 off)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD1B07C", Offset = "0xD1B07C", VA = "0xD1B07C")]
		public void StartFollow(Transform t)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD1B168", Offset = "0xD1B168", VA = "0xD1B168")]
		public void StopFollow()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD1B1A0", Offset = "0xD1B1A0", VA = "0xD1B1A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD1AF40", Offset = "0xD1AF40", VA = "0xD1AF40")]
		public GripAbleObject()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public enum Hand
	{
		[Token(Token = "0x400169A")]
		None,
		[Token(Token = "0x400169B")]
		Left,
		[Token(Token = "0x400169C")]
		Right,
		[Token(Token = "0x400169D")]
		Both
	}
	[Token(Token = "0x2000451")]
	public class GripInteractControl : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		public class SnapVector
		{
			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 speed;

			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float time;

			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xD1BD6C", Offset = "0xD1BD6C", VA = "0xD1BD6C")]
			public SnapVector(Vector3 v3, float t, Vector3 pos)
			{
			}
		}

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand useHand;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform align;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractAbleObjectBase currentObj;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected InteractAbleObjectBase currentTouchObj;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public XRGamePadMap gamePadMap;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool gripObjAble;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 lastPosition;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 lastRotate;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int avgFrame;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected List<SnapVector> lastVelocitys;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Vector3> lastRotates;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool lastGrip;

		[Token(Token = "0x17000397")]
		public Vector3 CurrentVelocity
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xD1B520", Offset = "0xD1B520", VA = "0xD1B520")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000398")]
		public Vector3 CurrentAngularVelocity
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xD1B6C8", Offset = "0xD1B6C8", VA = "0xD1B6C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<GripAbleObject> OnPickUp
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xD1B260", Offset = "0xD1B260", VA = "0xD1B260")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xD1B310", Offset = "0xD1B310", VA = "0xD1B310")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action<GripAbleObject> OnDrop
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xD1B3C0", Offset = "0xD1B3C0", VA = "0xD1B3C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xD1B470", Offset = "0xD1B470", VA = "0xD1B470")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD1B868", Offset = "0xD1B868", VA = "0xD1B868", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD1B8F4", Offset = "0xD1B8F4", VA = "0xD1B8F4", Slot = "5")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD1BAB8", Offset = "0xD1BAB8", VA = "0xD1BAB8", Slot = "6")]
		protected virtual void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD1BA38", Offset = "0xD1BA38", VA = "0xD1BA38")]
		protected XRGamePadMap GetXRInput()
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD1BB9C", Offset = "0xD1BB9C", VA = "0xD1BB9C", Slot = "7")]
		protected virtual void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD1BDD0", Offset = "0xD1BDD0", VA = "0xD1BDD0", Slot = "8")]
		protected virtual void UpdateAngularVelocity()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD1BF5C", Offset = "0xD1BF5C", VA = "0xD1BF5C", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xD1BFBC", Offset = "0xD1BFBC", VA = "0xD1BFBC", Slot = "10")]
		protected virtual void OnGrip(bool b)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xD1C288", Offset = "0xD1C288", VA = "0xD1C288")]
		protected void EmitOnPickUp(GripAbleObject obj)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xD1C2A4", Offset = "0xD1C2A4", VA = "0xD1C2A4")]
		protected void EmitOnDrop(GripAbleObject obj)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xD1B070", Offset = "0xD1B070", VA = "0xD1B070")]
		public void ForceDrop()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xD1C2C0", Offset = "0xD1C2C0", VA = "0xD1C2C0")]
		public GripInteractControl()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class InteractAbleObjectBase : MonoBehaviour
	{
		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GripInteractControl mainController;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform handAlign;

		[Token(Token = "0x17000399")]
		public XRGamePadMap XRInput
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xD1C3A0", Offset = "0xD1C3A0", VA = "0xD1C3A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xD1C3A8", Offset = "0xD1C3A8", VA = "0xD1C3A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public bool Griped
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xD1C3B0", Offset = "0xD1C3B0", VA = "0xD1C3B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD1B258", Offset = "0xD1B258", VA = "0xD1B258")]
		public InteractAbleObjectBase()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class PlaceAbleObject : MonoBehaviour
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PlaceContainer container;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ghostPrefab;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GripAbleObject gripAbleObject;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool inArea;

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD1C410", Offset = "0xD1C410", VA = "0xD1C410")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD1C574", Offset = "0xD1C574", VA = "0xD1C574")]
		private void GripDrop()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD1C5C0", Offset = "0xD1C5C0", VA = "0xD1C5C0")]
		private void GripPickUp()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD1C658", Offset = "0xD1C658", VA = "0xD1C658")]
		public void OnEnterPlaceArea()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD1C664", Offset = "0xD1C664", VA = "0xD1C664")]
		public void OnExitPlaceArea()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD1C66C", Offset = "0xD1C66C", VA = "0xD1C66C")]
		public PlaceAbleObject()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class PlaceContainer : MonoBehaviour
	{
		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<PlaceAbleObject> OnPlaced;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<PlaceAbleObject> OnPickUp;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource placeAudio;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlaceAbleObject current;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform placeTransform;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject ghostInstance;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool normalShowGhost;

		[Token(Token = "0x1700039B")]
		public bool Placed
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xD1C674", Offset = "0xD1C674", VA = "0xD1C674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xD1C6D4", Offset = "0xD1C6D4", VA = "0xD1C6D4", Slot = "4")]
		public virtual void Place()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xD1C790", Offset = "0xD1C790", VA = "0xD1C790", Slot = "5")]
		public virtual void PickUp()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xD1C7D0", Offset = "0xD1C7D0", VA = "0xD1C7D0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xD1C9B4", Offset = "0xD1C9B4", VA = "0xD1C9B4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xD1CAF8", Offset = "0xD1CAF8", VA = "0xD1CAF8")]
		public PlaceContainer()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class StandPlaceContainer : PlaceContainer
	{
		[Token(Token = "0x2000457")]
		[CompilerGenerated]
		private sealed class <AlphaFade>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandPlaceContainer <>4__this;

			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float a;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <alpha>5__2;

			[Token(Token = "0x1700039C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6F")]
				[Address(RVA = "0xD1CDE4", Offset = "0xD1CDE4", VA = "0xD1CDE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A71")]
				[Address(RVA = "0xD1CE2C", Offset = "0xD1CE2C", VA = "0xD1CE2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xD1CC94", Offset = "0xD1CC94", VA = "0xD1CC94")]
			[DebuggerHidden]
			public <AlphaFade>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xD1CCC4", Offset = "0xD1CCC4", VA = "0xD1CCC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xD1CCC8", Offset = "0xD1CCC8", VA = "0xD1CCC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xD1CDEC", Offset = "0xD1CDEC", VA = "0xD1CDEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float timeOffset;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xD1CB00", Offset = "0xD1CB00", VA = "0xD1CB00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xD1CC20", Offset = "0xD1CC20", VA = "0xD1CC20", Slot = "5")]
		public override void PickUp()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xD1CC5C", Offset = "0xD1CC5C", VA = "0xD1CC5C", Slot = "4")]
		public override void Place()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xD1CB9C", Offset = "0xD1CB9C", VA = "0xD1CB9C")]
		[IteratorStateMachine(typeof(<AlphaFade>d__6))]
		private IEnumerator AlphaFade(float a)
		{
			return null;
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xD1CCBC", Offset = "0xD1CCBC", VA = "0xD1CCBC")]
		public StandPlaceContainer()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class StrokeAbleObject : MonoBehaviour
	{
		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xD1CE34", Offset = "0xD1CE34", VA = "0xD1CE34")]
		public StrokeAbleObject()
		{
		}
	}
}
namespace Assets.Scripts.Interact.HandRig
{
	[Token(Token = "0x2000459")]
	public class ActionBars : MonoBehaviour
	{
		[Token(Token = "0x200045A")]
		[CompilerGenerated]
		private sealed class <ResetPos>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionBars <>4__this;

			[Token(Token = "0x170003A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A7F")]
				[Address(RVA = "0xD1D1D0", Offset = "0xD1D1D0", VA = "0xD1D1D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A81")]
				[Address(RVA = "0xD1D218", Offset = "0xD1D218", VA = "0xD1D218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xD1D0F4", Offset = "0xD1D0F4", VA = "0xD1D0F4")]
			[DebuggerHidden]
			public <ResetPos>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xD1D124", Offset = "0xD1D124", VA = "0xD1D124", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xD1D128", Offset = "0xD1D128", VA = "0xD1D128", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A80")]
			[Address(RVA = "0xD1D1D8", Offset = "0xD1D1D8", VA = "0xD1D1D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public System.Action OnTrigger;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rig;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform handAlign;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource tickAudio;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource triggerAudio;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Light spotLight;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool action;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 minRotate;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 maxRotate;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(0f, 1f)]
		public float percent;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastP;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 startPos;

		[Token(Token = "0x1700039E")]
		public bool LightSwitch
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0xD1CE5C", Offset = "0xD1CE5C", VA = "0xD1CE5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xD1CE3C", Offset = "0xD1CE3C", VA = "0xD1CE3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public Vector3 CurrRotate
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xD1CE78", Offset = "0xD1CE78", VA = "0xD1CE78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xD1CEBC", Offset = "0xD1CEBC", VA = "0xD1CEBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xD1CEE0", Offset = "0xD1CEE0", VA = "0xD1CEE0")]
		public void BeginGrip(Vector3 sPos)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xD1CEF4", Offset = "0xD1CEF4", VA = "0xD1CEF4")]
		public bool GripUpdate(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xD1D058", Offset = "0xD1D058", VA = "0xD1D058")]
		public void EndGrip()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xD1D080", Offset = "0xD1D080", VA = "0xD1D080")]
		[IteratorStateMachine(typeof(<ResetPos>d__21))]
		private IEnumerator ResetPos()
		{
			return null;
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xD1D11C", Offset = "0xD1D11C", VA = "0xD1D11C")]
		public ActionBars()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class HandRig : MonoBehaviour
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GripInteractControl gripInteractControl;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform handMesh;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 handOriginPos;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 handOriginEurla;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool inArea;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ActionBars currBar;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool onGrip;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool lastGrip;

		[Token(Token = "0x170003A2")]
		private XRGamePadMap InputMap
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0xD1D220", Offset = "0xD1D220", VA = "0xD1D220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD1D23C", Offset = "0xD1D23C", VA = "0xD1D23C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD1D280", Offset = "0xD1D280", VA = "0xD1D280")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xD1D304", Offset = "0xD1D304", VA = "0xD1D304")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD1D374", Offset = "0xD1D374", VA = "0xD1D374")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xD1D4F0", Offset = "0xD1D4F0", VA = "0xD1D4F0")]
		public HandRig()
		{
		}
	}
}
namespace Assets.Scripts.Input
{
	[Token(Token = "0x200045C")]
	public class XRStickInput : MonoBehaviour
	{
		[Token(Token = "0x200045D")]
		public enum StickType
		{
			[Token(Token = "0x40016E5")]
			Left,
			[Token(Token = "0x40016E6")]
			Right,
			[Token(Token = "0x40016E7")]
			Both
		}

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StickType stickType;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float threadhold;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deadZone;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<int> horizontalAction;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<int> verticalAction;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Action updateInput;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool leftMakeZero;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool rightMakeZero;

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xD1D4F8", Offset = "0xD1D4F8", VA = "0xD1D4F8")]
		public void RemoveCallBack()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD1D520", Offset = "0xD1D520", VA = "0xD1D520")]
		public void AddCallBack([Optional] Action<int> hori, [Optional] Action<int> verti)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD1D638", Offset = "0xD1D638", VA = "0xD1D638")]
		private void UpdateInputLeft()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD1D700", Offset = "0xD1D700", VA = "0xD1D700")]
		private void UpdateInputRight()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD1D7C8", Offset = "0xD1D7C8", VA = "0xD1D7C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD1D9AC", Offset = "0xD1D9AC", VA = "0xD1D9AC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD1D9D0", Offset = "0xD1D9D0", VA = "0xD1D9D0")]
		public XRStickInput()
		{
		}
	}
}
namespace Assets.Scripts.Audio
{
	[Token(Token = "0x200045E")]
	public class AudioMultiTrackManager : MonoBehaviour
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioTrack> tracks;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioTrack> fastTrack;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int fastTrackIndex;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD1D9E4", Offset = "0xD1D9E4", VA = "0xD1D9E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD1DB34", Offset = "0xD1DB34", VA = "0xD1DB34")]
		public void PlayFastAudio(AudioClip audioClip)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xD1DC8C", Offset = "0xD1DC8C", VA = "0xD1DC8C")]
		public void PlayAudioOnTrack(AudioClip audioClip, int trackId, bool checkPriority = false)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD1E00C", Offset = "0xD1E00C", VA = "0xD1E00C")]
		public void StopTrack(int trackId)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD1DBDC", Offset = "0xD1DBDC", VA = "0xD1DBDC")]
		public AudioTrack GetFastTrack()
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD1DF74", Offset = "0xD1DF74", VA = "0xD1DF74")]
		private bool IDCheck(int trackId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD1E094", Offset = "0xD1E094", VA = "0xD1E094")]
		public AudioMultiTrackManager()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class AudioTrack : MonoBehaviour
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string trackName;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useQueue;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int trackId;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool canBeBreak;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<AudioClip> clips;

		[Token(Token = "0x170003A3")]
		public bool Mute
		{
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xD1E14C", Offset = "0xD1E14C", VA = "0xD1E14C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xD1E168", Offset = "0xD1E168", VA = "0xD1E168")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xD1DFD4", Offset = "0xD1DFD4", VA = "0xD1DFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD1DC70", Offset = "0xD1DC70", VA = "0xD1DC70")]
		public void Play(AudioClip audioClip)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD1E188", Offset = "0xD1E188", VA = "0xD1E188")]
		public void AddPlayToList(AudioClip audioClip)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD1E1E0", Offset = "0xD1E1E0", VA = "0xD1E1E0")]
		public void Play()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD1DFF0", Offset = "0xD1DFF0", VA = "0xD1DFF0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD1E1FC", Offset = "0xD1E1FC", VA = "0xD1E1FC")]
		public void Tick()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD1E29C", Offset = "0xD1E29C", VA = "0xD1E29C")]
		public AudioTrack()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public enum BoxerTrack
	{
		[Token(Token = "0x40016F2")]
		Base,
		[Token(Token = "0x40016F3")]
		ItemGet,
		[Token(Token = "0x40016F4")]
		ItemEffect,
		[Token(Token = "0x40016F5")]
		ItemIntro,
		[Token(Token = "0x40016F6")]
		DizzTips
	}
	[Token(Token = "0x2000461")]
	public class BoxerAudioManager : AudioMultiTrackManager
	{
		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioPlayList<BBAudio> audioPlayList;

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD1E324", Offset = "0xD1E324", VA = "0xD1E324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD1E374", Offset = "0xD1E374", VA = "0xD1E374")]
		public void PlayFastAudio(BBAudio audio)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD1E3A4", Offset = "0xD1E3A4", VA = "0xD1E3A4")]
		public void PlayOnTrack(BoxerTrack track, BBAudio audio, bool checkPriority = true)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD1E3F4", Offset = "0xD1E3F4", VA = "0xD1E3F4")]
		public BoxerAudioManager()
		{
		}
	}
}
namespace Assets.FitZombie.fitZombie.Scripts
{
	[Token(Token = "0x2000462")]
	public class LoginManager : MonoBehaviour
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage qrImg;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage userPicImg;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text userNameText;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture defaultQrTex;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnLoginSuccess;

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD1E3F8", Offset = "0xD1E3F8", VA = "0xD1E3F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD1E594", Offset = "0xD1E594", VA = "0xD1E594")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD1E50C", Offset = "0xD1E50C", VA = "0xD1E50C")]
		public void OnLoginSucc()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD1E650", Offset = "0xD1E650", VA = "0xD1E650")]
		public void ClickLoginOut()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD1E6A0", Offset = "0xD1E6A0", VA = "0xD1E6A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD1E794", Offset = "0xD1E794", VA = "0xD1E794")]
		public LoginManager()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts
{
	[Token(Token = "0x2000463")]
	public class MatchGround : MonoBehaviour
	{
		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BBGame game;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapCreator mapCreator;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BBMapBlockPlaceManager placeManager;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SupplyBoxBorn supplyManager;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MatchMapObject volcano;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MatchMapObject machine;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject ufoGo;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject airWallGo;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MatchMapObject currMapObject;

		[Token(Token = "0x170003A5")]
		public BBMapBlockPlaceManager PlaceManager
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xD1E79C", Offset = "0xD1E79C", VA = "0xD1E79C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public MapCreator MapCreator
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xD1E7A4", Offset = "0xD1E7A4", VA = "0xD1E7A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		public SupplyBoxBorn SupplyManager
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xD1E7AC", Offset = "0xD1E7AC", VA = "0xD1E7AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public float GroundHeight
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xD1E7B4", Offset = "0xD1E7B4", VA = "0xD1E7B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xD1E7E0", Offset = "0xD1E7E0", VA = "0xD1E7E0", Slot = "4")]
		public virtual void Visible(bool b)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xD1E808", Offset = "0xD1E808", VA = "0xD1E808", Slot = "5")]
		public virtual void Init(int mode)
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD1EA30", Offset = "0xD1EA30", VA = "0xD1EA30")]
		private void SetUFOPos()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD1EAD0", Offset = "0xD1EAD0", VA = "0xD1EAD0", Slot = "6")]
		public virtual void MatchReady()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD1EAF0", Offset = "0xD1EAF0", VA = "0xD1EAF0", Slot = "7")]
		public virtual void MatchStart()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xD1EB8C", Offset = "0xD1EB8C", VA = "0xD1EB8C", Slot = "8")]
		public virtual void MatchEnd()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xD1EBE0", Offset = "0xD1EBE0", VA = "0xD1EBE0")]
		public MatchGround()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public class MatchMapObject : MonoBehaviour
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatchGround matchGround;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BBConfig config;

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xD1EBE8", Offset = "0xD1EBE8", VA = "0xD1EBE8", Slot = "4")]
		public virtual void Active()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xD1EBEC", Offset = "0xD1EBEC", VA = "0xD1EBEC", Slot = "5")]
		public virtual void MatchStart()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xD1EBF0", Offset = "0xD1EBF0", VA = "0xD1EBF0", Slot = "6")]
		public virtual void MatchEnd()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xD1EBF4", Offset = "0xD1EBF4", VA = "0xD1EBF4")]
		public MatchMapObject()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.UI
{
	[Token(Token = "0x2000465")]
	public class BattleHUD : MonoBehaviour
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BBGame game;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boxer boxer;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI remainOppText;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image signImage;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ItemHUD hiddenTimeText;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ItemHUD superStarTimeText;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ItemHUD dizzItem;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ItemHUD getItemUI;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SpriteListScriptableObject weaponIcon;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<BuffEffect> buffEffects;

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xD1EBFC", Offset = "0xD1EBFC", VA = "0xD1EBFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xD1EE90", Offset = "0xD1EE90", VA = "0xD1EE90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xD1F0D0", Offset = "0xD1F0D0", VA = "0xD1F0D0")]
		private void OnGetItem(SupplyItemInfo info)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xD1F1B4", Offset = "0xD1F1B4", VA = "0xD1F1B4")]
		private void OnBuffAdd(BuffEffect buffEffect)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xD1F2CC", Offset = "0xD1F2CC", VA = "0xD1F2CC")]
		private void OnBuffEnd(BuffEffect buffEffect)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xD1F3BC", Offset = "0xD1F3BC", VA = "0xD1F3BC")]
		private void OnLifePlayerChange(List<Boxer> players)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xD1F440", Offset = "0xD1F440", VA = "0xD1F440")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xD1F7B4", Offset = "0xD1F7B4", VA = "0xD1F7B4")]
		private static string FloatToIntStr(float val)
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xD1F80C", Offset = "0xD1F80C", VA = "0xD1F80C")]
		public BattleHUD()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class ItemHUD : MonoBehaviour
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image image;

		[Token(Token = "0x170003A9")]
		public bool Visable
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xD1F814", Offset = "0xD1F814", VA = "0xD1F814")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xD1F2A4", Offset = "0xD1F2A4", VA = "0xD1F2A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD1F7E8", Offset = "0xD1F7E8", VA = "0xD1F7E8")]
		public void SetText(string str)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xD1F198", Offset = "0xD1F198", VA = "0xD1F198")]
		public void SetImage(Sprite sprite)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xD1F834", Offset = "0xD1F834", VA = "0xD1F834")]
		public ItemHUD()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class LookFieldCheck : MonoBehaviour
	{
		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cam;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lookAngle;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent<bool> OnLook;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool lastLook;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 lookOffset;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ignoreY;

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xD1F83C", Offset = "0xD1F83C", VA = "0xD1F83C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xD1FB6C", Offset = "0xD1FB6C", VA = "0xD1FB6C")]
		private void OnLookChange(bool visable)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD1F8CC", Offset = "0xD1F8CC", VA = "0xD1F8CC")]
		public bool IsLooked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xD1FBCC", Offset = "0xD1FBCC", VA = "0xD1FBCC")]
		public LookFieldCheck()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class UIGamePadArrow : MonoBehaviour
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image upBgArrow;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image upArrow;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image downArrow;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color normalColor;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color activeColor;

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xD1FBDC", Offset = "0xD1FBDC", VA = "0xD1FBDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xD1FCB0", Offset = "0xD1FCB0", VA = "0xD1FCB0")]
		public void SetUpBg(bool act)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xD1FC4C", Offset = "0xD1FC4C", VA = "0xD1FC4C")]
		public void SetArrowColor(Image arr, bool active)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xD1FCD0", Offset = "0xD1FCD0", VA = "0xD1FCD0")]
		public UIGamePadArrow()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class UITargetArrow : MonoBehaviour
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cam;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lookAngle;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float radius;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform arrow;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool lastLook;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent<bool> OnLook;

		[Token(Token = "0x170003AA")]
		public Vector3 LookVectorCameraSpace
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xD1FCD8", Offset = "0xD1FCD8", VA = "0xD1FCD8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xD1FE0C", Offset = "0xD1FE0C", VA = "0xD1FE0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD200B4", Offset = "0xD200B4", VA = "0xD200B4")]
		private void OnLookChange(bool visable)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD1FEFC", Offset = "0xD1FEFC", VA = "0xD1FEFC")]
		public bool ShowState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD20214", Offset = "0xD20214", VA = "0xD20214")]
		public Quaternion GetRotation(Vector2 vecBase)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD2013C", Offset = "0xD2013C", VA = "0xD2013C")]
		public Vector2 GetArrowPixelPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xD20278", Offset = "0xD20278", VA = "0xD20278")]
		public UITargetArrow()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.UI.CornerMark
{
	[Token(Token = "0x200046A")]
	public class CornerMark : MonoBehaviour
	{
		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cornerImage;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD2028C", Offset = "0xD2028C", VA = "0xD2028C")]
		protected void SetUIShow(bool show)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD202AC", Offset = "0xD202AC", VA = "0xD202AC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD202B0", Offset = "0xD202B0", VA = "0xD202B0", Slot = "5")]
		public virtual void SetShowState(bool state)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xD202B4", Offset = "0xD202B4", VA = "0xD202B4", Slot = "6")]
		public virtual bool GetShowState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xD202BC", Offset = "0xD202BC", VA = "0xD202BC", Slot = "7")]
		public virtual void UpdateShow()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xD202F0", Offset = "0xD202F0", VA = "0xD202F0")]
		public CornerMark()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class CornerMarkFolder : CornerMark
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CornerMark[] childs;

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xD202F8", Offset = "0xD202F8", VA = "0xD202F8", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xD20304", Offset = "0xD20304", VA = "0xD20304", Slot = "6")]
		public override bool GetShowState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD2037C", Offset = "0xD2037C", VA = "0xD2037C", Slot = "5")]
		public override void SetShowState(bool state)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD203E8", Offset = "0xD203E8", VA = "0xD203E8")]
		public CornerMarkFolder()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class CornerMarkLeaf : CornerMark
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nodeName;

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xD203F0", Offset = "0xD203F0", VA = "0xD203F0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xD203FC", Offset = "0xD203FC", VA = "0xD203FC", Slot = "6")]
		public override bool GetShowState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xD20420", Offset = "0xD20420", VA = "0xD20420", Slot = "5")]
		public override void SetShowState(bool state)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xD20440", Offset = "0xD20440", VA = "0xD20440")]
		public CornerMarkLeaf()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.Tools
{
	[Token(Token = "0x200046D")]
	public class LineRendererExpand : SimpleAnimationCurve
	{
		[Token(Token = "0x200046E")]
		[CompilerGenerated]
		private sealed class <PlayWidthAnima>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LineRendererExpand <>4__this;

			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170003AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AEC")]
				[Address(RVA = "0xD20814", Offset = "0xD20814", VA = "0xD20814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AEE")]
				[Address(RVA = "0xD2085C", Offset = "0xD2085C", VA = "0xD2085C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xD206B8", Offset = "0xD206B8", VA = "0xD206B8")]
			[DebuggerHidden]
			public <PlayWidthAnima>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xD20700", Offset = "0xD20700", VA = "0xD20700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xD20704", Offset = "0xD20704", VA = "0xD20704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xD2081C", Offset = "0xD2081C", VA = "0xD2081C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform laser;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minWidth;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxWidth;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxScale;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minScale;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 laserStart;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MapCreator map;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material m;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xD20448", Offset = "0xD20448", VA = "0xD20448")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD204B0", Offset = "0xD204B0", VA = "0xD204B0", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xD20544", Offset = "0xD20544", VA = "0xD20544")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xD2063C", Offset = "0xD2063C", VA = "0xD2063C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xD204D0", Offset = "0xD204D0", VA = "0xD204D0")]
		[IteratorStateMachine(typeof(<PlayWidthAnima>d__12))]
		private IEnumerator PlayWidthAnima()
		{
			return null;
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xD206E0", Offset = "0xD206E0", VA = "0xD206E0")]
		public LineRendererExpand()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class SimpleAnimationCurve : MonoBehaviour
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xD20864", Offset = "0xD20864", VA = "0xD20864", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xD206F0", Offset = "0xD206F0", VA = "0xD206F0")]
		public SimpleAnimationCurve()
		{
		}
	}
	[Token(Token = "0x2000470")]
	internal static class UtilTool
	{
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xD20868", Offset = "0xD20868", VA = "0xD20868")]
		public static string SecondToTimeStr(float v)
		{
			return null;
		}
	}
}
namespace Assets.FitBoxing.Scripts.PlatformAdapater
{
	[Token(Token = "0x2000471")]
	public static class GGPlatform
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlatformBase platform;

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xD2094C", Offset = "0xD2094C", VA = "0xD2094C")]
		static GGPlatform()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class OculusPlatform : PlatformBase
	{
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xD209D8", Offset = "0xD209D8", VA = "0xD209D8")]
		public OculusPlatform()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class PicoPlatform : PlatformBase
	{
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xD209E8", Offset = "0xD209E8", VA = "0xD209E8", Slot = "4")]
		public override void AsyncInitialize(Message<PlatformInitializeResult>.Handler act, [Optional] string appId)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xD20B08", Offset = "0xD20B08", VA = "0xD20B08", Slot = "5")]
		public override void GetEntitlement(Message.Handler act)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xD20B80", Offset = "0xD20B80", VA = "0xD20B80", Slot = "6")]
		public override void GetAccessToken(Message<string>.Handler act)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xD20C70", Offset = "0xD20C70", VA = "0xD20C70", Slot = "7")]
		public override void GetLoggedInUser(Message<VUser>.Handler act)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xD20D60", Offset = "0xD20D60", VA = "0xD20D60", Slot = "8")]
		public override void RequestUserPermissions(Message<PermissionResult>.Handler act, string[] permissionList)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xD20E60", Offset = "0xD20E60", VA = "0xD20E60", Slot = "9")]
		public override void GetAuthorizedPermissions(Message<PermissionResult>.Handler act)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xD20F50", Offset = "0xD20F50", VA = "0xD20F50", Slot = "10")]
		public override void AddRuntimeManager(Camera mainCamera)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xD20FD4", Offset = "0xD20FD4", VA = "0xD20FD4", Slot = "11")]
		public override void ResetSensor()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xD21028", Offset = "0xD21028", VA = "0xD21028", Slot = "13")]
		public override string GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xD21094", Offset = "0xD21094", VA = "0xD21094", Slot = "14")]
		public override string GetPlatformName()
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD209D0", Offset = "0xD209D0", VA = "0xD209D0")]
		public PicoPlatform()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class PlatformBase
	{
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD21678", Offset = "0xD21678", VA = "0xD21678", Slot = "4")]
		public virtual void AsyncInitialize(Message<PlatformInitializeResult>.Handler act, [Optional] string appId)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD21700", Offset = "0xD21700", VA = "0xD21700", Slot = "5")]
		public virtual void GetEntitlement(Message.Handler act)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD21770", Offset = "0xD21770", VA = "0xD21770", Slot = "6")]
		public virtual void GetAccessToken(Message<string>.Handler act)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD21818", Offset = "0xD21818", VA = "0xD21818", Slot = "7")]
		public virtual void GetLoggedInUser(Message<VUser>.Handler act)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD219C4", Offset = "0xD219C4", VA = "0xD219C4", Slot = "8")]
		public virtual void RequestUserPermissions(Message<PermissionResult>.Handler act, string[] permissionList)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD21A84", Offset = "0xD21A84", VA = "0xD21A84", Slot = "9")]
		public virtual void GetAuthorizedPermissions(Message<PermissionResult>.Handler act)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD21B44", Offset = "0xD21B44", VA = "0xD21B44", Slot = "10")]
		public virtual void AddRuntimeManager(Camera mainCamera)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD21B48", Offset = "0xD21B48", VA = "0xD21B48", Slot = "11")]
		public virtual void ResetSensor()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD21B4C", Offset = "0xD21B4C", VA = "0xD21B4C", Slot = "12")]
		public virtual void HapticImpulse(bool leftHand, float amplitude, float duration)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD21B50", Offset = "0xD21B50", VA = "0xD21B50", Slot = "13")]
		public virtual string GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD21B90", Offset = "0xD21B90", VA = "0xD21B90", Slot = "14")]
		public virtual string GetPlatformName()
		{
			return null;
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD209E0", Offset = "0xD209E0", VA = "0xD209E0")]
		public PlatformBase()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class VUser
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DisplayName;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ImageUrl;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD213C0", Offset = "0xD213C0", VA = "0xD213C0")]
		public VUser()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class PermissionResult
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] AuthorizedPermissions;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AccessToken;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string UserID;

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD2151C", Offset = "0xD2151C", VA = "0xD2151C")]
		public PermissionResult()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4001746")]
		Unknown = -999,
		[Token(Token = "0x4001747")]
		NetError = -6,
		[Token(Token = "0x4001748")]
		MissingImpl = -5,
		[Token(Token = "0x4001749")]
		LoadImplFailed = -4,
		[Token(Token = "0x400174A")]
		InternalError = -3,
		[Token(Token = "0x400174B")]
		InvalidParams = -2,
		[Token(Token = "0x400174C")]
		AlreadyInitialized = -1,
		[Token(Token = "0x400174D")]
		Success = 0
	}
	[Token(Token = "0x200047D")]
	public class Message
	{
		[Token(Token = "0x200047E")]
		public delegate void Handler(Message message);

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string errorMessage;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int errorCode;

		[Token(Token = "0x170003AD")]
		public bool IsError
		{
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xD21BD0", Offset = "0xD21BD0", VA = "0xD21BD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AE")]
		public string ErrorMessage
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0xD21BF0", Offset = "0xD21BF0", VA = "0xD21BF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xD21BF8", Offset = "0xD21BF8", VA = "0xD21BF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public int ErrorCode
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xD21C00", Offset = "0xD21C00", VA = "0xD21C00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xD21C08", Offset = "0xD21C08", VA = "0xD21C08")]
			set
			{
			}
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD20B78", Offset = "0xD20B78", VA = "0xD20B78")]
		public Message()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class Message<T> : Message
	{
		[Token(Token = "0x2000480")]
		public new delegate void Handler(Message<T> message);

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Data;

		[Token(Token = "0x6001B21")]
		public Message()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.PlatformAdapater.AdapaterComponent
{
	[Token(Token = "0x2000481")]
	public class PlatformControllerAdapter : MonoBehaviour
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRControllerKeyHighLight highLight;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject picoController;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject oculusController;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Assets.Scripts.Interact.Hand controllerNode;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool inited;

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD21D58", Offset = "0xD21D58", VA = "0xD21D58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD21E80", Offset = "0xD21E80", VA = "0xD21E80")]
		private void InitPicoController()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD21F60", Offset = "0xD21F60", VA = "0xD21F60")]
		private void InitOculusController()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD22040", Offset = "0xD22040", VA = "0xD22040")]
		public PlatformControllerAdapter()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.NetSync
{
	[Token(Token = "0x2000482")]
	public interface INetSocket
	{
		[Token(Token = "0x6001B2A")]
		void SendData(byte[] data);

		[Token(Token = "0x6001B2B")]
		void SetReceiverHandler(Action<byte[]> handler);
	}
	[Token(Token = "0x2000483")]
	public class NetStateTransceiver : MonoBehaviour
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public INetSocket netSocket;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<EventBase> eventQueue;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Type, NetEventCaller> eventCaller;

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD22048", Offset = "0xD22048", VA = "0xD22048", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD22128", Offset = "0xD22128", VA = "0xD22128", Slot = "5")]
		protected virtual void OnReceiverData(byte[] data)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD2212C", Offset = "0xD2212C", VA = "0xD2212C")]
		protected void SendData(byte[] data)
		{
		}

		[Token(Token = "0x6001B2F")]
		public void RegesterEvent<ET>(Action<ET, float> callBack) where ET : EventBase
		{
		}

		[Token(Token = "0x6001B30")]
		public void RemoveEvent<ET>(Action<ET, float> callBack) where ET : EventBase
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xD221D4", Offset = "0xD221D4", VA = "0xD221D4")]
		public void CallEvent(EventBase ev, float t)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xD223D4", Offset = "0xD223D4", VA = "0xD223D4")]
		public void AddEventQueue(EventBase sendEvent)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD22480", Offset = "0xD22480", VA = "0xD22480")]
		public NetStateTransceiver()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class NetStateTransceiverBoxing : NetStateTransceiver
	{
		[Token(Token = "0x2000485")]
		[CompilerGenerated]
		private sealed class <DelayWaitLogin>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetStateTransceiverBoxing <>4__this;

			[Token(Token = "0x170003B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B47")]
				[Address(RVA = "0xD23574", Offset = "0xD23574", VA = "0xD23574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B49")]
				[Address(RVA = "0xD235BC", Offset = "0xD235BC", VA = "0xD235BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xD227B0", Offset = "0xD227B0", VA = "0xD227B0")]
			[DebuggerHidden]
			public <DelayWaitLogin>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xD23240", Offset = "0xD23240", VA = "0xD23240", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xD23244", Offset = "0xD23244", VA = "0xD23244", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xD2357C", Offset = "0xD2357C", VA = "0xD2357C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoxerSyncManager boxerManger;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectSyncManager objectManager;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NetPack sendPack;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<int, NetPlayerSession> sessionDict;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<NetPlayerSession> sessionList;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public System.Action UpdateSendPack;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float sendPackInterval;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lastSendTime;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool loopSend;

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD22558", Offset = "0xD22558", VA = "0xD22558")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD22644", Offset = "0xD22644", VA = "0xD22644", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD2273C", Offset = "0xD2273C", VA = "0xD2273C")]
		[IteratorStateMachine(typeof(<DelayWaitLogin>d__11))]
		private IEnumerator DelayWaitLogin()
		{
			return null;
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD227D8", Offset = "0xD227D8", VA = "0xD227D8")]
		public void MatchingStage()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD2285C", Offset = "0xD2285C", VA = "0xD2285C")]
		public void GroundUpStage()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD2266C", Offset = "0xD2266C", VA = "0xD2266C")]
		public void BattleStage()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD22954", Offset = "0xD22954", VA = "0xD22954")]
		public void SetNetData(NetPackData data)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD22970", Offset = "0xD22970", VA = "0xD22970")]
		public void UpdateSendPack_RoomStage()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD229B8", Offset = "0xD229B8", VA = "0xD229B8")]
		public void UpdateSendPack_Ready()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD22A00", Offset = "0xD22A00", VA = "0xD22A00")]
		public void UpdateSendPack_Battle()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD225BC", Offset = "0xD225BC", VA = "0xD225BC")]
		public void SendNetPack()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD22C3C", Offset = "0xD22C3C", VA = "0xD22C3C", Slot = "5")]
		protected override void OnReceiverData(byte[] data)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD22D40", Offset = "0xD22D40", VA = "0xD22D40")]
		protected NetPlayerSession GetNetPlayerSession(int playerId)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD22FD0", Offset = "0xD22FD0", VA = "0xD22FD0")]
		private void OnNetPlayerTimeOut(NetPlayerSession netPlayer)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD22FD4", Offset = "0xD22FD4", VA = "0xD22FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD23124", Offset = "0xD23124", VA = "0xD23124")]
		public NetStateTransceiverBoxing()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class NetPlayerSession
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int playerId;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetStateTransceiver transceiver;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Queue<float> receiverTimeQ;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetPack receiverPack;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoxerSyncManager boxerSyncManager;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectSyncManager objectSyncManager;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lastTimeStamp;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float outTime;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float avgDelay;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<NetPlayerSession> OnTimeOut;

		[Token(Token = "0x170003B2")]
		public int PlayerID
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xD235C4", Offset = "0xD235C4", VA = "0xD235C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B3")]
		public virtual float CurrentTime
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xD235CC", Offset = "0xD235CC", VA = "0xD235CC", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xD22F2C", Offset = "0xD22F2C", VA = "0xD22F2C")]
		public NetPlayerSession(int id)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xD235D4", Offset = "0xD235D4", VA = "0xD235D4", Slot = "5")]
		public virtual void OnReceiver(NetPack data)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xD23708", Offset = "0xD23708", VA = "0xD23708")]
		private void CalculateAvgDelay()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xD237CC", Offset = "0xD237CC", VA = "0xD237CC")]
		protected void OnReceiverBattlePack(BattlePack bp)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xD238BC", Offset = "0xD238BC", VA = "0xD238BC", Slot = "6")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xD238C0", Offset = "0xD238C0", VA = "0xD238C0", Slot = "7")]
		public virtual void OnDisconnect()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xD238F8", Offset = "0xD238F8", VA = "0xD238F8", Slot = "8")]
		public virtual void OnConnect()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class NetEventCaller
	{
		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type eventType;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Delegate eventCaller;

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xD238FC", Offset = "0xD238FC", VA = "0xD238FC")]
		public NetEventCaller(Type type)
		{
		}

		[Token(Token = "0x6001B54")]
		public void Add<ET>(Action<ET, float> callBack)
		{
		}

		[Token(Token = "0x6001B55")]
		public void Remove<ET>(Action<ET, float> callBack)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xD222A8", Offset = "0xD222A8", VA = "0xD222A8")]
		public void Call(EventBase eb, float t)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xD2392C", Offset = "0xD2392C", VA = "0xD2392C")]
		public bool Invaild()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000488")]
	public class NetPack : Complex
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerID;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeStamp;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetPackData data;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type[] DATA_TYPE;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xD22D38", Offset = "0xD22D38", VA = "0xD22D38")]
		public NetPack()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xD23950", Offset = "0xD23950", VA = "0xD23950", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD23A3C", Offset = "0xD23A3C", VA = "0xD23A3C", Slot = "5")]
		public override void Write(Message msg)
		{
		}

		[Token(Token = "0x6001B5B")]
		public static T[] ReadList<T>(ReceiveMsg rm, Type[] list) where T : Complex
		{
			return null;
		}

		[Token(Token = "0x6001B5C")]
		public static T GetInstanceFormTypeID<T>(int typeId, Type[] typeList) where T : Complex
		{
			return null;
		}

		[Token(Token = "0x6001B5D")]
		public static void WriteList<T>(Message msg, Type[] list, T[] data) where T : Complex
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xD23B14", Offset = "0xD23B14", VA = "0xD23B14")]
		public static int GetTypeId(Type type, Type[] list)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xD23BD4", Offset = "0xD23BD4", VA = "0xD23BD4")]
		public static Type GetTypeFromId(int id, Type[] list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000489")]
	public class BattlePack : NetPackData
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoxerState boxerState;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StateBase[] states;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventBase[] events;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type[] STATE_TYPE;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type[] EVENT_TYPE;

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xD228E0", Offset = "0xD228E0", VA = "0xD228E0")]
		public BattlePack()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xD23D80", Offset = "0xD23D80", VA = "0xD23D80", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xD23EA4", Offset = "0xD23EA4", VA = "0xD23EA4", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x200048A")]
	public abstract class EventBase : Complex
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ownerId;

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xD241AC", Offset = "0xD241AC", VA = "0xD241AC")]
		public EventBase()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xD241B4", Offset = "0xD241B4", VA = "0xD241B4", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD241DC", Offset = "0xD241DC", VA = "0xD241DC", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class ExplodeEvent : EventBase
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExplodeInfo explodeInfo;

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD24200", Offset = "0xD24200", VA = "0xD24200")]
		public ExplodeEvent()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD24208", Offset = "0xD24208", VA = "0xD24208", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD24290", Offset = "0xD24290", VA = "0xD24290", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class HitEvent : EventBase
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int targetId;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitInfo hitInfo;

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD24314", Offset = "0xD24314", VA = "0xD24314")]
		public HitEvent()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD2431C", Offset = "0xD2431C", VA = "0xD2431C", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD243FC", Offset = "0xD243FC", VA = "0xD243FC", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x200048D")]
	public abstract class NetPackData : Complex
	{
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD23D78", Offset = "0xD23D78", VA = "0xD23D78")]
		public NetPackData()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xD23EA0", Offset = "0xD23EA0", VA = "0xD23EA0", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class RoomPack : NetPackData
	{
		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int roomID;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ownerID;

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xD244D4", Offset = "0xD244D4", VA = "0xD244D4")]
		public RoomPack()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xD244DC", Offset = "0xD244DC", VA = "0xD244DC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xD24520", Offset = "0xD24520", VA = "0xD24520", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class BoxerState : StateBase
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 rootPosition;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rootVelocity;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion hmdRotation;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftHandPosition;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion leftHandRotation;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 leftHandVelocity;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 rightHandPosition;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Quaternion rightHandRotation;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 rightHandVelocity;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public IntMask baseState;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int leftWeaponIndex;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int rightWeaponIndex;

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xD23D70", Offset = "0xD23D70", VA = "0xD23D70")]
		public BoxerState()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xD24568", Offset = "0xD24568", VA = "0xD24568", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xD2481C", Offset = "0xD2481C", VA = "0xD2481C", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public enum BoxerBuffState
	{
		[Token(Token = "0x400178D")]
		None = 0,
		[Token(Token = "0x400178E")]
		Dizz = 1,
		[Token(Token = "0x400178F")]
		Ink = 2,
		[Token(Token = "0x4001790")]
		SuperStar = 4,
		[Token(Token = "0x4001791")]
		InvisibleClock = 8
	}
	[Token(Token = "0x2000491")]
	public class ObjectState : StateBase
	{
		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 velocity;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public byte type;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool destoryFlag;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xD24ACC", Offset = "0xD24ACC", VA = "0xD24ACC")]
		public ObjectState()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xD24ADC", Offset = "0xD24ADC", VA = "0xD24ADC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xD24C24", Offset = "0xD24C24", VA = "0xD24C24", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public abstract class StateBase : Complex
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int objectId;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xD24AD4", Offset = "0xD24AD4", VA = "0xD24AD4")]
		public StateBase()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xD24BFC", Offset = "0xD24BFC", VA = "0xD24BFC", Slot = "4")]
		public override void Read(ReceiveMsg rm)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xD24D3C", Offset = "0xD24D3C", VA = "0xD24D3C", Slot = "5")]
		public override void Write(Message msg)
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class SyncBoxer : SyncObject
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Boxer owner;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rootTranform;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rigidbody rootRigidbody;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform hmdTransform;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTransform;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTransform;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected BoxerState state;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xD24D60", Offset = "0xD24D60", VA = "0xD24D60", Slot = "10")]
		public virtual void SetRootPostion(Vector3 worldPos)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xD24D7C", Offset = "0xD24D7C", VA = "0xD24D7C", Slot = "11")]
		public virtual Vector3 GetRootPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xD24D98", Offset = "0xD24D98", VA = "0xD24D98", Slot = "12")]
		public virtual Vector3 GetRootVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xD24DB4", Offset = "0xD24DB4", VA = "0xD24DB4", Slot = "13")]
		public virtual void SetHeadRotation(Quaternion rotate)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xD24DD0", Offset = "0xD24DD0", VA = "0xD24DD0", Slot = "14")]
		public virtual Quaternion GetHeadRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xD24DEC", Offset = "0xD24DEC", VA = "0xD24DEC", Slot = "15")]
		public virtual void SetLeftHandPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xD24E48", Offset = "0xD24E48", VA = "0xD24E48", Slot = "16")]
		public virtual Vector3 GetLeftHandPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xD24EA4", Offset = "0xD24EA4", VA = "0xD24EA4", Slot = "17")]
		public virtual void SetLeftHandRotation(Quaternion rotate)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xD24EC0", Offset = "0xD24EC0", VA = "0xD24EC0", Slot = "18")]
		public virtual Quaternion GetLeftHandRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xD24EDC", Offset = "0xD24EDC", VA = "0xD24EDC", Slot = "19")]
		public virtual Vector3 GetLeftHandVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xD24F20", Offset = "0xD24F20", VA = "0xD24F20", Slot = "20")]
		public virtual void SetRightHandPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xD24F7C", Offset = "0xD24F7C", VA = "0xD24F7C", Slot = "21")]
		public virtual Vector3 GetRightHandPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xD24FD8", Offset = "0xD24FD8", VA = "0xD24FD8", Slot = "22")]
		public virtual void SetRightHandRotation(Quaternion rotate)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xD24FF4", Offset = "0xD24FF4", VA = "0xD24FF4", Slot = "23")]
		public virtual Quaternion GetRightHandRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xD25010", Offset = "0xD25010", VA = "0xD25010", Slot = "24")]
		public virtual Vector3 GetRightHandVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xD25054", Offset = "0xD25054", VA = "0xD25054")]
		public SyncBoxer()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class SyncBoxerDummy : SyncBoxer
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lerpFactor;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 rootPos;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion hmdRotation;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 leftHandPosition;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 rightHandPosition;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xD250D0", Offset = "0xD250D0", VA = "0xD250D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xD25130", Offset = "0xD25130", VA = "0xD25130", Slot = "4")]
		public override void OnStateUpdate(StateBase data, float delta)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xD252F8", Offset = "0xD252F8", VA = "0xD252F8")]
		private void UpdateBuffState(BoxerState state)
		{
		}

		[Token(Token = "0x6001B8F")]
		private void UpdateBuff<T>(IntMask diff, BoxerBuffState bbs, IntMask newerState) where T : BuffEffect
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xD2526C", Offset = "0xD2526C", VA = "0xD2526C")]
		private void UpdateWeapon(BoxerState state)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xD2543C", Offset = "0xD2543C", VA = "0xD2543C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xD2575C", Offset = "0xD2575C", VA = "0xD2575C")]
		public SyncBoxerDummy()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class SyncBoxerPlayer : SyncBoxer
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<EventBase> events;

		[Token(Token = "0x170003B4")]
		protected BoxerSyncManager SyncManager
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xD25768", Offset = "0xD25768", VA = "0xD25768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xD257E4", Offset = "0xD257E4", VA = "0xD257E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xD25968", Offset = "0xD25968", VA = "0xD25968")]
		private void OnReceiverHitEvent(HitEvent hitEvent, float t)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xD25A28", Offset = "0xD25A28", VA = "0xD25A28")]
		private HitInfo OnGloveHit(HitInfo info)
		{
			return default(HitInfo);
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xD25BD8", Offset = "0xD25BD8", VA = "0xD25BD8", Slot = "5")]
		public override StateBase GetState()
		{
			return null;
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xD25D84", Offset = "0xD25D84", VA = "0xD25D84", Slot = "25")]
		protected virtual IntMask GetBuffState()
		{
			return default(IntMask);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xD25FC4", Offset = "0xD25FC4", VA = "0xD25FC4", Slot = "6")]
		public override EventBase[] GetEvents()
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xD25994", Offset = "0xD25994", VA = "0xD25994")]
		public void OnHitEvent(HitEvent hitEvent, float t)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xD26074", Offset = "0xD26074", VA = "0xD26074")]
		public SyncBoxerPlayer()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class SyncNormalObject : SyncObject
	{
		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rootTranform;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody rootRigidbody;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectState State;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte type;

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xD260F8", Offset = "0xD260F8", VA = "0xD260F8", Slot = "10")]
		public virtual void SetRootPostion(Vector3 worldPos)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xD26114", Offset = "0xD26114", VA = "0xD26114", Slot = "11")]
		public virtual Vector3 GetRootPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xD26130", Offset = "0xD26130", VA = "0xD26130", Slot = "12")]
		public virtual void SetRootRotation(Quaternion worldRot)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xD2614C", Offset = "0xD2614C", VA = "0xD2614C", Slot = "13")]
		public virtual Quaternion GetRootRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xD26168", Offset = "0xD26168", VA = "0xD26168", Slot = "14")]
		public virtual Vector3 GetRootVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xD26184", Offset = "0xD26184", VA = "0xD26184", Slot = "5")]
		public override StateBase GetState()
		{
			return null;
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xD26210", Offset = "0xD26210", VA = "0xD26210")]
		public SyncNormalObject()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class SyncObject : MonoBehaviour
	{
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int objectId;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateSyncManager syncManger;

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD26284", Offset = "0xD26284", VA = "0xD26284", Slot = "4")]
		public virtual void OnStateUpdate(StateBase date, float delta)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD26288", Offset = "0xD26288", VA = "0xD26288", Slot = "5")]
		public virtual StateBase GetState()
		{
			return null;
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD26290", Offset = "0xD26290", VA = "0xD26290", Slot = "6")]
		public virtual EventBase[] GetEvents()
		{
			return null;
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD26298", Offset = "0xD26298", VA = "0xD26298", Slot = "7")]
		public virtual void DoDestory()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD26304", Offset = "0xD26304", VA = "0xD26304", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD26390", Offset = "0xD26390", VA = "0xD26390", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD250C8", Offset = "0xD250C8", VA = "0xD250C8")]
		public SyncObject()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class SyncRocketBullet : SyncNormalObject
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RocketBullet rocketBullet;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<EventBase> events;

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD2641C", Offset = "0xD2641C", VA = "0xD2641C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD26564", Offset = "0xD26564", VA = "0xD26564")]
		private void OnExplode(ExplodeInfo eInfo)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD26660", Offset = "0xD26660", VA = "0xD26660", Slot = "6")]
		public override EventBase[] GetEvents()
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD266F4", Offset = "0xD266F4", VA = "0xD266F4")]
		public SyncRocketBullet()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.NetSync.SyncManager
{
	[Token(Token = "0x2000499")]
	public class BoxerSyncManager : StateSyncManager
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncBoxerPlayer playerBoxer;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SyncBoxerDummy> syncBoxer;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<int, SyncBoxerDummy> playerDict;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject boxerDummyPrefab;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD26778", Offset = "0xD26778", VA = "0xD26778")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xD26058", Offset = "0xD26058", VA = "0xD26058")]
		public Boxer GetBoxerDummy(int id)
		{
			return null;
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xD268E0", Offset = "0xD268E0", VA = "0xD268E0", Slot = "4")]
		public override void OnStateUpdate(StateBase data, float delta)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xD26984", Offset = "0xD26984", VA = "0xD26984")]
		public void RemoveDummy(int id)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xD26A98", Offset = "0xD26A98", VA = "0xD26A98")]
		private void RemoveBoxerDummy(SyncBoxerDummy syncBoxer)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD26AB8", Offset = "0xD26AB8", VA = "0xD26AB8", Slot = "7")]
		public override StateBase GetState()
		{
			return null;
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xD26AD8", Offset = "0xD26AD8", VA = "0xD26AD8", Slot = "8")]
		public override EventBase[] GetEvents()
		{
			return null;
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xD2677C", Offset = "0xD2677C", VA = "0xD2677C")]
		public SyncBoxerDummy GetBoxerSyncDummy(int id)
		{
			return null;
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xD26AF8", Offset = "0xD26AF8", VA = "0xD26AF8")]
		private SyncBoxerDummy CreateBoxerDummy()
		{
			return null;
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xD26BA8", Offset = "0xD26BA8", VA = "0xD26BA8")]
		public BoxerSyncManager()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class ObjectSyncManager : StateSyncManager
	{
		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, BoxerSyncObjects> boxerSyncDict;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SyncObject> localModule;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] syncObjectPrefab;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int objectIdCount;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xD26C88", Offset = "0xD26C88", VA = "0xD26C88", Slot = "10")]
		public override void OnChildEnable(SyncObject syncObject)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD26D5C", Offset = "0xD26D5C", VA = "0xD26D5C", Slot = "9")]
		public override void OnChildDisable(SyncObject syncObject)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD26DB4", Offset = "0xD26DB4", VA = "0xD26DB4", Slot = "5")]
		public override void OnStateUpdata(StateBase data, float delta, int userId)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD26FA0", Offset = "0xD26FA0", VA = "0xD26FA0")]
		public void RemoveDummy(int userId)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD26E64", Offset = "0xD26E64", VA = "0xD26E64")]
		private BoxerSyncObjects GetBoxerSyncObject(int userId)
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xD26D48", Offset = "0xD26D48", VA = "0xD26D48")]
		public int GetNewObjectId()
		{
			return default(int);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xD2702C", Offset = "0xD2702C", VA = "0xD2702C", Slot = "8")]
		public override EventBase[] GetEvents()
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xD27208", Offset = "0xD27208", VA = "0xD27208")]
		public StateBase[] GetStates()
		{
			return null;
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xD27334", Offset = "0xD27334", VA = "0xD27334")]
		public SyncObject CreateSyncObjectDummy(byte typeId)
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xD273E8", Offset = "0xD273E8", VA = "0xD273E8")]
		public ObjectSyncManager()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class BoxerSyncObjects
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectSyncManager objectSyncManager;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<int, SyncObject> syncModule;

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xD26F5C", Offset = "0xD26F5C", VA = "0xD26F5C")]
		public void UpdataState(ObjectState state, float delta)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xD274C0", Offset = "0xD274C0", VA = "0xD274C0")]
		public SyncObject GetSyncObject(int objId, byte typeId)
		{
			return null;
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xD275A8", Offset = "0xD275A8", VA = "0xD275A8")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xD26FA4", Offset = "0xD26FA4", VA = "0xD26FA4")]
		public BoxerSyncObjects()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class StateSyncManager : MonoBehaviour
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetStateTransceiver transceiver;

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xD27734", Offset = "0xD27734", VA = "0xD27734", Slot = "4")]
		public virtual void OnStateUpdate(StateBase data, float delta)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xD27738", Offset = "0xD27738", VA = "0xD27738", Slot = "5")]
		public virtual void OnStateUpdata(StateBase data, float delta, int userId)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xD2773C", Offset = "0xD2773C", VA = "0xD2773C", Slot = "6")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xD27740", Offset = "0xD27740", VA = "0xD27740", Slot = "7")]
		public virtual StateBase GetState()
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xD27748", Offset = "0xD27748", VA = "0xD27748", Slot = "8")]
		public virtual EventBase[] GetEvents()
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xD27750", Offset = "0xD27750", VA = "0xD27750", Slot = "9")]
		public virtual void OnChildDisable(SyncObject syncObject)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xD27754", Offset = "0xD27754", VA = "0xD27754", Slot = "10")]
		public virtual void OnChildEnable(SyncObject syncObject)
		{
		}

		[Token(Token = "0x6001BCD")]
		public virtual void RegesterEvent<T>(Action<T, float> action) where T : EventBase
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xD26C80", Offset = "0xD26C80", VA = "0xD26C80")]
		public StateSyncManager()
		{
		}
	}
}
namespace Assets.FitBoxing.Scripts.Scriptable
{
	[Token(Token = "0x200049D")]
	public class DeviceImageAssetsLoad : MonoBehaviour
	{
		[Token(Token = "0x200049E")]
		[CompilerGenerated]
		private sealed class <Init>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeviceImageAssetsLoad <>4__this;

			[Token(Token = "0x170003B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BDE")]
				[Address(RVA = "0xD28860", Offset = "0xD28860", VA = "0xD28860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE0")]
				[Address(RVA = "0xD288A8", Offset = "0xD288A8", VA = "0xD288A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xD277CC", Offset = "0xD277CC", VA = "0xD277CC")]
			[DebuggerHidden]
			public <Init>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xD28768", Offset = "0xD28768", VA = "0xD28768", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xD2876C", Offset = "0xD2876C", VA = "0xD2876C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xD28868", Offset = "0xD28868", VA = "0xD28868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049F")]
		[CompilerGenerated]
		private sealed class <DownloadAssets>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeviceImageAssetsLoad <>4__this;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <model>5__2;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <platName>5__3;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string[] <>7__wrap3;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap4;

			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <item>5__6;

			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <c1>5__7;

			[Token(Token = "0x170003B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE4")]
				[Address(RVA = "0xD28ED0", Offset = "0xD28ED0", VA = "0xD28ED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE6")]
				[Address(RVA = "0xD28F18", Offset = "0xD28F18", VA = "0xD28F18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xD27CD8", Offset = "0xD27CD8", VA = "0xD27CD8")]
			[DebuggerHidden]
			public <DownloadAssets>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xD288B0", Offset = "0xD288B0", VA = "0xD288B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xD288B4", Offset = "0xD288B4", VA = "0xD288B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xD28ED8", Offset = "0xD28ED8", VA = "0xD28ED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image[] controllerImages;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] hmdImages;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VideoPlayer stickPlayer;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VideoPlayer punchPlayer;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VideoPlayer hmdPlayer;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VideoPlayer powerPunchPlayer;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Sprite controllerSprite;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite hmdSprite;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LocalPath;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string ControllerPathName;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string HmdPathName;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string StickMoviePathName;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string PunchMoviePathName;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string HmdMoviePathName;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string PowerPunchMoviePathName;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string BaseUrl;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string[] assetsList;

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xD27758", Offset = "0xD27758", VA = "0xD27758")]
		[IteratorStateMachine(typeof(<Init>d__17))]
		public IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xD277F4", Offset = "0xD277F4", VA = "0xD277F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xD278CC", Offset = "0xD278CC", VA = "0xD278CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xD27984", Offset = "0xD27984", VA = "0xD27984")]
		public void UpdateRefrences()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xD27C64", Offset = "0xD27C64", VA = "0xD27C64")]
		[IteratorStateMachine(typeof(<DownloadAssets>d__21))]
		public IEnumerator DownloadAssets()
		{
			return null;
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xD278F4", Offset = "0xD278F4", VA = "0xD278F4")]
		public void CheckAssetsFolder()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xD27D00", Offset = "0xD27D00", VA = "0xD27D00")]
		public void CleanAssetsFolder()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xD27FFC", Offset = "0xD27FFC", VA = "0xD27FFC")]
		public bool CheckFileExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xD280D4", Offset = "0xD280D4", VA = "0xD280D4")]
		public void LoadSpriteFormFile()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xD2825C", Offset = "0xD2825C", VA = "0xD2825C")]
		public static Texture2D LoadTexture2DByIO(string _url)
		{
			return null;
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xD283D4", Offset = "0xD283D4", VA = "0xD283D4")]
		public DeviceImageAssetsLoad()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	[CreateAssetMenu(fileName = "SpriteList", menuName = "Scriptable/SpriteList")]
	public class SpriteListScriptableObject : ScriptableObject
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite[] sprites;

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xD28F20", Offset = "0xD28F20", VA = "0xD28F20")]
		public Sprite GetSprite(int index)
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xD28F60", Offset = "0xD28F60", VA = "0xD28F60")]
		public SpriteListScriptableObject()
		{
		}
	}
}
namespace Assets.Boxing.AI
{
	[Token(Token = "0x20004A1")]
	public class BoxerAction : BehaviorDesigner.Runtime.Tasks.Action
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SharedBoxer owner;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SharedBBGame game;

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xD28F68", Offset = "0xD28F68", VA = "0xD28F68")]
		public BoxerAction()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class BoxerAnimaAction : BoxerAction
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedAIActionInfo attackInfo;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoxerAnimationController ac;

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xD28F70", Offset = "0xD28F70", VA = "0xD28F70", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xD29054", Offset = "0xD29054", VA = "0xD29054", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xD2905C", Offset = "0xD2905C", VA = "0xD2905C")]
		public BoxerAnimaAction()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class BoxerAttack : BoxerAction
	{
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedAIActionInfo attackInfo;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoxerAnimationController ac;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AnimaActionInfo info;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Timer timer;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool inAttackArea;

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xD29064", Offset = "0xD29064", VA = "0xD29064", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xD29370", Offset = "0xD29370", VA = "0xD29370")]
		private void OnFire()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xD292AC", Offset = "0xD292AC", VA = "0xD292AC")]
		private void Attack()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xD293E4", Offset = "0xD293E4", VA = "0xD293E4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xD29194", Offset = "0xD29194", VA = "0xD29194")]
		private bool InActionArea()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xD294F4", Offset = "0xD294F4", VA = "0xD294F4", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xD2958C", Offset = "0xD2958C", VA = "0xD2958C")]
		public BoxerAttack()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class BoxerAttackSelector : BoxerCondition
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedAIActionInfo attackInfo;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AnimaActionType lastType;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xD29594", Offset = "0xD29594", VA = "0xD29594", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xD29844", Offset = "0xD29844", VA = "0xD29844", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xD298BC", Offset = "0xD298BC", VA = "0xD298BC")]
		public BoxerAttackSelector()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class BoxerGetRandomPoint : BoxerAction
	{
		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedVector3 targetPoint;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SharedFloat stopDistance;

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xD298CC", Offset = "0xD298CC", VA = "0xD298CC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xD299A4", Offset = "0xD299A4", VA = "0xD299A4")]
		public BoxerGetRandomPoint()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class BoxerMoveToActionPos : BoxerAction
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedAIActionInfo attackInfo;

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xD299AC", Offset = "0xD299AC", VA = "0xD299AC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xD299B4", Offset = "0xD299B4", VA = "0xD299B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xD29D04", Offset = "0xD29D04", VA = "0xD29D04")]
		public BoxerMoveToActionPos()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class BoxerMoveToActionPosContinuous : BoxerMoveToActionPos
	{
		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 moveTargetPos;

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xD29D0C", Offset = "0xD29D0C", VA = "0xD29D0C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xD29D7C", Offset = "0xD29D7C", VA = "0xD29D7C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xD29EE8", Offset = "0xD29EE8", VA = "0xD29EE8")]
		public BoxerMoveToActionPosContinuous()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class BoxerMoveToPoint : BoxerAction
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedVector3 targetPoint;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SharedFloat stopDistance;

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xD29EF0", Offset = "0xD29EF0", VA = "0xD29EF0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xD29FD4", Offset = "0xD29FD4", VA = "0xD29FD4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xD2A144", Offset = "0xD2A144", VA = "0xD2A144")]
		public BoxerMoveToPoint()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class BoxerMoveToSupplyBoxPos : BoxerMoveToActionPos
	{
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float beHitCount;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool breakTask;

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xD2A14C", Offset = "0xD2A14C", VA = "0xD2A14C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xD2A26C", Offset = "0xD2A26C", VA = "0xD2A26C")]
		private void OnBeHit(HitInfo opp)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xD2A320", Offset = "0xD2A320", VA = "0xD2A320", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xD2A438", Offset = "0xD2A438", VA = "0xD2A438", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xD2A528", Offset = "0xD2A528", VA = "0xD2A528")]
		private bool CheckCanGetBox(Transform box)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xD2A90C", Offset = "0xD2A90C", VA = "0xD2A90C")]
		public BoxerMoveToSupplyBoxPos()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class BoxerMoveToTarget : BoxerAction
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedFloat stopDistance;

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xD2A914", Offset = "0xD2A914", VA = "0xD2A914", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xD2A91C", Offset = "0xD2A91C", VA = "0xD2A91C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xD2AB2C", Offset = "0xD2AB2C", VA = "0xD2AB2C")]
		public BoxerMoveToTarget()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class BoxerRandomAnimation : BoxerAction
	{
		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedAIActionInfo attackInfo;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimaActionType type;

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xD2AB34", Offset = "0xD2AB34", VA = "0xD2AB34", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xD2AC4C", Offset = "0xD2AC4C", VA = "0xD2AC4C")]
		public BoxerRandomAnimation()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	[TaskIcon("{SkinColor}WaitIcon.png")]
	public class BoxerWaitAnimaAction : BoxerAction
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedAIActionInfo actionInfo;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Timer timer;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xD2AC54", Offset = "0xD2AC54", VA = "0xD2AC54", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xD2AD64", Offset = "0xD2AD64", VA = "0xD2AD64", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xD2AD9C", Offset = "0xD2AD9C", VA = "0xD2AD9C", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xD2AE3C", Offset = "0xD2AE3C", VA = "0xD2AE3C")]
		public BoxerWaitAnimaAction()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class BoxerCondition : Conditional
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SharedBoxer owner;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SharedBBGame game;

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xD298C4", Offset = "0xD298C4", VA = "0xD298C4")]
		public BoxerCondition()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class BoxerFieldCheck : BoxerCondition
	{
		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedFloat fieldOfViewAngle;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SharedFloat viewDistance;

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xD2AE44", Offset = "0xD2AE44", VA = "0xD2AE44")]
		public bool CanSeeTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xD2B0D0", Offset = "0xD2B0D0", VA = "0xD2B0D0")]
		public BoxerFieldCheck()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class BoxerFindSupplyBox : BoxerFieldCheck
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SharedAIActionInfo actionInfo;

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xD2B124", Offset = "0xD2B124", VA = "0xD2B124", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xD2B5B4", Offset = "0xD2B5B4", VA = "0xD2B5B4")]
		public BoxerFindSupplyBox()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class BoxerLoopFindOpp : BoxerCondition
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Boxer, int> _opponents;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float maxLockDis;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xD2B5B8", Offset = "0xD2B5B8", VA = "0xD2B5B8")]
		private void OnBeHit(HitInfo info)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xD2B7C0", Offset = "0xD2B7C0", VA = "0xD2B7C0", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xD2B8D8", Offset = "0xD2B8D8", VA = "0xD2B8D8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xD2BC70", Offset = "0xD2BC70", VA = "0xD2BC70")]
		public Transform GetLockTarget()
		{
			return null;
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xD2BF40", Offset = "0xD2BF40", VA = "0xD2BF40")]
		public Transform GetMainPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xD2BCCC", Offset = "0xD2BCCC", VA = "0xD2BCCC")]
		public Transform GetNearestOpp(Boxer owner)
		{
			return null;
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xD2BFBC", Offset = "0xD2BFBC", VA = "0xD2BFBC")]
		public int GetBeTargetCount(Boxer owner)
		{
			return default(int);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xD2C2AC", Offset = "0xD2C2AC", VA = "0xD2C2AC")]
		public BoxerLoopFindOpp()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class BoxerSafeAreaCheck : BoxerCondition
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedFloat stopDis;

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xD2C33C", Offset = "0xD2C33C", VA = "0xD2C33C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xD2C340", Offset = "0xD2C340", VA = "0xD2C340", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xD2C4E0", Offset = "0xD2C4E0", VA = "0xD2C4E0")]
		private bool HasOppOnCliff()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xD2C86C", Offset = "0xD2C86C", VA = "0xD2C86C")]
		public BoxerSafeAreaCheck()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class SharedAIActionInfo : SharedVariable<AnimaActionInfo>
	{
		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xD2C874", Offset = "0xD2C874", VA = "0xD2C874")]
		public static implicit operator SharedAIActionInfo(AnimaActionInfo value)
		{
			return null;
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xD2C8E0", Offset = "0xD2C8E0", VA = "0xD2C8E0")]
		public SharedAIActionInfo()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class SharedBBGame : SharedVariable<BBGame>
	{
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xD2C928", Offset = "0xD2C928", VA = "0xD2C928")]
		public static implicit operator SharedBBGame(BBGame value)
		{
			return null;
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xD2C994", Offset = "0xD2C994", VA = "0xD2C994")]
		public SharedBBGame()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class SharedBoxer : SharedVariable<BoxerAI>
	{
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xD2C9DC", Offset = "0xD2C9DC", VA = "0xD2C9DC")]
		public static implicit operator SharedBoxer(BoxerAI value)
		{
			return null;
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xD2CA48", Offset = "0xD2CA48", VA = "0xD2CA48")]
		public SharedBoxer()
		{
		}
	}
}
namespace Assets.Boxing.Scripts
{
	[Token(Token = "0x20004B5")]
	public static class ActionLib
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<string> attackActions;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<string, string[]> action2Judge;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Dictionary<string, float> attackPower;

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xD2CA90", Offset = "0xD2CA90", VA = "0xD2CA90")]
		public static string GetActionRandom()
		{
			return null;
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xD2CB2C", Offset = "0xD2CB2C", VA = "0xD2CB2C")]
		public static string[] GetActionJudge(string action)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xD2CBAC", Offset = "0xD2CBAC", VA = "0xD2CBAC")]
		public static bool IsAvoidAction(string action)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B6")]
	public struct AnimaActionInfo
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimaActionType type;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool leftHand;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int actionId;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float speed;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float totalTime;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float distance;
	}
	[Token(Token = "0x20004B7")]
	public enum AnimaActionType
	{
		[Token(Token = "0x4001802")]
		Punch,
		[Token(Token = "0x4001803")]
		StrongPunch,
		[Token(Token = "0x4001804")]
		Pick,
		[Token(Token = "0x4001805")]
		Wind,
		[Token(Token = "0x4001806")]
		Shield,
		[Token(Token = "0x4001807")]
		Stick,
		[Token(Token = "0x4001808")]
		Throw,
		[Token(Token = "0x4001809")]
		Flail,
		[Token(Token = "0x400180A")]
		Walk,
		[Token(Token = "0x400180B")]
		Idle,
		[Token(Token = "0x400180C")]
		Rocket
	}
	[Token(Token = "0x20004B8")]
	public class AudioManager : SingletonMono<AudioManager>
	{
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, AudioSource> _audios;

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xD2DCA4", Offset = "0xD2DCA4", VA = "0xD2DCA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xD2E04C", Offset = "0xD2E04C", VA = "0xD2E04C")]
		public void PlayAudio(string audioSourceName, bool isLoop = false)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xD2E0E0", Offset = "0xD2E0E0", VA = "0xD2E0E0")]
		public void StopAudio(string audioSourceName)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xD2E088", Offset = "0xD2E088", VA = "0xD2E088")]
		private AudioSource GetAudioSource(string goName)
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xD2E0FC", Offset = "0xD2E0FC", VA = "0xD2E0FC")]
		public void OnGameOver()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xD2E248", Offset = "0xD2E248", VA = "0xD2E248")]
		public void GlassBreakAudio()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xD2E2D4", Offset = "0xD2E2D4", VA = "0xD2E2D4")]
		public void PassAudio()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xD2E360", Offset = "0xD2E360", VA = "0xD2E360")]
		public void TipsAudio()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xD2E3EC", Offset = "0xD2E3EC", VA = "0xD2E3EC")]
		public void FlashHitAudio()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xD2E478", Offset = "0xD2E478", VA = "0xD2E478")]
		public void SwordAudio()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xD2E504", Offset = "0xD2E504", VA = "0xD2E504")]
		public void PunchHitAudio()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xD2E590", Offset = "0xD2E590", VA = "0xD2E590")]
		public void PlayerHit()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xD2E61C", Offset = "0xD2E61C", VA = "0xD2E61C")]
		public void TictacAudio(float pitch)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xD2E6A8", Offset = "0xD2E6A8", VA = "0xD2E6A8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class AutoFadeAudio : MonoBehaviour
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 15f)]
		public float fadeTime;

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xD2E6F0", Offset = "0xD2E6F0", VA = "0xD2E6F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xD2E748", Offset = "0xD2E748", VA = "0xD2E748")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xD2E7FC", Offset = "0xD2E7FC", VA = "0xD2E7FC")]
		public AutoFadeAudio()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class BBGame : MonoBehaviour
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BBGameSM sm;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int gameMode;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Boxer> players;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoxerPlayer player;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject boxerAIPrefab;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string currStateName;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MatchGround matchGround;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform[] oppPrizePos;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform playerBornTrans;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform prizeTransform;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject bigScreen;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WinnerUI winnerUI;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BlackPanelUI blackPanelUI;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MatchingUI matchingUI;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject gameOverUI;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject deadPanelGo;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject prizeXRRigGo;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MeshDeformerScheduler deformerScheduler;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject quitUI;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BoxerHUD boxerHud;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ParticleSystem[] confettis;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<RivalPlayer> rivalPlayers;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public KcalCalculate kcalCalculate;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ObiFixedUpdater obiUpdate;

		[Token(Token = "0x170003B9")]
		public static BBGame Instance
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xD2E804", Offset = "0xD2E804", VA = "0xD2E804")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xD2E84C", Offset = "0xD2E84C", VA = "0xD2E84C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public MatchGround MatchGround
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xD2E8A4", Offset = "0xD2E8A4", VA = "0xD2E8A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000033")]
		public event Action<List<Boxer>> OnLifePlayerChange
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xD2E8AC", Offset = "0xD2E8AC", VA = "0xD2E8AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xD2E95C", Offset = "0xD2E95C", VA = "0xD2E95C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xD2EA0C", Offset = "0xD2EA0C", VA = "0xD2EA0C")]
		public Boxer[] GetOpponents(Boxer player)
		{
			return null;
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xD2EC68", Offset = "0xD2EC68", VA = "0xD2EC68", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xD2ECC0", Offset = "0xD2ECC0", VA = "0xD2ECC0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xD2F094", Offset = "0xD2F094", VA = "0xD2F094")]
		private void CreateBoxerAI(int count)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xD2F32C", Offset = "0xD2F32C", VA = "0xD2F32C")]
		public void InitOppents()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xD2F568", Offset = "0xD2F568", VA = "0xD2F568", Slot = "6")]
		protected virtual void OnStateChange(State a, State b)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xD2F5A8", Offset = "0xD2F5A8", VA = "0xD2F5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xD2F5C8", Offset = "0xD2F5C8", VA = "0xD2F5C8")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xD2F648", Offset = "0xD2F648", VA = "0xD2F648")]
		public void ChangeAIBehaviour(int index)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xD2F7C8", Offset = "0xD2F7C8", VA = "0xD2F7C8")]
		public void EnableAIBehaviour(bool b)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xD2F990", Offset = "0xD2F990", VA = "0xD2F990")]
		public void EnableHit(bool b)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xD2FAD0", Offset = "0xD2FAD0", VA = "0xD2FAD0")]
		public Boxer[] GetLivingPlayers()
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xD2FCF8", Offset = "0xD2FCF8", VA = "0xD2FCF8")]
		public static bool IsStrongPunch(HitInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xD2FD2C", Offset = "0xD2FD2C", VA = "0xD2FD2C")]
		public void EmitOnPlayerDead(List<Boxer> players)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xD2FD48", Offset = "0xD2FD48", VA = "0xD2FD48")]
		public BBGame()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public enum MatchResultType
	{
		[Token(Token = "0x400182B")]
		Win,
		[Token(Token = "0x400182C")]
		Lost,
		[Token(Token = "0x400182D")]
		Draw,
		[Token(Token = "0x400182E")]
		Timeout
	}
	[Token(Token = "0x20004BC")]
	public class BBGameNet : BBGame
	{
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xD2FD58", Offset = "0xD2FD58", VA = "0xD2FD58", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xD2FE84", Offset = "0xD2FE84", VA = "0xD2FE84")]
		public BBGameNet()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class BeginnerGuideIFSM : BeginnerGuideSM
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BeginnerGuideManagerIF gameif;

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xD2FE94", Offset = "0xD2FE94", VA = "0xD2FE94")]
		public BeginnerGuideIFSM(BeginnerGuideManagerIF game)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xD2FF24", Offset = "0xD2FF24", VA = "0xD2FF24", Slot = "4")]
		public override void InitRegester()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xD2FFB4", Offset = "0xD2FFB4", VA = "0xD2FFB4", Slot = "8")]
		public override void StartGame()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class BeginnerGuideIFStageAttack : BeginnerGuideIFState
	{
		[Token(Token = "0x20004C0")]
		[CompilerGenerated]
		private sealed class <DelayExec>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action act;

			[Token(Token = "0x170003BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C66")]
				[Address(RVA = "0xD3127C", Offset = "0xD3127C", VA = "0xD3127C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C68")]
				[Address(RVA = "0xD312C4", Offset = "0xD312C4", VA = "0xD312C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xD30728", Offset = "0xD30728", VA = "0xD30728")]
			[DebuggerHidden]
			public <DelayExec>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xD311B4", Offset = "0xD311B4", VA = "0xD311B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xD311B8", Offset = "0xD311B8", VA = "0xD311B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xD31284", Offset = "0xD31284", VA = "0xD31284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float matchTime;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xD30050", Offset = "0xD30050", VA = "0xD30050")]
		public BeginnerGuideIFStageAttack(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xD30060", Offset = "0xD30060", VA = "0xD30060", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xD30704", Offset = "0xD30704", VA = "0xD30704")]
		private void OnOpp0Dizz(bool state)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xD30680", Offset = "0xD30680", VA = "0xD30680")]
		[IteratorStateMachine(typeof(<DelayExec>d__4))]
		private IEnumerator DelayExec(float t, System.Action act)
		{
			return null;
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xD30750", Offset = "0xD30750", VA = "0xD30750", Slot = "7")]
		protected override void OnFullBlack()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xD308B8", Offset = "0xD308B8", VA = "0xD308B8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xD30B84", Offset = "0xD30B84", VA = "0xD30B84")]
		public static void IntentRostrum()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xD30DE0", Offset = "0xD30DE0", VA = "0xD30DE0")]
		public static void NextStep(bool next)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xD30DEC", Offset = "0xD30DEC", VA = "0xD30DEC", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class BeginnerGuideIFStageFinal : BeginnerGuideIFState
	{
		[Token(Token = "0x20004C2")]
		[CompilerGenerated]
		private sealed class <ShootConfettis>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ParticleSystem[] <>7__wrap1;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>7__wrap2;

			[Token(Token = "0x170003BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C77")]
				[Address(RVA = "0xD32164", Offset = "0xD32164", VA = "0xD32164", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C79")]
				[Address(RVA = "0xD321AC", Offset = "0xD321AC", VA = "0xD321AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xD31CBC", Offset = "0xD31CBC", VA = "0xD31CBC")]
			[DebuggerHidden]
			public <ShootConfettis>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xD31F90", Offset = "0xD31F90", VA = "0xD31F90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xD31F94", Offset = "0xD31F94", VA = "0xD31F94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xD3216C", Offset = "0xD3216C", VA = "0xD3216C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C3")]
		[CompilerGenerated]
		private sealed class <PressAnyKeyQuit>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeginnerGuideIFStageFinal <>4__this;

			[Token(Token = "0x170003BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7D")]
				[Address(RVA = "0xD32348", Offset = "0xD32348", VA = "0xD32348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7F")]
				[Address(RVA = "0xD32390", Offset = "0xD32390", VA = "0xD32390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xD31CE4", Offset = "0xD31CE4", VA = "0xD31CE4")]
			[DebuggerHidden]
			public <PressAnyKeyQuit>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xD321B4", Offset = "0xD321B4", VA = "0xD321B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0xD321B8", Offset = "0xD321B8", VA = "0xD321B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xD32350", Offset = "0xD32350", VA = "0xD32350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BeginnerGuideManager BGMS;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BBReportData reportData;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool menuOpen;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool Intent;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xD312CC", Offset = "0xD312CC", VA = "0xD312CC")]
		public BeginnerGuideIFStageFinal(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xD312D4", Offset = "0xD312D4", VA = "0xD312D4", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xD31CAC", Offset = "0xD31CAC", VA = "0xD31CAC")]
		private void OnTurnMenu(bool open)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xD31C18", Offset = "0xD31C18", VA = "0xD31C18")]
		private void HideBoxerPlayerRay()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xD31AE4", Offset = "0xD31AE4", VA = "0xD31AE4")]
		private void ChangeUICameraPos()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xD31CB8", Offset = "0xD31CB8", VA = "0xD31CB8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xD31A10", Offset = "0xD31A10", VA = "0xD31A10")]
		[IteratorStateMachine(typeof(<ShootConfettis>d__10))]
		private IEnumerator ShootConfettis()
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xD31A70", Offset = "0xD31A70", VA = "0xD31A70")]
		[IteratorStateMachine(typeof(<PressAnyKeyQuit>d__11))]
		private IEnumerator PressAnyKeyQuit()
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xD31D0C", Offset = "0xD31D0C", VA = "0xD31D0C")]
		public void NextStep(bool next)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xD31DA4", Offset = "0xD31DA4", VA = "0xD31DA4")]
		public void NoUseCallback(bool b)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xD31DA8", Offset = "0xD31DA8", VA = "0xD31DA8", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class BeginnerGuideIFStageMove : BeginnerGuideIFState
	{
		[Token(Token = "0x20004C6")]
		[CompilerGenerated]
		private sealed class <IntentMainScene>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C95")]
				[Address(RVA = "0xD33350", Offset = "0xD33350", VA = "0xD33350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C97")]
				[Address(RVA = "0xD33398", Offset = "0xD33398", VA = "0xD33398", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xD32EDC", Offset = "0xD32EDC", VA = "0xD32EDC")]
			[DebuggerHidden]
			public <IntentMainScene>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xD331EC", Offset = "0xD331EC", VA = "0xD331EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xD331F0", Offset = "0xD331F0", VA = "0xD331F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xD33358", Offset = "0xD33358", VA = "0xD33358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C7")]
		[CompilerGenerated]
		private sealed class <DelayExec>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400184D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action act;

			[Token(Token = "0x170003C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C9B")]
				[Address(RVA = "0xD33468", Offset = "0xD33468", VA = "0xD33468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C9D")]
				[Address(RVA = "0xD334B0", Offset = "0xD334B0", VA = "0xD334B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xD32FF4", Offset = "0xD32FF4", VA = "0xD32FF4")]
			[DebuggerHidden]
			public <DelayExec>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xD333A0", Offset = "0xD333A0", VA = "0xD333A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xD333A4", Offset = "0xD333A4", VA = "0xD333A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xD33470", Offset = "0xD33470", VA = "0xD33470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool m_AnimationState;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int currentWalkPos;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool guideLook;

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xD32398", Offset = "0xD32398", VA = "0xD32398")]
		public BeginnerGuideIFStageMove(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xD323A0", Offset = "0xD323A0", VA = "0xD323A0", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xD3270C", Offset = "0xD3270C", VA = "0xD3270C")]
		public void ShowWalkPosition()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xD328D8", Offset = "0xD328D8", VA = "0xD328D8")]
		public bool CheckGetPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xD32AC8", Offset = "0xD32AC8", VA = "0xD32AC8")]
		public void HideWalkPosition()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xD32C00", Offset = "0xD32C00", VA = "0xD32C00", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xD32D64", Offset = "0xD32D64", VA = "0xD32D64")]
		public static void Complete(bool b)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xD32D70", Offset = "0xD32D70", VA = "0xD32D70")]
		public static void IntentScene()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xD32E7C", Offset = "0xD32E7C", VA = "0xD32E7C")]
		[IteratorStateMachine(typeof(<IntentMainScene>d__11))]
		private static IEnumerator IntentMainScene()
		{
			return null;
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xD32F04", Offset = "0xD32F04", VA = "0xD32F04")]
		private bool NpcDistanceNear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xD3295C", Offset = "0xD3295C", VA = "0xD3295C")]
		private bool GetCirclePosition(Transform circleTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xD32854", Offset = "0xD32854", VA = "0xD32854")]
		[IteratorStateMachine(typeof(<DelayExec>d__14))]
		private IEnumerator DelayExec(float t, System.Action act)
		{
			return null;
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xD3301C", Offset = "0xD3301C", VA = "0xD3301C", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class BeginnerGuideIFState : BeginnerGuideState
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool GameOver;

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xD30058", Offset = "0xD30058", VA = "0xD30058")]
		public BeginnerGuideIFState(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xD304EC", Offset = "0xD304EC", VA = "0xD304EC", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xD30F24", Offset = "0xD30F24", VA = "0xD30F24", Slot = "6")]
		public override void Exit()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xD334D0", Offset = "0xD334D0", VA = "0xD334D0", Slot = "8")]
		public override void OnPlayerDrop()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xD30A64", Offset = "0xD30A64", VA = "0xD30A64", Slot = "5")]
		public override void Run()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class BeginnerGuideSM : StateMachine
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BeginnerGuideManager game;

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xD2FEE4", Offset = "0xD2FEE4", VA = "0xD2FEE4")]
		public BeginnerGuideSM(BeginnerGuideManager game)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xD3360C", Offset = "0xD3360C", VA = "0xD3360C", Slot = "4")]
		public override void InitRegester()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xD3370C", Offset = "0xD3370C", VA = "0xD3370C", Slot = "6")]
		public override void OnStateFinish(State finishState, params object[] para)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xD33710", Offset = "0xD33710", VA = "0xD33710", Slot = "8")]
		public virtual void StartGame()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class BeginnerGuideStageAttack : BeginnerGuideState
	{
		[Token(Token = "0x20004CC")]
		[CompilerGenerated]
		private sealed class <DelayExec>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x400185A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action act;

			[Token(Token = "0x170003C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB9")]
				[Address(RVA = "0xD34F14", Offset = "0xD34F14", VA = "0xD34F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBB")]
				[Address(RVA = "0xD34F5C", Offset = "0xD34F5C", VA = "0xD34F5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xD34578", Offset = "0xD34578", VA = "0xD34578")]
			[DebuggerHidden]
			public <DelayExec>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xD34E4C", Offset = "0xD34E4C", VA = "0xD34E4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xD34E50", Offset = "0xD34E50", VA = "0xD34E50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xD34F1C", Offset = "0xD34F1C", VA = "0xD34F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int currNpcIndex;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xD33758", Offset = "0xD33758", VA = "0xD33758")]
		public BeginnerGuideStageAttack(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xD33760", Offset = "0xD33760", VA = "0xD33760", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xD34114", Offset = "0xD34114", VA = "0xD34114")]
		private void OnOpp0Dizz(bool state)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xD344F4", Offset = "0xD344F4", VA = "0xD344F4")]
		[IteratorStateMachine(typeof(<DelayExec>d__4))]
		private IEnumerator DelayExec(float t, System.Action act)
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD345A0", Offset = "0xD345A0", VA = "0xD345A0")]
		private HitInfo OnGloveHit(HitInfo a)
		{
			return default(HitInfo);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD3460C", Offset = "0xD3460C", VA = "0xD3460C", Slot = "7")]
		protected override void OnFullBlack()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xD348DC", Offset = "0xD348DC", VA = "0xD348DC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xD34B48", Offset = "0xD34B48", VA = "0xD34B48")]
		public void NextStep(bool next)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD34B4C", Offset = "0xD34B4C", VA = "0xD34B4C", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class BeginnerGuideStageFinal : BeginnerGuideState
	{
		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BeginnerGuideManager BGMS;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool Intent;

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xD34F64", Offset = "0xD34F64", VA = "0xD34F64")]
		public BeginnerGuideStageFinal(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xD34F6C", Offset = "0xD34F6C", VA = "0xD34F6C", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD3515C", Offset = "0xD3515C", VA = "0xD3515C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD352EC", Offset = "0xD352EC", VA = "0xD352EC")]
		public void NextStep(bool next)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xD3546C", Offset = "0xD3546C", VA = "0xD3546C")]
		public void NoUseCallback(bool b)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD35470", Offset = "0xD35470", VA = "0xD35470", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class BeginnerGuideStageFirst : BeginnerGuideState
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Timer timer;

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD35568", Offset = "0xD35568", VA = "0xD35568")]
		public BeginnerGuideStageFirst(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD35570", Offset = "0xD35570", VA = "0xD35570", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xD356F4", Offset = "0xD356F4", VA = "0xD356F4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xD357A8", Offset = "0xD357A8", VA = "0xD357A8", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class BeginnerGuideStageMove : BeginnerGuideState
	{
		[Token(Token = "0x20004D0")]
		[CompilerGenerated]
		private sealed class <ShowWalkPosition>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeginnerGuideStageMove <>4__this;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform[] <>7__wrap1;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170003C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD4")]
				[Address(RVA = "0xD36430", Offset = "0xD36430", VA = "0xD36430", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD6")]
				[Address(RVA = "0xD36478", Offset = "0xD36478", VA = "0xD36478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xD35A44", Offset = "0xD35A44", VA = "0xD35A44")]
			[DebuggerHidden]
			public <ShowWalkPosition>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xD36278", Offset = "0xD36278", VA = "0xD36278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xD3627C", Offset = "0xD3627C", VA = "0xD3627C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xD36438", Offset = "0xD36438", VA = "0xD36438", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D1")]
		[CompilerGenerated]
		private sealed class <PlayAudioClip>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeginnerGuideManager.TutorialAudio TA;

			[Token(Token = "0x170003C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDA")]
				[Address(RVA = "0xD36540", Offset = "0xD36540", VA = "0xD36540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDC")]
				[Address(RVA = "0xD36588", Offset = "0xD36588", VA = "0xD36588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xD36088", Offset = "0xD36088", VA = "0xD36088")]
			[DebuggerHidden]
			public <PlayAudioClip>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xD36480", Offset = "0xD36480", VA = "0xD36480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xD36484", Offset = "0xD36484", VA = "0xD36484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xD36548", Offset = "0xD36548", VA = "0xD36548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D2")]
		[CompilerGenerated]
		private sealed class <DelayExec>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x400186B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action act;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE0")]
				[Address(RVA = "0xD36658", Offset = "0xD36658", VA = "0xD36658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE2")]
				[Address(RVA = "0xD366A0", Offset = "0xD366A0", VA = "0xD366A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xD361C8", Offset = "0xD361C8", VA = "0xD361C8")]
			[DebuggerHidden]
			public <DelayExec>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xD36590", Offset = "0xD36590", VA = "0xD36590", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xD36594", Offset = "0xD36594", VA = "0xD36594", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xD36660", Offset = "0xD36660", VA = "0xD36660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool IsShowComplete;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool guideLook;

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xD357B0", Offset = "0xD357B0", VA = "0xD357B0")]
		public BeginnerGuideStageMove(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xD357B8", Offset = "0xD357B8", VA = "0xD357B8", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xD359D0", Offset = "0xD359D0", VA = "0xD359D0")]
		[IteratorStateMachine(typeof(<ShowWalkPosition>d__3))]
		private IEnumerator ShowWalkPosition()
		{
			return null;
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xD35A6C", Offset = "0xD35A6C", VA = "0xD35A6C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xD36020", Offset = "0xD36020", VA = "0xD36020")]
		[IteratorStateMachine(typeof(<PlayAudioClip>d__6))]
		private IEnumerator PlayAudioClip(BeginnerGuideManager.TutorialAudio TA)
		{
			return null;
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xD35E0C", Offset = "0xD35E0C", VA = "0xD35E0C")]
		private int RemainCircle()
		{
			return default(int);
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xD35E98", Offset = "0xD35E98", VA = "0xD35E98")]
		private int Guide_Postion()
		{
			return default(int);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xD35D0C", Offset = "0xD35D0C", VA = "0xD35D0C")]
		private bool GetCirclePosition(Transform circleTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xD360B0", Offset = "0xD360B0", VA = "0xD360B0", Slot = "6")]
		public override void Exit()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xD36144", Offset = "0xD36144", VA = "0xD36144")]
		[IteratorStateMachine(typeof(<DelayExec>d__11))]
		private IEnumerator DelayExec(float t, System.Action act)
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xD361F0", Offset = "0xD361F0", VA = "0xD361F0", Slot = "7")]
		protected override void OnFullBlack()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class BeginnerGuideStageSuite : BeginnerGuideState
	{
		[Token(Token = "0x20004D4")]
		[CompilerGenerated]
		private sealed class <FadeOut>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400186C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400186D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeginnerGuideStageSuite <>4__this;

			[Token(Token = "0x400186F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CanvasGroup <a>5__2;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CED")]
				[Address(RVA = "0xD36E20", Offset = "0xD36E20", VA = "0xD36E20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0xD36E68", Offset = "0xD36E68", VA = "0xD36E68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0xD36B00", Offset = "0xD36B00", VA = "0xD36B00")]
			[DebuggerHidden]
			public <FadeOut>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xD36B34", Offset = "0xD36B34", VA = "0xD36B34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xD36B38", Offset = "0xD36B38", VA = "0xD36B38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xD36E28", Offset = "0xD36E28", VA = "0xD36E28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xD366A8", Offset = "0xD366A8", VA = "0xD366A8")]
		public BeginnerGuideStageSuite(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xD366B0", Offset = "0xD366B0", VA = "0xD366B0", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xD368AC", Offset = "0xD368AC", VA = "0xD368AC")]
		private void OnContinue()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xD36A34", Offset = "0xD36A34", VA = "0xD36A34")]
		public static void Complete(bool next)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xD369C0", Offset = "0xD369C0", VA = "0xD369C0")]
		[IteratorStateMachine(typeof(<FadeOut>d__4))]
		private IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xD36B28", Offset = "0xD36B28", VA = "0xD36B28", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xD36B2C", Offset = "0xD36B2C", VA = "0xD36B2C", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class BeginnerGuideStageSupplyBox : BeginnerGuideState
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool oppDeath;

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xD36E70", Offset = "0xD36E70", VA = "0xD36E70")]
		public BeginnerGuideStageSupplyBox(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xD36E78", Offset = "0xD36E78", VA = "0xD36E78", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xD372BC", Offset = "0xD372BC", VA = "0xD372BC")]
		private void OnDest(SupplyBox box)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xD373AC", Offset = "0xD373AC", VA = "0xD373AC")]
		private void OnGrounded(SupplyBox box)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xD373B0", Offset = "0xD373B0", VA = "0xD373B0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xD375CC", Offset = "0xD375CC", VA = "0xD375CC")]
		public void NextStep(bool next)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xD375D0", Offset = "0xD375D0", VA = "0xD375D0", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class BeginnerGuideState : State
	{
		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static int Tutorial_ID;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool drop;

		[Token(Token = "0x170003CF")]
		public static BeginnerGuideManager Game
		{
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xD304F4", Offset = "0xD304F4", VA = "0xD304F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		public static BeginnerGuideManagerIF GameIF
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xD30594", Offset = "0xD30594", VA = "0xD30594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xD334B8", Offset = "0xD334B8", VA = "0xD334B8")]
		public BeginnerGuideState(BeginnerGuideSM sm)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xD334C0", Offset = "0xD334C0", VA = "0xD334C0", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xD334C8", Offset = "0xD334C8", VA = "0xD334C8", Slot = "6")]
		public override void Exit()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xD30850", Offset = "0xD30850", VA = "0xD30850", Slot = "7")]
		protected virtual void OnFullBlack()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xD33590", Offset = "0xD33590", VA = "0xD33590", Slot = "8")]
		public virtual void OnPlayerDrop()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xD34A40", Offset = "0xD34A40", VA = "0xD34A40", Slot = "5")]
		public override void Run()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class Biology : MonoBehaviour
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HP;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxHP;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public System.Action OnDamage;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public System.Action OnDead;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public System.Action OnRelive;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ISetFloat bloodBar;

		[Token(Token = "0x170003D1")]
		public float HpPercent
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xD3777C", Offset = "0xD3777C", VA = "0xD3777C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xD37788", Offset = "0xD37788", VA = "0xD37788")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public bool IsDead
		{
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xD377AC", Offset = "0xD377AC", VA = "0xD377AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xD377BC", Offset = "0xD377BC", VA = "0xD377BC", Slot = "4")]
		protected virtual void Dead()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xD377D8", Offset = "0xD377D8", VA = "0xD377D8", Slot = "5")]
		protected virtual void Relive()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xD377F4", Offset = "0xD377F4", VA = "0xD377F4", Slot = "6")]
		public virtual void Damage(float hp)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xD3792C", Offset = "0xD3792C", VA = "0xD3792C", Slot = "7")]
		public virtual void MaxHp()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xD3793C", Offset = "0xD3793C", VA = "0xD3793C")]
		public Biology()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class Boxer : MonoBehaviour
	{
		[Token(Token = "0x20004DA")]
		[CompilerGenerated]
		private sealed class <DelayCheckGround>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400189A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Boxer <>4__this;

			[Token(Token = "0x400189B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 vo;

			[Token(Token = "0x170003D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2C")]
				[Address(RVA = "0xD383F8", Offset = "0xD383F8", VA = "0xD383F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2E")]
				[Address(RVA = "0xD38440", Offset = "0xD38440", VA = "0xD38440", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xD37F2C", Offset = "0xD37F2C", VA = "0xD37F2C")]
			[DebuggerHidden]
			public <DelayCheckGround>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xD382E8", Offset = "0xD382E8", VA = "0xD382E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xD382EC", Offset = "0xD382EC", VA = "0xD382EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xD38400", Offset = "0xD38400", VA = "0xD38400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BBGame game;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rigid;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoxerAnimationController animationController;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoxerFace boxerFace;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WeaponManager leftWeaponManager;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WeaponManager rightWeaponManager;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FaceMeshControl faceMeshControl;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BoxerHightFit hightFit;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BoxerAudioManager audioManager;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BuffManager buffManager;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BoxerCountStat countStat;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Boxer[] opponents;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform lockTarget;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Boxer lastHitOpp;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float moveSpeed;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isDeath;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private int teamId;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int damageCount;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected bool checkGround;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Func<HitInfo, HitInfo> OnGloveHit;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action<HitInfo> OnBeHit;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action<HitInfo> OnBeHitNonOwner;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action<bool> OnGroundedChange;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action<bool> OnDizziness;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public System.Action OnDeath;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action<SupplyItemInfo> OnGetItem;

		[Token(Token = "0x170003D3")]
		public virtual Transform LockTarget
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0xD3794C", Offset = "0xD3794C", VA = "0xD3794C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xD37944", Offset = "0xD37944", VA = "0xD37944", Slot = "4")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public bool IgnoreHit
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xD37954", Offset = "0xD37954", VA = "0xD37954")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0xD3795C", Offset = "0xD3795C", VA = "0xD3795C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		public bool AlwayLightPunch
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xD37968", Offset = "0xD37968", VA = "0xD37968")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xD37970", Offset = "0xD37970", VA = "0xD37970")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public int TeamId
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xD3797C", Offset = "0xD3797C", VA = "0xD3797C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xD37984", Offset = "0xD37984", VA = "0xD37984")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public bool IsDizzed
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xD25FA0", Offset = "0xD25FA0", VA = "0xD25FA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xD25414", Offset = "0xD25414", VA = "0xD25414")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public float CurrentHeadHeight
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xD3798C", Offset = "0xD3798C", VA = "0xD3798C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xD379A8", Offset = "0xD379A8", VA = "0xD379A8", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xD37AB8", Offset = "0xD37AB8", VA = "0xD37AB8", Slot = "7")]
		protected virtual void OnDizz(bool state)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xD37B60", Offset = "0xD37B60", VA = "0xD37B60", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xD37C48", Offset = "0xD37C48", VA = "0xD37C48")]
		public HitInfo OnHit(HitInfo info)
		{
			return default(HitInfo);
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xD37CB4", Offset = "0xD37CB4", VA = "0xD37CB4")]
		public void BeHit(HitInfo info)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xD37E24", Offset = "0xD37E24", VA = "0xD37E24", Slot = "9")]
		protected virtual void BeStrongHit(HitInfo info)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xD37E94", Offset = "0xD37E94", VA = "0xD37E94")]
		[IteratorStateMachine(typeof(<DelayCheckGround>d__51))]
		private IEnumerator DelayCheckGround(Vector3 vo)
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xD37B04", Offset = "0xD37B04", VA = "0xD37B04")]
		public void Damage(int count = 1)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xD37F54", Offset = "0xD37F54", VA = "0xD37F54")]
		private int GetFaceLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xD2BC58", Offset = "0xD2BC58", VA = "0xD2BC58")]
		public bool HasBuff()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xD2BFA4", Offset = "0xD2BFA4", VA = "0xD2BFA4")]
		public bool HasGodBuff()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xD29810", Offset = "0xD29810", VA = "0xD29810")]
		public Assets.Scripts.Interact.Hand CompareWeaponCost()
		{
			return default(Assets.Scripts.Interact.Hand);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xD2B574", Offset = "0xD2B574", VA = "0xD2B574")]
		public bool HaveWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xD2B534", Offset = "0xD2B534", VA = "0xD2B534")]
		public bool HandsHaveWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xD296FC", Offset = "0xD296FC", VA = "0xD296FC")]
		public AnimaActionType GetPriorityAttackType()
		{
			return default(AnimaActionType);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xD37FE4", Offset = "0xD37FE4", VA = "0xD37FE4")]
		public void SetSupplyItem(SupplyItemInfo info)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xD381CC", Offset = "0xD381CC", VA = "0xD381CC", Slot = "10")]
		public virtual void SetDeath()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xD38274", Offset = "0xD38274", VA = "0xD38274", Slot = "11")]
		protected virtual void OnCollisionStay(Collision other)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xD382E0", Offset = "0xD382E0", VA = "0xD382E0")]
		public Boxer()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class BoxerAI : Boxer
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public NavMeshAgent navMeshAgent;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public BehaviorTree behaviorTree;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SmoothLookTransform lookTransform;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ExternalBehavior[] externalBehaviours;

		[Token(Token = "0x170003DB")]
		public override Transform LockTarget
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xD38448", Offset = "0xD38448", VA = "0xD38448", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xD38450", Offset = "0xD38450", VA = "0xD38450", Slot = "4")]
			set
			{
			}
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xD2F484", Offset = "0xD2F484", VA = "0xD2F484")]
		public void SetBehaviourIndex(int index)
		{
		}

		[Token(Token = "0x6001D32")]
		public void SetBehaviourPara<T, T2>(string paraName, T2 val) where T : SharedVariable<T2>, new()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xD2F94C", Offset = "0xD2F94C", VA = "0xD2F94C")]
		public void EnableBehaviour(bool ena)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xD384F4", Offset = "0xD384F4", VA = "0xD384F4")]
		public void ReStart()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xD38510", Offset = "0xD38510", VA = "0xD38510", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xD38610", Offset = "0xD38610", VA = "0xD38610")]
		private void GroundChange(bool ground)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xD29C08", Offset = "0xD29C08", VA = "0xD29C08")]
		public void SetNaviStopDis(float dis)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xD2A0D4", Offset = "0xD2A0D4", VA = "0xD2A0D4")]
		public bool IsArrive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xD29C24", Offset = "0xD29C24", VA = "0xD29C24")]
		public void SetNaviPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xD38630", Offset = "0xD38630", VA = "0xD38630", Slot = "10")]
		public override void SetDeath()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xD386D4", Offset = "0xD386D4", VA = "0xD386D4")]
		public BoxerAI()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class BoxerDummy : Boxer
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SyncBoxerDummy boxerReceiver;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xD386DC", Offset = "0xD386DC", VA = "0xD386DC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xD386E0", Offset = "0xD386E0", VA = "0xD386E0", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xD386E4", Offset = "0xD386E4", VA = "0xD386E4")]
		public BoxerDummy()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class BoxerFace : MonoBehaviour
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Boxer owner;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer faceMeshRender;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<HitInfo> OnBeHit;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] hitFxPrefabs;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hitMutiple;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BoxCollider meshCollider;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BoxFaceDizziness dizz;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BoxerFaceConfig config;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected MeshDeformer deformer;

		[Token(Token = "0x170003DC")]
		protected Transform faceCenter
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xD386EC", Offset = "0xD386EC", VA = "0xD386EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xD386F4", Offset = "0xD386F4", VA = "0xD386F4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xD38784", Offset = "0xD38784", VA = "0xD38784", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xD387B0", Offset = "0xD387B0", VA = "0xD387B0", Slot = "6")]
		public virtual void Hit(HitInfo info)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xD389A8", Offset = "0xD389A8", VA = "0xD389A8")]
		private void HitEffect(HitInfo info)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xD38B98", Offset = "0xD38B98", VA = "0xD38B98")]
		protected GameObject GetFxByHitType(HitAttribute type)
		{
			return null;
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xD38BEC", Offset = "0xD38BEC", VA = "0xD38BEC")]
		public BoxerFace()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class BoxerFaceDummy : BoxerFace
	{
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xD38BFC", Offset = "0xD38BFC", VA = "0xD38BFC", Slot = "6")]
		public override void Hit(HitInfo info)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xD38EF8", Offset = "0xD38EF8", VA = "0xD38EF8")]
		public BoxerFaceDummy()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class BoxerHUD : MonoBehaviour
	{
		[Token(Token = "0x20004E0")]
		[CompilerGenerated]
		private sealed class <DelayActive>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x40018B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool ena;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D50")]
				[Address(RVA = "0xD39468", Offset = "0xD39468", VA = "0xD39468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D52")]
				[Address(RVA = "0xD394B0", Offset = "0xD394B0", VA = "0xD394B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xD39028", Offset = "0xD39028", VA = "0xD39028")]
			[DebuggerHidden]
			public <DelayActive>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xD393A4", Offset = "0xD393A4", VA = "0xD393A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xD393A8", Offset = "0xD393A8", VA = "0xD393A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xD39470", Offset = "0xD39470", VA = "0xD39470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject readyPanel;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject resultPanel;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject battlePanel;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prePairPanle;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip winAudio;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip loseAudio;

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xD38F08", Offset = "0xD38F08", VA = "0xD38F08")]
		public void SetPrePairPanel(bool ena)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xD38F28", Offset = "0xD38F28", VA = "0xD38F28")]
		public void ShowReadyUI()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xD38F90", Offset = "0xD38F90", VA = "0xD38F90")]
		[IteratorStateMachine(typeof(<DelayActive>d__8))]
		private IEnumerator DelayActive(GameObject go, bool ena, float t)
		{
			return null;
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xD39050", Offset = "0xD39050", VA = "0xD39050")]
		public void ShowResultUI(BBReportData reportData)
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xD3939C", Offset = "0xD3939C", VA = "0xD3939C")]
		public BoxerHUD()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class BoxerPlayer : Boxer
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BoxerPlayer instance;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private VRRigDriver vrRigDriver;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private TrackedPoseDriver hmdDriver;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private XRBaseController leftHandController;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private XRBaseController rightHandController;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private XRRayInteractor leftHandInteractor;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private XRRayInteractor rightHandInteractor;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool lastRayState;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool IsIron;

		[Token(Token = "0x170003DF")]
		public static BoxerPlayer Instance
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xD394B8", Offset = "0xD394B8", VA = "0xD394B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public bool EnableUIRay
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xD39500", Offset = "0xD39500", VA = "0xD39500")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xD36868", Offset = "0xD36868", VA = "0xD36868")]
			set
			{
			}
		}

		[Token(Token = "0x170003E1")]
		public bool EnableNativeVRTraceModule
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xD39558", Offset = "0xD39558", VA = "0xD39558")]
			set
			{
			}
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xD3951C", Offset = "0xD3951C", VA = "0xD3951C")]
		public void ShowHUDRay()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xD39550", Offset = "0xD39550", VA = "0xD39550")]
		public void HideHUDRay()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xD39634", Offset = "0xD39634", VA = "0xD39634", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xD3969C", Offset = "0xD3969C", VA = "0xD3969C")]
		private void GrabReferences()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xD39890", Offset = "0xD39890", VA = "0xD39890", Slot = "7")]
		protected override void OnDizz(bool state)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xD398E8", Offset = "0xD398E8", VA = "0xD398E8", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xD3994C", Offset = "0xD3994C", VA = "0xD3994C")]
		public BoxerPlayer()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class BoxingLoad : MonoBehaviour
	{
		[Token(Token = "0x20004E3")]
		[CompilerGenerated]
		private sealed class <LoadSceneProgress>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BoxingLoad <>4__this;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string scene;

			[Token(Token = "0x170003E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D67")]
				[Address(RVA = "0xD39D9C", Offset = "0xD39D9C", VA = "0xD39D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D69")]
				[Address(RVA = "0xD39DE4", Offset = "0xD39DE4", VA = "0xD39DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xD39B78", Offset = "0xD39B78", VA = "0xD39B78")]
			[DebuggerHidden]
			public <LoadSceneProgress>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xD39BA8", Offset = "0xD39BA8", VA = "0xD39BA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xD39BAC", Offset = "0xD39BAC", VA = "0xD39BAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xD39DA4", Offset = "0xD39DA4", VA = "0xD39DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image barImage;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text loadText;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject loadPanel;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation asyncOper;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _loadPercent;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _loadPercentLerp;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLoading;

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xD39954", Offset = "0xD39954", VA = "0xD39954")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xD39958", Offset = "0xD39958", VA = "0xD39958")]
		public void StartLoad()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xD39A58", Offset = "0xD39A58", VA = "0xD39A58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xD39AC0", Offset = "0xD39AC0", VA = "0xD39AC0")]
		private void SetBarValue(float t)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xD399C8", Offset = "0xD399C8", VA = "0xD399C8")]
		[IteratorStateMachine(typeof(<LoadSceneProgress>d__11))]
		private IEnumerator LoadSceneProgress(string scene)
		{
			return null;
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xD39BA0", Offset = "0xD39BA0", VA = "0xD39BA0")]
		public BoxingLoad()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class BuffManager : MonoBehaviour
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Boxer owner;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Type, BuffEffect> buffEffects;

		[Token(Token = "0x14000034")]
		public event Action<BuffEffect> OnBuffEffectAdd
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xD39DEC", Offset = "0xD39DEC", VA = "0xD39DEC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xD39E9C", Offset = "0xD39E9C", VA = "0xD39E9C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<BuffEffect> OnBuffEffectEnd
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xD39F4C", Offset = "0xD39F4C", VA = "0xD39F4C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xD39FFC", Offset = "0xD39FFC", VA = "0xD39FFC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xD3A0AC", Offset = "0xD3A0AC", VA = "0xD3A0AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D6F")]
		public void AddBuff<T>() where T : BuffEffect
		{
		}

		[Token(Token = "0x6001D70")]
		public void RemoveBuff<T>() where T : BuffEffect
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xD3A104", Offset = "0xD3A104", VA = "0xD3A104")]
		private void ChildBuffDestory(BuffEffect buff)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xD37F88", Offset = "0xD37F88", VA = "0xD37F88")]
		public bool HasBuff()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xD2B744", Offset = "0xD2B744", VA = "0xD2B744")]
		public bool HasGodBuff()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D74")]
		public bool HaveBuff<T>() where T : BuffEffect
		{
			return default(bool);
		}

		[Token(Token = "0x6001D75")]
		private bool CompatibleCheck<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xD3A228", Offset = "0xD3A228", VA = "0xD3A228")]
		public BuffManager()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class BBGameSM : StateMachine
	{
		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BBGame game;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xD2F00C", Offset = "0xD2F00C", VA = "0xD2F00C")]
		public BBGameSM(BBGame game)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xD3A2B0", Offset = "0xD3A2B0", VA = "0xD3A2B0", Slot = "4")]
		public override void InitRegester()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xD3A418", Offset = "0xD3A418", VA = "0xD3A418", Slot = "6")]
		public override void OnStateFinish(State finishState, params object[] para)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xD2F04C", Offset = "0xD2F04C", VA = "0xD2F04C")]
		public void StartGame()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class BBGameStageGameOver : BBGameState
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Timer timer;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int PlayerRank;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BBReportData reportData;

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xD3A41C", Offset = "0xD3A41C", VA = "0xD3A41C")]
		public BBGameStageGameOver(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xD3A4A4", Offset = "0xD3A4A4", VA = "0xD3A4A4", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xD3AB44", Offset = "0xD3AB44", VA = "0xD3AB44")]
		public static void OnServerUserDetailReturnedAndReadyToExit(UserDetail userDetail)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xD3A884", Offset = "0xD3A884", VA = "0xD3A884")]
		public BattleEndInfo Endinfo(int Result)
		{
			return null;
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xD3ABAC", Offset = "0xD3ABAC", VA = "0xD3ABAC")]
		private void OnFullBlack()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xD3AD04", Offset = "0xD3AD04", VA = "0xD3AD04", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xD3ADE0", Offset = "0xD3ADE0", VA = "0xD3ADE0", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class BBGameStageGroundUp : BBGameState
	{
		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float upYHight;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float upTime;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float originHight;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float time;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform ground;

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xD3AE1C", Offset = "0xD3AE1C", VA = "0xD3AE1C")]
		public BBGameStageGroundUp(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xD3AE30", Offset = "0xD3AE30", VA = "0xD3AE30", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xD3AED8", Offset = "0xD3AED8", VA = "0xD3AED8")]
		private void OnFullBlack()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xD3B1C8", Offset = "0xD3B1C8", VA = "0xD3B1C8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xD3B350", Offset = "0xD3B350", VA = "0xD3B350")]
		private void SetPlayerPos(float y)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xD3B53C", Offset = "0xD3B53C", VA = "0xD3B53C", Slot = "6")]
		public override void Exit()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xD3B324", Offset = "0xD3B324", VA = "0xD3B324")]
		private float SmoothCurve(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004E8")]
	public class BBGameStageMatching : BBGameState
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float matchTotalTime;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float matchTime;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Boxer> lifePlayers;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private KcalCalculate kcalCalculate;

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xD3B544", Offset = "0xD3B544", VA = "0xD3B544")]
		public BBGameStageMatching(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xD3B5EC", Offset = "0xD3B5EC", VA = "0xD3B5EC", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xD3B9D4", Offset = "0xD3B9D4", VA = "0xD3B9D4")]
		private void OnTouchDeadPanel(Boxer boxer)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xD3BCD8", Offset = "0xD3BCD8", VA = "0xD3BCD8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xD3BF18", Offset = "0xD3BF18", VA = "0xD3BF18")]
		private void CheckPlayerDeath()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xD3BFF8", Offset = "0xD3BFF8", VA = "0xD3BFF8", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class BBGameStagePrize : BBGameState
	{
		[Token(Token = "0x20004EA")]
		[CompilerGenerated]
		private sealed class <ShootConfettis>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BBGameStagePrize <>4__this;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ParticleSystem[] <>7__wrap1;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170003E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D9A")]
				[Address(RVA = "0xD3CCBC", Offset = "0xD3CCBC", VA = "0xD3CCBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D9C")]
				[Address(RVA = "0xD3CD04", Offset = "0xD3CD04", VA = "0xD3CD04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xD3C968", Offset = "0xD3C968", VA = "0xD3C968")]
			[DebuggerHidden]
			public <ShootConfettis>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xD3CADC", Offset = "0xD3CADC", VA = "0xD3CADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xD3CAE0", Offset = "0xD3CAE0", VA = "0xD3CAE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xD3CCC4", Offset = "0xD3CCC4", VA = "0xD3CCC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EB")]
		[CompilerGenerated]
		private sealed class <PressAnyKeyQuit>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BBGameStagePrize <>4__this;

			[Token(Token = "0x170003E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA0")]
				[Address(RVA = "0xD3CE8C", Offset = "0xD3CE8C", VA = "0xD3CE8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA2")]
				[Address(RVA = "0xD3CED4", Offset = "0xD3CED4", VA = "0xD3CED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xD3C990", Offset = "0xD3C990", VA = "0xD3C990")]
			[DebuggerHidden]
			public <PressAnyKeyQuit>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xD3CD0C", Offset = "0xD3CD0C", VA = "0xD3CD0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xD3CD10", Offset = "0xD3CD10", VA = "0xD3CD10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xD3CE94", Offset = "0xD3CE94", VA = "0xD3CE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool menuOpen;

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xD3C06C", Offset = "0xD3C06C", VA = "0xD3C06C")]
		public BBGameStagePrize(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xD3C074", Offset = "0xD3C074", VA = "0xD3C074", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xD3C95C", Offset = "0xD3C95C", VA = "0xD3C95C")]
		private void OnTurnMenu(bool open)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xD3C8C8", Offset = "0xD3C8C8", VA = "0xD3C8C8")]
		private void HideBoxerPlayerRay()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xD3C794", Offset = "0xD3C794", VA = "0xD3C794")]
		private void ChangeUICameraPos()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xD3C6AC", Offset = "0xD3C6AC", VA = "0xD3C6AC")]
		[IteratorStateMachine(typeof(<ShootConfettis>d__6))]
		private IEnumerator ShootConfettis()
		{
			return null;
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xD3C720", Offset = "0xD3C720", VA = "0xD3C720")]
		[IteratorStateMachine(typeof(<PressAnyKeyQuit>d__7))]
		private IEnumerator PressAnyKeyQuit()
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xD3C9B8", Offset = "0xD3C9B8", VA = "0xD3C9B8", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class BBGameStageStart : BBGameState
	{
		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xD3CEDC", Offset = "0xD3CEDC", VA = "0xD3CEDC")]
		public BBGameStageStart(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xD3CEE4", Offset = "0xD3CEE4", VA = "0xD3CEE4", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xD3CF60", Offset = "0xD3CF60", VA = "0xD3CF60")]
		private void PlaceMainPlayer()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xD3CFF4", Offset = "0xD3CFF4", VA = "0xD3CFF4", Slot = "5")]
		public override void Run()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class BBGameStageStartMatch : BBGameState
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float time;

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xD3D080", Offset = "0xD3D080", VA = "0xD3D080")]
		public BBGameStageStartMatch(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xD3D088", Offset = "0xD3D088", VA = "0xD3D088", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xD3D0E4", Offset = "0xD3D0E4", VA = "0xD3D0E4", Slot = "5")]
		public override void Run()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class BBGameStageSuite : BBGameState
	{
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xD3D1A8", Offset = "0xD3D1A8", VA = "0xD3D1A8")]
		public BBGameStageSuite(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xD3D1B0", Offset = "0xD3D1B0", VA = "0xD3D1B0", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xD3D1B4", Offset = "0xD3D1B4", VA = "0xD3D1B4", Slot = "6")]
		public override void Exit()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xD3D1BC", Offset = "0xD3D1BC", VA = "0xD3D1BC")]
		private void GameStart()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class BBGameStageWaitMatch : BBGameState
	{
		[Token(Token = "0x20004F0")]
		[CompilerGenerated]
		private sealed class <Matching>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BBGameStageWaitMatch <>4__this;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <userName>5__2;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <showIndex>5__3;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <fastJoin>5__4;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<RivalPlayer>.Enumerator <>7__wrap4;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private RivalPlayer <player>5__6;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB7")]
				[Address(RVA = "0xD3DD9C", Offset = "0xD3DD9C", VA = "0xD3DD9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB9")]
				[Address(RVA = "0xD3DDE4", Offset = "0xD3DDE4", VA = "0xD3DDE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xD3D384", Offset = "0xD3D384", VA = "0xD3D384")]
			[DebuggerHidden]
			public <Matching>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xD3D6F0", Offset = "0xD3D6F0", VA = "0xD3D6F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0xD3D70C", Offset = "0xD3D70C", VA = "0xD3D70C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xD3DD4C", Offset = "0xD3DD4C", VA = "0xD3DD4C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xD3DDA4", Offset = "0xD3DDA4", VA = "0xD3DDA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int playersIndex;

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xD3D230", Offset = "0xD3D230", VA = "0xD3D230")]
		public BBGameStageWaitMatch(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xD3D240", Offset = "0xD3D240", VA = "0xD3D240", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xD3D310", Offset = "0xD3D310", VA = "0xD3D310")]
		[IteratorStateMachine(typeof(<Matching>d__3))]
		private IEnumerator Matching()
		{
			return null;
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xD3D3AC", Offset = "0xD3D3AC", VA = "0xD3D3AC")]
		private void AddAIBoxer()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xD3D60C", Offset = "0xD3D60C", VA = "0xD3D60C", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class BBGameStageWalkPos : BBGameState
	{
		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xD3DDEC", Offset = "0xD3DDEC", VA = "0xD3DDEC")]
		public BBGameStageWalkPos(BBGameSM sm)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xD3DDF4", Offset = "0xD3DDF4", VA = "0xD3DDF4", Slot = "4")]
		public override void Enter(params object[] para)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD3DE50", Offset = "0xD3DE50", VA = "0xD3DE50", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xD3DE54", Offset = "0xD3DE54", VA = "0xD3DE54", Slot = "6")]
		public override void Exit()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class BBGameState : State
	{
		[Token(Token = "0x170003EA")]
		public BBGame Game
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xD3B934", Offset = "0xD3B934", VA = "0xD3B934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xD3B5E4", Offset = "0xD3B5E4", VA = "0xD3B5E4")]
		public BBGameState(BBGameSM sm)
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class BBGameNetSM : StateMachine
	{
		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BBGameNet game;

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xD3DE5C", Offset = "0xD3DE5C", VA = "0xD3DE5C")]
		public BBGameNetSM(BBGameNet game)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xD3DE9C", Offset = "0xD3DE9C", VA = "0xD3DE9C", Slot = "4")]
		public override void InitRegester()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xD3E004", Offset = "0xD3E004", VA = "0xD3E004", Slot = "6")]
		public override void OnStateFinish(State finishState, params object[] para)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xD3E008", Offset = "0xD3E008", VA = "0xD3E008")]
		public void StartGame()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class Hit : MonoBehaviour
	{
		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Boxer owner;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected PositionTrackTool posTrace;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<HitInfo, HitInfo> OnHit;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float disableTime;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float disableStartTime;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float minSpeedThreshold;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SphereCollider sphereCollider;

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xD3E050", Offset = "0xD3E050", VA = "0xD3E050", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xD3E0E0", Offset = "0xD3E0E0", VA = "0xD3E0E0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xD3E4D0", Offset = "0xD3E4D0", VA = "0xD3E4D0", Slot = "5")]
		protected virtual HitInfo GetHitInfo()
		{
			return default(HitInfo);
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xD3E56C", Offset = "0xD3E56C", VA = "0xD3E56C", Slot = "6")]
		protected virtual Vector3 GetHitPosition(Vector3 lastVelo)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xD3E730", Offset = "0xD3E730", VA = "0xD3E730")]
		public Hit()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class HitActionChecker : Hit
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ActionChecker actionChecker;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Assets.Scripts.Interact.Hand useHand;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int lightPunchConst;

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xD3E74C", Offset = "0xD3E74C", VA = "0xD3E74C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xD3E82C", Offset = "0xD3E82C", VA = "0xD3E82C", Slot = "5")]
		protected override HitInfo GetHitInfo()
		{
			return default(HitInfo);
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xD3E9C8", Offset = "0xD3E9C8", VA = "0xD3E9C8")]
		public HitActionChecker()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class PositionBind : MonoBehaviour
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xD3E9E4", Offset = "0xD3E9E4", VA = "0xD3E9E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xD3EA88", Offset = "0xD3EA88", VA = "0xD3EA88")]
		public PositionBind()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class SingletonMono<T> : MonoBehaviour where T : SingletonMono<T>
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T Ins;

		[Token(Token = "0x6001DCE")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DCF")]
		public SingletonMono()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class Singletonx<T> : MonoBehaviour where T : Singletonx<T>
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x170003EB")]
		public static T Ins
		{
			[Token(Token = "0x6001DD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD1")]
		public Singletonx()
		{
		}
	}
}
namespace Assets.Boxing.Scripts.UI
{
	[Token(Token = "0x20004F9")]
	public class ActionTipsUI : UIComponent
	{
		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circleImg;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform actionContainer;

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xD3EA90", Offset = "0xD3EA90", VA = "0xD3EA90", Slot = "4")]
		public override void SetVisiable(bool v)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xD3EAC0", Offset = "0xD3EAC0", VA = "0xD3EAC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xD3EC14", Offset = "0xD3EC14", VA = "0xD3EC14")]
		public void SetAction(GameObject go)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xD3ECA8", Offset = "0xD3ECA8", VA = "0xD3ECA8")]
		public ActionTipsUI()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class AutoFadeOut : UIComponent
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup group;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startDelay;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeDuration;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoRun;

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xD3ECD4", Offset = "0xD3ECD4", VA = "0xD3ECD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xD3ECE4", Offset = "0xD3ECE4", VA = "0xD3ECE4")]
		public void Play()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xD3EE7C", Offset = "0xD3EE7C", VA = "0xD3EE7C")]
		public AutoFadeOut()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class BlackMask : UIComponent
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup cg;

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xD3EEB0", Offset = "0xD3EEB0", VA = "0xD3EEB0", Slot = "4")]
		public override void SetVisiable(bool v)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xD3EF98", Offset = "0xD3EF98", VA = "0xD3EF98")]
		public BlackMask()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class BloodBarUI : UIComponent
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xD3EFD8", Offset = "0xD3EFD8", VA = "0xD3EFD8")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xD3EFFC", Offset = "0xD3EFFC", VA = "0xD3EFFC")]
		public BloodBarUI()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class CircleCountdownUI : UIComponent
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circleImage;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text numText;

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xD3F004", Offset = "0xD3F004", VA = "0xD3F004")]
		public void SetValue(int value)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xD3F04C", Offset = "0xD3F04C", VA = "0xD3F04C")]
		public void SetCircle(float v)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xD3F068", Offset = "0xD3F068", VA = "0xD3F068")]
		public CircleCountdownUI()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class CircleTipsUI : UIComponent
	{
		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup group;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image image;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image frameImage;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera uiCam;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform tracerPoint;

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xD3F070", Offset = "0xD3F070", VA = "0xD3F070")]
		public void ShowCircle(Transform tracer)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xD3F37C", Offset = "0xD3F37C", VA = "0xD3F37C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xD3F474", Offset = "0xD3F474", VA = "0xD3F474")]
		public CircleTipsUI()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class CountdownUI : UIComponent
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image fillImg;

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xD3F538", Offset = "0xD3F538", VA = "0xD3F538")]
		public void SetValue(float v)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xD3F554", Offset = "0xD3F554", VA = "0xD3F554")]
		public CountdownUI()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class DamageUI : UIComponent
	{
		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup group;

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xD3F55C", Offset = "0xD3F55C", VA = "0xD3F55C")]
		public void ShowDamage()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xD3F5F4", Offset = "0xD3F5F4", VA = "0xD3F5F4")]
		public DamageUI()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class DelayDisable : MonoBehaviour
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float t;

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xD3F618", Offset = "0xD3F618", VA = "0xD3F618")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xD3F624", Offset = "0xD3F624", VA = "0xD3F624")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xD3F680", Offset = "0xD3F680", VA = "0xD3F680")]
		public DelayDisable()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class FaceControlUI : UIComponent
	{
		[Token(Token = "0x2000503")]
		[CompilerGenerated]
		private sealed class <TempChangeFace>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FaceControlUI <>4__this;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture face;

			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float time;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFF")]
				[Address(RVA = "0xD3FEC8", Offset = "0xD3FEC8", VA = "0xD3FEC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E01")]
				[Address(RVA = "0xD3FF10", Offset = "0xD3FF10", VA = "0xD3FF10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xD3FDB4", Offset = "0xD3FDB4", VA = "0xD3FDB4")]
			[DebuggerHidden]
			public <TempChangeFace>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xD3FDE4", Offset = "0xD3FDE4", VA = "0xD3FDE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xD3FDE8", Offset = "0xD3FDE8", VA = "0xD3FDE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xD3FED0", Offset = "0xD3FED0", VA = "0xD3FED0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage faceImage;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage sideFaceImage;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage backFaceImage;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage topFaceImage;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RawImage bottomFaceImage;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExpressionGroup group;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ExpressionGroup[] groups;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform inkFrame;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D[] inkEffectTextures;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject inkPrefab;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture normalFace;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xD3F688", Offset = "0xD3F688", VA = "0xD3F688")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xD3F6E4", Offset = "0xD3F6E4", VA = "0xD3F6E4")]
		public void SetGroup(ExpressionGroup group)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xD3F700", Offset = "0xD3F700", VA = "0xD3F700")]
		private void InitGroup()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xD3F9D8", Offset = "0xD3F9D8", VA = "0xD3F9D8")]
		private void SetOtherFace()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xD3F90C", Offset = "0xD3F90C", VA = "0xD3F90C")]
		public void SetNormalFace(int damageLevel)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xD3FAEC", Offset = "0xD3FAEC", VA = "0xD3FAEC")]
		public void SetTempFace(string name, float time)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xD3FC08", Offset = "0xD3FC08", VA = "0xD3FC08")]
		public void SetInkEffect()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xD3FB68", Offset = "0xD3FB68", VA = "0xD3FB68")]
		[IteratorStateMachine(typeof(<TempChangeFace>d__18))]
		private IEnumerator TempChangeFace(Texture face, float time)
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xD3FDDC", Offset = "0xD3FDDC", VA = "0xD3FDDC")]
		public FaceControlUI()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class FaceMeshControl : UIComponent
	{
		[Token(Token = "0x2000505")]
		[CompilerGenerated]
		private sealed class <TempChangeFace>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FaceMeshControl <>4__this;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture face;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float time;

			[Token(Token = "0x170003EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0B")]
				[Address(RVA = "0xD40274", Offset = "0xD40274", VA = "0xD40274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0D")]
				[Address(RVA = "0xD402BC", Offset = "0xD402BC", VA = "0xD402BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xD40160", Offset = "0xD40160", VA = "0xD40160")]
			[DebuggerHidden]
			public <TempChangeFace>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xD40190", Offset = "0xD40190", VA = "0xD40190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xD40194", Offset = "0xD40194", VA = "0xD40194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xD4027C", Offset = "0xD4027C", VA = "0xD4027C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExpressionGroup group;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture faceHD;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material material;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture normalFace;

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xD3FF18", Offset = "0xD3FF18", VA = "0xD3FF18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xD3FF50", Offset = "0xD3FF50", VA = "0xD3FF50")]
		private void InitGroup()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xD3FF78", Offset = "0xD3FF78", VA = "0xD3FF78")]
		public void SetNormalFace(int damageLevel)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xD40044", Offset = "0xD40044", VA = "0xD40044")]
		public void SetTempFace(string name, float time)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xD400C0", Offset = "0xD400C0", VA = "0xD400C0")]
		[IteratorStateMachine(typeof(<TempChangeFace>d__9))]
		private IEnumerator TempChangeFace(Texture face, float time)
		{
			return null;
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xD40188", Offset = "0xD40188", VA = "0xD40188")]
		public FaceMeshControl()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class GameUI : SingletonMono<GameUI>
	{
		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UIComponent> components;

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xD402C4", Offset = "0xD402C4", VA = "0xD402C4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E0F")]
		public T GetModule<T>() where T : UIComponent
		{
			return null;
		}

		[Token(Token = "0x6001E10")]
		public T GetModuleByName<T>(string objName) where T : UIComponent
		{
			return null;
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xD40384", Offset = "0xD40384", VA = "0xD40384")]
		public GameUI()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class HeadBloodBarUI : UIComponent, ISetFloat
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider[] bloodBar;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage headImage;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text userNameText;

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xD403CC", Offset = "0xD403CC", VA = "0xD403CC")]
		public void SetBlood(float v)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xD404EC", Offset = "0xD404EC", VA = "0xD404EC")]
		public void WiggEffect()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xD405B8", Offset = "0xD405B8", VA = "0xD405B8")]
		public void SetImage(Texture tex)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xD405D4", Offset = "0xD405D4", VA = "0xD405D4")]
		public void SetUserName(string str)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xD40610", Offset = "0xD40610", VA = "0xD40610", Slot = "5")]
		public void SetFloat(float v)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xD40614", Offset = "0xD40614", VA = "0xD40614")]
		public HeadBloodBarUI()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class HurryUpPanel : UIComponent
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text maxText;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text currText;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image circleImg;

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xD4061C", Offset = "0xD4061C", VA = "0xD4061C")]
		public void SetTimeCountdown(float v)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xD40638", Offset = "0xD40638", VA = "0xD40638")]
		public void SetMax(int n)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xD40680", Offset = "0xD40680", VA = "0xD40680")]
		public void SetCurr(int n)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xD406C8", Offset = "0xD406C8", VA = "0xD406C8")]
		public HurryUpPanel()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class ScanEffect : MonoBehaviour
	{
		[Token(Token = "0x200050A")]
		[CompilerGenerated]
		private sealed class <Effect>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScanEffect <>4__this;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E25")]
				[Address(RVA = "0xD40970", Offset = "0xD40970", VA = "0xD40970", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E27")]
				[Address(RVA = "0xD409B8", Offset = "0xD409B8", VA = "0xD409B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xD40764", Offset = "0xD40764", VA = "0xD40764")]
			[DebuggerHidden]
			public <Effect>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xD40804", Offset = "0xD40804", VA = "0xD40804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xD40808", Offset = "0xD40808", VA = "0xD40808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xD40978", Offset = "0xD40978", VA = "0xD40978", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image image;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xD406D0", Offset = "0xD406D0", VA = "0xD406D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xD406F0", Offset = "0xD406F0", VA = "0xD406F0")]
		[IteratorStateMachine(typeof(<Effect>d__2))]
		private IEnumerator Effect()
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xD4078C", Offset = "0xD4078C", VA = "0xD4078C")]
		private void SetImageAlaph(float a)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xD407DC", Offset = "0xD407DC", VA = "0xD407DC")]
		public ScanEffect()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class SliderUI : UIComponent
	{
		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider sl;

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xD409C0", Offset = "0xD409C0", VA = "0xD409C0")]
		public void SetValue(float v)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xD409E4", Offset = "0xD409E4", VA = "0xD409E4")]
		public SliderUI()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class TweenTools
	{
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private sealed class <TweenAlphaDown>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<float> action;

			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startDelay;

			[Token(Token = "0x4001938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float totalTime;

			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public System.Action end;

			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <al>5__2;

			[Token(Token = "0x170003F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E32")]
				[Address(RVA = "0xD40CD0", Offset = "0xD40CD0", VA = "0xD40CD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E34")]
				[Address(RVA = "0xD40D18", Offset = "0xD40D18", VA = "0xD40D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xD409EC", Offset = "0xD409EC", VA = "0xD409EC")]
			[DebuggerHidden]
			public <TweenAlphaDown>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xD40B64", Offset = "0xD40B64", VA = "0xD40B64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xD40B68", Offset = "0xD40B68", VA = "0xD40B68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xD40CD8", Offset = "0xD40CD8", VA = "0xD40CD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050E")]
		[CompilerGenerated]
		private sealed class <TweenColor>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color from;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Color> action;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float totalTime;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Color To;

			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Color <co>5__2;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <t>5__3;

			[Token(Token = "0x170003F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E38")]
				[Address(RVA = "0xD40E70", Offset = "0xD40E70", VA = "0xD40E70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0xD40EB8", Offset = "0xD40EB8", VA = "0xD40EB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xD40AE4", Offset = "0xD40AE4", VA = "0xD40AE4")]
			[DebuggerHidden]
			public <TweenColor>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xD40D20", Offset = "0xD40D20", VA = "0xD40D20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xD40D24", Offset = "0xD40D24", VA = "0xD40D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xD40E78", Offset = "0xD40E78", VA = "0xD40E78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050F")]
		[CompilerGenerated]
		private sealed class <TweenVector3>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 from;

			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Vector3> action;

			[Token(Token = "0x4001947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float totalTime;

			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 To;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <co>5__2;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <t>5__3;

			[Token(Token = "0x170003F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3E")]
				[Address(RVA = "0xD41014", Offset = "0xD41014", VA = "0xD41014", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E40")]
				[Address(RVA = "0xD4105C", Offset = "0xD4105C", VA = "0xD4105C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xD40B0C", Offset = "0xD40B0C", VA = "0xD40B0C")]
			[DebuggerHidden]
			public <TweenVector3>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xD40EC0", Offset = "0xD40EC0", VA = "0xD40EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xD40EC4", Offset = "0xD40EC4", VA = "0xD40EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xD4101C", Offset = "0xD4101C", VA = "0xD4101C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000510")]
		[CompilerGenerated]
		private sealed class <TweenFloat>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float from;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<float> action;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float totalTime;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float To;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public System.Action end;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__2;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0xD41180", Offset = "0xD41180", VA = "0xD41180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xD411C8", Offset = "0xD411C8", VA = "0xD411C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xD40B34", Offset = "0xD40B34", VA = "0xD40B34")]
			[DebuggerHidden]
			public <TweenFloat>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xD41064", Offset = "0xD41064", VA = "0xD41064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xD41068", Offset = "0xD41068", VA = "0xD41068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xD41188", Offset = "0xD41188", VA = "0xD41188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xD3EDD4", Offset = "0xD3EDD4", VA = "0xD3EDD4")]
		[IteratorStateMachine(typeof(<TweenAlphaDown>d__0))]
		public static IEnumerator TweenAlphaDown(float totalTime, Action<float> action, float startDelay = 0f, [Optional] System.Action end)
		{
			return null;
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xD40A14", Offset = "0xD40A14", VA = "0xD40A14")]
		[IteratorStateMachine(typeof(<TweenColor>d__1))]
		public static IEnumerator TweenColor(float totalTime, Color from, Color To, Action<Color> action)
		{
			return null;
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xD3F2BC", Offset = "0xD3F2BC", VA = "0xD3F2BC")]
		[IteratorStateMachine(typeof(<TweenVector3>d__2))]
		public static IEnumerator TweenVector3(float totalTime, Vector3 from, Vector3 To, Action<Vector3> action)
		{
			return null;
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xD3EB60", Offset = "0xD3EB60", VA = "0xD3EB60")]
		[IteratorStateMachine(typeof(<TweenFloat>d__3))]
		public static IEnumerator TweenFloat(float totalTime, float from, float To, Action<float> action, [Optional] System.Action end)
		{
			return null;
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xD40B5C", Offset = "0xD40B5C", VA = "0xD40B5C")]
		public TweenTools()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class UIComponent : MonoBehaviour
	{
		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xD3EA98", Offset = "0xD3EA98", VA = "0xD3EA98", Slot = "4")]
		public virtual void SetVisiable(bool v)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xD3ECB0", Offset = "0xD3ECB0", VA = "0xD3ECB0")]
		public UIComponent()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class WiggleEffect : UIComponent
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float freq;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float range;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float d;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float f;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 originPos;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 dir;

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xD411D0", Offset = "0xD411D0", VA = "0xD411D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xD41200", Offset = "0xD41200", VA = "0xD41200")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xD412DC", Offset = "0xD412DC", VA = "0xD412DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xD40594", Offset = "0xD40594", VA = "0xD40594")]
		public void Play()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xD412E8", Offset = "0xD412E8", VA = "0xD412E8")]
		public WiggleEffect()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class ZoomEffect : MonoBehaviour
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 10f)]
		public float range;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 100f)]
		public float speed;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oriScale;

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xD41304", Offset = "0xD41304", VA = "0xD41304")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xD41334", Offset = "0xD41334", VA = "0xD41334")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xD413AC", Offset = "0xD413AC", VA = "0xD413AC")]
		public ZoomEffect()
		{
		}
	}
}
namespace Assets.Boxing.Scripts.Scriptable
{
	[Token(Token = "0x2000514")]
	public abstract class AudioPlayList<TKey> : ScriptableObject
	{
		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Dictionary<TKey, AudioClip[]> audioClips;

		[Token(Token = "0x6001E51")]
		public void Init()
		{
		}

		[Token(Token = "0x6001E52")]
		protected abstract void InitPlayList();

		[Token(Token = "0x6001E53")]
		public abstract AudioClip GetAudioClipWithIndex(TKey audioName, int index = 0);

		[Token(Token = "0x6001E54")]
		public abstract AudioClip GetAudioClipWithRandom(TKey audioName);

		[Token(Token = "0x6001E55")]
		protected AudioPlayList()
		{
		}
	}
	[Token(Token = "0x2000515")]
	[CreateAssetMenu(menuName = "FitBoxing/BGMAudioPlayList")]
	public class BgmAudioPlayList : AudioPlayList<BBAudio>
	{
		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] lobby;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] fight;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] victory;

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xD413C0", Offset = "0xD413C0", VA = "0xD413C0", Slot = "4")]
		protected override void InitPlayList()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xD4146C", Offset = "0xD4146C", VA = "0xD4146C", Slot = "5")]
		public override AudioClip GetAudioClipWithIndex(BBAudio audioName, int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xD414F0", Offset = "0xD414F0", VA = "0xD414F0", Slot = "6")]
		public override AudioClip GetAudioClipWithRandom(BBAudio audioName)
		{
			return null;
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xD41598", Offset = "0xD41598", VA = "0xD41598")]
		public BgmAudioPlayList()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[CreateAssetMenu(menuName = "FitBoxing/BoxerAudioPlayList")]
	public class BoxerAudioPlayList : AudioPlayList<BBAudio>
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] hitMildAudios;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] hitHardAudios;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] itemGet;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] itemPlunger;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip[] itemMirror;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] itemFlail;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip[] invisableCloak;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] shieldHitAudios;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip[] enterDizz;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip[] getShield;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip[] getPlunger;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] getMirror;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip[] getFlail;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip[] getRocket;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip[] getGodStar;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip[] getInvisibleCloak;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip[] superShieldHitAudios;

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xD415E0", Offset = "0xD415E0", VA = "0xD415E0", Slot = "4")]
		protected override void InitPlayList()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xD417DC", Offset = "0xD417DC", VA = "0xD417DC", Slot = "5")]
		public override AudioClip GetAudioClipWithIndex(BBAudio audioName, int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xD41860", Offset = "0xD41860", VA = "0xD41860", Slot = "6")]
		public override AudioClip GetAudioClipWithRandom(BBAudio audioName)
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xD41908", Offset = "0xD41908", VA = "0xD41908")]
		public BoxerAudioPlayList()
		{
		}
	}
	[Token(Token = "0x2000517")]
	[CreateAssetMenu(menuName = "FitBoxing/ExpressionGroup")]
	public class ExpressionGroup : ScriptableObject
	{
		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture[] idle;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] angry;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture[] dismay;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture[] tire;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture[] damage;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture[] dead;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture[] idle_side;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture side;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture back;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture top;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture bottom;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, Texture[]> textureDict;

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xD3F730", Offset = "0xD3F730", VA = "0xD3F730")]
		public void CreateIndex()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xD3FA58", Offset = "0xD3FA58", VA = "0xD3FA58")]
		public Texture[] GetTextureGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xD41950", Offset = "0xD41950", VA = "0xD41950")]
		public ExpressionGroup()
		{
		}
	}
}
namespace Assets.Boxing.Scripts.Interface
{
	[Token(Token = "0x2000518")]
	public interface ISetFloat
	{
		[Token(Token = "0x6001E61")]
		void SetFloat(float v);
	}
}
namespace Exploder
{
	[Token(Token = "0x2000519")]
	public class Array<T>
	{
		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] array;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x170003FA")]
		public int Count
		{
			[Token(Token = "0x6001E64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FB")]
		public T this[int key]
		{
			[Token(Token = "0x6001E65")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001E62")]
		public Array(int size)
		{
		}

		[Token(Token = "0x6001E63")]
		public void Initialize(int newSize)
		{
		}

		[Token(Token = "0x6001E66")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E67")]
		public void Add(T data)
		{
		}

		[Token(Token = "0x6001E68")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x200051A")]
	internal class ArrayDictionary<T>
	{
		[Token(Token = "0x200051B")]
		private struct DicItem
		{
			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;
		}

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Size;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DicItem[] dictionary;

		[Token(Token = "0x170003FC")]
		public T this[int key]
		{
			[Token(Token = "0x6001E6B")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001E6C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E69")]
		public ArrayDictionary(int size)
		{
		}

		[Token(Token = "0x6001E6A")]
		public bool ContainsKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6D")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E6E")]
		public void Add(int key, T data)
		{
		}

		[Token(Token = "0x6001E6F")]
		public void Remove(int key)
		{
		}

		[Token(Token = "0x6001E70")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		public bool TryGetValue(int key, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E72")]
		public T GetFirstValue()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200051C")]
	internal class BakeSkinManager
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject parent;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GameObject> bakedObjects;

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xD41958", Offset = "0xD41958", VA = "0xD41958")]
		public BakeSkinManager(Core core)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xD41AE0", Offset = "0xD41AE0", VA = "0xD41AE0")]
		public GameObject CreateBakeObject(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xD41C00", Offset = "0xD41C00", VA = "0xD41C00")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class Contour
	{
		[Token(Token = "0x200051E")]
		private struct MidPoint
		{
			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexId;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int idNext;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int idPrev;
		}

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Dictionary<int, int>> contour;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArrayDictionary<MidPoint> midPoints;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LSHash lsHash;

		[Token(Token = "0x170003FD")]
		public int MidPointsCount
		{
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xD421F0", Offset = "0xD421F0", VA = "0xD421F0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xD421F8", Offset = "0xD421F8", VA = "0xD421F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xD41D38", Offset = "0xD41D38", VA = "0xD41D38")]
		public Contour(int trianglesNum)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xD41D64", Offset = "0xD41D64", VA = "0xD41D64")]
		public void AllocateBuffers(int trianglesNum)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xD42200", Offset = "0xD42200", VA = "0xD42200")]
		public void AddTriangle(int triangleID, int id0, int id1, Vector3 v0, Vector3 v1)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xD4249C", Offset = "0xD4249C", VA = "0xD4249C")]
		public bool FindContours()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200051F")]
	internal class Core : Singleton<Core>
	{
		[NonSerialized]
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderParams parameters;

		[NonSerialized]
		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderQueue queue;

		[NonSerialized]
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stopwatch explosionWatch;

		[NonSerialized]
		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Stopwatch frameWatch;

		[NonSerialized]
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HashSet<MeshObject> meshSet;

		[NonSerialized]
		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<int, int> targetFragments;

		[NonSerialized]
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshObject> postList;

		[NonSerialized]
		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Fragment> pool;

		[NonSerialized]
		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CrackManager crackManager;

		[NonSerialized]
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int processingFrames;

		[NonSerialized]
		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int poolIdx;

		[NonSerialized]
		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool splitMeshIslands;

		[NonSerialized]
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BakeSkinManager bakeSkinManager;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ExploderTask[] tasks;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TaskType currTaskType;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool initialized;

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xD42814", Offset = "0xD42814", VA = "0xD42814")]
		public void Initialize(ExploderObject exploder)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xD4309C", Offset = "0xD4309C", VA = "0xD4309C")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] obj)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xD43190", Offset = "0xD43190", VA = "0xD43190")]
		public void ExplodeCracked(GameObject obj, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xD4359C", Offset = "0xD4359C", VA = "0xD4359C")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xD4383C", Offset = "0xD4383C", VA = "0xD4383C")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xD438AC", Offset = "0xD438AC", VA = "0xD438AC")]
		public void StartExplosionFromQueue(ExploderParams p)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xD43BF4", Offset = "0xD43BF4", VA = "0xD43BF4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xD43CE4", Offset = "0xD43CE4", VA = "0xD43CE4", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xD42F4C", Offset = "0xD42F4C", VA = "0xD42F4C")]
		private void PreAllocateBuffers()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xD43A88", Offset = "0xD43A88", VA = "0xD43A88")]
		private bool RunTask(TaskType taskType, float budget = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xD43A4C", Offset = "0xD43A4C", VA = "0xD43A4C")]
		private void InitTask(TaskType taskType)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xD43AC4", Offset = "0xD43AC4", VA = "0xD43AC4")]
		private TaskType NextTask(TaskType taskType)
		{
			return default(TaskType);
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xD43D84", Offset = "0xD43D84", VA = "0xD43D84")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000520")]
	internal class CrackedObject
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Fragment> pool;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch watch;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Quaternion initRot;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 initPos;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly GameObject originalObject;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExploderParams parameters;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly FractureGrid fractureGrid;

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xD43DCC", Offset = "0xD43DCC", VA = "0xD43DCC")]
		public CrackedObject(GameObject originalObject, ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xD43EF8", Offset = "0xD43EF8", VA = "0xD43EF8")]
		public void CalculateFractureGrid()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xD43F78", Offset = "0xD43F78", VA = "0xD43F78")]
		public long Explode()
		{
			return default(long);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xD4448C", Offset = "0xD4448C", VA = "0xD4448C")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000521")]
	internal class CrackManager
	{
		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<GameObject, CrackedObject> crackedObjects;

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xD42E20", Offset = "0xD42E20", VA = "0xD42E20")]
		public CrackManager(Core core)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xD447A0", Offset = "0xD447A0", VA = "0xD447A0")]
		public CrackedObject Create(GameObject originalObject, ExploderParams parameters)
		{
			return null;
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xD43254", Offset = "0xD43254", VA = "0xD43254")]
		public long Explode(GameObject gameObject)
		{
			return default(long);
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xD436C8", Offset = "0xD436C8", VA = "0xD436C8")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xD433FC", Offset = "0xD433FC", VA = "0xD433FC")]
		public long ExplodeAll()
		{
			return default(long);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xD43854", Offset = "0xD43854", VA = "0xD43854")]
		public bool IsCracked(GameObject gameObject)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000522")]
	internal class CuttingPlane
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random random;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Plane plane;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Core core;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] rectAxis;

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xD44840", Offset = "0xD44840", VA = "0xD44840")]
		public CuttingPlane(Core core)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xD44A0C", Offset = "0xD44A0C", VA = "0xD44A0C")]
		private Plane GetRandomPlane(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xD44BD0", Offset = "0xD44BD0", VA = "0xD44BD0")]
		private Plane GetRectangularRegularPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xD44CF4", Offset = "0xD44CF4", VA = "0xD44CF4")]
		private Plane GetRectangularRandom(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xD44DEC", Offset = "0xD44DEC", VA = "0xD44DEC")]
		public Plane GetPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}
	}
	[Token(Token = "0x2000523")]
	public class ExploderParams
	{
		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 ForceVector;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CubeRadius;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 HitPosition;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ShotDir;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Force;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float FrameBudget;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Radius;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BulletSize;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int id;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int TargetFragments;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int FragmentPoolSize;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject.ThreadOptions ThreadOptions;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ExploderObject.OnExplosion Callback;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ExploderObject.CuttingStyleOption CuttingStyle;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] Targets;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject ExploderGameObject;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool UseCubeRadius;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool DontUseTag;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool UseForceVector;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool ExplodeSelf;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool HideSelf;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		public bool SplitMeshIslands;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		public bool Use2DCollision;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool DisableRadiusScan;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool DisableTriangulation;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool Crack;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool processing;

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xD42CB4", Offset = "0xD42CB4", VA = "0xD42CB4")]
		public ExploderParams(ExploderObject exploder)
		{
		}
	}
	[Token(Token = "0x2000524")]
	internal class ExploderQueue
	{
		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<ExploderParams> queue;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Core core;

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xD42EA8", Offset = "0xD42EA8", VA = "0xD42EA8")]
		public ExploderQueue(Core core)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xD430B8", Offset = "0xD430B8", VA = "0xD430B8")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] target)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xD44F04", Offset = "0xD44F04", VA = "0xD44F04")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xD43B68", Offset = "0xD43B68", VA = "0xD43B68")]
		public void OnExplosionFinished(int id, long ellapsedMS)
		{
		}
	}
	[Token(Token = "0x2000525")]
	public struct ExploderTransform
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xD44FB4", Offset = "0xD44FB4", VA = "0xD44FB4")]
		public ExploderTransform(Transform unityTransform)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xD4502C", Offset = "0xD4502C", VA = "0xD4502C")]
		public Vector3 InverseTransformDirection(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xD45078", Offset = "0xD45078", VA = "0xD45078")]
		public Vector3 InverseTransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xD450FC", Offset = "0xD450FC", VA = "0xD450FC")]
		public Vector3 TransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000526")]
	internal class FractureGrid
	{
		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xD43EF0", Offset = "0xD43EF0", VA = "0xD43EF0")]
		public FractureGrid(CrackedObject obj)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xD43F10", Offset = "0xD43F10", VA = "0xD43F10")]
		public void CreateGrid()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class LSHash
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] buckets;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float bucketSize2;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int count;

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xD420B8", Offset = "0xD420B8", VA = "0xD420B8")]
		public LSHash(float bucketSize, int allocSize)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xD4209C", Offset = "0xD4209C", VA = "0xD4209C")]
		public int Capacity()
		{
			return default(int);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xD42144", Offset = "0xD42144", VA = "0xD42144")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xD45198", Offset = "0xD45198", VA = "0xD45198")]
		public int Hash(Vector3 p)
		{
			return default(int);
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xD42440", Offset = "0xD42440", VA = "0xD42440")]
		public void Hash(Vector3 p0, Vector3 p1, out int hash0, out int hash1)
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class ExploderMesh
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] triangles;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 centroid;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 min;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 max;

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xD45260", Offset = "0xD45260", VA = "0xD45260")]
		public ExploderMesh()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xD45268", Offset = "0xD45268", VA = "0xD45268")]
		public ExploderMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xD453B8", Offset = "0xD453B8", VA = "0xD453B8")]
		public static void CalculateCentroid(List<Vector3> vertices, ref Vector3 ctr, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xD45624", Offset = "0xD45624", VA = "0xD45624")]
		public Mesh ToUnityMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x2000529")]
	public class MeshCutter
	{
		[Token(Token = "0x200052A")]
		private struct Triangle
		{
			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] ids;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] pos;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normal;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uvs;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] colors;
		}

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int>[] triangles;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3>[] vertices;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3>[] normals;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2>[] uvs;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector4>[] tangents;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Color32>[] vertexColors;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> cutTris;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triCache;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] centroid;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triCounter;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Array<int> polygonIndicesArray;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Contour contour;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<long, int>[] cutVertCache;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, int>[] cornerVertCache;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int contourBufferSize;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color crossSectionVertexColour;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector4 crossSectionUV;

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xD456E4", Offset = "0xD456E4", VA = "0xD456E4")]
		public void Init(int trianglesNum, int verticesNum)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xD4571C", Offset = "0xD4571C", VA = "0xD4571C")]
		private void AllocateBuffers(int trianglesNum, int verticesNum, bool useMeshTangents, bool useVertexColors)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xD46260", Offset = "0xD46260", VA = "0xD46260")]
		private void AllocateContours(int cutTrianglesNum)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xD4674C", Offset = "0xD4674C", VA = "0xD4674C")]
		public float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes, Color crossSectionVertexColor, Vector4 crossUV)
		{
			return default(float);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xD46768", Offset = "0xD46768", VA = "0xD46768")]
		private float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes)
		{
			return default(float);
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xD4D034", Offset = "0xD4D034", VA = "0xD4D034")]
		private int AddIntersectionPoint(Vector3 pos, Triangle tri, int edge0, int edge1, Dictionary<long, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors32, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xD4D530", Offset = "0xD4D530", VA = "0xD4D530")]
		private int AddTrianglePoint(Vector3 pos, Vector3 normal, Vector2 uv, Vector4 tangent, Color32 color, int idx, int[] triCache, Dictionary<int, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xD4D8CC", Offset = "0xD4D8CC", VA = "0xD4D8CC")]
		private void Triangulate(List<Dictionary<int, int>> contours, Plane plane, List<Vector3>[] vertices, List<Vector3>[] normals, List<Vector2>[] uvs, List<Vector4>[] tangents, List<Color32>[] colors, List<int>[] triangles, bool uvCutMesh, bool useTangents, bool useColors, bool useNormals)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xD4F5B8", Offset = "0xD4F5B8", VA = "0xD4F5B8")]
		public MeshCutter()
		{
		}
	}
	[Token(Token = "0x200052B")]
	internal struct MeshObject
	{
		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExploderMesh mesh;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderTransform transform;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform parent;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion rotation;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 localScale;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject original;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExploderOption option;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject skinnedOriginal;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bakeObject;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float distanceRatio;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int id;
	}
	[Token(Token = "0x200052C")]
	public static class MeshUtils
	{
		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xD4F3F4", Offset = "0xD4F3F4", VA = "0xD4F3F4")]
		public static Vector3 ComputeBarycentricCoordinates(Vector3 a, Vector3 b, Vector3 c, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EB7")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xD4F5C0", Offset = "0xD4F5C0", VA = "0xD4F5C0")]
		public static void CenterPivot(Vector3[] vertices, Vector3 centroid)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xD4F620", Offset = "0xD4F620", VA = "0xD4F620")]
		public static List<ExploderMesh> IsolateMeshIslands(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xD50DDC", Offset = "0xD50DDC", VA = "0xD50DDC")]
		public static void GeneratePolygonCollider(PolygonCollider2D collider, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class Plane
	{
		[Token(Token = "0x200052E")]
		[Flags]
		public enum PointClass
		{
			[Token(Token = "0x4001A09")]
			Coplanar = 0,
			[Token(Token = "0x4001A0A")]
			Front = 1,
			[Token(Token = "0x4001A0B")]
			Back = 2,
			[Token(Token = "0x4001A0C")]
			Intersection = 3
		}

		[Token(Token = "0x4001A04")]
		private const float epsylon = 0.0001f;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Normal;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x170003FE")]
		public Vector3 Pnt
		{
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xD50F20", Offset = "0xD50F20", VA = "0xD50F20")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xD50F2C", Offset = "0xD50F2C", VA = "0xD50F2C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xD50F38", Offset = "0xD50F38", VA = "0xD50F38")]
		public Plane(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xD449A8", Offset = "0xD449A8", VA = "0xD449A8")]
		public Plane(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xD44ABC", Offset = "0xD44ABC", VA = "0xD44ABC")]
		public void Set(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xD510BC", Offset = "0xD510BC", VA = "0xD510BC")]
		public Plane(Plane instance)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xD51110", Offset = "0xD51110", VA = "0xD51110")]
		public PointClass ClassifyPoint(Vector3 p)
		{
			return default(PointClass);
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xD4CF00", Offset = "0xD4CF00", VA = "0xD4CF00")]
		public bool GetSide(Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xD51160", Offset = "0xD51160", VA = "0xD51160")]
		public void Flip()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xD4CE34", Offset = "0xD4CE34", VA = "0xD4CE34")]
		public bool GetSideFix(ref Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xD51188", Offset = "0xD51188", VA = "0xD51188")]
		public bool SameSide(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xD4CF38", Offset = "0xD4CF38", VA = "0xD4CF38")]
		public bool IntersectSegment(Vector3 a, Vector3 b, out float t, ref Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xD511C8", Offset = "0xD511C8", VA = "0xD511C8")]
		public void InverseTransform(ExploderTransform transform)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xD4F4C8", Offset = "0xD4F4C8", VA = "0xD4F4C8")]
		public Matrix4x4 GetPlaneMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x200052F")]
	public class Polygon
	{
		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] Points;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float Area;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Min;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 Max;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Polygon> holes;

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xD51244", Offset = "0xD51244", VA = "0xD51244")]
		public Polygon(Vector2[] pnts)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xD512F4", Offset = "0xD512F4", VA = "0xD512F4")]
		public float GetArea()
		{
			return default(float);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xD513DC", Offset = "0xD513DC", VA = "0xD513DC")]
		public bool IsPointInside(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xD51500", Offset = "0xD51500", VA = "0xD51500")]
		public bool IsPolygonInside(Polygon polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xD5154C", Offset = "0xD5154C", VA = "0xD5154C")]
		public void AddHole(Polygon polygon)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xD515F8", Offset = "0xD515F8", VA = "0xD515F8")]
		public bool Triangulate(Array<int> indicesArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xD52318", Offset = "0xD52318", VA = "0xD52318")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xD524FC", Offset = "0xD524FC", VA = "0xD524FC")]
		private bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000530")]
	internal class CutterMT : CutterST
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected readonly int THREAD_MAX;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly CutterWorker[] workers;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] splitIDs;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Stopwatch localWatch;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool cutInitialized;

		[Token(Token = "0x170003FF")]
		public override TaskType Type
		{
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xD52BF8", Offset = "0xD52BF8", VA = "0xD52BF8", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xD52578", Offset = "0xD52578", VA = "0xD52578")]
		public CutterMT(Core Core)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xD52C00", Offset = "0xD52C00", VA = "0xD52C00", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xD52D44", Offset = "0xD52D44", VA = "0xD52D44", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xD52DD0", Offset = "0xD52DD0", VA = "0xD52DD0", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xD52F2C", Offset = "0xD52F2C", VA = "0xD52F2C", Slot = "8")]
		protected override bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xD53C40", Offset = "0xD53C40", VA = "0xD53C40")]
		private int[] SplitMeshTargetFragments(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x2000531")]
	internal class CutterST : ExploderTask
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly MeshCutter cutter;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cutAttempt;

		[Token(Token = "0x17000400")]
		public override TaskType Type
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xD53EE0", Offset = "0xD53EE0", VA = "0xD53EE0", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xD52850", Offset = "0xD52850", VA = "0xD52850")]
		public CutterST(Core Core)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xD52C74", Offset = "0xD52C74", VA = "0xD52C74", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xD53F18", Offset = "0xD53F18", VA = "0xD53F18", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xD53F58", Offset = "0xD53F58", VA = "0xD53F58", Slot = "8")]
		protected virtual bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xD53A48", Offset = "0xD53A48", VA = "0xD53A48")]
		protected List<ExploderMesh> CutSingleMesh(MeshObject mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000532")]
	internal class CutterWorker
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly HashSet<MeshObject> meshSet;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Core core;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool running;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int cutAttempt;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ManualResetEvent mre;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread thread;

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xD529A4", Offset = "0xD529A4", VA = "0xD529A4")]
		public CutterWorker(Core core, CuttingPlane cuttingPlane)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xD52CE4", Offset = "0xD52CE4", VA = "0xD52CE4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xD53D8C", Offset = "0xD53D8C", VA = "0xD53D8C")]
		public void AddMesh(MeshObject meshObject)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xD53E20", Offset = "0xD53E20", VA = "0xD53E20")]
		public void Run()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xD5482C", Offset = "0xD5482C", VA = "0xD5482C")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xD52F10", Offset = "0xD52F10", VA = "0xD52F10")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xD55220", Offset = "0xD55220", VA = "0xD55220")]
		public HashSet<MeshObject> GetResults()
		{
			return null;
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xD52DB0", Offset = "0xD52DB0", VA = "0xD52DB0")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xD548F0", Offset = "0xD548F0", VA = "0xD548F0")]
		private void Cut()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public enum TaskType
	{
		[Token(Token = "0x4001A27")]
		None,
		[Token(Token = "0x4001A28")]
		Preprocess,
		[Token(Token = "0x4001A29")]
		ProcessCutter,
		[Token(Token = "0x4001A2A")]
		IsolateMeshIslands,
		[Token(Token = "0x4001A2B")]
		PostprocessExplode,
		[Token(Token = "0x4001A2C")]
		PostprocessCrack,
		[Token(Token = "0x4001A2D")]
		TaskMax
	}
	[Token(Token = "0x2000534")]
	internal abstract class ExploderTask
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Core core;

		[Token(Token = "0x17000401")]
		public abstract TaskType Type
		{
			[Token(Token = "0x6001EE7")]
			get;
		}

		[Token(Token = "0x17000402")]
		public Stopwatch Watch
		{
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xD55228", Offset = "0xD55228", VA = "0xD55228")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xD55230", Offset = "0xD55230", VA = "0xD55230")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xD53E54", Offset = "0xD53E54", VA = "0xD53E54")]
		protected ExploderTask(Core Core)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xD55238", Offset = "0xD55238", VA = "0xD55238", Slot = "5")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xD53EE8", Offset = "0xD53EE8", VA = "0xD53EE8", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001EED")]
		public abstract bool Run(float frameBudget);
	}
	[Token(Token = "0x2000535")]
	internal class IsolateMeshIslands : ExploderTask
	{
		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshObject> islands;

		[Token(Token = "0x17000403")]
		public override TaskType Type
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xD552D0", Offset = "0xD552D0", VA = "0xD552D0", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xD5523C", Offset = "0xD5523C", VA = "0xD5523C")]
		public IsolateMeshIslands(Core Core)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xD552D8", Offset = "0xD552D8", VA = "0xD552D8", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xD553A8", Offset = "0xD553A8", VA = "0xD553A8", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000536")]
	internal abstract class Postprocess : ExploderTask
	{
		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xD55A50", Offset = "0xD55A50", VA = "0xD55A50")]
		protected Postprocess(Core Core)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xD55A54", Offset = "0xD55A54", VA = "0xD55A54", Slot = "6")]
		public override void Init()
		{
		}
	}
	[Token(Token = "0x2000537")]
	internal class PostprocessCrack : Postprocess
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrackedObject crackedObject;

		[Token(Token = "0x17000404")]
		public override TaskType Type
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xD55AF4", Offset = "0xD55AF4", VA = "0xD55AF4", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xD55AF0", Offset = "0xD55AF0", VA = "0xD55AF0")]
		public PostprocessCrack(Core Core)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xD55AFC", Offset = "0xD55AFC", VA = "0xD55AFC", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xD56418", Offset = "0xD56418", VA = "0xD56418", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000538")]
	internal class PostprocessExplode : Postprocess
	{
		[Token(Token = "0x17000405")]
		public override TaskType Type
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xD57008", Offset = "0xD57008", VA = "0xD57008", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xD57004", Offset = "0xD57004", VA = "0xD57004")]
		public PostprocessExplode(Core Core)
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xD57010", Offset = "0xD57010", VA = "0xD57010", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xD5716C", Offset = "0xD5716C", VA = "0xD5716C", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000539")]
	internal class Preprocess : ExploderTask
	{
		[Token(Token = "0x200053A")]
		private struct MeshData
		{
			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sharedMesh;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material sharedMaterial;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parentObject;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject skinnedBakeOriginal;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 centroid;
		}

		[Token(Token = "0x17000406")]
		public override TaskType Type
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xD57E50", Offset = "0xD57E50", VA = "0xD57E50", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xD57DB4", Offset = "0xD57DB4", VA = "0xD57DB4")]
		public Preprocess(Core Core)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xD57E58", Offset = "0xD57E58", VA = "0xD57E58", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xD57EB8", Offset = "0xD57EB8", VA = "0xD57EB8", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xD581C0", Offset = "0xD581C0", VA = "0xD581C0")]
		private List<MeshObject> GetMeshList()
		{
			return null;
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xD595C4", Offset = "0xD595C4", VA = "0xD595C4")]
		private List<MeshData> GetMeshData(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xD59DB4", Offset = "0xD59DB4", VA = "0xD59DB4")]
		private float GetDistanceRatio(float distance, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xD59478", Offset = "0xD59478", VA = "0xD59478")]
		private bool IsInRadius(GameObject o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200053B")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject Exploder;

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xD59FB8", Offset = "0xD59FB8", VA = "0xD59FB8")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xD5A1B4", Offset = "0xD5A1B4", VA = "0xD5A1B4")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xD5A1B8", Offset = "0xD5A1B8", VA = "0xD5A1B8")]
		private void CrackAndExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xD5A314", Offset = "0xD5A314", VA = "0xD5A314")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xD5A3BC", Offset = "0xD5A3BC", VA = "0xD5A3BC")]
		public Example()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class Explodable : MonoBehaviour
	{
		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xD5A3C4", Offset = "0xD5A3C4", VA = "0xD5A3C4")]
		public Explodable()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class ExploderObject : MonoBehaviour
	{
		[Token(Token = "0x200053E")]
		public enum ThreadOptions
		{
			[Token(Token = "0x4001A53")]
			WorkerThread1x,
			[Token(Token = "0x4001A54")]
			WorkerThread2x,
			[Token(Token = "0x4001A55")]
			WorkerThread3x,
			[Token(Token = "0x4001A56")]
			Disabled
		}

		[Token(Token = "0x200053F")]
		public enum CuttingStyleOption
		{
			[Token(Token = "0x4001A58")]
			Random,
			[Token(Token = "0x4001A59")]
			RectangularRandom,
			[Token(Token = "0x4001A5A")]
			RectangularRegular
		}

		[Token(Token = "0x2000540")]
		public delegate void OnExplosion(float timeMS, ExplosionState state);

		[Token(Token = "0x2000541")]
		public enum ExplosionState
		{
			[Token(Token = "0x4001A5C")]
			ExplosionStarted,
			[Token(Token = "0x4001A5D")]
			ExplosionFinished,
			[Token(Token = "0x4001A5E")]
			ObjectCracked
		}

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Tag;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DontUseTag;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseCubeRadius;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ForceVector;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseForceVector;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FrameBudget;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int TargetFragments;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ThreadOptions ThreadOption;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ExplodeSelf;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool HideSelf;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool DisableTriangulation;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int FragmentPoolSize;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Use2DCollision;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Core core;

		[Token(Token = "0x17000407")]
		public int ProcessingFrames
		{
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xD5A5C0", Offset = "0xD5A5C0", VA = "0xD5A5C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xD5A3CC", Offset = "0xD5A3CC", VA = "0xD5A3CC")]
		public void ExplodeRadius()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xD5A3D4", Offset = "0xD5A3D4", VA = "0xD5A3D4")]
		public void ExplodeRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xD5A404", Offset = "0xD5A404", VA = "0xD5A404")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xD5A0EC", Offset = "0xD5A0EC", VA = "0xD5A0EC")]
		public void ExplodeObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xD5A40C", Offset = "0xD5A40C", VA = "0xD5A40C")]
		public void ExplodeObjects(params GameObject[] objects)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xD5A418", Offset = "0xD5A418", VA = "0xD5A418")]
		public void ExplodeObjects(OnExplosion callback, params GameObject[] objects)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xD5A448", Offset = "0xD5A448", VA = "0xD5A448")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xD5A468", Offset = "0xD5A468", VA = "0xD5A468")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xD5A484", Offset = "0xD5A484", VA = "0xD5A484")]
		public void CrackRadius()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xD5A48C", Offset = "0xD5A48C", VA = "0xD5A48C")]
		public void CrackRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xD5A4BC", Offset = "0xD5A4BC", VA = "0xD5A4BC")]
		public void CrackObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xD5A24C", Offset = "0xD5A24C", VA = "0xD5A24C")]
		public void CrackObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xD5A4C4", Offset = "0xD5A4C4", VA = "0xD5A4C4")]
		public bool CanCrack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xD5A544", Offset = "0xD5A544", VA = "0xD5A544")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xD5A560", Offset = "0xD5A560", VA = "0xD5A560")]
		public void ExplodeCracked(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xD5A57C", Offset = "0xD5A57C", VA = "0xD5A57C")]
		public void ExplodeCracked(GameObject obj)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xD5A398", Offset = "0xD5A398", VA = "0xD5A398")]
		public void ExplodeCracked(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xD5A59C", Offset = "0xD5A59C", VA = "0xD5A59C")]
		public void ExplodeCracked()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xD5A5DC", Offset = "0xD5A5DC", VA = "0xD5A5DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xD5A64C", Offset = "0xD5A64C", VA = "0xD5A64C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xD5A778", Offset = "0xD5A778", VA = "0xD5A778")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xD5A868", Offset = "0xD5A868", VA = "0xD5A868")]
		public ExploderObject()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class ExploderOption : MonoBehaviour
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Plane2D;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color CrossSectionVertexColor;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 CrossSectionUV;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool UseLocalForce;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FragmentMaterial;

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xD5AC5C", Offset = "0xD5AC5C", VA = "0xD5AC5C")]
		public void DuplicateSettings(ExploderOption options)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xD5ACB0", Offset = "0xD5ACB0", VA = "0xD5ACB0")]
		public ExploderOption()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class Fragment : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Cracked;

		[NonSerialized]
		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Visible;

		[NonSerialized]
		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsActive;

		[NonSerialized]
		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRenderer;

		[NonSerialized]
		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshCollider meshCollider;

		[NonSerialized]
		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter meshFilter;

		[NonSerialized]
		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoxCollider boxCollider;

		[NonSerialized]
		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PolygonCollider2D polygonCollider2D;

		[NonSerialized]
		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject particleChild;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigid2D;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ExploderParams settings;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 originalScale;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float visibilityCheckTimer;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float deactivateTimer;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float emmitersTimeout;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stopEmitOnTimeout;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool collided;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioSource activePlayback;

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xD5ACD4", Offset = "0xD5ACD4", VA = "0xD5ACD4")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xD5AD60", Offset = "0xD5AD60", VA = "0xD5AD60")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xD5ADEC", Offset = "0xD5ADEC", VA = "0xD5ADEC")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xD5AE78", Offset = "0xD5AE78", VA = "0xD5AE78")]
		public void SetConstraints(RigidbodyConstraints constraints)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xD5AF0C", Offset = "0xD5AF0C", VA = "0xD5AF0C")]
		public void InitSFX(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xD5B1C8", Offset = "0xD5B1C8", VA = "0xD5B1C8")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xD5B348", Offset = "0xD5B348", VA = "0xD5B348")]
		public void DisableColliders(bool disable, bool meshColliders, bool physics2d)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xD56BBC", Offset = "0xD56BBC", VA = "0xD56BBC")]
		public void ApplyExplosion(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original, ExploderParams set)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xD5B560", Offset = "0xD5B560", VA = "0xD5B560")]
		private void ApplyExplosion2D(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xD5B880", Offset = "0xD5B880", VA = "0xD5B880")]
		public void RefreshComponentsCache()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xD57CA4", Offset = "0xD57CA4", VA = "0xD57CA4")]
		public void Explode(ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xD5BA50", Offset = "0xD5BA50", VA = "0xD5BA50")]
		public void Emit(bool centerToBound)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xD5BBAC", Offset = "0xD5BBAC", VA = "0xD5BBAC")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xD56AEC", Offset = "0xD56AEC", VA = "0xD56AEC")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xD5BD58", Offset = "0xD5BD58", VA = "0xD5BD58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xD5BD78", Offset = "0xD5BD78", VA = "0xD5BD78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xD5C354", Offset = "0xD5C354", VA = "0xD5C354")]
		public Fragment()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public enum DeactivateOptions
	{
		[Token(Token = "0x4001A7C")]
		Never,
		[Token(Token = "0x4001A7D")]
		OutsideOfCamera,
		[Token(Token = "0x4001A7E")]
		Timeout
	}
	[Token(Token = "0x2000545")]
	public enum FadeoutOptions
	{
		[Token(Token = "0x4001A80")]
		None,
		[Token(Token = "0x4001A81")]
		FadeoutAlpha,
		[Token(Token = "0x4001A82")]
		ScaleDown
	}
	[Serializable]
	[Token(Token = "0x2000546")]
	public class FragmentDeactivation
	{
		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DeactivateTimeout;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xD5C35C", Offset = "0xD5C35C", VA = "0xD5C35C")]
		public FragmentDeactivation Clone()
		{
			return null;
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xD5AAE8", Offset = "0xD5AAE8", VA = "0xD5AAE8")]
		public FragmentDeactivation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000547")]
	public class FragmentOption
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FreezePositionX;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool FreezePositionY;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool FreezePositionZ;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool FreezeRotationX;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FreezeRotationY;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool FreezeRotationZ;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Layer;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ExplodeFragments;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxVelocity;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool InheritParentPhysicsProperty;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Mass;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UseGravity;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DisableColliders;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool MeshColliders;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float AngularVelocity;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxAngularVelocity;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 AngularVelocityVector;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RandomAngularVelocityVector;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material FragmentMaterial;

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xD5C3D4", Offset = "0xD5C3D4", VA = "0xD5C3D4")]
		public FragmentOption Clone()
		{
			return null;
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xD5AB08", Offset = "0xD5AB08", VA = "0xD5AB08")]
		public FragmentOption()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class FragmentPool : MonoBehaviour
	{
		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FragmentPool instance;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fragment[] pool;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool meshColliders;

		[Token(Token = "0x17000408")]
		public static FragmentPool Instance
		{
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xD55D28", Offset = "0xD55D28", VA = "0xD55D28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		public int PoolSize
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xD5C6F0", Offset = "0xD5C6F0", VA = "0xD5C6F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040A")]
		public Fragment[] Pool
		{
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xD5C70C", Offset = "0xD5C70C", VA = "0xD5C70C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xD5C4EC", Offset = "0xD5C4EC", VA = "0xD5C4EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xD5C588", Offset = "0xD5C588", VA = "0xD5C588")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xD55F80", Offset = "0xD55F80", VA = "0xD55F80")]
		public List<Fragment> GetAvailableFragments(int size)
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xD5A4EC", Offset = "0xD5A4EC", VA = "0xD5A4EC")]
		public int GetAvailableCrackFragmentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xD55F14", Offset = "0xD55F14", VA = "0xD55F14")]
		public void Reset(ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xD5C714", Offset = "0xD5C714", VA = "0xD5C714")]
		public void Allocate(int poolSize, bool useMeshColliders, bool use2dCollision)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xD55E38", Offset = "0xD55E38", VA = "0xD55E38")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xD5D040", Offset = "0xD5D040", VA = "0xD5D040")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xD5D09C", Offset = "0xD5D09C", VA = "0xD5D09C")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xD5C5E8", Offset = "0xD5C5E8", VA = "0xD5C5E8")]
		public void DestroyFragments()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xD5D0F8", Offset = "0xD5D0F8", VA = "0xD5D0F8")]
		public void DeactivateFragments()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xD5CC40", Offset = "0xD5CC40", VA = "0xD5CC40")]
		public void SetExplodableFragments(bool explodable, bool dontUseTag)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xD5CE14", Offset = "0xD5CE14", VA = "0xD5CE14")]
		public void SetFragmentPhysicsOptions(FragmentOption options, bool physics2d)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xD5CFA8", Offset = "0xD5CFA8", VA = "0xD5CFA8")]
		public void SetSFXOptions(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xD5D1B0", Offset = "0xD5D1B0", VA = "0xD5D1B0")]
		public List<Fragment> GetActiveFragments()
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xD5D384", Offset = "0xD5D384", VA = "0xD5D384")]
		public FragmentPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000549")]
	public class FragmentSFX
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentEmitter;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChanceToPlay;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool PlayOnlyOnce;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool MixMultipleSounds;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EmitersMax;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ParticleTimeout;

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xD5D38C", Offset = "0xD5D38C", VA = "0xD5D38C")]
		public FragmentSFX Clone()
		{
			return null;
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xD5AAF8", Offset = "0xD5AAF8", VA = "0xD5AAF8")]
		public FragmentSFX()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public static class Profiler
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Stopwatch> timeSegments;

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xD5D424", Offset = "0xD5D424", VA = "0xD5D424")]
		public static void Start(string key)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xD5D560", Offset = "0xD5D560", VA = "0xD5D560")]
		public static void End(string key)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xD5D5EC", Offset = "0xD5D5EC", VA = "0xD5D5EC")]
		public static string[] PrintResults()
		{
			return null;
		}
	}
	[Token(Token = "0x200054B")]
	public class ExploderSlowMotion : MonoBehaviour
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMotionTime;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float slowMotionSpeed;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool slowmo;

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xD5D948", Offset = "0xD5D948", VA = "0xD5D948")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xD5D99C", Offset = "0xD5D99C", VA = "0xD5D99C")]
		public void EnableSlowMotion(bool status)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xD5DA8C", Offset = "0xD5DA8C", VA = "0xD5DA8C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xD5DAF4", Offset = "0xD5DAF4", VA = "0xD5DAF4")]
		public ExploderSlowMotion()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public static class ExploderUtils
	{
		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xD5DB08", Offset = "0xD5DB08", VA = "0xD5DB08")]
		[Conditional("UNITY_EDITOR_NO_DEBUG")]
		public static void Assert(bool condition, string message)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xD5DBAC", Offset = "0xD5DBAC", VA = "0xD5DBAC")]
		[Conditional("UNITY_EDITOR_NO_DEBUG")]
		public static void Warning(bool condition, string message)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xD5DC48", Offset = "0xD5DC48", VA = "0xD5DC48")]
		[Conditional("UNITY_EDITOR_NO_DEBUG")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xD59DD0", Offset = "0xD59DD0", VA = "0xD59DD0")]
		public static Vector3 GetCentroid(GameObject obj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xD57BC0", Offset = "0xD57BC0", VA = "0xD57BC0")]
		public static void SetVisible(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xD5DCA0", Offset = "0xD5DCA0", VA = "0xD5DCA0")]
		public static void ClearLog()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xD5D304", Offset = "0xD5D304", VA = "0xD5D304")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xD5DCA4", Offset = "0xD5DCA4", VA = "0xD5DCA4")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xD569F8", Offset = "0xD569F8", VA = "0xD569F8")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xD57ADC", Offset = "0xD57ADC", VA = "0xD57ADC")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xD5DD34", Offset = "0xD5DD34", VA = "0xD5DD34")]
		public static bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xD5DE10", Offset = "0xD5DE10", VA = "0xD5DE10")]
		public static void CopyAudioSource(AudioSource src, AudioSource dst)
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class HUDFPS : MonoBehaviour
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text text;

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xD5E0E0", Offset = "0xD5E0E0", VA = "0xD5E0E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xD5E1E8", Offset = "0xD5E1E8", VA = "0xD5E1E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xD5E384", Offset = "0xD5E384", VA = "0xD5E384")]
		public HUDFPS()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuitting;

		[Token(Token = "0x1700040B")]
		public static T Instance
		{
			[Token(Token = "0x6001F69")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6A")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F6B")]
		public Singleton()
		{
		}
	}
}
namespace Exploder.Utils
{
	[Token(Token = "0x200054F")]
	public static class Compatibility
	{
		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xD5E394", Offset = "0xD5E394", VA = "0xD5E394")]
		public static void SetVisible(GameObject obj, bool status, bool includeInactive)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xD5E4E8", Offset = "0xD5E4E8", VA = "0xD5E4E8")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xD5E568", Offset = "0xD5E568", VA = "0xD5E568")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xD5E5F8", Offset = "0xD5E5F8", VA = "0xD5E5F8")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xD5E6EC", Offset = "0xD5E6EC", VA = "0xD5E6EC")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xD5E7D0", Offset = "0xD5E7D0", VA = "0xD5E7D0")]
		public static void Destroy(UnityEngine.Object obj, bool allowDestroyingAssets)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xD5E868", Offset = "0xD5E868", VA = "0xD5E868")]
		public static void SetCursorVisible(bool status)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xD5E874", Offset = "0xD5E874", VA = "0xD5E874")]
		public static void LockCursor(bool status)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xD5E888", Offset = "0xD5E888", VA = "0xD5E888")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000550")]
	public class ExploderSingleton : MonoBehaviour
	{
		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Obsolete("ExploderInstance is obsolete, please use Instance instead.")]
		public static ExploderObject ExploderInstance;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ExploderObject Instance;

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xD5E8A4", Offset = "0xD5E8A4", VA = "0xD5E8A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xD5E944", Offset = "0xD5E944", VA = "0xD5E944")]
		public ExploderSingleton()
		{
		}
	}
	[Token(Token = "0x2000551")]
	internal class Hull2D
	{
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xD5E94C", Offset = "0xD5E94C", VA = "0xD5E94C")]
		public static void Sort(Vector2[] array)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xD5EA4C", Offset = "0xD5EA4C", VA = "0xD5EA4C")]
		public static void DumpArray(Vector2[] array)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xD5EB3C", Offset = "0xD5EB3C", VA = "0xD5EB3C")]
		public static Vector2[] ChainHull2D(Vector2[] Pnts)
		{
			return null;
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xD5EDA8", Offset = "0xD5EDA8", VA = "0xD5EDA8")]
		private static float Hull2DCross(ref Vector2 O, ref Vector2 A, ref Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xD5EDD0", Offset = "0xD5EDD0", VA = "0xD5EDD0")]
		public Hull2D()
		{
		}
	}
}
namespace Exploder.Examples
{
	[Token(Token = "0x2000553")]
	public class ExplodeAllObjects : MonoBehaviour
	{
		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xD5EE94", Offset = "0xD5EE94", VA = "0xD5EE94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xD5EF20", Offset = "0xD5EF20", VA = "0xD5EF20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xD5EF5C", Offset = "0xD5EF5C", VA = "0xD5EF5C")]
		private void ExplodeObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xD5EFD4", Offset = "0xD5EFD4", VA = "0xD5EFD4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xD5F078", Offset = "0xD5F078", VA = "0xD5F078")]
		public ExplodeAllObjects()
		{
		}
	}
}
namespace Exploder.Demo
{
	[Token(Token = "0x2000554")]
	public class DemoClickExplode : MonoBehaviour
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera Camera;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xD5F080", Offset = "0xD5F080", VA = "0xD5F080")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xD5F408", Offset = "0xD5F408", VA = "0xD5F408")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xD5F4F0", Offset = "0xD5F4F0", VA = "0xD5F4F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xD5F63C", Offset = "0xD5F63C", VA = "0xD5F63C")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xD5F6D4", Offset = "0xD5F6D4", VA = "0xD5F6D4")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xD5F6D8", Offset = "0xD5F6D8", VA = "0xD5F6D8")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xD5F6D0", Offset = "0xD5F6D0", VA = "0xD5F6D0")]
		private void ExplodeAfterCrack(GameObject obj)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xD5F6DC", Offset = "0xD5F6DC", VA = "0xD5F6DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xD5F894", Offset = "0xD5F894", VA = "0xD5F894")]
		public DemoClickExplode()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class QuickStartDemo : MonoBehaviour
	{
		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject sphereObject;

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xD5F984", Offset = "0xD5F984", VA = "0xD5F984")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xD5FA14", Offset = "0xD5FA14", VA = "0xD5FA14")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xD5FB84", Offset = "0xD5FB84", VA = "0xD5FB84")]
		public QuickStartDemo()
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class CursorLocking : MonoBehaviour
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockCursor;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode LockKey;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode UnlockKey;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsLocked;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CursorLocking instance;

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xD5FB8C", Offset = "0xD5FB8C", VA = "0xD5FB8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xD5FBDC", Offset = "0xD5FBDC", VA = "0xD5FBDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xD5FC98", Offset = "0xD5FC98", VA = "0xD5FC98")]
		public static void Lock()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xD5FD08", Offset = "0xD5FD08", VA = "0xD5FD08")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xD5FD74", Offset = "0xD5FD74", VA = "0xD5FD74")]
		public CursorLocking()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class ExploderMouseLook : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		public enum RotationAxes
		{
			[Token(Token = "0x4001ACF")]
			MouseXAndY,
			[Token(Token = "0x4001AD0")]
			MouseX,
			[Token(Token = "0x4001AD1")]
			MouseY
		}

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationY;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float kickTimeout;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float kickBackRot;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool kickBack;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTarget;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xD5FD7C", Offset = "0xD5FD7C", VA = "0xD5FD7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xD6009C", Offset = "0xD6009C", VA = "0xD6009C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xD60158", Offset = "0xD60158", VA = "0xD60158")]
		public void Kick()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xD601AC", Offset = "0xD601AC", VA = "0xD601AC")]
		public ExploderMouseLook()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class GrenadeController : MonoBehaviour
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Throw;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource Source;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeObject Grenade;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera MainCamera;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float explodeTimer;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float throwTimer;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool exploding;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xD601CC", Offset = "0xD601CC", VA = "0xD601CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xD601E0", Offset = "0xD601E0", VA = "0xD601E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xD6052C", Offset = "0xD6052C", VA = "0xD6052C")]
		public GrenadeController()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class GrenadeObject : MonoBehaviour
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light Flash;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ExplodeFinished;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool Impact;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool throwing;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float explodeTimeoutMax;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool explosionInProgress;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderObject exploder;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int flashing;

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xD603FC", Offset = "0xD603FC", VA = "0xD603FC")]
		public void Throw()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xD6041C", Offset = "0xD6041C", VA = "0xD6041C")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xD60534", Offset = "0xD60534", VA = "0xD60534")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xD60688", Offset = "0xD60688", VA = "0xD60688")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xD606A8", Offset = "0xD606A8", VA = "0xD606A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xD60740", Offset = "0xD60740", VA = "0xD60740")]
		public GrenadeObject()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class MoveController : MonoBehaviour
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpSpeed;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gravity;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController controller;

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xD60748", Offset = "0xD60748", VA = "0xD60748")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xD607A0", Offset = "0xD607A0", VA = "0xD607A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xD608F4", Offset = "0xD608F4", VA = "0xD608F4")]
		public MoveController()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class PanelChairBomb : UseObject
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderObject Exploder;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChairBomb;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light Flash;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xD60968", Offset = "0xD60968", VA = "0xD60968", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xD60B30", Offset = "0xD60B30", VA = "0xD60B30")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xD60C54", Offset = "0xD60C54", VA = "0xD60C54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xD60CA4", Offset = "0xD60CA4", VA = "0xD60CA4")]
		public PanelChairBomb()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class PanelResetScene : UseObject
	{
		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> objectList;

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xD60D10", Offset = "0xD60D10", VA = "0xD60D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xD60DC0", Offset = "0xD60DC0", VA = "0xD60DC0", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xD60F08", Offset = "0xD60F08", VA = "0xD60F08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xD60F3C", Offset = "0xD60F3C", VA = "0xD60F3C")]
		public PanelResetScene()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class PanelThrowObject : UseObject
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ThrowBox;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ThrowObjects;

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xD60F40", Offset = "0xD60F40", VA = "0xD60F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xD60F44", Offset = "0xD60F44", VA = "0xD60F44", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xD61370", Offset = "0xD61370", VA = "0xD61370")]
		public PanelThrowObject()
		{
		}
	}
	[Token(Token = "0x2000560")]
	internal class RobotScript : MonoBehaviour
	{
		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float angle;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xD61374", Offset = "0xD61374", VA = "0xD61374")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xD613B0", Offset = "0xD613B0", VA = "0xD613B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xD61408", Offset = "0xD61408", VA = "0xD61408")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xD61518", Offset = "0xD61518", VA = "0xD61518")]
		public RobotScript()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x2000562")]
		public delegate void OnHit(Vector3 pos);

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Explosion;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject RocketStatic;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RocketLight;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RocketVelocity;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnHit HitCallback;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray direction;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool launch;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float launchTimeout;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform parent;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 shotPos;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float targetDistance;

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xD6152C", Offset = "0xD6152C", VA = "0xD6152C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xD61580", Offset = "0xD61580", VA = "0xD61580")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xD6161C", Offset = "0xD6161C", VA = "0xD6161C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xD61640", Offset = "0xD61640", VA = "0xD61640")]
		public void Launch(Ray ray)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xD617E8", Offset = "0xD617E8", VA = "0xD617E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xD61B8C", Offset = "0xD61B8C", VA = "0xD61B8C")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class RPGController : MonoBehaviour
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject exploder;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rocket Rocket;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextShotTimeout;

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xD61CE4", Offset = "0xD61CE4", VA = "0xD61CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xD61D6C", Offset = "0xD61D6C", VA = "0xD61D6C")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xD61D84", Offset = "0xD61D84", VA = "0xD61D84")]
		private void OnRocketHit(Vector3 position)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xD61E20", Offset = "0xD61E20", VA = "0xD61E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xD6204C", Offset = "0xD6204C", VA = "0xD6204C")]
		public RPGController()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public class ShotgunController : MonoBehaviour
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Reload;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flash;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation ReloadAnim;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip HideAnim;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MuzzleFlash;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float reloadTimeout;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextShotTimeout;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TargetType lastTarget;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject exploder;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xD62054", Offset = "0xD62054", VA = "0xD62054")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xD62060", Offset = "0xD62060", VA = "0xD62060")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xD624EC", Offset = "0xD624EC", VA = "0xD624EC")]
		public ShotgunController()
		{
		}
	}
	[Token(Token = "0x2000565")]
	public enum TargetType
	{
		[Token(Token = "0x4001B15")]
		DestroyableObject,
		[Token(Token = "0x4001B16")]
		UseObject,
		[Token(Token = "0x4001B17")]
		Default,
		[Token(Token = "0x4001B18")]
		None
	}
	[Token(Token = "0x2000566")]
	public class TargetManager : MonoBehaviour
	{
		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TargetManager instance;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetObject;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType TargetType;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 TargetPosition;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image CrosshairGun;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image CrosshairHand;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text PanelText;

		[Token(Token = "0x1700040C")]
		public static TargetManager Instance
		{
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xD624FC", Offset = "0xD624FC", VA = "0xD624FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xD62544", Offset = "0xD62544", VA = "0xD62544")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xD6259C", Offset = "0xD6259C", VA = "0xD6259C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xD625F4", Offset = "0xD625F4", VA = "0xD625F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xD62C28", Offset = "0xD62C28", VA = "0xD62C28")]
		private bool IsDestroyableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xD62D18", Offset = "0xD62D18", VA = "0xD62D18")]
		private bool IsUseObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xD62E10", Offset = "0xD62E10", VA = "0xD62E10")]
		public TargetManager()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class ThrowObject : MonoBehaviour
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float destroyTimer;

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xD62F08", Offset = "0xD62F08", VA = "0xD62F08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xD62F14", Offset = "0xD62F14", VA = "0xD62F14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xD62FB4", Offset = "0xD62FB4", VA = "0xD62FB4")]
		public ThrowObject()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public abstract class UseObject : MonoBehaviour
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UseRadius;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HelperText;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip UseClip;

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xD60A58", Offset = "0xD60A58", VA = "0xD60A58", Slot = "4")]
		public virtual void Use()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xD62FBC", Offset = "0xD62FBC", VA = "0xD62FBC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xD60CA8", Offset = "0xD60CA8", VA = "0xD60CA8")]
		protected UseObject()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class WeaponManager : MonoBehaviour
	{
		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shotgun;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RPG;

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xD64010", Offset = "0xD64010", VA = "0xD64010")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xD64108", Offset = "0xD64108", VA = "0xD64108")]
		public WeaponManager()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime
{
	[Token(Token = "0x200056A")]
	[AddComponentMenu("Behavior Designer/Behavior Tree")]
	public class BehaviorTree : Behavior
	{
		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xD64110", Offset = "0xD64110", VA = "0xD64110")]
		public BehaviorTree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public class ExternalBehaviorTree : ExternalBehavior
	{
		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xD64118", Offset = "0xD64118", VA = "0xD64118")]
		public ExternalBehaviorTree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public class SharedAnimationCurve : SharedVariable<AnimationCurve>
	{
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xD64120", Offset = "0xD64120", VA = "0xD64120")]
		public static implicit operator SharedAnimationCurve(AnimationCurve value)
		{
			return null;
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xD6418C", Offset = "0xD6418C", VA = "0xD6418C")]
		public SharedAnimationCurve()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056D")]
	public class SharedBehaviour : SharedVariable<Behaviour>
	{
		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xD641D4", Offset = "0xD641D4", VA = "0xD641D4")]
		public static explicit operator SharedBehaviour(Behaviour value)
		{
			return null;
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xD64240", Offset = "0xD64240", VA = "0xD64240")]
		public SharedBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056E")]
	public class SharedBool : SharedVariable<bool>
	{
		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xD64288", Offset = "0xD64288", VA = "0xD64288")]
		public static implicit operator SharedBool(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xD642EC", Offset = "0xD642EC", VA = "0xD642EC")]
		public SharedBool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056F")]
	public class SharedCollider : SharedVariable<Collider>
	{
		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xD64334", Offset = "0xD64334", VA = "0xD64334")]
		public static implicit operator SharedCollider(Collider value)
		{
			return null;
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xD643A0", Offset = "0xD643A0", VA = "0xD643A0")]
		public SharedCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000570")]
	public class SharedColor : SharedVariable<Color>
	{
		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xD643E8", Offset = "0xD643E8", VA = "0xD643E8")]
		public static implicit operator SharedColor(Color value)
		{
			return null;
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xD64468", Offset = "0xD64468", VA = "0xD64468")]
		public SharedColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000571")]
	public class SharedFloat : SharedVariable<float>
	{
		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xD644B0", Offset = "0xD644B0", VA = "0xD644B0")]
		public static implicit operator SharedFloat(float value)
		{
			return null;
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xD64538", Offset = "0xD64538", VA = "0xD64538")]
		public SharedFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000572")]
	public class SharedGameObject : SharedVariable<GameObject>
	{
		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xD64580", Offset = "0xD64580", VA = "0xD64580")]
		public static implicit operator SharedGameObject(GameObject value)
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xD645EC", Offset = "0xD645EC", VA = "0xD645EC")]
		public SharedGameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000573")]
	public class SharedGameObjectList : SharedVariable<List<GameObject>>
	{
		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xD64634", Offset = "0xD64634", VA = "0xD64634")]
		public static implicit operator SharedGameObjectList(List<GameObject> value)
		{
			return null;
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xD646A0", Offset = "0xD646A0", VA = "0xD646A0")]
		public SharedGameObjectList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000574")]
	public class SharedInt : SharedVariable<int>
	{
		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xD646E8", Offset = "0xD646E8", VA = "0xD646E8")]
		public static implicit operator SharedInt(int value)
		{
			return null;
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xD64748", Offset = "0xD64748", VA = "0xD64748")]
		public SharedInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000575")]
	public class SharedLayerMask : SharedVariable<LayerMask>
	{
		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xD64790", Offset = "0xD64790", VA = "0xD64790")]
		public static implicit operator SharedLayerMask(LayerMask value)
		{
			return null;
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xD64810", Offset = "0xD64810", VA = "0xD64810")]
		public SharedLayerMask()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000576")]
	public class SharedMaterial : SharedVariable<Material>
	{
		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xD64858", Offset = "0xD64858", VA = "0xD64858")]
		public static implicit operator SharedMaterial(Material value)
		{
			return null;
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xD648C4", Offset = "0xD648C4", VA = "0xD648C4")]
		public SharedMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000577")]
	public class SharedObject : SharedVariable<UnityEngine.Object>
	{
		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xD6490C", Offset = "0xD6490C", VA = "0xD6490C")]
		public static explicit operator SharedObject(UnityEngine.Object value)
		{
			return null;
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xD64978", Offset = "0xD64978", VA = "0xD64978")]
		public SharedObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000578")]
	public class SharedObjectList : SharedVariable<List<UnityEngine.Object>>
	{
		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xD649C0", Offset = "0xD649C0", VA = "0xD649C0")]
		public static implicit operator SharedObjectList(List<UnityEngine.Object> value)
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xD64A2C", Offset = "0xD64A2C", VA = "0xD64A2C")]
		public SharedObjectList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000579")]
	public class SharedQuaternion : SharedVariable<Quaternion>
	{
		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xD64A74", Offset = "0xD64A74", VA = "0xD64A74")]
		public static implicit operator SharedQuaternion(Quaternion value)
		{
			return null;
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xD64AF4", Offset = "0xD64AF4", VA = "0xD64AF4")]
		public SharedQuaternion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057A")]
	public class SharedRect : SharedVariable<Rect>
	{
		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xD64B3C", Offset = "0xD64B3C", VA = "0xD64B3C")]
		public static implicit operator SharedRect(Rect value)
		{
			return null;
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xD64BBC", Offset = "0xD64BBC", VA = "0xD64BBC")]
		public SharedRect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057B")]
	public class SharedString : SharedVariable<string>
	{
		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xD64C04", Offset = "0xD64C04", VA = "0xD64C04")]
		public static implicit operator SharedString(string value)
		{
			return null;
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xD64C70", Offset = "0xD64C70", VA = "0xD64C70")]
		public SharedString()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057C")]
	public class SharedTransform : SharedVariable<Transform>
	{
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xD64CB8", Offset = "0xD64CB8", VA = "0xD64CB8")]
		public static implicit operator SharedTransform(Transform value)
		{
			return null;
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xD64D24", Offset = "0xD64D24", VA = "0xD64D24")]
		public SharedTransform()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057D")]
	public class SharedTransformList : SharedVariable<List<Transform>>
	{
		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xD64D6C", Offset = "0xD64D6C", VA = "0xD64D6C")]
		public static implicit operator SharedTransformList(List<Transform> value)
		{
			return null;
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xD64DD8", Offset = "0xD64DD8", VA = "0xD64DD8")]
		public SharedTransformList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057E")]
	public class SharedUInt : SharedVariable<uint>
	{
		[Token(Token = "0x6002000")]
		[Address(RVA = "0xD64E20", Offset = "0xD64E20", VA = "0xD64E20")]
		public static implicit operator SharedUInt(uint value)
		{
			return null;
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xD64E80", Offset = "0xD64E80", VA = "0xD64E80")]
		public SharedUInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057F")]
	public class SharedVector2 : SharedVariable<Vector2>
	{
		[Token(Token = "0x6002002")]
		[Address(RVA = "0xD64EC8", Offset = "0xD64EC8", VA = "0xD64EC8")]
		public static implicit operator SharedVector2(Vector2 value)
		{
			return null;
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xD64F34", Offset = "0xD64F34", VA = "0xD64F34")]
		public SharedVector2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000580")]
	public class SharedVector2Int : SharedVariable<Vector2Int>
	{
		[Token(Token = "0x6002004")]
		[Address(RVA = "0xD64F7C", Offset = "0xD64F7C", VA = "0xD64F7C")]
		public static implicit operator SharedVector2Int(Vector2Int value)
		{
			return null;
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xD64FDC", Offset = "0xD64FDC", VA = "0xD64FDC")]
		public SharedVector2Int()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000581")]
	public class SharedVector3 : SharedVariable<Vector3>
	{
		[Token(Token = "0x6002006")]
		[Address(RVA = "0xD65024", Offset = "0xD65024", VA = "0xD65024")]
		public static implicit operator SharedVector3(Vector3 value)
		{
			return null;
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xD650A0", Offset = "0xD650A0", VA = "0xD650A0")]
		public SharedVector3()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000582")]
	public class SharedVector3Int : SharedVariable<Vector3Int>
	{
		[Token(Token = "0x6002008")]
		[Address(RVA = "0xD650E8", Offset = "0xD650E8", VA = "0xD650E8")]
		public static implicit operator SharedVector3Int(Vector3Int value)
		{
			return null;
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xD65158", Offset = "0xD65158", VA = "0xD65158")]
		public SharedVector3Int()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000583")]
	public class SharedVector4 : SharedVariable<Vector4>
	{
		[Token(Token = "0x600200A")]
		[Address(RVA = "0xD651A0", Offset = "0xD651A0", VA = "0xD651A0")]
		public static implicit operator SharedVector4(Vector4 value)
		{
			return null;
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xD65220", Offset = "0xD65220", VA = "0xD65220")]
		public SharedVector4()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks
{
	[Token(Token = "0x2000584")]
	[TaskDescription("Behavior Tree Reference allows you to run another behavior tree within the current behavior tree.")]
	[TaskIcon("BehaviorTreeReferenceIcon.png")]
	[HelpURL("https://www.opsive.com/support/documentation/behavior-designer/external-behavior-trees/")]
	public class BehaviorTreeReference : BehaviorReference
	{
		[Token(Token = "0x600200C")]
		[Address(RVA = "0xD65268", Offset = "0xD65268", VA = "0xD65268")]
		public BehaviorTreeReference()
		{
		}
	}
	[Token(Token = "0x2000585")]
	[TaskIcon("{SkinColor}IdleIcon.png")]
	[TaskDescription("Returns a TaskStatus of running. Will only stop when interrupted or a conditional abort is triggered.")]
	public class Idle : Action
	{
		[Token(Token = "0x600200D")]
		[Address(RVA = "0xD65270", Offset = "0xD65270", VA = "0xD65270", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xD65278", Offset = "0xD65278", VA = "0xD65278")]
		public Idle()
		{
		}
	}
	[Token(Token = "0x2000586")]
	[TaskDescription("Log is a simple task which will output the specified text and return success. It can be used for debugging.")]
	[TaskIcon("{SkinColor}LogIcon.png")]
	public class Log : Action
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Text to output to the log")]
		public SharedString text;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Is this text an error?")]
		public SharedBool logError;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Should the time be included in the log message?")]
		public SharedBool logTime;

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xD65280", Offset = "0xD65280", VA = "0xD65280", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xD65404", Offset = "0xD65404", VA = "0xD65404", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xD65488", Offset = "0xD65488", VA = "0xD65488")]
		public Log()
		{
		}
	}
	[Token(Token = "0x2000587")]
	[TaskDescription("Perform the actual interruption. This will immediately stop the specified tasks from running and will return success or failure depending on the value of interrupt success.")]
	[TaskIcon("{SkinColor}PerformInterruptionIcon.png")]
	public class PerformInterruption : Action
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The list of tasks to interrupt. Can be any number of tasks")]
		public Interrupt[] interruptTasks;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("When we interrupt the task should we return a task status of success?")]
		public SharedBool interruptSuccess;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xD65490", Offset = "0xD65490", VA = "0xD65490", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xD655C4", Offset = "0xD655C4", VA = "0xD655C4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xD655F4", Offset = "0xD655F4", VA = "0xD655F4")]
		public PerformInterruption()
		{
		}
	}
	[Token(Token = "0x2000588")]
	[TaskDescription("Gets the value from the field specified. Returns success if the field was retrieved.")]
	[TaskCategory("Reflection")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	public class GetFieldValue : Action
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to get the field on")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to get the field on")]
		public SharedString componentName;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the field")]
		public SharedString fieldName;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[RequiredField]
		[Tooltip("The value of the field")]
		public SharedVariable fieldValue;

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xD655FC", Offset = "0xD655FC", VA = "0xD655FC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xD65898", Offset = "0xD65898", VA = "0xD65898", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xD658E0", Offset = "0xD658E0", VA = "0xD658E0")]
		public GetFieldValue()
		{
		}
	}
	[Token(Token = "0x2000589")]
	[TaskDescription("Gets the value from the property specified. Returns success if the property was retrieved.")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	[TaskCategory("Reflection")]
	public class GetPropertyValue : Action
	{
		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to get the property of")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to get the property of")]
		public SharedString componentName;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the property")]
		public SharedString propertyName;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The value of the property")]
		[RequiredField]
		public SharedVariable propertyValue;

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xD658E8", Offset = "0xD658E8", VA = "0xD658E8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xD65B88", Offset = "0xD65B88", VA = "0xD65B88", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xD65BD0", Offset = "0xD65BD0", VA = "0xD65BD0")]
		public GetPropertyValue()
		{
		}
	}
	[Token(Token = "0x200058A")]
	[TaskDescription("Invokes the specified method with the specified parameters. Can optionally store the return value. Returns success if the method was invoked.")]
	[TaskCategory("Reflection")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	public class InvokeMethod : Action
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to invoke the method on")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to invoke the method on")]
		public SharedString componentName;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the method")]
		public SharedString methodName;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The first parameter of the method")]
		public SharedVariable parameter1;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The second parameter of the method")]
		public SharedVariable parameter2;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("The third parameter of the method")]
		public SharedVariable parameter3;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("The fourth parameter of the method")]
		public SharedVariable parameter4;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Store the result of the invoke call")]
		public SharedVariable storeResult;

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xD65BD8", Offset = "0xD65BD8", VA = "0xD65BD8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xD661C0", Offset = "0xD661C0", VA = "0xD661C0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xD66248", Offset = "0xD66248", VA = "0xD66248")]
		public InvokeMethod()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[TaskDescription("Sets the field to the value specified. Returns success if the field was set.")]
	[TaskCategory("Reflection")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	public class SetFieldValue : Action
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to set the field on")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to set the field on")]
		public SharedString componentName;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the field")]
		public SharedString fieldName;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The value to set")]
		public SharedVariable fieldValue;

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xD66250", Offset = "0xD66250", VA = "0xD66250", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xD664EC", Offset = "0xD664EC", VA = "0xD664EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xD66534", Offset = "0xD66534", VA = "0xD66534")]
		public SetFieldValue()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	[TaskDescription("Sets the property to the value specified. Returns success if the property was set.")]
	[TaskCategory("Reflection")]
	public class SetPropertyValue : Action
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to set the property on")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to set the property on")]
		public SharedString componentName;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the property")]
		public SharedString propertyName;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The value to set")]
		public SharedVariable propertyValue;

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xD6653C", Offset = "0xD6653C", VA = "0xD6653C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xD667E4", Offset = "0xD667E4", VA = "0xD667E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xD6682C", Offset = "0xD6682C", VA = "0xD6682C")]
		public SetPropertyValue()
		{
		}
	}
	[Token(Token = "0x200058D")]
	[TaskDescription("Restarts a behavior tree, returns success after it has been restarted.")]
	[TaskIcon("{SkinColor}RestartBehaviorTreeIcon.png")]
	public class RestartBehaviorTree : Action
	{
		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject of the behavior tree that should be restarted. If null use the current behavior")]
		public SharedGameObject behaviorGameObject;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The group of the behavior tree that should be restarted")]
		public SharedInt group;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Behavior behavior;

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xD66834", Offset = "0xD66834", VA = "0xD66834", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xD669D4", Offset = "0xD669D4", VA = "0xD669D4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xD66A6C", Offset = "0xD66A6C", VA = "0xD66A6C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xD66A78", Offset = "0xD66A78", VA = "0xD66A78")]
		public RestartBehaviorTree()
		{
		}
	}
	[Token(Token = "0x200058E")]
	[TaskDescription("Sends an event to the behavior tree, returns success after sending the event.")]
	[HelpURL("https://www.opsive.com/support/documentation/behavior-designer/events/")]
	[TaskIcon("{SkinColor}SendEventIcon.png")]
	public class SendEvent : Action
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject of the behavior tree that should have the event sent to it. If null use the current behavior")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The event to send")]
		public SharedString eventName;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The group of the behavior tree that the event should be sent to")]
		public SharedInt group;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Optionally specify a first argument to send")]
		[SharedRequired]
		public SharedVariable argument1;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Optionally specify a second argument to send")]
		[SharedRequired]
		public SharedVariable argument2;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Optionally specify a third argument to send")]
		[SharedRequired]
		public SharedVariable argument3;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BehaviorTree behaviorTree;

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xD66A80", Offset = "0xD66A80", VA = "0xD66A80", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xD66C20", Offset = "0xD66C20", VA = "0xD66C20", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xD66E54", Offset = "0xD66E54", VA = "0xD66E54", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xD66EB8", Offset = "0xD66EB8", VA = "0xD66EB8")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x200058F")]
	[TaskDescription("Start a new behavior tree and return success after it has been started.")]
	[TaskIcon("{SkinColor}StartBehaviorTreeIcon.png")]
	public class StartBehaviorTree : Action
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject of the behavior tree that should be started. If null use the current behavior")]
		public SharedGameObject behaviorGameObject;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The group of the behavior tree that should be started")]
		public SharedInt group;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Should this task wait for the behavior tree to complete?")]
		public SharedBool waitForCompletion;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Should the variables be synchronized?")]
		public SharedBool synchronizeVariables;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool behaviorComplete;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Behavior behavior;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xD66EC0", Offset = "0xD66EC0", VA = "0xD66EC0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xD671E0", Offset = "0xD671E0", VA = "0xD671E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xD67290", Offset = "0xD67290", VA = "0xD67290")]
		private void BehaviorEnded(Behavior behavior)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xD6729C", Offset = "0xD6729C", VA = "0xD6729C", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xD67398", Offset = "0xD67398", VA = "0xD67398", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xD673F8", Offset = "0xD673F8", VA = "0xD673F8")]
		public StartBehaviorTree()
		{
		}
	}
	[Token(Token = "0x2000590")]
	[TaskDescription("Pause or disable a behavior tree and return success after it has been stopped.")]
	[TaskIcon("{SkinColor}StopBehaviorTreeIcon.png")]
	public class StopBehaviorTree : Action
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject of the behavior tree that should be stopped. If null use the current behavior")]
		public SharedGameObject behaviorGameObject;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The group of the behavior tree that should be stopped")]
		public SharedInt group;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Should the behavior be paused or completely disabled")]
		public SharedBool pauseBehavior;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Behavior behavior;

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xD67428", Offset = "0xD67428", VA = "0xD67428", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xD675C8", Offset = "0xD675C8", VA = "0xD675C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xD6767C", Offset = "0xD6767C", VA = "0xD6767C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xD676C4", Offset = "0xD676C4", VA = "0xD676C4")]
		public StopBehaviorTree()
		{
		}
	}
	[Token(Token = "0x2000591")]
	[TaskDescription("Wait a specified amount of time. The task will return running until the task is done waiting. It will return success after the wait time has elapsed.")]
	[TaskIcon("{SkinColor}WaitIcon.png")]
	public class Wait : Action
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The amount of time to wait")]
		public SharedFloat waitTime;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Should the wait be randomized?")]
		public SharedBool randomWait;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The minimum wait time if random wait is enabled")]
		public SharedFloat randomWaitMin;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The maximum wait time if random wait is enabled")]
		public SharedFloat randomWaitMax;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float waitDuration;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float startTime;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float pauseTime;

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xD676F4", Offset = "0xD676F4", VA = "0xD676F4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xD677C0", Offset = "0xD677C0", VA = "0xD677C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xD677F4", Offset = "0xD677F4", VA = "0xD677F4", Slot = "10")]
		public override void OnPause(bool paused)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xD6783C", Offset = "0xD6783C", VA = "0xD6783C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xD678B4", Offset = "0xD678B4", VA = "0xD678B4")]
		public Wait()
		{
		}
	}
	[Token(Token = "0x2000592")]
	[TaskIcon("{SkinColor}ParallelIcon.png")]
	[TaskDescription("Similar to the sequence task, the parallel task will run each child task until a child task returns failure. The difference is that the parallel task will run all of its children tasks simultaneously versus running each task one at a time. Like the sequence class, the parallel task will return success once all of its children tasks have return success. If one tasks returns failure the parallel task will end all of the child tasks and return failure.")]
	public class Parallel : Composite
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus[] executionStatus;

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xD67938", Offset = "0xD67938", VA = "0xD67938", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xD679A8", Offset = "0xD679A8", VA = "0xD679A8", Slot = "39")]
		public override void OnChildStarted(int childIndex)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xD679E8", Offset = "0xD679E8", VA = "0xD679E8", Slot = "31")]
		public override bool CanRunParallelChildren()
		{
			return default(bool);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xD679F0", Offset = "0xD679F0", VA = "0xD679F0", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xD679F8", Offset = "0xD679F8", VA = "0xD679F8", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xD67A4C", Offset = "0xD67A4C", VA = "0xD67A4C", Slot = "37")]
		public override void OnChildExecuted(int childIndex, TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xD67A7C", Offset = "0xD67A7C", VA = "0xD67A7C", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xD67AFC", Offset = "0xD67AFC", VA = "0xD67AFC", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xD67B50", Offset = "0xD67B50", VA = "0xD67B50", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xD67BA4", Offset = "0xD67BA4", VA = "0xD67BA4")]
		public Parallel()
		{
		}
	}
	[Token(Token = "0x2000593")]
	[TaskDescription("Similar to the parallel selector task, except the parallel complete task will return the child status as soon as the child returns success or failure.The child tasks are executed simultaneously.")]
	[TaskIcon("{SkinColor}ParallelCompleteIcon.png")]
	public class ParallelComplete : Composite
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus[] executionStatus;

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xD67BAC", Offset = "0xD67BAC", VA = "0xD67BAC", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xD67C1C", Offset = "0xD67C1C", VA = "0xD67C1C", Slot = "39")]
		public override void OnChildStarted(int childIndex)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xD67C5C", Offset = "0xD67C5C", VA = "0xD67C5C", Slot = "31")]
		public override bool CanRunParallelChildren()
		{
			return default(bool);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xD67C64", Offset = "0xD67C64", VA = "0xD67C64", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xD67C6C", Offset = "0xD67C6C", VA = "0xD67C6C", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xD67CC0", Offset = "0xD67CC0", VA = "0xD67CC0", Slot = "37")]
		public override void OnChildExecuted(int childIndex, TaskStatus childStatus)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xD67CF0", Offset = "0xD67CF0", VA = "0xD67CF0", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xD67D44", Offset = "0xD67D44", VA = "0xD67D44", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xD67DAC", Offset = "0xD67DAC", VA = "0xD67DAC", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xD67E00", Offset = "0xD67E00", VA = "0xD67E00")]
		public ParallelComplete()
		{
		}
	}
	[Token(Token = "0x2000594")]
	[TaskDescription("Similar to the selector task, the parallel selector task will return success as soon as a child task returns success. The difference is that the parallel task will run all of its children tasks simultaneously versus running each task one at a time. If one tasks returns success the parallel selector task will end all of the child tasks and return success. If every child task returns failure then the parallel selector task will return failure.")]
	[TaskIcon("{SkinColor}ParallelSelectorIcon.png")]
	public class ParallelSelector : Composite
	{
		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus[] executionStatus;

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xD67E08", Offset = "0xD67E08", VA = "0xD67E08", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xD67E78", Offset = "0xD67E78", VA = "0xD67E78", Slot = "39")]
		public override void OnChildStarted(int childIndex)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xD67EB8", Offset = "0xD67EB8", VA = "0xD67EB8", Slot = "31")]
		public override bool CanRunParallelChildren()
		{
			return default(bool);
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xD67EC0", Offset = "0xD67EC0", VA = "0xD67EC0", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xD67EC8", Offset = "0xD67EC8", VA = "0xD67EC8", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xD67F1C", Offset = "0xD67F1C", VA = "0xD67F1C", Slot = "37")]
		public override void OnChildExecuted(int childIndex, TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xD67F4C", Offset = "0xD67F4C", VA = "0xD67F4C", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xD67FA0", Offset = "0xD67FA0", VA = "0xD67FA0", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xD68020", Offset = "0xD68020", VA = "0xD68020", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xD68074", Offset = "0xD68074", VA = "0xD68074")]
		public ParallelSelector()
		{
		}
	}
	[Token(Token = "0x2000595")]
	[TaskIcon("{SkinColor}PrioritySelectorIcon.png")]
	[TaskDescription("Similar to the selector task, the priority selector task will return success as soon as a child task returns success. Instead of running the tasks sequentially from left to right within the tree, the priority selector will ask the task what its priority is to determine the order. The higher priority tasks have a higher chance at being run first.")]
	public class PrioritySelector : Composite
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus executionStatus;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<int> childrenExecutionOrder;

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xD6807C", Offset = "0xD6807C", VA = "0xD6807C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xD6820C", Offset = "0xD6820C", VA = "0xD6820C", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xD68260", Offset = "0xD68260", VA = "0xD68260", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xD682C8", Offset = "0xD682C8", VA = "0xD682C8", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xD682D8", Offset = "0xD682D8", VA = "0xD682D8", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xD682E0", Offset = "0xD682E0", VA = "0xD682E0", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xD682E8", Offset = "0xD682E8", VA = "0xD682E8")]
		public PrioritySelector()
		{
		}
	}
	[Token(Token = "0x2000596")]
	[TaskDescription("Similar to the selector task, the random selector task will return success as soon as a child task returns success.  The difference is that the random selector class will run its children in a random order. The selector task is deterministic in that it will always run the tasks from left to right within the tree. The random selector task shuffles the child tasks up and then begins execution in a random order. Other than that the random selector class is the same as the selector class. It will continue running tasks until a task completes successfully. If no child tasks return success then it will return failure.")]
	[TaskIcon("{SkinColor}RandomSelectorIcon.png")]
	public class RandomSelector : Composite
	{
		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Seed the random number generator to make things easier to debug")]
		public int seed;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Do we want to use the seed?")]
		public bool useSeed;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<int> childIndexList;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stack<int> childrenExecutionOrder;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TaskStatus executionStatus;

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xD68370", Offset = "0xD68370", VA = "0xD68370", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xD68470", Offset = "0xD68470", VA = "0xD68470", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xD685B4", Offset = "0xD685B4", VA = "0xD685B4", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xD68604", Offset = "0xD68604", VA = "0xD68604", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xD68668", Offset = "0xD68668", VA = "0xD68668", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xD686DC", Offset = "0xD686DC", VA = "0xD686DC", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xD68738", Offset = "0xD68738", VA = "0xD68738", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xD6878C", Offset = "0xD6878C", VA = "0xD6878C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xD68474", Offset = "0xD68474", VA = "0xD68474")]
		private void ShuffleChilden()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xD68798", Offset = "0xD68798", VA = "0xD68798")]
		public RandomSelector()
		{
		}
	}
	[Token(Token = "0x2000597")]
	[TaskDescription("Similar to the sequence task, the random sequence task will return success as soon as every child task returns success.  The difference is that the random sequence class will run its children in a random order. The sequence task is deterministic in that it will always run the tasks from left to right within the tree. The random sequence task shuffles the child tasks up and then begins execution in a random order. Other than that the random sequence class is the same as the sequence class. It will stop running tasks as soon as a single task ends in failure. On a task failure it will stop executing all of the child tasks and return failure. If no child returns failure then it will return success.")]
	[TaskIcon("{SkinColor}RandomSequenceIcon.png")]
	public class RandomSequence : Composite
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Seed the random number generator to make things easier to debug")]
		public int seed;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Do we want to use the seed?")]
		public bool useSeed;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<int> childIndexList;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stack<int> childrenExecutionOrder;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TaskStatus executionStatus;

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xD68870", Offset = "0xD68870", VA = "0xD68870", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xD68970", Offset = "0xD68970", VA = "0xD68970", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xD68AB4", Offset = "0xD68AB4", VA = "0xD68AB4", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xD68B04", Offset = "0xD68B04", VA = "0xD68B04", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xD68B68", Offset = "0xD68B68", VA = "0xD68B68", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xD68BDC", Offset = "0xD68BDC", VA = "0xD68BDC", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xD68C38", Offset = "0xD68C38", VA = "0xD68C38", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xD68C8C", Offset = "0xD68C8C", VA = "0xD68C8C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xD68974", Offset = "0xD68974", VA = "0xD68974")]
		private void ShuffleChilden()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xD68C98", Offset = "0xD68C98", VA = "0xD68C98")]
		public RandomSequence()
		{
		}
	}
	[Token(Token = "0x2000598")]
	[TaskIcon("{SkinColor}SelectorIcon.png")]
	[TaskDescription("The selector task is similar to an \"or\" operation. It will return success as soon as one of its child tasks return success. If a child task returns failure then it will sequentially run the next task. If no child task returns success then it will return failure.")]
	public class Selector : Composite
	{
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus executionStatus;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xD68D70", Offset = "0xD68D70", VA = "0xD68D70", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xD68D78", Offset = "0xD68D78", VA = "0xD68D78", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xD68DE0", Offset = "0xD68DE0", VA = "0xD68DE0", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xD68DF0", Offset = "0xD68DF0", VA = "0xD68DF0", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xD68DF8", Offset = "0xD68DF8", VA = "0xD68DF8", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xD68E00", Offset = "0xD68E00", VA = "0xD68E00")]
		public Selector()
		{
		}
	}
	[Token(Token = "0x2000599")]
	[TaskDescription("The selector evaluator is a selector task which reevaluates its children every tick. It will run the lowest priority child which returns a task status of running. This is done each tick. If a higher priority child is running and the next frame a lower priority child wants to run it will interrupt the higher priority child. The selector evaluator will return success as soon as the first child returns success otherwise it will keep trying higher priority children. This task mimics the conditional abort functionality except the child tasks don't always have to be conditional tasks.")]
	[TaskIcon("{SkinColor}SelectorEvaluatorIcon.png")]
	public class SelectorEvaluator : Composite
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus executionStatus;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int storedCurrentChildIndex;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TaskStatus storedExecutionStatus;

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xD68E08", Offset = "0xD68E08", VA = "0xD68E08", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xD68E10", Offset = "0xD68E10", VA = "0xD68E10", Slot = "39")]
		public override void OnChildStarted(int childIndex)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xD68E24", Offset = "0xD68E24", VA = "0xD68E24", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xD68EA4", Offset = "0xD68EA4", VA = "0xD68EA4", Slot = "37")]
		public override void OnChildExecuted(int childIndex, TaskStatus childStatus)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xD68F34", Offset = "0xD68F34", VA = "0xD68F34", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xD68F3C", Offset = "0xD68F3C", VA = "0xD68F3C", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xD68F44", Offset = "0xD68F44", VA = "0xD68F44", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xD68F4C", Offset = "0xD68F4C", VA = "0xD68F4C", Slot = "31")]
		public override bool CanRunParallelChildren()
		{
			return default(bool);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xD68F54", Offset = "0xD68F54", VA = "0xD68F54", Slot = "35")]
		public override bool CanReevaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xD68F5C", Offset = "0xD68F5C", VA = "0xD68F5C", Slot = "43")]
		public override bool OnReevaluationStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xD68F80", Offset = "0xD68F80", VA = "0xD68F80", Slot = "44")]
		public override void OnReevaluationEnded(TaskStatus status)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xD69054", Offset = "0xD69054", VA = "0xD69054")]
		public SelectorEvaluator()
		{
		}
	}
	[Token(Token = "0x200059A")]
	[TaskDescription("The sequence task is similar to an \"and\" operation. It will return failure as soon as one of its child tasks return failure. If a child task returns success then it will sequentially run the next task. If all child tasks return success then it will return success.")]
	[TaskIcon("{SkinColor}SequenceIcon.png")]
	public class Sequence : Composite
	{
		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskStatus executionStatus;

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xD69064", Offset = "0xD69064", VA = "0xD69064", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xD6906C", Offset = "0xD6906C", VA = "0xD6906C", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xD690D4", Offset = "0xD690D4", VA = "0xD690D4", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xD690E4", Offset = "0xD690E4", VA = "0xD690E4", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xD690EC", Offset = "0xD690EC", VA = "0xD690EC", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xD690F4", Offset = "0xD690F4", VA = "0xD690F4")]
		public Sequence()
		{
		}
	}
	[Token(Token = "0x200059B")]
	[TaskDescription("The utility selector task evaluates the child tasks using Utility Theory AI. The child task can override the GetUtility method and return the utility value at that particular time. The task with the highest utility value will be selected and the existing running task will be aborted. The utility selector task reevaluates its children every tick.")]
	[TaskIcon("{SkinColor}UtilitySelectorIcon.png")]
	public class UtilitySelector : Composite
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int currentChildIndex;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float highestUtility;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TaskStatus executionStatus;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool reevaluating;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> availableChildren;

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xD690FC", Offset = "0xD690FC", VA = "0xD690FC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xD69240", Offset = "0xD69240", VA = "0xD69240", Slot = "32")]
		public override int CurrentChildIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xD69248", Offset = "0xD69248", VA = "0xD69248", Slot = "39")]
		public override void OnChildStarted(int childIndex)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xD69254", Offset = "0xD69254", VA = "0xD69254", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xD692C4", Offset = "0xD692C4", VA = "0xD692C4", Slot = "37")]
		public override void OnChildExecuted(int childIndex, TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xD69404", Offset = "0xD69404", VA = "0xD69404", Slot = "42")]
		public override void OnConditionalAbort(int childIndex)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xD69410", Offset = "0xD69410", VA = "0xD69410", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xD6941C", Offset = "0xD6941C", VA = "0xD6941C", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xD69424", Offset = "0xD69424", VA = "0xD69424", Slot = "31")]
		public override bool CanRunParallelChildren()
		{
			return default(bool);
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xD6942C", Offset = "0xD6942C", VA = "0xD6942C", Slot = "35")]
		public override bool CanReevaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xD69434", Offset = "0xD69434", VA = "0xD69434", Slot = "43")]
		public override bool OnReevaluationStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xD69454", Offset = "0xD69454", VA = "0xD69454", Slot = "44")]
		public override void OnReevaluationEnded(TaskStatus status)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xD695DC", Offset = "0xD695DC", VA = "0xD695DC")]
		public UtilitySelector()
		{
		}
	}
	[Token(Token = "0x200059C")]
	[TaskDescription("Returns success as soon as the event specified by eventName has been received.")]
	[TaskIcon("{SkinColor}HasReceivedEventIcon.png")]
	public class HasReceivedEvent : Conditional
	{
		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the event to receive")]
		public SharedString eventName;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Optionally store the first sent argument")]
		[SharedRequired]
		public SharedVariable storedValue1;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Optionally store the second sent argument")]
		[SharedRequired]
		public SharedVariable storedValue2;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Optionally store the third sent argument")]
		[SharedRequired]
		public SharedVariable storedValue3;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool eventReceived;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool registered;

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xD69664", Offset = "0xD69664", VA = "0xD69664", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xD698EC", Offset = "0xD698EC", VA = "0xD698EC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xD69900", Offset = "0xD69900", VA = "0xD69900", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xD69B88", Offset = "0xD69B88", VA = "0xD69B88")]
		private void ReceivedEvent()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xD69B94", Offset = "0xD69B94", VA = "0xD69B94")]
		private void ReceivedEvent(object arg1)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xD69BF0", Offset = "0xD69BF0", VA = "0xD69BF0")]
		private void ReceivedEvent(object arg1, object arg2)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xD69C7C", Offset = "0xD69C7C", VA = "0xD69C7C")]
		private void ReceivedEvent(object arg1, object arg2, object arg3)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xD69D44", Offset = "0xD69D44", VA = "0xD69D44", Slot = "15")]
		public override void OnBehaviorComplete()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xD69FC0", Offset = "0xD69FC0", VA = "0xD69FC0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xD6A014", Offset = "0xD6A014", VA = "0xD6A014")]
		public HasReceivedEvent()
		{
		}
	}
	[Token(Token = "0x200059D")]
	[TaskDescription("Returns success when a collision starts. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	[TaskCategory("Physics")]
	public class HasEnteredCollision : Conditional
	{
		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a collision against")]
		public SharedString tag;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that started the collision")]
		public SharedGameObject collidedGameObject;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool enteredCollision;

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xD6A074", Offset = "0xD6A074", VA = "0xD6A074", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xD6A088", Offset = "0xD6A088", VA = "0xD6A088", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xD6A090", Offset = "0xD6A090", VA = "0xD6A090", Slot = "18")]
		public override void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xD6A184", Offset = "0xD6A184", VA = "0xD6A184", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xD6A1E8", Offset = "0xD6A1E8", VA = "0xD6A1E8")]
		public HasEnteredCollision()
		{
		}
	}
	[Token(Token = "0x200059E")]
	[TaskCategory("Physics")]
	[TaskDescription("Returns success when a 2D collision starts. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	public class HasEnteredCollision2D : Conditional
	{
		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a collision against")]
		public SharedString tag;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that started the collision")]
		public SharedGameObject collidedGameObject;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool enteredCollision;

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xD6A248", Offset = "0xD6A248", VA = "0xD6A248", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xD6A25C", Offset = "0xD6A25C", VA = "0xD6A25C", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xD6A264", Offset = "0xD6A264", VA = "0xD6A264", Slot = "22")]
		public override void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xD6A358", Offset = "0xD6A358", VA = "0xD6A358", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xD6A3BC", Offset = "0xD6A3BC", VA = "0xD6A3BC")]
		public HasEnteredCollision2D()
		{
		}
	}
	[Token(Token = "0x200059F")]
	[TaskCategory("Physics")]
	[TaskDescription("Returns success when an object enters the trigger. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	public class HasEnteredTrigger : Conditional
	{
		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a trigger against")]
		public SharedString tag;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that entered the trigger")]
		public SharedGameObject otherGameObject;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool enteredTrigger;

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xD6A41C", Offset = "0xD6A41C", VA = "0xD6A41C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xD6A430", Offset = "0xD6A430", VA = "0xD6A430", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xD6A438", Offset = "0xD6A438", VA = "0xD6A438", Slot = "20")]
		public override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xD6A52C", Offset = "0xD6A52C", VA = "0xD6A52C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xD6A590", Offset = "0xD6A590", VA = "0xD6A590")]
		public HasEnteredTrigger()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	[TaskDescription("Returns success when an object enters the 2D trigger. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	[TaskCategory("Physics")]
	public class HasEnteredTrigger2D : Conditional
	{
		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a trigger against")]
		public SharedString tag;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that entered the trigger")]
		public SharedGameObject otherGameObject;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool enteredTrigger;

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xD6A5F0", Offset = "0xD6A5F0", VA = "0xD6A5F0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xD6A604", Offset = "0xD6A604", VA = "0xD6A604", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xD6A60C", Offset = "0xD6A60C", VA = "0xD6A60C", Slot = "24")]
		public override void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xD6A700", Offset = "0xD6A700", VA = "0xD6A700", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xD6A764", Offset = "0xD6A764", VA = "0xD6A764")]
		public HasEnteredTrigger2D()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	[TaskDescription("Returns success when a collision ends. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	[TaskCategory("Physics")]
	public class HasExitedCollision : Conditional
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a collision against")]
		public SharedString tag;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that exited the collision")]
		public SharedGameObject collidedGameObject;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool exitedCollision;

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xD6A7C4", Offset = "0xD6A7C4", VA = "0xD6A7C4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xD6A7D8", Offset = "0xD6A7D8", VA = "0xD6A7D8", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xD6A7E0", Offset = "0xD6A7E0", VA = "0xD6A7E0", Slot = "19")]
		public override void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xD6A8D4", Offset = "0xD6A8D4", VA = "0xD6A8D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xD6A8E0", Offset = "0xD6A8E0", VA = "0xD6A8E0")]
		public HasExitedCollision()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	[TaskDescription("Returns success when a 2D collision ends. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	[TaskCategory("Physics")]
	public class HasExitedCollision2D : Conditional
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a collision against")]
		public SharedString tag;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that exited the collision")]
		public SharedGameObject collidedGameObject;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool exitedCollision;

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xD6A940", Offset = "0xD6A940", VA = "0xD6A940", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xD6A954", Offset = "0xD6A954", VA = "0xD6A954", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xD6A95C", Offset = "0xD6A95C", VA = "0xD6A95C", Slot = "23")]
		public override void OnCollisionExit2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xD6AA50", Offset = "0xD6AA50", VA = "0xD6AA50", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xD6AAB4", Offset = "0xD6AAB4", VA = "0xD6AAB4")]
		public HasExitedCollision2D()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	[TaskDescription("Returns success when an object exits the trigger. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	[TaskCategory("Physics")]
	public class HasExitedTrigger : Conditional
	{
		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a trigger against")]
		public SharedString tag;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that exited the trigger")]
		public SharedGameObject otherGameObject;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool exitedTrigger;

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xD6AB14", Offset = "0xD6AB14", VA = "0xD6AB14", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xD6AB28", Offset = "0xD6AB28", VA = "0xD6AB28", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xD6AB30", Offset = "0xD6AB30", VA = "0xD6AB30", Slot = "21")]
		public override void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xD6AC24", Offset = "0xD6AC24", VA = "0xD6AC24", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xD6AC88", Offset = "0xD6AC88", VA = "0xD6AC88")]
		public HasExitedTrigger()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	[TaskDescription("Returns success when an object exits the 2D trigger. This task will only receive the physics callback if it is being reevaluated (with a conditional abort or under a parallel task).")]
	[TaskCategory("Physics")]
	public class HasExitedTrigger2D : Conditional
	{
		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to check for a trigger against")]
		public SharedString tag;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The object that exited the trigger")]
		public SharedGameObject otherGameObject;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool exitedTrigger;

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xD6ACE8", Offset = "0xD6ACE8", VA = "0xD6ACE8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xD6ACFC", Offset = "0xD6ACFC", VA = "0xD6ACFC", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xD6AD04", Offset = "0xD6AD04", VA = "0xD6AD04", Slot = "25")]
		public override void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xD6ADF8", Offset = "0xD6ADF8", VA = "0xD6ADF8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xD6AE5C", Offset = "0xD6AE5C", VA = "0xD6AE5C")]
		public HasExitedTrigger2D()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	[TaskDescription("The random probability task will return success when the random probability is above the succeed probability. It will otherwise return failure.")]
	public class RandomProbability : Conditional
	{
		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The chance that the task will return success")]
		public SharedFloat successProbability;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Seed the random number generator to make things easier to debug")]
		public SharedInt seed;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Do we want to use the seed?")]
		public SharedBool useSeed;

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xD6AEBC", Offset = "0xD6AEBC", VA = "0xD6AEBC", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xD6AF48", Offset = "0xD6AF48", VA = "0xD6AF48", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xD6AFBC", Offset = "0xD6AFBC", VA = "0xD6AFBC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xD6B010", Offset = "0xD6B010", VA = "0xD6B010")]
		public RandomProbability()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	[TaskCategory("Reflection")]
	[TaskDescription("Compares the field value to the value specified. Returns success if the values are the same.")]
	public class CompareFieldValue : Conditional
	{
		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to compare the field on")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to compare the field on")]
		public SharedString componentName;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the field")]
		public SharedString fieldName;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The value to compare to")]
		public SharedVariable compareValue;

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xD6B040", Offset = "0xD6B040", VA = "0xD6B040", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xD6B31C", Offset = "0xD6B31C", VA = "0xD6B31C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xD6B364", Offset = "0xD6B364", VA = "0xD6B364")]
		public CompareFieldValue()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	[TaskDescription("Compares the property value to the value specified. Returns success if the values are the same.")]
	[TaskCategory("Reflection")]
	[TaskIcon("{SkinColor}ReflectionIcon.png")]
	public class ComparePropertyValue : Conditional
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to compare the property of")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The component to compare the property of")]
		public SharedString componentName;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The name of the property")]
		public SharedString propertyName;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The value to compare to")]
		public SharedVariable compareValue;

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xD6B36C", Offset = "0xD6B36C", VA = "0xD6B36C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xD6B64C", Offset = "0xD6B64C", VA = "0xD6B64C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xD6B694", Offset = "0xD6B694", VA = "0xD6B694")]
		public ComparePropertyValue()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	[TaskIcon("{SkinColor}ConditionalEvaluatorIcon.png")]
	[TaskDescription("Evaluates the specified conditional task. If the conditional task returns success then the child task is run and the child status is returned. If the conditional task does not return success then the child task is not run and a failure status is immediately returned.")]
	public class ConditionalEvaluator : Decorator
	{
		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Should the conditional task be reevaluated every tick?")]
		public SharedBool reevaluate;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[InspectTask]
		[Tooltip("The conditional task to evaluate")]
		public Conditional conditionalTask;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TaskStatus executionStatus;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool checkConditionalTask;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool conditionalTaskFailed;

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xD6B69C", Offset = "0xD6B69C", VA = "0xD6B69C", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xD6B704", Offset = "0xD6B704", VA = "0xD6B704", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xD6B71C", Offset = "0xD6B71C", VA = "0xD6B71C", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xD6B770", Offset = "0xD6B770", VA = "0xD6B770", Slot = "35")]
		public override bool CanReevaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xD6B7C0", Offset = "0xD6B7C0", VA = "0xD6B7C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xD6B804", Offset = "0xD6B804", VA = "0xD6B804", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xD6B80C", Offset = "0xD6B80C", VA = "0xD6B80C", Slot = "41")]
		public override TaskStatus OverrideStatus()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xD6B814", Offset = "0xD6B814", VA = "0xD6B814", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xD6B824", Offset = "0xD6B824", VA = "0xD6B824", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xD6B84C", Offset = "0xD6B84C", VA = "0xD6B84C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xD6B858", Offset = "0xD6B858", VA = "0xD6B858")]
		public ConditionalEvaluator()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	[TaskIcon("{SkinColor}InterruptIcon.png")]
	[TaskDescription("The interrupt task will stop all child tasks from running if it is interrupted. The interruption can be triggered by the perform interruption task. The interrupt task will keep running its child until this interruption is called. If no interruption happens and the child task completed its execution the interrupt task will return the value assigned by the child task.")]
	public class Interrupt : Decorator
	{
		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskStatus interruptStatus;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private TaskStatus executionStatus;

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xD6B868", Offset = "0xD6B868", VA = "0xD6B868", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xD6B884", Offset = "0xD6B884", VA = "0xD6B884", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xD65540", Offset = "0xD65540", VA = "0xD65540")]
		public void DoInterrupt(TaskStatus status)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xD6B88C", Offset = "0xD6B88C", VA = "0xD6B88C", Slot = "41")]
		public override TaskStatus OverrideStatus()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xD6B894", Offset = "0xD6B894", VA = "0xD6B894", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xD6B8A4", Offset = "0xD6B8A4", VA = "0xD6B8A4")]
		public Interrupt()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	[TaskDescription("The inverter task will invert the return value of the child task after it has finished executing. If the child returns success, the inverter task will return failure. If the child returns failure, the inverter task will return success.")]
	[TaskIcon("{SkinColor}InverterIcon.png")]
	public class Inverter : Decorator
	{
		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskStatus executionStatus;

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xD6B8B4", Offset = "0xD6B8B4", VA = "0xD6B8B4", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xD6B8D0", Offset = "0xD6B8D0", VA = "0xD6B8D0", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xD6B8D8", Offset = "0xD6B8D8", VA = "0xD6B8D8", Slot = "34")]
		public override TaskStatus Decorate(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xD6B8F8", Offset = "0xD6B8F8", VA = "0xD6B8F8", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xD6B900", Offset = "0xD6B900", VA = "0xD6B900")]
		public Inverter()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	[TaskIcon("{SkinColor}RepeaterIcon.png")]
	[TaskDescription("The repeater task will repeat execution of its child task until the child task has been run a specified number of times. It has the option of continuing to execute the child task even if the child task returns a failure.")]
	public class Repeater : Decorator
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The number of times to repeat the execution of its child task")]
		public SharedInt count;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Allows the repeater to repeat forever")]
		public SharedBool repeatForever;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Should the task return if the child task returns a failure")]
		public SharedBool endOnFailure;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int executionCount;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private TaskStatus executionStatus;

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xD6B908", Offset = "0xD6B908", VA = "0xD6B908", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xD6B9D4", Offset = "0xD6B9D4", VA = "0xD6B9D4", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xD6B9E4", Offset = "0xD6B9E4", VA = "0xD6B9E4", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xD6B9EC", Offset = "0xD6B9EC", VA = "0xD6B9EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xD6BA28", Offset = "0xD6BA28", VA = "0xD6BA28")]
		public Repeater()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	[TaskIcon("{SkinColor}ReturnFailureIcon.png")]
	[TaskDescription("The return failure task will always return failure except when the child task is running.")]
	public class ReturnFailure : Decorator
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskStatus executionStatus;

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xD6BA58", Offset = "0xD6BA58", VA = "0xD6BA58", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xD6BA74", Offset = "0xD6BA74", VA = "0xD6BA74", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xD6BA7C", Offset = "0xD6BA7C", VA = "0xD6BA7C", Slot = "34")]
		public override TaskStatus Decorate(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xD6BA88", Offset = "0xD6BA88", VA = "0xD6BA88", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xD6BA90", Offset = "0xD6BA90", VA = "0xD6BA90")]
		public ReturnFailure()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	[TaskIcon("{SkinColor}ReturnSuccessIcon.png")]
	[TaskDescription("The return success task will always return success except when the child task is running.")]
	public class ReturnSuccess : Decorator
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskStatus executionStatus;

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xD6BA98", Offset = "0xD6BA98", VA = "0xD6BA98", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xD6BAB4", Offset = "0xD6BAB4", VA = "0xD6BAB4", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xD6BABC", Offset = "0xD6BABC", VA = "0xD6BABC", Slot = "34")]
		public override TaskStatus Decorate(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xD6BACC", Offset = "0xD6BACC", VA = "0xD6BACC", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xD6BAD4", Offset = "0xD6BAD4", VA = "0xD6BAD4")]
		public ReturnSuccess()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	[TaskIcon("{SkinColor}TaskGuardIcon.png")]
	[TaskDescription("The task guard task is similar to a semaphore in multithreaded programming. The task guard task is there to ensure a limited resource is not being overused. \n\nFor example, you may place a task guard above a task that plays an animation. Elsewhere within your behavior tree you may also have another task that plays a different animation but uses the same bones for that animation. Because of this you don't want that animation to play twice at the same time. Placing a task guard will let you specify how many times a particular task can be accessed at the same time.\n\nIn the previous animation task example you would specify an access count of 1. With this setup the animation task can be only controlled by one task at a time. If the first task is playing the animation and a second task wants to control the animation as well, it will either have to wait or skip over the task completely.")]
	public class TaskGuard : Decorator
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The number of times the child tasks can be accessed by parallel tasks at once")]
		public SharedInt maxTaskAccessCount;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The linked tasks that also guard a task. If the task guard is not linked against any other tasks it doesn't have much purpose. Marked as LinkedTask to ensure all tasks linked are linked to the same set of tasks")]
		[LinkedTask]
		public TaskGuard[] linkedTaskGuards;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("If true the task will wait until the child task is available. If false then any unavailable child tasks will be skipped over")]
		public SharedBool waitUntilTaskAvailable;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int executingTasks;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool executing;

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xD6BADC", Offset = "0xD6BADC", VA = "0xD6BADC", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xD6BB50", Offset = "0xD6BB50", VA = "0xD6BB50", Slot = "38")]
		public override void OnChildStarted()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xD6BBE8", Offset = "0xD6BBE8", VA = "0xD6BBE8", Slot = "40")]
		public override TaskStatus OverrideStatus(TaskStatus status)
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xD6BBBC", Offset = "0xD6BBBC", VA = "0xD6BBBC")]
		public void taskExecuting(bool increase)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xD6BC5C", Offset = "0xD6BC5C", VA = "0xD6BC5C", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xD6BCCC", Offset = "0xD6BCCC", VA = "0xD6BCCC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xD6BD0C", Offset = "0xD6BD0C", VA = "0xD6BD0C")]
		public TaskGuard()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	[TaskIcon("{SkinColor}UntilFailureIcon.png")]
	[TaskDescription("The until failure task will keep executing its child task until the child task returns failure.")]
	public class UntilFailure : Decorator
	{
		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskStatus executionStatus;

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xD6BD14", Offset = "0xD6BD14", VA = "0xD6BD14", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xD6BD24", Offset = "0xD6BD24", VA = "0xD6BD24", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xD6BD2C", Offset = "0xD6BD2C", VA = "0xD6BD2C", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xD6BD34", Offset = "0xD6BD34", VA = "0xD6BD34")]
		public UntilFailure()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	[TaskIcon("{SkinColor}UntilSuccessIcon.png")]
	[TaskDescription("The until success task will keep executing its child task until the child task returns success.")]
	public class UntilSuccess : Decorator
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskStatus executionStatus;

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xD6BD3C", Offset = "0xD6BD3C", VA = "0xD6BD3C", Slot = "33")]
		public override bool CanExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xD6BD4C", Offset = "0xD6BD4C", VA = "0xD6BD4C", Slot = "36")]
		public override void OnChildExecuted(TaskStatus childStatus)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xD6BD54", Offset = "0xD6BD54", VA = "0xD6BD54", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xD6BD5C", Offset = "0xD6BD5C", VA = "0xD6BD5C")]
		public UntilSuccess()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	[TaskIcon("{SkinColor}EntryIcon.png")]
	public class EntryTask : ParentTask
	{
		[Token(Token = "0x6002109")]
		[Address(RVA = "0xD6BD64", Offset = "0xD6BD64", VA = "0xD6BD64", Slot = "30")]
		public override int MaxChildren()
		{
			return default(int);
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xD6BD6C", Offset = "0xD6BD6C", VA = "0xD6BD6C")]
		public EntryTask()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityVector3
{
	[Token(Token = "0x20005B2")]
	[TaskDescription("Returns the angle between two Vector3s.")]
	[TaskCategory("Unity/Vector3")]
	public class Angle : Action
	{
		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first Vector3")]
		public SharedVector3 firstVector3;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second Vector3")]
		public SharedVector3 secondVector3;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The angle")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xD6BD74", Offset = "0xD6BD74", VA = "0xD6BD74", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xD6BF0C", Offset = "0xD6BF0C", VA = "0xD6BF0C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xD6BFC4", Offset = "0xD6BFC4", VA = "0xD6BFC4")]
		public Angle()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Clamps the magnitude of the Vector3.")]
	public class ClampMagnitude : Action
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to clamp the magnitude of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The max length of the magnitude")]
		public SharedFloat maxLength;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The clamp magnitude resut")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xD6BFCC", Offset = "0xD6BFCC", VA = "0xD6BFCC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xD6C118", Offset = "0xD6C118", VA = "0xD6C118", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xD6C1D0", Offset = "0xD6C1D0", VA = "0xD6C1D0")]
		public ClampMagnitude()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	[TaskDescription("Returns the distance between two Vector3s.")]
	[TaskCategory("Unity/Vector3")]
	public class Distance : Action
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first Vector3")]
		public SharedVector3 firstVector3;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second Vector3")]
		public SharedVector3 secondVector3;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The distance")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xD6C1D8", Offset = "0xD6C1D8", VA = "0xD6C1D8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xD6C2F4", Offset = "0xD6C2F4", VA = "0xD6C2F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xD6C3AC", Offset = "0xD6C3AC", VA = "0xD6C3AC")]
		public Distance()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the dot product of two Vector3 values.")]
	public class Dot : Action
	{
		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The left hand side of the dot product")]
		public SharedVector3 leftHandSide;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The right hand side of the dot product")]
		public SharedVector3 rightHandSide;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The dot product result")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xD6C3B4", Offset = "0xD6C3B4", VA = "0xD6C3B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xD6C474", Offset = "0xD6C474", VA = "0xD6C474", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xD6C52C", Offset = "0xD6C52C", VA = "0xD6C52C")]
		public Dot()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the forward vector value.")]
	public class GetForwardVector : Action
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xD6C534", Offset = "0xD6C534", VA = "0xD6C534", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xD6C5C8", Offset = "0xD6C5C8", VA = "0xD6C5C8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xD6C628", Offset = "0xD6C628", VA = "0xD6C628")]
		public GetForwardVector()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the magnitude of the Vector3.")]
	public class GetMagnitude : Action
	{
		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to get the magnitude of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The magnitude of the vector")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xD6C630", Offset = "0xD6C630", VA = "0xD6C630", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xD6C71C", Offset = "0xD6C71C", VA = "0xD6C71C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xD6C794", Offset = "0xD6C794", VA = "0xD6C794")]
		public GetMagnitude()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the right vector value.")]
	public class GetRightVector : Action
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedVector3 storeResult;

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xD6C79C", Offset = "0xD6C79C", VA = "0xD6C79C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xD6C830", Offset = "0xD6C830", VA = "0xD6C830", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xD6C890", Offset = "0xD6C890", VA = "0xD6C890")]
		public GetRightVector()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the square magnitude of the Vector3.")]
	public class GetSqrMagnitude : Action
	{
		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to get the square magnitude of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The square magnitude of the vector")]
		public SharedFloat storeResult;

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xD6C898", Offset = "0xD6C898", VA = "0xD6C898", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xD6C92C", Offset = "0xD6C92C", VA = "0xD6C92C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xD6C9A4", Offset = "0xD6C9A4", VA = "0xD6C9A4")]
		public GetSqrMagnitude()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the up vector value.")]
	public class GetUpVector : Action
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xD6C9AC", Offset = "0xD6C9AC", VA = "0xD6C9AC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xD6CA40", Offset = "0xD6CA40", VA = "0xD6CA40", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xD6CAA0", Offset = "0xD6CAA0", VA = "0xD6CAA0")]
		public GetUpVector()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the Vector2 value of the Vector3.")]
	public class GetVector2 : Action
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to get the Vector2 value of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The Vector2 value")]
		[RequiredField]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xD6CAA8", Offset = "0xD6CAA8", VA = "0xD6CAA8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xD6CB28", Offset = "0xD6CB28", VA = "0xD6CB28", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xD6CBD0", Offset = "0xD6CBD0", VA = "0xD6CBD0")]
		public GetVector2()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Stores the X, Y, and Z values of the Vector3.")]
	public class GetXYZ : Action
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to get the values of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The X value")]
		[RequiredField]
		public SharedFloat storeX;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The Y value")]
		[RequiredField]
		public SharedFloat storeY;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[RequiredField]
		[Tooltip("The Z value")]
		public SharedFloat storeZ;

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xD6CBD8", Offset = "0xD6CBD8", VA = "0xD6CBD8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xD6CCB0", Offset = "0xD6CCB0", VA = "0xD6CCB0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xD6CD58", Offset = "0xD6CD58", VA = "0xD6CD58")]
		public GetXYZ()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Lerp the Vector3 by an amount.")]
	public class Lerp : Action
	{
		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from value")]
		public SharedVector3 fromVector3;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to value")]
		public SharedVector3 toVector3;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount to lerp")]
		public SharedFloat lerpAmount;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The lerp resut")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xD6CD60", Offset = "0xD6CD60", VA = "0xD6CD60", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xD6CE7C", Offset = "0xD6CE7C", VA = "0xD6CE7C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xD6CF18", Offset = "0xD6CF18", VA = "0xD6CF18")]
		public Lerp()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Move from the current position to the target position.")]
	public class MoveTowards : Action
	{
		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The current position")]
		public SharedVector3 currentPosition;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The target position")]
		public SharedVector3 targetPosition;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The movement speed")]
		public SharedFloat speed;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The move resut")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xD6CF20", Offset = "0xD6CF20", VA = "0xD6CF20", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xD6D0F4", Offset = "0xD6D0F4", VA = "0xD6D0F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xD6D1EC", Offset = "0xD6D1EC", VA = "0xD6D1EC")]
		public MoveTowards()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Multiply the Vector3 by a float.")]
	public class Multiply : Action
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to multiply of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value to multiply the Vector3 of")]
		public SharedFloat multiplyBy;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The multiplication resut")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xD6D1F4", Offset = "0xD6D1F4", VA = "0xD6D1F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xD6D2C4", Offset = "0xD6D2C4", VA = "0xD6D2C4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xD6D37C", Offset = "0xD6D37C", VA = "0xD6D37C")]
		public Multiply()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	[TaskDescription("Normalize the Vector3.")]
	[TaskCategory("Unity/Vector3")]
	public class Normalize : Action
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to normalize")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The normalized resut")]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xD6D384", Offset = "0xD6D384", VA = "0xD6D384", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xD6D4CC", Offset = "0xD6D4CC", VA = "0xD6D4CC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xD6D56C", Offset = "0xD6D56C", VA = "0xD6D56C")]
		public Normalize()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Performs a math operation on two Vector3s: Add, Subtract, Multiply, Divide, Min, or Max.")]
	public class Operator : Action
	{
		[Token(Token = "0x20005C2")]
		public enum Operation
		{
			[Token(Token = "0x4001BE9")]
			Add,
			[Token(Token = "0x4001BEA")]
			Subtract,
			[Token(Token = "0x4001BEB")]
			Scale
		}

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first Vector3")]
		public SharedVector3 firstVector3;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second Vector3")]
		public SharedVector3 secondVector3;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The variable to store the result")]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xD6D574", Offset = "0xD6D574", VA = "0xD6D574", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xD6D6CC", Offset = "0xD6D6CC", VA = "0xD6D6CC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xD6D7B0", Offset = "0xD6D7B0", VA = "0xD6D7B0")]
		public Operator()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Rotate the current rotation to the target rotation.")]
	public class RotateTowards : Action
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The current rotation in euler angles")]
		public SharedVector3 currentRotation;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The target rotation in euler angles")]
		public SharedVector3 targetRotation;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The maximum delta of the degrees")]
		public SharedFloat maxDegreesDelta;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The maximum delta of the magnitude")]
		public SharedFloat maxMagnitudeDelta;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The rotation resut")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xD6D7B8", Offset = "0xD6D7B8", VA = "0xD6D7B8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xD6D8F8", Offset = "0xD6D8F8", VA = "0xD6D8F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xD6DA08", Offset = "0xD6DA08", VA = "0xD6DA08")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Sets the value of the Vector3.")]
	public class SetValue : Action
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to get the values of")]
		public SharedVector3 vector3Value;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The Vector3 to set the values of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xD6DA10", Offset = "0xD6DA10", VA = "0xD6DA10", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xD6DA90", Offset = "0xD6DA90", VA = "0xD6DA90", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xD6DB30", Offset = "0xD6DB30", VA = "0xD6DB30")]
		public SetValue()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	[TaskCategory("Unity/Vector3")]
	[TaskDescription("Sets the X, Y, and Z values of the Vector3.")]
	public class SetXYZ : Action
	{
		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector3 to set the values of")]
		public SharedVector3 vector3Variable;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The X value. Set to None to have the value ignored")]
		public SharedFloat xValue;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The Y value. Set to None to have the value ignored")]
		public SharedFloat yValue;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The Z value. Set to None to have the value ignored")]
		public SharedFloat zValue;

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xD6DB38", Offset = "0xD6DB38", VA = "0xD6DB38", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xD6DC68", Offset = "0xD6DC68", VA = "0xD6DC68", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xD6DD04", Offset = "0xD6DD04", VA = "0xD6DD04")]
		public SetXYZ()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityVector2
{
	[Token(Token = "0x20005C6")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Clamps the magnitude of the Vector2.")]
	public class ClampMagnitude : Action
	{
		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to clamp the magnitude of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The max length of the magnitude")]
		public SharedFloat maxLength;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The clamp magnitude resut")]
		[RequiredField]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xD6DD0C", Offset = "0xD6DD0C", VA = "0xD6DD0C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xD6DE38", Offset = "0xD6DE38", VA = "0xD6DE38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xD6DEE8", Offset = "0xD6DEE8", VA = "0xD6DEE8")]
		public ClampMagnitude()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Returns the distance between two Vector2s.")]
	public class Distance : Action
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first Vector2")]
		public SharedVector2 firstVector2;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second Vector2")]
		public SharedVector2 secondVector2;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The distance")]
		public SharedFloat storeResult;

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xD6DEF0", Offset = "0xD6DEF0", VA = "0xD6DEF0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xD6DFF0", Offset = "0xD6DFF0", VA = "0xD6DFF0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xD6E0A0", Offset = "0xD6E0A0", VA = "0xD6E0A0")]
		public Distance()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	[TaskDescription("Stores the dot product of two Vector2 values.")]
	[TaskCategory("Unity/Vector2")]
	public class Dot : Action
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The left hand side of the dot product")]
		public SharedVector2 leftHandSide;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The right hand side of the dot product")]
		public SharedVector2 rightHandSide;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The dot product result")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xD6E0A8", Offset = "0xD6E0A8", VA = "0xD6E0A8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xD6E154", Offset = "0xD6E154", VA = "0xD6E154", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xD6E204", Offset = "0xD6E204", VA = "0xD6E204")]
		public Dot()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Stores the magnitude of the Vector2.")]
	public class GetMagnitude : Action
	{
		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to get the magnitude of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The magnitude of the vector")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xD6E20C", Offset = "0xD6E20C", VA = "0xD6E20C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xD6E2E4", Offset = "0xD6E2E4", VA = "0xD6E2E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xD6E358", Offset = "0xD6E358", VA = "0xD6E358")]
		public GetMagnitude()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	[TaskDescription("Stores the right vector value.")]
	[TaskCategory("Unity/Vector2")]
	public class GetRightVector : Action
	{
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xD6E360", Offset = "0xD6E360", VA = "0xD6E360", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xD6E3F0", Offset = "0xD6E3F0", VA = "0xD6E3F0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xD6E44C", Offset = "0xD6E44C", VA = "0xD6E44C")]
		public GetRightVector()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Stores the square magnitude of the Vector2.")]
	public class GetSqrMagnitude : Action
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to get the square magnitude of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The square magnitude of the vector")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xD6E454", Offset = "0xD6E454", VA = "0xD6E454", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xD6E4E0", Offset = "0xD6E4E0", VA = "0xD6E4E0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xD6E554", Offset = "0xD6E554", VA = "0xD6E554")]
		public GetSqrMagnitude()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Stores the up vector value.")]
	public class GetUpVector : Action
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xD6E55C", Offset = "0xD6E55C", VA = "0xD6E55C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xD6E5EC", Offset = "0xD6E5EC", VA = "0xD6E5EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xD6E648", Offset = "0xD6E648", VA = "0xD6E648")]
		public GetUpVector()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Stores the Vector3 value of the Vector2.")]
	public class GetVector3 : Action
	{
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to get the Vector3 value of")]
		public SharedVector2 vector3Variable;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The Vector3 value")]
		[RequiredField]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xD6E650", Offset = "0xD6E650", VA = "0xD6E650", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xD6E6D4", Offset = "0xD6E6D4", VA = "0xD6E6D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xD6E77C", Offset = "0xD6E77C", VA = "0xD6E77C")]
		public GetVector3()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Stores the X and Y values of the Vector2.")]
	public class GetXY : Action
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to get the values of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The X value")]
		[RequiredField]
		public SharedFloat storeX;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The Y value")]
		[RequiredField]
		public SharedFloat storeY;

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xD6E784", Offset = "0xD6E784", VA = "0xD6E784", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xD6E834", Offset = "0xD6E834", VA = "0xD6E834", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xD6E8BC", Offset = "0xD6E8BC", VA = "0xD6E8BC")]
		public GetXY()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	[TaskDescription("Lerp the Vector2 by an amount.")]
	[TaskCategory("Unity/Vector2")]
	public class Lerp : Action
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from value")]
		public SharedVector2 fromVector2;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to value")]
		public SharedVector2 toVector2;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount to lerp")]
		public SharedFloat lerpAmount;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The lerp resut")]
		[RequiredField]
		public SharedVector2 storeResult;

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xD6E8C4", Offset = "0xD6E8C4", VA = "0xD6E8C4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xD6E9C4", Offset = "0xD6E9C4", VA = "0xD6E9C4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xD6EAB0", Offset = "0xD6EAB0", VA = "0xD6EAB0")]
		public Lerp()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	[TaskDescription("Move from the current position to the target position.")]
	[TaskCategory("Unity/Vector2")]
	public class MoveTowards : Action
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The current position")]
		public SharedVector2 currentPosition;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The target position")]
		public SharedVector2 targetPosition;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The movement speed")]
		public SharedFloat speed;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The move resut")]
		[RequiredField]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xD6EAB8", Offset = "0xD6EAB8", VA = "0xD6EAB8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xD6EC50", Offset = "0xD6EC50", VA = "0xD6EC50", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xD6ED3C", Offset = "0xD6ED3C", VA = "0xD6ED3C")]
		public MoveTowards()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Multiply the Vector2 by a float.")]
	public class Multiply : Action
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to multiply of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value to multiply the Vector2 of")]
		public SharedFloat multiplyBy;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The multiplication resut")]
		[RequiredField]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xD6ED44", Offset = "0xD6ED44", VA = "0xD6ED44", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xD6EE04", Offset = "0xD6EE04", VA = "0xD6EE04", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xD6EE8C", Offset = "0xD6EE8C", VA = "0xD6EE8C")]
		public Multiply()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Normalize the Vector2.")]
	public class Normalize : Action
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to normalize")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The normalized resut")]
		public SharedVector2 storeResult;

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xD6EE94", Offset = "0xD6EE94", VA = "0xD6EE94", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xD6EFC0", Offset = "0xD6EFC0", VA = "0xD6EFC0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xD6F058", Offset = "0xD6F058", VA = "0xD6F058")]
		public Normalize()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Performs a math operation on two Vector2s: Add, Subtract, Multiply, Divide, Min, or Max.")]
	public class Operator : Action
	{
		[Token(Token = "0x20005D4")]
		public enum Operation
		{
			[Token(Token = "0x4001C1D")]
			Add,
			[Token(Token = "0x4001C1E")]
			Subtract,
			[Token(Token = "0x4001C1F")]
			Scale
		}

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first Vector2")]
		public SharedVector2 firstVector2;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second Vector2")]
		public SharedVector2 secondVector2;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The variable to store the result")]
		public SharedVector2 storeResult;

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xD6F060", Offset = "0xD6F060", VA = "0xD6F060", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xD6F198", Offset = "0xD6F198", VA = "0xD6F198", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xD6F270", Offset = "0xD6F270", VA = "0xD6F270")]
		public Operator()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	[TaskCategory("Unity/Vector2")]
	[TaskDescription("Sets the value of the Vector2.")]
	public class SetValue : Action
	{
		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to get the values of")]
		public SharedVector2 vector2Value;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The Vector2 to set the values of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xD6F278", Offset = "0xD6F278", VA = "0xD6F278", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xD6F2F8", Offset = "0xD6F2F8", VA = "0xD6F2F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xD6F390", Offset = "0xD6F390", VA = "0xD6F390")]
		public SetValue()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	[TaskDescription("Sets the X and Y values of the Vector2.")]
	[TaskCategory("Unity/Vector2")]
	public class SetXY : Action
	{
		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Vector2 to set the values of")]
		public SharedVector2 vector2Variable;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The X value. Set to None to have the value ignored")]
		public SharedFloat xValue;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The Y value. Set to None to have the value ignored")]
		public SharedFloat yValue;

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xD6F398", Offset = "0xD6F398", VA = "0xD6F398", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xD6F490", Offset = "0xD6F490", VA = "0xD6F490", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xD6F51C", Offset = "0xD6F51C", VA = "0xD6F51C")]
		public SetXY()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityTransform
{
	[Token(Token = "0x20005D7")]
	[TaskDescription("Finds a transform by name. Returns success if an object is found.")]
	[TaskCategory("Unity/Transform")]
	public class Find : Action
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The transform name to find")]
		public SharedString transformName;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The object found by name")]
		public SharedTransform storeValue;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform targetTransform;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xD6F524", Offset = "0xD6F524", VA = "0xD6F524", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xD6F628", Offset = "0xD6F628", VA = "0xD6F628", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xD6F7A4", Offset = "0xD6F7A4", VA = "0xD6F7A4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xD6F7DC", Offset = "0xD6F7DC", VA = "0xD6F7DC")]
		public Find()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Gets the Angle between a GameObject's forward direction and a target. Returns Success.")]
	public class GetAngleToTarget : Action
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The target object to measure the angle to. If null the targetPosition will be used.")]
		public SharedGameObject targetObject;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The world position to measure an angle to. If the targetObject is also not null, this value is used as an offset from that object's position.")]
		public SharedVector3 targetPosition;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Ignore height differences when calculating the angle?")]
		public SharedBool ignoreHeight;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[RequiredField]
		[Tooltip("The angle to the target")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform targetTransform;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xD6F7E4", Offset = "0xD6F7E4", VA = "0xD6F7E4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xD6F8E8", Offset = "0xD6F8E8", VA = "0xD6F8E8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xD6FC00", Offset = "0xD6FC00", VA = "0xD6FC00", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xD6FCAC", Offset = "0xD6FCAC", VA = "0xD6FCAC")]
		public GetAngleToTarget()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the transform child at the specified index. Returns Success.")]
	public class GetChild : Action
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The index of the child")]
		public SharedInt index;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The child of the Transform")]
		public SharedTransform storeValue;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform targetTransform;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xD6FCDC", Offset = "0xD6FCDC", VA = "0xD6FCDC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xD6FDE0", Offset = "0xD6FDE0", VA = "0xD6FDE0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xD6FF00", Offset = "0xD6FF00", VA = "0xD6FF00", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xD6FF40", Offset = "0xD6FF40", VA = "0xD6FF40")]
		public GetChild()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the number of children a Transform has. Returns Success.")]
	public class GetChildCount : Action
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The number of children")]
		public SharedInt storeValue;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xD6FF48", Offset = "0xD6FF48", VA = "0xD6FF48", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xD7004C", Offset = "0xD7004C", VA = "0xD7004C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xD70144", Offset = "0xD70144", VA = "0xD70144", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xD70174", Offset = "0xD70174", VA = "0xD70174")]
		public GetChildCount()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	[TaskDescription("Stores the euler angles of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class GetEulerAngles : Action
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The euler angles of the Transform")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xD7017C", Offset = "0xD7017C", VA = "0xD7017C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xD70280", Offset = "0xD70280", VA = "0xD70280", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xD70374", Offset = "0xD70374", VA = "0xD70374", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xD703E0", Offset = "0xD703E0", VA = "0xD703E0")]
		public GetEulerAngles()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the forward vector of the Transform. Returns Success.")]
	public class GetForwardVector : Action
	{
		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Transform")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xD703E8", Offset = "0xD703E8", VA = "0xD703E8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xD704EC", Offset = "0xD704EC", VA = "0xD704EC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xD705E0", Offset = "0xD705E0", VA = "0xD705E0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xD7064C", Offset = "0xD7064C", VA = "0xD7064C")]
		public GetForwardVector()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the local euler angles of the Transform. Returns Success.")]
	public class GetLocalEulerAngles : Action
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local euler angles of the Transform")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xD70654", Offset = "0xD70654", VA = "0xD70654", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xD70758", Offset = "0xD70758", VA = "0xD70758", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xD7084C", Offset = "0xD7084C", VA = "0xD7084C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xD708B8", Offset = "0xD708B8", VA = "0xD708B8")]
		public GetLocalEulerAngles()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the local position of the Transform. Returns Success.")]
	public class GetLocalPosition : Action
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local position of the Transform")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xD708C0", Offset = "0xD708C0", VA = "0xD708C0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xD709C4", Offset = "0xD709C4", VA = "0xD709C4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xD70AB8", Offset = "0xD70AB8", VA = "0xD70AB8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xD70B24", Offset = "0xD70B24", VA = "0xD70B24")]
		public GetLocalPosition()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the local rotation of the Transform. Returns Success.")]
	public class GetLocalRotation : Action
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The local rotation of the Transform")]
		public SharedQuaternion storeValue;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xD70B2C", Offset = "0xD70B2C", VA = "0xD70B2C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xD70C30", Offset = "0xD70C30", VA = "0xD70C30", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xD70D24", Offset = "0xD70D24", VA = "0xD70D24", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xD70D90", Offset = "0xD70D90", VA = "0xD70D90")]
		public GetLocalRotation()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	[TaskDescription("Stores the local scale of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class GetLocalScale : Action
	{
		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local scale of the Transform")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xD70D98", Offset = "0xD70D98", VA = "0xD70D98", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xD70E9C", Offset = "0xD70E9C", VA = "0xD70E9C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xD70F90", Offset = "0xD70F90", VA = "0xD70F90", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xD70FFC", Offset = "0xD70FFC", VA = "0xD70FFC")]
		public GetLocalScale()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	[TaskDescription("Stores the parent of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class GetParent : Action
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The parent of the Transform")]
		public SharedTransform storeValue;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xD71004", Offset = "0xD71004", VA = "0xD71004", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xD71108", Offset = "0xD71108", VA = "0xD71108", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xD71200", Offset = "0xD71200", VA = "0xD71200", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xD71228", Offset = "0xD71228", VA = "0xD71228")]
		public GetParent()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	[TaskDescription("Stores the position of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class GetPosition : Action
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Can the target GameObject be empty?")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xD71230", Offset = "0xD71230", VA = "0xD71230", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xD71334", Offset = "0xD71334", VA = "0xD71334", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xD71428", Offset = "0xD71428", VA = "0xD71428", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xD71494", Offset = "0xD71494", VA = "0xD71494")]
		public GetPosition()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	[TaskDescription("Stores the right vector of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class GetRightVector : Action
	{
		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The position of the Transform")]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xD7149C", Offset = "0xD7149C", VA = "0xD7149C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xD715A0", Offset = "0xD715A0", VA = "0xD715A0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xD71694", Offset = "0xD71694", VA = "0xD71694", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xD71700", Offset = "0xD71700", VA = "0xD71700")]
		public GetRightVector()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	[TaskDescription("Stores the rotation of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class GetRotation : Action
	{
		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The rotation of the Transform")]
		public SharedQuaternion storeValue;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xD71708", Offset = "0xD71708", VA = "0xD71708", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xD7180C", Offset = "0xD7180C", VA = "0xD7180C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xD71900", Offset = "0xD71900", VA = "0xD71900", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xD7196C", Offset = "0xD7196C", VA = "0xD7196C")]
		public GetRotation()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Stores the up vector of the Transform. Returns Success.")]
	public class GetUpVector : Action
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Transform")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xD71974", Offset = "0xD71974", VA = "0xD71974", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xD71A78", Offset = "0xD71A78", VA = "0xD71A78", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xD71B6C", Offset = "0xD71B6C", VA = "0xD71B6C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xD71BD8", Offset = "0xD71BD8", VA = "0xD71BD8")]
		public GetUpVector()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Returns Success if the transform is a child of the specified GameObject.")]
	public class IsChildOf : Conditional
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The interested transform")]
		public SharedTransform transformName;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xD71BE0", Offset = "0xD71BE0", VA = "0xD71BE0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xD71CE4", Offset = "0xD71CE4", VA = "0xD71CE4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xD71DE4", Offset = "0xD71DE4", VA = "0xD71DE4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xD71E0C", Offset = "0xD71E0C", VA = "0xD71E0C")]
		public IsChildOf()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Rotates the transform so the forward vector points at worldPosition. Returns Success.")]
	public class LookAt : Action
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The GameObject to look at. If null the world position will be used.")]
		public SharedGameObject targetLookAt;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Point to look at")]
		public SharedVector3 worldPosition;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Vector specifying the upward direction")]
		public Vector3 worldUp;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform targetTransform;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xD71E14", Offset = "0xD71E14", VA = "0xD71E14", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xD71F18", Offset = "0xD71F18", VA = "0xD71F18", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xD720A0", Offset = "0xD720A0", VA = "0xD720A0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xD72154", Offset = "0xD72154", VA = "0xD72154")]
		public LookAt()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Applies a rotation. Returns Success.")]
	public class Rotate : Action
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Amount to rotate")]
		public SharedVector3 eulerAngles;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Specifies which axis the rotation is relative to")]
		public Space relativeTo;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform targetTransform;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xD7215C", Offset = "0xD7215C", VA = "0xD7215C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xD72260", Offset = "0xD72260", VA = "0xD72260", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xD72358", Offset = "0xD72358", VA = "0xD72358", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xD723D0", Offset = "0xD723D0", VA = "0xD723D0")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Applies a rotation. Returns Success.")]
	public class RotateAround : Action
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Point to rotate around")]
		public SharedVector3 point;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Axis to rotate around")]
		public SharedVector3 axis;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Amount to rotate")]
		public SharedFloat angle;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform targetTransform;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xD723E0", Offset = "0xD723E0", VA = "0xD723E0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xD724E4", Offset = "0xD724E4", VA = "0xD724E4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xD72658", Offset = "0xD72658", VA = "0xD72658", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xD7271C", Offset = "0xD7271C", VA = "0xD7271C")]
		public RotateAround()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the euler angles of the Transform. Returns Success.")]
	public class SetEulerAngles : Action
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The euler angles of the Transform")]
		public SharedVector3 eulerAngles;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xD72724", Offset = "0xD72724", VA = "0xD72724", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xD72828", Offset = "0xD72828", VA = "0xD72828", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xD7291C", Offset = "0xD7291C", VA = "0xD7291C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xD72988", Offset = "0xD72988", VA = "0xD72988")]
		public SetEulerAngles()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the forward vector of the Transform. Returns Success.")]
	public class SetForwardVector : Action
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Transform")]
		public SharedVector3 position;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xD72990", Offset = "0xD72990", VA = "0xD72990", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xD72A94", Offset = "0xD72A94", VA = "0xD72A94", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xD72B88", Offset = "0xD72B88", VA = "0xD72B88", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xD72BF4", Offset = "0xD72BF4", VA = "0xD72BF4")]
		public SetForwardVector()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the local euler angles of the Transform. Returns Success.")]
	public class SetLocalEulerAngles : Action
	{
		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local euler angles of the Transform")]
		public SharedVector3 localEulerAngles;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xD72BFC", Offset = "0xD72BFC", VA = "0xD72BFC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xD72D00", Offset = "0xD72D00", VA = "0xD72D00", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xD72DF4", Offset = "0xD72DF4", VA = "0xD72DF4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xD72E60", Offset = "0xD72E60", VA = "0xD72E60")]
		public SetLocalEulerAngles()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the local position of the Transform. Returns Success.")]
	public class SetLocalPosition : Action
	{
		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local position of the Transform")]
		public SharedVector3 localPosition;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xD72E68", Offset = "0xD72E68", VA = "0xD72E68", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xD72F6C", Offset = "0xD72F6C", VA = "0xD72F6C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xD73060", Offset = "0xD73060", VA = "0xD73060", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xD730CC", Offset = "0xD730CC", VA = "0xD730CC")]
		public SetLocalPosition()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the local rotation of the Transform. Returns Success.")]
	public class SetLocalRotation : Action
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local rotation of the Transform")]
		public SharedQuaternion localRotation;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xD730D4", Offset = "0xD730D4", VA = "0xD730D4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xD731D8", Offset = "0xD731D8", VA = "0xD731D8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xD732CC", Offset = "0xD732CC", VA = "0xD732CC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xD73338", Offset = "0xD73338", VA = "0xD73338")]
		public SetLocalRotation()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the local scale of the Transform. Returns Success.")]
	public class SetLocalScale : Action
	{
		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The local scale of the Transform")]
		public SharedVector3 localScale;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xD73340", Offset = "0xD73340", VA = "0xD73340", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xD73444", Offset = "0xD73444", VA = "0xD73444", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xD73538", Offset = "0xD73538", VA = "0xD73538", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xD735A4", Offset = "0xD735A4", VA = "0xD735A4")]
		public SetLocalScale()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the parent of the Transform. Returns Success.")]
	public class SetParent : Action
	{
		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The parent of the Transform")]
		public SharedTransform parent;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xD735AC", Offset = "0xD735AC", VA = "0xD735AC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xD736B0", Offset = "0xD736B0", VA = "0xD736B0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xD737A8", Offset = "0xD737A8", VA = "0xD737A8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xD737D0", Offset = "0xD737D0", VA = "0xD737D0")]
		public SetParent()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the position of the Transform. Returns Success.")]
	public class SetPosition : Action
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Transform")]
		public SharedVector3 position;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xD737D8", Offset = "0xD737D8", VA = "0xD737D8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xD738DC", Offset = "0xD738DC", VA = "0xD738DC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xD739D0", Offset = "0xD739D0", VA = "0xD739D0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xD73A3C", Offset = "0xD73A3C", VA = "0xD73A3C")]
		public SetPosition()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	[TaskDescription("Sets the right vector of the Transform. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class SetRightVector : Action
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Transform")]
		public SharedVector3 position;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xD73A44", Offset = "0xD73A44", VA = "0xD73A44", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xD73B48", Offset = "0xD73B48", VA = "0xD73B48", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xD73C3C", Offset = "0xD73C3C", VA = "0xD73C3C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xD73CA8", Offset = "0xD73CA8", VA = "0xD73CA8")]
		public SetRightVector()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the rotation of the Transform. Returns Success.")]
	public class SetRotation : Action
	{
		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The rotation of the Transform")]
		public SharedQuaternion rotation;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xD73CB0", Offset = "0xD73CB0", VA = "0xD73CB0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xD73DB4", Offset = "0xD73DB4", VA = "0xD73DB4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xD73EA8", Offset = "0xD73EA8", VA = "0xD73EA8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xD73F14", Offset = "0xD73F14", VA = "0xD73F14")]
		public SetRotation()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	[TaskCategory("Unity/Transform")]
	[TaskDescription("Sets the up vector of the Transform. Returns Success.")]
	public class SetUpVector : Action
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Transform")]
		public SharedVector3 position;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform targetTransform;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xD73F1C", Offset = "0xD73F1C", VA = "0xD73F1C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xD74020", Offset = "0xD74020", VA = "0xD74020", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xD74114", Offset = "0xD74114", VA = "0xD74114", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xD74180", Offset = "0xD74180", VA = "0xD74180")]
		public SetUpVector()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	[TaskDescription("Moves the transform in the direction and distance of translation. Returns Success.")]
	[TaskCategory("Unity/Transform")]
	public class Translate : Action
	{
		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Move direction and distance")]
		public SharedVector3 translation;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Specifies which axis the rotation is relative to")]
		public Space relativeTo;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform targetTransform;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xD74188", Offset = "0xD74188", VA = "0xD74188", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xD7428C", Offset = "0xD7428C", VA = "0xD7428C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xD74384", Offset = "0xD74384", VA = "0xD74384", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xD743FC", Offset = "0xD743FC", VA = "0xD743FC")]
		public Translate()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.Timeline
{
	[Token(Token = "0x20005F6")]
	[TaskDescription("Is the timeline currently paused?")]
	[TaskCategory("Unity/Timeline")]
	public class IsPaused : Conditional
	{
		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xD7440C", Offset = "0xD7440C", VA = "0xD7440C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xD74510", Offset = "0xD74510", VA = "0xD74510", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xD745E4", Offset = "0xD745E4", VA = "0xD745E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xD745F0", Offset = "0xD745F0", VA = "0xD745F0")]
		public IsPaused()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	[TaskDescription("Is the timeline currently playing?")]
	[TaskCategory("Unity/Timeline")]
	public class IsPlaying : Conditional
	{
		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xD745F8", Offset = "0xD745F8", VA = "0xD745F8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xD746FC", Offset = "0xD746FC", VA = "0xD746FC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xD747D0", Offset = "0xD747D0", VA = "0xD747D0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xD747DC", Offset = "0xD747DC", VA = "0xD747DC")]
		public IsPlaying()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	[TaskDescription("Pauses playback of the currently running playable.")]
	[TaskCategory("Unity/Timeline")]
	public class Pause : Action
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xD747E4", Offset = "0xD747E4", VA = "0xD747E4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xD748E8", Offset = "0xD748E8", VA = "0xD748E8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xD749B4", Offset = "0xD749B4", VA = "0xD749B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xD749C0", Offset = "0xD749C0", VA = "0xD749C0")]
		public Pause()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	[TaskDescription("Instatiates a Playable using the provided PlayableAsset and starts playback.")]
	[TaskCategory("Unity/Timeline")]
	public class Play : Action
	{
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("An asset to instantiate a playable from.")]
		public PlayableAsset playableAsset;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Should the task be stopped when the timeline has stopped playing?")]
		public SharedBool stopWhenComplete;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool playbackStarted;

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xD749C8", Offset = "0xD749C8", VA = "0xD749C8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xD74AC8", Offset = "0xD74AC8", VA = "0xD74AC8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xD74C58", Offset = "0xD74C58", VA = "0xD74C58", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xD74C98", Offset = "0xD74C98", VA = "0xD74C98")]
		public Play()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	[TaskCategory("Unity/Timeline")]
	[TaskDescription("Resume playing a paused playable.")]
	public class Resume : Action
	{
		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Should the task be stopped when the timeline has stopped playing?")]
		public SharedBool stopWhenComplete;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool playbackStarted;

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xD74CA0", Offset = "0xD74CA0", VA = "0xD74CA0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xD74DA0", Offset = "0xD74DA0", VA = "0xD74DA0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xD74EE4", Offset = "0xD74EE4", VA = "0xD74EE4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xD74F14", Offset = "0xD74F14", VA = "0xD74F14")]
		public Resume()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	[TaskCategory("Unity/Timeline")]
	[TaskDescription("Stops playback of the current Playable and destroys the corresponding graph.")]
	public class Stop : Action
	{
		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xD74F1C", Offset = "0xD74F1C", VA = "0xD74F1C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xD75020", Offset = "0xD75020", VA = "0xD75020", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xD750EC", Offset = "0xD750EC", VA = "0xD750EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xD750F8", Offset = "0xD750F8", VA = "0xD750F8")]
		public Stop()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityTime
{
	[Token(Token = "0x20005FC")]
	[TaskCategory("Unity/Time")]
	[TaskDescription("Returns the time in seconds it took to complete the last frame.")]
	public class GetDeltaTime : Action
	{
		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xD75100", Offset = "0xD75100", VA = "0xD75100", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xD75164", Offset = "0xD75164", VA = "0xD75164", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xD75188", Offset = "0xD75188", VA = "0xD75188")]
		public GetDeltaTime()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	[TaskDescription("Returns the real time in seconds since the game started.")]
	[TaskCategory("Unity/Time")]
	public class GetRealtimeSinceStartup : Action
	{
		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xD75190", Offset = "0xD75190", VA = "0xD75190", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xD751F4", Offset = "0xD751F4", VA = "0xD751F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xD75218", Offset = "0xD75218", VA = "0xD75218")]
		public GetRealtimeSinceStartup()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	[TaskCategory("Unity/Time")]
	[TaskDescription("Returns the time in second since the start of the game.")]
	public class GetTime : Action
	{
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xD75220", Offset = "0xD75220", VA = "0xD75220", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xD75284", Offset = "0xD75284", VA = "0xD75284", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xD752A8", Offset = "0xD752A8", VA = "0xD752A8")]
		public GetTime()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	[TaskCategory("Unity/Time")]
	[TaskDescription("Returns the scale at which time is passing.")]
	public class GetTimeScale : Action
	{
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xD752B0", Offset = "0xD752B0", VA = "0xD752B0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xD75314", Offset = "0xD75314", VA = "0xD75314", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xD75338", Offset = "0xD75338", VA = "0xD75338")]
		public GetTimeScale()
		{
		}
	}
	[Token(Token = "0x2000600")]
	[TaskCategory("Unity/Time")]
	[TaskDescription("Sets the scale at which time is passing.")]
	public class SetTimeScale : Action
	{
		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The timescale")]
		public SharedFloat timeScale;

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xD75340", Offset = "0xD75340", VA = "0xD75340", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xD753A0", Offset = "0xD753A0", VA = "0xD753A0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xD753F4", Offset = "0xD753F4", VA = "0xD753F4")]
		public SetTimeScale()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityString
{
	[Token(Token = "0x2000601")]
	[TaskDescription("Creates a string from multiple other strings.")]
	[TaskCategory("Unity/String")]
	public class BuildString : Action
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The array of strings")]
		public SharedString[] source;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedString storeResult;

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xD753FC", Offset = "0xD753FC", VA = "0xD753FC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xD75510", Offset = "0xD75510", VA = "0xD75510", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xD75538", Offset = "0xD75538", VA = "0xD75538")]
		public BuildString()
		{
		}
	}
	[Token(Token = "0x2000602")]
	[TaskCategory("Unity/String")]
	[TaskDescription("Compares the first string to the second string. Returns an int which indicates whether the first string precedes, matches, or follows the second string.")]
	public class CompareTo : Action
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The string to compare")]
		public SharedString firstString;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The string to compare to")]
		public SharedString secondString;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedInt storeResult;

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xD75540", Offset = "0xD75540", VA = "0xD75540", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xD755F0", Offset = "0xD755F0", VA = "0xD755F0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xD75674", Offset = "0xD75674", VA = "0xD75674")]
		public CompareTo()
		{
		}
	}
	[Token(Token = "0x2000603")]
	[TaskDescription("Stores a string with the specified format.")]
	[TaskCategory("Unity/String")]
	public class Format : Action
	{
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The format of the string")]
		public SharedString format;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Any variables to appear in the string")]
		public SharedGenericVariable[] variables;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The result of the format")]
		public SharedString storeResult;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object[] variableValues;

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xD7567C", Offset = "0xD7567C", VA = "0xD7567C", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xD756E0", Offset = "0xD756E0", VA = "0xD756E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xD75910", Offset = "0xD75910", VA = "0xD75910", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xD75984", Offset = "0xD75984", VA = "0xD75984")]
		public Format()
		{
		}
	}
	[Token(Token = "0x2000604")]
	[TaskCategory("Unity/String")]
	[TaskDescription("Stores the length of the string")]
	public class GetLength : Action
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The target string")]
		public SharedString targetString;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedInt storeResult;

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xD7598C", Offset = "0xD7598C", VA = "0xD7598C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xD75A14", Offset = "0xD75A14", VA = "0xD75A14", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xD75A80", Offset = "0xD75A80", VA = "0xD75A80")]
		public GetLength()
		{
		}
	}
	[Token(Token = "0x2000605")]
	[TaskCategory("Unity/String")]
	[TaskDescription("Randomly selects a string from the array of strings.")]
	public class GetRandomString : Action
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The array of strings")]
		public SharedString[] source;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedString storeResult;

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xD75A88", Offset = "0xD75A88", VA = "0xD75A88", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xD75B38", Offset = "0xD75B38", VA = "0xD75B38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xD75B60", Offset = "0xD75B60", VA = "0xD75B60")]
		public GetRandomString()
		{
		}
	}
	[Token(Token = "0x2000606")]
	[TaskDescription("Stores a substring of the target string")]
	[TaskCategory("Unity/String")]
	public class GetSubstring : Action
	{
		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The target string")]
		public SharedString targetString;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start substring index")]
		public SharedInt startIndex;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The length of the substring. Don't use if -1")]
		public SharedInt length;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedString storeResult;

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xD75B68", Offset = "0xD75B68", VA = "0xD75B68", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xD75C88", Offset = "0xD75C88", VA = "0xD75C88", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xD75D24", Offset = "0xD75D24", VA = "0xD75D24")]
		public GetSubstring()
		{
		}
	}
	[Token(Token = "0x2000607")]
	[TaskCategory("Unity/String")]
	[TaskDescription("Returns success if the string is null or empty")]
	public class IsNullOrEmpty : Conditional
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The target string")]
		public SharedString targetString;

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xD75D6C", Offset = "0xD75D6C", VA = "0xD75D6C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xD75DD4", Offset = "0xD75DD4", VA = "0xD75DD4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xD75E28", Offset = "0xD75E28", VA = "0xD75E28")]
		public IsNullOrEmpty()
		{
		}
	}
	[Token(Token = "0x2000608")]
	[TaskCategory("Unity/String")]
	[TaskDescription("Replaces a string with the new string")]
	public class Replace : Action
	{
		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The target string")]
		public SharedString targetString;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The old replace")]
		public SharedString oldString;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The new string")]
		public SharedString newString;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedString storeResult;

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xD75E30", Offset = "0xD75E30", VA = "0xD75E30", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xD75F04", Offset = "0xD75F04", VA = "0xD75F04", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xD75FA0", Offset = "0xD75FA0", VA = "0xD75FA0")]
		public Replace()
		{
		}
	}
	[Token(Token = "0x2000609")]
	[TaskCategory("Unity/String")]
	[TaskDescription("Sets the variable string to the value string.")]
	public class SetString : Action
	{
		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The target string")]
		public SharedString variable;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value string")]
		public SharedString value;

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xD75FA8", Offset = "0xD75FA8", VA = "0xD75FA8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xD7602C", Offset = "0xD7602C", VA = "0xD7602C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xD76098", Offset = "0xD76098", VA = "0xD76098")]
		public SetString()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnitySphereCollider
{
	[Token(Token = "0x200060A")]
	[TaskCategory("Unity/SphereCollider")]
	[TaskDescription("Stores the center of the SphereCollider. Returns Success.")]
	public class GetCenter : Action
	{
		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The center of the SphereCollider")]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SphereCollider sphereCollider;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xD760A0", Offset = "0xD760A0", VA = "0xD760A0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xD761A4", Offset = "0xD761A4", VA = "0xD761A4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xD76298", Offset = "0xD76298", VA = "0xD76298", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xD762F8", Offset = "0xD762F8", VA = "0xD762F8")]
		public GetCenter()
		{
		}
	}
	[Token(Token = "0x200060B")]
	[TaskCategory("Unity/SphereCollider")]
	[TaskDescription("Stores the radius of the SphereCollider. Returns Success.")]
	public class GetRadius : Action
	{
		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the SphereCollider")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SphereCollider sphereCollider;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xD76300", Offset = "0xD76300", VA = "0xD76300", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xD76404", Offset = "0xD76404", VA = "0xD76404", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xD764F8", Offset = "0xD764F8", VA = "0xD764F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xD76528", Offset = "0xD76528", VA = "0xD76528")]
		public GetRadius()
		{
		}
	}
	[Token(Token = "0x200060C")]
	[TaskCategory("Unity/SphereCollider")]
	[TaskDescription("Sets the center of the SphereCollider. Returns Success.")]
	public class SetCenter : Action
	{
		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of the SphereCollider")]
		public SharedVector3 center;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SphereCollider sphereCollider;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xD76530", Offset = "0xD76530", VA = "0xD76530", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xD76634", Offset = "0xD76634", VA = "0xD76634", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xD76728", Offset = "0xD76728", VA = "0xD76728", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xD76794", Offset = "0xD76794", VA = "0xD76794")]
		public SetCenter()
		{
		}
	}
	[Token(Token = "0x200060D")]
	[TaskCategory("Unity/SphereCollider")]
	[TaskDescription("Sets the radius of the SphereCollider. Returns Success.")]
	public class SetRadius : Action
	{
		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the SphereCollider")]
		public SharedFloat radius;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SphereCollider sphereCollider;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xD7679C", Offset = "0xD7679C", VA = "0xD7679C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xD768A0", Offset = "0xD768A0", VA = "0xD768A0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xD76994", Offset = "0xD76994", VA = "0xD76994", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xD769C4", Offset = "0xD769C4", VA = "0xD769C4")]
		public SetRadius()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.SharedVariables
{
	[Token(Token = "0x200060E")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedBool : Conditional
	{
		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedBool variable;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedBool compareTo;

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xD769CC", Offset = "0xD769CC", VA = "0xD769CC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xD76A58", Offset = "0xD76A58", VA = "0xD76A58", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xD76A94", Offset = "0xD76A94", VA = "0xD76A94")]
		public CompareSharedBool()
		{
		}
	}
	[Token(Token = "0x200060F")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedColor : Conditional
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedColor variable;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedColor compareTo;

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xD76A9C", Offset = "0xD76A9C", VA = "0xD76A9C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xD76B8C", Offset = "0xD76B8C", VA = "0xD76B8C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xD76BEC", Offset = "0xD76BEC", VA = "0xD76BEC")]
		public CompareSharedColor()
		{
		}
	}
	[Token(Token = "0x2000610")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedFloat : Conditional
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedFloat variable;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedFloat compareTo;

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xD76BF4", Offset = "0xD76BF4", VA = "0xD76BF4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xD76C78", Offset = "0xD76C78", VA = "0xD76C78", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xD76CB4", Offset = "0xD76CB4", VA = "0xD76CB4")]
		public CompareSharedFloat()
		{
		}
	}
	[Token(Token = "0x2000611")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedGameObject : Conditional
	{
		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedGameObject variable;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedGameObject compareTo;

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xD76CBC", Offset = "0xD76CBC", VA = "0xD76CBC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xD76E68", Offset = "0xD76E68", VA = "0xD76E68", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xD76E90", Offset = "0xD76E90", VA = "0xD76E90")]
		public CompareSharedGameObject()
		{
		}
	}
	[Token(Token = "0x2000612")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	[TaskCategory("Unity/SharedVariable")]
	public class CompareSharedGameObjectList : Conditional
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedGameObjectList variable;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedGameObjectList compareTo;

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xD76E98", Offset = "0xD76E98", VA = "0xD76E98", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xD77060", Offset = "0xD77060", VA = "0xD77060", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xD77088", Offset = "0xD77088", VA = "0xD77088")]
		public CompareSharedGameObjectList()
		{
		}
	}
	[Token(Token = "0x2000613")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedInt : Conditional
	{
		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedInt variable;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedInt compareTo;

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xD77090", Offset = "0xD77090", VA = "0xD77090", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xD77118", Offset = "0xD77118", VA = "0xD77118", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xD77154", Offset = "0xD77154", VA = "0xD77154")]
		public CompareSharedInt()
		{
		}
	}
	[Token(Token = "0x2000614")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedObject : Conditional
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedObject variable;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedObject compareTo;

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xD7715C", Offset = "0xD7715C", VA = "0xD7715C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xD77308", Offset = "0xD77308", VA = "0xD77308", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xD77330", Offset = "0xD77330", VA = "0xD77330")]
		public CompareSharedObject()
		{
		}
	}
	[Token(Token = "0x2000615")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedObjectList : Conditional
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedObjectList variable;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedObjectList compareTo;

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xD77338", Offset = "0xD77338", VA = "0xD77338", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xD77500", Offset = "0xD77500", VA = "0xD77500", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xD77528", Offset = "0xD77528", VA = "0xD77528")]
		public CompareSharedObjectList()
		{
		}
	}
	[Token(Token = "0x2000616")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedQuaternion : Conditional
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedQuaternion variable;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedQuaternion compareTo;

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xD77530", Offset = "0xD77530", VA = "0xD77530", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xD77620", Offset = "0xD77620", VA = "0xD77620", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xD776C0", Offset = "0xD776C0", VA = "0xD776C0")]
		public CompareSharedQuaternion()
		{
		}
	}
	[Token(Token = "0x2000617")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedRect : Conditional
	{
		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedRect variable;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedRect compareTo;

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xD776C8", Offset = "0xD776C8", VA = "0xD776C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xD77758", Offset = "0xD77758", VA = "0xD77758", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xD777AC", Offset = "0xD777AC", VA = "0xD777AC")]
		public CompareSharedRect()
		{
		}
	}
	[Token(Token = "0x2000618")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedString : Conditional
	{
		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedString variable;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedString compareTo;

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xD777B4", Offset = "0xD777B4", VA = "0xD777B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xD77840", Offset = "0xD77840", VA = "0xD77840", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xD778AC", Offset = "0xD778AC", VA = "0xD778AC")]
		public CompareSharedString()
		{
		}
	}
	[Token(Token = "0x2000619")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedTransform : Conditional
	{
		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedTransform variable;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedTransform compareTo;

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xD778B4", Offset = "0xD778B4", VA = "0xD778B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xD77A60", Offset = "0xD77A60", VA = "0xD77A60", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xD77A88", Offset = "0xD77A88", VA = "0xD77A88")]
		public CompareSharedTransform()
		{
		}
	}
	[Token(Token = "0x200061A")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	[TaskCategory("Unity/SharedVariable")]
	public class CompareSharedTransformList : Conditional
	{
		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedTransformList variable;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedTransformList compareTo;

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xD77A90", Offset = "0xD77A90", VA = "0xD77A90", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xD77C58", Offset = "0xD77C58", VA = "0xD77C58", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xD77C80", Offset = "0xD77C80", VA = "0xD77C80")]
		public CompareSharedTransformList()
		{
		}
	}
	[Token(Token = "0x200061B")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedVector2 : Conditional
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedVector2 variable;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedVector2 compareTo;

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xD77C88", Offset = "0xD77C88", VA = "0xD77C88", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xD77D0C", Offset = "0xD77D0C", VA = "0xD77D0C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xD77DA4", Offset = "0xD77DA4", VA = "0xD77DA4")]
		public CompareSharedVector2()
		{
		}
	}
	[Token(Token = "0x200061C")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	public class CompareSharedVector3 : Conditional
	{
		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedVector3 variable;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedVector3 compareTo;

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xD77DAC", Offset = "0xD77DAC", VA = "0xD77DAC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xD77E40", Offset = "0xD77E40", VA = "0xD77E40", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xD77EE0", Offset = "0xD77EE0", VA = "0xD77EE0")]
		public CompareSharedVector3()
		{
		}
	}
	[Token(Token = "0x200061D")]
	[TaskDescription("Returns success if the variable value is equal to the compareTo value.")]
	[TaskCategory("Unity/SharedVariable")]
	public class CompareSharedVector4 : Conditional
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first variable to compare")]
		public SharedVector4 variable;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to compare to")]
		public SharedVector4 compareTo;

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xD77EE8", Offset = "0xD77EE8", VA = "0xD77EE8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xD77F84", Offset = "0xD77F84", VA = "0xD77F84", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xD78024", Offset = "0xD78024", VA = "0xD78024")]
		public CompareSharedVector4()
		{
		}
	}
	[Token(Token = "0x200061E")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedBool variable to the specified object. Returns Success.")]
	public class SetSharedBool : Action
	{
		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedBool to")]
		public SharedBool targetValue;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedBool to set")]
		public SharedBool targetVariable;

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xD7802C", Offset = "0xD7802C", VA = "0xD7802C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xD780B0", Offset = "0xD780B0", VA = "0xD780B0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xD780EC", Offset = "0xD780EC", VA = "0xD780EC")]
		public SetSharedBool()
		{
		}
	}
	[Token(Token = "0x200061F")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedColor variable to the specified object. Returns Success.")]
	public class SetSharedColor : Action
	{
		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedColor to")]
		public SharedColor targetValue;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedColor to set")]
		[RequiredField]
		public SharedColor targetVariable;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xD780F4", Offset = "0xD780F4", VA = "0xD780F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xD78174", Offset = "0xD78174", VA = "0xD78174", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xD781D4", Offset = "0xD781D4", VA = "0xD781D4")]
		public SetSharedColor()
		{
		}
	}
	[Token(Token = "0x2000620")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedFloat variable to the specified object. Returns Success.")]
	public class SetSharedFloat : Action
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedFloat to")]
		public SharedFloat targetValue;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedFloat to set")]
		[RequiredField]
		public SharedFloat targetVariable;

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xD781DC", Offset = "0xD781DC", VA = "0xD781DC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xD7825C", Offset = "0xD7825C", VA = "0xD7825C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xD78298", Offset = "0xD78298", VA = "0xD78298")]
		public SetSharedFloat()
		{
		}
	}
	[Token(Token = "0x2000621")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedGameObject variable to the specified object. Returns Success.")]
	public class SetSharedGameObject : Action
	{
		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedGameObject to. If null the variable will be set to the current GameObject")]
		public SharedGameObject targetValue;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedGameObject to set")]
		public SharedGameObject targetVariable;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Can the target value be null?")]
		public SharedBool valueCanBeNull;

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xD782A0", Offset = "0xD782A0", VA = "0xD782A0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xD783AC", Offset = "0xD783AC", VA = "0xD783AC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xD783F0", Offset = "0xD783F0", VA = "0xD783F0")]
		public SetSharedGameObject()
		{
		}
	}
	[Token(Token = "0x2000622")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedGameObjectList variable to the specified object. Returns Success.")]
	public class SetSharedGameObjectList : Action
	{
		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedGameObjectList to.")]
		public SharedGameObjectList targetValue;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedGameObjectList to set")]
		public SharedGameObjectList targetVariable;

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xD783F8", Offset = "0xD783F8", VA = "0xD783F8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xD7847C", Offset = "0xD7847C", VA = "0xD7847C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xD784A4", Offset = "0xD784A4", VA = "0xD784A4")]
		public SetSharedGameObjectList()
		{
		}
	}
	[Token(Token = "0x2000623")]
	[TaskDescription("Sets the SharedInt variable to the specified object. Returns Success.")]
	[TaskCategory("Unity/SharedVariable")]
	public class SetSharedInt : Action
	{
		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedInt to")]
		public SharedInt targetValue;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedInt to set")]
		public SharedInt targetVariable;

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xD784AC", Offset = "0xD784AC", VA = "0xD784AC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xD78530", Offset = "0xD78530", VA = "0xD78530", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xD7856C", Offset = "0xD7856C", VA = "0xD7856C")]
		public SetSharedInt()
		{
		}
	}
	[Token(Token = "0x2000624")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedObject variable to the specified object. Returns Success.")]
	public class SetSharedObject : Action
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedObject to")]
		public SharedObject targetValue;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedTransform to set")]
		[RequiredField]
		public SharedObject targetVariable;

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xD78574", Offset = "0xD78574", VA = "0xD78574", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xD785F8", Offset = "0xD785F8", VA = "0xD785F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xD78620", Offset = "0xD78620", VA = "0xD78620")]
		public SetSharedObject()
		{
		}
	}
	[Token(Token = "0x2000625")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedObjectList variable to the specified object. Returns Success.")]
	public class SetSharedObjectList : Action
	{
		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedObjectList to.")]
		public SharedObjectList targetValue;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedObjectList to set")]
		[RequiredField]
		public SharedObjectList targetVariable;

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xD78628", Offset = "0xD78628", VA = "0xD78628", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xD786AC", Offset = "0xD786AC", VA = "0xD786AC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xD786D4", Offset = "0xD786D4", VA = "0xD786D4")]
		public SetSharedObjectList()
		{
		}
	}
	[Token(Token = "0x2000626")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedQuaternion variable to the specified object. Returns Success.")]
	public class SetSharedQuaternion : Action
	{
		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedQuaternion to")]
		public SharedQuaternion targetValue;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedQuaternion to set")]
		[RequiredField]
		public SharedQuaternion targetVariable;

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xD786DC", Offset = "0xD786DC", VA = "0xD786DC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xD7875C", Offset = "0xD7875C", VA = "0xD7875C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xD787FC", Offset = "0xD787FC", VA = "0xD787FC")]
		public SetSharedQuaternion()
		{
		}
	}
	[Token(Token = "0x2000627")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedRect variable to the specified object. Returns Success.")]
	public class SetSharedRect : Action
	{
		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedRect to")]
		public SharedRect targetValue;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedRect to set")]
		[RequiredField]
		public SharedRect targetVariable;

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xD78804", Offset = "0xD78804", VA = "0xD78804", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xD78884", Offset = "0xD78884", VA = "0xD78884", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xD788D8", Offset = "0xD788D8", VA = "0xD788D8")]
		public SetSharedRect()
		{
		}
	}
	[Token(Token = "0x2000628")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedString variable to the specified object. Returns Success.")]
	public class SetSharedString : Action
	{
		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedString to")]
		public SharedString targetValue;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedString to set")]
		[RequiredField]
		public SharedString targetVariable;

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xD788E0", Offset = "0xD788E0", VA = "0xD788E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xD78964", Offset = "0xD78964", VA = "0xD78964", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xD789D0", Offset = "0xD789D0", VA = "0xD789D0")]
		public SetSharedString()
		{
		}
	}
	[Token(Token = "0x2000629")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedTransform variable to the specified object. Returns Success.")]
	public class SetSharedTransform : Action
	{
		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedTransform to. If null the variable will be set to the current Transform")]
		public SharedTransform targetValue;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedTransform to set")]
		public SharedTransform targetVariable;

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xD789D8", Offset = "0xD789D8", VA = "0xD789D8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xD78AC0", Offset = "0xD78AC0", VA = "0xD78AC0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xD78AE8", Offset = "0xD78AE8", VA = "0xD78AE8")]
		public SetSharedTransform()
		{
		}
	}
	[Token(Token = "0x200062A")]
	[TaskDescription("Sets the SharedTransformList variable to the specified object. Returns Success.")]
	[TaskCategory("Unity/SharedVariable")]
	public class SetSharedTransformList : Action
	{
		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedTransformList to.")]
		public SharedTransformList targetValue;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedTransformList to set")]
		[RequiredField]
		public SharedTransformList targetVariable;

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xD78AF0", Offset = "0xD78AF0", VA = "0xD78AF0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xD78B74", Offset = "0xD78B74", VA = "0xD78B74", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xD78B9C", Offset = "0xD78B9C", VA = "0xD78B9C")]
		public SetSharedTransformList()
		{
		}
	}
	[Token(Token = "0x200062B")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedVector2 variable to the specified object. Returns Success.")]
	public class SetSharedVector2 : Action
	{
		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedVector2 to")]
		public SharedVector2 targetValue;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedVector2 to set")]
		public SharedVector2 targetVariable;

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xD78BA4", Offset = "0xD78BA4", VA = "0xD78BA4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xD78C24", Offset = "0xD78C24", VA = "0xD78C24", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xD78CBC", Offset = "0xD78CBC", VA = "0xD78CBC")]
		public SetSharedVector2()
		{
		}
	}
	[Token(Token = "0x200062C")]
	[TaskDescription("Sets the SharedVector3 variable to the specified object. Returns Success.")]
	[TaskCategory("Unity/SharedVariable")]
	public class SetSharedVector3 : Action
	{
		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedVector3 to")]
		public SharedVector3 targetValue;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedVector3 to set")]
		public SharedVector3 targetVariable;

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xD78CC4", Offset = "0xD78CC4", VA = "0xD78CC4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xD78D44", Offset = "0xD78D44", VA = "0xD78D44", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xD78DE4", Offset = "0xD78DE4", VA = "0xD78DE4")]
		public SetSharedVector3()
		{
		}
	}
	[Token(Token = "0x200062D")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedVector4 variable to the specified object. Returns Success.")]
	public class SetSharedVector4 : Action
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The value to set the SharedVector4 to")]
		public SharedVector4 targetValue;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The SharedVector4 to set")]
		public SharedVector4 targetVariable;

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xD78DEC", Offset = "0xD78DEC", VA = "0xD78DEC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xD78E6C", Offset = "0xD78E6C", VA = "0xD78E6C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xD78F0C", Offset = "0xD78F0C", VA = "0xD78F0C")]
		public SetSharedVector4()
		{
		}
	}
	[Token(Token = "0x200062E")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Sets the SharedGameObjectList values from the GameObjects. Returns Success.")]
	public class SharedGameObjectsToGameObjectList : Action
	{
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObjects value")]
		public SharedGameObject[] gameObjects;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedTransformList to set")]
		[RequiredField]
		public SharedGameObjectList storedGameObjectList;

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xD78F14", Offset = "0xD78F14", VA = "0xD78F14", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xD78FAC", Offset = "0xD78FAC", VA = "0xD78FAC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xD79148", Offset = "0xD79148", VA = "0xD79148", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xD79170", Offset = "0xD79170", VA = "0xD79170")]
		public SharedGameObjectsToGameObjectList()
		{
		}
	}
	[Token(Token = "0x200062F")]
	[TaskDescription("Gets the Transform from the GameObject. Returns Success.")]
	[TaskCategory("Unity/SharedVariable")]
	public class SharedGameObjectToTransform : Action
	{
		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to get the Transform of")]
		public SharedGameObject sharedGameObject;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The Transform to set")]
		public SharedTransform sharedTransform;

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xD79178", Offset = "0xD79178", VA = "0xD79178", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xD79274", Offset = "0xD79274", VA = "0xD79274", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xD7929C", Offset = "0xD7929C", VA = "0xD7929C")]
		public SharedGameObjectToTransform()
		{
		}
	}
	[Token(Token = "0x2000630")]
	[TaskDescription("Sets the SharedTransformList values from the Transforms. Returns Success.")]
	[TaskCategory("Unity/SharedVariable")]
	public class SharedTransformsToTransformList : Action
	{
		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Transforms value")]
		public SharedTransform[] transforms;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The SharedTransformList to set")]
		[RequiredField]
		public SharedTransformList storedTransformList;

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xD792A4", Offset = "0xD792A4", VA = "0xD792A4", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xD7933C", Offset = "0xD7933C", VA = "0xD7933C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xD794D8", Offset = "0xD794D8", VA = "0xD794D8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xD79500", Offset = "0xD79500", VA = "0xD79500")]
		public SharedTransformsToTransformList()
		{
		}
	}
	[Token(Token = "0x2000631")]
	[TaskCategory("Unity/SharedVariable")]
	[TaskDescription("Gets the GameObject from the Transform component. Returns Success.")]
	public class SharedTransformToGameObject : Action
	{
		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Transform component")]
		public SharedTransform sharedTransform;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The GameObject to set")]
		[RequiredField]
		public SharedGameObject sharedGameObject;

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xD79508", Offset = "0xD79508", VA = "0xD79508", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xD795F0", Offset = "0xD795F0", VA = "0xD795F0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xD79618", Offset = "0xD79618", VA = "0xD79618")]
		public SharedTransformToGameObject()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityRigidbody2D
{
	[Token(Token = "0x2000632")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Applies a force to the Rigidbody2D. Returns Success.")]
	public class AddForce : Action
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of force to apply")]
		public SharedVector2 force;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xD79620", Offset = "0xD79620", VA = "0xD79620", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xD79724", Offset = "0xD79724", VA = "0xD79724", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xD79818", Offset = "0xD79818", VA = "0xD79818", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xD79880", Offset = "0xD79880", VA = "0xD79880")]
		public AddForce()
		{
		}
	}
	[Token(Token = "0x2000633")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Applies a force at the specified position to the Rigidbody2D. Returns Success.")]
	public class AddForceAtPosition : Action
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of force to apply")]
		public SharedVector2 force;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The position of the force")]
		public SharedVector2 position;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xD79888", Offset = "0xD79888", VA = "0xD79888", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xD7998C", Offset = "0xD7998C", VA = "0xD7998C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xD79AB0", Offset = "0xD79AB0", VA = "0xD79AB0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xD79B54", Offset = "0xD79B54", VA = "0xD79B54")]
		public AddForceAtPosition()
		{
		}
	}
	[Token(Token = "0x2000634")]
	[TaskDescription("Applies a torque to the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class AddTorque : Action
	{
		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of torque to apply")]
		public SharedFloat torque;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xD79B5C", Offset = "0xD79B5C", VA = "0xD79B5C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xD79C60", Offset = "0xD79C60", VA = "0xD79C60", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xD79D54", Offset = "0xD79D54", VA = "0xD79D54", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xD79D84", Offset = "0xD79D84", VA = "0xD79D84")]
		public AddTorque()
		{
		}
	}
	[Token(Token = "0x2000635")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Stores the angular drag of the Rigidbody2D. Returns Success.")]
	public class GetAngularDrag : Action
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular drag of the Rigidbody2D")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xD79D8C", Offset = "0xD79D8C", VA = "0xD79D8C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xD79E90", Offset = "0xD79E90", VA = "0xD79E90", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xD79F84", Offset = "0xD79F84", VA = "0xD79F84", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xD79FB4", Offset = "0xD79FB4", VA = "0xD79FB4")]
		public GetAngularDrag()
		{
		}
	}
	[Token(Token = "0x2000636")]
	[TaskDescription("Stores the angular velocity of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetAngularVelocity : Action
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The angular velocity of the Rigidbody2D")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xD79FBC", Offset = "0xD79FBC", VA = "0xD79FBC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xD7A0C0", Offset = "0xD7A0C0", VA = "0xD7A0C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xD7A1B4", Offset = "0xD7A1B4", VA = "0xD7A1B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xD7A1E4", Offset = "0xD7A1E4", VA = "0xD7A1E4")]
		public GetAngularVelocity()
		{
		}
	}
	[Token(Token = "0x2000637")]
	[TaskDescription("Stores the drag of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetDrag : Action
	{
		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The drag of the Rigidbody2D")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xD7A1EC", Offset = "0xD7A1EC", VA = "0xD7A1EC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xD7A2F0", Offset = "0xD7A2F0", VA = "0xD7A2F0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xD7A3E4", Offset = "0xD7A3E4", VA = "0xD7A3E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xD7A414", Offset = "0xD7A414", VA = "0xD7A414")]
		public GetDrag()
		{
		}
	}
	[Token(Token = "0x2000638")]
	[TaskDescription("Stores the gravity scale of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetGravityScale : Action
	{
		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The gravity scale of the Rigidbody2D")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xD7A41C", Offset = "0xD7A41C", VA = "0xD7A41C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xD7A520", Offset = "0xD7A520", VA = "0xD7A520", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xD7A614", Offset = "0xD7A614", VA = "0xD7A614", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xD7A644", Offset = "0xD7A644", VA = "0xD7A644")]
		public GetGravityScale()
		{
		}
	}
	[Token(Token = "0x2000639")]
	[TaskDescription("Stores the is kinematic value of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetIsKinematic : Action
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The is kinematic value of the Rigidbody2D")]
		[RequiredField]
		public SharedBool storeValue;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xD7A64C", Offset = "0xD7A64C", VA = "0xD7A64C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xD7A750", Offset = "0xD7A750", VA = "0xD7A750", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xD7A848", Offset = "0xD7A848", VA = "0xD7A848", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xD7A878", Offset = "0xD7A878", VA = "0xD7A878")]
		public GetIsKinematic()
		{
		}
	}
	[Token(Token = "0x200063A")]
	[TaskDescription("Stores the mass of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetMass : Action
	{
		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The mass of the Rigidbody2D")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xD7A880", Offset = "0xD7A880", VA = "0xD7A880", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xD7A984", Offset = "0xD7A984", VA = "0xD7A984", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xD7AA78", Offset = "0xD7AA78", VA = "0xD7AA78", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xD7AAA8", Offset = "0xD7AAA8", VA = "0xD7AAA8")]
		public GetMass()
		{
		}
	}
	[Token(Token = "0x200063B")]
	[TaskDescription("Stores the position of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetPosition : Action
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The velocity of the Rigidbody2D")]
		[RequiredField]
		public SharedVector2 storeValue;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xD7AAB0", Offset = "0xD7AAB0", VA = "0xD7AAB0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xD7ABB4", Offset = "0xD7ABB4", VA = "0xD7ABB4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xD7ACA8", Offset = "0xD7ACA8", VA = "0xD7ACA8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xD7AD10", Offset = "0xD7AD10", VA = "0xD7AD10")]
		public GetPosition()
		{
		}
	}
	[Token(Token = "0x200063C")]
	[TaskDescription("Stores the rotation of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class GetRotation : Action
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The rotation of the Rigidbody2D")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xD7AD18", Offset = "0xD7AD18", VA = "0xD7AD18", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xD7AE1C", Offset = "0xD7AE1C", VA = "0xD7AE1C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xD7AF10", Offset = "0xD7AF10", VA = "0xD7AF10", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xD7AF40", Offset = "0xD7AF40", VA = "0xD7AF40")]
		public GetRotation()
		{
		}
	}
	[Token(Token = "0x200063D")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Stores the velocity of the Rigidbody2D. Returns Success.")]
	public class GetVelocity : Action
	{
		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The velocity of the Rigidbody2D")]
		public SharedVector2 storeValue;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xD7AF48", Offset = "0xD7AF48", VA = "0xD7AF48", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xD7B04C", Offset = "0xD7B04C", VA = "0xD7B04C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xD7B140", Offset = "0xD7B140", VA = "0xD7B140", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xD7B1A8", Offset = "0xD7B1A8", VA = "0xD7B1A8")]
		public GetVelocity()
		{
		}
	}
	[Token(Token = "0x200063E")]
	[TaskDescription("Returns Success if the Rigidbody2D is kinematic, otherwise Failure.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class IsKinematic : Conditional
	{
		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xD7B1B0", Offset = "0xD7B1B0", VA = "0xD7B1B0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xD7B2B4", Offset = "0xD7B2B4", VA = "0xD7B2B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xD7B388", Offset = "0xD7B388", VA = "0xD7B388", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xD7B394", Offset = "0xD7B394", VA = "0xD7B394")]
		public IsKinematic()
		{
		}
	}
	[Token(Token = "0x200063F")]
	[TaskDescription("Returns Success if the Rigidbody2D is sleeping, otherwise Failure.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class IsSleeping : Conditional
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xD7B39C", Offset = "0xD7B39C", VA = "0xD7B39C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xD7B4A0", Offset = "0xD7B4A0", VA = "0xD7B4A0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xD7B574", Offset = "0xD7B574", VA = "0xD7B574", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xD7B580", Offset = "0xD7B580", VA = "0xD7B580")]
		public IsSleeping()
		{
		}
	}
	[Token(Token = "0x2000640")]
	[TaskDescription("Moves the Rigidbody2D to the specified position. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class MovePosition : Action
	{
		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The new position of the Rigidbody")]
		public SharedVector2 position;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xD7B588", Offset = "0xD7B588", VA = "0xD7B588", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xD7B68C", Offset = "0xD7B68C", VA = "0xD7B68C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xD7B780", Offset = "0xD7B780", VA = "0xD7B780", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xD7B7E8", Offset = "0xD7B7E8", VA = "0xD7B7E8")]
		public MovePosition()
		{
		}
	}
	[Token(Token = "0x2000641")]
	[TaskDescription("Rotates the Rigidbody2D to the specified rotation. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class MoveRotation : Action
	{
		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The new rotation of the Rigidbody")]
		public SharedFloat rotation;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xD7B7F0", Offset = "0xD7B7F0", VA = "0xD7B7F0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xD7B8F4", Offset = "0xD7B8F4", VA = "0xD7B8F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xD7B9E8", Offset = "0xD7B9E8", VA = "0xD7B9E8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xD7BA18", Offset = "0xD7BA18", VA = "0xD7BA18")]
		public MoveRotation()
		{
		}
	}
	[Token(Token = "0x2000642")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Sets the angular drag of the Rigidbody2D. Returns Success.")]
	public class SetAngularDrag : Action
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular drag of the Rigidbody2D")]
		public SharedFloat angularDrag;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xD7BA20", Offset = "0xD7BA20", VA = "0xD7BA20", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xD7BB24", Offset = "0xD7BB24", VA = "0xD7BB24", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xD7BC18", Offset = "0xD7BC18", VA = "0xD7BC18", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xD7BC48", Offset = "0xD7BC48", VA = "0xD7BC48")]
		public SetAngularDrag()
		{
		}
	}
	[Token(Token = "0x2000643")]
	[TaskDescription("Sets the angular velocity of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class SetAngularVelocity : Action
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular velocity of the Rigidbody2D")]
		public SharedFloat angularVelocity;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xD7BC50", Offset = "0xD7BC50", VA = "0xD7BC50", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xD7BD54", Offset = "0xD7BD54", VA = "0xD7BD54", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xD7BE48", Offset = "0xD7BE48", VA = "0xD7BE48", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xD7BE78", Offset = "0xD7BE78", VA = "0xD7BE78")]
		public SetAngularVelocity()
		{
		}
	}
	[Token(Token = "0x2000644")]
	[TaskDescription("Sets the drag of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class SetDrag : Action
	{
		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The drag of the Rigidbody2D")]
		public SharedFloat drag;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xD7BE80", Offset = "0xD7BE80", VA = "0xD7BE80", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xD7BF84", Offset = "0xD7BF84", VA = "0xD7BF84", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xD7C078", Offset = "0xD7C078", VA = "0xD7C078", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xD7C0A8", Offset = "0xD7C0A8", VA = "0xD7C0A8")]
		public SetDrag()
		{
		}
	}
	[Token(Token = "0x2000645")]
	[TaskDescription("Sets the gravity scale of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class SetGravityScale : Action
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The gravity scale of the Rigidbody2D")]
		public SharedFloat gravityScale;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xD7C0B0", Offset = "0xD7C0B0", VA = "0xD7C0B0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xD7C1B4", Offset = "0xD7C1B4", VA = "0xD7C1B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xD7C2A8", Offset = "0xD7C2A8", VA = "0xD7C2A8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xD7C2D8", Offset = "0xD7C2D8", VA = "0xD7C2D8")]
		public SetGravityScale()
		{
		}
	}
	[Token(Token = "0x2000646")]
	[TaskDescription("Sets the is kinematic value of the Rigidbody2D. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class SetIsKinematic : Action
	{
		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The is kinematic value of the Rigidbody2D")]
		public SharedBool isKinematic;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xD7C2E0", Offset = "0xD7C2E0", VA = "0xD7C2E0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xD7C3E4", Offset = "0xD7C3E4", VA = "0xD7C3E4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xD7C4DC", Offset = "0xD7C4DC", VA = "0xD7C4DC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xD7C50C", Offset = "0xD7C50C", VA = "0xD7C50C")]
		public SetIsKinematic()
		{
		}
	}
	[Token(Token = "0x2000647")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Sets the mass of the Rigidbody2D. Returns Success.")]
	public class SetMass : Action
	{
		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The mass of the Rigidbody2D")]
		public SharedFloat mass;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xD7C514", Offset = "0xD7C514", VA = "0xD7C514", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xD7C618", Offset = "0xD7C618", VA = "0xD7C618", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xD7C70C", Offset = "0xD7C70C", VA = "0xD7C70C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xD7C73C", Offset = "0xD7C73C", VA = "0xD7C73C")]
		public SetMass()
		{
		}
	}
	[Token(Token = "0x2000648")]
	[TaskCategory("Unity/Rigidbody2D")]
	[TaskDescription("Sets the velocity of the Rigidbody2D. Returns Success.")]
	public class SetVelocity : Action
	{
		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The velocity of the Rigidbody2D")]
		public SharedVector2 velocity;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xD7C744", Offset = "0xD7C744", VA = "0xD7C744", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xD7C848", Offset = "0xD7C848", VA = "0xD7C848", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xD7C93C", Offset = "0xD7C93C", VA = "0xD7C93C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xD7C9A4", Offset = "0xD7C9A4", VA = "0xD7C9A4")]
		public SetVelocity()
		{
		}
	}
	[Token(Token = "0x2000649")]
	[TaskDescription("Forces the Rigidbody2D to sleep at least one frame. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class Sleep : Conditional
	{
		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xD92AF4", Offset = "0xD92AF4", VA = "0xD92AF4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xD92BF8", Offset = "0xD92BF8", VA = "0xD92BF8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xD92CC4", Offset = "0xD92CC4", VA = "0xD92CC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xD92CD0", Offset = "0xD92CD0", VA = "0xD92CD0")]
		public Sleep()
		{
		}
	}
	[Token(Token = "0x200064A")]
	[TaskDescription("Forces the Rigidbody2D to wake up. Returns Success.")]
	[TaskCategory("Unity/Rigidbody2D")]
	public class WakeUp : Conditional
	{
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody2D rigidbody2D;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xD92CD8", Offset = "0xD92CD8", VA = "0xD92CD8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xD92DDC", Offset = "0xD92DDC", VA = "0xD92DDC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xD92EA8", Offset = "0xD92EA8", VA = "0xD92EA8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xD92EB4", Offset = "0xD92EB4", VA = "0xD92EB4")]
		public WakeUp()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityRigidbody
{
	[Token(Token = "0x200064B")]
	[TaskDescription("Applies a force to the rigidbody that simulates explosion effects. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class AddExplosionForce : Action
	{
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The force of the explosion")]
		public SharedFloat explosionForce;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The position of the explosion")]
		public SharedVector3 explosionPosition;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The radius of the explosion")]
		public SharedFloat explosionRadius;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Applies the force as if it was applied from beneath the object")]
		public float upwardsModifier;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("The type of force")]
		public ForceMode forceMode;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xD92EBC", Offset = "0xD92EBC", VA = "0xD92EBC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xD92FC0", Offset = "0xD92FC0", VA = "0xD92FC0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xD93124", Offset = "0xD93124", VA = "0xD93124", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xD931D4", Offset = "0xD931D4", VA = "0xD931D4")]
		public AddExplosionForce()
		{
		}
	}
	[Token(Token = "0x200064C")]
	[TaskDescription("Applies a force to the rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	[RequiredComponent(typeof(Rigidbody))]
	public class AddForce : Action
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of force to apply")]
		public SharedVector3 force;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The type of force")]
		public ForceMode forceMode;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xD931DC", Offset = "0xD931DC", VA = "0xD931DC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xD932E0", Offset = "0xD932E0", VA = "0xD932E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xD933D8", Offset = "0xD933D8", VA = "0xD933D8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xD93484", Offset = "0xD93484", VA = "0xD93484")]
		public AddForce()
		{
		}
	}
	[Token(Token = "0x200064D")]
	[TaskDescription("Applies a force at the specified position to the rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class AddForceAtPosition : Action
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of force to apply")]
		public SharedVector3 force;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The position of the force")]
		public SharedVector3 position;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The type of force")]
		public ForceMode forceMode;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xD9348C", Offset = "0xD9348C", VA = "0xD9348C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xD93590", Offset = "0xD93590", VA = "0xD93590", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xD936CC", Offset = "0xD936CC", VA = "0xD936CC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xD93788", Offset = "0xD93788", VA = "0xD93788")]
		public AddForceAtPosition()
		{
		}
	}
	[Token(Token = "0x200064E")]
	[TaskDescription("Applies a force to the rigidbody relative to its coordinate system. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class AddRelativeForce : Action
	{
		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of force to apply")]
		public SharedVector3 force;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The type of force")]
		public ForceMode forceMode;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xD93790", Offset = "0xD93790", VA = "0xD93790", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xD93894", Offset = "0xD93894", VA = "0xD93894", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xD9398C", Offset = "0xD9398C", VA = "0xD9398C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xD93A04", Offset = "0xD93A04", VA = "0xD93A04")]
		public AddRelativeForce()
		{
		}
	}
	[Token(Token = "0x200064F")]
	[TaskDescription("Applies a torque to the rigidbody relative to its coordinate system. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class AddRelativeTorque : Action
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of torque to apply")]
		public SharedVector3 torque;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The type of torque")]
		public ForceMode forceMode;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xD93A0C", Offset = "0xD93A0C", VA = "0xD93A0C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xD93B10", Offset = "0xD93B10", VA = "0xD93B10", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xD93B80", Offset = "0xD93B80", VA = "0xD93B80", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xD93BF8", Offset = "0xD93BF8", VA = "0xD93BF8")]
		public AddRelativeTorque()
		{
		}
	}
	[Token(Token = "0x2000650")]
	[TaskDescription("Applies a torque to the rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class AddTorque : Action
	{
		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount of torque to apply")]
		public SharedVector3 torque;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The type of torque")]
		public ForceMode forceMode;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xD93C00", Offset = "0xD93C00", VA = "0xD93C00", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xD93D04", Offset = "0xD93D04", VA = "0xD93D04", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xD93DFC", Offset = "0xD93DFC", VA = "0xD93DFC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xD93E74", Offset = "0xD93E74", VA = "0xD93E74")]
		public AddTorque()
		{
		}
	}
	[Token(Token = "0x2000651")]
	[TaskDescription("Stores the angular drag of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetAngularDrag : Action
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular drag of the Rigidbody")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xD93E7C", Offset = "0xD93E7C", VA = "0xD93E7C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xD93F80", Offset = "0xD93F80", VA = "0xD93F80", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xD94074", Offset = "0xD94074", VA = "0xD94074", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xD940A8", Offset = "0xD940A8", VA = "0xD940A8")]
		public GetAngularDrag()
		{
		}
	}
	[Token(Token = "0x2000652")]
	[TaskDescription("Stores the angular velocity of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetAngularVelocity : Action
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular velocity of the Rigidbody")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xD940B0", Offset = "0xD940B0", VA = "0xD940B0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xD941B4", Offset = "0xD941B4", VA = "0xD941B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xD942A8", Offset = "0xD942A8", VA = "0xD942A8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xD94318", Offset = "0xD94318", VA = "0xD94318")]
		public GetAngularVelocity()
		{
		}
	}
	[Token(Token = "0x2000653")]
	[TaskDescription("Stores the center of mass of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetCenterOfMass : Action
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of mass of the Rigidbody")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xD94320", Offset = "0xD94320", VA = "0xD94320", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xD94424", Offset = "0xD94424", VA = "0xD94424", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xD94518", Offset = "0xD94518", VA = "0xD94518", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xD94588", Offset = "0xD94588", VA = "0xD94588")]
		public GetCenterOfMass()
		{
		}
	}
	[Token(Token = "0x2000654")]
	[TaskDescription("Stores the drag of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetDrag : Action
	{
		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The drag of the Rigidbody")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xD94590", Offset = "0xD94590", VA = "0xD94590", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0xD94694", Offset = "0xD94694", VA = "0xD94694", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xD94788", Offset = "0xD94788", VA = "0xD94788", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xD947BC", Offset = "0xD947BC", VA = "0xD947BC")]
		public GetDrag()
		{
		}
	}
	[Token(Token = "0x2000655")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Stores the freeze rotation value of the Rigidbody. Returns Success.")]
	public class GetFreezeRotation : Action
	{
		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The freeze rotation value of the Rigidbody")]
		public SharedBool storeValue;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xD947C4", Offset = "0xD947C4", VA = "0xD947C4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xD948C8", Offset = "0xD948C8", VA = "0xD948C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xD949C0", Offset = "0xD949C0", VA = "0xD949C0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xD949F4", Offset = "0xD949F4", VA = "0xD949F4")]
		public GetFreezeRotation()
		{
		}
	}
	[Token(Token = "0x2000656")]
	[TaskDescription("Stores the is kinematic value of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetIsKinematic : Action
	{
		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The is kinematic value of the Rigidbody")]
		public SharedBool storeValue;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xD949FC", Offset = "0xD949FC", VA = "0xD949FC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xD94B00", Offset = "0xD94B00", VA = "0xD94B00", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xD94BF8", Offset = "0xD94BF8", VA = "0xD94BF8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xD94C2C", Offset = "0xD94C2C", VA = "0xD94C2C")]
		public GetIsKinematic()
		{
		}
	}
	[Token(Token = "0x2000657")]
	[TaskDescription("Stores the mass of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetMass : Action
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The mass of the Rigidbody")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xD94C34", Offset = "0xD94C34", VA = "0xD94C34", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xD94D38", Offset = "0xD94D38", VA = "0xD94D38", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xD94E2C", Offset = "0xD94E2C", VA = "0xD94E2C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xD94E60", Offset = "0xD94E60", VA = "0xD94E60")]
		public GetMass()
		{
		}
	}
	[Token(Token = "0x2000658")]
	[TaskDescription("Stores the position of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class GetPosition : Action
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The position of the Rigidbody")]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xD94E68", Offset = "0xD94E68", VA = "0xD94E68", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xD94F6C", Offset = "0xD94F6C", VA = "0xD94F6C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xD95060", Offset = "0xD95060", VA = "0xD95060", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xD950D0", Offset = "0xD950D0", VA = "0xD950D0")]
		public GetPosition()
		{
		}
	}
	[Token(Token = "0x2000659")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Stores the rotation of the Rigidbody. Returns Success.")]
	public class GetRotation : Action
	{
		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The rotation of the Rigidbody")]
		public SharedQuaternion storeValue;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xD950D8", Offset = "0xD950D8", VA = "0xD950D8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xD951DC", Offset = "0xD951DC", VA = "0xD951DC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xD952D0", Offset = "0xD952D0", VA = "0xD952D0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xD95340", Offset = "0xD95340", VA = "0xD95340")]
		public GetRotation()
		{
		}
	}
	[Token(Token = "0x200065A")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Stores the use gravity value of the Rigidbody. Returns Success.")]
	public class GetUseGravity : Action
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The use gravity value of the Rigidbody")]
		public SharedBool storeValue;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xD95348", Offset = "0xD95348", VA = "0xD95348", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xD9544C", Offset = "0xD9544C", VA = "0xD9544C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xD95544", Offset = "0xD95544", VA = "0xD95544", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xD95578", Offset = "0xD95578", VA = "0xD95578")]
		public GetUseGravity()
		{
		}
	}
	[Token(Token = "0x200065B")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Stores the velocity of the Rigidbody. Returns Success.")]
	public class GetVelocity : Action
	{
		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The velocity of the Rigidbody")]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xD95580", Offset = "0xD95580", VA = "0xD95580", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xD95684", Offset = "0xD95684", VA = "0xD95684", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xD95778", Offset = "0xD95778", VA = "0xD95778", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xD957E8", Offset = "0xD957E8", VA = "0xD957E8")]
		public GetVelocity()
		{
		}
	}
	[Token(Token = "0x200065C")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Returns Success if the Rigidbody is kinematic, otherwise Failure.")]
	public class IsKinematic : Conditional
	{
		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xD957F0", Offset = "0xD957F0", VA = "0xD957F0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xD958F4", Offset = "0xD958F4", VA = "0xD958F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xD959C8", Offset = "0xD959C8", VA = "0xD959C8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xD959D4", Offset = "0xD959D4", VA = "0xD959D4")]
		public IsKinematic()
		{
		}
	}
	[Token(Token = "0x200065D")]
	[TaskDescription("Returns Success if the Rigidbody is sleeping, otherwise Failure.")]
	[TaskCategory("Unity/Rigidbody")]
	public class IsSleeping : Conditional
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xD959DC", Offset = "0xD959DC", VA = "0xD959DC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xD95AE0", Offset = "0xD95AE0", VA = "0xD95AE0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xD95BB4", Offset = "0xD95BB4", VA = "0xD95BB4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xD95BC0", Offset = "0xD95BC0", VA = "0xD95BC0")]
		public IsSleeping()
		{
		}
	}
	[Token(Token = "0x200065E")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Moves the Rigidbody to the specified position. Returns Success.")]
	public class MovePosition : Action
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The new position of the Rigidbody")]
		public SharedVector3 position;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xD95BC8", Offset = "0xD95BC8", VA = "0xD95BC8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xD95CCC", Offset = "0xD95CCC", VA = "0xD95CCC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xD95DC0", Offset = "0xD95DC0", VA = "0xD95DC0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xD95E30", Offset = "0xD95E30", VA = "0xD95E30")]
		public MovePosition()
		{
		}
	}
	[Token(Token = "0x200065F")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Rotates the Rigidbody to the specified rotation. Returns Success.")]
	public class MoveRotation : Action
	{
		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The new rotation of the Rigidbody")]
		public SharedQuaternion rotation;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xD95E38", Offset = "0xD95E38", VA = "0xD95E38", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xD95F3C", Offset = "0xD95F3C", VA = "0xD95F3C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xD96030", Offset = "0xD96030", VA = "0xD96030", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xD960A0", Offset = "0xD960A0", VA = "0xD960A0")]
		public MoveRotation()
		{
		}
	}
	[Token(Token = "0x2000660")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Sets the angular drag of the Rigidbody. Returns Success.")]
	public class SetAngularDrag : Action
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular drag of the Rigidbody")]
		public SharedFloat angularDrag;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xD960A8", Offset = "0xD960A8", VA = "0xD960A8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xD961AC", Offset = "0xD961AC", VA = "0xD961AC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xD962A0", Offset = "0xD962A0", VA = "0xD962A0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xD962D4", Offset = "0xD962D4", VA = "0xD962D4")]
		public SetAngularDrag()
		{
		}
	}
	[Token(Token = "0x2000661")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Sets the angular velocity of the Rigidbody. Returns Success.")]
	public class SetAngularVelocity : Action
	{
		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The angular velocity of the Rigidbody")]
		public SharedVector3 angularVelocity;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xD962DC", Offset = "0xD962DC", VA = "0xD962DC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xD963E0", Offset = "0xD963E0", VA = "0xD963E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xD964D4", Offset = "0xD964D4", VA = "0xD964D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xD96544", Offset = "0xD96544", VA = "0xD96544")]
		public SetAngularVelocity()
		{
		}
	}
	[Token(Token = "0x2000662")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Sets the center of mass of the Rigidbody. Returns Success.")]
	public class SetCenterOfMass : Action
	{
		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of mass of the Rigidbody")]
		public SharedVector3 centerOfMass;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xD9654C", Offset = "0xD9654C", VA = "0xD9654C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xD96650", Offset = "0xD96650", VA = "0xD96650", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xD96744", Offset = "0xD96744", VA = "0xD96744", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xD967B4", Offset = "0xD967B4", VA = "0xD967B4")]
		public SetCenterOfMass()
		{
		}
	}
	[Token(Token = "0x2000663")]
	[TaskDescription("Sets the constraints of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetConstraints : Action
	{
		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The constraints of the Rigidbody")]
		public RigidbodyConstraints constraints;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xD967BC", Offset = "0xD967BC", VA = "0xD967BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xD968C0", Offset = "0xD968C0", VA = "0xD968C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xD96990", Offset = "0xD96990", VA = "0xD96990", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xD969B4", Offset = "0xD969B4", VA = "0xD969B4")]
		public SetConstraints()
		{
		}
	}
	[Token(Token = "0x2000664")]
	[TaskDescription("Sets the drag of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetDrag : Action
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The drag of the Rigidbody")]
		public SharedFloat drag;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xD969BC", Offset = "0xD969BC", VA = "0xD969BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xD96AC0", Offset = "0xD96AC0", VA = "0xD96AC0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xD96BB4", Offset = "0xD96BB4", VA = "0xD96BB4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xD96BE8", Offset = "0xD96BE8", VA = "0xD96BE8")]
		public SetDrag()
		{
		}
	}
	[Token(Token = "0x2000665")]
	[TaskDescription("Sets the freeze rotation value of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetFreezeRotation : Action
	{
		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The freeze rotation value of the Rigidbody")]
		public SharedBool freezeRotation;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xD96BF0", Offset = "0xD96BF0", VA = "0xD96BF0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xD96CF4", Offset = "0xD96CF4", VA = "0xD96CF4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xD96DEC", Offset = "0xD96DEC", VA = "0xD96DEC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xD96E20", Offset = "0xD96E20", VA = "0xD96E20")]
		public SetFreezeRotation()
		{
		}
	}
	[Token(Token = "0x2000666")]
	[TaskDescription("Sets the is kinematic value of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetIsKinematic : Action
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The is kinematic value of the Rigidbody")]
		public SharedBool isKinematic;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xD96E28", Offset = "0xD96E28", VA = "0xD96E28", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xD96F2C", Offset = "0xD96F2C", VA = "0xD96F2C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xD97024", Offset = "0xD97024", VA = "0xD97024", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xD97058", Offset = "0xD97058", VA = "0xD97058")]
		public SetIsKinematic()
		{
		}
	}
	[Token(Token = "0x2000667")]
	[TaskDescription("Sets the mass of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetMass : Action
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The mass of the Rigidbody")]
		public SharedFloat mass;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xD97060", Offset = "0xD97060", VA = "0xD97060", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xD97164", Offset = "0xD97164", VA = "0xD97164", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xD97258", Offset = "0xD97258", VA = "0xD97258", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xD9728C", Offset = "0xD9728C", VA = "0xD9728C")]
		public SetMass()
		{
		}
	}
	[Token(Token = "0x2000668")]
	[TaskDescription("Sets the position of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetPosition : Action
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the Rigidbody")]
		public SharedVector3 position;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xD97294", Offset = "0xD97294", VA = "0xD97294", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xD97398", Offset = "0xD97398", VA = "0xD97398", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xD9748C", Offset = "0xD9748C", VA = "0xD9748C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xD974FC", Offset = "0xD974FC", VA = "0xD974FC")]
		public SetPosition()
		{
		}
	}
	[Token(Token = "0x2000669")]
	[TaskDescription("Stores the rotation of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetRotation : Action
	{
		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The rotation of the Rigidbody")]
		public SharedQuaternion rotation;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xD97504", Offset = "0xD97504", VA = "0xD97504", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xD97608", Offset = "0xD97608", VA = "0xD97608", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xD976FC", Offset = "0xD976FC", VA = "0xD976FC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xD9776C", Offset = "0xD9776C", VA = "0xD9776C")]
		public SetRotation()
		{
		}
	}
	[Token(Token = "0x200066A")]
	[TaskDescription("Sets the use gravity value of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetUseGravity : Action
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The use gravity value of the Rigidbody")]
		public SharedBool useGravity;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xD97774", Offset = "0xD97774", VA = "0xD97774", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xD97878", Offset = "0xD97878", VA = "0xD97878", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xD97970", Offset = "0xD97970", VA = "0xD97970", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xD979A4", Offset = "0xD979A4", VA = "0xD979A4")]
		public SetUseGravity()
		{
		}
	}
	[Token(Token = "0x200066B")]
	[TaskDescription("Sets the velocity of the Rigidbody. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class SetVelocity : Action
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The velocity of the Rigidbody")]
		public SharedVector3 velocity;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xD979AC", Offset = "0xD979AC", VA = "0xD979AC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xD97AB0", Offset = "0xD97AB0", VA = "0xD97AB0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xD97BA4", Offset = "0xD97BA4", VA = "0xD97BA4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xD97C14", Offset = "0xD97C14", VA = "0xD97C14")]
		public SetVelocity()
		{
		}
	}
	[Token(Token = "0x200066C")]
	[TaskDescription("Forces the Rigidbody to sleep at least one frame. Returns Success.")]
	[TaskCategory("Unity/Rigidbody")]
	public class Sleep : Conditional
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xD97C1C", Offset = "0xD97C1C", VA = "0xD97C1C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xD97D20", Offset = "0xD97D20", VA = "0xD97D20", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xD97DEC", Offset = "0xD97DEC", VA = "0xD97DEC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xD97DF8", Offset = "0xD97DF8", VA = "0xD97DF8")]
		public Sleep()
		{
		}
	}
	[Token(Token = "0x200066D")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Returns Success if the Rigidbody is using gravity, otherwise Failure.")]
	public class UseGravity : Conditional
	{
		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xD97E00", Offset = "0xD97E00", VA = "0xD97E00", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xD97F04", Offset = "0xD97F04", VA = "0xD97F04", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xD97FD8", Offset = "0xD97FD8", VA = "0xD97FD8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xD97FE4", Offset = "0xD97FE4", VA = "0xD97FE4")]
		public UseGravity()
		{
		}
	}
	[Token(Token = "0x200066E")]
	[TaskCategory("Unity/Rigidbody")]
	[TaskDescription("Forces the Rigidbody to wake up. Returns Success.")]
	public class WakeUp : Conditional
	{
		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xD97FEC", Offset = "0xD97FEC", VA = "0xD97FEC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xD980F0", Offset = "0xD980F0", VA = "0xD980F0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xD981BC", Offset = "0xD981BC", VA = "0xD981BC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xD981C8", Offset = "0xD981C8", VA = "0xD981C8")]
		public WakeUp()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityRenderer
{
	[Token(Token = "0x200066F")]
	[TaskDescription("Returns Success if the Renderer is visible, otherwise Failure.")]
	[TaskCategory("Unity/Renderer")]
	public class IsVisible : Conditional
	{
		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer renderer;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xD981D0", Offset = "0xD981D0", VA = "0xD981D0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xD982D4", Offset = "0xD982D4", VA = "0xD982D4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xD983A8", Offset = "0xD983A8", VA = "0xD983A8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xD983B4", Offset = "0xD983B4", VA = "0xD983B4")]
		public IsVisible()
		{
		}
	}
	[Token(Token = "0x2000670")]
	[TaskDescription("Sets the material on the Renderer.")]
	[TaskCategory("Unity/Renderer")]
	public class SetMaterial : Action
	{
		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The material to set")]
		public SharedMaterial material;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer renderer;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xD983BC", Offset = "0xD983BC", VA = "0xD983BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xD984C0", Offset = "0xD984C0", VA = "0xD984C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xD985B8", Offset = "0xD985B8", VA = "0xD985B8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xD985E0", Offset = "0xD985E0", VA = "0xD985E0")]
		public SetMaterial()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityQuaternion
{
	[Token(Token = "0x2000671")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the angle in degrees between two rotations.")]
	public class Angle : Action
	{
		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first rotation")]
		public SharedQuaternion firstRotation;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second rotation")]
		public SharedQuaternion secondRotation;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedFloat storeResult;

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xD985E8", Offset = "0xD985E8", VA = "0xD985E8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xD986EC", Offset = "0xD986EC", VA = "0xD986EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xD98780", Offset = "0xD98780", VA = "0xD98780")]
		public Angle()
		{
		}
	}
	[Token(Token = "0x2000672")]
	[TaskDescription("Stores the rotation which rotates the specified degrees around the specified axis.")]
	[TaskCategory("Unity/Quaternion")]
	public class AngleAxis : Action
	{
		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The number of degrees")]
		public SharedFloat degrees;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The axis direction")]
		public SharedVector3 axis;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xD98788", Offset = "0xD98788", VA = "0xD98788", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xD9885C", Offset = "0xD9885C", VA = "0xD9885C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xD9892C", Offset = "0xD9892C", VA = "0xD9892C")]
		public AngleAxis()
		{
		}
	}
	[Token(Token = "0x2000673")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the dot product between two rotations.")]
	public class Dot : Action
	{
		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first rotation")]
		public SharedQuaternion leftRotation;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second rotation")]
		public SharedQuaternion rightRotation;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedFloat storeResult;

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xD98934", Offset = "0xD98934", VA = "0xD98934", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xD98A00", Offset = "0xD98A00", VA = "0xD98A00", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xD98A94", Offset = "0xD98A94", VA = "0xD98A94")]
		public Dot()
		{
		}
	}
	[Token(Token = "0x2000674")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the quaternion of a euler vector.")]
	public class Euler : Action
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The euler vector")]
		public SharedVector3 eulerVector;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The stored quaternion")]
		[RequiredField]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0xD98A9C", Offset = "0xD98A9C", VA = "0xD98A9C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xD98B38", Offset = "0xD98B38", VA = "0xD98B38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xD98BEC", Offset = "0xD98BEC", VA = "0xD98BEC")]
		public Euler()
		{
		}
	}
	[Token(Token = "0x2000675")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores a rotation which rotates from the first direction to the second.")]
	public class FromToRotation : Action
	{
		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from rotation")]
		public SharedVector3 fromDirection;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to rotation")]
		public SharedVector3 toDirection;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xD98BF4", Offset = "0xD98BF4", VA = "0xD98BF4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xD98CC0", Offset = "0xD98CC0", VA = "0xD98CC0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xD98D88", Offset = "0xD98D88", VA = "0xD98D88")]
		public FromToRotation()
		{
		}
	}
	[Token(Token = "0x2000676")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the quaternion identity.")]
	public class Identity : Action
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The identity")]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xD98D90", Offset = "0xD98D90", VA = "0xD98D90", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xD98E24", Offset = "0xD98E24", VA = "0xD98E24", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xD98E88", Offset = "0xD98E88", VA = "0xD98E88")]
		public Identity()
		{
		}
	}
	[Token(Token = "0x2000677")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the inverse of the specified quaternion.")]
	public class Inverse : Action
	{
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The target quaternion")]
		public SharedQuaternion targetQuaternion;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The stored quaternion")]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xD98E90", Offset = "0xD98E90", VA = "0xD98E90", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xD98F18", Offset = "0xD98F18", VA = "0xD98F18", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xD98F90", Offset = "0xD98F90", VA = "0xD98F90")]
		public Inverse()
		{
		}
	}
	[Token(Token = "0x2000678")]
	[TaskDescription("Lerps between two quaternions.")]
	[TaskCategory("Unity/Quaternion")]
	public class Lerp : Action
	{
		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from rotation")]
		public SharedQuaternion fromQuaternion;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to rotation")]
		public SharedQuaternion toQuaternion;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount to lerp")]
		public SharedFloat amount;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xD98F98", Offset = "0xD98F98", VA = "0xD98F98", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xD990C0", Offset = "0xD990C0", VA = "0xD990C0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xD99164", Offset = "0xD99164", VA = "0xD99164")]
		public Lerp()
		{
		}
	}
	[Token(Token = "0x2000679")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the quaternion of a forward vector.")]
	public class LookRotation : Action
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The forward vector")]
		public SharedVector3 forwardVector;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second Vector3")]
		public SharedVector3 secondVector3;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The stored quaternion")]
		[RequiredField]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xD9916C", Offset = "0xD9916C", VA = "0xD9916C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xD991F4", Offset = "0xD991F4", VA = "0xD991F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xD992A8", Offset = "0xD992A8", VA = "0xD992A8")]
		public LookRotation()
		{
		}
	}
	[Token(Token = "0x200067A")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Stores the quaternion after a rotation.")]
	public class RotateTowards : Action
	{
		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from rotation")]
		public SharedQuaternion fromQuaternion;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to rotation")]
		public SharedQuaternion toQuaternion;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The maximum degrees delta")]
		public SharedFloat maxDeltaDegrees;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xD992B0", Offset = "0xD992B0", VA = "0xD992B0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xD99464", Offset = "0xD99464", VA = "0xD99464", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xD99508", Offset = "0xD99508", VA = "0xD99508")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x200067B")]
	[TaskCategory("Unity/Quaternion")]
	[TaskDescription("Spherically lerp between two quaternions.")]
	public class Slerp : Action
	{
		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from rotation")]
		public SharedQuaternion fromQuaternion;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to rotation")]
		public SharedQuaternion toQuaternion;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount to lerp")]
		public SharedFloat amount;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedQuaternion storeResult;

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xD99510", Offset = "0xD99510", VA = "0xD99510", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xD99638", Offset = "0xD99638", VA = "0xD99638", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xD996DC", Offset = "0xD996DC", VA = "0xD996DC")]
		public Slerp()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityPlayerPrefs
{
	[Token(Token = "0x200067C")]
	[TaskCategory("Unity/PlayerPrefs")]
	[TaskDescription("Deletes all entries from the PlayerPrefs.")]
	public class DeleteAll : Action
	{
		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xD996E4", Offset = "0xD996E4", VA = "0xD996E4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xD996FC", Offset = "0xD996FC", VA = "0xD996FC")]
		public DeleteAll()
		{
		}
	}
	[Token(Token = "0x200067D")]
	[TaskCategory("Unity/PlayerPrefs")]
	[TaskDescription("Deletes the specified key from the PlayerPrefs.")]
	public class DeleteKey : Action
	{
		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to delete")]
		public SharedString key;

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xD99704", Offset = "0xD99704", VA = "0xD99704", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xD99764", Offset = "0xD99764", VA = "0xD99764", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xD997BC", Offset = "0xD997BC", VA = "0xD997BC")]
		public DeleteKey()
		{
		}
	}
	[Token(Token = "0x200067E")]
	[TaskCategory("Unity/PlayerPrefs")]
	[TaskDescription("Stores the value with the specified key from the PlayerPrefs.")]
	public class GetFloat : Action
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to store")]
		public SharedString key;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The default value")]
		public SharedFloat defaultValue;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The value retrieved from the PlayerPrefs")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xD997C4", Offset = "0xD997C4", VA = "0xD997C4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xD9987C", Offset = "0xD9987C", VA = "0xD9987C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xD9990C", Offset = "0xD9990C", VA = "0xD9990C")]
		public GetFloat()
		{
		}
	}
	[Token(Token = "0x200067F")]
	[TaskCategory("Unity/PlayerPrefs")]
	[TaskDescription("Stores the value with the specified key from the PlayerPrefs.")]
	public class GetInt : Action
	{
		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to store")]
		public SharedString key;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The default value")]
		public SharedInt defaultValue;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The value retrieved from the PlayerPrefs")]
		public SharedInt storeResult;

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xD99914", Offset = "0xD99914", VA = "0xD99914", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xD999D4", Offset = "0xD999D4", VA = "0xD999D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xD99A64", Offset = "0xD99A64", VA = "0xD99A64")]
		public GetInt()
		{
		}
	}
	[Token(Token = "0x2000680")]
	[TaskDescription("Stores the value with the specified key from the PlayerPrefs.")]
	[TaskCategory("Unity/PlayerPrefs")]
	public class GetString : Action
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to store")]
		public SharedString key;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The default value")]
		public SharedString defaultValue;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The value retrieved from the PlayerPrefs")]
		public SharedString storeResult;

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xD99A6C", Offset = "0xD99A6C", VA = "0xD99A6C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xD99B18", Offset = "0xD99B18", VA = "0xD99B18", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xD99BA8", Offset = "0xD99BA8", VA = "0xD99BA8")]
		public GetString()
		{
		}
	}
	[Token(Token = "0x2000681")]
	[TaskDescription("Retruns success if the specified key exists.")]
	[TaskCategory("Unity/PlayerPrefs")]
	public class HasKey : Conditional
	{
		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to check")]
		public SharedString key;

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xD99BB0", Offset = "0xD99BB0", VA = "0xD99BB0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xD99C18", Offset = "0xD99C18", VA = "0xD99C18", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xD99C70", Offset = "0xD99C70", VA = "0xD99C70")]
		public HasKey()
		{
		}
	}
	[Token(Token = "0x2000682")]
	[TaskDescription("Saves the PlayerPrefs.")]
	[TaskCategory("Unity/PlayerPrefs")]
	public class Save : Action
	{
		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xD99C78", Offset = "0xD99C78", VA = "0xD99C78", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xD99C90", Offset = "0xD99C90", VA = "0xD99C90")]
		public Save()
		{
		}
	}
	[Token(Token = "0x2000683")]
	[TaskDescription("Sets the value with the specified key from the PlayerPrefs.")]
	[TaskCategory("Unity/PlayerPrefs")]
	public class SetFloat : Action
	{
		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to store")]
		public SharedString key;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value to set")]
		public SharedFloat value;

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xD99C98", Offset = "0xD99C98", VA = "0xD99C98", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xD99D28", Offset = "0xD99D28", VA = "0xD99D28", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xD99D9C", Offset = "0xD99D9C", VA = "0xD99D9C")]
		public SetFloat()
		{
		}
	}
	[Token(Token = "0x2000684")]
	[TaskCategory("Unity/PlayerPrefs")]
	[TaskDescription("Sets the value with the specified key from the PlayerPrefs.")]
	public class SetInt : Action
	{
		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to store")]
		public SharedString key;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value to set")]
		public SharedInt value;

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xD99DA4", Offset = "0xD99DA4", VA = "0xD99DA4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xD99E38", Offset = "0xD99E38", VA = "0xD99E38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xD99EAC", Offset = "0xD99EAC", VA = "0xD99EAC")]
		public SetInt()
		{
		}
	}
	[Token(Token = "0x2000685")]
	[TaskDescription("Sets the value with the specified key from the PlayerPrefs.")]
	[TaskCategory("Unity/PlayerPrefs")]
	public class SetString : Action
	{
		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The key to store")]
		public SharedString key;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value to set")]
		public SharedString value;

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xD99EB4", Offset = "0xD99EB4", VA = "0xD99EB4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xD99F34", Offset = "0xD99F34", VA = "0xD99F34", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xD99FA8", Offset = "0xD99FA8", VA = "0xD99FA8")]
		public SetString()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityPhysics2D
{
	[Token(Token = "0x2000686")]
	[TaskDescription("Casts a circle against all colliders in the scene. Returns success if a collider was hit.")]
	[TaskCategory("Unity/Physics2D")]
	public class Circlecast : Action
	{
		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Starts the circlecast at the GameObject's position. If null the originPosition will be used.")]
		public SharedGameObject originGameObject;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Starts the circlecast at the position. Only used if originGameObject is null.")]
		public SharedVector2 originPosition;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The radius of the circlecast")]
		public SharedFloat radius;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The direction of the circlecast")]
		public SharedVector2 direction;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The length of the ray. Set to -1 for infinity.")]
		public SharedFloat distance;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Selectively ignore colliders.")]
		public LayerMask layerMask;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("Use world or local space. The direction is in world space if no GameObject is specified.")]
		public Space space;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SharedRequired]
		[Tooltip("Stores the hit object of the circlecast.")]
		public SharedGameObject storeHitObject;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Stores the hit point of the circlecast.")]
		[SharedRequired]
		public SharedVector2 storeHitPoint;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SharedRequired]
		[Tooltip("Stores the hit normal of the circlecast.")]
		public SharedVector2 storeHitNormal;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SharedRequired]
		[Tooltip("Stores the hit distance of the circlecast.")]
		public SharedFloat storeHitDistance;

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xD99FB0", Offset = "0xD99FB0", VA = "0xD99FB0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xD9A334", Offset = "0xD9A334", VA = "0xD9A334", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xD9A430", Offset = "0xD9A430", VA = "0xD9A430")]
		public Circlecast()
		{
		}
	}
	[Token(Token = "0x2000687")]
	[TaskDescription("Returns success if there is any collider intersecting the line between start and end")]
	[TaskCategory("Unity/Physics2D")]
	public class Linecast : Action
	{
		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The starting position of the linecast.")]
		public SharedVector2 startPosition;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The ending position of the linecast.")]
		public SharedVector2 endPosition;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Selectively ignore colliders.")]
		public LayerMask layerMask;

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xD9A478", Offset = "0xD9A478", VA = "0xD9A478", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xD9A588", Offset = "0xD9A588", VA = "0xD9A588", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xD9A63C", Offset = "0xD9A63C", VA = "0xD9A63C")]
		public Linecast()
		{
		}
	}
	[Token(Token = "0x2000688")]
	[TaskDescription("Casts a ray against all colliders in the scene. Returns success if a collider was hit.")]
	[TaskCategory("Unity/Physics2D")]
	public class Raycast : Action
	{
		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Starts the ray at the GameObject's position. If null the originPosition will be used.")]
		public SharedGameObject originGameObject;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Starts the ray at the position. Only used if originGameObject is null.")]
		public SharedVector2 originPosition;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The direction of the ray")]
		public SharedVector2 direction;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The length of the ray. Set to -1 for infinity.")]
		public SharedFloat distance;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Selectively ignore colliders.")]
		public LayerMask layerMask;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("Cast the ray in world or local space. The direction is in world space if no GameObject is specified.")]
		public Space space;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SharedRequired]
		[Tooltip("Stores the hit object of the raycast.")]
		public SharedGameObject storeHitObject;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("Stores the hit point of the raycast.")]
		[SharedRequired]
		public SharedVector2 storeHitPoint;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Stores the hit normal of the raycast.")]
		[SharedRequired]
		public SharedVector2 storeHitNormal;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Stores the hit distance of the raycast.")]
		[SharedRequired]
		public SharedFloat storeHitDistance;

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xD9A664", Offset = "0xD9A664", VA = "0xD9A664", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xD9A9D0", Offset = "0xD9A9D0", VA = "0xD9A9D0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xD9AAB0", Offset = "0xD9AAB0", VA = "0xD9AAB0")]
		public Raycast()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityPhysics
{
	[Token(Token = "0x2000689")]
	[TaskCategory("Unity/Physics")]
	[TaskDescription("Returns success if there is any collider intersecting the line between start and end")]
	public class Linecast : Action
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The starting position of the linecast")]
		public SharedVector3 startPosition;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The ending position of the linecast")]
		public SharedVector3 endPosition;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Selectively ignore colliders.")]
		public LayerMask layerMask;

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xD9AAF8", Offset = "0xD9AAF8", VA = "0xD9AAF8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xD9ABC4", Offset = "0xD9ABC4", VA = "0xD9ABC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xD9AC80", Offset = "0xD9AC80", VA = "0xD9AC80")]
		public Linecast()
		{
		}
	}
	[Token(Token = "0x200068A")]
	[TaskCategory("Unity/Physics")]
	[TaskDescription("Casts a ray against all colliders in the scene. Returns success if a collider was hit.")]
	public class Raycast : Action
	{
		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Starts the ray at the GameObject's position. If null the originPosition will be used")]
		public SharedGameObject originGameObject;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Starts the ray at the position. Only used if originGameObject is null")]
		public SharedVector3 originPosition;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The direction of the ray")]
		public SharedVector3 direction;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The length of the ray. Set to -1 for infinity")]
		public SharedFloat distance;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Selectively ignore colliders")]
		public LayerMask layerMask;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("Cast the ray in world or local space. The direction is in world space if no GameObject is specified")]
		public Space space;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Stores the hit object of the raycast")]
		[SharedRequired]
		public SharedGameObject storeHitObject;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SharedRequired]
		[Tooltip("Stores the hit point of the raycast")]
		public SharedVector3 storeHitPoint;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SharedRequired]
		[Tooltip("Stores the hit normal of the raycast")]
		public SharedVector3 storeHitNormal;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Stores the hit distance of the raycast")]
		[SharedRequired]
		public SharedFloat storeHitDistance;

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xD9ACA8", Offset = "0xD9ACA8", VA = "0xD9ACA8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xD9AFBC", Offset = "0xD9AFBC", VA = "0xD9AFBC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xD9B0A4", Offset = "0xD9B0A4", VA = "0xD9B0A4")]
		public Raycast()
		{
		}
	}
	[Token(Token = "0x200068B")]
	[TaskDescription("Casts a sphere against all colliders in the scene. Returns success if a collider was hit.")]
	[TaskCategory("Unity/Physics")]
	public class SphereCast : Action
	{
		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Starts the spherecast at the GameObject's position. If null the originPosition will be used")]
		public SharedGameObject originGameObject;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Starts the sherecast at the position. Only used if originGameObject is null")]
		public SharedVector3 originPosition;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The radius of the spherecast")]
		public SharedFloat radius;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The direction of the spherecast")]
		public SharedVector3 direction;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The length of the spherecast. Set to -1 for infinity")]
		public SharedFloat distance;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Selectively ignore colliders")]
		public LayerMask layerMask;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("Use world or local space. The direction is in world space if no GameObject is specified")]
		public Space space;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SharedRequired]
		[Tooltip("Stores the hit object of the spherecast")]
		public SharedGameObject storeHitObject;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SharedRequired]
		[Tooltip("Stores the hit point of the spherecast")]
		public SharedVector3 storeHitPoint;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SharedRequired]
		[Tooltip("Stores the hit normal of the spherecast")]
		public SharedVector3 storeHitNormal;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("Stores the hit distance of the spherecast")]
		[SharedRequired]
		public SharedFloat storeHitDistance;

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xD9B0EC", Offset = "0xD9B0EC", VA = "0xD9B0EC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xD9B418", Offset = "0xD9B418", VA = "0xD9B418", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xD9B51C", Offset = "0xD9B51C", VA = "0xD9B51C")]
		public SphereCast()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityParticleSystem
{
	[Token(Token = "0x200068C")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Clear the Particle System.")]
	public class Clear : Action
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xD9B564", Offset = "0xD9B564", VA = "0xD9B564", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xD9B668", Offset = "0xD9B668", VA = "0xD9B668", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xD9B734", Offset = "0xD9B734", VA = "0xD9B734", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xD9B740", Offset = "0xD9B740", VA = "0xD9B740")]
		public Clear()
		{
		}
	}
	[Token(Token = "0x200068D")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Stores the duration of the Particle System.")]
	public class GetDuration : Action
	{
		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The duration of the ParticleSystem")]
		public SharedFloat storeResult;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xD9B748", Offset = "0xD9B748", VA = "0xD9B748", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xD9B84C", Offset = "0xD9B84C", VA = "0xD9B84C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xD9B95C", Offset = "0xD9B95C", VA = "0xD9B95C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xD9B990", Offset = "0xD9B990", VA = "0xD9B990")]
		public GetDuration()
		{
		}
	}
	[Token(Token = "0x200068E")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Stores the emission rate of the Particle System.")]
	public class GetEmissionRate : Action
	{
		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The emission rate of the ParticleSystem")]
		public SharedFloat storeResult;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xD9B998", Offset = "0xD9B998", VA = "0xD9B998", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xD9BA9C", Offset = "0xD9BA9C", VA = "0xD9BA9C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xD9BB80", Offset = "0xD9BB80", VA = "0xD9BB80", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xD9BBB4", Offset = "0xD9BBB4", VA = "0xD9BBB4")]
		public GetEmissionRate()
		{
		}
	}
	[Token(Token = "0x200068F")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Stores if the Particle System is emitting particles.")]
	public class GetEnableEmission : Action
	{
		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Is the Particle System emitting particles?")]
		[RequiredField]
		public SharedBool storeResult;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xD9BBBC", Offset = "0xD9BBBC", VA = "0xD9BBBC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xD9BCC0", Offset = "0xD9BCC0", VA = "0xD9BCC0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xD9BDD4", Offset = "0xD9BDD4", VA = "0xD9BDD4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xD9BE08", Offset = "0xD9BE08", VA = "0xD9BE08")]
		public GetEnableEmission()
		{
		}
	}
	[Token(Token = "0x2000690")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Stores if the Particle System should loop.")]
	public class GetLoop : Action
	{
		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Should the ParticleSystem loop?")]
		[RequiredField]
		public SharedBool storeResult;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD9BE10", Offset = "0xD9BE10", VA = "0xD9BE10", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD9BF14", Offset = "0xD9BF14", VA = "0xD9BF14", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xD9C028", Offset = "0xD9C028", VA = "0xD9C028", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xD9C05C", Offset = "0xD9C05C", VA = "0xD9C05C")]
		public GetLoop()
		{
		}
	}
	[Token(Token = "0x2000691")]
	[TaskDescription("Stores the max particles of the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class GetMaxParticles : Action
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The max particles of the ParticleSystem")]
		public SharedFloat storeResult;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xD9C064", Offset = "0xD9C064", VA = "0xD9C064", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD9C168", Offset = "0xD9C168", VA = "0xD9C168", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xD9C27C", Offset = "0xD9C27C", VA = "0xD9C27C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xD9C2B0", Offset = "0xD9C2B0", VA = "0xD9C2B0")]
		public GetMaxParticles()
		{
		}
	}
	[Token(Token = "0x2000692")]
	[TaskDescription("Stores the particle count of the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class GetParticleCount : Action
	{
		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The particle count of the ParticleSystem")]
		public SharedFloat storeResult;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xD9C2B8", Offset = "0xD9C2B8", VA = "0xD9C2B8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD9C3BC", Offset = "0xD9C3BC", VA = "0xD9C3BC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xD9C4B4", Offset = "0xD9C4B4", VA = "0xD9C4B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xD9C4E8", Offset = "0xD9C4E8", VA = "0xD9C4E8")]
		public GetParticleCount()
		{
		}
	}
	[Token(Token = "0x2000693")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Stores the playback speed of the Particle System.")]
	public class GetPlaybackSpeed : Action
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The playback speed of the ParticleSystem")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xD9C4F0", Offset = "0xD9C4F0", VA = "0xD9C4F0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xD9C5F4", Offset = "0xD9C5F4", VA = "0xD9C5F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xD9C704", Offset = "0xD9C704", VA = "0xD9C704", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xD9C738", Offset = "0xD9C738", VA = "0xD9C738")]
		public GetPlaybackSpeed()
		{
		}
	}
	[Token(Token = "0x2000694")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Stores the time of the Particle System.")]
	public class GetTime : Action
	{
		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The time of the ParticleSystem")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xD9C740", Offset = "0xD9C740", VA = "0xD9C740", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xD9C844", Offset = "0xD9C844", VA = "0xD9C844", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xD9C938", Offset = "0xD9C938", VA = "0xD9C938", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xD9C96C", Offset = "0xD9C96C", VA = "0xD9C96C")]
		public GetTime()
		{
		}
	}
	[Token(Token = "0x2000695")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Is the Particle System alive?")]
	public class IsAlive : Conditional
	{
		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xD9C974", Offset = "0xD9C974", VA = "0xD9C974", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xD9CA78", Offset = "0xD9CA78", VA = "0xD9CA78", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xD9CB4C", Offset = "0xD9CB4C", VA = "0xD9CB4C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xD9CB58", Offset = "0xD9CB58", VA = "0xD9CB58")]
		public IsAlive()
		{
		}
	}
	[Token(Token = "0x2000696")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Is the Particle System paused?")]
	public class IsPaused : Conditional
	{
		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xD9CB60", Offset = "0xD9CB60", VA = "0xD9CB60", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xD9CC64", Offset = "0xD9CC64", VA = "0xD9CC64", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xD9CD38", Offset = "0xD9CD38", VA = "0xD9CD38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xD9CD44", Offset = "0xD9CD44", VA = "0xD9CD44")]
		public IsPaused()
		{
		}
	}
	[Token(Token = "0x2000697")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Is the Particle System playing?")]
	public class IsPlaying : Conditional
	{
		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xD9CD4C", Offset = "0xD9CD4C", VA = "0xD9CD4C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xD9CE50", Offset = "0xD9CE50", VA = "0xD9CE50", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xD9CF24", Offset = "0xD9CF24", VA = "0xD9CF24", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xD9CF30", Offset = "0xD9CF30", VA = "0xD9CF30")]
		public IsPlaying()
		{
		}
	}
	[Token(Token = "0x2000698")]
	[TaskDescription("Is the Particle System stopped?")]
	[TaskCategory("Unity/ParticleSystem")]
	public class IsStopped : Conditional
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xD9CF38", Offset = "0xD9CF38", VA = "0xD9CF38", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xD9D03C", Offset = "0xD9D03C", VA = "0xD9D03C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xD9D110", Offset = "0xD9D110", VA = "0xD9D110", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xD9D11C", Offset = "0xD9D11C", VA = "0xD9D11C")]
		public IsStopped()
		{
		}
	}
	[Token(Token = "0x2000699")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Pause the Particle System.")]
	public class Pause : Action
	{
		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xD9D124", Offset = "0xD9D124", VA = "0xD9D124", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xD9D228", Offset = "0xD9D228", VA = "0xD9D228", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xD9D2F4", Offset = "0xD9D2F4", VA = "0xD9D2F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xD9D300", Offset = "0xD9D300", VA = "0xD9D300")]
		public Pause()
		{
		}
	}
	[Token(Token = "0x200069A")]
	[TaskDescription("Play the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class Play : Action
	{
		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xD9D308", Offset = "0xD9D308", VA = "0xD9D308", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xD9D40C", Offset = "0xD9D40C", VA = "0xD9D40C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xD9D4D8", Offset = "0xD9D4D8", VA = "0xD9D4D8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xD9D4E4", Offset = "0xD9D4E4", VA = "0xD9D4E4")]
		public Play()
		{
		}
	}
	[Token(Token = "0x200069B")]
	[TaskDescription("Sets the emission rate of the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class SetEmissionRate : Action
	{
		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The emission rate of the ParticleSystem")]
		public SharedFloat emissionRate;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xD9D4EC", Offset = "0xD9D4EC", VA = "0xD9D4EC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xD9D5F0", Offset = "0xD9D5F0", VA = "0xD9D5F0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xD9D6D4", Offset = "0xD9D6D4", VA = "0xD9D6D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xD9D708", Offset = "0xD9D708", VA = "0xD9D708")]
		public SetEmissionRate()
		{
		}
	}
	[Token(Token = "0x200069C")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Enables or disables the Particle System emission.")]
	public class SetEnableEmission : Action
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Enable the ParticleSystem emissions?")]
		public SharedBool enable;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xD9D710", Offset = "0xD9D710", VA = "0xD9D710", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xD9D814", Offset = "0xD9D814", VA = "0xD9D814", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xD9D924", Offset = "0xD9D924", VA = "0xD9D924", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xD9D958", Offset = "0xD9D958", VA = "0xD9D958")]
		public SetEnableEmission()
		{
		}
	}
	[Token(Token = "0x200069D")]
	[TaskDescription("Sets if the Particle System should loop.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class SetLoop : Action
	{
		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Should the ParticleSystem loop?")]
		public SharedBool loop;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xD9D960", Offset = "0xD9D960", VA = "0xD9D960", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xD9DA64", Offset = "0xD9DA64", VA = "0xD9DA64", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xD9DB74", Offset = "0xD9DB74", VA = "0xD9DB74", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xD9DBA8", Offset = "0xD9DBA8", VA = "0xD9DBA8")]
		public SetLoop()
		{
		}
	}
	[Token(Token = "0x200069E")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Sets the max particles of the Particle System.")]
	public class SetMaxParticles : Action
	{
		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The max particles of the ParticleSystem")]
		public SharedInt maxParticles;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xD9DBB0", Offset = "0xD9DBB0", VA = "0xD9DBB0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xD9DCB4", Offset = "0xD9DCB4", VA = "0xD9DCB4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xD9DDC4", Offset = "0xD9DDC4", VA = "0xD9DDC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xD9DDF8", Offset = "0xD9DDF8", VA = "0xD9DDF8")]
		public SetMaxParticles()
		{
		}
	}
	[Token(Token = "0x200069F")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Sets the playback speed of the Particle System.")]
	public class SetPlaybackSpeed : Action
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The playback speed of the ParticleSystem")]
		public SharedFloat playbackSpeed;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xD9DE00", Offset = "0xD9DE00", VA = "0xD9DE00", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xD9DF04", Offset = "0xD9DF04", VA = "0xD9DF04", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xD9E010", Offset = "0xD9E010", VA = "0xD9E010", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xD9E044", Offset = "0xD9E044", VA = "0xD9E044")]
		public SetPlaybackSpeed()
		{
		}
	}
	[Token(Token = "0x20006A0")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Sets the start color of the Particle System.")]
	public class SetStartColor : Action
	{
		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start color of the ParticleSystem")]
		public SharedColor startColor;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xD9E078", Offset = "0xD9E078", VA = "0xD9E078", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xD9E17C", Offset = "0xD9E17C", VA = "0xD9E17C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xD9E2B0", Offset = "0xD9E2B0", VA = "0xD9E2B0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xD9E2F0", Offset = "0xD9E2F0", VA = "0xD9E2F0")]
		public SetStartColor()
		{
		}
	}
	[Token(Token = "0x20006A1")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Sets the start delay of the Particle System.")]
	public class SetStartDelay : Action
	{
		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start delay of the ParticleSystem")]
		public SharedFloat startDelay;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xD9E2F8", Offset = "0xD9E2F8", VA = "0xD9E2F8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xD9E3FC", Offset = "0xD9E3FC", VA = "0xD9E3FC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xD9E524", Offset = "0xD9E524", VA = "0xD9E524", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xD9E558", Offset = "0xD9E558", VA = "0xD9E558")]
		public SetStartDelay()
		{
		}
	}
	[Token(Token = "0x20006A2")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Sets the start lifetime of the Particle System.")]
	public class SetStartLifetime : Action
	{
		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start lifetime of the ParticleSystem")]
		public SharedFloat startLifetime;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xD9E560", Offset = "0xD9E560", VA = "0xD9E560", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xD9E664", Offset = "0xD9E664", VA = "0xD9E664", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xD9E78C", Offset = "0xD9E78C", VA = "0xD9E78C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xD9E7C0", Offset = "0xD9E7C0", VA = "0xD9E7C0")]
		public SetStartLifetime()
		{
		}
	}
	[Token(Token = "0x20006A3")]
	[TaskCategory("Unity/ParticleSystem")]
	[TaskDescription("Sets the start rotation of the Particle System.")]
	public class SetStartRotation : Action
	{
		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start rotation of the ParticleSystem")]
		public SharedFloat startRotation;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xD9E7C8", Offset = "0xD9E7C8", VA = "0xD9E7C8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xD9E8CC", Offset = "0xD9E8CC", VA = "0xD9E8CC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xD9E9F4", Offset = "0xD9E9F4", VA = "0xD9E9F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xD9EA28", Offset = "0xD9EA28", VA = "0xD9EA28")]
		public SetStartRotation()
		{
		}
	}
	[Token(Token = "0x20006A4")]
	[TaskDescription("Sets the start size of the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class SetStartSize : Action
	{
		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start size of the ParticleSystem")]
		public SharedFloat startSize;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xD9EA30", Offset = "0xD9EA30", VA = "0xD9EA30", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xD9EB34", Offset = "0xD9EB34", VA = "0xD9EB34", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xD9EC5C", Offset = "0xD9EC5C", VA = "0xD9EC5C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xD9EC90", Offset = "0xD9EC90", VA = "0xD9EC90")]
		public SetStartSize()
		{
		}
	}
	[Token(Token = "0x20006A5")]
	[TaskDescription("Sets the start speed of the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class SetStartSpeed : Action
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The start speed of the ParticleSystem")]
		public SharedFloat startSpeed;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xD9EC98", Offset = "0xD9EC98", VA = "0xD9EC98", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xD9ED9C", Offset = "0xD9ED9C", VA = "0xD9ED9C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xD9EEC4", Offset = "0xD9EEC4", VA = "0xD9EEC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xD9EEF8", Offset = "0xD9EEF8", VA = "0xD9EEF8")]
		public SetStartSpeed()
		{
		}
	}
	[Token(Token = "0x20006A6")]
	[TaskDescription("Sets the time of the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class SetTime : Action
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The time of the ParticleSystem")]
		public SharedFloat time;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xD9EF00", Offset = "0xD9EF00", VA = "0xD9EF00", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xD9F004", Offset = "0xD9F004", VA = "0xD9F004", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xD9F0F8", Offset = "0xD9F0F8", VA = "0xD9F0F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xD9F12C", Offset = "0xD9F12C", VA = "0xD9F12C")]
		public SetTime()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	[TaskDescription("Simulate the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class Simulate : Action
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Time to fastfoward the Particle System to")]
		public SharedFloat time;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xD9F134", Offset = "0xD9F134", VA = "0xD9F134", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xD9F238", Offset = "0xD9F238", VA = "0xD9F238", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xD9F32C", Offset = "0xD9F32C", VA = "0xD9F32C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xD9F360", Offset = "0xD9F360", VA = "0xD9F360")]
		public Simulate()
		{
		}
	}
	[Token(Token = "0x20006A8")]
	[TaskDescription("Stop the Particle System.")]
	[TaskCategory("Unity/ParticleSystem")]
	public class Stop : Action
	{
		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xD9F368", Offset = "0xD9F368", VA = "0xD9F368", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xD9F46C", Offset = "0xD9F46C", VA = "0xD9F46C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xD9F538", Offset = "0xD9F538", VA = "0xD9F538", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xD9F544", Offset = "0xD9F544", VA = "0xD9F544")]
		public Stop()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityNavMeshAgent
{
	[Token(Token = "0x20006A9")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Gets the maximum acceleration of an agent as it follows a path, given in units / sec^2.. Returns Success.")]
	public class GetAcceleration : Action
	{
		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The NavMeshAgent acceleration")]
		[SharedRequired]
		public SharedFloat storeValue;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xD9F54C", Offset = "0xD9F54C", VA = "0xD9F54C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xD9F650", Offset = "0xD9F650", VA = "0xD9F650", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xD9F744", Offset = "0xD9F744", VA = "0xD9F744", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xD9F778", Offset = "0xD9F778", VA = "0xD9F778")]
		public GetAcceleration()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Gets the maximum turning speed in (deg/s) while following a path.. Returns Success.")]
	public class GetAngularSpeed : Action
	{
		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The NavMeshAgent angular speed")]
		[SharedRequired]
		public SharedFloat storeValue;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xD9F780", Offset = "0xD9F780", VA = "0xD9F780", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xD9F884", Offset = "0xD9F884", VA = "0xD9F884", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xD9F978", Offset = "0xD9F978", VA = "0xD9F978", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xD9F9AC", Offset = "0xD9F9AC", VA = "0xD9F9AC")]
		public GetAngularSpeed()
		{
		}
	}
	[Token(Token = "0x20006AB")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Gets the destination of the agent in world-space units. Returns Success.")]
	public class GetDestination : Action
	{
		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SharedRequired]
		[Tooltip("The NavMeshAgent destination")]
		public SharedVector3 storeValue;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xD9F9B4", Offset = "0xD9F9B4", VA = "0xD9F9B4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xD9FAB8", Offset = "0xD9FAB8", VA = "0xD9FAB8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xD9FBAC", Offset = "0xD9FBAC", VA = "0xD9FBAC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xD9FC1C", Offset = "0xD9FC1C", VA = "0xD9FC1C")]
		public GetDestination()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Gets the stop status. Returns Success.")]
	public class GetIsStopped : Action
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SharedRequired]
		[Tooltip("The stop status")]
		public SharedBool storeValue;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xD9FC24", Offset = "0xD9FC24", VA = "0xD9FC24", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xD9FD28", Offset = "0xD9FD28", VA = "0xD9FD28", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xD9FE20", Offset = "0xD9FE20", VA = "0xD9FE20", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xD9FE48", Offset = "0xD9FE48", VA = "0xD9FE48")]
		public GetIsStopped()
		{
		}
	}
	[Token(Token = "0x20006AD")]
	[TaskDescription("Gets the distance between the agent's position and the destination on the current path. Returns Success.")]
	[TaskCategory("Unity/NavMeshAgent")]
	public class GetRemainingDistance : Action
	{
		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The remaining distance")]
		[SharedRequired]
		public SharedFloat storeValue;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xD9FE50", Offset = "0xD9FE50", VA = "0xD9FE50", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xD9FF54", Offset = "0xD9FF54", VA = "0xD9FF54", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xDA0048", Offset = "0xDA0048", VA = "0xDA0048", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xDA007C", Offset = "0xDA007C", VA = "0xDA007C")]
		public GetRemainingDistance()
		{
		}
	}
	[Token(Token = "0x20006AE")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Gets the maximum movement speed when following a path. Returns Success.")]
	public class GetSpeed : Action
	{
		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The NavMeshAgent speed")]
		[SharedRequired]
		public SharedFloat storeValue;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xDA0084", Offset = "0xDA0084", VA = "0xDA0084", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xDA0188", Offset = "0xDA0188", VA = "0xDA0188", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xDA027C", Offset = "0xDA027C", VA = "0xDA027C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xDA02B0", Offset = "0xDA02B0", VA = "0xDA02B0")]
		public GetSpeed()
		{
		}
	}
	[Token(Token = "0x20006AF")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Is the agent stopped?")]
	public class IsStopped : Conditional
	{
		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xDA02B8", Offset = "0xDA02B8", VA = "0xDA02B8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xDA03BC", Offset = "0xDA03BC", VA = "0xDA03BC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xDA0490", Offset = "0xDA0490", VA = "0xDA0490", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xDA049C", Offset = "0xDA049C", VA = "0xDA049C")]
		public IsStopped()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Apply relative movement to the current position. Returns Success.")]
	public class Move : Action
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The relative movement vector")]
		public SharedVector3 offset;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xDA04A4", Offset = "0xDA04A4", VA = "0xDA04A4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xDA05A8", Offset = "0xDA05A8", VA = "0xDA05A8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xDA069C", Offset = "0xDA069C", VA = "0xDA069C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xDA070C", Offset = "0xDA070C", VA = "0xDA070C")]
		public Move()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Clears the current path. Returns Success.")]
	public class ResetPath : Action
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xDA0714", Offset = "0xDA0714", VA = "0xDA0714", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xDA0818", Offset = "0xDA0818", VA = "0xDA0818", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xDA08E4", Offset = "0xDA08E4", VA = "0xDA08E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xDA08F0", Offset = "0xDA08F0", VA = "0xDA08F0")]
		public ResetPath()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Resumes the movement along the current path after a pause. Returns Success.")]
	public class Resume : Action
	{
		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xDA08F8", Offset = "0xDA08F8", VA = "0xDA08F8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xDA09FC", Offset = "0xDA09FC", VA = "0xDA09FC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xDA0ACC", Offset = "0xDA0ACC", VA = "0xDA0ACC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xDA0AD8", Offset = "0xDA0AD8", VA = "0xDA0AD8")]
		public Resume()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Sets the maximum acceleration of an agent as it follows a path, given in units / sec^2. Returns Success.")]
	public class SetAcceleration : Action
	{
		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The NavMeshAgent acceleration")]
		public SharedFloat acceleration;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xDA0AE0", Offset = "0xDA0AE0", VA = "0xDA0AE0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xDA0BE4", Offset = "0xDA0BE4", VA = "0xDA0BE4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xDA0CD8", Offset = "0xDA0CD8", VA = "0xDA0CD8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xDA0D0C", Offset = "0xDA0D0C", VA = "0xDA0D0C")]
		public SetAcceleration()
		{
		}
	}
	[Token(Token = "0x20006B4")]
	[TaskDescription("Sets the maximum turning speed in (deg/s) while following a path. Returns Success.")]
	[TaskCategory("Unity/NavMeshAgent")]
	public class SetAngularSpeed : Action
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The NavMeshAgent angular speed")]
		public SharedFloat angularSpeed;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xDA0D14", Offset = "0xDA0D14", VA = "0xDA0D14", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xDA0E18", Offset = "0xDA0E18", VA = "0xDA0E18", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xDA0F0C", Offset = "0xDA0F0C", VA = "0xDA0F0C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xDA0F40", Offset = "0xDA0F40", VA = "0xDA0F40")]
		public SetAngularSpeed()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	[TaskDescription("Sets the destination of the agent in world-space units. Returns Success if the destination is valid.")]
	[TaskCategory("Unity/NavMeshAgent")]
	public class SetDestination : Action
	{
		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SharedRequired]
		[Tooltip("The NavMeshAgent destination")]
		public SharedVector3 destination;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xDA0F48", Offset = "0xDA0F48", VA = "0xDA0F48", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xDA104C", Offset = "0xDA104C", VA = "0xDA104C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xDA1148", Offset = "0xDA1148", VA = "0xDA1148", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xDA11B8", Offset = "0xDA11B8", VA = "0xDA11B8")]
		public SetDestination()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Sets the stop status. Returns Success.")]
	public class SetIsStopped : Action
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The stop status")]
		public SharedBool isStopped;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xDA11C0", Offset = "0xDA11C0", VA = "0xDA11C0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xDA12C4", Offset = "0xDA12C4", VA = "0xDA12C4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xDA13BC", Offset = "0xDA13BC", VA = "0xDA13BC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xDA13C8", Offset = "0xDA13C8", VA = "0xDA13C8")]
		public SetIsStopped()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Sets the maximum movement speed when following a path. Returns Success.")]
	public class SetSpeed : Action
	{
		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The NavMeshAgent speed")]
		public SharedFloat speed;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xDA13D0", Offset = "0xDA13D0", VA = "0xDA13D0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xDA14D4", Offset = "0xDA14D4", VA = "0xDA14D4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xDA15C8", Offset = "0xDA15C8", VA = "0xDA15C8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xDA15FC", Offset = "0xDA15FC", VA = "0xDA15FC")]
		public SetSpeed()
		{
		}
	}
	[Token(Token = "0x20006B8")]
	[TaskDescription("Stop movement of this agent along its current path. Returns Success.")]
	[TaskCategory("Unity/NavMeshAgent")]
	public class Stop : Action
	{
		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xDA1604", Offset = "0xDA1604", VA = "0xDA1604", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xDA1708", Offset = "0xDA1708", VA = "0xDA1708", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xDA17D8", Offset = "0xDA17D8", VA = "0xDA17D8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xDA17E4", Offset = "0xDA17E4", VA = "0xDA17E4")]
		public Stop()
		{
		}
	}
	[Token(Token = "0x20006B9")]
	[TaskCategory("Unity/NavMeshAgent")]
	[TaskDescription("Warps agent to the provided position. Returns Success.")]
	public class Warp : Action
	{
		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position to warp to")]
		public SharedVector3 newPosition;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xDA17EC", Offset = "0xDA17EC", VA = "0xDA17EC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xDA18F0", Offset = "0xDA18F0", VA = "0xDA18F0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xDA19E4", Offset = "0xDA19E4", VA = "0xDA19E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xDA1A54", Offset = "0xDA1A54", VA = "0xDA1A54")]
		public Warp()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.Math
{
	[Token(Token = "0x20006BA")]
	[TaskDescription("Performs a comparison between two bools.")]
	[TaskCategory("Unity/Math")]
	public class BoolComparison : Conditional
	{
		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first bool")]
		public SharedBool bool1;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second bool")]
		public SharedBool bool2;

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xDA1A5C", Offset = "0xDA1A5C", VA = "0xDA1A5C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xDA1AD8", Offset = "0xDA1AD8", VA = "0xDA1AD8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xDA1B1C", Offset = "0xDA1B1C", VA = "0xDA1B1C")]
		public BoolComparison()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	[TaskDescription("Flips the value of the bool.")]
	[TaskCategory("Unity/Math")]
	public class BoolFlip : Action
	{
		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The bool to flip the value of")]
		public SharedBool boolVariable;

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xDA1B24", Offset = "0xDA1B24", VA = "0xDA1B24", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xDA1BA8", Offset = "0xDA1BA8", VA = "0xDA1BA8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xDA1BFC", Offset = "0xDA1BFC", VA = "0xDA1BFC")]
		public BoolFlip()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[TaskDescription("Performs a math operation on two bools: AND, OR, NAND, or XOR.")]
	[TaskCategory("Unity/Math")]
	public class BoolOperator : Action
	{
		[Token(Token = "0x20006BD")]
		public enum Operation
		{
			[Token(Token = "0x4001F4B")]
			AND,
			[Token(Token = "0x4001F4C")]
			OR,
			[Token(Token = "0x4001F4D")]
			NAND,
			[Token(Token = "0x4001F4E")]
			XOR
		}

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first bool")]
		public SharedBool bool1;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second bool")]
		public SharedBool bool2;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The variable to store the result")]
		public SharedBool storeResult;

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xDA1C04", Offset = "0xDA1C04", VA = "0xDA1C04", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xDA1D7C", Offset = "0xDA1D7C", VA = "0xDA1D7C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xDA1DC4", Offset = "0xDA1DC4", VA = "0xDA1DC4")]
		public BoolOperator()
		{
		}
	}
	[Token(Token = "0x20006BE")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Stores the absolute value of the float.")]
	public class FloatAbs : Action
	{
		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The float to return the absolute value of")]
		public SharedFloat floatVariable;

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xDA1DCC", Offset = "0xDA1DCC", VA = "0xDA1DCC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xDA1E4C", Offset = "0xDA1E4C", VA = "0xDA1E4C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xDA1E74", Offset = "0xDA1E74", VA = "0xDA1E74")]
		public FloatAbs()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Clamps the float between two values.")]
	public class FloatClamp : Action
	{
		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The float to clamp")]
		public SharedFloat floatVariable;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The maximum value of the float")]
		public SharedFloat minValue;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The maximum value of the float")]
		public SharedFloat maxValue;

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xDA1E7C", Offset = "0xDA1E7C", VA = "0xDA1E7C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xDA1F38", Offset = "0xDA1F38", VA = "0xDA1F38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xDA1F98", Offset = "0xDA1F98", VA = "0xDA1F98")]
		public FloatClamp()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Performs comparison between two floats: less than, less than or equal to, equal to, not equal to, greater than or equal to, or greater than.")]
	public class FloatComparison : Conditional
	{
		[Token(Token = "0x20006C1")]
		public enum Operation
		{
			[Token(Token = "0x4001F57")]
			LessThan,
			[Token(Token = "0x4001F58")]
			LessThanOrEqualTo,
			[Token(Token = "0x4001F59")]
			EqualTo,
			[Token(Token = "0x4001F5A")]
			NotEqualTo,
			[Token(Token = "0x4001F5B")]
			GreaterThanOrEqualTo,
			[Token(Token = "0x4001F5C")]
			GreaterThan
		}

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first float")]
		public SharedFloat float1;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second float")]
		public SharedFloat float2;

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xDA1FA0", Offset = "0xDA1FA0", VA = "0xDA1FA0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xDA2214", Offset = "0xDA2214", VA = "0xDA2214", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xDA2280", Offset = "0xDA2280", VA = "0xDA2280")]
		public FloatComparison()
		{
		}
	}
	[Token(Token = "0x20006C2")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Performs a math operation on two floats: Add, Subtract, Multiply, Divide, Min, or Max.")]
	public class FloatOperator : Action
	{
		[Token(Token = "0x20006C3")]
		public enum Operation
		{
			[Token(Token = "0x4001F62")]
			Add,
			[Token(Token = "0x4001F63")]
			Subtract,
			[Token(Token = "0x4001F64")]
			Multiply,
			[Token(Token = "0x4001F65")]
			Divide,
			[Token(Token = "0x4001F66")]
			Min,
			[Token(Token = "0x4001F67")]
			Max,
			[Token(Token = "0x4001F68")]
			Modulo
		}

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first float")]
		public SharedFloat float1;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second float")]
		public SharedFloat float2;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xDA2288", Offset = "0xDA2288", VA = "0xDA2288", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xDA24B4", Offset = "0xDA24B4", VA = "0xDA24B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xDA2518", Offset = "0xDA2518", VA = "0xDA2518")]
		public FloatOperator()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Stores the absolute value of the int.")]
	public class IntAbs : Action
	{
		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The int to return the absolute value of")]
		public SharedInt intVariable;

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xDA2520", Offset = "0xDA2520", VA = "0xDA2520", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xDA25E0", Offset = "0xDA25E0", VA = "0xDA25E0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xDA2608", Offset = "0xDA2608", VA = "0xDA2608")]
		public IntAbs()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Clamps the int between two values.")]
	public class IntClamp : Action
	{
		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The int to clamp")]
		public SharedInt intVariable;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The maximum value of the int")]
		public SharedInt minValue;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The maximum value of the int")]
		public SharedInt maxValue;

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xDA2610", Offset = "0xDA2610", VA = "0xDA2610", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xDA26D4", Offset = "0xDA26D4", VA = "0xDA26D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xDA2734", Offset = "0xDA2734", VA = "0xDA2734")]
		public IntClamp()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	[TaskDescription("Performs comparison between two integers: less than, less than or equal to, equal to, not equal to, greater than or equal to, or greater than.")]
	[TaskCategory("Unity/Math")]
	public class IntComparison : Conditional
	{
		[Token(Token = "0x20006C7")]
		public enum Operation
		{
			[Token(Token = "0x4001F71")]
			LessThan,
			[Token(Token = "0x4001F72")]
			LessThanOrEqualTo,
			[Token(Token = "0x4001F73")]
			EqualTo,
			[Token(Token = "0x4001F74")]
			NotEqualTo,
			[Token(Token = "0x4001F75")]
			GreaterThanOrEqualTo,
			[Token(Token = "0x4001F76")]
			GreaterThan
		}

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first integer")]
		public SharedInt integer1;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second integer")]
		public SharedInt integer2;

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xDA273C", Offset = "0xDA273C", VA = "0xDA273C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xDA28F8", Offset = "0xDA28F8", VA = "0xDA28F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xDA2964", Offset = "0xDA2964", VA = "0xDA2964")]
		public IntComparison()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Performs a math operation on two integers: Add, Subtract, Multiply, Divide, Min, or Max.")]
	public class IntOperator : Action
	{
		[Token(Token = "0x20006C9")]
		public enum Operation
		{
			[Token(Token = "0x4001F7C")]
			Add,
			[Token(Token = "0x4001F7D")]
			Subtract,
			[Token(Token = "0x4001F7E")]
			Multiply,
			[Token(Token = "0x4001F7F")]
			Divide,
			[Token(Token = "0x4001F80")]
			Min,
			[Token(Token = "0x4001F81")]
			Max,
			[Token(Token = "0x4001F82")]
			Modulo
		}

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The operation to perform")]
		public Operation operation;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The first integer")]
		public SharedInt integer1;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The second integer")]
		public SharedInt integer2;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The variable to store the result")]
		public SharedInt storeResult;

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xDA296C", Offset = "0xDA296C", VA = "0xDA296C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xDA2BA8", Offset = "0xDA2BA8", VA = "0xDA2BA8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xDA2C0C", Offset = "0xDA2C0C", VA = "0xDA2C0C")]
		public IntOperator()
		{
		}
	}
	[Token(Token = "0x20006CA")]
	[TaskDescription("Is the float a positive value?")]
	[TaskCategory("Unity/Math")]
	public class IsFloatPositive : Conditional
	{
		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The float to check if positive")]
		public SharedFloat floatVariable;

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xDA2C14", Offset = "0xDA2C14", VA = "0xDA2C14", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xDA2C74", Offset = "0xDA2C74", VA = "0xDA2C74", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xDA2C9C", Offset = "0xDA2C9C", VA = "0xDA2C9C")]
		public IsFloatPositive()
		{
		}
	}
	[Token(Token = "0x20006CB")]
	[TaskDescription("Is the int a positive value?")]
	[TaskCategory("Unity/Math")]
	public class IsIntPositive : Conditional
	{
		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The int to check if positive")]
		public SharedInt intVariable;

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xDA2CA4", Offset = "0xDA2CA4", VA = "0xDA2CA4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xDA2D04", Offset = "0xDA2D04", VA = "0xDA2D04", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xDA2D2C", Offset = "0xDA2D2C", VA = "0xDA2D2C")]
		public IsIntPositive()
		{
		}
	}
	[Token(Token = "0x20006CC")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Lerp the float by an amount.")]
	public class Lerp : Action
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from value")]
		public SharedFloat fromValue;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to value")]
		public SharedFloat toValue;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount to lerp")]
		public SharedFloat lerpAmount;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[RequiredField]
		[Tooltip("The lerp resut")]
		public SharedFloat storeResult;

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xDA2D34", Offset = "0xDA2D34", VA = "0xDA2D34", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xDA2E04", Offset = "0xDA2E04", VA = "0xDA2E04", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xDA2E80", Offset = "0xDA2E80", VA = "0xDA2E80")]
		public Lerp()
		{
		}
	}
	[Token(Token = "0x20006CD")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Lerp the angle by an amount.")]
	public class LerpAngle : Action
	{
		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The from value")]
		public SharedFloat fromValue;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The to value")]
		public SharedFloat toValue;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount to lerp")]
		public SharedFloat lerpAmount;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The lerp resut")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xDA2E88", Offset = "0xDA2E88", VA = "0xDA2E88", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xDA2F98", Offset = "0xDA2F98", VA = "0xDA2F98", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xDA3014", Offset = "0xDA3014", VA = "0xDA3014")]
		public LerpAngle()
		{
		}
	}
	[Token(Token = "0x20006CE")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Sets a random bool value")]
	public class RandomBool : Action
	{
		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The variable to store the result")]
		public SharedBool storeResult;

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xDA301C", Offset = "0xDA301C", VA = "0xDA301C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xDA308C", Offset = "0xDA308C", VA = "0xDA308C")]
		public RandomBool()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Sets a random float value")]
	public class RandomFloat : Action
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The minimum amount")]
		public SharedFloat min;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The maximum amount")]
		public SharedFloat max;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Is the maximum value inclusive?")]
		public bool inclusive;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xDA3094", Offset = "0xDA3094", VA = "0xDA3094", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xDA315C", Offset = "0xDA315C", VA = "0xDA315C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xDA31E4", Offset = "0xDA31E4", VA = "0xDA31E4")]
		public RandomFloat()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	[TaskDescription("Sets a random int value")]
	[TaskCategory("Unity/Math")]
	public class RandomInt : Action
	{
		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The minimum amount")]
		public SharedInt min;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The maximum amount")]
		public SharedInt max;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Is the maximum value inclusive?")]
		public bool inclusive;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The variable to store the result")]
		public SharedInt storeResult;

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xDA31EC", Offset = "0xDA31EC", VA = "0xDA31EC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xDA32AC", Offset = "0xDA32AC", VA = "0xDA32AC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xDA3334", Offset = "0xDA3334", VA = "0xDA3334")]
		public RandomInt()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	[TaskDescription("Sets a bool value")]
	[TaskCategory("Unity/Math")]
	public class SetBool : Action
	{
		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The bool value to set")]
		public SharedBool boolValue;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to store the result")]
		public SharedBool storeResult;

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xDA333C", Offset = "0xDA333C", VA = "0xDA333C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xDA33C0", Offset = "0xDA33C0", VA = "0xDA33C0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0xDA33E8", Offset = "0xDA33E8", VA = "0xDA33E8")]
		public SetBool()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	[TaskDescription("Sets a float value")]
	[TaskCategory("Unity/Math")]
	public class SetFloat : Action
	{
		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The float value to set")]
		public SharedFloat floatValue;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to store the result")]
		public SharedFloat storeResult;

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xDA33F0", Offset = "0xDA33F0", VA = "0xDA33F0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xDA3470", Offset = "0xDA3470", VA = "0xDA3470", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xDA34B4", Offset = "0xDA34B4", VA = "0xDA34B4")]
		public SetFloat()
		{
		}
	}
	[Token(Token = "0x20006D3")]
	[TaskCategory("Unity/Math")]
	[TaskDescription("Sets an int value")]
	public class SetInt : Action
	{
		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The int value to set")]
		public SharedInt intValue;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The variable to store the result")]
		public SharedInt storeResult;

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xDA34BC", Offset = "0xDA34BC", VA = "0xDA34BC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xDA3540", Offset = "0xDA3540", VA = "0xDA3540", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xDA3584", Offset = "0xDA3584", VA = "0xDA3584")]
		public SetInt()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityLight
{
	[Token(Token = "0x20006D4")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Stores the color of the light.")]
	public class GetColor : Action
	{
		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The color to store")]
		[RequiredField]
		public SharedColor storeValue;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xDA358C", Offset = "0xDA358C", VA = "0xDA358C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xDA3690", Offset = "0xDA3690", VA = "0xDA3690", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xDA3774", Offset = "0xDA3774", VA = "0xDA3774", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xDA37B4", Offset = "0xDA37B4", VA = "0xDA37B4")]
		public GetColor()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Stores the light's cookie size.")]
	public class GetCookieSize : Action
	{
		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The size to store")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xDA37BC", Offset = "0xDA37BC", VA = "0xDA37BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xDA38C0", Offset = "0xDA38C0", VA = "0xDA38C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xDA39A4", Offset = "0xDA39A4", VA = "0xDA39A4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xDA39D8", Offset = "0xDA39D8", VA = "0xDA39D8")]
		public GetCookieSize()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Stores the intensity of the light.")]
	public class GetIntensity : Action
	{
		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The intensity to store")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xDA39E0", Offset = "0xDA39E0", VA = "0xDA39E0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xDA3AE4", Offset = "0xDA3AE4", VA = "0xDA3AE4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xDA3BC8", Offset = "0xDA3BC8", VA = "0xDA3BC8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xDA3BFC", Offset = "0xDA3BFC", VA = "0xDA3BFC")]
		public GetIntensity()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Stores the range of the light.")]
	public class GetRange : Action
	{
		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The range to store")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xDA3C04", Offset = "0xDA3C04", VA = "0xDA3C04", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xDA3D08", Offset = "0xDA3D08", VA = "0xDA3D08", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xDA3DEC", Offset = "0xDA3DEC", VA = "0xDA3DEC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xDA3E20", Offset = "0xDA3E20", VA = "0xDA3E20")]
		public GetRange()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	[TaskDescription("Stores the shadow bias of the light.")]
	[TaskCategory("Unity/Light")]
	public class GetShadowBias : Action
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The shadow bias to store")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xDA3E28", Offset = "0xDA3E28", VA = "0xDA3E28", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xDA3F2C", Offset = "0xDA3F2C", VA = "0xDA3F2C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xDA4010", Offset = "0xDA4010", VA = "0xDA4010", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xDA4044", Offset = "0xDA4044", VA = "0xDA4044")]
		public GetShadowBias()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	[TaskDescription("Stores the color of the light.")]
	[TaskCategory("Unity/Light")]
	public class GetShadowStrength : Action
	{
		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The color to store")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xDA404C", Offset = "0xDA404C", VA = "0xDA404C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xDA4150", Offset = "0xDA4150", VA = "0xDA4150", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xDA4234", Offset = "0xDA4234", VA = "0xDA4234", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xDA4268", Offset = "0xDA4268", VA = "0xDA4268")]
		public GetShadowStrength()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Stores the spot angle of the light.")]
	public class GetSpotAngle : Action
	{
		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The spot angle to store")]
		public SharedFloat storeValue;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xDA4270", Offset = "0xDA4270", VA = "0xDA4270", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xDA4374", Offset = "0xDA4374", VA = "0xDA4374", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xDA4458", Offset = "0xDA4458", VA = "0xDA4458", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xDA448C", Offset = "0xDA448C", VA = "0xDA448C")]
		public GetSpotAngle()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the color of the light.")]
	public class SetColor : Action
	{
		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The color to set")]
		public SharedColor color;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xDA4494", Offset = "0xDA4494", VA = "0xDA4494", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xDA4598", Offset = "0xDA4598", VA = "0xDA4598", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xDA468C", Offset = "0xDA468C", VA = "0xDA468C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xDA46CC", Offset = "0xDA46CC", VA = "0xDA46CC")]
		public SetColor()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the cookie of the light.")]
	public class SetCookie : Action
	{
		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The cookie to set")]
		public Texture2D cookie;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xDA46D4", Offset = "0xDA46D4", VA = "0xDA46D4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xDA47D8", Offset = "0xDA47D8", VA = "0xDA47D8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xDA48A8", Offset = "0xDA48A8", VA = "0xDA48A8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xDA48D0", Offset = "0xDA48D0", VA = "0xDA48D0")]
		public SetCookie()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	[TaskDescription("Sets the light's cookie size.")]
	[TaskCategory("Unity/Light")]
	public class SetCookieSize : Action
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The size to set")]
		public SharedFloat cookieSize;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xDA48D8", Offset = "0xDA48D8", VA = "0xDA48D8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xDA49DC", Offset = "0xDA49DC", VA = "0xDA49DC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xDA4AD0", Offset = "0xDA4AD0", VA = "0xDA4AD0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xDA4B04", Offset = "0xDA4B04", VA = "0xDA4B04")]
		public SetCookieSize()
		{
		}
	}
	[Token(Token = "0x20006DE")]
	[TaskDescription("Sets the culling mask of the light.")]
	[TaskCategory("Unity/Light")]
	public class SetCullingMask : Action
	{
		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The culling mask to set")]
		public LayerMask cullingMask;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xDA4B0C", Offset = "0xDA4B0C", VA = "0xDA4B0C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xDA4C10", Offset = "0xDA4C10", VA = "0xDA4C10", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xDA4CF0", Offset = "0xDA4CF0", VA = "0xDA4CF0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xDA4D20", Offset = "0xDA4D20", VA = "0xDA4D20")]
		public SetCullingMask()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	[TaskDescription("Sets the intensity of the light.")]
	[TaskCategory("Unity/Light")]
	public class SetIntensity : Action
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The intensity to set")]
		public SharedFloat intensity;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xDA4D28", Offset = "0xDA4D28", VA = "0xDA4D28", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xDA4E2C", Offset = "0xDA4E2C", VA = "0xDA4E2C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xDA4F20", Offset = "0xDA4F20", VA = "0xDA4F20", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xDA4F54", Offset = "0xDA4F54", VA = "0xDA4F54")]
		public SetIntensity()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the range of the light.")]
	public class SetRange : Action
	{
		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The range to set")]
		public SharedFloat range;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xDA4F5C", Offset = "0xDA4F5C", VA = "0xDA4F5C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xDA5060", Offset = "0xDA5060", VA = "0xDA5060", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xDA5154", Offset = "0xDA5154", VA = "0xDA5154", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xDA5188", Offset = "0xDA5188", VA = "0xDA5188")]
		public SetRange()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the shadow bias of the light.")]
	public class SetShadowBias : Action
	{
		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The shadow bias to set")]
		public SharedFloat shadowBias;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xDA5190", Offset = "0xDA5190", VA = "0xDA5190", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xDA5294", Offset = "0xDA5294", VA = "0xDA5294", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xDA5388", Offset = "0xDA5388", VA = "0xDA5388", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xDA53BC", Offset = "0xDA53BC", VA = "0xDA53BC")]
		public SetShadowBias()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the shadow type of the light.")]
	public class SetShadows : Action
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The shadow type to set")]
		public LightShadows shadows;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xDA53C4", Offset = "0xDA53C4", VA = "0xDA53C4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xDA54C8", Offset = "0xDA54C8", VA = "0xDA54C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xDA5598", Offset = "0xDA5598", VA = "0xDA5598", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xDA55A4", Offset = "0xDA55A4", VA = "0xDA55A4")]
		public SetShadows()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the shadow strength of the light.")]
	public class SetShadowSoftnessStrength : Action
	{
		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The shadow strength to set")]
		public SharedFloat shadowStrength;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xDA55AC", Offset = "0xDA55AC", VA = "0xDA55AC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xDA56B0", Offset = "0xDA56B0", VA = "0xDA56B0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xDA57A4", Offset = "0xDA57A4", VA = "0xDA57A4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xDA57D8", Offset = "0xDA57D8", VA = "0xDA57D8")]
		public SetShadowSoftnessStrength()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	[TaskCategory("Unity/Light")]
	[TaskDescription("Sets the spot angle of the light.")]
	public class SetSpotAngle : Action
	{
		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The spot angle to set")]
		public SharedFloat spotAngle;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xDA57E0", Offset = "0xDA57E0", VA = "0xDA57E0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xDA58E4", Offset = "0xDA58E4", VA = "0xDA58E4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xDA59D8", Offset = "0xDA59D8", VA = "0xDA59D8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xDA5A0C", Offset = "0xDA5A0C", VA = "0xDA5A0C")]
		public SetSpotAngle()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	[TaskDescription("Sets the type of the light.")]
	[TaskCategory("Unity/Light")]
	public class SetType : Action
	{
		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The type to set")]
		public LightType type;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light light;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xDA5A14", Offset = "0xDA5A14", VA = "0xDA5A14", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xDA5B18", Offset = "0xDA5B18", VA = "0xDA5B18", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xDA5BE8", Offset = "0xDA5BE8", VA = "0xDA5BE8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xDA5BF4", Offset = "0xDA5BF4", VA = "0xDA5BF4")]
		public SetType()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityLayerMask
{
	[Token(Token = "0x20006E6")]
	[TaskDescription("Gets the layer of a GameObject.")]
	[TaskCategory("Unity/LayerMask")]
	public class GetLayer : Action
	{
		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to set the layer of")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the layer to get")]
		[RequiredField]
		public SharedString storeResult;

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xDA5BFC", Offset = "0xDA5BFC", VA = "0xDA5BFC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xDA5CA4", Offset = "0xDA5CA4", VA = "0xDA5CA4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xDA5D0C", Offset = "0xDA5D0C", VA = "0xDA5D0C")]
		public GetLayer()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	[TaskDescription("Sets the layer of a GameObject.")]
	[TaskCategory("Unity/LayerMask")]
	public class SetLayer : Action
	{
		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject to set the layer of")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the layer to set")]
		public SharedString layerName;

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xDA5D14", Offset = "0xDA5D14", VA = "0xDA5D14", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xDA5DC4", Offset = "0xDA5DC4", VA = "0xDA5DC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xDA5E2C", Offset = "0xDA5E2C", VA = "0xDA5E2C")]
		public SetLayer()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityInput
{
	[Token(Token = "0x20006E8")]
	[TaskDescription("Stores the acceleration value.")]
	[TaskCategory("Unity/Input")]
	public class GetAcceleration : Action
	{
		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xDA5E90", Offset = "0xDA5E90", VA = "0xDA5E90", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xDA5EF4", Offset = "0xDA5EF4", VA = "0xDA5EF4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xDA5F58", Offset = "0xDA5F58", VA = "0xDA5F58")]
		public GetAcceleration()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	[TaskDescription("Stores the value of the specified axis and stores it in a float.")]
	[TaskCategory("Unity/Input")]
	public class GetAxis : Action
	{
		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the axis")]
		public SharedString axisName;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Axis values are in the range -1 to 1. Use the multiplier to set a larger range")]
		public SharedFloat multiplier;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xDA5F60", Offset = "0xDA5F60", VA = "0xDA5F60", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xDA6030", Offset = "0xDA6030", VA = "0xDA6030", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xDA60C0", Offset = "0xDA60C0", VA = "0xDA60C0")]
		public GetAxis()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	[TaskDescription("Stores the raw value of the specified axis and stores it in a float.")]
	[TaskCategory("Unity/Input")]
	public class GetAxisRaw : Action
	{
		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the axis")]
		public SharedString axisName;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Axis values are in the range -1 to 1. Use the multiplier to set a larger range")]
		public SharedFloat multiplier;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The stored result")]
		[RequiredField]
		public SharedFloat storeResult;

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xDA60C8", Offset = "0xDA60C8", VA = "0xDA60C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xDA6198", Offset = "0xDA6198", VA = "0xDA6198", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xDA6228", Offset = "0xDA6228", VA = "0xDA6228")]
		public GetAxisRaw()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	[TaskDescription("Stores the state of the specified button.")]
	[TaskCategory("Unity/Input")]
	public class GetButton : Action
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the button")]
		public SharedString buttonName;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedBool storeResult;

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xDA6230", Offset = "0xDA6230", VA = "0xDA6230", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xDA62BC", Offset = "0xDA62BC", VA = "0xDA62BC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xDA6330", Offset = "0xDA6330", VA = "0xDA6330")]
		public GetButton()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	[TaskDescription("Stores the pressed state of the specified key.")]
	[TaskCategory("Unity/Input")]
	public class GetKey : Action
	{
		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The key to test.")]
		public KeyCode key;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedBool storeResult;

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xDA6338", Offset = "0xDA6338", VA = "0xDA6338", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xDA63A4", Offset = "0xDA63A4", VA = "0xDA63A4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xDA63D0", Offset = "0xDA63D0", VA = "0xDA63D0")]
		public GetKey()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	[TaskDescription("Stores the state of the specified mouse button.")]
	[TaskCategory("Unity/Input")]
	public class GetMouseButton : Action
	{
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The index of the button")]
		public SharedInt buttonIndex;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedBool storeResult;

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xDA63D8", Offset = "0xDA63D8", VA = "0xDA63D8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xDA6464", Offset = "0xDA6464", VA = "0xDA6464", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xDA64A8", Offset = "0xDA64A8", VA = "0xDA64A8")]
		public GetMouseButton()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	[TaskCategory("Unity/Input")]
	[TaskDescription("Stores the mouse position.")]
	public class GetMousePosition : Action
	{
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		[Tooltip("The stored result")]
		public SharedVector3 storeResult;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xDA64B0", Offset = "0xDA64B0", VA = "0xDA64B0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xDA6514", Offset = "0xDA6514", VA = "0xDA6514", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xDA6578", Offset = "0xDA6578", VA = "0xDA6578")]
		public GetMousePosition()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	[TaskDescription("Returns success when the specified button is pressed.")]
	[TaskCategory("Unity/Input")]
	public class IsButtonDown : Conditional
	{
		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the button")]
		public SharedString buttonName;

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xDA6580", Offset = "0xDA6580", VA = "0xDA6580", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xDA65E8", Offset = "0xDA65E8", VA = "0xDA65E8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xDA6640", Offset = "0xDA6640", VA = "0xDA6640")]
		public IsButtonDown()
		{
		}
	}
	[Token(Token = "0x20006F0")]
	[TaskDescription("Returns success when the specified button is released.")]
	[TaskCategory("Unity/Input")]
	public class IsButtonUp : Conditional
	{
		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the button")]
		public SharedString buttonName;

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xDA6648", Offset = "0xDA6648", VA = "0xDA6648", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xDA66B0", Offset = "0xDA66B0", VA = "0xDA66B0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xDA6708", Offset = "0xDA6708", VA = "0xDA6708")]
		public IsButtonUp()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	[TaskCategory("Unity/Input")]
	[TaskDescription("Returns success when the specified key is pressed.")]
	public class IsKeyDown : Conditional
	{
		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The key to test")]
		public KeyCode key;

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xDA6710", Offset = "0xDA6710", VA = "0xDA6710", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xDA6734", Offset = "0xDA6734", VA = "0xDA6734", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xDA673C", Offset = "0xDA673C", VA = "0xDA673C")]
		public IsKeyDown()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	[TaskCategory("Unity/Input")]
	[TaskDescription("Returns success when the specified key is released.")]
	public class IsKeyUp : Conditional
	{
		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The key to test")]
		public KeyCode key;

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xDA6744", Offset = "0xDA6744", VA = "0xDA6744", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xDA6768", Offset = "0xDA6768", VA = "0xDA6768", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xDA6770", Offset = "0xDA6770", VA = "0xDA6770")]
		public IsKeyUp()
		{
		}
	}
	[Token(Token = "0x20006F3")]
	[TaskCategory("Unity/Input")]
	[TaskDescription("Returns success when the specified mouse button is pressed.")]
	public class IsMouseDown : Conditional
	{
		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The button index")]
		public SharedInt buttonIndex;

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xDA6778", Offset = "0xDA6778", VA = "0xDA6778", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xDA67E0", Offset = "0xDA67E0", VA = "0xDA67E0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xDA6808", Offset = "0xDA6808", VA = "0xDA6808")]
		public IsMouseDown()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	[TaskCategory("Unity/Input")]
	[TaskDescription("Returns success when the specified mouse button is pressed.")]
	public class IsMouseUp : Conditional
	{
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The button index")]
		public SharedInt buttonIndex;

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xDA6810", Offset = "0xDA6810", VA = "0xDA6810", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xDA6878", Offset = "0xDA6878", VA = "0xDA6878", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xDA68A0", Offset = "0xDA68A0", VA = "0xDA68A0")]
		public IsMouseUp()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityGameObject
{
	[Token(Token = "0x20006F5")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Returns Success if the GameObject is active in the hierarchy, otherwise Failure.")]
	public class ActiveInHierarchy : Conditional
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xDA68A8", Offset = "0xDA68A8", VA = "0xDA68A8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xDA6924", Offset = "0xDA6924", VA = "0xDA6924", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xDA6930", Offset = "0xDA6930", VA = "0xDA6930")]
		public ActiveInHierarchy()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Returns Success if the GameObject is active in the hierarchy, otherwise Failure.")]
	public class ActiveSelf : Conditional
	{
		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xDA6938", Offset = "0xDA6938", VA = "0xDA6938", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xDA69B4", Offset = "0xDA69B4", VA = "0xDA69B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xDA69C0", Offset = "0xDA69C0", VA = "0xDA69C0")]
		public ActiveSelf()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Returns Success if the layermasks match, otherwise Failure.")]
	public class CompareLayerMask : Conditional
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The layermask to compare against")]
		public LayerMask layermask;

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xDA69C8", Offset = "0xDA69C8", VA = "0xDA69C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xDA6A58", Offset = "0xDA6A58", VA = "0xDA6A58", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xDA6A64", Offset = "0xDA6A64", VA = "0xDA6A64")]
		public CompareLayerMask()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Returns Success if tags match, otherwise Failure.")]
	public class CompareTag : Conditional
	{
		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The tag to compare against")]
		public SharedString tag;

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xDA6A6C", Offset = "0xDA6A6C", VA = "0xDA6A6C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xDA6B1C", Offset = "0xDA6B1C", VA = "0xDA6B1C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xDA6B84", Offset = "0xDA6B84", VA = "0xDA6B84")]
		public CompareTag()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	[TaskDescription("Destorys the specified GameObject. Returns Success.")]
	[TaskCategory("Unity/GameObject")]
	public class Destroy : Action
	{
		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Time to destroy the GameObject in")]
		public float time;

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xDA6B8C", Offset = "0xDA6B8C", VA = "0xDA6B8C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xDA6C60", Offset = "0xDA6C60", VA = "0xDA6C60", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xDA6C84", Offset = "0xDA6C84", VA = "0xDA6C84")]
		public Destroy()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	[TaskDescription("Destorys the specified GameObject immediately. Returns Success.")]
	[TaskCategory("Unity/GameObject")]
	public class DestroyImmediate : Action
	{
		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xDA6C8C", Offset = "0xDA6C8C", VA = "0xDA6C8C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xDA6D2C", Offset = "0xDA6D2C", VA = "0xDA6D2C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xDA6D38", Offset = "0xDA6D38", VA = "0xDA6D38")]
		public DestroyImmediate()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	[TaskDescription("Finds a GameObject by name. Returns success if an object is found.")]
	[TaskCategory("Unity/GameObject")]
	public class Find : Action
	{
		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject name to find")]
		public SharedString gameObjectName;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The object found by name")]
		public SharedGameObject storeValue;

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xDA6D40", Offset = "0xDA6D40", VA = "0xDA6D40", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xDA6E34", Offset = "0xDA6E34", VA = "0xDA6E34", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xDA6E5C", Offset = "0xDA6E5C", VA = "0xDA6E5C")]
		public Find()
		{
		}
	}
	[Token(Token = "0x20006FC")]
	[TaskDescription("Finds a GameObject by tag. Returns Success.")]
	[TaskCategory("Unity/GameObject")]
	public class FindGameObjectsWithTag : Action
	{
		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to find")]
		public SharedString tag;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The objects found by name")]
		[RequiredField]
		public SharedGameObjectList storeValue;

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xDA6E64", Offset = "0xDA6E64", VA = "0xDA6E64", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xDA6FA4", Offset = "0xDA6FA4", VA = "0xDA6FA4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xDA7020", Offset = "0xDA7020", VA = "0xDA7020")]
		public FindGameObjectsWithTag()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	[TaskDescription("Finds a GameObject by tag. Returns success if an object is found.")]
	[TaskCategory("Unity/GameObject")]
	public class FindWithTag : Action
	{
		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The tag of the GameObject to find")]
		public SharedString tag;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Should a random GameObject be found?")]
		public SharedBool random;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The object found by name")]
		public SharedGameObject storeValue;

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xDA7028", Offset = "0xDA7028", VA = "0xDA7028", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xDA7198", Offset = "0xDA7198", VA = "0xDA7198", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xDA7214", Offset = "0xDA7214", VA = "0xDA7214")]
		public FindWithTag()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	[TaskDescription("Returns the component of Type type if the game object has one attached, null if it doesn't. Returns Success.")]
	[TaskCategory("Unity/GameObject")]
	public class GetComponent : Action
	{
		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The type of component")]
		public SharedString type;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The component")]
		public SharedObject storeValue;

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xDA721C", Offset = "0xDA721C", VA = "0xDA721C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xDA72F0", Offset = "0xDA72F0", VA = "0xDA72F0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xDA7394", Offset = "0xDA7394", VA = "0xDA7394")]
		public GetComponent()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	[TaskDescription("Stores the GameObject tag. Returns Success.")]
	[TaskCategory("Unity/GameObject")]
	public class GetTag : Action
	{
		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Active state of the GameObject")]
		[RequiredField]
		public SharedString storeValue;

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xDA739C", Offset = "0xDA739C", VA = "0xDA739C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xDA743C", Offset = "0xDA743C", VA = "0xDA743C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xDA74A4", Offset = "0xDA74A4", VA = "0xDA74A4")]
		public GetTag()
		{
		}
	}
	[Token(Token = "0x2000700")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Instantiates a new GameObject. Returns Success.")]
	public class Instantiate : Action
	{
		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position of the new GameObject")]
		public SharedVector3 position;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The rotation of the new GameObject")]
		public SharedQuaternion rotation;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The instantiated GameObject")]
		[SharedRequired]
		public SharedGameObject storeResult;

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xDA74AC", Offset = "0xDA74AC", VA = "0xDA74AC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xDA7624", Offset = "0xDA7624", VA = "0xDA7624", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xDA76E4", Offset = "0xDA76E4", VA = "0xDA76E4")]
		public Instantiate()
		{
		}
	}
	[Token(Token = "0x2000701")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Sends a message to the target GameObject. Returns Success.")]
	public class SendMessage : Action
	{
		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The message to send")]
		public SharedString message;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The value to send")]
		public SharedGenericVariable value;

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xDA7754", Offset = "0xDA7754", VA = "0xDA7754", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xDA787C", Offset = "0xDA787C", VA = "0xDA787C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xDA78E4", Offset = "0xDA78E4", VA = "0xDA78E4")]
		public SendMessage()
		{
		}
	}
	[Token(Token = "0x2000702")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Activates/Deactivates the GameObject. Returns Success.")]
	public class SetActive : Action
	{
		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Active state of the GameObject")]
		public SharedBool active;

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xDA78EC", Offset = "0xDA78EC", VA = "0xDA78EC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xDA7994", Offset = "0xDA7994", VA = "0xDA7994", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xDA79C8", Offset = "0xDA79C8", VA = "0xDA79C8")]
		public SetActive()
		{
		}
	}
	[Token(Token = "0x2000703")]
	[TaskCategory("Unity/GameObject")]
	[TaskDescription("Sets the GameObject tag. Returns Success.")]
	public class SetTag : Action
	{
		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The GameObject tag")]
		public SharedString tag;

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xDA79D0", Offset = "0xDA79D0", VA = "0xDA79D0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xDA7A78", Offset = "0xDA7A78", VA = "0xDA7A78", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xDA7AE0", Offset = "0xDA7AE0", VA = "0xDA7AE0")]
		public SetTag()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityDebug
{
	[Token(Token = "0x2000704")]
	[TaskCategory("Unity/Debug")]
	[TaskDescription("Draws a debug line")]
	public class DrawLine : Action
	{
		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The start position")]
		public SharedVector3 start;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The end position")]
		public SharedVector3 end;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The color")]
		public SharedColor color;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Duration the line will be visible for in seconds.\nDefault: 0 means 1 frame.")]
		public SharedFloat duration;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Whether the line should show through world geometry.")]
		public SharedBool depthTest;

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xDA7AE8", Offset = "0xDA7AE8", VA = "0xDA7AE8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xDA7C64", Offset = "0xDA7C64", VA = "0xDA7C64", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xDA7D6C", Offset = "0xDA7D6C", VA = "0xDA7D6C")]
		public DrawLine()
		{
		}
	}
	[Token(Token = "0x2000705")]
	[TaskCategory("Unity/Debug")]
	[TaskDescription("Draws a debug ray")]
	public class DrawRay : Action
	{
		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The position")]
		public SharedVector3 start;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The direction")]
		public SharedVector3 direction;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The color")]
		public SharedColor color;

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xDA7DC8", Offset = "0xDA7DC8", VA = "0xDA7DC8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xDA7EE8", Offset = "0xDA7EE8", VA = "0xDA7EE8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xDA7FB8", Offset = "0xDA7FB8", VA = "0xDA7FB8")]
		public DrawRay()
		{
		}
	}
	[Token(Token = "0x2000706")]
	[TaskDescription("LogFormat is analgous to Debug.LogFormat().\nIt takes format string, substitutes arguments supplied a '{0-4}' and returns success.\nAny fields or arguments not supplied are ignored.It can be used for debugging.")]
	[TaskIcon("{SkinColor}LogIcon.png")]
	public class LogFormat : Action
	{
		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Text format with {0}, {1}, etc")]
		public SharedString textFormat;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Is this text an error?")]
		public SharedBool logError;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SharedVariable arg0;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SharedVariable arg1;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SharedVariable arg2;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SharedVariable arg3;

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xDA7FF8", Offset = "0xDA7FF8", VA = "0xDA7FF8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xDA80D4", Offset = "0xDA80D4", VA = "0xDA80D4")]
		private object[] buildParamsArray()
		{
			return null;
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xDA835C", Offset = "0xDA835C", VA = "0xDA835C")]
		private bool isValid(SharedVariable sv)
		{
			return default(bool);
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xDA8388", Offset = "0xDA8388", VA = "0xDA8388", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xDA8444", Offset = "0xDA8444", VA = "0xDA8444")]
		public LogFormat()
		{
		}
	}
	[Token(Token = "0x2000707")]
	[TaskCategory("Unity/Debug")]
	[TaskDescription("Log a variable value.")]
	public class LogValue : Action
	{
		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The variable to output")]
		public SharedGenericVariable variable;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xDA844C", Offset = "0xDA844C", VA = "0xDA844C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xDA84F4", Offset = "0xDA84F4", VA = "0xDA84F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xDA8500", Offset = "0xDA8500", VA = "0xDA8500")]
		public LogValue()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.Collider
{
	[Token(Token = "0x2000708")]
	[TaskDescription("Stores the enabled state of the collider. Returns Success.")]
	[TaskCategory("Unity/Collider")]
	public class GetEnabled : Action
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Collider to use")]
		public SharedCollider specifiedCollider;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The enabled/disabled state")]
		public SharedBool storeValue;

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xDA8508", Offset = "0xDA8508", VA = "0xDA8508", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xDA85E4", Offset = "0xDA85E4", VA = "0xDA85E4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xDA8654", Offset = "0xDA8654", VA = "0xDA8654")]
		public GetEnabled()
		{
		}
	}
	[Token(Token = "0x2000709")]
	[TaskCategory("Unity/Collider")]
	[TaskDescription("Enables/Disables the collider. Returns Success.")]
	public class SetEnabled : Action
	{
		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Behavior to use")]
		public SharedCollider specifiedCollider;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The enabled/disabled state")]
		public SharedBool enabled;

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xDA865C", Offset = "0xDA865C", VA = "0xDA865C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xDA8740", Offset = "0xDA8740", VA = "0xDA8740", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xDA87B0", Offset = "0xDA87B0", VA = "0xDA87B0")]
		public SetEnabled()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityCircleCollider2D
{
	[Token(Token = "0x200070A")]
	[TaskDescription("Stores the offset of the CircleCollider2D. Returns Success.")]
	[TaskCategory("Unity/CircleCollider2D")]
	public class GetOffset : Action
	{
		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The offset of the CircleCollider2D")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CircleCollider2D circleCollider2D;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xDA87B8", Offset = "0xDA87B8", VA = "0xDA87B8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xDA88BC", Offset = "0xDA88BC", VA = "0xDA88BC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xDA89B4", Offset = "0xDA89B4", VA = "0xDA89B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xDA8A24", Offset = "0xDA8A24", VA = "0xDA8A24")]
		public GetOffset()
		{
		}
	}
	[Token(Token = "0x200070B")]
	[TaskDescription("Stores the radius of the CircleCollider2D. Returns Success.")]
	[TaskCategory("Unity/CircleCollider2D")]
	public class GetRadius : Action
	{
		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the CircleCollider2D")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CircleCollider2D circleCollider2D;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xDA8A2C", Offset = "0xDA8A2C", VA = "0xDA8A2C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xDA8B30", Offset = "0xDA8B30", VA = "0xDA8B30", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xDA8C24", Offset = "0xDA8C24", VA = "0xDA8C24", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xDA8C58", Offset = "0xDA8C58", VA = "0xDA8C58")]
		public GetRadius()
		{
		}
	}
	[Token(Token = "0x200070C")]
	[TaskDescription("Sets the offset of the CircleCollider2D. Returns Success.")]
	[TaskCategory("Unity/CircleCollider2D")]
	public class SetOffset : Action
	{
		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The offset of the CircleCollider2D")]
		public SharedVector3 offset;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CircleCollider2D circleCollider2D;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xDA8C60", Offset = "0xDA8C60", VA = "0xDA8C60", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xDA8D64", Offset = "0xDA8D64", VA = "0xDA8D64", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xDA8E58", Offset = "0xDA8E58", VA = "0xDA8E58", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xDA8EC8", Offset = "0xDA8EC8", VA = "0xDA8EC8")]
		public SetOffset()
		{
		}
	}
	[Token(Token = "0x200070D")]
	[TaskCategory("Unity/CircleCollider2D")]
	[TaskDescription("Sets the radius of the CircleCollider2D. Returns Success.")]
	public class SetRadius : Action
	{
		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the CircleCollider2D")]
		public SharedFloat radius;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CircleCollider2D circleCollider2D;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xDA8ED0", Offset = "0xDA8ED0", VA = "0xDA8ED0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xDA8FD4", Offset = "0xDA8FD4", VA = "0xDA8FD4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xDA90C8", Offset = "0xDA90C8", VA = "0xDA90C8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xDA90FC", Offset = "0xDA90FC", VA = "0xDA90FC")]
		public SetRadius()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityCharacterController
{
	[Token(Token = "0x200070E")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Stores the center of the CharacterController. Returns Success.")]
	public class GetCenter : Action
	{
		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of the CharacterController")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xDA9104", Offset = "0xDA9104", VA = "0xDA9104", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xDA9208", Offset = "0xDA9208", VA = "0xDA9208", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xDA92FC", Offset = "0xDA92FC", VA = "0xDA92FC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xDA936C", Offset = "0xDA936C", VA = "0xDA936C")]
		public GetCenter()
		{
		}
	}
	[Token(Token = "0x200070F")]
	[TaskDescription("Stores the height of the CharacterController. Returns Success.")]
	[TaskCategory("Unity/CharacterController")]
	public class GetHeight : Action
	{
		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The height of the CharacterController")]
		public SharedFloat storeValue;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xDA9374", Offset = "0xDA9374", VA = "0xDA9374", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xDA9478", Offset = "0xDA9478", VA = "0xDA9478", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xDA956C", Offset = "0xDA956C", VA = "0xDA956C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xDA95A0", Offset = "0xDA95A0", VA = "0xDA95A0")]
		public GetHeight()
		{
		}
	}
	[Token(Token = "0x2000710")]
	[TaskDescription("Stores the radius of the CharacterController. Returns Success.")]
	[TaskCategory("Unity/CharacterController")]
	public class GetRadius : Action
	{
		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the CharacterController")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xDA95A8", Offset = "0xDA95A8", VA = "0xDA95A8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xDA96AC", Offset = "0xDA96AC", VA = "0xDA96AC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xDA97A0", Offset = "0xDA97A0", VA = "0xDA97A0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xDA97D4", Offset = "0xDA97D4", VA = "0xDA97D4")]
		public GetRadius()
		{
		}
	}
	[Token(Token = "0x2000711")]
	[TaskDescription("Stores the slope limit of the CharacterController. Returns Success.")]
	[TaskCategory("Unity/CharacterController")]
	public class GetSlopeLimit : Action
	{
		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The slope limit of the CharacterController")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xDA97DC", Offset = "0xDA97DC", VA = "0xDA97DC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xDA98E0", Offset = "0xDA98E0", VA = "0xDA98E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xDA99D4", Offset = "0xDA99D4", VA = "0xDA99D4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xDA9A08", Offset = "0xDA9A08", VA = "0xDA9A08")]
		public GetSlopeLimit()
		{
		}
	}
	[Token(Token = "0x2000712")]
	[TaskDescription("Stores the step offset of the CharacterController. Returns Success.")]
	[TaskCategory("Unity/CharacterController")]
	public class GetStepOffset : Action
	{
		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The step offset of the CharacterController")]
		public SharedFloat storeValue;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xDA9A10", Offset = "0xDA9A10", VA = "0xDA9A10", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xDA9B14", Offset = "0xDA9B14", VA = "0xDA9B14", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xDA9C08", Offset = "0xDA9C08", VA = "0xDA9C08", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xDA9C3C", Offset = "0xDA9C3C", VA = "0xDA9C3C")]
		public GetStepOffset()
		{
		}
	}
	[Token(Token = "0x2000713")]
	[TaskDescription("Stores the velocity of the CharacterController. Returns Success.")]
	[TaskCategory("Unity/CharacterController")]
	public class GetVelocity : Action
	{
		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The velocity of the CharacterController")]
		public SharedVector3 storeValue;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xDA9C44", Offset = "0xDA9C44", VA = "0xDA9C44", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xDA9D48", Offset = "0xDA9D48", VA = "0xDA9D48", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xDA9E3C", Offset = "0xDA9E3C", VA = "0xDA9E3C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xDA9EAC", Offset = "0xDA9EAC", VA = "0xDA9EAC")]
		public GetVelocity()
		{
		}
	}
	[Token(Token = "0x2000714")]
	[TaskDescription("Returns Success if the collider hit another object, otherwise Failure.")]
	[TaskCategory("Unity/CharacterController")]
	public class HasColliderHit : Conditional
	{
		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The tag of the GameObject to check for a collision against")]
		public SharedString tag;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The object that started the collision")]
		public SharedGameObject collidedGameObject;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool enteredCollision;

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xDA9EB4", Offset = "0xDA9EB4", VA = "0xDA9EB4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xDA9EC8", Offset = "0xDA9EC8", VA = "0xDA9EC8", Slot = "9")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xDA9ED0", Offset = "0xDA9ED0", VA = "0xDA9ED0", Slot = "26")]
		public override void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xDA9FC4", Offset = "0xDA9FC4", VA = "0xDA9FC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xDAA03C", Offset = "0xDAA03C", VA = "0xDAA03C")]
		public HasColliderHit()
		{
		}
	}
	[Token(Token = "0x2000715")]
	[TaskDescription("Returns Success if the character is grounded, otherwise Failure.")]
	[TaskCategory("Unity/CharacterController")]
	public class IsGrounded : Conditional
	{
		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xDAA0A0", Offset = "0xDAA0A0", VA = "0xDAA0A0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xDAA1A4", Offset = "0xDAA1A4", VA = "0xDAA1A4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xDAA278", Offset = "0xDAA278", VA = "0xDAA278", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xDAA284", Offset = "0xDAA284", VA = "0xDAA284")]
		public IsGrounded()
		{
		}
	}
	[Token(Token = "0x2000716")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("A more complex move function taking absolute movement deltas. Returns Success.")]
	public class Move : Action
	{
		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The amount to move")]
		public SharedVector3 motion;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xDAA28C", Offset = "0xDAA28C", VA = "0xDAA28C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xDAA390", Offset = "0xDAA390", VA = "0xDAA390", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xDAA484", Offset = "0xDAA484", VA = "0xDAA484", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xDAA4F4", Offset = "0xDAA4F4", VA = "0xDAA4F4")]
		public Move()
		{
		}
	}
	[Token(Token = "0x2000717")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Sets the center of the CharacterController. Returns Success.")]
	public class SetCenter : Action
	{
		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of the CharacterController")]
		public SharedVector3 center;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xDAA4FC", Offset = "0xDAA4FC", VA = "0xDAA4FC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xDAA600", Offset = "0xDAA600", VA = "0xDAA600", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xDAA6F4", Offset = "0xDAA6F4", VA = "0xDAA6F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xDAA764", Offset = "0xDAA764", VA = "0xDAA764")]
		public SetCenter()
		{
		}
	}
	[Token(Token = "0x2000718")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Sets the height of the CharacterController. Returns Success.")]
	public class SetHeight : Action
	{
		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The height of the CharacterController")]
		public SharedFloat height;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xDAA76C", Offset = "0xDAA76C", VA = "0xDAA76C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xDAA870", Offset = "0xDAA870", VA = "0xDAA870", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xDAA964", Offset = "0xDAA964", VA = "0xDAA964", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xDAA998", Offset = "0xDAA998", VA = "0xDAA998")]
		public SetHeight()
		{
		}
	}
	[Token(Token = "0x2000719")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Sets the radius of the CharacterController. Returns Success.")]
	public class SetRadius : Action
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the CharacterController")]
		public SharedFloat radius;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xDAA9A0", Offset = "0xDAA9A0", VA = "0xDAA9A0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xDAAAA4", Offset = "0xDAAAA4", VA = "0xDAAAA4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xDAAB98", Offset = "0xDAAB98", VA = "0xDAAB98", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xDAABCC", Offset = "0xDAABCC", VA = "0xDAABCC")]
		public SetRadius()
		{
		}
	}
	[Token(Token = "0x200071A")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Sets the slope limit of the CharacterController. Returns Success.")]
	public class SetSlopeLimit : Action
	{
		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The slope limit of the CharacterController")]
		public SharedFloat slopeLimit;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xDAABD4", Offset = "0xDAABD4", VA = "0xDAABD4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xDAACD8", Offset = "0xDAACD8", VA = "0xDAACD8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xDAADCC", Offset = "0xDAADCC", VA = "0xDAADCC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xDAAE00", Offset = "0xDAAE00", VA = "0xDAAE00")]
		public SetSlopeLimit()
		{
		}
	}
	[Token(Token = "0x200071B")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Sets the step offset of the CharacterController. Returns Success.")]
	public class SetStepOffset : Action
	{
		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The step offset of the CharacterController")]
		public SharedFloat stepOffset;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xDAAE08", Offset = "0xDAAE08", VA = "0xDAAE08", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xDAAF0C", Offset = "0xDAAF0C", VA = "0xDAAF0C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xDAB000", Offset = "0xDAB000", VA = "0xDAB000", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xDAB034", Offset = "0xDAB034", VA = "0xDAB034")]
		public SetStepOffset()
		{
		}
	}
	[Token(Token = "0x200071C")]
	[TaskCategory("Unity/CharacterController")]
	[TaskDescription("Moves the character with speed. Returns Success.")]
	public class SimpleMove : Action
	{
		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The speed of the movement")]
		public SharedVector3 speed;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterController characterController;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xDAB03C", Offset = "0xDAB03C", VA = "0xDAB03C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xDAB140", Offset = "0xDAB140", VA = "0xDAB140", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xDAB234", Offset = "0xDAB234", VA = "0xDAB234", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xDAB2A4", Offset = "0xDAB2A4", VA = "0xDAB2A4")]
		public SimpleMove()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityCapsuleCollider
{
	[Token(Token = "0x200071D")]
	[TaskDescription("Stores the center of the CapsuleCollider. Returns Success.")]
	[TaskCategory("Unity/CapsuleCollider")]
	public class GetCenter : Action
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of the CapsuleCollider")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xDAB2AC", Offset = "0xDAB2AC", VA = "0xDAB2AC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xDAB3B0", Offset = "0xDAB3B0", VA = "0xDAB3B0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xDAB4A4", Offset = "0xDAB4A4", VA = "0xDAB4A4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xDAB514", Offset = "0xDAB514", VA = "0xDAB514")]
		public GetCenter()
		{
		}
	}
	[Token(Token = "0x200071E")]
	[TaskDescription("Stores the direction of the CapsuleCollider. Returns Success.")]
	[TaskCategory("Unity/CapsuleCollider")]
	public class GetDirection : Action
	{
		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The direction of the CapsuleCollider")]
		public SharedInt storeValue;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xDAB51C", Offset = "0xDAB51C", VA = "0xDAB51C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xDAB620", Offset = "0xDAB620", VA = "0xDAB620", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xDAB718", Offset = "0xDAB718", VA = "0xDAB718", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xDAB74C", Offset = "0xDAB74C", VA = "0xDAB74C")]
		public GetDirection()
		{
		}
	}
	[Token(Token = "0x200071F")]
	[TaskCategory("Unity/CapsuleCollider")]
	[TaskDescription("Gets the height of the CapsuleCollider. Returns Success.")]
	public class GetHeight : Action
	{
		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The height of the CapsuleCollider")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xDAB754", Offset = "0xDAB754", VA = "0xDAB754", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xDAB858", Offset = "0xDAB858", VA = "0xDAB858", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xDAB94C", Offset = "0xDAB94C", VA = "0xDAB94C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xDAB980", Offset = "0xDAB980", VA = "0xDAB980")]
		public GetHeight()
		{
		}
	}
	[Token(Token = "0x2000720")]
	[TaskDescription("Stores the radius of the CapsuleCollider. Returns Success.")]
	[TaskCategory("Unity/CapsuleCollider")]
	public class GetRadius : Action
	{
		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The radius of the CapsuleCollider")]
		public SharedFloat storeValue;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xDAB988", Offset = "0xDAB988", VA = "0xDAB988", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xDABA8C", Offset = "0xDABA8C", VA = "0xDABA8C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xDABB80", Offset = "0xDABB80", VA = "0xDABB80", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xDABBB4", Offset = "0xDABBB4", VA = "0xDABBB4")]
		public GetRadius()
		{
		}
	}
	[Token(Token = "0x2000721")]
	[TaskDescription("Sets the center of the CapsuleCollider. Returns Success.")]
	[TaskCategory("Unity/CapsuleCollider")]
	public class SetCenter : Action
	{
		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of the CapsuleCollider")]
		public SharedVector3 center;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xDABBBC", Offset = "0xDABBBC", VA = "0xDABBBC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xDABCC0", Offset = "0xDABCC0", VA = "0xDABCC0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xDABDB4", Offset = "0xDABDB4", VA = "0xDABDB4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xDABE24", Offset = "0xDABE24", VA = "0xDABE24")]
		public SetCenter()
		{
		}
	}
	[Token(Token = "0x2000722")]
	[TaskCategory("Unity/CapsuleCollider")]
	[TaskDescription("Sets the direction of the CapsuleCollider. Returns Success.")]
	public class SetDirection : Action
	{
		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The direction of the CapsuleCollider")]
		public SharedInt direction;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xDABE2C", Offset = "0xDABE2C", VA = "0xDABE2C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xDABF30", Offset = "0xDABF30", VA = "0xDABF30", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xDAC028", Offset = "0xDAC028", VA = "0xDAC028", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xDAC05C", Offset = "0xDAC05C", VA = "0xDAC05C")]
		public SetDirection()
		{
		}
	}
	[Token(Token = "0x2000723")]
	[TaskCategory("Unity/CapsuleCollider")]
	[TaskDescription("Sets the height of the CapsuleCollider. Returns Success.")]
	public class SetHeight : Action
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The height of the CapsuleCollider")]
		public SharedFloat direction;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xDAC064", Offset = "0xDAC064", VA = "0xDAC064", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xDAC168", Offset = "0xDAC168", VA = "0xDAC168", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xDAC25C", Offset = "0xDAC25C", VA = "0xDAC25C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xDAC290", Offset = "0xDAC290", VA = "0xDAC290")]
		public SetHeight()
		{
		}
	}
	[Token(Token = "0x2000724")]
	[TaskDescription("Sets the radius of the CapsuleCollider. Returns Success.")]
	[TaskCategory("Unity/CapsuleCollider")]
	public class SetRadius : Action
	{
		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The radius of the CapsuleCollider")]
		public SharedFloat radius;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xDAC298", Offset = "0xDAC298", VA = "0xDAC298", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xDAC39C", Offset = "0xDAC39C", VA = "0xDAC39C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xDAC490", Offset = "0xDAC490", VA = "0xDAC490", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xDAC4C4", Offset = "0xDAC4C4", VA = "0xDAC4C4")]
		public SetRadius()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityBoxCollider2D
{
	[Token(Token = "0x2000725")]
	[TaskDescription("Stores the size of the BoxCollider2D. Returns Success.")]
	[TaskCategory("Unity/BoxCollider2D")]
	public class GetSize : Action
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The size of the BoxCollider2D")]
		public SharedVector2 storeValue;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxCollider2D boxCollider2D;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xDAD4CC", Offset = "0xDAD4CC", VA = "0xDAD4CC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xDAD5D0", Offset = "0xDAD5D0", VA = "0xDAD5D0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xDAD6C4", Offset = "0xDAD6C4", VA = "0xDAD6C4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xDAD730", Offset = "0xDAD730", VA = "0xDAD730")]
		public GetSize()
		{
		}
	}
	[Token(Token = "0x2000726")]
	[TaskDescription("Sets the size of the BoxCollider2D. Returns Success.")]
	[TaskCategory("Unity/BoxCollider2D")]
	public class SetSize : Action
	{
		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The size of the BoxCollider2D")]
		public SharedVector2 size;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxCollider2D boxCollider2D;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xDAD738", Offset = "0xDAD738", VA = "0xDAD738", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xDAD83C", Offset = "0xDAD83C", VA = "0xDAD83C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xDAD930", Offset = "0xDAD930", VA = "0xDAD930", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xDAD99C", Offset = "0xDAD99C", VA = "0xDAD99C")]
		public SetSize()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityBoxCollider
{
	[Token(Token = "0x2000727")]
	[TaskCategory("Unity/BoxCollider")]
	[TaskDescription("Stores the center of the BoxCollider. Returns Success.")]
	public class GetCenter : Action
	{
		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The center of the BoxCollider")]
		public SharedVector3 storeValue;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxCollider boxCollider;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xDAD9A4", Offset = "0xDAD9A4", VA = "0xDAD9A4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xDADAA8", Offset = "0xDADAA8", VA = "0xDADAA8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xDADB9C", Offset = "0xDADB9C", VA = "0xDADB9C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xDADC0C", Offset = "0xDADC0C", VA = "0xDADC0C")]
		public GetCenter()
		{
		}
	}
	[Token(Token = "0x2000728")]
	[TaskCategory("Unity/BoxCollider")]
	[TaskDescription("Stores the size of the BoxCollider. Returns Success.")]
	public class GetSize : Action
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The size of the BoxCollider")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxCollider boxCollider;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xDADC14", Offset = "0xDADC14", VA = "0xDADC14", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xDADD18", Offset = "0xDADD18", VA = "0xDADD18", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xDADE0C", Offset = "0xDADE0C", VA = "0xDADE0C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xDADE7C", Offset = "0xDADE7C", VA = "0xDADE7C")]
		public GetSize()
		{
		}
	}
	[Token(Token = "0x2000729")]
	[TaskCategory("Unity/BoxCollider")]
	[TaskDescription("Sets the center of the BoxCollider. Returns Success.")]
	public class SetCenter : Action
	{
		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The center of the BoxCollider")]
		public SharedVector3 center;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxCollider boxCollider;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xDADE84", Offset = "0xDADE84", VA = "0xDADE84", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xDADF88", Offset = "0xDADF88", VA = "0xDADF88", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xDAE07C", Offset = "0xDAE07C", VA = "0xDAE07C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xDAE0EC", Offset = "0xDAE0EC", VA = "0xDAE0EC")]
		public SetCenter()
		{
		}
	}
	[Token(Token = "0x200072A")]
	[TaskCategory("Unity/BoxCollider")]
	[TaskDescription("Sets the size of the BoxCollider. Returns Success.")]
	public class SetSize : Action
	{
		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The size of the BoxCollider")]
		public SharedVector3 size;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxCollider boxCollider;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xDAE0F4", Offset = "0xDAE0F4", VA = "0xDAE0F4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xDAE1F8", Offset = "0xDAE1F8", VA = "0xDAE1F8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xDAE2EC", Offset = "0xDAE2EC", VA = "0xDAE2EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xDAE35C", Offset = "0xDAE35C", VA = "0xDAE35C")]
		public SetSize()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityBehaviour
{
	[Token(Token = "0x200072B")]
	[TaskCategory("Unity/Behaviour")]
	[TaskDescription("Stores the enabled state of the object. Returns Success.")]
	public class GetEnabled : Action
	{
		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Behavior to use")]
		public SharedBehaviour specifiedObject;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The enabled/disabled state")]
		public SharedBool storeValue;

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xDAE364", Offset = "0xDAE364", VA = "0xDAE364", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xDAE440", Offset = "0xDAE440", VA = "0xDAE440", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xDAE4B0", Offset = "0xDAE4B0", VA = "0xDAE4B0")]
		public GetEnabled()
		{
		}
	}
	[Token(Token = "0x200072C")]
	[TaskCategory("Unity/Behaviour")]
	[TaskDescription("Returns Success if the object is enabled, otherwise Failure.")]
	public class IsEnabled : Conditional
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Object to use")]
		public SharedObject specifiedObject;

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xDAE4B8", Offset = "0xDAE4B8", VA = "0xDAE4B8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xDAE57C", Offset = "0xDAE57C", VA = "0xDAE57C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xDAE5D8", Offset = "0xDAE5D8", VA = "0xDAE5D8")]
		public IsEnabled()
		{
		}
	}
	[Token(Token = "0x200072D")]
	[TaskCategory("Unity/Behaviour")]
	[TaskDescription("Enables/Disables the object. Returns Success.")]
	public class SetEnabled : Action
	{
		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The Behavior to use")]
		public SharedBehaviour specifiedObject;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The enabled/disabled state")]
		public SharedBool enabled;

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xDAE5E0", Offset = "0xDAE5E0", VA = "0xDAE5E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xDAE6C4", Offset = "0xDAE6C4", VA = "0xDAE6C4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xDAE734", Offset = "0xDAE734", VA = "0xDAE734")]
		public SetEnabled()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityAudioSource
{
	[Token(Token = "0x200072E")]
	[TaskDescription("Stores the ignore listener pause value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetIgnoreListenerPause : Action
	{
		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The ignore listener pause value of the AudioSource")]
		[RequiredField]
		public SharedBool storeValue;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xDAE73C", Offset = "0xDAE73C", VA = "0xDAE73C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xDAE840", Offset = "0xDAE840", VA = "0xDAE840", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xDAE938", Offset = "0xDAE938", VA = "0xDAE938", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xDAE96C", Offset = "0xDAE96C", VA = "0xDAE96C")]
		public GetIgnoreListenerPause()
		{
		}
	}
	[Token(Token = "0x200072F")]
	[TaskDescription("Stores the ignore listener volume value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetIgnoreListenerVolume : Action
	{
		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The ignore listener volume value of the AudioSource")]
		[RequiredField]
		public SharedBool storeValue;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xDAE974", Offset = "0xDAE974", VA = "0xDAE974", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xDAEA78", Offset = "0xDAEA78", VA = "0xDAEA78", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xDAEB70", Offset = "0xDAEB70", VA = "0xDAEB70", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xDAEBA4", Offset = "0xDAEBA4", VA = "0xDAEBA4")]
		public GetIgnoreListenerVolume()
		{
		}
	}
	[Token(Token = "0x2000730")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Stores the loop value of the AudioSource. Returns Success.")]
	public class GetLoop : Action
	{
		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The loop value of the AudioSource")]
		[RequiredField]
		public SharedBool storeValue;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xDAEBAC", Offset = "0xDAEBAC", VA = "0xDAEBAC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xDAECB0", Offset = "0xDAECB0", VA = "0xDAECB0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xDAEDA8", Offset = "0xDAEDA8", VA = "0xDAEDA8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xDAEDDC", Offset = "0xDAEDDC", VA = "0xDAEDDC")]
		public GetLoop()
		{
		}
	}
	[Token(Token = "0x2000731")]
	[TaskDescription("Stores the max distance value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetMaxDistance : Action
	{
		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The max distance value of the AudioSource")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xDAEDE4", Offset = "0xDAEDE4", VA = "0xDAEDE4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xDAEEE8", Offset = "0xDAEEE8", VA = "0xDAEEE8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0xDAEFDC", Offset = "0xDAEFDC", VA = "0xDAEFDC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xDAF010", Offset = "0xDAF010", VA = "0xDAF010")]
		public GetMaxDistance()
		{
		}
	}
	[Token(Token = "0x2000732")]
	[TaskDescription("Stores the min distance value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetMinDistance : Action
	{
		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The min distance value of the AudioSource")]
		public SharedFloat storeValue;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xDAF018", Offset = "0xDAF018", VA = "0xDAF018", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xDAF11C", Offset = "0xDAF11C", VA = "0xDAF11C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xDAF210", Offset = "0xDAF210", VA = "0xDAF210", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xDAF244", Offset = "0xDAF244", VA = "0xDAF244")]
		public GetMinDistance()
		{
		}
	}
	[Token(Token = "0x2000733")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Stores the mute value of the AudioSource. Returns Success.")]
	public class GetMute : Action
	{
		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The mute value of the AudioSource")]
		public SharedBool storeValue;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xDAF24C", Offset = "0xDAF24C", VA = "0xDAF24C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xDAF350", Offset = "0xDAF350", VA = "0xDAF350", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xDAF448", Offset = "0xDAF448", VA = "0xDAF448", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xDAF47C", Offset = "0xDAF47C", VA = "0xDAF47C")]
		public GetMute()
		{
		}
	}
	[Token(Token = "0x2000734")]
	[TaskDescription("Stores the pitch value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetPitch : Action
	{
		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The pitch value of the AudioSource")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xDAF484", Offset = "0xDAF484", VA = "0xDAF484", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xDAF588", Offset = "0xDAF588", VA = "0xDAF588", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xDAF67C", Offset = "0xDAF67C", VA = "0xDAF67C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xDAF6B0", Offset = "0xDAF6B0", VA = "0xDAF6B0")]
		public GetPitch()
		{
		}
	}
	[Token(Token = "0x2000735")]
	[TaskDescription("Stores the priority value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetPriority : Action
	{
		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The priority value of the AudioSource")]
		[RequiredField]
		public SharedInt storeValue;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xDAF6B8", Offset = "0xDAF6B8", VA = "0xDAF6B8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xDAF7BC", Offset = "0xDAF7BC", VA = "0xDAF7BC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xDAF8B4", Offset = "0xDAF8B4", VA = "0xDAF8B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xDAF8E8", Offset = "0xDAF8E8", VA = "0xDAF8E8")]
		public GetPriority()
		{
		}
	}
	[Token(Token = "0x2000736")]
	[TaskDescription("Stores the spread value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetSpread : Action
	{
		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The spread value of the AudioSource")]
		public SharedFloat storeValue;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xDAF8F0", Offset = "0xDAF8F0", VA = "0xDAF8F0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xDAF9F4", Offset = "0xDAF9F4", VA = "0xDAF9F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xDAFAE8", Offset = "0xDAFAE8", VA = "0xDAFAE8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xDAFB1C", Offset = "0xDAFB1C", VA = "0xDAFB1C")]
		public GetSpread()
		{
		}
	}
	[Token(Token = "0x2000737")]
	[TaskDescription("Stores the time value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetTime : Action
	{
		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The time value of the AudioSource")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xDAFB24", Offset = "0xDAFB24", VA = "0xDAFB24", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xDAFC28", Offset = "0xDAFC28", VA = "0xDAFC28", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xDAFD1C", Offset = "0xDAFD1C", VA = "0xDAFD1C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xDAFD50", Offset = "0xDAFD50", VA = "0xDAFD50")]
		public GetTime()
		{
		}
	}
	[Token(Token = "0x2000738")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Stores the time samples value of the AudioSource. Returns Success.")]
	public class GetTimeSamples : Action
	{
		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The time samples value of the AudioSource")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xDAFD58", Offset = "0xDAFD58", VA = "0xDAFD58", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xDAFE5C", Offset = "0xDAFE5C", VA = "0xDAFE5C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xDAFF54", Offset = "0xDAFF54", VA = "0xDAFF54", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xDAFF88", Offset = "0xDAFF88", VA = "0xDAFF88")]
		public GetTimeSamples()
		{
		}
	}
	[Token(Token = "0x2000739")]
	[TaskDescription("Stores the volume value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class GetVolume : Action
	{
		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The volume value of the AudioSource")]
		public SharedFloat storeValue;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xDAFF90", Offset = "0xDAFF90", VA = "0xDAFF90", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xDB0094", Offset = "0xDB0094", VA = "0xDB0094", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xDB0188", Offset = "0xDB0188", VA = "0xDB0188", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xDB01BC", Offset = "0xDB01BC", VA = "0xDB01BC")]
		public GetVolume()
		{
		}
	}
	[Token(Token = "0x200073A")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Returns Success if the AudioClip is playing, otherwise Failure.")]
	public class IsPlaying : Conditional
	{
		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xDB01C4", Offset = "0xDB01C4", VA = "0xDB01C4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xDB02C8", Offset = "0xDB02C8", VA = "0xDB02C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xDB039C", Offset = "0xDB039C", VA = "0xDB039C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xDB03A8", Offset = "0xDB03A8", VA = "0xDB03A8")]
		public IsPlaying()
		{
		}
	}
	[Token(Token = "0x200073B")]
	[TaskDescription("Pauses the audio clip. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class Pause : Action
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xDB03B0", Offset = "0xDB03B0", VA = "0xDB03B0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xDB04B4", Offset = "0xDB04B4", VA = "0xDB04B4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xDB0580", Offset = "0xDB0580", VA = "0xDB0580", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xDB058C", Offset = "0xDB058C", VA = "0xDB058C")]
		public Pause()
		{
		}
	}
	[Token(Token = "0x200073C")]
	[TaskDescription("Plays the audio clip. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class Play : Action
	{
		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xDB0594", Offset = "0xDB0594", VA = "0xDB0594", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xDB0698", Offset = "0xDB0698", VA = "0xDB0698", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xDB0764", Offset = "0xDB0764", VA = "0xDB0764", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xDB0770", Offset = "0xDB0770", VA = "0xDB0770")]
		public Play()
		{
		}
	}
	[Token(Token = "0x200073D")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Plays the audio clip with a delay specified in seconds. Returns Success.")]
	public class PlayDelayed : Action
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Delay time specified in seconds")]
		public SharedFloat delay;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xDB0778", Offset = "0xDB0778", VA = "0xDB0778", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xDB087C", Offset = "0xDB087C", VA = "0xDB087C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xDB0970", Offset = "0xDB0970", VA = "0xDB0970", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xDB09A4", Offset = "0xDB09A4", VA = "0xDB09A4")]
		public PlayDelayed()
		{
		}
	}
	[Token(Token = "0x200073E")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Plays an AudioClip, and scales the AudioSource volume by volumeScale. Returns Success.")]
	public class PlayOneShot : Action
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The clip being played")]
		public SharedObject clip;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The scale of the volume (0-1)")]
		public SharedFloat volumeScale;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xDB09D8", Offset = "0xDB09D8", VA = "0xDB09D8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xDB0ADC", Offset = "0xDB0ADC", VA = "0xDB0ADC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xDB0C30", Offset = "0xDB0C30", VA = "0xDB0C30", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xDB0C74", Offset = "0xDB0C74", VA = "0xDB0C74")]
		public PlayOneShot()
		{
		}
	}
	[Token(Token = "0x200073F")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Plays the audio clip with a delay specified in seconds. Returns Success.")]
	public class PlayScheduled : Action
	{
		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Time in seconds on the absolute time-line that AudioSettings.dspTime refers to for when the sound should start playing")]
		public SharedFloat time;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xDB0CA8", Offset = "0xDB0CA8", VA = "0xDB0CA8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xDB0DAC", Offset = "0xDB0DAC", VA = "0xDB0DAC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xDB0EA4", Offset = "0xDB0EA4", VA = "0xDB0EA4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xDB0ED8", Offset = "0xDB0ED8", VA = "0xDB0ED8")]
		public PlayScheduled()
		{
		}
	}
	[Token(Token = "0x2000740")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the clip value of the AudioSource. Returns Success.")]
	public class SetAudioClip : Action
	{
		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The AudioSource clip")]
		public AudioClip audioClip;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xDB0F0C", Offset = "0xDB0F0C", VA = "0xDB0F0C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xDB1010", Offset = "0xDB1010", VA = "0xDB1010", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xDB10E0", Offset = "0xDB10E0", VA = "0xDB10E0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xDB1108", Offset = "0xDB1108", VA = "0xDB1108")]
		public SetAudioClip()
		{
		}
	}
	[Token(Token = "0x2000741")]
	[TaskDescription("Sets the ignore listener volume value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class SetIgnoreListenerVolume : Action
	{
		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The ignore listener volume value of the AudioSource")]
		public SharedBool ignoreListenerVolume;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xDB1110", Offset = "0xDB1110", VA = "0xDB1110", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xDB1214", Offset = "0xDB1214", VA = "0xDB1214", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xDB130C", Offset = "0xDB130C", VA = "0xDB130C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xDB1340", Offset = "0xDB1340", VA = "0xDB1340")]
		public SetIgnoreListenerVolume()
		{
		}
	}
	[Token(Token = "0x2000742")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the ignore listener pause value of the AudioSource. Returns Success.")]
	public class SetIgnoreListenerPause : Action
	{
		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The ignore listener pause value of the AudioSource")]
		public SharedBool ignoreListenerPause;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xDB1348", Offset = "0xDB1348", VA = "0xDB1348", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xDB144C", Offset = "0xDB144C", VA = "0xDB144C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xDB1544", Offset = "0xDB1544", VA = "0xDB1544", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xDB1578", Offset = "0xDB1578", VA = "0xDB1578")]
		public SetIgnoreListenerPause()
		{
		}
	}
	[Token(Token = "0x2000743")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the loop value of the AudioSource. Returns Success.")]
	public class SetLoop : Action
	{
		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The loop value of the AudioSource")]
		public SharedBool loop;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xDB1580", Offset = "0xDB1580", VA = "0xDB1580", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xDB1684", Offset = "0xDB1684", VA = "0xDB1684", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xDB177C", Offset = "0xDB177C", VA = "0xDB177C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xDB17B0", Offset = "0xDB17B0", VA = "0xDB17B0")]
		public SetLoop()
		{
		}
	}
	[Token(Token = "0x2000744")]
	[TaskDescription("Sets the max distance value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class SetMaxDistance : Action
	{
		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The max distance value of the AudioSource")]
		public SharedFloat maxDistance;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xDB17B8", Offset = "0xDB17B8", VA = "0xDB17B8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xDB18BC", Offset = "0xDB18BC", VA = "0xDB18BC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xDB19B0", Offset = "0xDB19B0", VA = "0xDB19B0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xDB19E4", Offset = "0xDB19E4", VA = "0xDB19E4")]
		public SetMaxDistance()
		{
		}
	}
	[Token(Token = "0x2000745")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the min distance value of the AudioSource. Returns Success.")]
	public class SetMinDistance : Action
	{
		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The min distance value of the AudioSource")]
		public SharedFloat minDistance;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xDB19EC", Offset = "0xDB19EC", VA = "0xDB19EC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xDB1AF0", Offset = "0xDB1AF0", VA = "0xDB1AF0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xDB1BE4", Offset = "0xDB1BE4", VA = "0xDB1BE4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xDB1C18", Offset = "0xDB1C18", VA = "0xDB1C18")]
		public SetMinDistance()
		{
		}
	}
	[Token(Token = "0x2000746")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the mute value of the AudioSource. Returns Success.")]
	public class SetMute : Action
	{
		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The mute value of the AudioSource")]
		public SharedBool mute;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xDB1C20", Offset = "0xDB1C20", VA = "0xDB1C20", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xDB1D24", Offset = "0xDB1D24", VA = "0xDB1D24", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xDB1E1C", Offset = "0xDB1E1C", VA = "0xDB1E1C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xDB1E50", Offset = "0xDB1E50", VA = "0xDB1E50")]
		public SetMute()
		{
		}
	}
	[Token(Token = "0x2000747")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the pitch value of the AudioSource. Returns Success.")]
	public class SetPitch : Action
	{
		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The pitch value of the AudioSource")]
		public SharedFloat pitch;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xDB1E58", Offset = "0xDB1E58", VA = "0xDB1E58", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xDB1F5C", Offset = "0xDB1F5C", VA = "0xDB1F5C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xDB2050", Offset = "0xDB2050", VA = "0xDB2050", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xDB2084", Offset = "0xDB2084", VA = "0xDB2084")]
		public SetPitch()
		{
		}
	}
	[Token(Token = "0x2000748")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the priority value of the AudioSource. Returns Success.")]
	public class SetPriority : Action
	{
		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The priority value of the AudioSource")]
		public SharedInt priority;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xDB208C", Offset = "0xDB208C", VA = "0xDB208C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xDB2190", Offset = "0xDB2190", VA = "0xDB2190", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xDB2288", Offset = "0xDB2288", VA = "0xDB2288", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xDB22BC", Offset = "0xDB22BC", VA = "0xDB22BC")]
		public SetPriority()
		{
		}
	}
	[Token(Token = "0x2000749")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the rolloff mode of the AudioSource. Returns Success.")]
	public class SetRolloffMode : Action
	{
		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The rolloff mode of the AudioSource")]
		public AudioRolloffMode rolloffMode;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xDB22C4", Offset = "0xDB22C4", VA = "0xDB22C4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xDB23C8", Offset = "0xDB23C8", VA = "0xDB23C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xDB2498", Offset = "0xDB2498", VA = "0xDB2498", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0xDB24BC", Offset = "0xDB24BC", VA = "0xDB24BC")]
		public SetRolloffMode()
		{
		}
	}
	[Token(Token = "0x200074A")]
	[TaskDescription("Changes the time at which a sound that has already been scheduled to play will end. Notice that depending on the timing not all rescheduling requests can be fulfilled. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class SetScheduledEndTime : Action
	{
		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Time in seconds")]
		public SharedFloat time;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xDB24C4", Offset = "0xDB24C4", VA = "0xDB24C4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xDB25C8", Offset = "0xDB25C8", VA = "0xDB25C8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xDB26C0", Offset = "0xDB26C0", VA = "0xDB26C0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xDB26F4", Offset = "0xDB26F4", VA = "0xDB26F4")]
		public SetScheduledEndTime()
		{
		}
	}
	[Token(Token = "0x200074B")]
	[TaskDescription("Changes the time at which a sound that has already been scheduled to play will start. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class SetScheduledStartTime : Action
	{
		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Time in seconds")]
		public SharedFloat time;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xDB2728", Offset = "0xDB2728", VA = "0xDB2728", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xDB282C", Offset = "0xDB282C", VA = "0xDB282C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xDB2924", Offset = "0xDB2924", VA = "0xDB2924", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xDB2958", Offset = "0xDB2958", VA = "0xDB2958")]
		public SetScheduledStartTime()
		{
		}
	}
	[Token(Token = "0x200074C")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the spread value of the AudioSource. Returns Success.")]
	public class SetSpread : Action
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The spread value of the AudioSource")]
		public SharedFloat spread;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xDB298C", Offset = "0xDB298C", VA = "0xDB298C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xDB2A90", Offset = "0xDB2A90", VA = "0xDB2A90", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xDB2B84", Offset = "0xDB2B84", VA = "0xDB2B84", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xDB2BB8", Offset = "0xDB2BB8", VA = "0xDB2BB8")]
		public SetSpread()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[TaskCategory("Unity/AudioSource")]
	[TaskDescription("Sets the time value of the AudioSource. Returns Success.")]
	public class SetTime : Action
	{
		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The time value of the AudioSource")]
		public SharedFloat time;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xDB2BC0", Offset = "0xDB2BC0", VA = "0xDB2BC0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xDB2CC4", Offset = "0xDB2CC4", VA = "0xDB2CC4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xDB2DB8", Offset = "0xDB2DB8", VA = "0xDB2DB8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xDB2DEC", Offset = "0xDB2DEC", VA = "0xDB2DEC")]
		public SetTime()
		{
		}
	}
	[Token(Token = "0x200074E")]
	[TaskDescription("Sets the rolloff mode of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class SetVelocityUpdateMode : Action
	{
		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The velocity update mode of the AudioSource")]
		public AudioVelocityUpdateMode velocityUpdateMode;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xDB2DF4", Offset = "0xDB2DF4", VA = "0xDB2DF4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xDB2EF8", Offset = "0xDB2EF8", VA = "0xDB2EF8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xDB2FC8", Offset = "0xDB2FC8", VA = "0xDB2FC8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xDB2FEC", Offset = "0xDB2FEC", VA = "0xDB2FEC")]
		public SetVelocityUpdateMode()
		{
		}
	}
	[Token(Token = "0x200074F")]
	[TaskDescription("Sets the volume value of the AudioSource. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class SetVolume : Action
	{
		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The volume value of the AudioSource")]
		public SharedFloat volume;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xDB2FF4", Offset = "0xDB2FF4", VA = "0xDB2FF4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xDB30F8", Offset = "0xDB30F8", VA = "0xDB30F8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xDB31EC", Offset = "0xDB31EC", VA = "0xDB31EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xDB3220", Offset = "0xDB3220", VA = "0xDB3220")]
		public SetVolume()
		{
		}
	}
	[Token(Token = "0x2000750")]
	[TaskDescription("Stops playing the audio clip. Returns Success.")]
	[TaskCategory("Unity/AudioSource")]
	public class Stop : Action
	{
		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xDB3228", Offset = "0xDB3228", VA = "0xDB3228", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xDB332C", Offset = "0xDB332C", VA = "0xDB332C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xDB33F8", Offset = "0xDB33F8", VA = "0xDB33F8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xDB3404", Offset = "0xDB3404", VA = "0xDB3404")]
		public Stop()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityAnimator
{
	[Token(Token = "0x2000751")]
	[TaskDescription("Creates a dynamic transition between the current state and the destination state. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class CrossFade : Action
	{
		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the state")]
		public SharedString stateName;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The duration of the transition. Value is in source state normalized time")]
		public SharedFloat transitionDuration;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The layer where the state is")]
		public int layer;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("The normalized time at which the state will play")]
		public float normalizedTime;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator animator;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xDB340C", Offset = "0xDB340C", VA = "0xDB340C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xDB3510", Offset = "0xDB3510", VA = "0xDB3510", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xDB363C", Offset = "0xDB363C", VA = "0xDB363C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xDB36CC", Offset = "0xDB36CC", VA = "0xDB36CC")]
		public CrossFade()
		{
		}
	}
	[Token(Token = "0x2000752")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Stores if root motion is applied. Returns Success.")]
	public class GetApplyRootMotion : Action
	{
		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Is root motion applied?")]
		[RequiredField]
		public SharedBool storeValue;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xDB36DC", Offset = "0xDB36DC", VA = "0xDB36DC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xDB37E0", Offset = "0xDB37E0", VA = "0xDB37E0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xDB38D8", Offset = "0xDB38D8", VA = "0xDB38D8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xDB390C", Offset = "0xDB390C", VA = "0xDB390C")]
		public GetApplyRootMotion()
		{
		}
	}
	[Token(Token = "0x2000753")]
	[TaskDescription("Stores the bool parameter on an animator. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class GetBoolParameter : Action
	{
		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The value of the bool parameter")]
		public SharedBool storeValue;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xDB3914", Offset = "0xDB3914", VA = "0xDB3914", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xDB3A18", Offset = "0xDB3A18", VA = "0xDB3A18", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xDB3B38", Offset = "0xDB3B38", VA = "0xDB3B38", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xDB3BBC", Offset = "0xDB3BBC", VA = "0xDB3BBC")]
		public GetBoolParameter()
		{
		}
	}
	[Token(Token = "0x2000754")]
	[TaskDescription("Gets the avatar delta position for the last evaluated frame. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class GetDeltaPosition : Action
	{
		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The avatar delta position")]
		[RequiredField]
		public SharedVector3 storeValue;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xDB3BC4", Offset = "0xDB3BC4", VA = "0xDB3BC4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xDB3CC8", Offset = "0xDB3CC8", VA = "0xDB3CC8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xDB3DBC", Offset = "0xDB3DBC", VA = "0xDB3DBC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xDB3E2C", Offset = "0xDB3E2C", VA = "0xDB3E2C")]
		public GetDeltaPosition()
		{
		}
	}
	[Token(Token = "0x2000755")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Gets the avatar delta rotation for the last evaluated frame. Returns Success.")]
	public class GetDeltaRotation : Action
	{
		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The avatar delta rotation")]
		public SharedQuaternion storeValue;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xDB3E34", Offset = "0xDB3E34", VA = "0xDB3E34", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xDB3F38", Offset = "0xDB3F38", VA = "0xDB3F38", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xDB402C", Offset = "0xDB402C", VA = "0xDB402C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xDB40C0", Offset = "0xDB40C0", VA = "0xDB40C0")]
		public GetDeltaRotation()
		{
		}
	}
	[Token(Token = "0x2000756")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Stores the float parameter on an animator. Returns Success.")]
	public class GetFloatParameter : Action
	{
		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The value of the float parameter")]
		public SharedFloat storeValue;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xDB40C8", Offset = "0xDB40C8", VA = "0xDB40C8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xDB41CC", Offset = "0xDB41CC", VA = "0xDB41CC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xDB42E8", Offset = "0xDB42E8", VA = "0xDB42E8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xDB436C", Offset = "0xDB436C", VA = "0xDB436C")]
		public GetFloatParameter()
		{
		}
	}
	[Token(Token = "0x2000757")]
	[TaskDescription("Stores the current gravity weight based on current animations that are played. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class GetGravityWeight : Action
	{
		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The value of the gravity weight")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xDB4374", Offset = "0xDB4374", VA = "0xDB4374", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xDB4478", Offset = "0xDB4478", VA = "0xDB4478", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xDB456C", Offset = "0xDB456C", VA = "0xDB456C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xDB45A0", Offset = "0xDB45A0", VA = "0xDB45A0")]
		public GetGravityWeight()
		{
		}
	}
	[Token(Token = "0x2000758")]
	[TaskDescription("Stores the integer parameter on an animator. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class GetIntegerParameter : Action
	{
		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The value of the integer parameter")]
		[RequiredField]
		public SharedInt storeValue;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xDB45A8", Offset = "0xDB45A8", VA = "0xDB45A8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xDB46AC", Offset = "0xDB46AC", VA = "0xDB46AC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xDB47CC", Offset = "0xDB47CC", VA = "0xDB47CC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xDB4850", Offset = "0xDB4850", VA = "0xDB4850")]
		public GetIntegerParameter()
		{
		}
	}
	[Token(Token = "0x2000759")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Stores the layer's weight. Returns Success.")]
	public class GetLayerWeight : Action
	{
		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The index of the layer")]
		public SharedInt index;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequiredField]
		[Tooltip("The value of the float parameter")]
		public SharedFloat storeValue;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xDB4858", Offset = "0xDB4858", VA = "0xDB4858", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xDB495C", Offset = "0xDB495C", VA = "0xDB495C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xDB4A78", Offset = "0xDB4A78", VA = "0xDB4A78", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xDB4AC8", Offset = "0xDB4AC8", VA = "0xDB4AC8")]
		public GetLayerWeight()
		{
		}
	}
	[Token(Token = "0x200075A")]
	[TaskDescription("Stores the playback speed of the animator. 1 is normal playback speed. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class GetSpeed : Action
	{
		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The playback speed of the Animator")]
		[RequiredField]
		public SharedFloat storeValue;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xDB4AD0", Offset = "0xDB4AD0", VA = "0xDB4AD0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xDB4BD4", Offset = "0xDB4BD4", VA = "0xDB4BD4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xDB4CC8", Offset = "0xDB4CC8", VA = "0xDB4CC8", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xDB4CFC", Offset = "0xDB4CFC", VA = "0xDB4CFC")]
		public GetSpeed()
		{
		}
	}
	[Token(Token = "0x200075B")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Converts the state name to its corresponding hash code. Returns Success.")]
	public class GetStringToHash : Action
	{
		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the state to convert to a hash code")]
		public SharedString stateName;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("The hash value")]
		public SharedInt storeValue;

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xDB4D04", Offset = "0xDB4D04", VA = "0xDB4D04", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0xDB4D90", Offset = "0xDB4D90", VA = "0xDB4D90", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0xDB4E04", Offset = "0xDB4E04", VA = "0xDB4E04")]
		public GetStringToHash()
		{
		}
	}
	[Token(Token = "0x200075C")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Interrupts the automatic target matching. Returns Success.")]
	public class InterruptMatchTarget : Action
	{
		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("CompleteMatch will make the gameobject match the target completely at the next frame")]
		public bool completeMatch;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xDB4E0C", Offset = "0xDB4E0C", VA = "0xDB4E0C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xDB4F10", Offset = "0xDB4F10", VA = "0xDB4F10", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xDB4FE0", Offset = "0xDB4FE0", VA = "0xDB4FE0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xDB5008", Offset = "0xDB5008", VA = "0xDB5008")]
		public InterruptMatchTarget()
		{
		}
	}
	[Token(Token = "0x200075D")]
	[TaskDescription("Returns success if the specified AnimatorController layer in a transition.")]
	[TaskCategory("Unity/Animator")]
	public class IsInTransition : Conditional
	{
		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The layer's index")]
		public SharedInt index;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xDB5018", Offset = "0xDB5018", VA = "0xDB5018", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xDB511C", Offset = "0xDB511C", VA = "0xDB511C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xDB521C", Offset = "0xDB521C", VA = "0xDB521C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xDB5250", Offset = "0xDB5250", VA = "0xDB5250")]
		public IsInTransition()
		{
		}
	}
	[Token(Token = "0x200075E")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Returns success if the specified name matches the name of the active state.")]
	public class IsName : Conditional
	{
		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The layer's index")]
		public SharedInt index;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The state name to compare")]
		public SharedString name;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xDB5258", Offset = "0xDB5258", VA = "0xDB5258", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xDB535C", Offset = "0xDB535C", VA = "0xDB535C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xDB54BC", Offset = "0xDB54BC", VA = "0xDB54BC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xDB5540", Offset = "0xDB5540", VA = "0xDB5540")]
		public IsName()
		{
		}
	}
	[Token(Token = "0x200075F")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Returns success if the specified parameter is controlled by an additional curve on an animation.")]
	public class IsParameterControlledByCurve : Conditional
	{
		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xDB5548", Offset = "0xDB5548", VA = "0xDB5548", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xDB564C", Offset = "0xDB564C", VA = "0xDB564C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xDB574C", Offset = "0xDB574C", VA = "0xDB574C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xDB57B4", Offset = "0xDB57B4", VA = "0xDB57B4")]
		public IsParameterControlledByCurve()
		{
		}
	}
	[Token(Token = "0x2000760")]
	[TaskDescription("Automatically adjust the gameobject position and rotation so that the AvatarTarget reaches the matchPosition when the current state is at the specified progress. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class MatchTarget : Action
	{
		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The position we want the body part to reach")]
		public SharedVector3 matchPosition;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The rotation in which we want the body part to be")]
		public SharedQuaternion matchRotation;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The body part that is involved in the match")]
		public AvatarTarget targetBodyPart;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("Weights for matching position")]
		public Vector3 weightMaskPosition;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Weights for matching rotation")]
		public float weightMaskRotation;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("Start time within the animation clip")]
		public float startNormalizedTime;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("End time within the animation clip")]
		public float targetNormalizedTime;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator animator;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject prevGameObject;

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xDB57BC", Offset = "0xDB57BC", VA = "0xDB57BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xDB58C0", Offset = "0xDB58C0", VA = "0xDB58C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xDB5A78", Offset = "0xDB5A78", VA = "0xDB5A78", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xDB5B8C", Offset = "0xDB5B8C", VA = "0xDB5B8C")]
		public MatchTarget()
		{
		}
	}
	[Token(Token = "0x2000761")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Plays an animator state. Returns Success.")]
	public class Play : Action
	{
		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the state")]
		public SharedString stateName;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The layer where the state is")]
		public int layer;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("The normalized time at which the state will play")]
		public float normalizedTime;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xDB5B9C", Offset = "0xDB5B9C", VA = "0xDB5B9C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xDB5CA0", Offset = "0xDB5CA0", VA = "0xDB5CA0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xDB5DA0", Offset = "0xDB5DA0", VA = "0xDB5DA0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xDB5E14", Offset = "0xDB5E14", VA = "0xDB5E14")]
		public Play()
		{
		}
	}
	[Token(Token = "0x2000762")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets if root motion is applied. Returns Success.")]
	public class SetApplyRootMotion : Action
	{
		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Is root motion applied?")]
		public SharedBool rootMotion;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xDB5E24", Offset = "0xDB5E24", VA = "0xDB5E24", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xDB5F28", Offset = "0xDB5F28", VA = "0xDB5F28", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xDB6020", Offset = "0xDB6020", VA = "0xDB6020", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xDB6054", Offset = "0xDB6054", VA = "0xDB6054")]
		public SetApplyRootMotion()
		{
		}
	}
	[Token(Token = "0x2000763")]
	[TaskDescription("Sets the bool parameter on an animator. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class SetBoolParameter : Action
	{
		[Token(Token = "0x2000764")]
		[CompilerGenerated]
		private sealed class <ResetValue>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetBoolParameter <>4__this;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool origVale;

			[Token(Token = "0x1700040D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002711")]
				[Address(RVA = "0xDB6490", Offset = "0xDB6490", VA = "0xDB6490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002713")]
				[Address(RVA = "0xDB64D8", Offset = "0xDB64D8", VA = "0xDB64D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0xDB6364", Offset = "0xDB6364", VA = "0xDB6364")]
			[DebuggerHidden]
			public <ResetValue>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600270F")]
			[Address(RVA = "0xDB6418", Offset = "0xDB6418", VA = "0xDB6418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0xDB641C", Offset = "0xDB641C", VA = "0xDB641C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0xDB6498", Offset = "0xDB6498", VA = "0xDB6498", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The value of the bool parameter")]
		public SharedBool boolValue;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Should the value be reverted back to its original value after it has been set?")]
		public bool setOnce;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int hashID;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator animator;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xDB605C", Offset = "0xDB605C", VA = "0xDB605C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xDB6160", Offset = "0xDB6160", VA = "0xDB6160", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xDB62DC", Offset = "0xDB62DC", VA = "0xDB62DC")]
		[IteratorStateMachine(typeof(<ResetValue>d__9))]
		public IEnumerator ResetValue(bool origVale)
		{
			return null;
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xDB638C", Offset = "0xDB638C", VA = "0xDB638C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xDB6410", Offset = "0xDB6410", VA = "0xDB6410")]
		public SetBoolParameter()
		{
		}
	}
	[Token(Token = "0x2000765")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets the float parameter on an animator. Returns Success.")]
	public class SetFloatParameter : Action
	{
		[Token(Token = "0x2000766")]
		[CompilerGenerated]
		private sealed class <ResetValue>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetFloatParameter <>4__this;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float origVale;

			[Token(Token = "0x1700040F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271C")]
				[Address(RVA = "0xDB6908", Offset = "0xDB6908", VA = "0xDB6908", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000410")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271E")]
				[Address(RVA = "0xDB6950", Offset = "0xDB6950", VA = "0xDB6950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0xDB67DC", Offset = "0xDB67DC", VA = "0xDB67DC")]
			[DebuggerHidden]
			public <ResetValue>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0xDB6890", Offset = "0xDB6890", VA = "0xDB6890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600271B")]
			[Address(RVA = "0xDB6894", Offset = "0xDB6894", VA = "0xDB6894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271D")]
			[Address(RVA = "0xDB6910", Offset = "0xDB6910", VA = "0xDB6910", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The value of the float parameter")]
		public SharedFloat floatValue;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Should the value be reverted back to its original value after it has been set?")]
		public bool setOnce;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int hashID;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator animator;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xDB64E0", Offset = "0xDB64E0", VA = "0xDB64E0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xDB65E4", Offset = "0xDB65E4", VA = "0xDB65E4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xDB6758", Offset = "0xDB6758", VA = "0xDB6758")]
		[IteratorStateMachine(typeof(<ResetValue>d__9))]
		public IEnumerator ResetValue(float origVale)
		{
			return null;
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xDB6804", Offset = "0xDB6804", VA = "0xDB6804", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xDB6888", Offset = "0xDB6888", VA = "0xDB6888")]
		public SetFloatParameter()
		{
		}
	}
	[Token(Token = "0x2000767")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets the int parameter on an animator. Returns Success.")]
	public class SetIntegerParameter : Action
	{
		[Token(Token = "0x2000768")]
		[CompilerGenerated]
		private sealed class <ResetValue>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetIntegerParameter <>4__this;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int origVale;

			[Token(Token = "0x17000411")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002727")]
				[Address(RVA = "0xDB6D88", Offset = "0xDB6D88", VA = "0xDB6D88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002729")]
				[Address(RVA = "0xDB6DD0", Offset = "0xDB6DD0", VA = "0xDB6DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0xDB6C5C", Offset = "0xDB6C5C", VA = "0xDB6C5C")]
			[DebuggerHidden]
			public <ResetValue>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0xDB6D10", Offset = "0xDB6D10", VA = "0xDB6D10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0xDB6D14", Offset = "0xDB6D14", VA = "0xDB6D14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0xDB6D90", Offset = "0xDB6D90", VA = "0xDB6D90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The value of the int parameter")]
		public SharedInt intValue;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Should the value be reverted back to its original value after it has been set?")]
		public bool setOnce;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int hashID;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator animator;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xDB6958", Offset = "0xDB6958", VA = "0xDB6958", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xDB6A5C", Offset = "0xDB6A5C", VA = "0xDB6A5C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xDB6BD8", Offset = "0xDB6BD8", VA = "0xDB6BD8")]
		[IteratorStateMachine(typeof(<ResetValue>d__9))]
		public IEnumerator ResetValue(int origVale)
		{
			return null;
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xDB6C84", Offset = "0xDB6C84", VA = "0xDB6C84", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xDB6D08", Offset = "0xDB6D08", VA = "0xDB6D08")]
		public SetIntegerParameter()
		{
		}
	}
	[Token(Token = "0x2000769")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets the layer's current weight. Returns Success.")]
	public class SetLayerWeight : Action
	{
		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The layer's index")]
		public SharedInt index;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The weight of the layer")]
		public SharedFloat weight;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xDB6DD8", Offset = "0xDB6DD8", VA = "0xDB6DD8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xDB6EDC", Offset = "0xDB6EDC", VA = "0xDB6EDC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xDB7000", Offset = "0xDB7000", VA = "0xDB7000", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xDB7050", Offset = "0xDB7050", VA = "0xDB7050")]
		public SetLayerWeight()
		{
		}
	}
	[Token(Token = "0x200076A")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets the look at position. Returns Success.")]
	public class SetLookAtPosition : Action
	{
		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The position to lookAt")]
		public SharedVector3 position;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionSet;

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xDB7058", Offset = "0xDB7058", VA = "0xDB7058", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xDB70B8", Offset = "0xDB70B8", VA = "0xDB70B8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xDB717C", Offset = "0xDB717C", VA = "0xDB717C", Slot = "27")]
		public override void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xDB7228", Offset = "0xDB7228", VA = "0xDB7228", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xDB728C", Offset = "0xDB728C", VA = "0xDB728C")]
		public SetLookAtPosition()
		{
		}
	}
	[Token(Token = "0x200076B")]
	[TaskDescription("Sets the look at weight. Returns success immediately after.")]
	[TaskCategory("Unity/Animator")]
	public class SetLookAtWeight : Action
	{
		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("(0-1) the global weight of the LookAt, multiplier for other parameters.")]
		public SharedFloat weight;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("(0-1) determines how much the body is involved in the LookAt.")]
		public float bodyWeight;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("(0-1) determines how much the head is involved in the LookAt.")]
		public float headWeight;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("(0-1) determines how much the eyes are involved in the LookAt.")]
		public float eyesWeight;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).")]
		public float clampWeight;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool weightSet;

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xDB7294", Offset = "0xDB7294", VA = "0xDB7294", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xDB72F4", Offset = "0xDB72F4", VA = "0xDB72F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xDB73B8", Offset = "0xDB73B8", VA = "0xDB73B8", Slot = "27")]
		public override void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xDB746C", Offset = "0xDB746C", VA = "0xDB746C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xDB74A4", Offset = "0xDB74A4", VA = "0xDB74A4")]
		public SetLookAtWeight()
		{
		}
	}
	[Token(Token = "0x200076C")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets the playback speed of the Animator. 1 is normal playback speed. Returns Success.")]
	public class SetSpeed : Action
	{
		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The playback speed of the Animator")]
		public SharedFloat speed;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xDB74BC", Offset = "0xDB74BC", VA = "0xDB74BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xDB75C0", Offset = "0xDB75C0", VA = "0xDB75C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xDB76B4", Offset = "0xDB76B4", VA = "0xDB76B4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xDB76E8", Offset = "0xDB76E8", VA = "0xDB76E8")]
		public SetSpeed()
		{
		}
	}
	[Token(Token = "0x200076D")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets a trigger parameter to active or inactive. Returns Success.")]
	public class SetTrigger : Action
	{
		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the parameter")]
		public SharedString paramaterName;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xDB76F0", Offset = "0xDB76F0", VA = "0xDB76F0", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xDB77F4", Offset = "0xDB77F4", VA = "0xDB77F4", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xDB78EC", Offset = "0xDB78EC", VA = "0xDB78EC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xDB7954", Offset = "0xDB7954", VA = "0xDB7954")]
		public SetTrigger()
		{
		}
	}
	[Token(Token = "0x200076E")]
	[TaskDescription("Sets the animator in playback mode.")]
	[TaskCategory("Unity/Animator")]
	public class StartPlayback : Action
	{
		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xDB795C", Offset = "0xDB795C", VA = "0xDB795C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xDB7A60", Offset = "0xDB7A60", VA = "0xDB7A60", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xDB7B2C", Offset = "0xDB7B2C", VA = "0xDB7B2C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xDB7B38", Offset = "0xDB7B38", VA = "0xDB7B38")]
		public StartPlayback()
		{
		}
	}
	[Token(Token = "0x200076F")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Sets the animator in recording mode. Returns Success.")]
	public class StartRecording : Action
	{
		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The number of frames (updates) that will be recorded")]
		public int frameCount;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator animator;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xDB7B40", Offset = "0xDB7B40", VA = "0xDB7B40", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xDB7C44", Offset = "0xDB7C44", VA = "0xDB7C44", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xDB7D14", Offset = "0xDB7D14", VA = "0xDB7D14", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xDB7D38", Offset = "0xDB7D38", VA = "0xDB7D38")]
		public StartRecording()
		{
		}
	}
	[Token(Token = "0x2000770")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Stops the animator playback mode. Returns Success.")]
	public class StopPlayback : Action
	{
		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xDB7D40", Offset = "0xDB7D40", VA = "0xDB7D40", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xDB7E44", Offset = "0xDB7E44", VA = "0xDB7E44", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xDB7F10", Offset = "0xDB7F10", VA = "0xDB7F10", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xDB7F1C", Offset = "0xDB7F1C", VA = "0xDB7F1C")]
		public StopPlayback()
		{
		}
	}
	[Token(Token = "0x2000771")]
	[TaskDescription("Stops animator record mode. Returns Success.")]
	[TaskCategory("Unity/Animator")]
	public class StopRecording : Action
	{
		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xDB7F24", Offset = "0xDB7F24", VA = "0xDB7F24", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xDB8028", Offset = "0xDB8028", VA = "0xDB8028", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xDB80F4", Offset = "0xDB80F4", VA = "0xDB80F4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xDB8100", Offset = "0xDB8100", VA = "0xDB8100")]
		public StopRecording()
		{
		}
	}
	[Token(Token = "0x2000772")]
	[TaskCategory("Unity/Animator")]
	[TaskDescription("Waits for the Animator to reach the specified state.")]
	public class WaitForState : Action
	{
		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the state")]
		public SharedString stateName;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The layer where the state is")]
		public SharedInt layer;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int stateHash;

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xDB8108", Offset = "0xDB8108", VA = "0xDB8108", Slot = "4")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xDB8168", Offset = "0xDB8168", VA = "0xDB8168", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xDB8374", Offset = "0xDB8374", VA = "0xDB8374", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xDB84B0", Offset = "0xDB84B0", VA = "0xDB84B0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xDB8534", Offset = "0xDB8534", VA = "0xDB8534")]
		public WaitForState()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.Tasks.Unity.UnityAnimation
{
	[Token(Token = "0x2000773")]
	[TaskCategory("Unity/Animation")]
	[TaskDescription("Blends the animation. Returns Success.")]
	public class Blend : Action
	{
		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The weight the animation should blend to")]
		public float targetWeight;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("The amount of time it takes to blend")]
		public float fadeLength;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animation animation;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xDB8568", Offset = "0xDB8568", VA = "0xDB8568", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xDB866C", Offset = "0xDB866C", VA = "0xDB866C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xDB8768", Offset = "0xDB8768", VA = "0xDB8768", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xDB87E0", Offset = "0xDB87E0", VA = "0xDB87E0")]
		public Blend()
		{
		}
	}
	[Token(Token = "0x2000774")]
	[TaskCategory("Unity/Animation")]
	[TaskDescription("Fades the animation over a period of time and fades other animations out. Returns Success.")]
	public class CrossFade : Action
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The speed of the animation. Use a negative value to play the animation backwards")]
		public SharedFloat animationSpeed;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The amount of time it takes to blend")]
		public SharedFloat fadeLength;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("The play mode of the animation")]
		public PlayMode playMode;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animation animation;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xDB87F4", Offset = "0xDB87F4", VA = "0xDB87F4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xDB88F8", Offset = "0xDB88F8", VA = "0xDB88F8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xDB8B28", Offset = "0xDB8B28", VA = "0xDB8B28", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xDB8BE8", Offset = "0xDB8BE8", VA = "0xDB8BE8")]
		public CrossFade()
		{
		}
	}
	[Token(Token = "0x2000775")]
	[TaskCategory("Unity/Animation")]
	[TaskDescription("Cross fades an animation after previous animations has finished playing. Returns Success.")]
	public class CrossFadeQueued : Action
	{
		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The amount of time it takes to blend")]
		public float fadeLength;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Specifies when the animation should start playing")]
		public QueueMode queue;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The play mode of the animation")]
		public PlayMode playMode;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animation animation;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject prevGameObject;

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xDB8C3C", Offset = "0xDB8C3C", VA = "0xDB8C3C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xDB8D40", Offset = "0xDB8D40", VA = "0xDB8D40", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xDB8E40", Offset = "0xDB8E40", VA = "0xDB8E40", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xDB8ED0", Offset = "0xDB8ED0", VA = "0xDB8ED0")]
		public CrossFadeQueued()
		{
		}
	}
	[Token(Token = "0x2000776")]
	[TaskDescription("Stores the animate physics value. Returns Success.")]
	[TaskCategory("Unity/Animation")]
	public class GetAnimatePhysics : Action
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[RequiredField]
		[Tooltip("Are the if animations are executed in the physics loop?")]
		public SharedBool storeValue;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation animation;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xDB8EE4", Offset = "0xDB8EE4", VA = "0xDB8EE4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xDB8FE8", Offset = "0xDB8FE8", VA = "0xDB8FE8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xDB90E0", Offset = "0xDB90E0", VA = "0xDB90E0", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xDB9144", Offset = "0xDB9144", VA = "0xDB9144")]
		public GetAnimatePhysics()
		{
		}
	}
	[Token(Token = "0x2000777")]
	[TaskDescription("Returns Success if the animation is currently playing.")]
	[TaskCategory("Unity/Animation")]
	public class IsPlaying : Conditional
	{
		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation animation;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002765")]
		[Address(RVA = "0xDB914C", Offset = "0xDB914C", VA = "0xDB914C", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xDB9250", Offset = "0xDB9250", VA = "0xDB9250", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xDB9380", Offset = "0xDB9380", VA = "0xDB9380", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xDB93F8", Offset = "0xDB93F8", VA = "0xDB93F8")]
		public IsPlaying()
		{
		}
	}
	[Token(Token = "0x2000778")]
	[TaskCategory("Unity/Animation")]
	[TaskDescription("Plays animation without any blending. Returns Success.")]
	public class Play : Action
	{
		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The play mode of the animation")]
		public PlayMode playMode;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animation animation;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xDB9400", Offset = "0xDB9400", VA = "0xDB9400", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xDB9504", Offset = "0xDB9504", VA = "0xDB9504", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xDB9630", Offset = "0xDB9630", VA = "0xDB9630", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xDB96B4", Offset = "0xDB96B4", VA = "0xDB96B4")]
		public Play()
		{
		}
	}
	[Token(Token = "0x2000779")]
	[TaskCategory("Unity/Animation")]
	[TaskDescription("Plays an animation after previous animations has finished playing. Returns Success.")]
	public class PlayQueued : Action
	{
		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Specifies when the animation should start playing")]
		public QueueMode queue;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("The play mode of the animation")]
		public PlayMode playMode;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animation animation;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject prevGameObject;

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xDB96BC", Offset = "0xDB96BC", VA = "0xDB96BC", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xDB97C0", Offset = "0xDB97C0", VA = "0xDB97C0", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xDB98BC", Offset = "0xDB98BC", VA = "0xDB98BC", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xDB9940", Offset = "0xDB9940", VA = "0xDB9940")]
		public PlayQueued()
		{
		}
	}
	[Token(Token = "0x200077A")]
	[TaskDescription("Rewinds an animation. Rewinds all animations if animationName is blank. Returns Success.")]
	[TaskCategory("Unity/Animation")]
	public class Rewind : Action
	{
		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation animation;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xDB9948", Offset = "0xDB9948", VA = "0xDB9948", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xDB9A4C", Offset = "0xDB9A4C", VA = "0xDB9A4C", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xDB9B74", Offset = "0xDB9B74", VA = "0xDB9B74", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xDB9BEC", Offset = "0xDB9BEC", VA = "0xDB9BEC")]
		public Rewind()
		{
		}
	}
	[Token(Token = "0x200077B")]
	[TaskDescription("Samples animations at the current state. Returns Success.")]
	[TaskCategory("Unity/Animation")]
	public class Sample : Action
	{
		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animation animation;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xDB9BF4", Offset = "0xDB9BF4", VA = "0xDB9BF4", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xDB9CF8", Offset = "0xDB9CF8", VA = "0xDB9CF8", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xDB9DC4", Offset = "0xDB9DC4", VA = "0xDB9DC4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xDB9DD0", Offset = "0xDB9DD0", VA = "0xDB9DD0")]
		public Sample()
		{
		}
	}
	[Token(Token = "0x200077C")]
	[TaskDescription("Sets animate physics to the specified value. Returns Success.")]
	[TaskCategory("Unity/Animation")]
	public class SetAnimatePhysics : Action
	{
		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Are animations executed in the physics loop?")]
		public SharedBool animatePhysics;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation animation;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xDB9DD8", Offset = "0xDB9DD8", VA = "0xDB9DD8", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xDB9EDC", Offset = "0xDB9EDC", VA = "0xDB9EDC", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xDB9FD4", Offset = "0xDB9FD4", VA = "0xDB9FD4", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xDBA038", Offset = "0xDBA038", VA = "0xDBA038")]
		public SetAnimatePhysics()
		{
		}
	}
	[Token(Token = "0x200077D")]
	[TaskDescription("Sets the wrap mode to the specified value. Returns Success.")]
	[TaskCategory("Unity/Animation")]
	public class SetWrapMode : Action
	{
		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("How should time beyond the playback range of the clip be treated?")]
		public WrapMode wrapMode;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation animation;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xDBA040", Offset = "0xDBA040", VA = "0xDBA040", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xDBA144", Offset = "0xDBA144", VA = "0xDBA144", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xDBA214", Offset = "0xDBA214", VA = "0xDBA214", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xDBA238", Offset = "0xDBA238", VA = "0xDBA238")]
		public SetWrapMode()
		{
		}
	}
	[Token(Token = "0x200077E")]
	[TaskDescription("Stops an animation. Stops all animations if animationName is blank. Returns Success.")]
	[TaskCategory("Unity/Animation")]
	public class Stop : Action
	{
		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The GameObject that the task operates on. If null the task GameObject is used.")]
		public SharedGameObject targetGameObject;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The name of the animation")]
		public SharedString animationName;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animation animation;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject prevGameObject;

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xDBA240", Offset = "0xDBA240", VA = "0xDBA240", Slot = "5")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xDBA344", Offset = "0xDBA344", VA = "0xDBA344", Slot = "6")]
		public override TaskStatus OnUpdate()
		{
			return default(TaskStatus);
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xDBA46C", Offset = "0xDBA46C", VA = "0xDBA46C", Slot = "16")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xDBA4D4", Offset = "0xDBA4D4", VA = "0xDBA4D4")]
		public Stop()
		{
		}
	}
}
namespace BehaviorDesigner.Runtime.ObjectDrawers
{
	[Token(Token = "0x200077F")]
	public class FloatSliderAttribute : ObjectDrawerAttribute
	{
		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xDBA4DC", Offset = "0xDBA4DC", VA = "0xDBA4DC")]
		public FloatSliderAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x2000780")]
	public class IntSliderAttribute : ObjectDrawerAttribute
	{
		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int min;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int max;

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xDBA508", Offset = "0xDBA508", VA = "0xDBA508")]
		public IntSliderAttribute(int min, int max)
		{
		}
	}
}
